

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue May 24 22:46:56 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    61                           	psect	param0,global,class=BANK0,space=1,delta=1
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           	psect	idataBANK0
    65  00672C                     __pidataBANK0:
    66                           	opt stack 0
    67                           
    68                           ;initializer for _spazio_parcheggio
    69  00672C  0064               	dw	100
    70                           
    71                           ;initializer for _delay_quartz_frequency_value
    72  00672E  10                 	db	16
    73                           
    74                           	psect	idataBANK1
    75  006724                     __pidataBANK1:
    76                           	opt stack 0
    77                           
    78                           ;initializer for _larghezza
    79  006724  0000               	dw	0
    80  006726  4200               	dw	16896
    81                           
    82                           ;initializer for _raggio
    83  006728  0000               	dw	0
    84  00672A  428C               	dw	17036
    85                           
    86                           	psect	smallconst
    87  000D00                     __psmallconst:
    88                           	opt stack 0
    89  000D00  00                 	db	0
    90  000D01                     atan@coeff_a:
    91                           	opt stack 0
    92  000D01  3C06               	dw	15366
    93  000D03  4204               	dw	16900
    94  000D05  9F7D               	dw	40829
    95  000D07  426A               	dw	17002
    96  000D09  905C               	dw	36956
    97  000D0B  4201               	dw	16897
    98  000D0D  4D60               	dw	19808
    99  000D0F  40BB               	dw	16571
   100  000D11  EC51               	dw	60497
   101  000D13  3E47               	dw	15943
   102  000D15  8DDE               	dw	36318
   103  000D17  BB1F               	dw	47903
   104  000D19                     __end_ofatan@coeff_a:
   105                           	opt stack 0
   106  000D19                     atan@coeff_b:
   107                           	opt stack 0
   108  000D19  3C06               	dw	15366
   109  000D1B  4204               	dw	16900
   110  000D1D  59C0               	dw	22976
   111  000D1F  428B               	dw	17035
   112  000D21  0474               	dw	1140
   113  000D23  4244               	dw	16964
   114  000D25  9BF9               	dw	39929
   115  000D27  414F               	dw	16719
   116  000D29  0000               	dw	0
   117  000D2B  3F80               	dw	16256
   118  000D2D                     __end_ofatan@coeff_b:
   119                           	opt stack 0
   120  000D2D                     sin@coeff_a:
   121                           	opt stack 0
   122  000D2D  F3EC               	dw	62444
   123  000D2F  484A               	dw	18506
   124  000D31  9535               	dw	38197
   125  000D33  C795               	dw	51093
   126  000D35  C117               	dw	49431
   127  000D37  45DC               	dw	17884
   128  000D39  DBFD               	dw	56317
   129  000D3B  C36D               	dw	50029
   130  000D3D  B372               	dw	45938
   131  000D3F  4033               	dw	16435
   132  000D41                     __end_ofsin@coeff_a:
   133                           	opt stack 0
   134  000D41                     sin@coeff_b:
   135                           	opt stack 0
   136  000D41  342B               	dw	13355
   137  000D43  4801               	dw	18433
   138  000D45  9D7F               	dw	40319
   139  000D47  45B0               	dw	17840
   140  000D49  FFE7               	dw	65511
   141  000D4B  42D9               	dw	17113
   142  000D4D  0000               	dw	0
   143  000D4F  3F80               	dw	16256
   144  000D51                     __end_ofsin@coeff_b:
   145                           	opt stack 0
   146  0000                     _RXB1CON	set	3920
   147  0000                     _RXB1CONbits	set	3920
   148  0000                     _RXB1D0	set	3926
   149  0000                     _RXB1D1	set	3927
   150  0000                     _RXB1D2	set	3928
   151  0000                     _RXB1D3	set	3929
   152  0000                     _RXB1D4	set	3930
   153  0000                     _RXB1D5	set	3931
   154  0000                     _RXB1D6	set	3932
   155  0000                     _RXB1D7	set	3933
   156  0000                     _RXB1DLC	set	3925
   157  0000                     _RXB1DLCbits	set	3925
   158  0000                     _RXB1EIDH	set	3923
   159  0000                     _RXB1EIDL	set	3924
   160  0000                     _RXB1SIDH	set	3921
   161  0000                     _RXB1SIDL	set	3922
   162  0000                     _RXB1SIDLbits	set	3922
   163  0000                     _RXF0EIDH	set	3842
   164  0000                     _RXF0EIDL	set	3843
   165  0000                     _RXF0SIDH	set	3840
   166  0000                     _RXF0SIDL	set	3841
   167  0000                     _RXF0SIDLbits	set	3841
   168  0000                     _RXF1EIDH	set	3846
   169  0000                     _RXF1EIDL	set	3847
   170  0000                     _RXF1SIDH	set	3844
   171  0000                     _RXF1SIDL	set	3845
   172  0000                     _RXF1SIDLbits	set	3845
   173  0000                     _RXF2EIDH	set	3850
   174  0000                     _RXF2EIDL	set	3851
   175  0000                     _RXF2SIDH	set	3848
   176  0000                     _RXF2SIDL	set	3849
   177  0000                     _RXF2SIDLbits	set	3849
   178  0000                     _RXF3EIDH	set	3854
   179  0000                     _RXF3EIDL	set	3855
   180  0000                     _RXF3SIDH	set	3852
   181  0000                     _RXF3SIDL	set	3853
   182  0000                     _RXF3SIDLbits	set	3853
   183  0000                     _RXF4EIDH	set	3858
   184  0000                     _RXF4EIDL	set	3859
   185  0000                     _RXF4SIDH	set	3856
   186  0000                     _RXF4SIDL	set	3857
   187  0000                     _RXF4SIDLbits	set	3857
   188  0000                     _RXF5EIDH	set	3862
   189  0000                     _RXF5EIDL	set	3863
   190  0000                     _RXF5SIDH	set	3860
   191  0000                     _RXF5SIDL	set	3861
   192  0000                     _RXF5SIDLbits	set	3861
   193  0000                     _RXM0EIDH	set	3866
   194  0000                     _RXM0EIDL	set	3867
   195  0000                     _RXM0SIDH	set	3864
   196  0000                     _RXM0SIDL	set	3865
   197  0000                     _RXM0SIDLbits	set	3865
   198  0000                     _RXM1EIDH	set	3870
   199  0000                     _RXM1EIDL	set	3871
   200  0000                     _RXM1SIDH	set	3868
   201  0000                     _RXM1SIDL	set	3869
   202  0000                     _RXM1SIDLbits	set	3869
   203  0000                     _TXB0CONbits	set	3904
   204  0000                     _TXB0D0	set	3910
   205  0000                     _TXB0D1	set	3911
   206  0000                     _TXB0D2	set	3912
   207  0000                     _TXB0D3	set	3913
   208  0000                     _TXB0D4	set	3914
   209  0000                     _TXB0D5	set	3915
   210  0000                     _TXB0D6	set	3916
   211  0000                     _TXB0D7	set	3917
   212  0000                     _TXB0DLC	set	3909
   213  0000                     _TXB0DLCbits	set	3909
   214  0000                     _TXB0EIDH	set	3907
   215  0000                     _TXB0EIDL	set	3908
   216  0000                     _TXB0SIDH	set	3905
   217  0000                     _TXB0SIDL	set	3906
   218  0000                     _TXB0SIDLbits	set	3906
   219  0000                     _TXB1CONbits	set	3888
   220  0000                     _TXB1D0	set	3894
   221  0000                     _TXB1D1	set	3895
   222  0000                     _TXB1D2	set	3896
   223  0000                     _TXB1D3	set	3897
   224  0000                     _TXB1D4	set	3898
   225  0000                     _TXB1D5	set	3899
   226  0000                     _TXB1D6	set	3900
   227  0000                     _TXB1D7	set	3901
   228  0000                     _TXB1DLC	set	3893
   229  0000                     _TXB1DLCbits	set	3893
   230  0000                     _TXB1EIDH	set	3891
   231  0000                     _TXB1EIDL	set	3892
   232  0000                     _TXB1SIDH	set	3889
   233  0000                     _TXB1SIDL	set	3890
   234  0000                     _TXB1SIDLbits	set	3890
   235  0000                     _TXB2CONbits	set	3872
   236  0000                     _TXB2D0	set	3878
   237  0000                     _TXB2D1	set	3879
   238  0000                     _TXB2D2	set	3880
   239  0000                     _TXB2D3	set	3881
   240  0000                     _TXB2D4	set	3882
   241  0000                     _TXB2D5	set	3883
   242  0000                     _TXB2D6	set	3884
   243  0000                     _TXB2D7	set	3885
   244  0000                     _TXB2DLC	set	3877
   245  0000                     _TXB2DLCbits	set	3877
   246  0000                     _TXB2EIDH	set	3875
   247  0000                     _TXB2EIDL	set	3876
   248  0000                     _TXB2SIDH	set	3873
   249  0000                     _TXB2SIDL	set	3874
   250  0000                     _TXB2SIDLbits	set	3874
   251  0000                     _ADCON1	set	4033
   252  0000                     _BRGCON1	set	3952
   253  0000                     _BRGCON2	set	3953
   254  0000                     _BRGCON2bits	set	3953
   255  0000                     _BRGCON3	set	3954
   256  0000                     _BRGCON3bits	set	3954
   257  0000                     _CANCON	set	3951
   258  0000                     _CANCONbits	set	3951
   259  0000                     _CANSTAT	set	3950
   260  0000                     _COMSTATbits	set	3956
   261  0000                     _INTCON2bits	set	4081
   262  0000                     _INTCONbits	set	4082
   263  0000                     _IPR3bits	set	4005
   264  0000                     _LATA	set	3977
   265  0000                     _LATB	set	3978
   266  0000                     _LATBbits	set	3978
   267  0000                     _LATC	set	3979
   268  0000                     _PIE3bits	set	4003
   269  0000                     _PIR3bits	set	4004
   270  0000                     _PORTA	set	3968
   271  0000                     _PORTBbits	set	3969
   272  0000                     _RCONbits	set	4048
   273  0000                     _RXB0CON	set	3936
   274  0000                     _RXB0CONbits	set	3936
   275  0000                     _RXB0D0	set	3942
   276  0000                     _RXB0D1	set	3943
   277  0000                     _RXB0D2	set	3944
   278  0000                     _RXB0D3	set	3945
   279  0000                     _RXB0D4	set	3946
   280  0000                     _RXB0D5	set	3947
   281  0000                     _RXB0D6	set	3948
   282  0000                     _RXB0D7	set	3949
   283  0000                     _RXB0DLC	set	3941
   284  0000                     _RXB0DLCbits	set	3941
   285  0000                     _RXB0EIDH	set	3939
   286  0000                     _RXB0EIDL	set	3940
   287  0000                     _RXB0SIDH	set	3937
   288  0000                     _RXB0SIDL	set	3938
   289  0000                     _RXB0SIDLbits	set	3938
   290  0000                     _RXERRCNT	set	3957
   291  0000                     _T0CON	set	4053
   292  0000                     _T0CONbits	set	4053
   293  0000                     _T3CON	set	4017
   294  0000                     _TMR0H	set	4055
   295  0000                     _TMR0L	set	4054
   296  0000                     _TMR3H	set	4019
   297  0000                     _TMR3L	set	4018
   298  0000                     _TRISA	set	3986
   299  0000                     _TRISB	set	3987
   300  0000                     _TRISBbits	set	3987
   301  0000                     _TRISC	set	3988
   302  0000                     _TXERRCNT	set	3958
   303                           
   304                           ; #config settings
   305  000D51  00                 	db	0	; dummy byte at the end
   306  0000                     
   307                           	psect	cinit
   308  006416                     __pcinit:
   309                           	opt stack 0
   310  006416                     start_initialization:
   311                           	opt stack 0
   312  006416                     __initialization:
   313                           	opt stack 0
   314                           
   315                           ; Clear objects allocated to BANK1 (139 bytes)
   316  006416  EE01  F000         	lfsr	0,__pbssBANK1
   317  00641A  0E8B               	movlw	139
   318  00641C                     clear_0:
   319  00641C  6AEE               	clrf	postinc0,c
   320  00641E  06E8               	decf	wreg,f,c
   321  006420  E1FD               	bnz	clear_0
   322                           
   323                           ; Clear objects allocated to BANK0 (12 bytes)
   324  006422  EE00  F0DA         	lfsr	0,__pbssBANK0
   325  006426  0E0C               	movlw	12
   326  006428                     clear_1:
   327  006428  6AEE               	clrf	postinc0,c
   328  00642A  06E8               	decf	wreg,f,c
   329  00642C  E1FD               	bnz	clear_1
   330                           
   331                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   332  00642E  6A55               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   333  006430  6A54               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   334                           
   335                           ; Clear objects allocated to COMRAM (44 bytes)
   336  006432  EE00  F001         	lfsr	0,__pbssCOMRAM
   337  006436  0E2C               	movlw	44
   338  006438                     clear_2:
   339  006438  6AEE               	clrf	postinc0,c
   340  00643A  06E8               	decf	wreg,f,c
   341  00643C  E1FD               	bnz	clear_2
   342                           
   343                           ; Initialize objects allocated to BANK1 (8 bytes)
   344                           ; load TBLPTR registers with __pidataBANK1
   345  00643E  0E24               	movlw	low __pidataBANK1
   346  006440  6EF6               	movwf	tblptrl,c
   347  006442  0E67               	movlw	high __pidataBANK1
   348  006444  6EF7               	movwf	tblptrh,c
   349  006446  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   350  006448  6EF8               	movwf	tblptru,c
   351  00644A  EE01  F0E4         	lfsr	0,__pdataBANK1
   352  00644E  EE10 F008          	lfsr	1,8
   353  006452                     copy_data0:
   354  006452  0009               	tblrd		*+
   355  006454  CFF5 FFEE          	movff	tablat,postinc0
   356  006458  50E5               	movf	postdec1,w,c
   357  00645A  50E1               	movf	fsr1l,w,c
   358  00645C  E1FA               	bnz	copy_data0
   359                           
   360                           ; Initialize objects allocated to BANK0 (3 bytes)
   361                           ; load TBLPTR registers with __pidataBANK0
   362  00645E  0E2C               	movlw	low __pidataBANK0
   363  006460  6EF6               	movwf	tblptrl,c
   364  006462  0E67               	movlw	high __pidataBANK0
   365  006464  6EF7               	movwf	tblptrh,c
   366  006466  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   367  006468  6EF8               	movwf	tblptru,c
   368  00646A  0009               	tblrd		*+	;fetch initializer
   369  00646C  CFF5 F0E6          	movff	tablat,__pdataBANK0
   370  006470  0009               	tblrd		*+	;fetch initializer
   371  006472  CFF5 F0E7          	movff	tablat,__pdataBANK0+1
   372  006476  0009               	tblrd		*+	;fetch initializer
   373  006478  CFF5 F0E8          	movff	tablat,__pdataBANK0+2
   374  00647C                     end_of_initialization:
   375                           	opt stack 0
   376  00647C                     __end_of__initialization:
   377                           	opt stack 0
   378  00647C  9056               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   379  00647E  9256               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   380  006480  0100               	movlb	0
   381  006482  EF22  F031         	goto	_main	;jump to C main() function
   382                           tblptru	equ	0xFF8
   383                           tblptrh	equ	0xFF7
   384                           tblptrl	equ	0xFF6
   385                           tablat	equ	0xFF5
   386                           postinc0	equ	0xFEE
   387                           wreg	equ	0xFE8
   388                           postdec1	equ	0xFE5
   389                           fsr1l	equ	0xFE1
   390                           
   391                           	psect	bitbssCOMRAM
   392  0002A0                     __pbitbssCOMRAM:
   393                           	opt stack 0
   394  0002A0                     _activation:
   395                           	opt stack 0
   396  0002A0                     	ds	1
   397  0002A1                     _asd:
   398                           	opt stack 0
   399  0002A1                     	ds	1
   400  0002A2                     _avvicinamento:
   401                           	opt stack 0
   402  0002A2                     	ds	1
   403  0002A3                     _dir:
   404                           	opt stack 0
   405  0002A3                     	ds	1
   406  0002A4                     _distance_error:
   407                           	opt stack 0
   408  0002A4                     	ds	1
   409  0002A5                     _distance_received:
   410                           	opt stack 0
   411  0002A5                     	ds	1
   412  0002A6                     _distance_received1:
   413                           	opt stack 0
   414  0002A6                     	ds	1
   415  0002A7                     _distance_wait:
   416                           	opt stack 0
   417  0002A7                     	ds	1
   418  0002A8                     _first:
   419                           	opt stack 0
   420  0002A8                     	ds	1
   421  0002A9                     _new_distance:
   422                           	opt stack 0
   423  0002A9                     	ds	1
   424  0002AA                     _old_data_correction:
   425                           	opt stack 0
   426  0002AA                     	ds	1
   427  0002AB                     _request_sent:
   428                           	opt stack 0
   429  0002AB                     	ds	1
   430  0002AC                     _request_sent1:
   431                           	opt stack 0
   432  0002AC                     	ds	1
   433  0002AD                     _start_operation:
   434                           	opt stack 0
   435  0002AD                     	ds	1
   436  0002AE                     _steering_correction_dir:
   437                           	opt stack 0
   438  0002AE                     	ds	1
   439                           tblptru	equ	0xFF8
   440                           tblptrh	equ	0xFF7
   441                           tblptrl	equ	0xFF6
   442                           tablat	equ	0xFF5
   443                           postinc0	equ	0xFEE
   444                           wreg	equ	0xFE8
   445                           postdec1	equ	0xFE5
   446                           fsr1l	equ	0xFE1
   447                           
   448                           	psect	bssCOMRAM
   449  000001                     __pbssCOMRAM:
   450                           	opt stack 0
   451  000001                     _sensor_distance:
   452                           	opt stack 0
   453  000001                     	ds	16
   454  000011                     _alignment_gap:
   455                           	opt stack 0
   456  000011                     	ds	4
   457  000015                     _z:
   458                           	opt stack 0
   459  000015                     	ds	4
   460  000019                     _distance_average:
   461                           	opt stack 0
   462  000019                     	ds	2
   463  00001B                     _distance_dx:
   464                           	opt stack 0
   465  00001B                     	ds	2
   466  00001D                     _distance_sx:
   467                           	opt stack 0
   468  00001D                     	ds	2
   469  00001F                     _left_speed:
   470                           	opt stack 0
   471  00001F                     	ds	2
   472  000021                     _pulse_time:
   473                           	opt stack 0
   474  000021                     	ds	2
   475  000023                     _right_speed:
   476                           	opt stack 0
   477  000023                     	ds	2
   478  000025                     _set_speed:
   479                           	opt stack 0
   480  000025                     	ds	2
   481  000027                     _timerValue2:
   482                           	opt stack 0
   483  000027                     	ds	2
   484  000029                     _MUX_index:
   485                           	opt stack 0
   486  000029                     	ds	1
   487  00002A                     _TMR3H_temp:
   488                           	opt stack 0
   489  00002A                     	ds	1
   490  00002B                     _TMR3L_temp:
   491                           	opt stack 0
   492  00002B                     	ds	1
   493  00002C                     _steering_correction:
   494                           	opt stack 0
   495  00002C                     	ds	1
   496                           tblptru	equ	0xFF8
   497                           tblptrh	equ	0xFF7
   498                           tblptrl	equ	0xFF6
   499                           tablat	equ	0xFF5
   500                           postinc0	equ	0xFEE
   501                           wreg	equ	0xFE8
   502                           postdec1	equ	0xFE5
   503                           fsr1l	equ	0xFE1
   504                           
   505                           	psect	bssBANK0
   506  0000DA                     __pbssBANK0:
   507                           	opt stack 0
   508  0000DA                     _x:
   509                           	opt stack 0
   510  0000DA                     	ds	4
   511  0000DE                     _actual_speed:
   512                           	opt stack 0
   513  0000DE                     	ds	2
   514  0000E0                     _clock_counter_reference:
   515                           	opt stack 0
   516  0000E0                     	ds	2
   517  0000E2                     _distance:
   518                           	opt stack 0
   519  0000E2                     	ds	2
   520  0000E4                     _errno:
   521                           	opt stack 0
   522  0000E4                     	ds	2
   523                           tblptru	equ	0xFF8
   524                           tblptrh	equ	0xFF7
   525                           tblptrl	equ	0xFF6
   526                           tablat	equ	0xFF5
   527                           postinc0	equ	0xFEE
   528                           wreg	equ	0xFE8
   529                           postdec1	equ	0xFE5
   530                           fsr1l	equ	0xFE1
   531                           
   532                           	psect	dataBANK0
   533  0000E6                     __pdataBANK0:
   534                           	opt stack 0
   535  0000E6                     _spazio_parcheggio:
   536                           	opt stack 0
   537  0000E6                     	ds	2
   538  0000E8                     _delay_quartz_frequency_value:
   539                           	opt stack 0
   540  0000E8                     	ds	1
   541                           tblptru	equ	0xFF8
   542                           tblptrh	equ	0xFF7
   543                           tblptrl	equ	0xFF6
   544                           tablat	equ	0xFF5
   545                           postinc0	equ	0xFEE
   546                           wreg	equ	0xFE8
   547                           postdec1	equ	0xFE5
   548                           fsr1l	equ	0xFE1
   549                           
   550                           	psect	bssBANK1
   551  000100                     __pbssBANK1:
   552                           	opt stack 0
   553  000100                     _MUX_select:
   554                           	opt stack 0
   555  000100                     	ds	8
   556  000108                     _data_speed_rx:
   557                           	opt stack 0
   558  000108                     	ds	8
   559  000110                     _distance_set:
   560                           	opt stack 0
   561  000110                     	ds	8
   562  000118                     _sensor_distance_old:
   563                           	opt stack 0
   564  000118                     	ds	8
   565  000120                     _J_var:
   566                           	opt stack 0
   567  000120                     	ds	4
   568  000124                     _K_var:
   569                           	opt stack 0
   570  000124                     	ds	4
   571  000128                     _Pmin:
   572                           	opt stack 0
   573  000128                     	ds	4
   574  00012C                     _alfa:
   575                           	opt stack 0
   576  00012C                     	ds	4
   577  000130                     _beta:
   578                           	opt stack 0
   579  000130                     	ds	4
   580  000134                     _bordo:
   581                           	opt stack 0
   582  000134                     	ds	4
   583  000138                     _n:
   584                           	opt stack 0
   585  000138                     	ds	4
   586  00013C                     _old_alignment_gap:
   587                           	opt stack 0
   588  00013C                     	ds	4
   589  000140                     _prima_sterzata:
   590                           	opt stack 0
   591  000140                     	ds	4
   592  000144                     _msg:
   593                           	opt stack 0
   594  000144                     	ds	15
   595  000153                     _data:
   596                           	opt stack 0
   597  000153                     	ds	8
   598  00015B                     _data_brake:
   599                           	opt stack 0
   600  00015B                     	ds	8
   601  000163                     _data_correction:
   602                           	opt stack 0
   603  000163                     	ds	8
   604  00016B                     _data_speed:
   605                           	opt stack 0
   606  00016B                     	ds	8
   607  000173                     _data_steering:
   608                           	opt stack 0
   609  000173                     	ds	8
   610  00017B                     _data_test:
   611                           	opt stack 0
   612  00017B                     	ds	8
   613  000183                     _sensor_distance_short:
   614                           	opt stack 0
   615  000183                     	ds	8
   616                           tblptru	equ	0xFF8
   617                           tblptrh	equ	0xFF7
   618                           tblptrl	equ	0xFF6
   619                           tablat	equ	0xFF5
   620                           postinc0	equ	0xFEE
   621                           wreg	equ	0xFE8
   622                           postdec1	equ	0xFE5
   623                           fsr1l	equ	0xFE1
   624                           
   625                           	psect	dataBANK1
   626  0001E4                     __pdataBANK1:
   627                           	opt stack 0
   628  0001E4                     _larghezza:
   629                           	opt stack 0
   630  0001E4                     	ds	4
   631  0001E8                     _raggio:
   632                           	opt stack 0
   633  0001E8                     	ds	4
   634                           tblptru	equ	0xFF8
   635                           tblptrh	equ	0xFF7
   636                           tblptrl	equ	0xFF6
   637                           tablat	equ	0xFF5
   638                           postinc0	equ	0xFEE
   639                           wreg	equ	0xFE8
   640                           postdec1	equ	0xFE5
   641                           fsr1l	equ	0xFE1
   642                           
   643                           	psect	cstackBANK1
   644  00018B                     __pcstackBANK1:
   645                           	opt stack 0
   646  00018B                     ?_floor:
   647                           	opt stack 0
   648  00018B                     sqrt@sign:
   649                           	opt stack 0
   650  00018B                     atan@y:
   651                           	opt stack 0
   652  00018B                     floor@x:
   653                           	opt stack 0
   654                           
   655                           ; 4 bytes @ 0x0
   656  00018B                     	ds	1
   657  00018C                     sqrt@i:
   658                           	opt stack 0
   659                           
   660                           ; 1 bytes @ 0x1
   661  00018C                     	ds	1
   662  00018D                     sqrt@tfrac:
   663                           	opt stack 0
   664                           
   665                           ; 4 bytes @ 0x2
   666  00018D                     	ds	2
   667  00018F                     atan@x:
   668                           	opt stack 0
   669  00018F                     floor@i:
   670                           	opt stack 0
   671                           
   672                           ; 4 bytes @ 0x4
   673  00018F                     	ds	2
   674  000191                     sqrt@p:
   675                           	opt stack 0
   676                           
   677                           ; 1 bytes @ 0x6
   678  000191                     	ds	1
   679  000192                     sqrt@grs:
   680                           	opt stack 0
   681                           
   682                           ; 4 bytes @ 0x7
   683  000192                     	ds	1
   684  000193                     atan@recip:
   685                           	opt stack 0
   686  000193                     floor@expon:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x8
   690  000193                     	ds	1
   691  000194                     atan@val_squared:
   692                           	opt stack 0
   693                           
   694                           ; 4 bytes @ 0x9
   695  000194                     	ds	1
   696  000195                     ?___flsub:
   697                           	opt stack 0
   698  000195                     ___flsub@b:
   699                           	opt stack 0
   700                           
   701                           ; 4 bytes @ 0xA
   702  000195                     	ds	1
   703  000196                     sqrt@exp:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0xB
   707  000196                     	ds	2
   708  000198                     atan@val:
   709                           	opt stack 0
   710  000198                     sqrt@root:
   711                           	opt stack 0
   712                           
   713                           ; 4 bytes @ 0xD
   714  000198                     	ds	1
   715  000199                     ___flsub@a:
   716                           	opt stack 0
   717                           
   718                           ; 4 bytes @ 0xE
   719  000199                     	ds	3
   720  00019C                     sqrt@frac:
   721                           	opt stack 0
   722                           
   723                           ; 4 bytes @ 0x11
   724  00019C                     	ds	1
   725  00019D                     ?_sin:
   726                           	opt stack 0
   727  00019D                     sin@f:
   728                           	opt stack 0
   729                           
   730                           ; 4 bytes @ 0x12
   731  00019D                     	ds	3
   732  0001A0                     asin@sgn:
   733                           	opt stack 0
   734                           
   735                           ; 4 bytes @ 0x15
   736  0001A0                     	ds	1
   737  0001A1                     sin@y:
   738                           	opt stack 0
   739                           
   740                           ; 4 bytes @ 0x16
   741  0001A1                     	ds	3
   742  0001A4                     _asin$3754:
   743                           	opt stack 0
   744                           
   745                           ; 4 bytes @ 0x19
   746  0001A4                     	ds	1
   747  0001A5                     _sin$3756:
   748                           	opt stack 0
   749                           
   750                           ; 4 bytes @ 0x1A
   751  0001A5                     	ds	3
   752  0001A8                     _asin$3753:
   753                           	opt stack 0
   754                           
   755                           ; 4 bytes @ 0x1D
   756  0001A8                     	ds	1
   757  0001A9                     sin@x2:
   758                           	opt stack 0
   759                           
   760                           ; 4 bytes @ 0x1E
   761  0001A9                     	ds	3
   762  0001AC                     asin@y:
   763                           	opt stack 0
   764                           
   765                           ; 4 bytes @ 0x21
   766  0001AC                     	ds	1
   767  0001AD                     sin@sgn:
   768                           	opt stack 0
   769                           
   770                           ; 1 bytes @ 0x22
   771  0001AD                     	ds	3
   772  0001B0                     _asin$3752:
   773                           	opt stack 0
   774                           
   775                           ; 4 bytes @ 0x25
   776  0001B0                     	ds	4
   777  0001B4                     ??_parallelo:
   778  0001B4                     ?_cos:
   779                           	opt stack 0
   780  0001B4                     cos@f:
   781                           	opt stack 0
   782                           
   783                           ; 4 bytes @ 0x29
   784  0001B4                     	ds	2
   785  0001B6                     ??_park_search:
   786                           
   787                           ; 0 bytes @ 0x2B
   788  0001B6                     	ds	2
   789  0001B8                     _cos$3755:
   790                           	opt stack 0
   791                           
   792                           ; 4 bytes @ 0x2D
   793  0001B8                     	ds	4
   794  0001BC                     _matematica$3745:
   795                           	opt stack 0
   796                           
   797                           ; 4 bytes @ 0x31
   798  0001BC                     	ds	4
   799  0001C0                     _matematica$3746:
   800                           	opt stack 0
   801                           
   802                           ; 4 bytes @ 0x35
   803  0001C0                     	ds	4
   804  0001C4                     _matematica$3747:
   805                           	opt stack 0
   806                           
   807                           ; 4 bytes @ 0x39
   808  0001C4                     	ds	4
   809  0001C8                     _matematica$3748:
   810                           	opt stack 0
   811                           
   812                           ; 4 bytes @ 0x3D
   813  0001C8                     	ds	4
   814  0001CC                     _matematica$3750:
   815                           	opt stack 0
   816                           
   817                           ; 4 bytes @ 0x41
   818  0001CC                     	ds	4
   819  0001D0                     _matematica$3751:
   820                           	opt stack 0
   821                           
   822                           ; 4 bytes @ 0x45
   823  0001D0                     	ds	4
   824  0001D4                     _matematica$3749:
   825                           	opt stack 0
   826                           
   827                           ; 4 bytes @ 0x49
   828  0001D4                     	ds	4
   829  0001D8                     ??_park_routine:
   830                           
   831                           ; 0 bytes @ 0x4D
   832  0001D8                     	ds	4
   833  0001DC                     _park_routine$3743:
   834                           	opt stack 0
   835                           
   836                           ; 4 bytes @ 0x51
   837  0001DC                     	ds	4
   838  0001E0                     _park_routine$3744:
   839                           	opt stack 0
   840                           
   841                           ; 4 bytes @ 0x55
   842  0001E0                     	ds	4
   843                           tblptru	equ	0xFF8
   844                           tblptrh	equ	0xFF7
   845                           tblptrl	equ	0xFF6
   846                           tablat	equ	0xFF5
   847                           postinc0	equ	0xFEE
   848                           wreg	equ	0xFE8
   849                           postdec1	equ	0xFE5
   850                           fsr1l	equ	0xFE1
   851                           
   852                           	psect	cstackBANK0
   853  000060                     __pcstackBANK0:
   854                           	opt stack 0
   855  000060                     ?___lwdiv:
   856                           	opt stack 0
   857  000060                     ___lwdiv@dividend:
   858                           	opt stack 0
   859                           
   860                           ; 2 bytes @ 0x0
   861  000060                     	ds	2
   862  000062                     ___lwdiv@divisor:
   863                           	opt stack 0
   864                           
   865                           ; 2 bytes @ 0x2
   866  000062                     	ds	2
   867  000064                     ___lwdiv@counter:
   868                           	opt stack 0
   869                           
   870                           ; 1 bytes @ 0x4
   871  000064                     	ds	1
   872  000065                     ___lwdiv@quotient:
   873                           	opt stack 0
   874                           
   875                           ; 2 bytes @ 0x5
   876  000065                     	ds	2
   877  000067                     ??_ISR_Alta:
   878                           
   879                           ; 0 bytes @ 0x7
   880  000067                     	ds	16
   881  000077                     ??_can_interpreter:
   882  000077                     ?_abs:
   883                           	opt stack 0
   884  000077                     ?___wmul:
   885                           	opt stack 0
   886  000077                     ?___fldiv:
   887                           	opt stack 0
   888  000077                     CANOperationMode@mode:
   889                           	opt stack 0
   890  000077                     _CANisTxReady$2845:
   891                           	opt stack 0
   892  000077                     ___wmul@multiplier:
   893                           	opt stack 0
   894  000077                     abs@a:
   895                           	opt stack 0
   896  000077                     CANsendMessage@identifier:
   897                           	opt stack 0
   898  000077                     CANSetMask@mask:
   899                           	opt stack 0
   900  000077                     CANSetFilter@filter:
   901                           	opt stack 0
   902  000077                     ___fldiv@b:
   903                           	opt stack 0
   904  000077                     frexp@value:
   905                           	opt stack 0
   906                           
   907                           ; 4 bytes @ 0x17
   908  000077                     	ds	2
   909  000079                     ??_abs:
   910  000079                     ___wmul@multiplicand:
   911                           	opt stack 0
   912                           
   913                           ; 2 bytes @ 0x19
   914  000079                     	ds	2
   915  00007B                     CANSetMask@type:
   916                           	opt stack 0
   917  00007B                     CANSetFilter@type:
   918                           	opt stack 0
   919  00007B                     CANsendMessage@data:
   920                           	opt stack 0
   921  00007B                     ___wmul@product:
   922                           	opt stack 0
   923  00007B                     frexp@eptr:
   924                           	opt stack 0
   925  00007B                     ___fldiv@a:
   926                           	opt stack 0
   927                           
   928                           ; 4 bytes @ 0x1B
   929  00007B                     	ds	1
   930  00007C                     ??_CANSetMask:
   931  00007C                     ??_CANSetFilter:
   932                           
   933                           ; 0 bytes @ 0x1C
   934  00007C                     	ds	1
   935  00007D                     ??_frexp:
   936  00007D                     CANsendMessage@dataLength:
   937                           	opt stack 0
   938  00007D                     delay_ms@value_ms:
   939                           	opt stack 0
   940                           
   941                           ; 2 bytes @ 0x1D
   942  00007D                     	ds	1
   943  00007E                     CANsendMessage@flags:
   944                           	opt stack 0
   945                           
   946                           ; 1 bytes @ 0x1E
   947  00007E                     	ds	1
   948  00007F                     ??___fldiv:
   949  00007F                     ??_CANsendMessage:
   950  00007F                     delay_s@value_s:
   951                           	opt stack 0
   952                           
   953                           ; 1 bytes @ 0x1F
   954  00007F                     	ds	1
   955  000080                     CANSetMask@numBuffer:
   956                           	opt stack 0
   957  000080                     CANSetFilter@numBuffer:
   958                           	opt stack 0
   959  000080                     delay_s@repeat_loop:
   960                           	opt stack 0
   961                           
   962                           ; 1 bytes @ 0x20
   963  000080                     	ds	1
   964  000081                     CANSetMask@tamp:
   965                           	opt stack 0
   966  000081                     CANSetFilter@tamp:
   967                           	opt stack 0
   968                           
   969                           ; 4 bytes @ 0x21
   970  000081                     	ds	2
   971  000083                     ___fldiv@sign:
   972                           	opt stack 0
   973  000083                     CANsendMessage@tamp:
   974                           	opt stack 0
   975                           
   976                           ; 4 bytes @ 0x23
   977  000083                     	ds	1
   978  000084                     ___fldiv@rem:
   979                           	opt stack 0
   980                           
   981                           ; 4 bytes @ 0x24
   982  000084                     	ds	1
   983  000085                     CANInitialize@phaseSeg1:
   984                           	opt stack 0
   985                           
   986                           ; 1 bytes @ 0x25
   987  000085                     	ds	1
   988  000086                     CANInitialize@phaseSeg2:
   989                           	opt stack 0
   990                           
   991                           ; 1 bytes @ 0x26
   992  000086                     	ds	1
   993  000087                     can_send@data_correction1:
   994                           	opt stack 0
   995  000087                     CANInitialize@SJW:
   996                           	opt stack 0
   997                           
   998                           ; 1 bytes @ 0x27
   999  000087                     	ds	1
  1000  000088                     CANInitialize@BRP:
  1001                           	opt stack 0
  1002  000088                     ___fldiv@new_exp:
  1003                           	opt stack 0
  1004                           
  1005                           ; 2 bytes @ 0x28
  1006  000088                     	ds	1
  1007  000089                     CANInitialize@flags:
  1008                           	opt stack 0
  1009                           
  1010                           ; 1 bytes @ 0x29
  1011  000089                     	ds	1
  1012  00008A                     ??_CANInitialize:
  1013  00008A                     ___fldiv@grs:
  1014                           	opt stack 0
  1015                           
  1016                           ; 4 bytes @ 0x2A
  1017  00008A                     	ds	4
  1018  00008E                     CANInitialize@propSeg:
  1019                           	opt stack 0
  1020  00008E                     ___fldiv@bexp:
  1021                           	opt stack 0
  1022                           
  1023                           ; 1 bytes @ 0x2E
  1024  00008E                     	ds	1
  1025  00008F                     CANInitialize@FilterConfig1:
  1026                           	opt stack 0
  1027  00008F                     ___fldiv@aexp:
  1028                           	opt stack 0
  1029                           
  1030                           ; 1 bytes @ 0x2F
  1031  00008F                     	ds	1
  1032  000090                     ?___flmul:
  1033                           	opt stack 0
  1034  000090                     CANInitialize@FilterConfig2:
  1035                           	opt stack 0
  1036  000090                     ___flmul@b:
  1037                           	opt stack 0
  1038                           
  1039                           ; 4 bytes @ 0x30
  1040  000090                     	ds	1
  1041  000091                     
  1042                           ; 0 bytes @ 0x31
  1043  000091                     	ds	3
  1044  000094                     ___flmul@a:
  1045                           	opt stack 0
  1046                           
  1047                           ; 4 bytes @ 0x34
  1048  000094                     	ds	4
  1049  000098                     ??___flmul:
  1050                           
  1051                           ; 0 bytes @ 0x38
  1052  000098                     	ds	4
  1053  00009C                     ___flmul@sign:
  1054                           	opt stack 0
  1055                           
  1056                           ; 1 bytes @ 0x3C
  1057  00009C                     	ds	1
  1058  00009D                     ___flmul@aexp:
  1059                           	opt stack 0
  1060                           
  1061                           ; 1 bytes @ 0x3D
  1062  00009D                     	ds	1
  1063  00009E                     ___flmul@grs:
  1064                           	opt stack 0
  1065                           
  1066                           ; 4 bytes @ 0x3E
  1067  00009E                     	ds	4
  1068  0000A2                     ___flmul@bexp:
  1069                           	opt stack 0
  1070                           
  1071                           ; 1 bytes @ 0x42
  1072  0000A2                     	ds	1
  1073  0000A3                     ___flmul@prod:
  1074                           	opt stack 0
  1075                           
  1076                           ; 4 bytes @ 0x43
  1077  0000A3                     	ds	4
  1078  0000A7                     ___flmul@temp:
  1079                           	opt stack 0
  1080                           
  1081                           ; 2 bytes @ 0x47
  1082  0000A7                     	ds	2
  1083  0000A9                     ?___fladd:
  1084                           	opt stack 0
  1085  0000A9                     ___fladd@b:
  1086                           	opt stack 0
  1087                           
  1088                           ; 4 bytes @ 0x49
  1089  0000A9                     	ds	4
  1090  0000AD                     ___fladd@a:
  1091                           	opt stack 0
  1092                           
  1093                           ; 4 bytes @ 0x4D
  1094  0000AD                     	ds	4
  1095  0000B1                     ??___fladd:
  1096                           
  1097                           ; 0 bytes @ 0x51
  1098  0000B1                     	ds	8
  1099  0000B9                     ___fladd@signs:
  1100                           	opt stack 0
  1101                           
  1102                           ; 1 bytes @ 0x59
  1103  0000B9                     	ds	1
  1104  0000BA                     ___fladd@aexp:
  1105                           	opt stack 0
  1106                           
  1107                           ; 1 bytes @ 0x5A
  1108  0000BA                     	ds	1
  1109  0000BB                     ___fladd@bexp:
  1110                           	opt stack 0
  1111                           
  1112                           ; 1 bytes @ 0x5B
  1113  0000BB                     	ds	1
  1114  0000BC                     ___fladd@grs:
  1115                           	opt stack 0
  1116                           
  1117                           ; 1 bytes @ 0x5C
  1118  0000BC                     	ds	1
  1119  0000BD                     ?_eval_poly:
  1120                           	opt stack 0
  1121  0000BD                     ?___flneg:
  1122                           	opt stack 0
  1123  0000BD                     eval_poly@x:
  1124                           	opt stack 0
  1125  0000BD                     ___flneg@f1:
  1126                           	opt stack 0
  1127                           
  1128                           ; 4 bytes @ 0x5D
  1129  0000BD                     	ds	4
  1130  0000C1                     ?_sqrt:
  1131                           	opt stack 0
  1132  0000C1                     ?_fabs:
  1133                           	opt stack 0
  1134  0000C1                     ?___fltol:
  1135                           	opt stack 0
  1136  0000C1                     eval_poly@d:
  1137                           	opt stack 0
  1138  0000C1                     fabs@d:
  1139                           	opt stack 0
  1140  0000C1                     ___fltol@f1:
  1141                           	opt stack 0
  1142  0000C1                     sqrt@a:
  1143                           	opt stack 0
  1144                           
  1145                           ; 4 bytes @ 0x61
  1146  0000C1                     	ds	2
  1147  0000C3                     eval_poly@n:
  1148                           	opt stack 0
  1149                           
  1150                           ; 2 bytes @ 0x63
  1151  0000C3                     	ds	2
  1152  0000C5                     ??_sqrt:
  1153  0000C5                     ??_eval_poly:
  1154  0000C5                     ??___fltol:
  1155  0000C5                     ___flge@ff1:
  1156                           	opt stack 0
  1157                           
  1158                           ; 4 bytes @ 0x65
  1159  0000C5                     	ds	4
  1160  0000C9                     ___fltol@sign1:
  1161                           	opt stack 0
  1162  0000C9                     eval_poly@res:
  1163                           	opt stack 0
  1164  0000C9                     ___flge@ff2:
  1165                           	opt stack 0
  1166                           
  1167                           ; 4 bytes @ 0x69
  1168  0000C9                     	ds	1
  1169  0000CA                     ___fltol@exp1:
  1170                           	opt stack 0
  1171                           
  1172                           ; 1 bytes @ 0x6A
  1173  0000CA                     	ds	1
  1174  0000CB                     ?___xxtofl:
  1175                           	opt stack 0
  1176  0000CB                     ___xxtofl@val:
  1177                           	opt stack 0
  1178                           
  1179                           ; 4 bytes @ 0x6B
  1180  0000CB                     	ds	2
  1181  0000CD                     ??___flge:
  1182                           
  1183                           ; 0 bytes @ 0x6D
  1184  0000CD                     	ds	2
  1185  0000CF                     ??___xxtofl:
  1186                           
  1187                           ; 0 bytes @ 0x6F
  1188  0000CF                     	ds	2
  1189  0000D1                     ?_atan:
  1190                           	opt stack 0
  1191  0000D1                     atan@f:
  1192                           	opt stack 0
  1193                           
  1194                           ; 4 bytes @ 0x71
  1195  0000D1                     	ds	2
  1196  0000D3                     ___xxtofl@sign:
  1197                           	opt stack 0
  1198                           
  1199                           ; 1 bytes @ 0x73
  1200  0000D3                     	ds	1
  1201  0000D4                     ___xxtofl@exp:
  1202                           	opt stack 0
  1203                           
  1204                           ; 1 bytes @ 0x74
  1205  0000D4                     	ds	1
  1206  0000D5                     ?_asin:
  1207                           	opt stack 0
  1208  0000D5                     asin@x:
  1209                           	opt stack 0
  1210  0000D5                     ___xxtofl@arg:
  1211                           	opt stack 0
  1212                           
  1213                           ; 4 bytes @ 0x75
  1214  0000D5                     	ds	4
  1215  0000D9                     ??_main:
  1216                           
  1217                           ; 0 bytes @ 0x79
  1218  0000D9                     	ds	1
  1219                           tblptru	equ	0xFF8
  1220                           tblptrh	equ	0xFF7
  1221                           tblptrl	equ	0xFF6
  1222                           tablat	equ	0xFF5
  1223                           postinc0	equ	0xFEE
  1224                           wreg	equ	0xFE8
  1225                           postdec1	equ	0xFE5
  1226                           fsr1l	equ	0xFE1
  1227                           
  1228                           	psect	cstackCOMRAM
  1229  00002D                     __pcstackCOMRAM:
  1230                           	opt stack 0
  1231  00002D                     i1_CANisTxReady$2845:
  1232                           	opt stack 0
  1233  00002D                     CANreceiveMessage@msg:
  1234                           	opt stack 0
  1235  00002D                     i1CANsendMessage@identifier:
  1236                           	opt stack 0
  1237                           
  1238                           ; 4 bytes @ 0x0
  1239  00002D                     	ds	2
  1240  00002F                     ??_CANreceiveMessage:
  1241                           
  1242                           ; 0 bytes @ 0x2
  1243  00002F                     	ds	2
  1244  000031                     i1CANsendMessage@data:
  1245                           	opt stack 0
  1246                           
  1247                           ; 2 bytes @ 0x4
  1248  000031                     	ds	2
  1249  000033                     i1CANsendMessage@dataLength:
  1250                           	opt stack 0
  1251                           
  1252                           ; 1 bytes @ 0x6
  1253  000033                     	ds	1
  1254  000034                     i1CANsendMessage@flags:
  1255                           	opt stack 0
  1256                           
  1257                           ; 1 bytes @ 0x7
  1258  000034                     	ds	1
  1259  000035                     ??i1_CANsendMessage:
  1260                           
  1261                           ; 0 bytes @ 0x8
  1262  000035                     	ds	2
  1263  000037                     CANreceiveMessage@error:
  1264                           	opt stack 0
  1265                           
  1266                           ; 1 bytes @ 0xA
  1267  000037                     	ds	1
  1268  000038                     CANreceiveMessage@tamp:
  1269                           	opt stack 0
  1270                           
  1271                           ; 1 bytes @ 0xB
  1272  000038                     	ds	1
  1273  000039                     i1CANsendMessage@tamp:
  1274                           	opt stack 0
  1275                           
  1276                           ; 4 bytes @ 0xC
  1277  000039                     	ds	4
  1278  00003D                     ??_ISR_Bassa:
  1279                           
  1280                           ; 0 bytes @ 0x10
  1281  00003D                     	ds	21
  1282  000052                     ISR_Bassa@gigi:
  1283                           	opt stack 0
  1284                           
  1285                           ; 1 bytes @ 0x25
  1286  000052                     	ds	1
  1287  000053                     ISR_Bassa@i:
  1288                           	opt stack 0
  1289                           
  1290                           ; 1 bytes @ 0x26
  1291  000053                     	ds	1
  1292                           tblptru	equ	0xFF8
  1293                           tblptrh	equ	0xFF7
  1294                           tblptrl	equ	0xFF6
  1295                           tablat	equ	0xFF5
  1296                           postinc0	equ	0xFEE
  1297                           wreg	equ	0xFE8
  1298                           postdec1	equ	0xFE5
  1299                           fsr1l	equ	0xFE1
  1300                           
  1301 ;;
  1302 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1303 ;;
  1304 ;; *************** function _main *****************
  1305 ;; Defined at:
  1306 ;;		line 217 in file "parcheggio.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;		None
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;		None
  1311 ;; Return value:  Size  Location     Type
  1312 ;;		None               void
  1313 ;; Registers used:
  1314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1322 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1323 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1324 ;;Total ram usage:        1 bytes
  1325 ;; Hardware stack levels required when called:   10
  1326 ;; This function calls:
  1327 ;;		_CANisTxReady
  1328 ;;		_CANsendMessage
  1329 ;;		_can_interpreter
  1330 ;;		_configurations
  1331 ;;		_delay_ms
  1332 ;;		_park_routine
  1333 ;;		_park_search
  1334 ;; This function is called by:
  1335 ;;		Startup code after reset
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text0
  1340  006244                     __ptext0:
  1341                           	opt stack 0
  1342  006244                     _main:
  1343                           	opt stack 21
  1344                           
  1345                           ;parcheggio.c: 218: MUX_select[0] = 0b00000000;
  1346                           
  1347                           ; BSR set to: 15
  1348                           ;incstack = 0
  1349  006244  0E00               	movlw	0
  1350  006246  0101               	movlb	1	; () banked
  1351  006248  6F00               	movwf	_MUX_select& (0+255),b
  1352                           
  1353                           ;parcheggio.c: 219: MUX_select[1] = 0b00000001;
  1354  00624A  0E01               	movlw	1
  1355  00624C  0101               	movlb	1	; () banked
  1356  00624E  6F01               	movwf	(_MUX_select+1)& (0+255),b
  1357                           
  1358                           ;parcheggio.c: 220: MUX_select[2] = 0b00000010;
  1359  006250  0E02               	movlw	2
  1360  006252  0101               	movlb	1	; () banked
  1361  006254  6F02               	movwf	(_MUX_select+2)& (0+255),b
  1362                           
  1363                           ;parcheggio.c: 221: MUX_select[3] = 0b00000011;
  1364  006256  0E03               	movlw	3
  1365  006258  0101               	movlb	1	; () banked
  1366  00625A  6F03               	movwf	(_MUX_select+3)& (0+255),b
  1367                           
  1368                           ;parcheggio.c: 222: MUX_select[4] = 0b00000100;
  1369  00625C  0E04               	movlw	4
  1370  00625E  0101               	movlb	1	; () banked
  1371  006260  6F04               	movwf	(_MUX_select+4)& (0+255),b
  1372                           
  1373                           ;parcheggio.c: 223: MUX_select[5] = 0b00000101;
  1374  006262  0E05               	movlw	5
  1375  006264  0101               	movlb	1	; () banked
  1376  006266  6F05               	movwf	(_MUX_select+5)& (0+255),b
  1377                           
  1378                           ;parcheggio.c: 224: MUX_select[6] = 0b00000110;
  1379  006268  0E06               	movlw	6
  1380  00626A  0101               	movlb	1	; () banked
  1381  00626C  6F06               	movwf	(_MUX_select+6)& (0+255),b
  1382                           
  1383                           ;parcheggio.c: 225: MUX_select[7] = 0b00000111;
  1384  00626E  0E07               	movlw	7
  1385  006270  0101               	movlb	1	; () banked
  1386  006272  6F07               	movwf	(_MUX_select+7)& (0+255),b
  1387                           
  1388                           ; BSR set to: 1
  1389                           ;parcheggio.c: 227: configurations();
  1390  006274  EC43  F032         	call	_configurations	;wreg free
  1391                           
  1392                           ;parcheggio.c: 229: PORTBbits.RB4 = 0;
  1393  006278  9881               	bcf	3969,4,c	;volatile
  1394                           
  1395                           ;parcheggio.c: 230: PORTBbits.RB5 = 0;
  1396  00627A  9A81               	bcf	3969,5,c	;volatile
  1397                           
  1398                           ;parcheggio.c: 231: PORTBbits.RB6 = 0;
  1399  00627C  9C81               	bcf	3969,6,c	;volatile
  1400                           
  1401                           ;parcheggio.c: 233: request_sent = 0;
  1402  00627E  9655               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1403                           
  1404                           ;parcheggio.c: 234: start_operation = 0;
  1405  006280  9A55               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1406                           
  1407                           ;parcheggio.c: 235: delay_ms(500);
  1408  006282  0E01               	movlw	1
  1409  006284  0100               	movlb	0	; () banked
  1410  006286  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1411  006288  0EF4               	movlw	244
  1412  00628A  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1413  00628C  ECE6  F032         	call	_delay_ms	;wreg free
  1414                           
  1415                           ;parcheggio.c: 238: while (activation != 1) {
  1416                           
  1417                           ;parcheggio.c: 237: while (1) {
  1418  006290  D033               	goto	l8734
  1419  006292                     l8726:
  1420                           
  1421                           ;parcheggio.c: 239: delay_ms(100);
  1422  006292  0E00               	movlw	0
  1423  006294  0100               	movlb	0	; () banked
  1424  006296  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1425  006298  0E64               	movlw	100
  1426  00629A  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1427  00629C  ECE6  F032         	call	_delay_ms	;wreg free
  1428  0062A0                     l8728:
  1429  0062A0  EC66  F033         	call	_CANisTxReady	;wreg free
  1430  0062A4  0900               	iorlw	0
  1431  0062A6  B4D8               	btfsc	status,2,c
  1432  0062A8  D7FB               	goto	l8728
  1433                           
  1434                           ;parcheggio.c: 241: PORTBbits.RB4 = ~PORTBbits.RB4;
  1435  0062AA  A881               	btfss	3969,4,c	;volatile
  1436  0062AC  D002               	goto	u11710
  1437  0062AE  0E01               	movlw	1
  1438  0062B0  D001               	goto	u11716
  1439  0062B2                     u11710:
  1440  0062B2  0E00               	movlw	0
  1441  0062B4                     u11716:
  1442  0062B4  0AFF               	xorlw	255
  1443  0062B6  0100               	movlb	0	; () banked
  1444  0062B8  6FD9               	movwf	??_main& (0+255),b
  1445  0062BA  0100               	movlb	0	; () banked
  1446  0062BC  3BD9               	swapf	??_main& (0+255),f,b
  1447  0062BE  5081               	movf	3969,w,c	;volatile
  1448  0062C0  0100               	movlb	0	; () banked
  1449  0062C2  19D9               	xorwf	??_main& (0+255),w,b
  1450  0062C4  0BEF               	andlw	-17
  1451  0062C6  19D9               	xorwf	??_main& (0+255),w,b
  1452  0062C8  6E81               	movwf	3969,c	;volatile
  1453                           
  1454                           ; BSR set to: 0
  1455                           ;parcheggio.c: 242: CANsendMessage(0xAA, sensor_distance_short, 8, CAN_CONFIG_STD_MSG & 
      +                          CAN_REMOTE_TX_FRAME & CAN_TX_PRIORITY_0);
  1456  0062CA  0EAA               	movlw	170
  1457  0062CC  0100               	movlb	0	; () banked
  1458  0062CE  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1459  0062D0  0E00               	movlw	0
  1460  0062D2  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1461  0062D4  0E00               	movlw	0
  1462  0062D6  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1463  0062D8  0E00               	movlw	0
  1464  0062DA  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1465  0062DC  0E83               	movlw	low _sensor_distance_short
  1466  0062DE  0100               	movlb	0	; () banked
  1467  0062E0  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1468  0062E2  0E01               	movlw	high _sensor_distance_short
  1469  0062E4  0100               	movlb	0	; () banked
  1470  0062E6  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1471  0062E8  0E08               	movlw	8
  1472  0062EA  0100               	movlb	0	; () banked
  1473  0062EC  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1474  0062EE  0EFC               	movlw	252
  1475  0062F0  0100               	movlb	0	; () banked
  1476  0062F2  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1477  0062F4  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1478  0062F8                     l8734:
  1479  0062F8  A054               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1480  0062FA  D7CB               	goto	l8726
  1481                           
  1482                           ;parcheggio.c: 258: }
  1483                           ;parcheggio.c: 260: park_search();
  1484  0062FC  EC50  F02C         	call	_park_search	;wreg free
  1485                           
  1486                           ;parcheggio.c: 261: can_interpreter();
  1487  006300  EC79  F032         	call	_can_interpreter	;wreg free
  1488                           
  1489                           ;parcheggio.c: 262: park_routine();
  1490  006304  EC2C  F01D         	call	_park_routine	;wreg free
  1491  006308  D7F7               	goto	l8734
  1492  00630A                     __end_of_main:
  1493                           	opt stack 0
  1494                           tblptru	equ	0xFF8
  1495                           tblptrh	equ	0xFF7
  1496                           tblptrl	equ	0xFF6
  1497                           tablat	equ	0xFF5
  1498                           postinc0	equ	0xFEE
  1499                           wreg	equ	0xFE8
  1500                           postdec1	equ	0xFE5
  1501                           fsr1l	equ	0xFE1
  1502                           status	equ	0xFD8
  1503                           
  1504 ;; *************** function _park_search *****************
  1505 ;; Defined at:
  1506 ;;		line 266 in file "parcheggio.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;		None
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;		None
  1511 ;; Return value:  Size  Location     Type
  1512 ;;		None               void
  1513 ;; Registers used:
  1514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1520 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1522 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1523 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1524 ;;Total ram usage:        2 bytes
  1525 ;; Hardware stack levels used:    1
  1526 ;; Hardware stack levels required when called:    9
  1527 ;; This function calls:
  1528 ;;		_CANisTxReady
  1529 ;;		_CANsendMessage
  1530 ;;		___xxtofl
  1531 ;;		_abs
  1532 ;;		_parallelo
  1533 ;; This function is called by:
  1534 ;;		_main
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text1
  1539  0058A0                     __ptext1:
  1540                           	opt stack 0
  1541  0058A0                     _park_search:
  1542                           	opt stack 21
  1543                           
  1544                           ;parcheggio.c: 267: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1545                           
  1546                           ;incstack = 0
  1547  0058A0  D0DA               	goto	l741
  1548  0058A2                     l8108:
  1549                           
  1550                           ;parcheggio.c: 268: parallelo();
  1551  0058A2  EC1B  F028         	call	_parallelo	;wreg free
  1552                           
  1553                           ;parcheggio.c: 270: if (sensor_distance[0] > 50) {
  1554  0058A6  5002               	movf	_sensor_distance+1,w,c	;volatile
  1555  0058A8  E104               	bnz	u10700
  1556  0058AA  0E33               	movlw	51
  1557  0058AC  5C01               	subwf	_sensor_distance,w,c	;volatile
  1558  0058AE  A0D8               	btfss	status,0,c
  1559  0058B0  D029               	goto	l743
  1560  0058B2                     u10700:
  1561                           
  1562                           ;parcheggio.c: 271: if (request_sent == 0) {
  1563  0058B2  B655               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1564  0058B4  D025               	goto	l8124
  1565  0058B6                     l8116:
  1566  0058B6  EC66  F033         	call	_CANisTxReady	;wreg free
  1567  0058BA  0900               	iorlw	0
  1568  0058BC  B4D8               	btfsc	status,2,c
  1569  0058BE  D7FB               	goto	l8116
  1570                           
  1571                           ;parcheggio.c: 273: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1572  0058C0  0E08               	movlw	8
  1573  0058C2  0100               	movlb	0	; () banked
  1574  0058C4  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1575  0058C6  0E00               	movlw	0
  1576  0058C8  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1577  0058CA  0E00               	movlw	0
  1578  0058CC  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1579  0058CE  0E00               	movlw	0
  1580  0058D0  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1581  0058D2  0E53               	movlw	low _data
  1582  0058D4  0100               	movlb	0	; () banked
  1583  0058D6  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1584  0058D8  0E01               	movlw	high _data
  1585  0058DA  0100               	movlb	0	; () banked
  1586  0058DC  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1587  0058DE  0E08               	movlw	8
  1588  0058E0  0100               	movlb	0	; () banked
  1589  0058E2  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1590  0058E4  0EFC               	movlw	252
  1591  0058E6  0100               	movlb	0	; () banked
  1592  0058E8  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1593  0058EA  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1594                           
  1595                           ;parcheggio.c: 274: request_sent = 1;
  1596  0058EE  8655               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1597                           
  1598                           ;parcheggio.c: 275: alignment_gap = 0;
  1599  0058F0  0E00               	movlw	0
  1600  0058F2  6E11               	movwf	_alignment_gap,c
  1601  0058F4  0E00               	movlw	0
  1602  0058F6  6E12               	movwf	_alignment_gap+1,c
  1603  0058F8  0E00               	movlw	0
  1604  0058FA  6E13               	movwf	_alignment_gap+2,c
  1605  0058FC  0E00               	movlw	0
  1606  0058FE  6E14               	movwf	_alignment_gap+3,c
  1607  005900                     l8124:
  1608                           
  1609                           ;parcheggio.c: 276: }
  1610                           ;parcheggio.c: 277: LATBbits.LATB4 = 1;
  1611  005900  888A               	bsf	3978,4,c	;volatile
  1612                           
  1613                           ;parcheggio.c: 278: } else {
  1614  005902  D02F               	goto	l8128
  1615  005904                     l743:
  1616                           
  1617                           ;parcheggio.c: 279: LATBbits.LATB4 = 0;
  1618  005904  988A               	bcf	3978,4,c	;volatile
  1619                           
  1620                           ;parcheggio.c: 280: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1621  005906  EE20  F003         	lfsr	2,_sensor_distance+2	;volatile
  1622  00590A  CFDE F1B6          	movff	postinc2,??_park_search
  1623  00590E  CFDD F1B7          	movff	postdec2,??_park_search+1
  1624  005912  0101               	movlb	1	; () banked
  1625  005914  1FB6               	comf	??_park_search& (0+255),f,b
  1626  005916  1FB7               	comf	(??_park_search+1)& (0+255),f,b
  1627  005918  4BB6               	infsnz	??_park_search& (0+255),f,b
  1628  00591A  2BB7               	incf	(??_park_search+1)& (0+255),f,b
  1629  00591C  5001               	movf	_sensor_distance,w,c	;volatile
  1630  00591E  0101               	movlb	1	; () banked
  1631  005920  25B6               	addwf	??_park_search& (0+255),w,b
  1632  005922  0100               	movlb	0	; () banked
  1633  005924  6F77               	movwf	abs@a& (0+255),b
  1634  005926  5002               	movf	_sensor_distance+1,w,c	;volatile
  1635  005928  0101               	movlb	1	; () banked
  1636  00592A  21B7               	addwfc	(??_park_search+1)& (0+255),w,b
  1637  00592C  0100               	movlb	0	; () banked
  1638  00592E  6F78               	movwf	(abs@a+1)& (0+255),b
  1639  005930  EC3A  F033         	call	_abs	;wreg free
  1640  005934  0100               	movlb	0	; () banked
  1641  005936  C077  F0CB         	movff	?_abs,___xxtofl@val
  1642  00593A  0100               	movlb	0	; () banked
  1643  00593C  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  1644  005940  0100               	movlb	0	; () banked
  1645  005942  0E00               	movlw	0
  1646  005944  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1647  005946  0EFF               	movlw	-1
  1648  005948  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  1649  00594A  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  1650  00594C  0E01               	movlw	1
  1651  00594E  EC86  F02A         	call	___xxtofl
  1652  005952  C0CB  F011         	movff	?___xxtofl,_alignment_gap
  1653  005956  C0CC  F012         	movff	?___xxtofl+1,_alignment_gap+1
  1654  00595A  C0CD  F013         	movff	?___xxtofl+2,_alignment_gap+2
  1655  00595E  C0CE  F014         	movff	?___xxtofl+3,_alignment_gap+3
  1656  005962                     l8128:
  1657                           
  1658                           ;parcheggio.c: 281: }
  1659                           ;parcheggio.c: 283: if ((sensor_distance[0] < 50) && (request_sent == 1)&&(sensor_distan
      +                          ce[1] < 50)) {
  1660  005962  5002               	movf	_sensor_distance+1,w,c	;volatile
  1661  005964  E128               	bnz	l8140
  1662  005966  0E32               	movlw	50
  1663  005968  5C01               	subwf	_sensor_distance,w,c	;volatile
  1664  00596A  A0D8               	btfss	status,0,c
  1665  00596C  A655               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1666  00596E  D023               	goto	l8140
  1667  005970  5004               	movf	_sensor_distance+3,w,c	;volatile
  1668  005972  E121               	bnz	l8140
  1669  005974  0E32               	movlw	50
  1670  005976  5C03               	subwf	_sensor_distance+2,w,c	;volatile
  1671  005978  B0D8               	btfsc	status,0,c
  1672  00597A  D01D               	goto	l8140
  1673                           
  1674                           ;parcheggio.c: 284: request_sent = 0;
  1675  00597C  9655               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1676  00597E                     l8136:
  1677  00597E  EC66  F033         	call	_CANisTxReady	;wreg free
  1678  005982  0900               	iorlw	0
  1679  005984  B4D8               	btfsc	status,2,c
  1680  005986  D7FB               	goto	l8136
  1681                           
  1682                           ;parcheggio.c: 286: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1683  005988  0E07               	movlw	7
  1684  00598A  0100               	movlb	0	; () banked
  1685  00598C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1686  00598E  0E00               	movlw	0
  1687  005990  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1688  005992  0E00               	movlw	0
  1689  005994  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1690  005996  0E00               	movlw	0
  1691  005998  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1692  00599A  0E53               	movlw	low _data
  1693  00599C  0100               	movlb	0	; () banked
  1694  00599E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1695  0059A0  0E01               	movlw	high _data
  1696  0059A2  0100               	movlb	0	; () banked
  1697  0059A4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1698  0059A6  0E08               	movlw	8
  1699  0059A8  0100               	movlb	0	; () banked
  1700  0059AA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1701  0059AC  0EFC               	movlw	252
  1702  0059AE  0100               	movlb	0	; () banked
  1703  0059B0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1704  0059B2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1705  0059B6                     l8140:
  1706                           
  1707                           ;parcheggio.c: 287: }
  1708                           ;parcheggio.c: 289: if (distance_received == 1) {
  1709  0059B6  AA54               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1710  0059B8  D04E               	goto	l741
  1711                           
  1712                           ;parcheggio.c: 290: if (distance_average > 65) {
  1713  0059BA  501A               	movf	_distance_average+1,w,c	;volatile
  1714  0059BC  E104               	bnz	u10780
  1715  0059BE  0E42               	movlw	66
  1716  0059C0  5C19               	subwf	_distance_average,w,c	;volatile
  1717  0059C2  A0D8               	btfss	status,0,c
  1718  0059C4  D046               	goto	l754
  1719  0059C6                     u10780:
  1720                           
  1721                           ;parcheggio.c: 291: PORTBbits.RB5 = 1;
  1722  0059C6  8A81               	bsf	3969,5,c	;volatile
  1723                           
  1724                           ;parcheggio.c: 292: data[0] = 1;
  1725  0059C8  0E01               	movlw	1
  1726  0059CA  0101               	movlb	1	; () banked
  1727  0059CC  6F53               	movwf	_data& (0+255),b
  1728                           
  1729                           ; BSR set to: 1
  1730                           ;parcheggio.c: 293: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1731  0059CE  0E0B               	movlw	11
  1732  0059D0  0100               	movlb	0	; () banked
  1733  0059D2  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1734  0059D4  0E00               	movlw	0
  1735  0059D6  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1736  0059D8  0E00               	movlw	0
  1737  0059DA  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1738  0059DC  0E00               	movlw	0
  1739  0059DE  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1740  0059E0  0E53               	movlw	low _data
  1741  0059E2  0100               	movlb	0	; () banked
  1742  0059E4  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1743  0059E6  0E01               	movlw	high _data
  1744  0059E8  0100               	movlb	0	; () banked
  1745  0059EA  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1746  0059EC  0E01               	movlw	1
  1747  0059EE  0100               	movlb	0	; () banked
  1748  0059F0  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1749  0059F2  0EBC               	movlw	188
  1750  0059F4  0100               	movlb	0	; () banked
  1751  0059F6  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1752  0059F8  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1753                           
  1754                           ;parcheggio.c: 294: if ((request_sent1 == 0)&&(sensor_distance[0] < 40)) {
  1755  0059FC  B855               	btfsc	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1756  0059FE  D02B               	goto	l741
  1757  005A00  5002               	movf	_sensor_distance+1,w,c	;volatile
  1758  005A02  E129               	bnz	l741
  1759  005A04  0E28               	movlw	40
  1760  005A06  5C01               	subwf	_sensor_distance,w,c	;volatile
  1761  005A08  B0D8               	btfsc	status,0,c
  1762  005A0A  D025               	goto	l741
  1763                           
  1764                           ;parcheggio.c: 295: data_test[0] = 50;
  1765  005A0C  0E32               	movlw	50
  1766  005A0E  0101               	movlb	1	; () banked
  1767  005A10  6F7B               	movwf	_data_test& (0+255),b
  1768                           
  1769                           ; BSR set to: 1
  1770                           ;parcheggio.c: 296: asd = 1;
  1771  005A12  8254               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  1772  005A14                     l8158:
  1773  005A14  EC66  F033         	call	_CANisTxReady	;wreg free
  1774  005A18  0900               	iorlw	0
  1775  005A1A  B4D8               	btfsc	status,2,c
  1776  005A1C  D7FB               	goto	l8158
  1777                           
  1778                           ;parcheggio.c: 298: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1779  005A1E  0E0D               	movlw	13
  1780  005A20  0100               	movlb	0	; () banked
  1781  005A22  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1782  005A24  0E00               	movlw	0
  1783  005A26  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1784  005A28  0E00               	movlw	0
  1785  005A2A  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1786  005A2C  0E00               	movlw	0
  1787  005A2E  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1788  005A30  0E7B               	movlw	low _data_test
  1789  005A32  0100               	movlb	0	; () banked
  1790  005A34  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1791  005A36  0E01               	movlw	high _data_test
  1792  005A38  0100               	movlb	0	; () banked
  1793  005A3A  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1794  005A3C  0E08               	movlw	8
  1795  005A3E  0100               	movlb	0	; () banked
  1796  005A40  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1797  005A42  0EBC               	movlw	188
  1798  005A44  0100               	movlb	0	; () banked
  1799  005A46  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1800  005A48  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1801                           
  1802                           ;parcheggio.c: 300: distance_received1 = 0;
  1803  005A4C  9C54               	bcf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  1804                           
  1805                           ;parcheggio.c: 301: request_sent1 = 1;
  1806  005A4E  8855               	bsf	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1807                           
  1808                           ;parcheggio.c: 302: }
  1809                           ;parcheggio.c: 303: } else {
  1810  005A50  D002               	goto	l741
  1811  005A52                     l754:
  1812                           
  1813                           ;parcheggio.c: 304: distance_received = 0;
  1814  005A52  9A54               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1815                           
  1816                           ;parcheggio.c: 305: PORTBbits.RB5 = 0;
  1817  005A54  9A81               	bcf	3969,5,c	;volatile
  1818  005A56                     l741:
  1819  005A56  A054               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1820  005A58  0012               	return	
  1821  005A5A  BA81               	btfsc	3969,5,c	;volatile
  1822  005A5C  0012               	return	
  1823  005A5E  D721               	goto	l8108
  1824  005A60                     __end_of_park_search:
  1825                           	opt stack 0
  1826                           tblptru	equ	0xFF8
  1827                           tblptrh	equ	0xFF7
  1828                           tblptrl	equ	0xFF6
  1829                           tablat	equ	0xFF5
  1830                           postinc0	equ	0xFEE
  1831                           wreg	equ	0xFE8
  1832                           postdec1	equ	0xFE5
  1833                           fsr1l	equ	0xFE1
  1834                           postinc2	equ	0xFDE
  1835                           postdec2	equ	0xFDD
  1836                           status	equ	0xFD8
  1837                           
  1838 ;; *************** function _park_routine *****************
  1839 ;; Defined at:
  1840 ;;		line 311 in file "parcheggio.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;		None
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;		None
  1845 ;; Return value:  Size  Location     Type
  1846 ;;		None               void
  1847 ;; Registers used:
  1848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1855 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1856 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1857 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  1858 ;;Total ram usage:       12 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    9
  1861 ;; This function calls:
  1862 ;;		_CANisTxReady
  1863 ;;		_CANsendMessage
  1864 ;;		___fladd
  1865 ;;		___flneg
  1866 ;;		___fltol
  1867 ;;		___xxtofl
  1868 ;;		_can_send
  1869 ;;		_delay_ms
  1870 ;;		_delay_s
  1871 ;;		_matematica
  1872 ;;		_parallelo
  1873 ;; This function is called by:
  1874 ;;		_main
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text2
  1879  003A58                     __ptext2:
  1880                           	opt stack 0
  1881  003A58                     _park_routine:
  1882                           	opt stack 21
  1883                           
  1884                           ;parcheggio.c: 312: avvicinamento = 0;
  1885                           
  1886                           ;incstack = 0
  1887  003A58  9454               	bcf	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
  1888                           
  1889                           ;parcheggio.c: 313: data_correction[0] = 0;
  1890  003A5A  0E00               	movlw	0
  1891  003A5C  0101               	movlb	1	; () banked
  1892  003A5E  6F63               	movwf	_data_correction& (0+255),b
  1893                           
  1894                           ; BSR set to: 1
  1895                           ;parcheggio.c: 314: parallelo();
  1896  003A60  EC1B  F028         	call	_parallelo	;wreg free
  1897                           
  1898                           ;parcheggio.c: 315: delay_ms(200);
  1899  003A64  0E00               	movlw	0
  1900  003A66  0100               	movlb	0	; () banked
  1901  003A68  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1902  003A6A  0EC8               	movlw	200
  1903  003A6C  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1904  003A6E  ECE6  F032         	call	_delay_ms	;wreg free
  1905                           
  1906                           ;parcheggio.c: 317: while ((asd == 1)&&(PORTBbits.RB5 == 1) && (activation == 1)) {
  1907  003A72  D03E               	goto	l8190
  1908  003A74                     l8176:
  1909                           
  1910                           ;parcheggio.c: 318: delay_ms(200);
  1911  003A74  0E00               	movlw	0
  1912  003A76  0100               	movlb	0	; () banked
  1913  003A78  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1914  003A7A  0EC8               	movlw	200
  1915  003A7C  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1916  003A7E  ECE6  F032         	call	_delay_ms	;wreg free
  1917                           
  1918                           ;parcheggio.c: 319: PORTBbits.RB6 = ~PORTBbits.RB6;
  1919  003A82  AC81               	btfss	3969,6,c	;volatile
  1920  003A84  D002               	goto	u10840
  1921  003A86  0E01               	movlw	1
  1922  003A88  D001               	goto	u10846
  1923  003A8A                     u10840:
  1924  003A8A  0E00               	movlw	0
  1925  003A8C                     u10846:
  1926  003A8C  0AFF               	xorlw	255
  1927  003A8E  0101               	movlb	1	; () banked
  1928  003A90  6FD8               	movwf	??_park_routine& (0+255),b
  1929  003A92  0101               	movlb	1	; () banked
  1930  003A94  3BD8               	swapf	??_park_routine& (0+255),f,b
  1931  003A96  47D8               	rlncf	??_park_routine& (0+255),f,b
  1932  003A98  47D8               	rlncf	??_park_routine& (0+255),f,b
  1933  003A9A  5081               	movf	3969,w,c	;volatile
  1934  003A9C  0101               	movlb	1	; () banked
  1935  003A9E  19D8               	xorwf	??_park_routine& (0+255),w,b
  1936  003AA0  0BBF               	andlw	-65
  1937  003AA2  19D8               	xorwf	??_park_routine& (0+255),w,b
  1938  003AA4  6E81               	movwf	3969,c	;volatile
  1939                           
  1940                           ; BSR set to: 1
  1941                           ;parcheggio.c: 320: parallelo();
  1942  003AA6  EC1B  F028         	call	_parallelo	;wreg free
  1943                           
  1944                           ;parcheggio.c: 321: if (data_correction[0] > 50) {
  1945  003AAA  0E32               	movlw	50
  1946  003AAC  0101               	movlb	1	; () banked
  1947  003AAE  6563               	cpfsgt	_data_correction& (0+255),b
  1948  003AB0  D003               	goto	l8186
  1949                           
  1950                           ; BSR set to: 1
  1951                           ;parcheggio.c: 322: data_correction[0] = 0;
  1952  003AB2  0E00               	movlw	0
  1953  003AB4  0101               	movlb	1	; () banked
  1954  003AB6  6F63               	movwf	_data_correction& (0+255),b
  1955  003AB8                     l8186:
  1956  003AB8  EC66  F033         	call	_CANisTxReady	;wreg free
  1957  003ABC  0900               	iorlw	0
  1958  003ABE  B4D8               	btfsc	status,2,c
  1959  003AC0  D7FB               	goto	l8186
  1960                           
  1961                           ;parcheggio.c: 325: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1962  003AC2  0E0E               	movlw	14
  1963  003AC4  0100               	movlb	0	; () banked
  1964  003AC6  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1965  003AC8  0E00               	movlw	0
  1966  003ACA  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1967  003ACC  0E00               	movlw	0
  1968  003ACE  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1969  003AD0  0E00               	movlw	0
  1970  003AD2  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1971  003AD4  0E63               	movlw	low _data_correction
  1972  003AD6  0100               	movlb	0	; () banked
  1973  003AD8  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1974  003ADA  0E01               	movlw	high _data_correction
  1975  003ADC  0100               	movlb	0	; () banked
  1976  003ADE  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1977  003AE0  0E08               	movlw	8
  1978  003AE2  0100               	movlb	0	; () banked
  1979  003AE4  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1980  003AE6  0EBC               	movlw	188
  1981  003AE8  0100               	movlb	0	; () banked
  1982  003AEA  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1983  003AEC  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1984  003AF0                     l8190:
  1985  003AF0  B254               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  1986  003AF2  AA81               	btfss	3969,5,c	;volatile
  1987  003AF4  D002               	goto	l774
  1988  003AF6  B054               	btfsc	_activation/(0+8),_activation& (0+7),c	;volatile
  1989  003AF8  D7BD               	goto	l8176
  1990  003AFA                     l774:
  1991                           
  1992                           ;parcheggio.c: 326: }
  1993                           ;parcheggio.c: 328: if ((PORTBbits.RB5 == 1) && (activation == 1)) {
  1994  003AFA  BA81               	btfsc	3969,5,c	;volatile
  1995  003AFC  A054               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1996  003AFE  D02E               	goto	l8210
  1997                           
  1998                           ;parcheggio.c: 329: PORTBbits.RB6 = 0;
  1999  003B00  9C81               	bcf	3969,6,c	;volatile
  2000                           
  2001                           ;parcheggio.c: 330: data[0] = 2;
  2002  003B02  0E02               	movlw	2
  2003  003B04  0101               	movlb	1	; () banked
  2004  003B06  6F53               	movwf	_data& (0+255),b
  2005                           
  2006                           ; BSR set to: 1
  2007                           ;parcheggio.c: 331: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2008  003B08  0E0B               	movlw	11
  2009  003B0A  0100               	movlb	0	; () banked
  2010  003B0C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2011  003B0E  0E00               	movlw	0
  2012  003B10  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2013  003B12  0E00               	movlw	0
  2014  003B14  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2015  003B16  0E00               	movlw	0
  2016  003B18  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2017  003B1A  0E53               	movlw	low _data
  2018  003B1C  0100               	movlb	0	; () banked
  2019  003B1E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2020  003B20  0E01               	movlw	high _data
  2021  003B22  0100               	movlb	0	; () banked
  2022  003B24  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2023  003B26  0E01               	movlw	1
  2024  003B28  0100               	movlb	0	; () banked
  2025  003B2A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2026  003B2C  0EBC               	movlw	188
  2027  003B2E  0100               	movlb	0	; () banked
  2028  003B30  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2029  003B32  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2030                           
  2031                           ;parcheggio.c: 332: }
  2032                           ;parcheggio.c: 334: while ((start_operation != 1)&&(activation == 1)) {
  2033  003B36  D012               	goto	l8210
  2034  003B38                     l777:
  2035                           
  2036                           ;parcheggio.c: 335: if (first == 0) {
  2037  003B38  B055               	btfsc	_first/(0+8),_first& (0+7),c	;volatile
  2038  003B3A  D010               	goto	l8210
  2039                           
  2040                           ;parcheggio.c: 336: set_speed = 0;
  2041  003B3C  0E00               	movlw	0
  2042  003B3E  6E26               	movwf	_set_speed+1,c
  2043  003B40  0E00               	movlw	0
  2044  003B42  6E25               	movwf	_set_speed,c
  2045                           
  2046                           ;parcheggio.c: 337: data_steering[0] = 90;
  2047  003B44  0E5A               	movlw	90
  2048  003B46  0101               	movlb	1	; () banked
  2049  003B48  6F73               	movwf	_data_steering& (0+255),b
  2050                           
  2051                           ;parcheggio.c: 338: data_brake [0] = 0;
  2052  003B4A  0E00               	movlw	0
  2053  003B4C  0101               	movlb	1	; () banked
  2054  003B4E  6F5B               	movwf	_data_brake& (0+255),b
  2055                           
  2056                           ;parcheggio.c: 339: data_brake [1] = 1;
  2057  003B50  0E01               	movlw	1
  2058  003B52  0101               	movlb	1	; () banked
  2059  003B54  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2060                           
  2061                           ; BSR set to: 1
  2062                           ;parcheggio.c: 340: can_send();
  2063  003B56  ECF8  F02D         	call	_can_send	;wreg free
  2064                           
  2065                           ;parcheggio.c: 341: first = 1;
  2066  003B5A  8055               	bsf	_first/(0+8),_first& (0+7),c	;volatile
  2067  003B5C                     l8210:
  2068  003B5C  AA55               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2069  003B5E  A054               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2070  003B60  D1BA               	goto	l8320
  2071  003B62  D7EA               	goto	l777
  2072  003B64                     l783:
  2073                           
  2074                           ;parcheggio.c: 346: LATBbits.LATB4 = 1;
  2075  003B64  888A               	bsf	3978,4,c	;volatile
  2076                           
  2077                           ;parcheggio.c: 348: bordo = (sensor_distance[0] + sensor_distance[1]) / 2;
  2078  003B66  5001               	movf	_sensor_distance,w,c	;volatile
  2079  003B68  2403               	addwf	_sensor_distance+2,w,c	;volatile
  2080  003B6A  0101               	movlb	1	; () banked
  2081  003B6C  6FD8               	movwf	??_park_routine& (0+255),b
  2082  003B6E  5002               	movf	_sensor_distance+1,w,c	;volatile
  2083  003B70  2004               	addwfc	_sensor_distance+3,w,c	;volatile
  2084  003B72  0101               	movlb	1	; () banked
  2085  003B74  6FD9               	movwf	(??_park_routine+1)& (0+255),b
  2086  003B76  90D8               	bcf	status,0,c
  2087  003B78  0101               	movlb	1	; () banked
  2088  003B7A  31D9               	rrcf	(??_park_routine+1)& (0+255),w,b
  2089  003B7C  0101               	movlb	1	; () banked
  2090  003B7E  6FDB               	movwf	(??_park_routine+3)& (0+255),b
  2091  003B80  0101               	movlb	1	; () banked
  2092  003B82  31D8               	rrcf	??_park_routine& (0+255),w,b
  2093  003B84  0101               	movlb	1	; () banked
  2094  003B86  6FDA               	movwf	(??_park_routine+2)& (0+255),b
  2095  003B88  C1DA  F0CB         	movff	??_park_routine+2,___xxtofl@val
  2096  003B8C  C1DB  F0CC         	movff	??_park_routine+3,___xxtofl@val+1
  2097  003B90  0100               	movlb	0	; () banked
  2098  003B92  6BCD               	clrf	(___xxtofl@val+2)& (0+255),b
  2099  003B94  6BCE               	clrf	(___xxtofl@val+3)& (0+255),b
  2100  003B96  0E00               	movlw	0
  2101  003B98  EC86  F02A         	call	___xxtofl
  2102  003B9C  C0CB  F134         	movff	?___xxtofl,_bordo	;volatile
  2103  003BA0  C0CC  F135         	movff	?___xxtofl+1,_bordo+1	;volatile
  2104  003BA4  C0CD  F136         	movff	?___xxtofl+2,_bordo+2	;volatile
  2105  003BA8  C0CE  F137         	movff	?___xxtofl+3,_bordo+3	;volatile
  2106                           
  2107                           ;parcheggio.c: 349: matematica();
  2108  003BAC  EC3A  F013         	call	_matematica	;wreg free
  2109                           
  2110                           ;parcheggio.c: 350: set_speed = 0;
  2111  003BB0  0E00               	movlw	0
  2112  003BB2  6E26               	movwf	_set_speed+1,c
  2113  003BB4  0E00               	movlw	0
  2114  003BB6  6E25               	movwf	_set_speed,c
  2115                           
  2116                           ;parcheggio.c: 351: data_steering[0] = 90;
  2117  003BB8  0E5A               	movlw	90
  2118  003BBA  0101               	movlb	1	; () banked
  2119  003BBC  6F73               	movwf	_data_steering& (0+255),b
  2120                           
  2121                           ; BSR set to: 1
  2122                           ;parcheggio.c: 352: data_brake [0] = 0;
  2123  003BBE  0E00               	movlw	0
  2124  003BC0  0101               	movlb	1	; () banked
  2125  003BC2  6F5B               	movwf	_data_brake& (0+255),b
  2126                           
  2127                           ; BSR set to: 1
  2128                           ;parcheggio.c: 353: data_brake [1] = 1;
  2129  003BC4  0E01               	movlw	1
  2130  003BC6  0101               	movlb	1	; () banked
  2131  003BC8  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2132                           
  2133                           ; BSR set to: 1
  2134                           ;parcheggio.c: 354: can_send();
  2135  003BCA  ECF8  F02D         	call	_can_send	;wreg free
  2136                           
  2137                           ;parcheggio.c: 355: delay_s(1);
  2138  003BCE  0E01               	movlw	1
  2139  003BD0  EC50  F033         	call	_delay_s
  2140                           
  2141                           ;parcheggio.c: 357: data_brake [0] = 3;
  2142  003BD4  0E03               	movlw	3
  2143  003BD6  0101               	movlb	1	; () banked
  2144  003BD8  6F5B               	movwf	_data_brake& (0+255),b
  2145                           
  2146                           ; BSR set to: 1
  2147                           ;parcheggio.c: 358: data_brake [1] = 1;
  2148  003BDA  0E01               	movlw	1
  2149  003BDC  0101               	movlb	1	; () banked
  2150  003BDE  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2151                           
  2152                           ; BSR set to: 1
  2153                           ;parcheggio.c: 360: set_speed = 1000;
  2154  003BE0  0E03               	movlw	3
  2155  003BE2  6E26               	movwf	_set_speed+1,c
  2156  003BE4  0EE8               	movlw	232
  2157  003BE6  6E25               	movwf	_set_speed,c
  2158                           
  2159                           ; BSR set to: 1
  2160                           ;parcheggio.c: 361: dir = 0;
  2161  003BE8  9654               	bcf	_dir/(0+8),_dir& (0+7),c
  2162                           
  2163                           ; BSR set to: 1
  2164                           ;parcheggio.c: 362: data_steering[0] = 90;
  2165  003BEA  0E5A               	movlw	90
  2166  003BEC  0101               	movlb	1	; () banked
  2167  003BEE  6F73               	movwf	_data_steering& (0+255),b
  2168                           
  2169                           ; BSR set to: 1
  2170                           ;parcheggio.c: 363: data_test[0] = ((50 + Pmin + 5)-(n + 15));
  2171  003BF0  0E00               	movlw	0
  2172  003BF2  0100               	movlb	0	; () banked
  2173  003BF4  6FAD               	movwf	___fladd@a& (0+255),b
  2174  003BF6  0E00               	movlw	0
  2175  003BF8  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2176  003BFA  0E70               	movlw	112
  2177  003BFC  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2178  003BFE  0E41               	movlw	65
  2179  003C00  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2180  003C02  C138  F0A9         	movff	_n,___fladd@b
  2181  003C06  C139  F0AA         	movff	_n+1,___fladd@b+1
  2182  003C0A  C13A  F0AB         	movff	_n+2,___fladd@b+2
  2183  003C0E  C13B  F0AC         	movff	_n+3,___fladd@b+3
  2184  003C12  EC85  F018         	call	___fladd	;wreg free
  2185  003C16  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  2186  003C1A  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  2187  003C1E  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  2188  003C22  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  2189  003C26  EC03  F033         	call	___flneg	;wreg free
  2190  003C2A  C0BD  F1DC         	movff	?___flneg,_park_routine$3743
  2191  003C2E  C0BE  F1DD         	movff	?___flneg+1,_park_routine$3743+1
  2192  003C32  C0BF  F1DE         	movff	?___flneg+2,_park_routine$3743+2
  2193  003C36  C0C0  F1DF         	movff	?___flneg+3,_park_routine$3743+3
  2194                           
  2195                           ;parcheggio.c: 363: data_test[0] = ((50 + Pmin + 5)-(n + 15));
  2196  003C3A  C128  F0AD         	movff	_Pmin,___fladd@a
  2197  003C3E  C129  F0AE         	movff	_Pmin+1,___fladd@a+1
  2198  003C42  C12A  F0AF         	movff	_Pmin+2,___fladd@a+2
  2199  003C46  C12B  F0B0         	movff	_Pmin+3,___fladd@a+3
  2200  003C4A  C1DC  F0A9         	movff	_park_routine$3743,___fladd@b
  2201  003C4E  C1DD  F0AA         	movff	_park_routine$3743+1,___fladd@b+1
  2202  003C52  C1DE  F0AB         	movff	_park_routine$3743+2,___fladd@b+2
  2203  003C56  C1DF  F0AC         	movff	_park_routine$3743+3,___fladd@b+3
  2204  003C5A  EC85  F018         	call	___fladd	;wreg free
  2205  003C5E  C0A9  F1E0         	movff	?___fladd,_park_routine$3744
  2206  003C62  C0AA  F1E1         	movff	?___fladd+1,_park_routine$3744+1
  2207  003C66  C0AB  F1E2         	movff	?___fladd+2,_park_routine$3744+2
  2208  003C6A  C0AC  F1E3         	movff	?___fladd+3,_park_routine$3744+3
  2209                           
  2210                           ;parcheggio.c: 363: data_test[0] = ((50 + Pmin + 5)-(n + 15));
  2211  003C6E  0E00               	movlw	0
  2212  003C70  0100               	movlb	0	; () banked
  2213  003C72  6FAD               	movwf	___fladd@a& (0+255),b
  2214  003C74  0E00               	movlw	0
  2215  003C76  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2216  003C78  0E5C               	movlw	92
  2217  003C7A  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2218  003C7C  0E42               	movlw	66
  2219  003C7E  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2220  003C80  C1E0  F0A9         	movff	_park_routine$3744,___fladd@b
  2221  003C84  C1E1  F0AA         	movff	_park_routine$3744+1,___fladd@b+1
  2222  003C88  C1E2  F0AB         	movff	_park_routine$3744+2,___fladd@b+2
  2223  003C8C  C1E3  F0AC         	movff	_park_routine$3744+3,___fladd@b+3
  2224  003C90  EC85  F018         	call	___fladd	;wreg free
  2225  003C94  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2226  003C98  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2227  003C9C  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2228  003CA0  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2229  003CA4  ECBA  F02F         	call	___fltol	;wreg free
  2230  003CA8  0100               	movlb	0	; () banked
  2231  003CAA  51C1               	movf	?___fltol& (0+255),w,b
  2232  003CAC  0101               	movlb	1	; () banked
  2233  003CAE  6F7B               	movwf	_data_test& (0+255),b
  2234                           
  2235                           ; BSR set to: 1
  2236                           ;parcheggio.c: 364: asd = 1;
  2237  003CB0  8254               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2238                           
  2239                           ; BSR set to: 1
  2240                           ;parcheggio.c: 365: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2241  003CB2  0E0D               	movlw	13
  2242  003CB4  0100               	movlb	0	; () banked
  2243  003CB6  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2244  003CB8  0E00               	movlw	0
  2245  003CBA  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2246  003CBC  0E00               	movlw	0
  2247  003CBE  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2248  003CC0  0E00               	movlw	0
  2249  003CC2  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2250  003CC4  0E7B               	movlw	low _data_test
  2251  003CC6  0100               	movlb	0	; () banked
  2252  003CC8  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2253  003CCA  0E01               	movlw	high _data_test
  2254  003CCC  0100               	movlb	0	; () banked
  2255  003CCE  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2256  003CD0  0E08               	movlw	8
  2257  003CD2  0100               	movlb	0	; () banked
  2258  003CD4  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2259  003CD6  0EBC               	movlw	188
  2260  003CD8  0100               	movlb	0	; () banked
  2261  003CDA  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2262  003CDC  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2263                           
  2264                           ;parcheggio.c: 366: can_send();
  2265  003CE0  ECF8  F02D         	call	_can_send	;wreg free
  2266  003CE4                     l784:
  2267  003CE4  B254               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2268  003CE6  D7FE               	goto	l784
  2269                           
  2270                           ;parcheggio.c: 369: set_speed = 0;
  2271  003CE8  0E00               	movlw	0
  2272  003CEA  6E26               	movwf	_set_speed+1,c
  2273  003CEC  0E00               	movlw	0
  2274  003CEE  6E25               	movwf	_set_speed,c
  2275                           
  2276                           ;parcheggio.c: 370: data_steering[0] = 90;
  2277  003CF0  0E5A               	movlw	90
  2278  003CF2  0101               	movlb	1	; () banked
  2279  003CF4  6F73               	movwf	_data_steering& (0+255),b
  2280                           
  2281                           ;parcheggio.c: 371: data_brake [0] = 0;
  2282  003CF6  0E00               	movlw	0
  2283  003CF8  0101               	movlb	1	; () banked
  2284  003CFA  6F5B               	movwf	_data_brake& (0+255),b
  2285                           
  2286                           ;parcheggio.c: 372: data_brake [1] = 1;
  2287  003CFC  0E01               	movlw	1
  2288  003CFE  0101               	movlb	1	; () banked
  2289  003D00  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2290                           
  2291                           ; BSR set to: 1
  2292                           ;parcheggio.c: 373: can_send();
  2293  003D02  ECF8  F02D         	call	_can_send	;wreg free
  2294                           
  2295                           ;parcheggio.c: 374: delay_s(1);
  2296  003D06  0E01               	movlw	1
  2297  003D08  EC50  F033         	call	_delay_s
  2298                           
  2299                           ;parcheggio.c: 376: data_brake [0] = 3;
  2300  003D0C  0E03               	movlw	3
  2301  003D0E  0101               	movlb	1	; () banked
  2302  003D10  6F5B               	movwf	_data_brake& (0+255),b
  2303                           
  2304                           ; BSR set to: 1
  2305                           ;parcheggio.c: 377: data_brake [1] = 1;
  2306  003D12  0E01               	movlw	1
  2307  003D14  0101               	movlb	1	; () banked
  2308  003D16  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2309                           
  2310                           ; BSR set to: 1
  2311                           ;parcheggio.c: 378: set_speed = 1000;
  2312  003D18  0E03               	movlw	3
  2313  003D1A  6E26               	movwf	_set_speed+1,c
  2314  003D1C  0EE8               	movlw	232
  2315  003D1E  6E25               	movwf	_set_speed,c
  2316                           
  2317                           ; BSR set to: 1
  2318                           ;parcheggio.c: 379: dir = 0;
  2319  003D20  9654               	bcf	_dir/(0+8),_dir& (0+7),c
  2320                           
  2321                           ; BSR set to: 1
  2322                           ;parcheggio.c: 380: data_steering[0] = 180;
  2323  003D22  0EB4               	movlw	180
  2324  003D24  0101               	movlb	1	; () banked
  2325  003D26  6F73               	movwf	_data_steering& (0+255),b
  2326                           
  2327                           ; BSR set to: 1
  2328                           ;parcheggio.c: 381: data_test[0] = prima_sterzata;
  2329  003D28  C140  F0C1         	movff	_prima_sterzata,___fltol@f1
  2330  003D2C  C141  F0C2         	movff	_prima_sterzata+1,___fltol@f1+1
  2331  003D30  C142  F0C3         	movff	_prima_sterzata+2,___fltol@f1+2
  2332  003D34  C143  F0C4         	movff	_prima_sterzata+3,___fltol@f1+3
  2333  003D38  ECBA  F02F         	call	___fltol	;wreg free
  2334  003D3C  0100               	movlb	0	; () banked
  2335  003D3E  51C1               	movf	?___fltol& (0+255),w,b
  2336  003D40  0101               	movlb	1	; () banked
  2337  003D42  6F7B               	movwf	_data_test& (0+255),b
  2338                           
  2339                           ; BSR set to: 1
  2340                           ;parcheggio.c: 382: asd = 1;
  2341  003D44  8254               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2342                           
  2343                           ; BSR set to: 1
  2344                           ;parcheggio.c: 383: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2345  003D46  0E0D               	movlw	13
  2346  003D48  0100               	movlb	0	; () banked
  2347  003D4A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2348  003D4C  0E00               	movlw	0
  2349  003D4E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2350  003D50  0E00               	movlw	0
  2351  003D52  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2352  003D54  0E00               	movlw	0
  2353  003D56  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2354  003D58  0E7B               	movlw	low _data_test
  2355  003D5A  0100               	movlb	0	; () banked
  2356  003D5C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2357  003D5E  0E01               	movlw	high _data_test
  2358  003D60  0100               	movlb	0	; () banked
  2359  003D62  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2360  003D64  0E08               	movlw	8
  2361  003D66  0100               	movlb	0	; () banked
  2362  003D68  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2363  003D6A  0EBC               	movlw	188
  2364  003D6C  0100               	movlb	0	; () banked
  2365  003D6E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2366  003D70  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2367                           
  2368                           ;parcheggio.c: 384: can_send();
  2369  003D74  ECF8  F02D         	call	_can_send	;wreg free
  2370  003D78                     l787:
  2371  003D78  B254               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2372  003D7A  D7FE               	goto	l787
  2373                           
  2374                           ;parcheggio.c: 386: set_speed = 1000;
  2375  003D7C  0E03               	movlw	3
  2376  003D7E  6E26               	movwf	_set_speed+1,c
  2377  003D80  0EE8               	movlw	232
  2378  003D82  6E25               	movwf	_set_speed,c
  2379                           
  2380                           ;parcheggio.c: 387: data_steering[0] = 0;
  2381  003D84  0E00               	movlw	0
  2382  003D86  0101               	movlb	1	; () banked
  2383  003D88  6F73               	movwf	_data_steering& (0+255),b
  2384                           
  2385                           ; BSR set to: 1
  2386                           ;parcheggio.c: 388: asd = 1;
  2387  003D8A  8254               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2388                           
  2389                           ; BSR set to: 1
  2390                           ;parcheggio.c: 389: data_test[0] = prima_sterzata + 9;
  2391  003D8C  0E00               	movlw	0
  2392  003D8E  0100               	movlb	0	; () banked
  2393  003D90  6FAD               	movwf	___fladd@a& (0+255),b
  2394  003D92  0E00               	movlw	0
  2395  003D94  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2396  003D96  0E10               	movlw	16
  2397  003D98  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2398  003D9A  0E41               	movlw	65
  2399  003D9C  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2400  003D9E  C140  F0A9         	movff	_prima_sterzata,___fladd@b
  2401  003DA2  C141  F0AA         	movff	_prima_sterzata+1,___fladd@b+1
  2402  003DA6  C142  F0AB         	movff	_prima_sterzata+2,___fladd@b+2
  2403  003DAA  C143  F0AC         	movff	_prima_sterzata+3,___fladd@b+3
  2404  003DAE  EC85  F018         	call	___fladd	;wreg free
  2405  003DB2  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2406  003DB6  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2407  003DBA  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2408  003DBE  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2409  003DC2  ECBA  F02F         	call	___fltol	;wreg free
  2410  003DC6  0100               	movlb	0	; () banked
  2411  003DC8  51C1               	movf	?___fltol& (0+255),w,b
  2412  003DCA  0101               	movlb	1	; () banked
  2413  003DCC  6F7B               	movwf	_data_test& (0+255),b
  2414                           
  2415                           ; BSR set to: 1
  2416                           ;parcheggio.c: 390: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2417  003DCE  0E0D               	movlw	13
  2418  003DD0  0100               	movlb	0	; () banked
  2419  003DD2  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2420  003DD4  0E00               	movlw	0
  2421  003DD6  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2422  003DD8  0E00               	movlw	0
  2423  003DDA  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2424  003DDC  0E00               	movlw	0
  2425  003DDE  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2426  003DE0  0E7B               	movlw	low _data_test
  2427  003DE2  0100               	movlb	0	; () banked
  2428  003DE4  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2429  003DE6  0E01               	movlw	high _data_test
  2430  003DE8  0100               	movlb	0	; () banked
  2431  003DEA  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2432  003DEC  0E08               	movlw	8
  2433  003DEE  0100               	movlb	0	; () banked
  2434  003DF0  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2435  003DF2  0EBC               	movlw	188
  2436  003DF4  0100               	movlb	0	; () banked
  2437  003DF6  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2438  003DF8  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2439                           
  2440                           ;parcheggio.c: 391: can_send();
  2441  003DFC  ECF8  F02D         	call	_can_send	;wreg free
  2442  003E00                     l790:
  2443  003E00  B254               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2444  003E02  D7FE               	goto	l790
  2445                           
  2446                           ;parcheggio.c: 393: data_brake [0] = 0;
  2447  003E04  0E00               	movlw	0
  2448  003E06  0101               	movlb	1	; () banked
  2449  003E08  6F5B               	movwf	_data_brake& (0+255),b
  2450                           
  2451                           ;parcheggio.c: 394: data_brake [1] = 1;
  2452  003E0A  0E01               	movlw	1
  2453  003E0C  0101               	movlb	1	; () banked
  2454  003E0E  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2455                           
  2456                           ;parcheggio.c: 395: set_speed = 0;
  2457  003E10  0E00               	movlw	0
  2458  003E12  6E26               	movwf	_set_speed+1,c
  2459  003E14  0E00               	movlw	0
  2460  003E16  6E25               	movwf	_set_speed,c
  2461                           
  2462                           ;parcheggio.c: 396: data_steering[0] = 90;
  2463  003E18  0E5A               	movlw	90
  2464  003E1A  0101               	movlb	1	; () banked
  2465  003E1C  6F73               	movwf	_data_steering& (0+255),b
  2466                           
  2467                           ; BSR set to: 1
  2468                           ;parcheggio.c: 397: can_send();
  2469  003E1E  ECF8  F02D         	call	_can_send	;wreg free
  2470                           
  2471                           ;parcheggio.c: 398: delay_s(1);
  2472  003E22  0E01               	movlw	1
  2473  003E24  EC50  F033         	call	_delay_s
  2474                           
  2475                           ;parcheggio.c: 399: avvicinamento = 1;
  2476  003E28  8454               	bsf	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
  2477                           
  2478                           ;parcheggio.c: 400: if (sensor_distance [2] > 20) {
  2479  003E2A  5006               	movf	_sensor_distance+5,w,c	;volatile
  2480  003E2C  E104               	bnz	u10980
  2481  003E2E  0E15               	movlw	21
  2482  003E30  5C05               	subwf	_sensor_distance+4,w,c	;volatile
  2483  003E32  A0D8               	btfss	status,0,c
  2484  003E34  D016               	goto	l8304
  2485  003E36                     u10980:
  2486                           
  2487                           ;parcheggio.c: 401: data_brake [0] = 3;
  2488  003E36  0E03               	movlw	3
  2489  003E38  0101               	movlb	1	; () banked
  2490  003E3A  6F5B               	movwf	_data_brake& (0+255),b
  2491                           
  2492                           ;parcheggio.c: 402: data_brake [1] = 1;
  2493  003E3C  0E01               	movlw	1
  2494  003E3E  0101               	movlb	1	; () banked
  2495  003E40  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2496                           
  2497                           ;parcheggio.c: 403: set_speed = 500;
  2498  003E42  0E01               	movlw	1
  2499  003E44  6E26               	movwf	_set_speed+1,c
  2500  003E46  0EF4               	movlw	244
  2501  003E48  6E25               	movwf	_set_speed,c
  2502                           
  2503                           ;parcheggio.c: 404: data_steering[0] = 90;
  2504  003E4A  0E5A               	movlw	90
  2505  003E4C  0101               	movlb	1	; () banked
  2506  003E4E  6F73               	movwf	_data_steering& (0+255),b
  2507                           
  2508                           ; BSR set to: 1
  2509                           ;parcheggio.c: 405: dir = 1;
  2510  003E50  8654               	bsf	_dir/(0+8),_dir& (0+7),c
  2511                           
  2512                           ; BSR set to: 1
  2513                           ;parcheggio.c: 406: can_send();
  2514  003E52  ECF8  F02D         	call	_can_send	;wreg free
  2515  003E56                     l8302:
  2516  003E56  5006               	movf	_sensor_distance+5,w,c	;volatile
  2517  003E58  E1FE               	bnz	l8302
  2518  003E5A  0E15               	movlw	21
  2519  003E5C  5C05               	subwf	_sensor_distance+4,w,c	;volatile
  2520  003E5E  B0D8               	btfsc	status,0,c
  2521  003E60  D7FA               	goto	l8302
  2522  003E62                     l8304:
  2523                           
  2524                           ;parcheggio.c: 408: }
  2525                           ;parcheggio.c: 409: data_brake [0] = 0;
  2526  003E62  0E00               	movlw	0
  2527  003E64  0101               	movlb	1	; () banked
  2528  003E66  6F5B               	movwf	_data_brake& (0+255),b
  2529                           
  2530                           ;parcheggio.c: 410: data_brake [1] = 1;
  2531  003E68  0E01               	movlw	1
  2532  003E6A  0101               	movlb	1	; () banked
  2533  003E6C  6F5C               	movwf	(_data_brake+1)& (0+255),b
  2534                           
  2535                           ;parcheggio.c: 411: set_speed = 0;
  2536  003E6E  0E00               	movlw	0
  2537  003E70  6E26               	movwf	_set_speed+1,c
  2538  003E72  0E00               	movlw	0
  2539  003E74  6E25               	movwf	_set_speed,c
  2540                           
  2541                           ;parcheggio.c: 412: data_steering[0] = 90;
  2542  003E76  0E5A               	movlw	90
  2543  003E78  0101               	movlb	1	; () banked
  2544  003E7A  6F73               	movwf	_data_steering& (0+255),b
  2545                           
  2546                           ; BSR set to: 1
  2547                           ;parcheggio.c: 413: dir = 0;
  2548  003E7C  9654               	bcf	_dir/(0+8),_dir& (0+7),c
  2549                           
  2550                           ; BSR set to: 1
  2551                           ;parcheggio.c: 414: can_send();
  2552  003E7E  ECF8  F02D         	call	_can_send	;wreg free
  2553                           
  2554                           ;parcheggio.c: 415: delay_s(1);
  2555  003E82  0E01               	movlw	1
  2556  003E84  EC50  F033         	call	_delay_s
  2557                           
  2558                           ;parcheggio.c: 416: data[0] = 3;
  2559  003E88  0E03               	movlw	3
  2560  003E8A  0101               	movlb	1	; () banked
  2561  003E8C  6F53               	movwf	_data& (0+255),b
  2562  003E8E                     l8314:
  2563  003E8E  EC66  F033         	call	_CANisTxReady	;wreg free
  2564  003E92  0900               	iorlw	0
  2565  003E94  B4D8               	btfsc	status,2,c
  2566  003E96  D7FB               	goto	l8314
  2567                           
  2568                           ;parcheggio.c: 418: CANsendMessage(0b00000001011, data, 8, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2569  003E98  0E0B               	movlw	11
  2570  003E9A  0100               	movlb	0	; () banked
  2571  003E9C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2572  003E9E  0E00               	movlw	0
  2573  003EA0  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2574  003EA2  0E00               	movlw	0
  2575  003EA4  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2576  003EA6  0E00               	movlw	0
  2577  003EA8  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2578  003EAA  0E53               	movlw	low _data
  2579  003EAC  0100               	movlb	0	; () banked
  2580  003EAE  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2581  003EB0  0E01               	movlw	high _data
  2582  003EB2  0100               	movlb	0	; () banked
  2583  003EB4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2584  003EB6  0E08               	movlw	8
  2585  003EB8  0100               	movlb	0	; () banked
  2586  003EBA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2587  003EBC  0EBC               	movlw	188
  2588  003EBE  0100               	movlb	0	; () banked
  2589  003EC0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2590  003EC2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2591                           
  2592                           ;parcheggio.c: 419: delay_ms(100);
  2593  003EC6  0E00               	movlw	0
  2594  003EC8  0100               	movlb	0	; () banked
  2595  003ECA  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2596  003ECC  0E64               	movlw	100
  2597  003ECE  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  2598  003ED0  ECE6  F032         	call	_delay_ms	;wreg free
  2599  003ED4  00FF               	reset		;# 
  2600  003ED6                     l8320:
  2601  003ED6  AA81               	btfss	3969,5,c	;volatile
  2602  003ED8  0012               	return	
  2603  003EDA  A054               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2604  003EDC  0012               	return	
  2605  003EDE  AA55               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2606  003EE0  0012               	return	
  2607  003EE2  D640               	goto	l783
  2608  003EE4                     __end_of_park_routine:
  2609                           	opt stack 0
  2610                           tblptru	equ	0xFF8
  2611                           tblptrh	equ	0xFF7
  2612                           tblptrl	equ	0xFF6
  2613                           tablat	equ	0xFF5
  2614                           postinc0	equ	0xFEE
  2615                           wreg	equ	0xFE8
  2616                           postdec1	equ	0xFE5
  2617                           fsr1l	equ	0xFE1
  2618                           postinc2	equ	0xFDE
  2619                           postdec2	equ	0xFDD
  2620                           status	equ	0xFD8
  2621                           
  2622 ;; *************** function _parallelo *****************
  2623 ;; Defined at:
  2624 ;;		line 453 in file "parcheggio.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;		None
  2627 ;; Auto vars:     Size  Location     Type
  2628 ;;		None
  2629 ;; Return value:  Size  Location     Type
  2630 ;;		None               void
  2631 ;; Registers used:
  2632 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2633 ;; Tracked objects:
  2634 ;;		On entry : 0/0
  2635 ;;		On exit  : 0/0
  2636 ;;		Unchanged: 0/0
  2637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2640 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2641 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  2642 ;;Total ram usage:        2 bytes
  2643 ;; Hardware stack levels used:    1
  2644 ;; Hardware stack levels required when called:    8
  2645 ;; This function calls:
  2646 ;;		___fladd
  2647 ;;		___fldiv
  2648 ;;		___flge
  2649 ;;		___flmul
  2650 ;;		___fltol
  2651 ;;		___xxtofl
  2652 ;;		_abs
  2653 ;;		_asin
  2654 ;;		_can_send
  2655 ;;		_sqrt
  2656 ;; This function is called by:
  2657 ;;		_park_search
  2658 ;;		_park_routine
  2659 ;; This function uses a non-reentrant model
  2660 ;;
  2661                           
  2662                           	psect	text3
  2663  005036                     __ptext3:
  2664                           	opt stack 0
  2665  005036                     _parallelo:
  2666                           	opt stack 21
  2667                           
  2668                           ;parcheggio.c: 454: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  2669                           
  2670                           ;incstack = 0
  2671  005036  EE20  F003         	lfsr	2,_sensor_distance+2	;volatile
  2672  00503A  CFDE F1B4          	movff	postinc2,??_parallelo
  2673  00503E  CFDD F1B5          	movff	postdec2,??_parallelo+1
  2674  005042  0101               	movlb	1	; () banked
  2675  005044  1FB4               	comf	??_parallelo& (0+255),f,b
  2676  005046  1FB5               	comf	(??_parallelo+1)& (0+255),f,b
  2677  005048  4BB4               	infsnz	??_parallelo& (0+255),f,b
  2678  00504A  2BB5               	incf	(??_parallelo+1)& (0+255),f,b
  2679  00504C  5001               	movf	_sensor_distance,w,c	;volatile
  2680  00504E  0101               	movlb	1	; () banked
  2681  005050  25B4               	addwf	??_parallelo& (0+255),w,b
  2682  005052  0100               	movlb	0	; () banked
  2683  005054  6F77               	movwf	abs@a& (0+255),b
  2684  005056  5002               	movf	_sensor_distance+1,w,c	;volatile
  2685  005058  0101               	movlb	1	; () banked
  2686  00505A  21B5               	addwfc	(??_parallelo+1)& (0+255),w,b
  2687  00505C  0100               	movlb	0	; () banked
  2688  00505E  6F78               	movwf	(abs@a+1)& (0+255),b
  2689  005060  EC3A  F033         	call	_abs	;wreg free
  2690  005064  0100               	movlb	0	; () banked
  2691  005066  C077  F0CB         	movff	?_abs,___xxtofl@val
  2692  00506A  0100               	movlb	0	; () banked
  2693  00506C  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  2694  005070  0100               	movlb	0	; () banked
  2695  005072  0E00               	movlw	0
  2696  005074  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2697  005076  0EFF               	movlw	-1
  2698  005078  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  2699  00507A  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  2700  00507C  0E01               	movlw	1
  2701  00507E  EC86  F02A         	call	___xxtofl
  2702  005082  C0CB  F011         	movff	?___xxtofl,_alignment_gap
  2703  005086  C0CC  F012         	movff	?___xxtofl+1,_alignment_gap+1
  2704  00508A  C0CD  F013         	movff	?___xxtofl+2,_alignment_gap+2
  2705  00508E  C0CE  F014         	movff	?___xxtofl+3,_alignment_gap+3
  2706                           
  2707                           ;parcheggio.c: 455: if (alignment_gap < 20) {
  2708  005092  C011  F0C5         	movff	_alignment_gap,___flge@ff1
  2709  005096  C012  F0C6         	movff	_alignment_gap+1,___flge@ff1+1
  2710  00509A  C013  F0C7         	movff	_alignment_gap+2,___flge@ff1+2
  2711  00509E  C014  F0C8         	movff	_alignment_gap+3,___flge@ff1+3
  2712  0050A2  0E00               	movlw	0
  2713  0050A4  0100               	movlb	0	; () banked
  2714  0050A6  6FC9               	movwf	___flge@ff2& (0+255),b
  2715  0050A8  0E00               	movlw	0
  2716  0050AA  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  2717  0050AC  0EA0               	movlw	160
  2718  0050AE  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  2719  0050B0  0E41               	movlw	65
  2720  0050B2  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  2721  0050B4  EC30  F02D         	call	___flge	;wreg free
  2722  0050B8  0100               	movlb	0	; () banked
  2723  0050BA  B0D8               	btfsc	status,0,c
  2724  0050BC  D0F5               	goto	l826
  2725                           
  2726                           ; BSR set to: 0
  2727                           ;parcheggio.c: 456: if ((sensor_distance[0] < 30) && (sensor_distance[1] < 30)) {
  2728  0050BE  5002               	movf	_sensor_distance+1,w,c	;volatile
  2729  0050C0  E103               	bnz	u10611
  2730  0050C2  0E1E               	movlw	30
  2731  0050C4  5C01               	subwf	_sensor_distance,w,c	;volatile
  2732  0050C6  B0D8               	btfsc	status,0,c
  2733  0050C8                     u10611:
  2734  0050C8  D0E1               	goto	l8012
  2735                           
  2736                           ; BSR set to: 0
  2737  0050CA  5004               	movf	_sensor_distance+3,w,c	;volatile
  2738  0050CC  E103               	bnz	u10621
  2739  0050CE  0E1E               	movlw	30
  2740  0050D0  5C03               	subwf	_sensor_distance+2,w,c	;volatile
  2741  0050D2  B0D8               	btfsc	status,0,c
  2742  0050D4                     u10621:
  2743  0050D4  D0DB               	goto	l8012
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;parcheggio.c: 460: x = ((100) + (alignment_gap * alignment_gap));
  2747  0050D6  C011  F094         	movff	_alignment_gap,___flmul@a
  2748  0050DA  C012  F095         	movff	_alignment_gap+1,___flmul@a+1
  2749  0050DE  C013  F096         	movff	_alignment_gap+2,___flmul@a+2
  2750  0050E2  C014  F097         	movff	_alignment_gap+3,___flmul@a+3
  2751  0050E6  C011  F090         	movff	_alignment_gap,___flmul@b
  2752  0050EA  C012  F091         	movff	_alignment_gap+1,___flmul@b+1
  2753  0050EE  C013  F092         	movff	_alignment_gap+2,___flmul@b+2
  2754  0050F2  C014  F093         	movff	_alignment_gap+3,___flmul@b+3
  2755  0050F6  ECD9  F01A         	call	___flmul	;wreg free
  2756  0050FA  C090  F0A9         	movff	?___flmul,___fladd@b
  2757  0050FE  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  2758  005102  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  2759  005106  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  2760  00510A  0E00               	movlw	0
  2761  00510C  0100               	movlb	0	; () banked
  2762  00510E  6FAD               	movwf	___fladd@a& (0+255),b
  2763  005110  0E00               	movlw	0
  2764  005112  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2765  005114  0EC8               	movlw	200
  2766  005116  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2767  005118  0E42               	movlw	66
  2768  00511A  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2769  00511C  EC85  F018         	call	___fladd	;wreg free
  2770  005120  C0A9  F0DA         	movff	?___fladd,_x
  2771  005124  C0AA  F0DB         	movff	?___fladd+1,_x+1
  2772  005128  C0AB  F0DC         	movff	?___fladd+2,_x+2
  2773  00512C  C0AC  F0DD         	movff	?___fladd+3,_x+3
  2774                           
  2775                           ;parcheggio.c: 461: x = sqrt(x);
  2776  005130  C0DA  F0C1         	movff	_x,sqrt@a
  2777  005134  C0DB  F0C2         	movff	_x+1,sqrt@a+1
  2778  005138  C0DC  F0C3         	movff	_x+2,sqrt@a+2
  2779  00513C  C0DD  F0C4         	movff	_x+3,sqrt@a+3
  2780  005140  EC72  F01F         	call	_sqrt	;wreg free
  2781  005144  C0C1  F0DA         	movff	?_sqrt,_x
  2782  005148  C0C2  F0DB         	movff	?_sqrt+1,_x+1
  2783  00514C  C0C3  F0DC         	movff	?_sqrt+2,_x+2
  2784  005150  C0C4  F0DD         	movff	?_sqrt+3,_x+3
  2785                           
  2786                           ;parcheggio.c: 462: z = alignment_gap / x;
  2787  005154  C011  F077         	movff	_alignment_gap,___fldiv@b
  2788  005158  C012  F078         	movff	_alignment_gap+1,___fldiv@b+1
  2789  00515C  C013  F079         	movff	_alignment_gap+2,___fldiv@b+2
  2790  005160  C014  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  2791  005164  C0DA  F07B         	movff	_x,___fldiv@a
  2792  005168  C0DB  F07C         	movff	_x+1,___fldiv@a+1
  2793  00516C  C0DC  F07D         	movff	_x+2,___fldiv@a+2
  2794  005170  C0DD  F07E         	movff	_x+3,___fldiv@a+3
  2795  005174  EC57  F021         	call	___fldiv	;wreg free
  2796  005178  C077  F015         	movff	?___fldiv,_z
  2797  00517C  C078  F016         	movff	?___fldiv+1,_z+1
  2798  005180  C079  F017         	movff	?___fldiv+2,_z+2
  2799  005184  C07A  F018         	movff	?___fldiv+3,_z+3
  2800                           
  2801                           ;parcheggio.c: 463: z = asin(z);
  2802  005188  C015  F0D5         	movff	_z,asin@x
  2803  00518C  C016  F0D6         	movff	_z+1,asin@x+1
  2804  005190  C017  F0D7         	movff	_z+2,asin@x+2
  2805  005194  C018  F0D8         	movff	_z+3,asin@x+3
  2806  005198  EC92  F026         	call	_asin	;wreg free
  2807  00519C  C0D5  F015         	movff	?_asin,_z
  2808  0051A0  C0D6  F016         	movff	?_asin+1,_z+1
  2809  0051A4  C0D7  F017         	movff	?_asin+2,_z+2
  2810  0051A8  C0D8  F018         	movff	?_asin+3,_z+3
  2811                           
  2812                           ;parcheggio.c: 464: z = z / 3.14159265358979323846 * 180;
  2813  0051AC  0EDB               	movlw	219
  2814  0051AE  0100               	movlb	0	; () banked
  2815  0051B0  6F7B               	movwf	___fldiv@a& (0+255),b
  2816  0051B2  0E0F               	movlw	15
  2817  0051B4  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2818  0051B6  0E49               	movlw	73
  2819  0051B8  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2820  0051BA  0E40               	movlw	64
  2821  0051BC  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2822  0051BE  C015  F077         	movff	_z,___fldiv@b
  2823  0051C2  C016  F078         	movff	_z+1,___fldiv@b+1
  2824  0051C6  C017  F079         	movff	_z+2,___fldiv@b+2
  2825  0051CA  C018  F07A         	movff	_z+3,___fldiv@b+3
  2826  0051CE  EC57  F021         	call	___fldiv	;wreg free
  2827  0051D2  C077  F090         	movff	?___fldiv,___flmul@b
  2828  0051D6  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  2829  0051DA  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  2830  0051DE  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  2831  0051E2  0E00               	movlw	0
  2832  0051E4  0100               	movlb	0	; () banked
  2833  0051E6  6F94               	movwf	___flmul@a& (0+255),b
  2834  0051E8  0E00               	movlw	0
  2835  0051EA  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2836  0051EC  0E34               	movlw	52
  2837  0051EE  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2838  0051F0  0E43               	movlw	67
  2839  0051F2  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2840  0051F4  ECD9  F01A         	call	___flmul	;wreg free
  2841  0051F8  C090  F015         	movff	?___flmul,_z
  2842  0051FC  C091  F016         	movff	?___flmul+1,_z+1
  2843  005200  C092  F017         	movff	?___flmul+2,_z+2
  2844  005204  C093  F018         	movff	?___flmul+3,_z+3
  2845                           
  2846                           ;parcheggio.c: 465: data_correction[0] = z;
  2847  005208  C015  F0C1         	movff	_z,___fltol@f1
  2848  00520C  C016  F0C2         	movff	_z+1,___fltol@f1+1
  2849  005210  C017  F0C3         	movff	_z+2,___fltol@f1+2
  2850  005214  C018  F0C4         	movff	_z+3,___fltol@f1+3
  2851  005218  ECBA  F02F         	call	___fltol	;wreg free
  2852  00521C  0100               	movlb	0	; () banked
  2853  00521E  51C1               	movf	?___fltol& (0+255),w,b
  2854  005220  0101               	movlb	1	; () banked
  2855  005222  6F63               	movwf	_data_correction& (0+255),b
  2856                           
  2857                           ; BSR set to: 1
  2858                           ;parcheggio.c: 467: if (sensor_distance[0] < sensor_distance[1]) {
  2859  005224  5003               	movf	_sensor_distance+2,w,c	;volatile
  2860  005226  5C01               	subwf	_sensor_distance,w,c	;volatile
  2861  005228  5004               	movf	_sensor_distance+3,w,c	;volatile
  2862  00522A  5802               	subwfb	_sensor_distance+1,w,c	;volatile
  2863  00522C  B0D8               	btfsc	status,0,c
  2864  00522E  D002               	goto	l8004
  2865                           
  2866                           ; BSR set to: 1
  2867                           ;parcheggio.c: 468: data_correction[1] = 0;
  2868  005230  0E00               	movlw	0
  2869  005232  D001               	goto	L1
  2870  005234                     l8004:
  2871                           
  2872                           ; BSR set to: 1
  2873                           ;parcheggio.c: 470: data_correction[1] = 1;
  2874  005234  0E01               	movlw	1
  2875  005236                     L1:
  2876  005236  0101               	movlb	1	; () banked
  2877  005238  6F64               	movwf	(_data_correction+1)& (0+255),b
  2878                           
  2879                           ; BSR set to: 1
  2880                           ;parcheggio.c: 471: }
  2881                           ;parcheggio.c: 472: if ((old_alignment_gap != alignment_gap) || (old_data_correction != 
      +                          data_correction[1])) {
  2882                           
  2883                           ; BSR set to: 1
  2884  00523A  5011               	movf	_alignment_gap,w,c
  2885  00523C  0101               	movlb	1	; () banked
  2886  00523E  193C               	xorwf	_old_alignment_gap& (0+255),w,b
  2887  005240  E114               	bnz	l832
  2888  005242  5012               	movf	_alignment_gap+1,w,c
  2889  005244  0101               	movlb	1	; () banked
  2890  005246  193D               	xorwf	(_old_alignment_gap+1)& (0+255),w,b
  2891  005248  E110               	bnz	l832
  2892  00524A  5013               	movf	_alignment_gap+2,w,c
  2893  00524C  0101               	movlb	1	; () banked
  2894  00524E  193E               	xorwf	(_old_alignment_gap+2)& (0+255),w,b
  2895  005250  E10C               	bnz	l832
  2896  005252  5014               	movf	_alignment_gap+3,w,c
  2897  005254  0101               	movlb	1	; () banked
  2898  005256  193F               	xorwf	(_old_alignment_gap+3)& (0+255),w,b
  2899  005258  A4D8               	btfss	status,2,c
  2900  00525A  D007               	goto	l832
  2901                           
  2902                           ; BSR set to: 1
  2903  00525C  0E00               	movlw	0
  2904  00525E  B455               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2905  005260  0E01               	movlw	1
  2906  005262  0101               	movlb	1	; () banked
  2907  005264  1964               	xorwf	(_data_correction+1)& (0+255),w,b
  2908  005266  B4D8               	btfsc	status,2,c
  2909  005268  0012               	return	
  2910  00526A                     l832:
  2911                           
  2912                           ; BSR set to: 1
  2913                           ;parcheggio.c: 473: old_alignment_gap = alignment_gap;
  2914  00526A  C011  F13C         	movff	_alignment_gap,_old_alignment_gap
  2915  00526E  C012  F13D         	movff	_alignment_gap+1,_old_alignment_gap+1
  2916  005272  C013  F13E         	movff	_alignment_gap+2,_old_alignment_gap+2
  2917  005276  C014  F13F         	movff	_alignment_gap+3,_old_alignment_gap+3
  2918                           
  2919                           ;parcheggio.c: 474: old_data_correction = data_correction[1];
  2920  00527A  0101               	movlb	1	; () banked
  2921  00527C  A164               	btfss	(_data_correction+1)& (0+255),0,b
  2922  00527E  D002               	goto	u10660
  2923  005280  8455               	bsf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2924  005282  D001               	goto	l8010
  2925  005284                     u10660:
  2926  005284  9455               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2927  005286                     l8010:
  2928                           
  2929                           ;parcheggio.c: 475: can_send();
  2930  005286  ECF8  F02D         	call	_can_send	;wreg free
  2931                           
  2932                           ;parcheggio.c: 476: }
  2933                           ;parcheggio.c: 477: } else if (data_correction[0] != old_data_correction) {
  2934  00528A  0012               	return	
  2935  00528C                     l8012:
  2936  00528C  0E00               	movlw	0
  2937  00528E  B455               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2938  005290  0E01               	movlw	1
  2939  005292  0101               	movlb	1	; () banked
  2940  005294  1963               	xorwf	_data_correction& (0+255),w,b
  2941  005296  B4D8               	btfsc	status,2,c
  2942  005298  0012               	return	
  2943                           
  2944                           ; BSR set to: 1
  2945                           ;parcheggio.c: 478: data_correction[0] = 0;
  2946  00529A  0E00               	movlw	0
  2947  00529C  0101               	movlb	1	; () banked
  2948  00529E  6F63               	movwf	_data_correction& (0+255),b
  2949                           
  2950                           ; BSR set to: 1
  2951                           ;parcheggio.c: 479: old_data_correction = 0;
  2952  0052A0  9455               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2953                           
  2954                           ; BSR set to: 1
  2955                           ;parcheggio.c: 480: can_send();
  2956  0052A2  ECF8  F02D         	call	_can_send	;wreg free
  2957                           
  2958                           ;parcheggio.c: 481: }
  2959                           ;parcheggio.c: 482: } else {
  2960  0052A6  0012               	return	
  2961  0052A8                     l826:
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;parcheggio.c: 483: if (old_data_correction != 0) {
  2965  0052A8  A455               	btfss	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2966  0052AA  0012               	return	
  2967                           
  2968                           ; BSR set to: 0
  2969                           ;parcheggio.c: 484: data_correction[0] = 0;
  2970  0052AC  0E00               	movlw	0
  2971  0052AE  0101               	movlb	1	; () banked
  2972  0052B0  6F63               	movwf	_data_correction& (0+255),b
  2973                           
  2974                           ; BSR set to: 1
  2975                           ;parcheggio.c: 485: old_data_correction = 0;
  2976  0052B2  9455               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2977                           
  2978                           ; BSR set to: 1
  2979                           ;parcheggio.c: 486: can_send();
  2980  0052B4  ECF8  F02D         	call	_can_send	;wreg free
  2981  0052B8  0012               	return	
  2982  0052BA                     __end_of_parallelo:
  2983                           	opt stack 0
  2984                           tblptru	equ	0xFF8
  2985                           tblptrh	equ	0xFF7
  2986                           tblptrl	equ	0xFF6
  2987                           tablat	equ	0xFF5
  2988                           postinc0	equ	0xFEE
  2989                           wreg	equ	0xFE8
  2990                           postdec1	equ	0xFE5
  2991                           fsr1l	equ	0xFE1
  2992                           postinc2	equ	0xFDE
  2993                           postdec2	equ	0xFDD
  2994                           status	equ	0xFD8
  2995                           
  2996 ;; *************** function _can_send *****************
  2997 ;; Defined at:
  2998 ;;		line 424 in file "parcheggio.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;		None
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  data_correct    0   39[BANK0 ] unsigned char [0]
  3003 ;; Return value:  Size  Location     Type
  3004 ;;		None               void
  3005 ;; Registers used:
  3006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3016 ;;Total ram usage:        0 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    5
  3019 ;; This function calls:
  3020 ;;		_CANisTxReady
  3021 ;;		_CANsendMessage
  3022 ;; This function is called by:
  3023 ;;		_park_routine
  3024 ;;		_parallelo
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text4
  3029  005BF0                     __ptext4:
  3030                           	opt stack 0
  3031  005BF0                     _can_send:
  3032                           	opt stack 23
  3033                           
  3034                           ;parcheggio.c: 425: if (PORTBbits.RB5 == 1) {
  3035                           
  3036                           ;incstack = 0
  3037  005BF0  AA81               	btfss	3969,5,c	;volatile
  3038  005BF2  D062               	goto	l7856
  3039  005BF4                     l7836:
  3040  005BF4  EC66  F033         	call	_CANisTxReady	;wreg free
  3041  005BF8  06E8               	decf	wreg,f,c
  3042  005BFA  A4D8               	btfss	status,2,c
  3043  005BFC  D7FB               	goto	l7836
  3044                           
  3045                           ;parcheggio.c: 428: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3046  005BFE  0E05               	movlw	5
  3047  005C00  0100               	movlb	0	; () banked
  3048  005C02  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3049  005C04  0E00               	movlw	0
  3050  005C06  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3051  005C08  0E00               	movlw	0
  3052  005C0A  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3053  005C0C  0E00               	movlw	0
  3054  005C0E  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3055  005C10  0E73               	movlw	low _data_steering
  3056  005C12  0100               	movlb	0	; () banked
  3057  005C14  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3058  005C16  0E01               	movlw	high _data_steering
  3059  005C18  0100               	movlb	0	; () banked
  3060  005C1A  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3061  005C1C  0E08               	movlw	8
  3062  005C1E  0100               	movlb	0	; () banked
  3063  005C20  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3064  005C22  0EBC               	movlw	188
  3065  005C24  0100               	movlb	0	; () banked
  3066  005C26  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3067  005C28  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3068                           
  3069                           ;parcheggio.c: 431: data_speed[0] = set_speed;
  3070  005C2C  C025  F16B         	movff	_set_speed,_data_speed
  3071                           
  3072                           ;parcheggio.c: 432: data_speed[1] = (set_speed >> 8);
  3073  005C30  5026               	movf	_set_speed+1,w,c
  3074  005C32  0101               	movlb	1	; () banked
  3075  005C34  6F6C               	movwf	(_data_speed+1)& (0+255),b
  3076                           
  3077                           ; BSR set to: 1
  3078                           ;parcheggio.c: 433: data_speed[2] = dir;
  3079  005C36  0E00               	movlw	0
  3080  005C38  B654               	btfsc	_dir/(0+8),_dir& (0+7),c
  3081  005C3A  0E01               	movlw	1
  3082  005C3C  0101               	movlb	1	; () banked
  3083  005C3E  6F6D               	movwf	(_data_speed+2)& (0+255),b
  3084  005C40                     l7846:
  3085  005C40  EC66  F033         	call	_CANisTxReady	;wreg free
  3086  005C44  06E8               	decf	wreg,f,c
  3087  005C46  A4D8               	btfss	status,2,c
  3088  005C48  D7FB               	goto	l7846
  3089                           
  3090                           ;parcheggio.c: 435: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3091  005C4A  0E03               	movlw	3
  3092  005C4C  0100               	movlb	0	; () banked
  3093  005C4E  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3094  005C50  0E00               	movlw	0
  3095  005C52  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3096  005C54  0E00               	movlw	0
  3097  005C56  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3098  005C58  0E00               	movlw	0
  3099  005C5A  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3100  005C5C  0E6B               	movlw	low _data_speed
  3101  005C5E  0100               	movlb	0	; () banked
  3102  005C60  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3103  005C62  0E01               	movlw	high _data_speed
  3104  005C64  0100               	movlb	0	; () banked
  3105  005C66  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3106  005C68  0E08               	movlw	8
  3107  005C6A  0100               	movlb	0	; () banked
  3108  005C6C  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3109  005C6E  0EBC               	movlw	188
  3110  005C70  0100               	movlb	0	; () banked
  3111  005C72  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3112  005C74  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3113                           
  3114                           ;parcheggio.c: 438: data_brake[1] = 0;
  3115  005C78  0E00               	movlw	0
  3116  005C7A  0101               	movlb	1	; () banked
  3117  005C7C  6F5C               	movwf	(_data_brake+1)& (0+255),b
  3118  005C7E                     l7852:
  3119  005C7E  EC66  F033         	call	_CANisTxReady	;wreg free
  3120  005C82  06E8               	decf	wreg,f,c
  3121  005C84  A4D8               	btfss	status,2,c
  3122  005C86  D7FB               	goto	l7852
  3123                           
  3124                           ;parcheggio.c: 440: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3125  005C88  0E04               	movlw	4
  3126  005C8A  0100               	movlb	0	; () banked
  3127  005C8C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3128  005C8E  0E00               	movlw	0
  3129  005C90  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3130  005C92  0E00               	movlw	0
  3131  005C94  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3132  005C96  0E00               	movlw	0
  3133  005C98  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3134  005C9A  0E5B               	movlw	low _data_brake
  3135  005C9C  0100               	movlb	0	; () banked
  3136  005C9E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3137  005CA0  0E01               	movlw	high _data_brake
  3138  005CA2  0100               	movlb	0	; () banked
  3139  005CA4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3140  005CA6  0E08               	movlw	8
  3141  005CA8  0100               	movlb	0	; () banked
  3142  005CAA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3143  005CAC  0EBC               	movlw	188
  3144  005CAE  0100               	movlb	0	; () banked
  3145  005CB0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3146  005CB2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3147                           
  3148                           ;parcheggio.c: 441: } else {
  3149  005CB6  0012               	return	
  3150  005CB8                     l7856:
  3151  005CB8  EC66  F033         	call	_CANisTxReady	;wreg free
  3152  005CBC  06E8               	decf	wreg,f,c
  3153  005CBE  A4D8               	btfss	status,2,c
  3154  005CC0  D7FB               	goto	l7856
  3155                           
  3156                           ;parcheggio.c: 443: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3157  005CC2  0E0E               	movlw	14
  3158  005CC4  0100               	movlb	0	; () banked
  3159  005CC6  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3160  005CC8  0E00               	movlw	0
  3161  005CCA  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3162  005CCC  0E00               	movlw	0
  3163  005CCE  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3164  005CD0  0E00               	movlw	0
  3165  005CD2  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3166  005CD4  0E63               	movlw	low _data_correction
  3167  005CD6  0100               	movlb	0	; () banked
  3168  005CD8  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3169  005CDA  0E01               	movlw	high _data_correction
  3170  005CDC  0100               	movlb	0	; () banked
  3171  005CDE  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3172  005CE0  0E08               	movlw	8
  3173  005CE2  0100               	movlb	0	; () banked
  3174  005CE4  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3175  005CE6  0EBC               	movlw	188
  3176  005CE8  0100               	movlb	0	; () banked
  3177  005CEA  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3178  005CEC  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3179                           
  3180                           ;parcheggio.c: 445: unsigned char data_correction1[];
  3181                           ;parcheggio.c: 446: data_correction1[0] = data_correction[0];
  3182  005CF0  EE20  F087         	lfsr	2,can_send@data_correction1
  3183  005CF4  C163  FFDF         	movff	_data_correction,indf2
  3184                           
  3185                           ;parcheggio.c: 447: data_correction1[1] = 0;
  3186  005CF8  0E00               	movlw	0
  3187  005CFA  CFE8 F088          	movff	wreg,can_send@data_correction1+1
  3188  005CFE                     l7864:
  3189  005CFE  EC66  F033         	call	_CANisTxReady	;wreg free
  3190  005D02  06E8               	decf	wreg,f,c
  3191  005D04  A4D8               	btfss	status,2,c
  3192  005D06  D7FB               	goto	l7864
  3193                           
  3194                           ;parcheggio.c: 449: CANsendMessage(0xAA, data_correction1, 8, CAN_CONFIG_STD_MSG & CAN_N
      +                          ORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3195  005D08  0EAA               	movlw	170
  3196  005D0A  0100               	movlb	0	; () banked
  3197  005D0C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3198  005D0E  0E00               	movlw	0
  3199  005D10  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3200  005D12  0E00               	movlw	0
  3201  005D14  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3202  005D16  0E00               	movlw	0
  3203  005D18  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3204  005D1A  0E87               	movlw	low can_send@data_correction1
  3205  005D1C  0100               	movlb	0	; () banked
  3206  005D1E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3207  005D20  0E00               	movlw	high can_send@data_correction1
  3208  005D22  0100               	movlb	0	; () banked
  3209  005D24  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3210  005D26  0E08               	movlw	8
  3211  005D28  0100               	movlb	0	; () banked
  3212  005D2A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3213  005D2C  0EBC               	movlw	188
  3214  005D2E  0100               	movlb	0	; () banked
  3215  005D30  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3216  005D32  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3217  005D36  0012               	return	
  3218  005D38                     __end_of_can_send:
  3219                           	opt stack 0
  3220                           tblptru	equ	0xFF8
  3221                           tblptrh	equ	0xFF7
  3222                           tblptrl	equ	0xFF6
  3223                           tablat	equ	0xFF5
  3224                           postinc0	equ	0xFEE
  3225                           wreg	equ	0xFE8
  3226                           postdec1	equ	0xFE5
  3227                           fsr1l	equ	0xFE1
  3228                           indf2	equ	0xFDF
  3229                           postinc2	equ	0xFDE
  3230                           postdec2	equ	0xFDD
  3231                           status	equ	0xFD8
  3232                           
  3233 ;; *************** function _CANsendMessage *****************
  3234 ;; Defined at:
  3235 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;  identifier      4   23[BANK0 ] unsigned long 
  3238 ;;  data            2   27[BANK0 ] PTR unsigned char 
  3239 ;;		 -> can_send@data_correction1(0), data_speed(8), data_brake(8), data_steering(8), 
  3240 ;;		 -> data_correction(8), data_test(8), data(8), sensor_distance_short(8), 
  3241 ;;  dataLength      1   29[BANK0 ] unsigned char 
  3242 ;;  flags           1   30[BANK0 ] enum E16335
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  tamp            4   35[BANK0 ] unsigned long 
  3245 ;; Return value:  Size  Location     Type
  3246 ;;		None               void
  3247 ;; Registers used:
  3248 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3249 ;; Tracked objects:
  3250 ;;		On entry : 0/0
  3251 ;;		On exit  : 0/0
  3252 ;;		Unchanged: 0/0
  3253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3254 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3255 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3256 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3257 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3258 ;;Total ram usage:       16 bytes
  3259 ;; Hardware stack levels used:    1
  3260 ;; Hardware stack levels required when called:    4
  3261 ;; This function calls:
  3262 ;;		Nothing
  3263 ;; This function is called by:
  3264 ;;		_main
  3265 ;;		_park_search
  3266 ;;		_park_routine
  3267 ;;		_can_send
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	text5
  3272  001858                     __ptext5:
  3273                           	opt stack 0
  3274  001858                     _CANsendMessage:
  3275                           	opt stack 23
  3276                           
  3277                           ;inc\CANlib.h: 296: unsigned long tamp;
  3278                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  3279                           
  3280                           ;incstack = 0
  3281  001858  010F               	movlb	15	; () banked
  3282  00185A  B740               	btfsc	64,3,b	;volatile
  3283  00185C  D13F               	goto	l363
  3284                           
  3285                           ; BSR set to: 15
  3286                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  3287  00185E  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  3288                           
  3289                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  3290  001862  0100               	movlb	0	; () banked
  3291  001864  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3292  001866  D003               	goto	l364
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  3296  001868  010F               	movlb	15	; () banked
  3297  00186A  8D45               	bsf	69,6,b	;volatile
  3298  00186C  D002               	goto	l365
  3299  00186E                     l364:
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;inc\CANlib.h: 302: else
  3303                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  3304  00186E  010F               	movlb	15	; () banked
  3305  001870  9D45               	bcf	69,6,b	;volatile
  3306  001872                     l365:
  3307                           
  3308                           ; BSR set to: 15
  3309                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  3310  001872  0100               	movlb	0	; () banked
  3311  001874  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3312  001876  D079               	goto	l366
  3313                           
  3314                           ; BSR set to: 0
  3315                           ;inc\CANlib.h: 306: {
  3316                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  3317  001878  0100               	movlb	0	; () banked
  3318  00187A  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3319  00187C  0100               	movlb	0	; () banked
  3320  00187E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3321  001880  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3322  001882  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3323  001884  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  3327  001886  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  3331  00188A  0E00               	movlw	0
  3332  00188C  0100               	movlb	0	; () banked
  3333  00188E  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3334  001890  0100               	movlb	0	; () banked
  3335  001892  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3336  001894  0EFF               	movlw	255
  3337  001896  0100               	movlb	0	; () banked
  3338  001898  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3339  00189A  0100               	movlb	0	; () banked
  3340  00189C  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3341  00189E  0E00               	movlw	0
  3342  0018A0  0100               	movlb	0	; () banked
  3343  0018A2  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3344  0018A4  0100               	movlb	0	; () banked
  3345  0018A6  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3346  0018A8  0E00               	movlw	0
  3347  0018AA  0100               	movlb	0	; () banked
  3348  0018AC  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3349  0018AE  0100               	movlb	0	; () banked
  3350  0018B0  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3351                           
  3352                           ; BSR set to: 0
  3353                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  3354  0018B2  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3355  0018B6  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3356  0018BA  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3357  0018BE  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3358  0018C2  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3359  0018C6  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3360  0018CA  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3361  0018CE  0100               	movlb	0	; () banked
  3362  0018D0  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3363  0018D2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3364  0018D6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3365  0018DA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3366  0018DE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  3370  0018E2  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  3371                           
  3372                           ; BSR set to: 0
  3373                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  3374  0018E6  0E00               	movlw	0
  3375  0018E8  010F               	movlb	15	; () banked
  3376  0018EA  6F42               	movwf	66,b	;volatile
  3377                           
  3378                           ; BSR set to: 15
  3379                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  3380  0018EC  010F               	movlb	15	; () banked
  3381  0018EE  8742               	bsf	66,3,b	;volatile
  3382                           
  3383                           ; BSR set to: 15
  3384                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  3385  0018F0  0100               	movlb	0	; () banked
  3386  0018F2  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3387  0018F4  D002               	goto	l367
  3388                           
  3389                           ; BSR set to: 0
  3390                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  3391  0018F6  010F               	movlb	15	; () banked
  3392  0018F8  8142               	bsf	66,0,b	;volatile
  3393  0018FA                     l367:
  3394                           
  3395                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  3396  0018FA  0100               	movlb	0	; () banked
  3397  0018FC  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3398  0018FE  D002               	goto	l368
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  3402  001900  010F               	movlb	15	; () banked
  3403  001902  8342               	bsf	66,1,b	;volatile
  3404  001904                     l368:
  3405                           
  3406                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  3407  001904  0100               	movlb	0	; () banked
  3408  001906  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3409  001908  D002               	goto	l369
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  3413  00190A  010F               	movlb	15	; () banked
  3414  00190C  8B42               	bsf	66,5,b	;volatile
  3415  00190E                     l369:
  3416                           
  3417                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  3418  00190E  0100               	movlb	0	; () banked
  3419  001910  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3420  001912  D002               	goto	l370
  3421                           
  3422                           ; BSR set to: 0
  3423                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  3424  001914  010F               	movlb	15	; () banked
  3425  001916  8D42               	bsf	66,6,b	;volatile
  3426  001918                     l370:
  3427                           
  3428                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  3429  001918  0100               	movlb	0	; () banked
  3430  00191A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3431  00191C  D002               	goto	l7436
  3432                           
  3433                           ; BSR set to: 0
  3434                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  3435  00191E  010F               	movlb	15	; () banked
  3436  001920  8F42               	bsf	66,7,b	;volatile
  3437  001922                     l7436:
  3438                           
  3439                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  3440  001922  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3441  001926  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3442  00192A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3443  00192E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3444  001932  0E16               	movlw	22
  3445  001934  D006               	goto	u9850
  3446  001936                     u9855:
  3447  001936  0100               	movlb	0	; () banked
  3448  001938  90D8               	bcf	status,0,c
  3449  00193A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3450  00193C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3451  00193E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3452  001940  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3453  001942                     u9850:
  3454  001942  2EE8               	decfsz	wreg,f,c
  3455  001944  D7F8               	goto	u9855
  3456  001946  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3457  00194A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3458  00194E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3459  001952  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  3463  001956  0100               	movlb	0	; () banked
  3464  001958  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3465  00195A  0100               	movlb	0	; () banked
  3466  00195C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3467  00195E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3468  001960  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3469  001962  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  3473  001964  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3474                           
  3475                           ;inc\CANlib.h: 332: }
  3476  001968  D059               	goto	l7456
  3477  00196A                     l366:
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;inc\CANlib.h: 334: else
  3481                           ;inc\CANlib.h: 336: {
  3482                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  3483  00196A  010F               	movlb	15	; () banked
  3484  00196C  9742               	bcf	66,3,b	;volatile
  3485                           
  3486                           ; BSR set to: 15
  3487                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  3488  00196E  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3489  001972  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3490  001976  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3491  00197A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3492  00197E  0E04               	movlw	4
  3493  001980  D006               	goto	u9860
  3494  001982                     u9865:
  3495  001982  0100               	movlb	0	; () banked
  3496  001984  90D8               	bcf	status,0,c
  3497  001986  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3498  001988  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3499  00198A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3500  00198C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3501  00198E                     u9860:
  3502  00198E  2EE8               	decfsz	wreg,f,c
  3503  001990  D7F8               	goto	u9865
  3504  001992  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3505  001996  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3506  00199A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3507  00199E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3508                           
  3509                           ; BSR set to: 0
  3510                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  3511  0019A2  0100               	movlb	0	; () banked
  3512  0019A4  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3513  0019A6  0100               	movlb	0	; () banked
  3514  0019A8  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3515  0019AA  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3516  0019AC  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3517  0019AE  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  3521  0019B0  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  3525  0019B4  0E07               	movlw	7
  3526  0019B6  0100               	movlb	0	; () banked
  3527  0019B8  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3528  0019BA  0100               	movlb	0	; () banked
  3529  0019BC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3530  0019BE  0E00               	movlw	0
  3531  0019C0  0100               	movlb	0	; () banked
  3532  0019C2  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3533  0019C4  0100               	movlb	0	; () banked
  3534  0019C6  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3535  0019C8  0E00               	movlw	0
  3536  0019CA  0100               	movlb	0	; () banked
  3537  0019CC  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3538  0019CE  0100               	movlb	0	; () banked
  3539  0019D0  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3540  0019D2  0E00               	movlw	0
  3541  0019D4  0100               	movlb	0	; () banked
  3542  0019D6  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3543  0019D8  0100               	movlb	0	; () banked
  3544  0019DA  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3545                           
  3546                           ; BSR set to: 0
  3547                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  3548  0019DC  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3549  0019E0  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3550  0019E4  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3551  0019E8  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3552  0019EC  0E05               	movlw	5
  3553  0019EE                     u9875:
  3554  0019EE  90D8               	bcf	status,0,c
  3555  0019F0  0100               	movlb	0	; () banked
  3556  0019F2  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3557  0019F4  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3558  0019F6  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3559  0019F8  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3560  0019FA  2EE8               	decfsz	wreg,f,c
  3561  0019FC  D7F8               	goto	u9875
  3562  0019FE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3563  001A02  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3564  001A06  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3565  001A0A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  3569  001A0E  010F               	movlb	15	; () banked
  3570  001A10  5142               	movf	66,w,b	;volatile
  3571  001A12  0B1F               	andlw	31
  3572  001A14  010F               	movlb	15	; () banked
  3573  001A16  6F42               	movwf	66,b	;volatile
  3574                           
  3575                           ; BSR set to: 15
  3576                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  3577  001A18  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  3578  001A1C                     l7456:
  3579                           
  3580                           ;inc\CANlib.h: 347: }
  3581                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  3582  001A1C  0100               	movlb	0	; () banked
  3583  001A1E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3584  001A20  D003               	goto	l373
  3585                           
  3586                           ; BSR set to: 0
  3587                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  3588  001A22  010F               	movlb	15	; () banked
  3589  001A24  8140               	bsf	64,0,b	;volatile
  3590  001A26  D002               	goto	l374
  3591  001A28                     l373:
  3592                           
  3593                           ; BSR set to: 0
  3594                           ;inc\CANlib.h: 351: else
  3595                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  3596  001A28  010F               	movlb	15	; () banked
  3597  001A2A  9140               	bcf	64,0,b	;volatile
  3598  001A2C                     l374:
  3599                           
  3600                           ; BSR set to: 15
  3601                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  3602  001A2C  0100               	movlb	0	; () banked
  3603  001A2E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  3604  001A30  D003               	goto	l375
  3605                           
  3606                           ; BSR set to: 0
  3607                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  3608  001A32  010F               	movlb	15	; () banked
  3609  001A34  8340               	bsf	64,1,b	;volatile
  3610  001A36  D002               	goto	l7462
  3611  001A38                     l375:
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;inc\CANlib.h: 355: else
  3615                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  3616  001A38  010F               	movlb	15	; () banked
  3617  001A3A  9340               	bcf	64,1,b	;volatile
  3618  001A3C                     l7462:
  3619                           
  3620                           ; BSR set to: 15
  3621                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  3622  001A3C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  3623  001A40  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3624  001A44  50DF               	movf	indf2,w,c
  3625  001A46  010F               	movlb	15	; () banked
  3626  001A48  6F46               	movwf	70,b	;volatile
  3627                           
  3628                           ; BSR set to: 15
  3629                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  3630  001A4A  0100               	movlb	0	; () banked
  3631  001A4C  EE20 F001          	lfsr	2,1
  3632  001A50  517B               	movf	CANsendMessage@data& (0+255),w,b
  3633  001A52  26D9               	addwf	fsr2l,f,c
  3634  001A54  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3635  001A56  22DA               	addwfc	fsr2h,f,c
  3636  001A58  50DF               	movf	indf2,w,c
  3637  001A5A  010F               	movlb	15	; () banked
  3638  001A5C  6F47               	movwf	71,b	;volatile
  3639                           
  3640                           ; BSR set to: 15
  3641                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  3642  001A5E  0100               	movlb	0	; () banked
  3643  001A60  EE20 F002          	lfsr	2,2
  3644  001A64  517B               	movf	CANsendMessage@data& (0+255),w,b
  3645  001A66  26D9               	addwf	fsr2l,f,c
  3646  001A68  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3647  001A6A  22DA               	addwfc	fsr2h,f,c
  3648  001A6C  50DF               	movf	indf2,w,c
  3649  001A6E  010F               	movlb	15	; () banked
  3650  001A70  6F48               	movwf	72,b	;volatile
  3651                           
  3652                           ; BSR set to: 15
  3653                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  3654  001A72  0100               	movlb	0	; () banked
  3655  001A74  EE20 F003          	lfsr	2,3
  3656  001A78  517B               	movf	CANsendMessage@data& (0+255),w,b
  3657  001A7A  26D9               	addwf	fsr2l,f,c
  3658  001A7C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3659  001A7E  22DA               	addwfc	fsr2h,f,c
  3660  001A80  50DF               	movf	indf2,w,c
  3661  001A82  010F               	movlb	15	; () banked
  3662  001A84  6F49               	movwf	73,b	;volatile
  3663                           
  3664                           ; BSR set to: 15
  3665                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  3666  001A86  0100               	movlb	0	; () banked
  3667  001A88  EE20 F004          	lfsr	2,4
  3668  001A8C  517B               	movf	CANsendMessage@data& (0+255),w,b
  3669  001A8E  26D9               	addwf	fsr2l,f,c
  3670  001A90  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3671  001A92  22DA               	addwfc	fsr2h,f,c
  3672  001A94  50DF               	movf	indf2,w,c
  3673  001A96  010F               	movlb	15	; () banked
  3674  001A98  6F4A               	movwf	74,b	;volatile
  3675                           
  3676                           ; BSR set to: 15
  3677                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  3678  001A9A  0100               	movlb	0	; () banked
  3679  001A9C  EE20 F005          	lfsr	2,5
  3680  001AA0  517B               	movf	CANsendMessage@data& (0+255),w,b
  3681  001AA2  26D9               	addwf	fsr2l,f,c
  3682  001AA4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3683  001AA6  22DA               	addwfc	fsr2h,f,c
  3684  001AA8  50DF               	movf	indf2,w,c
  3685  001AAA  010F               	movlb	15	; () banked
  3686  001AAC  6F4B               	movwf	75,b	;volatile
  3687                           
  3688                           ; BSR set to: 15
  3689                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  3690  001AAE  0100               	movlb	0	; () banked
  3691  001AB0  EE20 F006          	lfsr	2,6
  3692  001AB4  517B               	movf	CANsendMessage@data& (0+255),w,b
  3693  001AB6  26D9               	addwf	fsr2l,f,c
  3694  001AB8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3695  001ABA  22DA               	addwfc	fsr2h,f,c
  3696  001ABC  50DF               	movf	indf2,w,c
  3697  001ABE  010F               	movlb	15	; () banked
  3698  001AC0  6F4C               	movwf	76,b	;volatile
  3699                           
  3700                           ; BSR set to: 15
  3701                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  3702  001AC2  0100               	movlb	0	; () banked
  3703  001AC4  EE20 F007          	lfsr	2,7
  3704  001AC8  517B               	movf	CANsendMessage@data& (0+255),w,b
  3705  001ACA  26D9               	addwf	fsr2l,f,c
  3706  001ACC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3707  001ACE  22DA               	addwfc	fsr2h,f,c
  3708  001AD0  50DF               	movf	indf2,w,c
  3709  001AD2  010F               	movlb	15	; () banked
  3710  001AD4  6F4D               	movwf	77,b	;volatile
  3711                           
  3712                           ; BSR set to: 15
  3713                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  3714  001AD6  010F               	movlb	15	; () banked
  3715  001AD8  8740               	bsf	64,3,b	;volatile
  3716                           
  3717                           ; BSR set to: 15
  3718                           ;inc\CANlib.h: 368: return;
  3719  001ADA  0012               	return	
  3720  001ADC                     l363:
  3721                           
  3722                           ; BSR set to: 15
  3723                           ;inc\CANlib.h: 369: }
  3724                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  3725  001ADC  010F               	movlb	15	; () banked
  3726  001ADE  B730               	btfsc	48,3,b	;volatile
  3727  001AE0  D13F               	goto	l378
  3728                           
  3729                           ; BSR set to: 15
  3730                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  3731  001AE2  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  3732                           
  3733                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  3734  001AE6  0100               	movlb	0	; () banked
  3735  001AE8  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3736  001AEA  D003               	goto	l379
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  3740  001AEC  010F               	movlb	15	; () banked
  3741  001AEE  8D35               	bsf	53,6,b	;volatile
  3742  001AF0  D002               	goto	l380
  3743  001AF2                     l379:
  3744                           
  3745                           ; BSR set to: 0
  3746                           ;inc\CANlib.h: 378: else
  3747                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  3748  001AF2  010F               	movlb	15	; () banked
  3749  001AF4  9D35               	bcf	53,6,b	;volatile
  3750  001AF6                     l380:
  3751                           
  3752                           ; BSR set to: 15
  3753                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  3754  001AF6  0100               	movlb	0	; () banked
  3755  001AF8  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3756  001AFA  D079               	goto	l381
  3757                           
  3758                           ; BSR set to: 0
  3759                           ;inc\CANlib.h: 382: {
  3760                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  3761  001AFC  0100               	movlb	0	; () banked
  3762  001AFE  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3763  001B00  0100               	movlb	0	; () banked
  3764  001B02  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3765  001B04  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3766  001B06  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3767  001B08  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  3771  001B0A  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  3772                           
  3773                           ; BSR set to: 0
  3774                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  3775  001B0E  0E00               	movlw	0
  3776  001B10  0100               	movlb	0	; () banked
  3777  001B12  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3778  001B14  0100               	movlb	0	; () banked
  3779  001B16  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3780  001B18  0EFF               	movlw	255
  3781  001B1A  0100               	movlb	0	; () banked
  3782  001B1C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3783  001B1E  0100               	movlb	0	; () banked
  3784  001B20  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3785  001B22  0E00               	movlw	0
  3786  001B24  0100               	movlb	0	; () banked
  3787  001B26  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3788  001B28  0100               	movlb	0	; () banked
  3789  001B2A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3790  001B2C  0E00               	movlw	0
  3791  001B2E  0100               	movlb	0	; () banked
  3792  001B30  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3793  001B32  0100               	movlb	0	; () banked
  3794  001B34  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3795                           
  3796                           ; BSR set to: 0
  3797                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  3798  001B36  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3799  001B3A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3800  001B3E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3801  001B42  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3802  001B46  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3803  001B4A  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3804  001B4E  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3805  001B52  0100               	movlb	0	; () banked
  3806  001B54  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3807  001B56  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3808  001B5A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3809  001B5E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3810  001B62  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3811                           
  3812                           ; BSR set to: 0
  3813                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  3814  001B66  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  3815                           
  3816                           ; BSR set to: 0
  3817                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  3818  001B6A  0E00               	movlw	0
  3819  001B6C  010F               	movlb	15	; () banked
  3820  001B6E  6F32               	movwf	50,b	;volatile
  3821                           
  3822                           ; BSR set to: 15
  3823                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  3824  001B70  010F               	movlb	15	; () banked
  3825  001B72  8732               	bsf	50,3,b	;volatile
  3826                           
  3827                           ; BSR set to: 15
  3828                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  3829  001B74  0100               	movlb	0	; () banked
  3830  001B76  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3831  001B78  D002               	goto	l382
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  3835  001B7A  010F               	movlb	15	; () banked
  3836  001B7C  8132               	bsf	50,0,b	;volatile
  3837  001B7E                     l382:
  3838                           
  3839                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  3840  001B7E  0100               	movlb	0	; () banked
  3841  001B80  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3842  001B82  D002               	goto	l383
  3843                           
  3844                           ; BSR set to: 0
  3845                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  3846  001B84  010F               	movlb	15	; () banked
  3847  001B86  8332               	bsf	50,1,b	;volatile
  3848  001B88                     l383:
  3849                           
  3850                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  3851  001B88  0100               	movlb	0	; () banked
  3852  001B8A  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3853  001B8C  D002               	goto	l384
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  3857  001B8E  010F               	movlb	15	; () banked
  3858  001B90  8B32               	bsf	50,5,b	;volatile
  3859  001B92                     l384:
  3860                           
  3861                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  3862  001B92  0100               	movlb	0	; () banked
  3863  001B94  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3864  001B96  D002               	goto	l385
  3865                           
  3866                           ; BSR set to: 0
  3867                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  3868  001B98  010F               	movlb	15	; () banked
  3869  001B9A  8D32               	bsf	50,6,b	;volatile
  3870  001B9C                     l385:
  3871                           
  3872                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  3873  001B9C  0100               	movlb	0	; () banked
  3874  001B9E  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3875  001BA0  D002               	goto	l7512
  3876                           
  3877                           ; BSR set to: 0
  3878                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  3879  001BA2  010F               	movlb	15	; () banked
  3880  001BA4  8F32               	bsf	50,7,b	;volatile
  3881  001BA6                     l7512:
  3882                           
  3883                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  3884  001BA6  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3885  001BAA  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3886  001BAE  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3887  001BB2  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3888  001BB6  0E16               	movlw	22
  3889  001BB8  D006               	goto	u9980
  3890  001BBA                     u9985:
  3891  001BBA  0100               	movlb	0	; () banked
  3892  001BBC  90D8               	bcf	status,0,c
  3893  001BBE  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3894  001BC0  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3895  001BC2  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3896  001BC4  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3897  001BC6                     u9980:
  3898  001BC6  2EE8               	decfsz	wreg,f,c
  3899  001BC8  D7F8               	goto	u9985
  3900  001BCA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3901  001BCE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3902  001BD2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3903  001BD6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  3907  001BDA  0100               	movlb	0	; () banked
  3908  001BDC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3909  001BDE  0100               	movlb	0	; () banked
  3910  001BE0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3911  001BE2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3912  001BE4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3913  001BE6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  3917  001BE8  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3918                           
  3919                           ;inc\CANlib.h: 407: }
  3920  001BEC  D059               	goto	l7532
  3921  001BEE                     l381:
  3922                           
  3923                           ; BSR set to: 0
  3924                           ;inc\CANlib.h: 409: else
  3925                           ;inc\CANlib.h: 411: {
  3926                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  3927  001BEE  010F               	movlb	15	; () banked
  3928  001BF0  9732               	bcf	50,3,b	;volatile
  3929                           
  3930                           ; BSR set to: 15
  3931                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  3932  001BF2  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3933  001BF6  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3934  001BFA  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3935  001BFE  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3936  001C02  0E04               	movlw	4
  3937  001C04  D006               	goto	u9990
  3938  001C06                     u9995:
  3939  001C06  0100               	movlb	0	; () banked
  3940  001C08  90D8               	bcf	status,0,c
  3941  001C0A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3942  001C0C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3943  001C0E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3944  001C10  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3945  001C12                     u9990:
  3946  001C12  2EE8               	decfsz	wreg,f,c
  3947  001C14  D7F8               	goto	u9995
  3948  001C16  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3949  001C1A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3950  001C1E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3951  001C22  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3952                           
  3953                           ; BSR set to: 0
  3954                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  3955  001C26  0100               	movlb	0	; () banked
  3956  001C28  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3957  001C2A  0100               	movlb	0	; () banked
  3958  001C2C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3959  001C2E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3960  001C30  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3961  001C32  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  3965  001C34  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3966                           
  3967                           ; BSR set to: 0
  3968                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  3969  001C38  0E07               	movlw	7
  3970  001C3A  0100               	movlb	0	; () banked
  3971  001C3C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3972  001C3E  0100               	movlb	0	; () banked
  3973  001C40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3974  001C42  0E00               	movlw	0
  3975  001C44  0100               	movlb	0	; () banked
  3976  001C46  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3977  001C48  0100               	movlb	0	; () banked
  3978  001C4A  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3979  001C4C  0E00               	movlw	0
  3980  001C4E  0100               	movlb	0	; () banked
  3981  001C50  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3982  001C52  0100               	movlb	0	; () banked
  3983  001C54  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3984  001C56  0E00               	movlw	0
  3985  001C58  0100               	movlb	0	; () banked
  3986  001C5A  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3987  001C5C  0100               	movlb	0	; () banked
  3988  001C5E  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  3992  001C60  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3993  001C64  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3994  001C68  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3995  001C6C  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3996  001C70  0E05               	movlw	5
  3997  001C72                     u10005:
  3998  001C72  90D8               	bcf	status,0,c
  3999  001C74  0100               	movlb	0	; () banked
  4000  001C76  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  4001  001C78  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  4002  001C7A  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  4003  001C7C  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  4004  001C7E  2EE8               	decfsz	wreg,f,c
  4005  001C80  D7F8               	goto	u10005
  4006  001C82  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4007  001C86  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4008  001C8A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4009  001C8E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4010                           
  4011                           ; BSR set to: 0
  4012                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  4013  001C92  010F               	movlb	15	; () banked
  4014  001C94  5132               	movf	50,w,b	;volatile
  4015  001C96  0B1F               	andlw	31
  4016  001C98  010F               	movlb	15	; () banked
  4017  001C9A  6F32               	movwf	50,b	;volatile
  4018                           
  4019                           ; BSR set to: 15
  4020                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  4021  001C9C  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  4022  001CA0                     l7532:
  4023                           
  4024                           ;inc\CANlib.h: 422: }
  4025                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  4026  001CA0  0100               	movlb	0	; () banked
  4027  001CA2  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  4028  001CA4  D003               	goto	l388
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  4032  001CA6  010F               	movlb	15	; () banked
  4033  001CA8  8130               	bsf	48,0,b	;volatile
  4034  001CAA  D002               	goto	l389
  4035  001CAC                     l388:
  4036                           
  4037                           ; BSR set to: 0
  4038                           ;inc\CANlib.h: 426: else
  4039                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  4040  001CAC  010F               	movlb	15	; () banked
  4041  001CAE  9130               	bcf	48,0,b	;volatile
  4042  001CB0                     l389:
  4043                           
  4044                           ; BSR set to: 15
  4045                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  4046  001CB0  0100               	movlb	0	; () banked
  4047  001CB2  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  4048  001CB4  D003               	goto	l390
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  4052  001CB6  010F               	movlb	15	; () banked
  4053  001CB8  8330               	bsf	48,1,b	;volatile
  4054  001CBA  D002               	goto	l7538
  4055  001CBC                     l390:
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;inc\CANlib.h: 430: else
  4059                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  4060  001CBC  010F               	movlb	15	; () banked
  4061  001CBE  9330               	bcf	48,1,b	;volatile
  4062  001CC0                     l7538:
  4063                           
  4064                           ; BSR set to: 15
  4065                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  4066  001CC0  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  4067  001CC4  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4068  001CC8  50DF               	movf	indf2,w,c
  4069  001CCA  010F               	movlb	15	; () banked
  4070  001CCC  6F36               	movwf	54,b	;volatile
  4071                           
  4072                           ; BSR set to: 15
  4073                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  4074  001CCE  0100               	movlb	0	; () banked
  4075  001CD0  EE20 F001          	lfsr	2,1
  4076  001CD4  517B               	movf	CANsendMessage@data& (0+255),w,b
  4077  001CD6  26D9               	addwf	fsr2l,f,c
  4078  001CD8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4079  001CDA  22DA               	addwfc	fsr2h,f,c
  4080  001CDC  50DF               	movf	indf2,w,c
  4081  001CDE  010F               	movlb	15	; () banked
  4082  001CE0  6F37               	movwf	55,b	;volatile
  4083                           
  4084                           ; BSR set to: 15
  4085                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  4086  001CE2  0100               	movlb	0	; () banked
  4087  001CE4  EE20 F002          	lfsr	2,2
  4088  001CE8  517B               	movf	CANsendMessage@data& (0+255),w,b
  4089  001CEA  26D9               	addwf	fsr2l,f,c
  4090  001CEC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4091  001CEE  22DA               	addwfc	fsr2h,f,c
  4092  001CF0  50DF               	movf	indf2,w,c
  4093  001CF2  010F               	movlb	15	; () banked
  4094  001CF4  6F38               	movwf	56,b	;volatile
  4095                           
  4096                           ; BSR set to: 15
  4097                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  4098  001CF6  0100               	movlb	0	; () banked
  4099  001CF8  EE20 F003          	lfsr	2,3
  4100  001CFC  517B               	movf	CANsendMessage@data& (0+255),w,b
  4101  001CFE  26D9               	addwf	fsr2l,f,c
  4102  001D00  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4103  001D02  22DA               	addwfc	fsr2h,f,c
  4104  001D04  50DF               	movf	indf2,w,c
  4105  001D06  010F               	movlb	15	; () banked
  4106  001D08  6F39               	movwf	57,b	;volatile
  4107                           
  4108                           ; BSR set to: 15
  4109                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  4110  001D0A  0100               	movlb	0	; () banked
  4111  001D0C  EE20 F004          	lfsr	2,4
  4112  001D10  517B               	movf	CANsendMessage@data& (0+255),w,b
  4113  001D12  26D9               	addwf	fsr2l,f,c
  4114  001D14  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4115  001D16  22DA               	addwfc	fsr2h,f,c
  4116  001D18  50DF               	movf	indf2,w,c
  4117  001D1A  010F               	movlb	15	; () banked
  4118  001D1C  6F3A               	movwf	58,b	;volatile
  4119                           
  4120                           ; BSR set to: 15
  4121                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  4122  001D1E  0100               	movlb	0	; () banked
  4123  001D20  EE20 F005          	lfsr	2,5
  4124  001D24  517B               	movf	CANsendMessage@data& (0+255),w,b
  4125  001D26  26D9               	addwf	fsr2l,f,c
  4126  001D28  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4127  001D2A  22DA               	addwfc	fsr2h,f,c
  4128  001D2C  50DF               	movf	indf2,w,c
  4129  001D2E  010F               	movlb	15	; () banked
  4130  001D30  6F3B               	movwf	59,b	;volatile
  4131                           
  4132                           ; BSR set to: 15
  4133                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  4134  001D32  0100               	movlb	0	; () banked
  4135  001D34  EE20 F006          	lfsr	2,6
  4136  001D38  517B               	movf	CANsendMessage@data& (0+255),w,b
  4137  001D3A  26D9               	addwf	fsr2l,f,c
  4138  001D3C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4139  001D3E  22DA               	addwfc	fsr2h,f,c
  4140  001D40  50DF               	movf	indf2,w,c
  4141  001D42  010F               	movlb	15	; () banked
  4142  001D44  6F3C               	movwf	60,b	;volatile
  4143                           
  4144                           ; BSR set to: 15
  4145                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  4146  001D46  0100               	movlb	0	; () banked
  4147  001D48  EE20 F007          	lfsr	2,7
  4148  001D4C  517B               	movf	CANsendMessage@data& (0+255),w,b
  4149  001D4E  26D9               	addwf	fsr2l,f,c
  4150  001D50  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4151  001D52  22DA               	addwfc	fsr2h,f,c
  4152  001D54  50DF               	movf	indf2,w,c
  4153  001D56  010F               	movlb	15	; () banked
  4154  001D58  6F3D               	movwf	61,b	;volatile
  4155                           
  4156                           ; BSR set to: 15
  4157                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  4158  001D5A  010F               	movlb	15	; () banked
  4159  001D5C  8730               	bsf	48,3,b	;volatile
  4160                           
  4161                           ; BSR set to: 15
  4162                           ;inc\CANlib.h: 444: return;
  4163  001D5E  0012               	return	
  4164  001D60                     l378:
  4165                           
  4166                           ; BSR set to: 15
  4167                           ;inc\CANlib.h: 445: }
  4168                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  4169  001D60  010F               	movlb	15	; () banked
  4170  001D62  B720               	btfsc	32,3,b	;volatile
  4171  001D64  0012               	return	
  4172                           
  4173                           ; BSR set to: 15
  4174                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  4175  001D66  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  4176                           
  4177                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  4178  001D6A  0100               	movlb	0	; () banked
  4179  001D6C  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  4180  001D6E  D003               	goto	l393
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  4184  001D70  010F               	movlb	15	; () banked
  4185  001D72  8D25               	bsf	37,6,b	;volatile
  4186  001D74  D002               	goto	l394
  4187  001D76                     l393:
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;inc\CANlib.h: 454: else
  4191                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  4192  001D76  010F               	movlb	15	; () banked
  4193  001D78  9D25               	bcf	37,6,b	;volatile
  4194  001D7A                     l394:
  4195                           
  4196                           ; BSR set to: 15
  4197                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  4198  001D7A  0100               	movlb	0	; () banked
  4199  001D7C  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  4200  001D7E  D079               	goto	l395
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;inc\CANlib.h: 458: {
  4204                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  4205  001D80  0100               	movlb	0	; () banked
  4206  001D82  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  4207  001D84  0100               	movlb	0	; () banked
  4208  001D86  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4209  001D88  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4210  001D8A  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4211  001D8C  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  4215  001D8E  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  4216                           
  4217                           ; BSR set to: 0
  4218                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  4219  001D92  0E00               	movlw	0
  4220  001D94  0100               	movlb	0	; () banked
  4221  001D96  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4222  001D98  0100               	movlb	0	; () banked
  4223  001D9A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4224  001D9C  0EFF               	movlw	255
  4225  001D9E  0100               	movlb	0	; () banked
  4226  001DA0  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4227  001DA2  0100               	movlb	0	; () banked
  4228  001DA4  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4229  001DA6  0E00               	movlw	0
  4230  001DA8  0100               	movlb	0	; () banked
  4231  001DAA  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4232  001DAC  0100               	movlb	0	; () banked
  4233  001DAE  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4234  001DB0  0E00               	movlw	0
  4235  001DB2  0100               	movlb	0	; () banked
  4236  001DB4  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4237  001DB6  0100               	movlb	0	; () banked
  4238  001DB8  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  4242  001DBA  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4243  001DBE  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4244  001DC2  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4245  001DC6  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4246  001DCA  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  4247  001DCE  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  4248  001DD2  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  4249  001DD6  0100               	movlb	0	; () banked
  4250  001DD8  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  4251  001DDA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4252  001DDE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4253  001DE2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4254  001DE6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  4258  001DEA  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  4262  001DEE  0E00               	movlw	0
  4263  001DF0  010F               	movlb	15	; () banked
  4264  001DF2  6F22               	movwf	34,b	;volatile
  4265                           
  4266                           ; BSR set to: 15
  4267                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  4268  001DF4  010F               	movlb	15	; () banked
  4269  001DF6  8722               	bsf	34,3,b	;volatile
  4270                           
  4271                           ; BSR set to: 15
  4272                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  4273  001DF8  0100               	movlb	0	; () banked
  4274  001DFA  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  4275  001DFC  D002               	goto	l396
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  4279  001DFE  010F               	movlb	15	; () banked
  4280  001E00  8122               	bsf	34,0,b	;volatile
  4281  001E02                     l396:
  4282                           
  4283                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  4284  001E02  0100               	movlb	0	; () banked
  4285  001E04  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  4286  001E06  D002               	goto	l397
  4287                           
  4288                           ; BSR set to: 0
  4289                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  4290  001E08  010F               	movlb	15	; () banked
  4291  001E0A  8322               	bsf	34,1,b	;volatile
  4292  001E0C                     l397:
  4293                           
  4294                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  4295  001E0C  0100               	movlb	0	; () banked
  4296  001E0E  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  4297  001E10  D002               	goto	l398
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  4301  001E12  010F               	movlb	15	; () banked
  4302  001E14  8B22               	bsf	34,5,b	;volatile
  4303  001E16                     l398:
  4304                           
  4305                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  4306  001E16  0100               	movlb	0	; () banked
  4307  001E18  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  4308  001E1A  D002               	goto	l399
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  4312  001E1C  010F               	movlb	15	; () banked
  4313  001E1E  8D22               	bsf	34,6,b	;volatile
  4314  001E20                     l399:
  4315                           
  4316                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  4317  001E20  0100               	movlb	0	; () banked
  4318  001E22  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  4319  001E24  D002               	goto	l7588
  4320                           
  4321                           ; BSR set to: 0
  4322                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  4323  001E26  010F               	movlb	15	; () banked
  4324  001E28  8F22               	bsf	34,7,b	;volatile
  4325  001E2A                     l7588:
  4326                           
  4327                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  4328  001E2A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4329  001E2E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4330  001E32  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4331  001E36  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4332  001E3A  0E16               	movlw	22
  4333  001E3C  D006               	goto	u10110
  4334  001E3E                     u10115:
  4335  001E3E  0100               	movlb	0	; () banked
  4336  001E40  90D8               	bcf	status,0,c
  4337  001E42  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4338  001E44  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4339  001E46  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4340  001E48  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4341  001E4A                     u10110:
  4342  001E4A  2EE8               	decfsz	wreg,f,c
  4343  001E4C  D7F8               	goto	u10115
  4344  001E4E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4345  001E52  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4346  001E56  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4347  001E5A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4348                           
  4349                           ; BSR set to: 0
  4350                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  4351  001E5E  0100               	movlb	0	; () banked
  4352  001E60  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4353  001E62  0100               	movlb	0	; () banked
  4354  001E64  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4355  001E66  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4356  001E68  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4357  001E6A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4358                           
  4359                           ; BSR set to: 0
  4360                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  4361  001E6C  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4362                           
  4363                           ;inc\CANlib.h: 483: }
  4364  001E70  D059               	goto	l7608
  4365  001E72                     l395:
  4366                           
  4367                           ; BSR set to: 0
  4368                           ;inc\CANlib.h: 485: else
  4369                           ;inc\CANlib.h: 487: {
  4370                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  4371  001E72  010F               	movlb	15	; () banked
  4372  001E74  9722               	bcf	34,3,b	;volatile
  4373                           
  4374                           ; BSR set to: 15
  4375                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  4376  001E76  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4377  001E7A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4378  001E7E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4379  001E82  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4380  001E86  0E04               	movlw	4
  4381  001E88  D006               	goto	u10120
  4382  001E8A                     u10125:
  4383  001E8A  0100               	movlb	0	; () banked
  4384  001E8C  90D8               	bcf	status,0,c
  4385  001E8E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4386  001E90  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4387  001E92  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4388  001E94  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4389  001E96                     u10120:
  4390  001E96  2EE8               	decfsz	wreg,f,c
  4391  001E98  D7F8               	goto	u10125
  4392  001E9A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4393  001E9E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4394  001EA2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4395  001EA6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  4399  001EAA  0100               	movlb	0	; () banked
  4400  001EAC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4401  001EAE  0100               	movlb	0	; () banked
  4402  001EB0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4403  001EB2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4404  001EB4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4405  001EB6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  4409  001EB8  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  4413  001EBC  0E07               	movlw	7
  4414  001EBE  0100               	movlb	0	; () banked
  4415  001EC0  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4416  001EC2  0100               	movlb	0	; () banked
  4417  001EC4  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4418  001EC6  0E00               	movlw	0
  4419  001EC8  0100               	movlb	0	; () banked
  4420  001ECA  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4421  001ECC  0100               	movlb	0	; () banked
  4422  001ECE  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4423  001ED0  0E00               	movlw	0
  4424  001ED2  0100               	movlb	0	; () banked
  4425  001ED4  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4426  001ED6  0100               	movlb	0	; () banked
  4427  001ED8  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4428  001EDA  0E00               	movlw	0
  4429  001EDC  0100               	movlb	0	; () banked
  4430  001EDE  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4431  001EE0  0100               	movlb	0	; () banked
  4432  001EE2  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  4436  001EE4  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4437  001EE8  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4438  001EEC  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4439  001EF0  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4440  001EF4  0E05               	movlw	5
  4441  001EF6                     u10135:
  4442  001EF6  90D8               	bcf	status,0,c
  4443  001EF8  0100               	movlb	0	; () banked
  4444  001EFA  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  4445  001EFC  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  4446  001EFE  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  4447  001F00  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  4448  001F02  2EE8               	decfsz	wreg,f,c
  4449  001F04  D7F8               	goto	u10135
  4450  001F06  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4451  001F0A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4452  001F0E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4453  001F12  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4454                           
  4455                           ; BSR set to: 0
  4456                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  4457  001F16  010F               	movlb	15	; () banked
  4458  001F18  5122               	movf	34,w,b	;volatile
  4459  001F1A  0B1F               	andlw	31
  4460  001F1C  010F               	movlb	15	; () banked
  4461  001F1E  6F22               	movwf	34,b	;volatile
  4462                           
  4463                           ; BSR set to: 15
  4464                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  4465  001F20  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  4466  001F24                     l7608:
  4467                           
  4468                           ;inc\CANlib.h: 498: }
  4469                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  4470  001F24  0100               	movlb	0	; () banked
  4471  001F26  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  4472  001F28  D003               	goto	l402
  4473                           
  4474                           ; BSR set to: 0
  4475                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  4476  001F2A  010F               	movlb	15	; () banked
  4477  001F2C  8120               	bsf	32,0,b	;volatile
  4478  001F2E  D002               	goto	l403
  4479  001F30                     l402:
  4480                           
  4481                           ; BSR set to: 0
  4482                           ;inc\CANlib.h: 502: else
  4483                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  4484  001F30  010F               	movlb	15	; () banked
  4485  001F32  9120               	bcf	32,0,b	;volatile
  4486  001F34                     l403:
  4487                           
  4488                           ; BSR set to: 15
  4489                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  4490  001F34  0100               	movlb	0	; () banked
  4491  001F36  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  4492  001F38  D003               	goto	l404
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  4496  001F3A  010F               	movlb	15	; () banked
  4497  001F3C  8320               	bsf	32,1,b	;volatile
  4498  001F3E  D002               	goto	l7614
  4499  001F40                     l404:
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;inc\CANlib.h: 506: else
  4503                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  4504  001F40  010F               	movlb	15	; () banked
  4505  001F42  9320               	bcf	32,1,b	;volatile
  4506  001F44                     l7614:
  4507                           
  4508                           ; BSR set to: 15
  4509                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  4510  001F44  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  4511  001F48  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4512  001F4C  50DF               	movf	indf2,w,c
  4513  001F4E  010F               	movlb	15	; () banked
  4514  001F50  6F26               	movwf	38,b	;volatile
  4515                           
  4516                           ; BSR set to: 15
  4517                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  4518  001F52  0100               	movlb	0	; () banked
  4519  001F54  EE20 F001          	lfsr	2,1
  4520  001F58  517B               	movf	CANsendMessage@data& (0+255),w,b
  4521  001F5A  26D9               	addwf	fsr2l,f,c
  4522  001F5C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4523  001F5E  22DA               	addwfc	fsr2h,f,c
  4524  001F60  50DF               	movf	indf2,w,c
  4525  001F62  010F               	movlb	15	; () banked
  4526  001F64  6F27               	movwf	39,b	;volatile
  4527                           
  4528                           ; BSR set to: 15
  4529                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  4530  001F66  0100               	movlb	0	; () banked
  4531  001F68  EE20 F002          	lfsr	2,2
  4532  001F6C  517B               	movf	CANsendMessage@data& (0+255),w,b
  4533  001F6E  26D9               	addwf	fsr2l,f,c
  4534  001F70  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4535  001F72  22DA               	addwfc	fsr2h,f,c
  4536  001F74  50DF               	movf	indf2,w,c
  4537  001F76  010F               	movlb	15	; () banked
  4538  001F78  6F28               	movwf	40,b	;volatile
  4539                           
  4540                           ; BSR set to: 15
  4541                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  4542  001F7A  0100               	movlb	0	; () banked
  4543  001F7C  EE20 F003          	lfsr	2,3
  4544  001F80  517B               	movf	CANsendMessage@data& (0+255),w,b
  4545  001F82  26D9               	addwf	fsr2l,f,c
  4546  001F84  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4547  001F86  22DA               	addwfc	fsr2h,f,c
  4548  001F88  50DF               	movf	indf2,w,c
  4549  001F8A  010F               	movlb	15	; () banked
  4550  001F8C  6F29               	movwf	41,b	;volatile
  4551                           
  4552                           ; BSR set to: 15
  4553                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  4554  001F8E  0100               	movlb	0	; () banked
  4555  001F90  EE20 F004          	lfsr	2,4
  4556  001F94  517B               	movf	CANsendMessage@data& (0+255),w,b
  4557  001F96  26D9               	addwf	fsr2l,f,c
  4558  001F98  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4559  001F9A  22DA               	addwfc	fsr2h,f,c
  4560  001F9C  50DF               	movf	indf2,w,c
  4561  001F9E  010F               	movlb	15	; () banked
  4562  001FA0  6F2A               	movwf	42,b	;volatile
  4563                           
  4564                           ; BSR set to: 15
  4565                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  4566  001FA2  0100               	movlb	0	; () banked
  4567  001FA4  EE20 F005          	lfsr	2,5
  4568  001FA8  517B               	movf	CANsendMessage@data& (0+255),w,b
  4569  001FAA  26D9               	addwf	fsr2l,f,c
  4570  001FAC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4571  001FAE  22DA               	addwfc	fsr2h,f,c
  4572  001FB0  50DF               	movf	indf2,w,c
  4573  001FB2  010F               	movlb	15	; () banked
  4574  001FB4  6F2B               	movwf	43,b	;volatile
  4575                           
  4576                           ; BSR set to: 15
  4577                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  4578  001FB6  0100               	movlb	0	; () banked
  4579  001FB8  EE20 F006          	lfsr	2,6
  4580  001FBC  517B               	movf	CANsendMessage@data& (0+255),w,b
  4581  001FBE  26D9               	addwf	fsr2l,f,c
  4582  001FC0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4583  001FC2  22DA               	addwfc	fsr2h,f,c
  4584  001FC4  50DF               	movf	indf2,w,c
  4585  001FC6  010F               	movlb	15	; () banked
  4586  001FC8  6F2C               	movwf	44,b	;volatile
  4587                           
  4588                           ; BSR set to: 15
  4589                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  4590  001FCA  0100               	movlb	0	; () banked
  4591  001FCC  EE20 F007          	lfsr	2,7
  4592  001FD0  517B               	movf	CANsendMessage@data& (0+255),w,b
  4593  001FD2  26D9               	addwf	fsr2l,f,c
  4594  001FD4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4595  001FD6  22DA               	addwfc	fsr2h,f,c
  4596  001FD8  50DF               	movf	indf2,w,c
  4597  001FDA  010F               	movlb	15	; () banked
  4598  001FDC  6F2D               	movwf	45,b	;volatile
  4599                           
  4600                           ; BSR set to: 15
  4601                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  4602  001FDE  010F               	movlb	15	; () banked
  4603  001FE0  8720               	bsf	32,3,b	;volatile
  4604                           
  4605                           ; BSR set to: 15
  4606                           ;inc\CANlib.h: 520: return;
  4607  001FE2  0012               	return	
  4608  001FE4                     __end_of_CANsendMessage:
  4609                           	opt stack 0
  4610                           tblptru	equ	0xFF8
  4611                           tblptrh	equ	0xFF7
  4612                           tblptrl	equ	0xFF6
  4613                           tablat	equ	0xFF5
  4614                           postinc0	equ	0xFEE
  4615                           wreg	equ	0xFE8
  4616                           postdec1	equ	0xFE5
  4617                           fsr1l	equ	0xFE1
  4618                           indf2	equ	0xFDF
  4619                           postinc2	equ	0xFDE
  4620                           postdec2	equ	0xFDD
  4621                           fsr2h	equ	0xFDA
  4622                           fsr2l	equ	0xFD9
  4623                           status	equ	0xFD8
  4624                           
  4625 ;; *************** function _CANisTxReady *****************
  4626 ;; Defined at:
  4627 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  4628 ;; Parameters:    Size  Location     Type
  4629 ;;		None
  4630 ;; Auto vars:     Size  Location     Type
  4631 ;;		None
  4632 ;; Return value:  Size  Location     Type
  4633 ;;                  1    wreg      unsigned char 
  4634 ;; Registers used:
  4635 ;;		wreg, status,2
  4636 ;; Tracked objects:
  4637 ;;		On entry : 0/0
  4638 ;;		On exit  : 0/0
  4639 ;;		Unchanged: 0/0
  4640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4642 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4644 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4645 ;;Total ram usage:        1 bytes
  4646 ;; Hardware stack levels used:    1
  4647 ;; Hardware stack levels required when called:    4
  4648 ;; This function calls:
  4649 ;;		Nothing
  4650 ;; This function is called by:
  4651 ;;		_main
  4652 ;;		_park_search
  4653 ;;		_park_routine
  4654 ;;		_can_send
  4655 ;; This function uses a non-reentrant model
  4656 ;;
  4657                           
  4658                           	psect	text6
  4659  0066CC                     __ptext6:
  4660                           	opt stack 0
  4661  0066CC                     _CANisTxReady:
  4662                           	opt stack 23
  4663                           
  4664                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  4665                           
  4666                           ; BSR set to: 15
  4667                           ;incstack = 0
  4668  0066CC  0E01               	movlw	1
  4669  0066CE  0100               	movlb	0	; () banked
  4670  0066D0  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4671                           
  4672                           ; BSR set to: 0
  4673  0066D2  010F               	movlb	15	; () banked
  4674  0066D4  A740               	btfss	64,3,b	;volatile
  4675  0066D6  D009               	goto	l556
  4676                           
  4677                           ; BSR set to: 15
  4678  0066D8  010F               	movlb	15	; () banked
  4679  0066DA  A730               	btfss	48,3,b	;volatile
  4680  0066DC  D006               	goto	l556
  4681                           
  4682                           ; BSR set to: 15
  4683  0066DE  010F               	movlb	15	; () banked
  4684  0066E0  A720               	btfss	32,3,b	;volatile
  4685  0066E2  D003               	goto	l556
  4686                           
  4687                           ; BSR set to: 15
  4688  0066E4  0E00               	movlw	0
  4689  0066E6  0100               	movlb	0	; () banked
  4690  0066E8  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4691  0066EA                     l556:
  4692  0066EA  0100               	movlb	0	; () banked
  4693  0066EC  5177               	movf	_CANisTxReady$2845& (0+255),w,b
  4694  0066EE  0012               	return	
  4695  0066F0                     __end_of_CANisTxReady:
  4696                           	opt stack 0
  4697                           tblptru	equ	0xFF8
  4698                           tblptrh	equ	0xFF7
  4699                           tblptrl	equ	0xFF6
  4700                           tablat	equ	0xFF5
  4701                           postinc0	equ	0xFEE
  4702                           wreg	equ	0xFE8
  4703                           postdec1	equ	0xFE5
  4704                           fsr1l	equ	0xFE1
  4705                           indf2	equ	0xFDF
  4706                           postinc2	equ	0xFDE
  4707                           postdec2	equ	0xFDD
  4708                           fsr2h	equ	0xFDA
  4709                           fsr2l	equ	0xFD9
  4710                           status	equ	0xFD8
  4711                           
  4712 ;; *************** function _abs *****************
  4713 ;; Defined at:
  4714 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  4715 ;; Parameters:    Size  Location     Type
  4716 ;;  a               2   23[BANK0 ] int 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;		None
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  2   23[BANK0 ] int 
  4721 ;; Registers used:
  4722 ;;		wreg, status,2, status,0
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4728 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4730 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4731 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4732 ;;Total ram usage:        4 bytes
  4733 ;; Hardware stack levels used:    1
  4734 ;; Hardware stack levels required when called:    4
  4735 ;; This function calls:
  4736 ;;		Nothing
  4737 ;; This function is called by:
  4738 ;;		_park_search
  4739 ;;		_parallelo
  4740 ;; This function uses a non-reentrant model
  4741 ;;
  4742                           
  4743                           	psect	text7
  4744  006674                     __ptext7:
  4745                           	opt stack 0
  4746  006674                     _abs:
  4747                           	opt stack 24
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;incstack = 0
  4751  006674  0100               	movlb	0	; () banked
  4752  006676  AF78               	btfss	(abs@a+1)& (0+255),7,b
  4753  006678  D00E               	goto	l896
  4754                           
  4755                           ; BSR set to: 0
  4756  00667A  C077  F079         	movff	abs@a,??_abs
  4757  00667E  C078  F07A         	movff	abs@a+1,??_abs+1
  4758  006682  0100               	movlb	0	; () banked
  4759  006684  1F79               	comf	??_abs& (0+255),f,b
  4760  006686  1F7A               	comf	(??_abs+1)& (0+255),f,b
  4761  006688  4B79               	infsnz	??_abs& (0+255),f,b
  4762  00668A  2B7A               	incf	(??_abs+1)& (0+255),f,b
  4763  00668C  C079  F077         	movff	??_abs,?_abs
  4764  006690  C07A  F078         	movff	??_abs+1,?_abs+1
  4765  006694  0012               	return	
  4766  006696                     l896:
  4767                           
  4768                           ; BSR set to: 0
  4769  006696  C077  F077         	movff	abs@a,?_abs
  4770  00669A  C078  F078         	movff	abs@a+1,?_abs+1
  4771                           
  4772                           ; BSR set to: 0
  4773  00669E  0012               	return		;funcret
  4774  0066A0                     __end_of_abs:
  4775                           	opt stack 0
  4776                           tblptru	equ	0xFF8
  4777                           tblptrh	equ	0xFF7
  4778                           tblptrl	equ	0xFF6
  4779                           tablat	equ	0xFF5
  4780                           postinc0	equ	0xFEE
  4781                           wreg	equ	0xFE8
  4782                           postdec1	equ	0xFE5
  4783                           fsr1l	equ	0xFE1
  4784                           indf2	equ	0xFDF
  4785                           postinc2	equ	0xFDE
  4786                           postdec2	equ	0xFDD
  4787                           fsr2h	equ	0xFDA
  4788                           fsr2l	equ	0xFD9
  4789                           status	equ	0xFD8
  4790                           
  4791 ;; *************** function _matematica *****************
  4792 ;; Defined at:
  4793 ;;		line 492 in file "parcheggio.c"
  4794 ;; Parameters:    Size  Location     Type
  4795 ;;		None
  4796 ;; Auto vars:     Size  Location     Type
  4797 ;;		None
  4798 ;; Return value:  Size  Location     Type
  4799 ;;		None               void
  4800 ;; Registers used:
  4801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4802 ;; Tracked objects:
  4803 ;;		On entry : 0/0
  4804 ;;		On exit  : 0/0
  4805 ;;		Unchanged: 0/0
  4806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4808 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4810 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4811 ;;Total ram usage:       28 bytes
  4812 ;; Hardware stack levels used:    1
  4813 ;; Hardware stack levels required when called:    8
  4814 ;; This function calls:
  4815 ;;		___fladd
  4816 ;;		___fldiv
  4817 ;;		___flmul
  4818 ;;		___flneg
  4819 ;;		_asin
  4820 ;;		_cos
  4821 ;; This function is called by:
  4822 ;;		_park_routine
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text8
  4827  002674                     __ptext8:
  4828                           	opt stack 0
  4829  002674                     _matematica:
  4830                           	opt stack 21
  4831                           
  4832                           ;parcheggio.c: 493: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4833                           
  4834                           ; BSR set to: 0
  4835                           ;incstack = 0
  4836  002674  C134  F0AD         	movff	_bordo,___fladd@a	;volatile
  4837  002678  C135  F0AE         	movff	_bordo+1,___fladd@a+1	;volatile
  4838  00267C  C136  F0AF         	movff	_bordo+2,___fladd@a+2	;volatile
  4839  002680  C137  F0B0         	movff	_bordo+3,___fladd@a+3	;volatile
  4840  002684  0E00               	movlw	0
  4841  002686  0100               	movlb	0	; () banked
  4842  002688  6F7B               	movwf	___fldiv@a& (0+255),b
  4843  00268A  0E00               	movlw	0
  4844  00268C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4845  00268E  0E00               	movlw	0
  4846  002690  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4847  002692  0E40               	movlw	64
  4848  002694  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4849  002696  C1E4  F077         	movff	_larghezza,___fldiv@b
  4850  00269A  C1E5  F078         	movff	_larghezza+1,___fldiv@b+1
  4851  00269E  C1E6  F079         	movff	_larghezza+2,___fldiv@b+2
  4852  0026A2  C1E7  F07A         	movff	_larghezza+3,___fldiv@b+3
  4853  0026A6  EC57  F021         	call	___fldiv	;wreg free
  4854  0026AA  C077  F0A9         	movff	?___fldiv,___fladd@b
  4855  0026AE  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  4856  0026B2  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  4857  0026B6  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  4858  0026BA  EC85  F018         	call	___fladd	;wreg free
  4859  0026BE  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  4860  0026C2  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  4861  0026C6  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  4862  0026CA  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  4863  0026CE  EC03  F033         	call	___flneg	;wreg free
  4864  0026D2  C0BD  F1BC         	movff	?___flneg,_matematica$3745
  4865  0026D6  C0BE  F1BD         	movff	?___flneg+1,_matematica$3745+1
  4866  0026DA  C0BF  F1BE         	movff	?___flneg+2,_matematica$3745+2
  4867  0026DE  C0C0  F1BF         	movff	?___flneg+3,_matematica$3745+3
  4868                           
  4869                           ;parcheggio.c: 493: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4870  0026E2  C1BC  F0AD         	movff	_matematica$3745,___fladd@a
  4871  0026E6  C1BD  F0AE         	movff	_matematica$3745+1,___fladd@a+1
  4872  0026EA  C1BE  F0AF         	movff	_matematica$3745+2,___fladd@a+2
  4873  0026EE  C1BF  F0B0         	movff	_matematica$3745+3,___fladd@a+3
  4874  0026F2  0E00               	movlw	0
  4875  0026F4  0100               	movlb	0	; () banked
  4876  0026F6  6F94               	movwf	___flmul@a& (0+255),b
  4877  0026F8  0E00               	movlw	0
  4878  0026FA  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4879  0026FC  0E00               	movlw	0
  4880  0026FE  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4881  002700  0E40               	movlw	64
  4882  002702  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4883  002704  C1E8  F090         	movff	_raggio,___flmul@b
  4884  002708  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4885  00270C  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4886  002710  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4887  002714  ECD9  F01A         	call	___flmul	;wreg free
  4888  002718  C090  F0A9         	movff	?___flmul,___fladd@b
  4889  00271C  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  4890  002720  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  4891  002724  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  4892  002728  EC85  F018         	call	___fladd	;wreg free
  4893  00272C  C0A9  F1C0         	movff	?___fladd,_matematica$3746
  4894  002730  C0AA  F1C1         	movff	?___fladd+1,_matematica$3746+1
  4895  002734  C0AB  F1C2         	movff	?___fladd+2,_matematica$3746+2
  4896  002738  C0AC  F1C3         	movff	?___fladd+3,_matematica$3746+3
  4897                           
  4898                           ;parcheggio.c: 493: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4899  00273C  0E00               	movlw	0
  4900  00273E  0100               	movlb	0	; () banked
  4901  002740  6F7B               	movwf	___fldiv@a& (0+255),b
  4902  002742  0E00               	movlw	0
  4903  002744  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4904  002746  0E00               	movlw	0
  4905  002748  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4906  00274A  0E40               	movlw	64
  4907  00274C  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4908  00274E  C1E4  F077         	movff	_larghezza,___fldiv@b
  4909  002752  C1E5  F078         	movff	_larghezza+1,___fldiv@b+1
  4910  002756  C1E6  F079         	movff	_larghezza+2,___fldiv@b+2
  4911  00275A  C1E7  F07A         	movff	_larghezza+3,___fldiv@b+3
  4912  00275E  EC57  F021         	call	___fldiv	;wreg free
  4913  002762  C077  F0BD         	movff	?___fldiv,___flneg@f1
  4914  002766  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  4915  00276A  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  4916  00276E  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  4917  002772  EC03  F033         	call	___flneg	;wreg free
  4918  002776  C0BD  F0AD         	movff	?___flneg,___fladd@a
  4919  00277A  C0BE  F0AE         	movff	?___flneg+1,___fladd@a+1
  4920  00277E  C0BF  F0AF         	movff	?___flneg+2,___fladd@a+2
  4921  002782  C0C0  F0B0         	movff	?___flneg+3,___fladd@a+3
  4922  002786  C1C0  F0A9         	movff	_matematica$3746,___fladd@b
  4923  00278A  C1C1  F0AA         	movff	_matematica$3746+1,___fladd@b+1
  4924  00278E  C1C2  F0AB         	movff	_matematica$3746+2,___fladd@b+2
  4925  002792  C1C3  F0AC         	movff	_matematica$3746+3,___fladd@b+3
  4926  002796  EC85  F018         	call	___fladd	;wreg free
  4927  00279A  C0A9  F1C4         	movff	?___fladd,_matematica$3747
  4928  00279E  C0AA  F1C5         	movff	?___fladd+1,_matematica$3747+1
  4929  0027A2  C0AB  F1C6         	movff	?___fladd+2,_matematica$3747+2
  4930  0027A6  C0AC  F1C7         	movff	?___fladd+3,_matematica$3747+3
  4931                           
  4932                           ;parcheggio.c: 493: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4933  0027AA  C1C4  F077         	movff	_matematica$3747,___fldiv@b
  4934  0027AE  C1C5  F078         	movff	_matematica$3747+1,___fldiv@b+1
  4935  0027B2  C1C6  F079         	movff	_matematica$3747+2,___fldiv@b+2
  4936  0027B6  C1C7  F07A         	movff	_matematica$3747+3,___fldiv@b+3
  4937  0027BA  0E00               	movlw	0
  4938  0027BC  0100               	movlb	0	; () banked
  4939  0027BE  6F94               	movwf	___flmul@a& (0+255),b
  4940  0027C0  0E00               	movlw	0
  4941  0027C2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4942  0027C4  0E00               	movlw	0
  4943  0027C6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4944  0027C8  0E40               	movlw	64
  4945  0027CA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4946  0027CC  C1E8  F090         	movff	_raggio,___flmul@b
  4947  0027D0  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4948  0027D4  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4949  0027D8  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4950  0027DC  ECD9  F01A         	call	___flmul	;wreg free
  4951  0027E0  C090  F07B         	movff	?___flmul,___fldiv@a
  4952  0027E4  C091  F07C         	movff	?___flmul+1,___fldiv@a+1
  4953  0027E8  C092  F07D         	movff	?___flmul+2,___fldiv@a+2
  4954  0027EC  C093  F07E         	movff	?___flmul+3,___fldiv@a+3
  4955  0027F0  EC57  F021         	call	___fldiv	;wreg free
  4956  0027F4  C077  F1C8         	movff	?___fldiv,_matematica$3748
  4957  0027F8  C078  F1C9         	movff	?___fldiv+1,_matematica$3748+1
  4958  0027FC  C079  F1CA         	movff	?___fldiv+2,_matematica$3748+2
  4959  002800  C07A  F1CB         	movff	?___fldiv+3,_matematica$3748+3
  4960                           
  4961                           ;parcheggio.c: 493: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4962  002804  C1C8  F0D5         	movff	_matematica$3748,asin@x
  4963  002808  C1C9  F0D6         	movff	_matematica$3748+1,asin@x+1
  4964  00280C  C1CA  F0D7         	movff	_matematica$3748+2,asin@x+2
  4965  002810  C1CB  F0D8         	movff	_matematica$3748+3,asin@x+3
  4966  002814  EC92  F026         	call	_asin	;wreg free
  4967  002818  C0D5  F12C         	movff	?_asin,_alfa
  4968  00281C  C0D6  F12D         	movff	?_asin+1,_alfa+1
  4969  002820  C0D7  F12E         	movff	?_asin+2,_alfa+2
  4970  002824  C0D8  F12F         	movff	?_asin+3,_alfa+3
  4971                           
  4972                           ;parcheggio.c: 494: alfa = alfa / 3.14159265358979323846 * 180;
  4973  002828  0EDB               	movlw	219
  4974  00282A  0100               	movlb	0	; () banked
  4975  00282C  6F7B               	movwf	___fldiv@a& (0+255),b
  4976  00282E  0E0F               	movlw	15
  4977  002830  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4978  002832  0E49               	movlw	73
  4979  002834  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4980  002836  0E40               	movlw	64
  4981  002838  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4982  00283A  C12C  F077         	movff	_alfa,___fldiv@b
  4983  00283E  C12D  F078         	movff	_alfa+1,___fldiv@b+1
  4984  002842  C12E  F079         	movff	_alfa+2,___fldiv@b+2
  4985  002846  C12F  F07A         	movff	_alfa+3,___fldiv@b+3
  4986  00284A  EC57  F021         	call	___fldiv	;wreg free
  4987  00284E  C077  F090         	movff	?___fldiv,___flmul@b
  4988  002852  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  4989  002856  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  4990  00285A  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  4991  00285E  0E00               	movlw	0
  4992  002860  0100               	movlb	0	; () banked
  4993  002862  6F94               	movwf	___flmul@a& (0+255),b
  4994  002864  0E00               	movlw	0
  4995  002866  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4996  002868  0E34               	movlw	52
  4997  00286A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4998  00286C  0E43               	movlw	67
  4999  00286E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5000  002870  ECD9  F01A         	call	___flmul	;wreg free
  5001  002874  C090  F12C         	movff	?___flmul,_alfa
  5002  002878  C091  F12D         	movff	?___flmul+1,_alfa+1
  5003  00287C  C092  F12E         	movff	?___flmul+2,_alfa+2
  5004  002880  C093  F12F         	movff	?___flmul+3,_alfa+3
  5005                           
  5006                           ;parcheggio.c: 495: beta = 90 - alfa;
  5007  002884  C12C  F0BD         	movff	_alfa,___flneg@f1
  5008  002888  C12D  F0BE         	movff	_alfa+1,___flneg@f1+1
  5009  00288C  C12E  F0BF         	movff	_alfa+2,___flneg@f1+2
  5010  002890  C12F  F0C0         	movff	_alfa+3,___flneg@f1+3
  5011  002894  EC03  F033         	call	___flneg	;wreg free
  5012  002898  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5013  00289C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5014  0028A0  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5015  0028A4  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5016  0028A8  0E00               	movlw	0
  5017  0028AA  0100               	movlb	0	; () banked
  5018  0028AC  6FAD               	movwf	___fladd@a& (0+255),b
  5019  0028AE  0E00               	movlw	0
  5020  0028B0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5021  0028B2  0EB4               	movlw	180
  5022  0028B4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5023  0028B6  0E42               	movlw	66
  5024  0028B8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5025  0028BA  EC85  F018         	call	___fladd	;wreg free
  5026  0028BE  C0A9  F130         	movff	?___fladd,_beta
  5027  0028C2  C0AA  F131         	movff	?___fladd+1,_beta+1
  5028  0028C6  C0AB  F132         	movff	?___fladd+2,_beta+2
  5029  0028CA  C0AC  F133         	movff	?___fladd+3,_beta+3
  5030                           
  5031                           ;parcheggio.c: 496: alfa = (alfa * 3.14159265358979323846) / 180;
  5032  0028CE  0EDB               	movlw	219
  5033  0028D0  0100               	movlb	0	; () banked
  5034  0028D2  6F94               	movwf	___flmul@a& (0+255),b
  5035  0028D4  0E0F               	movlw	15
  5036  0028D6  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5037  0028D8  0E49               	movlw	73
  5038  0028DA  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5039  0028DC  0E40               	movlw	64
  5040  0028DE  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5041  0028E0  C12C  F090         	movff	_alfa,___flmul@b
  5042  0028E4  C12D  F091         	movff	_alfa+1,___flmul@b+1
  5043  0028E8  C12E  F092         	movff	_alfa+2,___flmul@b+2
  5044  0028EC  C12F  F093         	movff	_alfa+3,___flmul@b+3
  5045  0028F0  ECD9  F01A         	call	___flmul	;wreg free
  5046  0028F4  C090  F077         	movff	?___flmul,___fldiv@b
  5047  0028F8  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5048  0028FC  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5049  002900  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5050  002904  0E00               	movlw	0
  5051  002906  0100               	movlb	0	; () banked
  5052  002908  6F7B               	movwf	___fldiv@a& (0+255),b
  5053  00290A  0E00               	movlw	0
  5054  00290C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5055  00290E  0E34               	movlw	52
  5056  002910  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5057  002912  0E43               	movlw	67
  5058  002914  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5059  002916  EC57  F021         	call	___fldiv	;wreg free
  5060  00291A  C077  F12C         	movff	?___fldiv,_alfa
  5061  00291E  C078  F12D         	movff	?___fldiv+1,_alfa+1
  5062  002922  C079  F12E         	movff	?___fldiv+2,_alfa+2
  5063  002926  C07A  F12F         	movff	?___fldiv+3,_alfa+3
  5064                           
  5065                           ;parcheggio.c: 497: n = cos(alfa);
  5066  00292A  C12C  F1B4         	movff	_alfa,cos@f
  5067  00292E  C12D  F1B5         	movff	_alfa+1,cos@f+1
  5068  002932  C12E  F1B6         	movff	_alfa+2,cos@f+2
  5069  002936  C12F  F1B7         	movff	_alfa+3,cos@f+3
  5070  00293A  EC40  F030         	call	_cos	;wreg free
  5071  00293E  C1B4  F138         	movff	?_cos,_n
  5072  002942  C1B5  F139         	movff	?_cos+1,_n+1
  5073  002946  C1B6  F13A         	movff	?_cos+2,_n+2
  5074  00294A  C1B7  F13B         	movff	?_cos+3,_n+3
  5075                           
  5076                           ;parcheggio.c: 498: n = 2 * raggio *n;
  5077  00294E  C138  F094         	movff	_n,___flmul@a
  5078  002952  C139  F095         	movff	_n+1,___flmul@a+1
  5079  002956  C13A  F096         	movff	_n+2,___flmul@a+2
  5080  00295A  C13B  F097         	movff	_n+3,___flmul@a+3
  5081  00295E  C1E8  F090         	movff	_raggio,___flmul@b
  5082  002962  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  5083  002966  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  5084  00296A  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  5085  00296E  ECD9  F01A         	call	___flmul	;wreg free
  5086  002972  C090  F1D4         	movff	?___flmul,_matematica$3749
  5087  002976  C091  F1D5         	movff	?___flmul+1,_matematica$3749+1
  5088  00297A  C092  F1D6         	movff	?___flmul+2,_matematica$3749+2
  5089  00297E  C093  F1D7         	movff	?___flmul+3,_matematica$3749+3
  5090                           
  5091                           ;parcheggio.c: 498: n = 2 * raggio *n;
  5092  002982  C1D4  F090         	movff	_matematica$3749,___flmul@b
  5093  002986  C1D5  F091         	movff	_matematica$3749+1,___flmul@b+1
  5094  00298A  C1D6  F092         	movff	_matematica$3749+2,___flmul@b+2
  5095  00298E  C1D7  F093         	movff	_matematica$3749+3,___flmul@b+3
  5096  002992  0E00               	movlw	0
  5097  002994  0100               	movlb	0	; () banked
  5098  002996  6F94               	movwf	___flmul@a& (0+255),b
  5099  002998  0E00               	movlw	0
  5100  00299A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5101  00299C  0E00               	movlw	0
  5102  00299E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5103  0029A0  0E40               	movlw	64
  5104  0029A2  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5105  0029A4  ECD9  F01A         	call	___flmul	;wreg free
  5106  0029A8  C090  F138         	movff	?___flmul,_n
  5107  0029AC  C091  F139         	movff	?___flmul+1,_n+1
  5108  0029B0  C092  F13A         	movff	?___flmul+2,_n+2
  5109  0029B4  C093  F13B         	movff	?___flmul+3,_n+3
  5110                           
  5111                           ;parcheggio.c: 499: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  5112  0029B8  C130  F094         	movff	_beta,___flmul@a
  5113  0029BC  C131  F095         	movff	_beta+1,___flmul@a+1
  5114  0029C0  C132  F096         	movff	_beta+2,___flmul@a+2
  5115  0029C4  C133  F097         	movff	_beta+3,___flmul@a+3
  5116  0029C8  C1E8  F090         	movff	_raggio,___flmul@b
  5117  0029CC  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  5118  0029D0  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  5119  0029D4  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  5120  0029D8  ECD9  F01A         	call	___flmul	;wreg free
  5121  0029DC  C090  F1D4         	movff	?___flmul,_matematica$3749
  5122  0029E0  C091  F1D5         	movff	?___flmul+1,_matematica$3749+1
  5123  0029E4  C092  F1D6         	movff	?___flmul+2,_matematica$3749+2
  5124  0029E8  C093  F1D7         	movff	?___flmul+3,_matematica$3749+3
  5125                           
  5126                           ;parcheggio.c: 499: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  5127  0029EC  0EDB               	movlw	219
  5128  0029EE  0100               	movlb	0	; () banked
  5129  0029F0  6F94               	movwf	___flmul@a& (0+255),b
  5130  0029F2  0E0F               	movlw	15
  5131  0029F4  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5132  0029F6  0EC9               	movlw	201
  5133  0029F8  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5134  0029FA  0E40               	movlw	64
  5135  0029FC  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5136  0029FE  C1D4  F090         	movff	_matematica$3749,___flmul@b
  5137  002A02  C1D5  F091         	movff	_matematica$3749+1,___flmul@b+1
  5138  002A06  C1D6  F092         	movff	_matematica$3749+2,___flmul@b+2
  5139  002A0A  C1D7  F093         	movff	_matematica$3749+3,___flmul@b+3
  5140  002A0E  ECD9  F01A         	call	___flmul	;wreg free
  5141  002A12  C090  F077         	movff	?___flmul,___fldiv@b
  5142  002A16  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5143  002A1A  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5144  002A1E  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5145  002A22  0E00               	movlw	0
  5146  002A24  0100               	movlb	0	; () banked
  5147  002A26  6F7B               	movwf	___fldiv@a& (0+255),b
  5148  002A28  0E00               	movlw	0
  5149  002A2A  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5150  002A2C  0EB4               	movlw	180
  5151  002A2E  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5152  002A30  0E43               	movlw	67
  5153  002A32  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5154  002A34  EC57  F021         	call	___fldiv	;wreg free
  5155  002A38  C077  F140         	movff	?___fldiv,_prima_sterzata
  5156  002A3C  C078  F141         	movff	?___fldiv+1,_prima_sterzata+1
  5157  002A40  C079  F142         	movff	?___fldiv+2,_prima_sterzata+2
  5158  002A44  C07A  F143         	movff	?___fldiv+3,_prima_sterzata+3
  5159                           
  5160                           ;parcheggio.c: 500: K_var = raggio + (2 * larghezza / 3);
  5161  002A48  0E00               	movlw	0
  5162  002A4A  0100               	movlb	0	; () banked
  5163  002A4C  6F7B               	movwf	___fldiv@a& (0+255),b
  5164  002A4E  0E00               	movlw	0
  5165  002A50  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5166  002A52  0E40               	movlw	64
  5167  002A54  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5168  002A56  0E40               	movlw	64
  5169  002A58  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5170  002A5A  0E00               	movlw	0
  5171  002A5C  0100               	movlb	0	; () banked
  5172  002A5E  6F94               	movwf	___flmul@a& (0+255),b
  5173  002A60  0E00               	movlw	0
  5174  002A62  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5175  002A64  0E00               	movlw	0
  5176  002A66  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5177  002A68  0E40               	movlw	64
  5178  002A6A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5179  002A6C  C1E4  F090         	movff	_larghezza,___flmul@b
  5180  002A70  C1E5  F091         	movff	_larghezza+1,___flmul@b+1
  5181  002A74  C1E6  F092         	movff	_larghezza+2,___flmul@b+2
  5182  002A78  C1E7  F093         	movff	_larghezza+3,___flmul@b+3
  5183  002A7C  ECD9  F01A         	call	___flmul	;wreg free
  5184  002A80  C090  F077         	movff	?___flmul,___fldiv@b
  5185  002A84  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5186  002A88  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5187  002A8C  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5188  002A90  EC57  F021         	call	___fldiv	;wreg free
  5189  002A94  C077  F0A9         	movff	?___fldiv,___fladd@b
  5190  002A98  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  5191  002A9C  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  5192  002AA0  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  5193  002AA4  C1E8  F0AD         	movff	_raggio,___fladd@a
  5194  002AA8  C1E9  F0AE         	movff	_raggio+1,___fladd@a+1
  5195  002AAC  C1EA  F0AF         	movff	_raggio+2,___fladd@a+2
  5196  002AB0  C1EB  F0B0         	movff	_raggio+3,___fladd@a+3
  5197  002AB4  EC85  F018         	call	___fladd	;wreg free
  5198  002AB8  C0A9  F124         	movff	?___fladd,_K_var
  5199  002ABC  C0AA  F125         	movff	?___fladd+1,_K_var+1
  5200  002AC0  C0AB  F126         	movff	?___fladd+2,_K_var+2
  5201  002AC4  C0AC  F127         	movff	?___fladd+3,_K_var+3
  5202                           
  5203                           ;parcheggio.c: 501: J_var = raggio - (2 * larghezza / 3);
  5204  002AC8  0E00               	movlw	0
  5205  002ACA  0100               	movlb	0	; () banked
  5206  002ACC  6F7B               	movwf	___fldiv@a& (0+255),b
  5207  002ACE  0E00               	movlw	0
  5208  002AD0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5209  002AD2  0E40               	movlw	64
  5210  002AD4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5211  002AD6  0E40               	movlw	64
  5212  002AD8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5213  002ADA  0E00               	movlw	0
  5214  002ADC  0100               	movlb	0	; () banked
  5215  002ADE  6F94               	movwf	___flmul@a& (0+255),b
  5216  002AE0  0E00               	movlw	0
  5217  002AE2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5218  002AE4  0E00               	movlw	0
  5219  002AE6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5220  002AE8  0E40               	movlw	64
  5221  002AEA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5222  002AEC  C1E4  F090         	movff	_larghezza,___flmul@b
  5223  002AF0  C1E5  F091         	movff	_larghezza+1,___flmul@b+1
  5224  002AF4  C1E6  F092         	movff	_larghezza+2,___flmul@b+2
  5225  002AF8  C1E7  F093         	movff	_larghezza+3,___flmul@b+3
  5226  002AFC  ECD9  F01A         	call	___flmul	;wreg free
  5227  002B00  C090  F077         	movff	?___flmul,___fldiv@b
  5228  002B04  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5229  002B08  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5230  002B0C  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5231  002B10  EC57  F021         	call	___fldiv	;wreg free
  5232  002B14  C077  F0BD         	movff	?___fldiv,___flneg@f1
  5233  002B18  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  5234  002B1C  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  5235  002B20  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  5236  002B24  EC03  F033         	call	___flneg	;wreg free
  5237  002B28  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5238  002B2C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5239  002B30  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5240  002B34  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5241  002B38  C1E8  F0AD         	movff	_raggio,___fladd@a
  5242  002B3C  C1E9  F0AE         	movff	_raggio+1,___fladd@a+1
  5243  002B40  C1EA  F0AF         	movff	_raggio+2,___fladd@a+2
  5244  002B44  C1EB  F0B0         	movff	_raggio+3,___fladd@a+3
  5245  002B48  EC85  F018         	call	___fladd	;wreg free
  5246  002B4C  C0A9  F120         	movff	?___fladd,_J_var
  5247  002B50  C0AA  F121         	movff	?___fladd+1,_J_var+1
  5248  002B54  C0AB  F122         	movff	?___fladd+2,_J_var+2
  5249  002B58  C0AC  F123         	movff	?___fladd+3,_J_var+3
  5250                           
  5251                           ;parcheggio.c: 502: Pmin = K_var * cos(asin((J_var / K_var)));
  5252  002B5C  C124  F07B         	movff	_K_var,___fldiv@a
  5253  002B60  C125  F07C         	movff	_K_var+1,___fldiv@a+1
  5254  002B64  C126  F07D         	movff	_K_var+2,___fldiv@a+2
  5255  002B68  C127  F07E         	movff	_K_var+3,___fldiv@a+3
  5256  002B6C  C120  F077         	movff	_J_var,___fldiv@b
  5257  002B70  C121  F078         	movff	_J_var+1,___fldiv@b+1
  5258  002B74  C122  F079         	movff	_J_var+2,___fldiv@b+2
  5259  002B78  C123  F07A         	movff	_J_var+3,___fldiv@b+3
  5260  002B7C  EC57  F021         	call	___fldiv	;wreg free
  5261  002B80  C077  F1CC         	movff	?___fldiv,_matematica$3750
  5262  002B84  C078  F1CD         	movff	?___fldiv+1,_matematica$3750+1
  5263  002B88  C079  F1CE         	movff	?___fldiv+2,_matematica$3750+2
  5264  002B8C  C07A  F1CF         	movff	?___fldiv+3,_matematica$3750+3
  5265                           
  5266                           ;parcheggio.c: 502: Pmin = K_var * cos(asin((J_var / K_var)));
  5267  002B90  C1CC  F0D5         	movff	_matematica$3750,asin@x
  5268  002B94  C1CD  F0D6         	movff	_matematica$3750+1,asin@x+1
  5269  002B98  C1CE  F0D7         	movff	_matematica$3750+2,asin@x+2
  5270  002B9C  C1CF  F0D8         	movff	_matematica$3750+3,asin@x+3
  5271  002BA0  EC92  F026         	call	_asin	;wreg free
  5272  002BA4  C0D5  F1B4         	movff	?_asin,cos@f
  5273  002BA8  C0D6  F1B5         	movff	?_asin+1,cos@f+1
  5274  002BAC  C0D7  F1B6         	movff	?_asin+2,cos@f+2
  5275  002BB0  C0D8  F1B7         	movff	?_asin+3,cos@f+3
  5276  002BB4  EC40  F030         	call	_cos	;wreg free
  5277  002BB8  C1B4  F1D0         	movff	?_cos,_matematica$3751
  5278  002BBC  C1B5  F1D1         	movff	?_cos+1,_matematica$3751+1
  5279  002BC0  C1B6  F1D2         	movff	?_cos+2,_matematica$3751+2
  5280  002BC4  C1B7  F1D3         	movff	?_cos+3,_matematica$3751+3
  5281                           
  5282                           ;parcheggio.c: 502: Pmin = K_var * cos(asin((J_var / K_var)));
  5283  002BC8  C1D0  F090         	movff	_matematica$3751,___flmul@b
  5284  002BCC  C1D1  F091         	movff	_matematica$3751+1,___flmul@b+1
  5285  002BD0  C1D2  F092         	movff	_matematica$3751+2,___flmul@b+2
  5286  002BD4  C1D3  F093         	movff	_matematica$3751+3,___flmul@b+3
  5287  002BD8  C124  F094         	movff	_K_var,___flmul@a
  5288  002BDC  C125  F095         	movff	_K_var+1,___flmul@a+1
  5289  002BE0  C126  F096         	movff	_K_var+2,___flmul@a+2
  5290  002BE4  C127  F097         	movff	_K_var+3,___flmul@a+3
  5291  002BE8  ECD9  F01A         	call	___flmul	;wreg free
  5292  002BEC  C090  F128         	movff	?___flmul,_Pmin
  5293  002BF0  C091  F129         	movff	?___flmul+1,_Pmin+1
  5294  002BF4  C092  F12A         	movff	?___flmul+2,_Pmin+2
  5295  002BF8  C093  F12B         	movff	?___flmul+3,_Pmin+3
  5296  002BFC  0012               	return		;funcret
  5297  002BFE                     __end_of_matematica:
  5298                           	opt stack 0
  5299                           tblptru	equ	0xFF8
  5300                           tblptrh	equ	0xFF7
  5301                           tblptrl	equ	0xFF6
  5302                           tablat	equ	0xFF5
  5303                           postinc0	equ	0xFEE
  5304                           wreg	equ	0xFE8
  5305                           postdec1	equ	0xFE5
  5306                           fsr1l	equ	0xFE1
  5307                           indf2	equ	0xFDF
  5308                           postinc2	equ	0xFDE
  5309                           postdec2	equ	0xFDD
  5310                           fsr2h	equ	0xFDA
  5311                           fsr2l	equ	0xFD9
  5312                           status	equ	0xFD8
  5313                           
  5314 ;; *************** function _cos *****************
  5315 ;; Defined at:
  5316 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\cos.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  f               4   41[BANK1 ] int 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;		None
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  4   41[BANK1 ] int 
  5323 ;; Registers used:
  5324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5330 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5331 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5333 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5334 ;;Total ram usage:        8 bytes
  5335 ;; Hardware stack levels used:    1
  5336 ;; Hardware stack levels required when called:    7
  5337 ;; This function calls:
  5338 ;;		___fladd
  5339 ;;		___flge
  5340 ;;		_sin
  5341 ;; This function is called by:
  5342 ;;		_matematica
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           	psect	text9
  5347  006080                     __ptext9:
  5348                           	opt stack 0
  5349  006080                     _cos:
  5350                           	opt stack 21
  5351                           
  5352                           ;incstack = 0
  5353  006080  0EDB               	movlw	219
  5354  006082  0100               	movlb	0	; () banked
  5355  006084  6FC5               	movwf	___flge@ff1& (0+255),b
  5356  006086  0E0F               	movlw	15
  5357  006088  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5358  00608A  0E49               	movlw	73
  5359  00608C  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5360  00608E  0E40               	movlw	64
  5361  006090  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5362  006092  C1B4  F0C9         	movff	cos@f,___flge@ff2
  5363  006096  C1B5  F0CA         	movff	cos@f+1,___flge@ff2+1
  5364  00609A  C1B6  F0CB         	movff	cos@f+2,___flge@ff2+2
  5365  00609E  C1B7  F0CC         	movff	cos@f+3,___flge@ff2+3
  5366  0060A2  EC30  F02D         	call	___flge	;wreg free
  5367  0060A6  0100               	movlb	0	; () banked
  5368  0060A8  B0D8               	btfsc	status,0,c
  5369  0060AA  D02E               	goto	l7914
  5370                           
  5371                           ; BSR set to: 0
  5372  0060AC  C1B4  F0A9         	movff	cos@f,___fladd@b
  5373  0060B0  C1B5  F0AA         	movff	cos@f+1,___fladd@b+1
  5374  0060B4  C1B6  F0AB         	movff	cos@f+2,___fladd@b+2
  5375  0060B8  C1B7  F0AC         	movff	cos@f+3,___fladd@b+3
  5376  0060BC  0EE4               	movlw	228
  5377  0060BE  0100               	movlb	0	; () banked
  5378  0060C0  6FAD               	movwf	___fladd@a& (0+255),b
  5379  0060C2  0ECB               	movlw	203
  5380  0060C4  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5381  0060C6  0E96               	movlw	150
  5382  0060C8  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5383  0060CA  0EC0               	movlw	192
  5384  0060CC  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5385  0060CE  EC85  F018         	call	___fladd	;wreg free
  5386  0060D2  C0A9  F1B8         	movff	?___fladd,_cos$3755
  5387  0060D6  C0AA  F1B9         	movff	?___fladd+1,_cos$3755+1
  5388  0060DA  C0AB  F1BA         	movff	?___fladd+2,_cos$3755+2
  5389  0060DE  C0AC  F1BB         	movff	?___fladd+3,_cos$3755+3
  5390  0060E2  C1B8  F19D         	movff	_cos$3755,sin@f
  5391  0060E6  C1B9  F19E         	movff	_cos$3755+1,sin@f+1
  5392  0060EA  C1BA  F19F         	movff	_cos$3755+2,sin@f+2
  5393  0060EE  C1BB  F1A0         	movff	_cos$3755+3,sin@f+3
  5394  0060F2  EC06  F025         	call	_sin	;wreg free
  5395  0060F6  C19D  F1B4         	movff	?_sin,?_cos
  5396  0060FA  C19E  F1B5         	movff	?_sin+1,?_cos+1
  5397  0060FE  C19F  F1B6         	movff	?_sin+2,?_cos+2
  5398  006102  C1A0  F1B7         	movff	?_sin+3,?_cos+3
  5399  006106  0012               	return	
  5400  006108                     l7914:
  5401  006108  C1B4  F0A9         	movff	cos@f,___fladd@b
  5402  00610C  C1B5  F0AA         	movff	cos@f+1,___fladd@b+1
  5403  006110  C1B6  F0AB         	movff	cos@f+2,___fladd@b+2
  5404  006114  C1B7  F0AC         	movff	cos@f+3,___fladd@b+3
  5405  006118  0EDB               	movlw	219
  5406  00611A  0100               	movlb	0	; () banked
  5407  00611C  6FAD               	movwf	___fladd@a& (0+255),b
  5408  00611E  0E0F               	movlw	15
  5409  006120  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5410  006122  0EC9               	movlw	201
  5411  006124  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5412  006126  0E3F               	movlw	63
  5413  006128  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5414  00612A  EC85  F018         	call	___fladd	;wreg free
  5415  00612E  C0A9  F1B8         	movff	?___fladd,_cos$3755
  5416  006132  C0AA  F1B9         	movff	?___fladd+1,_cos$3755+1
  5417  006136  C0AB  F1BA         	movff	?___fladd+2,_cos$3755+2
  5418  00613A  C0AC  F1BB         	movff	?___fladd+3,_cos$3755+3
  5419  00613E  C1B8  F19D         	movff	_cos$3755,sin@f
  5420  006142  C1B9  F19E         	movff	_cos$3755+1,sin@f+1
  5421  006146  C1BA  F19F         	movff	_cos$3755+2,sin@f+2
  5422  00614A  C1BB  F1A0         	movff	_cos$3755+3,sin@f+3
  5423  00614E  EC06  F025         	call	_sin	;wreg free
  5424  006152  C19D  F1B4         	movff	?_sin,?_cos
  5425  006156  C19E  F1B5         	movff	?_sin+1,?_cos+1
  5426  00615A  C19F  F1B6         	movff	?_sin+2,?_cos+2
  5427  00615E  C1A0  F1B7         	movff	?_sin+3,?_cos+3
  5428  006162  0012               	return	
  5429  006164                     __end_of_cos:
  5430                           	opt stack 0
  5431                           tblptru	equ	0xFF8
  5432                           tblptrh	equ	0xFF7
  5433                           tblptrl	equ	0xFF6
  5434                           tablat	equ	0xFF5
  5435                           postinc0	equ	0xFEE
  5436                           wreg	equ	0xFE8
  5437                           postdec1	equ	0xFE5
  5438                           fsr1l	equ	0xFE1
  5439                           indf2	equ	0xFDF
  5440                           postinc2	equ	0xFDE
  5441                           postdec2	equ	0xFDD
  5442                           fsr2h	equ	0xFDA
  5443                           fsr2l	equ	0xFD9
  5444                           status	equ	0xFD8
  5445                           
  5446 ;; *************** function _sin *****************
  5447 ;; Defined at:
  5448 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sin.c"
  5449 ;; Parameters:    Size  Location     Type
  5450 ;;  f               4   18[BANK1 ] int 
  5451 ;; Auto vars:     Size  Location     Type
  5452 ;;  x2              4   30[BANK1 ] int 
  5453 ;;  y               4   22[BANK1 ] int 
  5454 ;;  sgn             1   34[BANK1 ] unsigned char 
  5455 ;; Return value:  Size  Location     Type
  5456 ;;                  4   18[BANK1 ] unsigned char 
  5457 ;; Registers used:
  5458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5459 ;; Tracked objects:
  5460 ;;		On entry : 0/0
  5461 ;;		On exit  : 0/0
  5462 ;;		Unchanged: 0/0
  5463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5464 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5465 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5467 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5468 ;;Total ram usage:       17 bytes
  5469 ;; Hardware stack levels used:    1
  5470 ;; Hardware stack levels required when called:    6
  5471 ;; This function calls:
  5472 ;;		___fladd
  5473 ;;		___fldiv
  5474 ;;		___flge
  5475 ;;		___flmul
  5476 ;;		___flneg
  5477 ;;		___flsub
  5478 ;;		_eval_poly
  5479 ;;		_floor
  5480 ;; This function is called by:
  5481 ;;		_cos
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485                           	psect	text10
  5486  004A0C                     __ptext10:
  5487                           	opt stack 0
  5488  004A0C                     _sin:
  5489                           	opt stack 21
  5490                           
  5491                           ;incstack = 0
  5492  004A0C  0E00               	movlw	0
  5493  004A0E  0101               	movlb	1	; () banked
  5494  004A10  6FAD               	movwf	sin@sgn& (0+255),b
  5495                           
  5496                           ; BSR set to: 1
  5497  004A12  0101               	movlb	1	; () banked
  5498  004A14  AFA0               	btfss	(sin@f+3)& (0+255),7,b
  5499  004A16  D015               	goto	l7788
  5500                           
  5501                           ; BSR set to: 1
  5502  004A18  C19D  F0BD         	movff	sin@f,___flneg@f1
  5503  004A1C  C19E  F0BE         	movff	sin@f+1,___flneg@f1+1
  5504  004A20  C19F  F0BF         	movff	sin@f+2,___flneg@f1+2
  5505  004A24  C1A0  F0C0         	movff	sin@f+3,___flneg@f1+3
  5506  004A28  EC03  F033         	call	___flneg	;wreg free
  5507  004A2C  C0BD  F19D         	movff	?___flneg,sin@f
  5508  004A30  C0BE  F19E         	movff	?___flneg+1,sin@f+1
  5509  004A34  C0BF  F19F         	movff	?___flneg+2,sin@f+2
  5510  004A38  C0C0  F1A0         	movff	?___flneg+3,sin@f+3
  5511  004A3C  0E01               	movlw	1
  5512  004A3E  0101               	movlb	1	; () banked
  5513  004A40  6FAD               	movwf	sin@sgn& (0+255),b
  5514  004A42                     l7788:
  5515                           
  5516                           ; BSR set to: 1
  5517  004A42  C19D  F090         	movff	sin@f,___flmul@b
  5518  004A46  C19E  F091         	movff	sin@f+1,___flmul@b+1
  5519  004A4A  C19F  F092         	movff	sin@f+2,___flmul@b+2
  5520  004A4E  C1A0  F093         	movff	sin@f+3,___flmul@b+3
  5521  004A52  0E83               	movlw	131
  5522  004A54  0100               	movlb	0	; () banked
  5523  004A56  6F94               	movwf	___flmul@a& (0+255),b
  5524  004A58  0EF9               	movlw	249
  5525  004A5A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5526  004A5C  0E22               	movlw	34
  5527  004A5E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5528  004A60  0E3E               	movlw	62
  5529  004A62  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5530  004A64  ECD9  F01A         	call	___flmul	;wreg free
  5531  004A68  C090  F19D         	movff	?___flmul,sin@f
  5532  004A6C  C091  F19E         	movff	?___flmul+1,sin@f+1
  5533  004A70  C092  F19F         	movff	?___flmul+2,sin@f+2
  5534  004A74  C093  F1A0         	movff	?___flmul+3,sin@f+3
  5535  004A78  C19D  F195         	movff	sin@f,___flsub@b
  5536  004A7C  C19E  F196         	movff	sin@f+1,___flsub@b+1
  5537  004A80  C19F  F197         	movff	sin@f+2,___flsub@b+2
  5538  004A84  C1A0  F198         	movff	sin@f+3,___flsub@b+3
  5539  004A88  C19D  F18B         	movff	sin@f,floor@x
  5540  004A8C  C19E  F18C         	movff	sin@f+1,floor@x+1
  5541  004A90  C19F  F18D         	movff	sin@f+2,floor@x+2
  5542  004A94  C1A0  F18E         	movff	sin@f+3,floor@x+3
  5543  004A98  EC9C  F02E         	call	_floor	;wreg free
  5544  004A9C  C18B  F199         	movff	?_floor,___flsub@a
  5545  004AA0  C18C  F19A         	movff	?_floor+1,___flsub@a+1
  5546  004AA4  C18D  F19B         	movff	?_floor+2,___flsub@a+2
  5547  004AA8  C18E  F19C         	movff	?_floor+3,___flsub@a+3
  5548  004AAC  ECA3  F032         	call	___flsub	;wreg free
  5549  004AB0  C195  F19D         	movff	?___flsub,sin@f
  5550  004AB4  C196  F19E         	movff	?___flsub+1,sin@f+1
  5551  004AB8  C197  F19F         	movff	?___flsub+2,sin@f+2
  5552  004ABC  C198  F1A0         	movff	?___flsub+3,sin@f+3
  5553  004AC0  C19D  F090         	movff	sin@f,___flmul@b
  5554  004AC4  C19E  F091         	movff	sin@f+1,___flmul@b+1
  5555  004AC8  C19F  F092         	movff	sin@f+2,___flmul@b+2
  5556  004ACC  C1A0  F093         	movff	sin@f+3,___flmul@b+3
  5557  004AD0  0E00               	movlw	0
  5558  004AD2  0100               	movlb	0	; () banked
  5559  004AD4  6F94               	movwf	___flmul@a& (0+255),b
  5560  004AD6  0E00               	movlw	0
  5561  004AD8  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5562  004ADA  0E80               	movlw	128
  5563  004ADC  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5564  004ADE  0E40               	movlw	64
  5565  004AE0  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5566  004AE2  ECD9  F01A         	call	___flmul	;wreg free
  5567  004AE6  C090  F19D         	movff	?___flmul,sin@f
  5568  004AEA  C091  F19E         	movff	?___flmul+1,sin@f+1
  5569  004AEE  C092  F19F         	movff	?___flmul+2,sin@f+2
  5570  004AF2  C093  F1A0         	movff	?___flmul+3,sin@f+3
  5571  004AF6  0E00               	movlw	0
  5572  004AF8  0100               	movlb	0	; () banked
  5573  004AFA  6FC5               	movwf	___flge@ff1& (0+255),b
  5574  004AFC  0E00               	movlw	0
  5575  004AFE  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5576  004B00  0E00               	movlw	0
  5577  004B02  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5578  004B04  0E40               	movlw	64
  5579  004B06  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5580  004B08  C19D  F0C9         	movff	sin@f,___flge@ff2
  5581  004B0C  C19E  F0CA         	movff	sin@f+1,___flge@ff2+1
  5582  004B10  C19F  F0CB         	movff	sin@f+2,___flge@ff2+2
  5583  004B14  C1A0  F0CC         	movff	sin@f+3,___flge@ff2+3
  5584  004B18  EC30  F02D         	call	___flge	;wreg free
  5585  004B1C  0100               	movlb	0	; () banked
  5586  004B1E  B0D8               	btfsc	status,0,c
  5587  004B20  D025               	goto	l7800
  5588                           
  5589                           ; BSR set to: 0
  5590  004B22  C19D  F195         	movff	sin@f,___flsub@b
  5591  004B26  C19E  F196         	movff	sin@f+1,___flsub@b+1
  5592  004B2A  C19F  F197         	movff	sin@f+2,___flsub@b+2
  5593  004B2E  C1A0  F198         	movff	sin@f+3,___flsub@b+3
  5594  004B32  0E00               	movlw	0
  5595  004B34  0101               	movlb	1	; () banked
  5596  004B36  6F99               	movwf	___flsub@a& (0+255),b
  5597  004B38  0E00               	movlw	0
  5598  004B3A  6F9A               	movwf	(___flsub@a+1)& (0+255),b
  5599  004B3C  0E00               	movlw	0
  5600  004B3E  6F9B               	movwf	(___flsub@a+2)& (0+255),b
  5601  004B40  0E40               	movlw	64
  5602  004B42  6F9C               	movwf	(___flsub@a+3)& (0+255),b
  5603  004B44  ECA3  F032         	call	___flsub	;wreg free
  5604  004B48  C195  F19D         	movff	?___flsub,sin@f
  5605  004B4C  C196  F19E         	movff	?___flsub+1,sin@f+1
  5606  004B50  C197  F19F         	movff	?___flsub+2,sin@f+2
  5607  004B54  C198  F1A0         	movff	?___flsub+3,sin@f+3
  5608  004B58  0101               	movlb	1	; () banked
  5609  004B5A  51AD               	movf	sin@sgn& (0+255),w,b
  5610  004B5C  0101               	movlb	1	; () banked
  5611  004B5E  A4D8               	btfss	status,2,c
  5612  004B60  D002               	goto	u10380
  5613  004B62  0E01               	movlw	1
  5614  004B64  D001               	goto	u10390
  5615  004B66                     u10380:
  5616  004B66  0E00               	movlw	0
  5617  004B68                     u10390:
  5618  004B68  0101               	movlb	1	; () banked
  5619  004B6A  6FAD               	movwf	sin@sgn& (0+255),b
  5620  004B6C                     l7800:
  5621  004B6C  0E00               	movlw	0
  5622  004B6E  0100               	movlb	0	; () banked
  5623  004B70  6FC5               	movwf	___flge@ff1& (0+255),b
  5624  004B72  0E00               	movlw	0
  5625  004B74  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5626  004B76  0E80               	movlw	128
  5627  004B78  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5628  004B7A  0E3F               	movlw	63
  5629  004B7C  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5630  004B7E  C19D  F0C9         	movff	sin@f,___flge@ff2
  5631  004B82  C19E  F0CA         	movff	sin@f+1,___flge@ff2+1
  5632  004B86  C19F  F0CB         	movff	sin@f+2,___flge@ff2+2
  5633  004B8A  C1A0  F0CC         	movff	sin@f+3,___flge@ff2+3
  5634  004B8E  EC30  F02D         	call	___flge	;wreg free
  5635  004B92  0100               	movlb	0	; () banked
  5636  004B94  B0D8               	btfsc	status,0,c
  5637  004B96  D025               	goto	l7804
  5638                           
  5639                           ; BSR set to: 0
  5640  004B98  C19D  F0BD         	movff	sin@f,___flneg@f1
  5641  004B9C  C19E  F0BE         	movff	sin@f+1,___flneg@f1+1
  5642  004BA0  C19F  F0BF         	movff	sin@f+2,___flneg@f1+2
  5643  004BA4  C1A0  F0C0         	movff	sin@f+3,___flneg@f1+3
  5644  004BA8  EC03  F033         	call	___flneg	;wreg free
  5645  004BAC  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5646  004BB0  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5647  004BB4  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5648  004BB8  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5649  004BBC  0E00               	movlw	0
  5650  004BBE  0100               	movlb	0	; () banked
  5651  004BC0  6FAD               	movwf	___fladd@a& (0+255),b
  5652  004BC2  0E00               	movlw	0
  5653  004BC4  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5654  004BC6  0E00               	movlw	0
  5655  004BC8  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5656  004BCA  0E40               	movlw	64
  5657  004BCC  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5658  004BCE  EC85  F018         	call	___fladd	;wreg free
  5659  004BD2  C0A9  F19D         	movff	?___fladd,sin@f
  5660  004BD6  C0AA  F19E         	movff	?___fladd+1,sin@f+1
  5661  004BDA  C0AB  F19F         	movff	?___fladd+2,sin@f+2
  5662  004BDE  C0AC  F1A0         	movff	?___fladd+3,sin@f+3
  5663  004BE2                     l7804:
  5664  004BE2  C19D  F090         	movff	sin@f,___flmul@b
  5665  004BE6  C19E  F091         	movff	sin@f+1,___flmul@b+1
  5666  004BEA  C19F  F092         	movff	sin@f+2,___flmul@b+2
  5667  004BEE  C1A0  F093         	movff	sin@f+3,___flmul@b+3
  5668  004BF2  C19D  F094         	movff	sin@f,___flmul@a
  5669  004BF6  C19E  F095         	movff	sin@f+1,___flmul@a+1
  5670  004BFA  C19F  F096         	movff	sin@f+2,___flmul@a+2
  5671  004BFE  C1A0  F097         	movff	sin@f+3,___flmul@a+3
  5672  004C02  ECD9  F01A         	call	___flmul	;wreg free
  5673  004C06  C090  F1A9         	movff	?___flmul,sin@x2
  5674  004C0A  C091  F1AA         	movff	?___flmul+1,sin@x2+1
  5675  004C0E  C092  F1AB         	movff	?___flmul+2,sin@x2+2
  5676  004C12  C093  F1AC         	movff	?___flmul+3,sin@x2+3
  5677  004C16  C1A9  F0BD         	movff	sin@x2,eval_poly@x
  5678  004C1A  C1AA  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5679  004C1E  C1AB  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5680  004C22  C1AC  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5681  004C26  0E41               	movlw	low sin@coeff_b
  5682  004C28  0100               	movlb	0	; () banked
  5683  004C2A  6FC1               	movwf	eval_poly@d& (0+255),b
  5684  004C2C  0E0D               	movlw	high sin@coeff_b
  5685  004C2E  0100               	movlb	0	; () banked
  5686  004C30  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5687  004C32  0E00               	movlw	0
  5688  004C34  0100               	movlb	0	; () banked
  5689  004C36  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5690  004C38  0E03               	movlw	3
  5691  004C3A  6FC3               	movwf	eval_poly@n& (0+255),b
  5692  004C3C  EC2E  F02F         	call	_eval_poly	;wreg free
  5693  004C40  C0BD  F1A1         	movff	?_eval_poly,sin@y
  5694  004C44  C0BE  F1A2         	movff	?_eval_poly+1,sin@y+1
  5695  004C48  C0BF  F1A3         	movff	?_eval_poly+2,sin@y+2
  5696  004C4C  C0C0  F1A4         	movff	?_eval_poly+3,sin@y+3
  5697  004C50  C1A1  F07B         	movff	sin@y,___fldiv@a
  5698  004C54  C1A2  F07C         	movff	sin@y+1,___fldiv@a+1
  5699  004C58  C1A3  F07D         	movff	sin@y+2,___fldiv@a+2
  5700  004C5C  C1A4  F07E         	movff	sin@y+3,___fldiv@a+3
  5701  004C60  0E00               	movlw	0
  5702  004C62  0100               	movlb	0	; () banked
  5703  004C64  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5704  004C66  0E04               	movlw	4
  5705  004C68  6FC3               	movwf	eval_poly@n& (0+255),b
  5706  004C6A  0E2D               	movlw	low sin@coeff_a
  5707  004C6C  0100               	movlb	0	; () banked
  5708  004C6E  6FC1               	movwf	eval_poly@d& (0+255),b
  5709  004C70  0E0D               	movlw	high sin@coeff_a
  5710  004C72  0100               	movlb	0	; () banked
  5711  004C74  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5712  004C76  C1A9  F0BD         	movff	sin@x2,eval_poly@x
  5713  004C7A  C1AA  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5714  004C7E  C1AB  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5715  004C82  C1AC  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5716  004C86  EC2E  F02F         	call	_eval_poly	;wreg free
  5717  004C8A  C0BD  F077         	movff	?_eval_poly,___fldiv@b
  5718  004C8E  C0BE  F078         	movff	?_eval_poly+1,___fldiv@b+1
  5719  004C92  C0BF  F079         	movff	?_eval_poly+2,___fldiv@b+2
  5720  004C96  C0C0  F07A         	movff	?_eval_poly+3,___fldiv@b+3
  5721  004C9A  EC57  F021         	call	___fldiv	;wreg free
  5722  004C9E  C077  F1A5         	movff	?___fldiv,_sin$3756
  5723  004CA2  C078  F1A6         	movff	?___fldiv+1,_sin$3756+1
  5724  004CA6  C079  F1A7         	movff	?___fldiv+2,_sin$3756+2
  5725  004CAA  C07A  F1A8         	movff	?___fldiv+3,_sin$3756+3
  5726  004CAE  C19D  F090         	movff	sin@f,___flmul@b
  5727  004CB2  C19E  F091         	movff	sin@f+1,___flmul@b+1
  5728  004CB6  C19F  F092         	movff	sin@f+2,___flmul@b+2
  5729  004CBA  C1A0  F093         	movff	sin@f+3,___flmul@b+3
  5730  004CBE  C1A5  F094         	movff	_sin$3756,___flmul@a
  5731  004CC2  C1A6  F095         	movff	_sin$3756+1,___flmul@a+1
  5732  004CC6  C1A7  F096         	movff	_sin$3756+2,___flmul@a+2
  5733  004CCA  C1A8  F097         	movff	_sin$3756+3,___flmul@a+3
  5734  004CCE  ECD9  F01A         	call	___flmul	;wreg free
  5735  004CD2  C090  F19D         	movff	?___flmul,sin@f
  5736  004CD6  C091  F19E         	movff	?___flmul+1,sin@f+1
  5737  004CDA  C092  F19F         	movff	?___flmul+2,sin@f+2
  5738  004CDE  C093  F1A0         	movff	?___flmul+3,sin@f+3
  5739  004CE2  0101               	movlb	1	; () banked
  5740  004CE4  51AD               	movf	sin@sgn& (0+255),w,b
  5741  004CE6  0101               	movlb	1	; () banked
  5742  004CE8  B4D8               	btfsc	status,2,c
  5743  004CEA  D013               	goto	l1339
  5744                           
  5745                           ; BSR set to: 1
  5746  004CEC  C19D  F0BD         	movff	sin@f,___flneg@f1
  5747  004CF0  C19E  F0BE         	movff	sin@f+1,___flneg@f1+1
  5748  004CF4  C19F  F0BF         	movff	sin@f+2,___flneg@f1+2
  5749  004CF8  C1A0  F0C0         	movff	sin@f+3,___flneg@f1+3
  5750  004CFC  EC03  F033         	call	___flneg	;wreg free
  5751  004D00  C0BD  F19D         	movff	?___flneg,?_sin
  5752  004D04  C0BE  F19E         	movff	?___flneg+1,?_sin+1
  5753  004D08  C0BF  F19F         	movff	?___flneg+2,?_sin+2
  5754  004D0C  C0C0  F1A0         	movff	?___flneg+3,?_sin+3
  5755  004D10  0012               	return	
  5756  004D12                     l1339:
  5757                           
  5758                           ; BSR set to: 1
  5759  004D12  C19D  F19D         	movff	sin@f,?_sin
  5760  004D16  C19E  F19E         	movff	sin@f+1,?_sin+1
  5761  004D1A  C19F  F19F         	movff	sin@f+2,?_sin+2
  5762  004D1E  C1A0  F1A0         	movff	sin@f+3,?_sin+3
  5763  004D22  0012               	return		;funcret
  5764  004D24                     __end_of_sin:
  5765                           	opt stack 0
  5766                           tblptru	equ	0xFF8
  5767                           tblptrh	equ	0xFF7
  5768                           tblptrl	equ	0xFF6
  5769                           tablat	equ	0xFF5
  5770                           postinc0	equ	0xFEE
  5771                           wreg	equ	0xFE8
  5772                           postdec1	equ	0xFE5
  5773                           fsr1l	equ	0xFE1
  5774                           indf2	equ	0xFDF
  5775                           postinc2	equ	0xFDE
  5776                           postdec2	equ	0xFDD
  5777                           fsr2h	equ	0xFDA
  5778                           fsr2l	equ	0xFD9
  5779                           status	equ	0xFD8
  5780                           
  5781 ;; *************** function _floor *****************
  5782 ;; Defined at:
  5783 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;  x               4    0[BANK1 ] unsigned char 
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;  i               4    4[BANK1 ] unsigned char 
  5788 ;;  expon           2    8[BANK1 ] int 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  4    0[BANK1 ] int 
  5791 ;; Registers used:
  5792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5798 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5799 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5801 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  5802 ;;Total ram usage:       10 bytes
  5803 ;; Hardware stack levels used:    1
  5804 ;; Hardware stack levels required when called:    5
  5805 ;; This function calls:
  5806 ;;		___fladd
  5807 ;;		___flge
  5808 ;;		___fltol
  5809 ;;		___xxtofl
  5810 ;;		_frexp
  5811 ;; This function is called by:
  5812 ;;		_sin
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text11
  5817  005D38                     __ptext11:
  5818                           	opt stack 0
  5819  005D38                     _floor:
  5820                           	opt stack 21
  5821                           
  5822                           ;incstack = 0
  5823  005D38  C18B  F077         	movff	floor@x,frexp@value
  5824  005D3C  C18C  F078         	movff	floor@x+1,frexp@value+1
  5825  005D40  C18D  F079         	movff	floor@x+2,frexp@value+2
  5826  005D44  C18E  F07A         	movff	floor@x+3,frexp@value+3
  5827  005D48  0E93               	movlw	low floor@expon
  5828  005D4A  0100               	movlb	0	; () banked
  5829  005D4C  6F7B               	movwf	frexp@eptr& (0+255),b
  5830  005D4E  0E01               	movlw	high floor@expon
  5831  005D50  0100               	movlb	0	; () banked
  5832  005D52  6F7C               	movwf	(frexp@eptr+1)& (0+255),b
  5833  005D54  EC85  F031         	call	_frexp	;wreg free
  5834  005D58  0101               	movlb	1	; () banked
  5835  005D5A  AF94               	btfss	(floor@expon+1)& (0+255),7,b
  5836  005D5C  D017               	goto	l7394
  5837                           
  5838                           ; BSR set to: 1
  5839  005D5E  0101               	movlb	1	; () banked
  5840  005D60  AF8E               	btfss	(floor@x+3)& (0+255),7,b
  5841  005D62  D00A               	goto	l7390
  5842                           
  5843                           ; BSR set to: 1
  5844  005D64  0E00               	movlw	0
  5845  005D66  0101               	movlb	1	; () banked
  5846  005D68  6F8B               	movwf	?_floor& (0+255),b
  5847  005D6A  0E00               	movlw	0
  5848  005D6C  6F8C               	movwf	(?_floor+1)& (0+255),b
  5849  005D6E  0E80               	movlw	128
  5850  005D70  6F8D               	movwf	(?_floor+2)& (0+255),b
  5851  005D72  0EBF               	movlw	191
  5852  005D74  6F8E               	movwf	(?_floor+3)& (0+255),b
  5853                           
  5854                           ; BSR set to: 1
  5855  005D76  0012               	return	
  5856  005D78                     l7390:
  5857                           
  5858                           ; BSR set to: 1
  5859  005D78  0E00               	movlw	0
  5860  005D7A  0101               	movlb	1	; () banked
  5861  005D7C  6F8B               	movwf	?_floor& (0+255),b
  5862  005D7E  0E00               	movlw	0
  5863  005D80  6F8C               	movwf	(?_floor+1)& (0+255),b
  5864  005D82  0E00               	movlw	0
  5865  005D84  6F8D               	movwf	(?_floor+2)& (0+255),b
  5866  005D86  0E00               	movlw	0
  5867  005D88  6F8E               	movwf	(?_floor+3)& (0+255),b
  5868                           
  5869                           ; BSR set to: 1
  5870  005D8A  0012               	return	
  5871  005D8C                     l7394:
  5872                           
  5873                           ; BSR set to: 1
  5874  005D8C  0101               	movlb	1	; () banked
  5875  005D8E  5194               	movf	(floor@expon+1)& (0+255),w,b
  5876  005D90  E105               	bnz	u9750
  5877  005D92  0E1D               	movlw	29
  5878  005D94  0101               	movlb	1	; () banked
  5879  005D96  5D93               	subwf	floor@expon& (0+255),w,b
  5880  005D98  A0D8               	btfss	status,0,c
  5881  005D9A  D009               	goto	l7398
  5882  005D9C                     u9750:
  5883                           
  5884                           ; BSR set to: 1
  5885  005D9C  C18B  F18B         	movff	floor@x,?_floor
  5886  005DA0  C18C  F18C         	movff	floor@x+1,?_floor+1
  5887  005DA4  C18D  F18D         	movff	floor@x+2,?_floor+2
  5888  005DA8  C18E  F18E         	movff	floor@x+3,?_floor+3
  5889  005DAC  0012               	return	
  5890  005DAE                     l7398:
  5891                           
  5892                           ; BSR set to: 1
  5893  005DAE  C18B  F0C1         	movff	floor@x,___fltol@f1
  5894  005DB2  C18C  F0C2         	movff	floor@x+1,___fltol@f1+1
  5895  005DB6  C18D  F0C3         	movff	floor@x+2,___fltol@f1+2
  5896  005DBA  C18E  F0C4         	movff	floor@x+3,___fltol@f1+3
  5897  005DBE  ECBA  F02F         	call	___fltol	;wreg free
  5898  005DC2  C0C1  F0CB         	movff	?___fltol,___xxtofl@val
  5899  005DC6  C0C2  F0CC         	movff	?___fltol+1,___xxtofl@val+1
  5900  005DCA  C0C3  F0CD         	movff	?___fltol+2,___xxtofl@val+2
  5901  005DCE  C0C4  F0CE         	movff	?___fltol+3,___xxtofl@val+3
  5902  005DD2  0E01               	movlw	1
  5903  005DD4  EC86  F02A         	call	___xxtofl
  5904  005DD8  C0CB  F18F         	movff	?___xxtofl,floor@i
  5905  005DDC  C0CC  F190         	movff	?___xxtofl+1,floor@i+1
  5906  005DE0  C0CD  F191         	movff	?___xxtofl+2,floor@i+2
  5907  005DE4  C0CE  F192         	movff	?___xxtofl+3,floor@i+3
  5908  005DE8  C18B  F0C5         	movff	floor@x,___flge@ff1
  5909  005DEC  C18C  F0C6         	movff	floor@x+1,___flge@ff1+1
  5910  005DF0  C18D  F0C7         	movff	floor@x+2,___flge@ff1+2
  5911  005DF4  C18E  F0C8         	movff	floor@x+3,___flge@ff1+3
  5912  005DF8  C18F  F0C9         	movff	floor@i,___flge@ff2
  5913  005DFC  C190  F0CA         	movff	floor@i+1,___flge@ff2+1
  5914  005E00  C191  F0CB         	movff	floor@i+2,___flge@ff2+2
  5915  005E04  C192  F0CC         	movff	floor@i+3,___flge@ff2+3
  5916  005E08  EC30  F02D         	call	___flge	;wreg free
  5917  005E0C  0100               	movlb	0	; () banked
  5918  005E0E  B0D8               	btfsc	status,0,c
  5919  005E10  D01C               	goto	l1508
  5920                           
  5921                           ; BSR set to: 0
  5922  005E12  C18F  F0A9         	movff	floor@i,___fladd@b
  5923  005E16  C190  F0AA         	movff	floor@i+1,___fladd@b+1
  5924  005E1A  C191  F0AB         	movff	floor@i+2,___fladd@b+2
  5925  005E1E  C192  F0AC         	movff	floor@i+3,___fladd@b+3
  5926  005E22  0E00               	movlw	0
  5927  005E24  0100               	movlb	0	; () banked
  5928  005E26  6FAD               	movwf	___fladd@a& (0+255),b
  5929  005E28  0E00               	movlw	0
  5930  005E2A  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5931  005E2C  0E80               	movlw	128
  5932  005E2E  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5933  005E30  0EBF               	movlw	191
  5934  005E32  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5935  005E34  EC85  F018         	call	___fladd	;wreg free
  5936  005E38  C0A9  F18B         	movff	?___fladd,?_floor
  5937  005E3C  C0AA  F18C         	movff	?___fladd+1,?_floor+1
  5938  005E40  C0AB  F18D         	movff	?___fladd+2,?_floor+2
  5939  005E44  C0AC  F18E         	movff	?___fladd+3,?_floor+3
  5940  005E48  0012               	return	
  5941  005E4A                     l1508:
  5942                           
  5943                           ; BSR set to: 0
  5944  005E4A  C18F  F18B         	movff	floor@i,?_floor
  5945  005E4E  C190  F18C         	movff	floor@i+1,?_floor+1
  5946  005E52  C191  F18D         	movff	floor@i+2,?_floor+2
  5947  005E56  C192  F18E         	movff	floor@i+3,?_floor+3
  5948  005E5A  0012               	return		;funcret
  5949  005E5C                     __end_of_floor:
  5950                           	opt stack 0
  5951                           tblptru	equ	0xFF8
  5952                           tblptrh	equ	0xFF7
  5953                           tblptrl	equ	0xFF6
  5954                           tablat	equ	0xFF5
  5955                           postinc0	equ	0xFEE
  5956                           wreg	equ	0xFE8
  5957                           postdec1	equ	0xFE5
  5958                           fsr1l	equ	0xFE1
  5959                           indf2	equ	0xFDF
  5960                           postinc2	equ	0xFDE
  5961                           postdec2	equ	0xFDD
  5962                           fsr2h	equ	0xFDA
  5963                           fsr2l	equ	0xFD9
  5964                           status	equ	0xFD8
  5965                           
  5966 ;; *************** function _frexp *****************
  5967 ;; Defined at:
  5968 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  value           4   23[BANK0 ] int 
  5971 ;;  eptr            2   27[BANK0 ] PTR int 
  5972 ;;		 -> floor@expon(2), 
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;		None
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  4   23[BANK0 ] PTR int 
  5977 ;; Registers used:
  5978 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5984 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5986 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5987 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5988 ;;Total ram usage:        8 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:    4
  5991 ;; This function calls:
  5992 ;;		Nothing
  5993 ;; This function is called by:
  5994 ;;		_floor
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           	psect	text12
  5999  00630A                     __ptext12:
  6000                           	opt stack 0
  6001  00630A                     _frexp:
  6002                           	opt stack 21
  6003                           
  6004                           ;incstack = 0
  6005  00630A  0100               	movlb	0	; () banked
  6006  00630C  5177               	movf	frexp@value& (0+255),w,b
  6007  00630E  0100               	movlb	0	; () banked
  6008  006310  1178               	iorwf	(frexp@value+1)& (0+255),w,b
  6009  006312  0100               	movlb	0	; () banked
  6010  006314  1179               	iorwf	(frexp@value+2)& (0+255),w,b
  6011  006316  0100               	movlb	0	; () banked
  6012  006318  117A               	iorwf	(frexp@value+3)& (0+255),w,b
  6013  00631A  A4D8               	btfss	status,2,c
  6014  00631C  D009               	goto	l7216
  6015                           
  6016                           ; BSR set to: 0
  6017  00631E  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6018  006322  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6019  006326  0E00               	movlw	0
  6020  006328  6EDE               	movwf	postinc2,c
  6021  00632A  0E00               	movlw	0
  6022  00632C  6EDD               	movwf	postdec2,c
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;	Return value of _frexp is never used
  6026  00632E  0012               	return	
  6027  006330                     l7216:
  6028                           
  6029                           ; BSR set to: 0
  6030  006330  0100               	movlb	0	; () banked
  6031  006332  517A               	movf	(frexp@value+3)& (0+255),w,b
  6032  006334  0B7F               	andlw	127
  6033  006336  0100               	movlb	0	; () banked
  6034  006338  6F7D               	movwf	??_frexp& (0+255),b
  6035  00633A  6B7E               	clrf	(??_frexp+1)& (0+255),b
  6036  00633C  90D8               	bcf	status,0,c
  6037  00633E  0100               	movlb	0	; () banked
  6038  006340  377D               	rlcf	??_frexp& (0+255),f,b
  6039  006342  377E               	rlcf	(??_frexp+1)& (0+255),f,b
  6040  006344  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6041  006348  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6042  00634C  C07D  FFDE         	movff	??_frexp,postinc2
  6043  006350  C07E  FFDD         	movff	??_frexp+1,postdec2
  6044  006354  0100               	movlb	0	; () banked
  6045  006356  AF79               	btfss	(frexp@value+2)& (0+255),7,b
  6046  006358  D004               	goto	u9470
  6047  00635A  0100               	movlb	0	; () banked
  6048  00635C  6B7D               	clrf	??_frexp& (0+255),b
  6049  00635E  2B7D               	incf	??_frexp& (0+255),f,b
  6050  006360  D002               	goto	u9478
  6051  006362                     u9470:
  6052  006362  0100               	movlb	0	; () banked
  6053  006364  6B7D               	clrf	??_frexp& (0+255),b
  6054  006366                     u9478:
  6055  006366  0100               	movlb	0	; () banked
  6056  006368  517D               	movf	??_frexp& (0+255),w,b
  6057  00636A  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6058  00636E  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6059  006372  12DE               	iorwf	postinc2,f,c
  6060  006374  0E00               	movlw	0
  6061  006376  12DD               	iorwf	postdec2,f,c
  6062                           
  6063                           ; BSR set to: 0
  6064  006378  C07B  FFD9         	movff	frexp@eptr,fsr2l
  6065  00637C  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  6066  006380  0E82               	movlw	130
  6067  006382  26DE               	addwf	postinc2,f,c
  6068  006384  0EFF               	movlw	255
  6069  006386  22DD               	addwfc	postdec2,f,c
  6070                           
  6071                           ; BSR set to: 0
  6072  006388  0100               	movlb	0	; () banked
  6073  00638A  817A               	bsf	(frexp@value+3)& (0+255),0,b
  6074  00638C  837A               	bsf	(frexp@value+3)& (0+255),1,b
  6075  00638E  857A               	bsf	(frexp@value+3)& (0+255),2,b
  6076  006390  877A               	bsf	(frexp@value+3)& (0+255),3,b
  6077  006392  897A               	bsf	(frexp@value+3)& (0+255),4,b
  6078  006394  8B7A               	bsf	(frexp@value+3)& (0+255),5,b
  6079  006396  9D7A               	bcf	(frexp@value+3)& (0+255),6,b
  6080                           
  6081                           ; BSR set to: 0
  6082  006398  0100               	movlb	0	; () banked
  6083  00639A  9F79               	bcf	(frexp@value+2)& (0+255),7,b
  6084  00639C  0012               	return	
  6085  00639E                     __end_of_frexp:
  6086                           	opt stack 0
  6087                           tblptru	equ	0xFF8
  6088                           tblptrh	equ	0xFF7
  6089                           tblptrl	equ	0xFF6
  6090                           tablat	equ	0xFF5
  6091                           postinc0	equ	0xFEE
  6092                           wreg	equ	0xFE8
  6093                           postdec1	equ	0xFE5
  6094                           fsr1l	equ	0xFE1
  6095                           indf2	equ	0xFDF
  6096                           postinc2	equ	0xFDE
  6097                           postdec2	equ	0xFDD
  6098                           fsr2h	equ	0xFDA
  6099                           fsr2l	equ	0xFD9
  6100                           status	equ	0xFD8
  6101                           
  6102 ;; *************** function ___xxtofl *****************
  6103 ;; Defined at:
  6104 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;  sign            1    wreg     unsigned char 
  6107 ;;  val             4  107[BANK0 ] long 
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;  sign            1  115[BANK0 ] unsigned char 
  6110 ;;  arg             4  117[BANK0 ] unsigned long 
  6111 ;;  exp             1  116[BANK0 ] unsigned char 
  6112 ;; Return value:  Size  Location     Type
  6113 ;;                  4  107[BANK0 ] unsigned char 
  6114 ;; Registers used:
  6115 ;;		wreg, status,2, status,0
  6116 ;; Tracked objects:
  6117 ;;		On entry : 0/0
  6118 ;;		On exit  : 0/0
  6119 ;;		Unchanged: 0/0
  6120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6121 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6122 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6123 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6124 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6125 ;;Total ram usage:       14 bytes
  6126 ;; Hardware stack levels used:    1
  6127 ;; Hardware stack levels required when called:    4
  6128 ;; This function calls:
  6129 ;;		Nothing
  6130 ;; This function is called by:
  6131 ;;		_park_search
  6132 ;;		_park_routine
  6133 ;;		_parallelo
  6134 ;;		_floor
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           	psect	text13
  6139  00550C                     __ptext13:
  6140                           	opt stack 0
  6141  00550C                     ___xxtofl:
  6142                           	opt stack 24
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;incstack = 0
  6146                           ;___xxtofl@sign stored from wreg
  6147  00550C  0100               	movlb	0	; () banked
  6148  00550E  6FD3               	movwf	___xxtofl@sign& (0+255),b
  6149  005510  0100               	movlb	0	; () banked
  6150  005512  51D3               	movf	___xxtofl@sign& (0+255),w,b
  6151  005514  0100               	movlb	0	; () banked
  6152  005516  B4D8               	btfsc	status,2,c
  6153  005518  D01E               	goto	l1483
  6154                           
  6155                           ; BSR set to: 0
  6156  00551A  0100               	movlb	0	; () banked
  6157  00551C  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6158  00551E  D01B               	goto	l1483
  6159                           
  6160                           ; BSR set to: 0
  6161  005520  C0CB  F0CF         	movff	___xxtofl@val,??___xxtofl
  6162  005524  C0CC  F0D0         	movff	___xxtofl@val+1,??___xxtofl+1
  6163  005528  C0CD  F0D1         	movff	___xxtofl@val+2,??___xxtofl+2
  6164  00552C  C0CE  F0D2         	movff	___xxtofl@val+3,??___xxtofl+3
  6165  005530  0100               	movlb	0	; () banked
  6166  005532  1FCF               	comf	??___xxtofl& (0+255),f,b
  6167  005534  1FD0               	comf	(??___xxtofl+1)& (0+255),f,b
  6168  005536  1FD1               	comf	(??___xxtofl+2)& (0+255),f,b
  6169  005538  1FD2               	comf	(??___xxtofl+3)& (0+255),f,b
  6170  00553A  2BCF               	incf	??___xxtofl& (0+255),f,b
  6171  00553C  0E00               	movlw	0
  6172  00553E  23D0               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6173  005540  23D1               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6174  005542  23D2               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6175  005544  C0CF  F0D5         	movff	??___xxtofl,___xxtofl@arg
  6176  005548  C0D0  F0D6         	movff	??___xxtofl+1,___xxtofl@arg+1
  6177  00554C  C0D1  F0D7         	movff	??___xxtofl+2,___xxtofl@arg+2
  6178  005550  C0D2  F0D8         	movff	??___xxtofl+3,___xxtofl@arg+3
  6179  005554  D008               	goto	l7174
  6180  005556                     l1483:
  6181                           
  6182                           ; BSR set to: 0
  6183  005556  C0CB  F0D5         	movff	___xxtofl@val,___xxtofl@arg
  6184  00555A  C0CC  F0D6         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6185  00555E  C0CD  F0D7         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6186  005562  C0CE  F0D8         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6187  005566                     l7174:
  6188                           
  6189                           ; BSR set to: 0
  6190  005566  0100               	movlb	0	; () banked
  6191  005568  51CB               	movf	___xxtofl@val& (0+255),w,b
  6192  00556A  0100               	movlb	0	; () banked
  6193  00556C  11CC               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6194  00556E  0100               	movlb	0	; () banked
  6195  005570  11CD               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6196  005572  0100               	movlb	0	; () banked
  6197  005574  11CE               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6198  005576  A4D8               	btfss	status,2,c
  6199  005578  D00A               	goto	l7180
  6200                           
  6201                           ; BSR set to: 0
  6202  00557A  0E00               	movlw	0
  6203  00557C  0100               	movlb	0	; () banked
  6204  00557E  6FCB               	movwf	?___xxtofl& (0+255),b
  6205  005580  0E00               	movlw	0
  6206  005582  6FCC               	movwf	(?___xxtofl+1)& (0+255),b
  6207  005584  0E00               	movlw	0
  6208  005586  6FCD               	movwf	(?___xxtofl+2)& (0+255),b
  6209  005588  0E00               	movlw	0
  6210  00558A  6FCE               	movwf	(?___xxtofl+3)& (0+255),b
  6211                           
  6212                           ; BSR set to: 0
  6213  00558C  0012               	return	
  6214  00558E                     l7180:
  6215                           
  6216                           ; BSR set to: 0
  6217  00558E  0E96               	movlw	150
  6218  005590  0100               	movlb	0	; () banked
  6219  005592  6FD4               	movwf	___xxtofl@exp& (0+255),b
  6220  005594  D008               	goto	l7184
  6221  005596                     l7182:
  6222                           
  6223                           ; BSR set to: 0
  6224  005596  0100               	movlb	0	; () banked
  6225  005598  2BD4               	incf	___xxtofl@exp& (0+255),f,b
  6226  00559A  0100               	movlb	0	; () banked
  6227  00559C  90D8               	bcf	status,0,c
  6228  00559E  33D8               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6229  0055A0  33D7               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6230  0055A2  33D6               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6231  0055A4  33D5               	rrcf	___xxtofl@arg& (0+255),f,b
  6232  0055A6                     l7184:
  6233                           
  6234                           ; BSR set to: 0
  6235  0055A6  0E00               	movlw	0
  6236  0055A8  0100               	movlb	0	; () banked
  6237  0055AA  15D5               	andwf	___xxtofl@arg& (0+255),w,b
  6238  0055AC  0100               	movlb	0	; () banked
  6239  0055AE  6FCF               	movwf	??___xxtofl& (0+255),b
  6240  0055B0  0E00               	movlw	0
  6241  0055B2  0100               	movlb	0	; () banked
  6242  0055B4  15D6               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6243  0055B6  0100               	movlb	0	; () banked
  6244  0055B8  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6245  0055BA  0E00               	movlw	0
  6246  0055BC  0100               	movlb	0	; () banked
  6247  0055BE  15D7               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6248  0055C0  0100               	movlb	0	; () banked
  6249  0055C2  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6250  0055C4  0EFE               	movlw	254
  6251  0055C6  0100               	movlb	0	; () banked
  6252  0055C8  15D8               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6253  0055CA  0100               	movlb	0	; () banked
  6254  0055CC  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6255  0055CE  0100               	movlb	0	; () banked
  6256  0055D0  51CF               	movf	??___xxtofl& (0+255),w,b
  6257  0055D2  0100               	movlb	0	; () banked
  6258  0055D4  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6259  0055D6  0100               	movlb	0	; () banked
  6260  0055D8  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6261  0055DA  0100               	movlb	0	; () banked
  6262  0055DC  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6263  0055DE  B4D8               	btfsc	status,2,c
  6264  0055E0  D010               	goto	l1490
  6265  0055E2  D7D9               	goto	l7182
  6266  0055E4                     l7186:
  6267                           
  6268                           ; BSR set to: 0
  6269  0055E4  0100               	movlb	0	; () banked
  6270  0055E6  2BD4               	incf	___xxtofl@exp& (0+255),f,b
  6271                           
  6272                           ; BSR set to: 0
  6273  0055E8  0E01               	movlw	1
  6274  0055EA  0100               	movlb	0	; () banked
  6275  0055EC  27D5               	addwf	___xxtofl@arg& (0+255),f,b
  6276  0055EE  0E00               	movlw	0
  6277  0055F0  23D6               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6278  0055F2  23D7               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6279  0055F4  23D8               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6280                           
  6281                           ; BSR set to: 0
  6282  0055F6  0100               	movlb	0	; () banked
  6283  0055F8  90D8               	bcf	status,0,c
  6284  0055FA  33D8               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6285  0055FC  33D7               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6286  0055FE  33D6               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6287  005600  33D5               	rrcf	___xxtofl@arg& (0+255),f,b
  6288  005602                     l1490:
  6289                           
  6290                           ; BSR set to: 0
  6291  005602  0E00               	movlw	0
  6292  005604  0100               	movlb	0	; () banked
  6293  005606  15D5               	andwf	___xxtofl@arg& (0+255),w,b
  6294  005608  0100               	movlb	0	; () banked
  6295  00560A  6FCF               	movwf	??___xxtofl& (0+255),b
  6296  00560C  0E00               	movlw	0
  6297  00560E  0100               	movlb	0	; () banked
  6298  005610  15D6               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6299  005612  0100               	movlb	0	; () banked
  6300  005614  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6301  005616  0E00               	movlw	0
  6302  005618  0100               	movlb	0	; () banked
  6303  00561A  15D7               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6304  00561C  0100               	movlb	0	; () banked
  6305  00561E  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6306  005620  0EFF               	movlw	255
  6307  005622  0100               	movlb	0	; () banked
  6308  005624  15D8               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6309  005626  0100               	movlb	0	; () banked
  6310  005628  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6311  00562A  0100               	movlb	0	; () banked
  6312  00562C  51CF               	movf	??___xxtofl& (0+255),w,b
  6313  00562E  0100               	movlb	0	; () banked
  6314  005630  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6315  005632  0100               	movlb	0	; () banked
  6316  005634  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6317  005636  0100               	movlb	0	; () banked
  6318  005638  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6319  00563A  B4D8               	btfsc	status,2,c
  6320  00563C  D009               	goto	l7194
  6321  00563E  D7D2               	goto	l7186
  6322  005640                     l7192:
  6323                           
  6324                           ; BSR set to: 0
  6325  005640  0100               	movlb	0	; () banked
  6326  005642  07D4               	decf	___xxtofl@exp& (0+255),f,b
  6327  005644  0100               	movlb	0	; () banked
  6328  005646  90D8               	bcf	status,0,c
  6329  005648  37D5               	rlcf	___xxtofl@arg& (0+255),f,b
  6330  00564A  37D6               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6331  00564C  37D7               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6332  00564E  37D8               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6333  005650                     l7194:
  6334                           
  6335                           ; BSR set to: 0
  6336  005650  0100               	movlb	0	; () banked
  6337  005652  BFD7               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6338  005654  D004               	goto	l1497
  6339                           
  6340                           ; BSR set to: 0
  6341  005656  0E02               	movlw	2
  6342  005658  0100               	movlb	0	; () banked
  6343  00565A  61D4               	cpfslt	___xxtofl@exp& (0+255),b
  6344  00565C  D7F1               	goto	l7192
  6345  00565E                     l1497:
  6346                           
  6347                           ; BSR set to: 0
  6348  00565E  0100               	movlb	0	; () banked
  6349  005660  B1D4               	btfsc	___xxtofl@exp& (0+255),0,b
  6350  005662  D009               	goto	l1498
  6351                           
  6352                           ; BSR set to: 0
  6353  005664  0EFF               	movlw	255
  6354  005666  0100               	movlb	0	; () banked
  6355  005668  17D5               	andwf	___xxtofl@arg& (0+255),f,b
  6356  00566A  0EFF               	movlw	255
  6357  00566C  17D6               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  6358  00566E  0E7F               	movlw	127
  6359  005670  17D7               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  6360  005672  0EFF               	movlw	255
  6361  005674  17D8               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  6362  005676                     l1498:
  6363                           
  6364                           ; BSR set to: 0
  6365  005676  0100               	movlb	0	; () banked
  6366  005678  90D8               	bcf	status,0,c
  6367  00567A  33D4               	rrcf	___xxtofl@exp& (0+255),f,b
  6368  00567C  C0D4  F0CF         	movff	___xxtofl@exp,??___xxtofl
  6369  005680  0100               	movlb	0	; () banked
  6370  005682  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6371  005684  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6372  005686  6BD2               	clrf	(??___xxtofl+3)& (0+255),b
  6373  005688  C0CF  F0D2         	movff	??___xxtofl,??___xxtofl+3
  6374  00568C  0100               	movlb	0	; () banked
  6375  00568E  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6376  005690  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6377  005692  6BCF               	clrf	??___xxtofl& (0+255),b
  6378  005694  0100               	movlb	0	; () banked
  6379  005696  51CF               	movf	??___xxtofl& (0+255),w,b
  6380  005698  0100               	movlb	0	; () banked
  6381  00569A  13D5               	iorwf	___xxtofl@arg& (0+255),f,b
  6382  00569C  0100               	movlb	0	; () banked
  6383  00569E  51D0               	movf	(??___xxtofl+1)& (0+255),w,b
  6384  0056A0  0100               	movlb	0	; () banked
  6385  0056A2  13D6               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6386  0056A4  0100               	movlb	0	; () banked
  6387  0056A6  51D1               	movf	(??___xxtofl+2)& (0+255),w,b
  6388  0056A8  0100               	movlb	0	; () banked
  6389  0056AA  13D7               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6390  0056AC  0100               	movlb	0	; () banked
  6391  0056AE  51D2               	movf	(??___xxtofl+3)& (0+255),w,b
  6392  0056B0  0100               	movlb	0	; () banked
  6393  0056B2  13D8               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6394                           
  6395                           ; BSR set to: 0
  6396  0056B4  0100               	movlb	0	; () banked
  6397  0056B6  51D3               	movf	___xxtofl@sign& (0+255),w,b
  6398  0056B8  0100               	movlb	0	; () banked
  6399  0056BA  B4D8               	btfsc	status,2,c
  6400  0056BC  D005               	goto	l7206
  6401                           
  6402                           ; BSR set to: 0
  6403  0056BE  0100               	movlb	0	; () banked
  6404  0056C0  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6405  0056C2  D002               	goto	l7206
  6406                           
  6407                           ; BSR set to: 0
  6408  0056C4  0100               	movlb	0	; () banked
  6409  0056C6  8FD8               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6410  0056C8                     l7206:
  6411                           
  6412                           ; BSR set to: 0
  6413  0056C8  C0D5  F0CB         	movff	___xxtofl@arg,?___xxtofl
  6414  0056CC  C0D6  F0CC         	movff	___xxtofl@arg+1,?___xxtofl+1
  6415  0056D0  C0D7  F0CD         	movff	___xxtofl@arg+2,?___xxtofl+2
  6416  0056D4  C0D8  F0CE         	movff	___xxtofl@arg+3,?___xxtofl+3
  6417  0056D8  0012               	return	
  6418  0056DA                     __end_of___xxtofl:
  6419                           	opt stack 0
  6420                           tblptru	equ	0xFF8
  6421                           tblptrh	equ	0xFF7
  6422                           tblptrl	equ	0xFF6
  6423                           tablat	equ	0xFF5
  6424                           postinc0	equ	0xFEE
  6425                           wreg	equ	0xFE8
  6426                           postdec1	equ	0xFE5
  6427                           fsr1l	equ	0xFE1
  6428                           indf2	equ	0xFDF
  6429                           postinc2	equ	0xFDE
  6430                           postdec2	equ	0xFDD
  6431                           fsr2h	equ	0xFDA
  6432                           fsr2l	equ	0xFD9
  6433                           status	equ	0xFD8
  6434                           
  6435 ;; *************** function ___fltol *****************
  6436 ;; Defined at:
  6437 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  6438 ;; Parameters:    Size  Location     Type
  6439 ;;  f1              4   97[BANK0 ] unsigned char 
  6440 ;; Auto vars:     Size  Location     Type
  6441 ;;  exp1            1  106[BANK0 ] unsigned char 
  6442 ;;  sign1           1  105[BANK0 ] unsigned char 
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  4   97[BANK0 ] long 
  6445 ;; Registers used:
  6446 ;;		wreg, status,2, status,0
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6452 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6453 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6454 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6455 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6456 ;;Total ram usage:       10 bytes
  6457 ;; Hardware stack levels used:    1
  6458 ;; Hardware stack levels required when called:    4
  6459 ;; This function calls:
  6460 ;;		Nothing
  6461 ;; This function is called by:
  6462 ;;		_park_routine
  6463 ;;		_parallelo
  6464 ;;		_floor
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           	psect	text14
  6469  005F74                     __ptext14:
  6470                           	opt stack 0
  6471  005F74                     ___fltol:
  6472                           	opt stack 24
  6473                           
  6474                           ; BSR set to: 0
  6475                           ;incstack = 0
  6476  005F74  0100               	movlb	0	; () banked
  6477  005F76  35C3               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6478  005F78  35C4               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6479  005F7A  0100               	movlb	0	; () banked
  6480  005F7C  6FCA               	movwf	___fltol@exp1& (0+255),b
  6481  005F7E  0100               	movlb	0	; () banked
  6482  005F80  51CA               	movf	___fltol@exp1& (0+255),w,b
  6483  005F82  A4D8               	btfss	status,2,c
  6484  005F84  D00A               	goto	l7130
  6485                           
  6486                           ; BSR set to: 0
  6487  005F86  0E00               	movlw	0
  6488  005F88  0100               	movlb	0	; () banked
  6489  005F8A  6FC1               	movwf	?___fltol& (0+255),b
  6490  005F8C  0E00               	movlw	0
  6491  005F8E  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6492  005F90  0E00               	movlw	0
  6493  005F92  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6494  005F94  0E00               	movlw	0
  6495  005F96  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6496                           
  6497                           ; BSR set to: 0
  6498  005F98  0012               	return	
  6499  005F9A                     l7130:
  6500                           
  6501                           ; BSR set to: 0
  6502  005F9A  C0C1  F0C5         	movff	___fltol@f1,??___fltol
  6503  005F9E  C0C2  F0C6         	movff	___fltol@f1+1,??___fltol+1
  6504  005FA2  C0C3  F0C7         	movff	___fltol@f1+2,??___fltol+2
  6505  005FA6  C0C4  F0C8         	movff	___fltol@f1+3,??___fltol+3
  6506  005FAA  0E20               	movlw	32
  6507  005FAC  D006               	goto	u9300
  6508  005FAE                     u9305:
  6509  005FAE  0100               	movlb	0	; () banked
  6510  005FB0  90D8               	bcf	status,0,c
  6511  005FB2  33C8               	rrcf	(??___fltol+3)& (0+255),f,b
  6512  005FB4  33C7               	rrcf	(??___fltol+2)& (0+255),f,b
  6513  005FB6  33C6               	rrcf	(??___fltol+1)& (0+255),f,b
  6514  005FB8  33C5               	rrcf	??___fltol& (0+255),f,b
  6515  005FBA                     u9300:
  6516  005FBA  2EE8               	decfsz	wreg,f,c
  6517  005FBC  D7F8               	goto	u9305
  6518  005FBE  0100               	movlb	0	; () banked
  6519  005FC0  51C5               	movf	??___fltol& (0+255),w,b
  6520  005FC2  0100               	movlb	0	; () banked
  6521  005FC4  6FC9               	movwf	___fltol@sign1& (0+255),b
  6522                           
  6523                           ; BSR set to: 0
  6524  005FC6  0100               	movlb	0	; () banked
  6525  005FC8  8FC3               	bsf	(___fltol@f1+2)& (0+255),7,b
  6526                           
  6527                           ; BSR set to: 0
  6528  005FCA  0EFF               	movlw	255
  6529  005FCC  0100               	movlb	0	; () banked
  6530  005FCE  17C1               	andwf	___fltol@f1& (0+255),f,b
  6531  005FD0  0EFF               	movlw	255
  6532  005FD2  17C2               	andwf	(___fltol@f1+1)& (0+255),f,b
  6533  005FD4  0EFF               	movlw	255
  6534  005FD6  17C3               	andwf	(___fltol@f1+2)& (0+255),f,b
  6535  005FD8  0E00               	movlw	0
  6536  005FDA  17C4               	andwf	(___fltol@f1+3)& (0+255),f,b
  6537                           
  6538                           ; BSR set to: 0
  6539  005FDC  0E96               	movlw	150
  6540  005FDE  0100               	movlb	0	; () banked
  6541  005FE0  5FCA               	subwf	___fltol@exp1& (0+255),f,b
  6542                           
  6543                           ; BSR set to: 0
  6544  005FE2  0100               	movlb	0	; () banked
  6545  005FE4  AFCA               	btfss	___fltol@exp1& (0+255),7,b
  6546  005FE6  D01A               	goto	l7150
  6547                           
  6548                           ; BSR set to: 0
  6549  005FE8  0100               	movlb	0	; () banked
  6550  005FEA  51CA               	movf	___fltol@exp1& (0+255),w,b
  6551  005FEC  0A80               	xorlw	128
  6552  005FEE  0F97               	addlw	151
  6553  005FF0  B0D8               	btfsc	status,0,c
  6554  005FF2  D00A               	goto	l7146
  6555                           
  6556                           ; BSR set to: 0
  6557  005FF4  0E00               	movlw	0
  6558  005FF6  0100               	movlb	0	; () banked
  6559  005FF8  6FC1               	movwf	?___fltol& (0+255),b
  6560  005FFA  0E00               	movlw	0
  6561  005FFC  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6562  005FFE  0E00               	movlw	0
  6563  006000  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6564  006002  0E00               	movlw	0
  6565  006004  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6566                           
  6567                           ; BSR set to: 0
  6568  006006  0012               	return	
  6569  006008                     l7146:
  6570                           
  6571                           ; BSR set to: 0
  6572  006008  0100               	movlb	0	; () banked
  6573  00600A  90D8               	bcf	status,0,c
  6574  00600C  33C4               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6575  00600E  33C3               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6576  006010  33C2               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6577  006012  33C1               	rrcf	___fltol@f1& (0+255),f,b
  6578                           
  6579                           ; BSR set to: 0
  6580  006014  0100               	movlb	0	; () banked
  6581  006016  3FCA               	incfsz	___fltol@exp1& (0+255),f,b
  6582  006018  D7F7               	goto	l7146
  6583                           
  6584                           ; BSR set to: 0
  6585  00601A  D01B               	goto	l7160
  6586  00601C                     l7150:
  6587                           
  6588                           ; BSR set to: 0
  6589  00601C  0E1F               	movlw	31
  6590  00601E  0100               	movlb	0	; () banked
  6591  006020  65CA               	cpfsgt	___fltol@exp1& (0+255),b
  6592  006022  D012               	goto	l7158
  6593                           
  6594                           ; BSR set to: 0
  6595  006024  0E00               	movlw	0
  6596  006026  0100               	movlb	0	; () banked
  6597  006028  6FC1               	movwf	?___fltol& (0+255),b
  6598  00602A  0E00               	movlw	0
  6599  00602C  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6600  00602E  0E00               	movlw	0
  6601  006030  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6602  006032  0E00               	movlw	0
  6603  006034  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6604                           
  6605                           ; BSR set to: 0
  6606  006036  0012               	return	
  6607  006038                     l7156:
  6608                           
  6609                           ; BSR set to: 0
  6610  006038  0100               	movlb	0	; () banked
  6611  00603A  90D8               	bcf	status,0,c
  6612  00603C  37C1               	rlcf	___fltol@f1& (0+255),f,b
  6613  00603E  37C2               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6614  006040  37C3               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6615  006042  37C4               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6616  006044  0100               	movlb	0	; () banked
  6617  006046  07CA               	decf	___fltol@exp1& (0+255),f,b
  6618  006048                     l7158:
  6619                           
  6620                           ; BSR set to: 0
  6621  006048  0100               	movlb	0	; () banked
  6622  00604A  51CA               	movf	___fltol@exp1& (0+255),w,b
  6623  00604C  0100               	movlb	0	; () banked
  6624  00604E  A4D8               	btfss	status,2,c
  6625  006050  D7F3               	goto	l7156
  6626  006052                     l7160:
  6627                           
  6628                           ; BSR set to: 0
  6629  006052  0100               	movlb	0	; () banked
  6630  006054  51C9               	movf	___fltol@sign1& (0+255),w,b
  6631  006056  0100               	movlb	0	; () banked
  6632  006058  B4D8               	btfsc	status,2,c
  6633  00605A  D009               	goto	l7164
  6634                           
  6635                           ; BSR set to: 0
  6636  00605C  0100               	movlb	0	; () banked
  6637  00605E  1FC4               	comf	(___fltol@f1+3)& (0+255),f,b
  6638  006060  1FC3               	comf	(___fltol@f1+2)& (0+255),f,b
  6639  006062  1FC2               	comf	(___fltol@f1+1)& (0+255),f,b
  6640  006064  6DC1               	negf	___fltol@f1& (0+255),b
  6641  006066  0E00               	movlw	0
  6642  006068  23C2               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6643  00606A  23C3               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6644  00606C  23C4               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6645  00606E                     l7164:
  6646                           
  6647                           ; BSR set to: 0
  6648  00606E  C0C1  F0C1         	movff	___fltol@f1,?___fltol
  6649  006072  C0C2  F0C2         	movff	___fltol@f1+1,?___fltol+1
  6650  006076  C0C3  F0C3         	movff	___fltol@f1+2,?___fltol+2
  6651  00607A  C0C4  F0C4         	movff	___fltol@f1+3,?___fltol+3
  6652  00607E  0012               	return	
  6653  006080                     __end_of___fltol:
  6654                           	opt stack 0
  6655                           tblptru	equ	0xFF8
  6656                           tblptrh	equ	0xFF7
  6657                           tblptrl	equ	0xFF6
  6658                           tablat	equ	0xFF5
  6659                           postinc0	equ	0xFEE
  6660                           wreg	equ	0xFE8
  6661                           postdec1	equ	0xFE5
  6662                           fsr1l	equ	0xFE1
  6663                           indf2	equ	0xFDF
  6664                           postinc2	equ	0xFDE
  6665                           postdec2	equ	0xFDD
  6666                           fsr2h	equ	0xFDA
  6667                           fsr2l	equ	0xFD9
  6668                           status	equ	0xFD8
  6669                           
  6670 ;; *************** function ___flsub *****************
  6671 ;; Defined at:
  6672 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;  b               4   10[BANK1 ] long 
  6675 ;;  a               4   14[BANK1 ] long 
  6676 ;; Auto vars:     Size  Location     Type
  6677 ;;		None
  6678 ;; Return value:  Size  Location     Type
  6679 ;;                  4   10[BANK1 ] long 
  6680 ;; Registers used:
  6681 ;;		wreg, status,2, status,0, cstack
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6687 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6690 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6691 ;;Total ram usage:        8 bytes
  6692 ;; Hardware stack levels used:    1
  6693 ;; Hardware stack levels required when called:    5
  6694 ;; This function calls:
  6695 ;;		___fladd
  6696 ;; This function is called by:
  6697 ;;		_sin
  6698 ;; This function uses a non-reentrant model
  6699 ;;
  6700                           
  6701                           	psect	text15
  6702  006546                     __ptext15:
  6703                           	opt stack 0
  6704  006546                     ___flsub:
  6705                           	opt stack 21
  6706                           
  6707                           ; BSR set to: 0
  6708                           ;incstack = 0
  6709  006546  0E00               	movlw	0
  6710  006548  0101               	movlb	1	; () banked
  6711  00654A  1B99               	xorwf	___flsub@a& (0+255),f,b
  6712  00654C  0E00               	movlw	0
  6713  00654E  1B9A               	xorwf	(___flsub@a+1)& (0+255),f,b
  6714  006550  0E00               	movlw	0
  6715  006552  1B9B               	xorwf	(___flsub@a+2)& (0+255),f,b
  6716  006554  0E80               	movlw	128
  6717  006556  1B9C               	xorwf	(___flsub@a+3)& (0+255),f,b
  6718                           
  6719                           ; BSR set to: 1
  6720  006558  C195  F0A9         	movff	___flsub@b,___fladd@b
  6721  00655C  C196  F0AA         	movff	___flsub@b+1,___fladd@b+1
  6722  006560  C197  F0AB         	movff	___flsub@b+2,___fladd@b+2
  6723  006564  C198  F0AC         	movff	___flsub@b+3,___fladd@b+3
  6724  006568  C199  F0AD         	movff	___flsub@a,___fladd@a
  6725  00656C  C19A  F0AE         	movff	___flsub@a+1,___fladd@a+1
  6726  006570  C19B  F0AF         	movff	___flsub@a+2,___fladd@a+2
  6727  006574  C19C  F0B0         	movff	___flsub@a+3,___fladd@a+3
  6728  006578  EC85  F018         	call	___fladd	;wreg free
  6729  00657C  C0A9  F195         	movff	?___fladd,?___flsub
  6730  006580  C0AA  F196         	movff	?___fladd+1,?___flsub+1
  6731  006584  C0AB  F197         	movff	?___fladd+2,?___flsub+2
  6732  006588  C0AC  F198         	movff	?___fladd+3,?___flsub+3
  6733  00658C  0012               	return	
  6734  00658E                     __end_of___flsub:
  6735                           	opt stack 0
  6736                           tblptru	equ	0xFF8
  6737                           tblptrh	equ	0xFF7
  6738                           tblptrl	equ	0xFF6
  6739                           tablat	equ	0xFF5
  6740                           postinc0	equ	0xFEE
  6741                           wreg	equ	0xFE8
  6742                           postdec1	equ	0xFE5
  6743                           fsr1l	equ	0xFE1
  6744                           indf2	equ	0xFDF
  6745                           postinc2	equ	0xFDE
  6746                           postdec2	equ	0xFDD
  6747                           fsr2h	equ	0xFDA
  6748                           fsr2l	equ	0xFD9
  6749                           status	equ	0xFD8
  6750                           
  6751 ;; *************** function _asin *****************
  6752 ;; Defined at:
  6753 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\asin.c"
  6754 ;; Parameters:    Size  Location     Type
  6755 ;;  x               4  117[BANK0 ] long 
  6756 ;; Auto vars:     Size  Location     Type
  6757 ;;  y               4   33[BANK1 ] long 
  6758 ;;  sgn             4   21[BANK1 ] long 
  6759 ;; Return value:  Size  Location     Type
  6760 ;;                  4  117[BANK0 ] long 
  6761 ;; Registers used:
  6762 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6763 ;; Tracked objects:
  6764 ;;		On entry : 0/0
  6765 ;;		On exit  : 0/0
  6766 ;;		Unchanged: 0/0
  6767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6768 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6769 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6771 ;;      Totals:         0       4      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6772 ;;Total ram usage:       24 bytes
  6773 ;; Hardware stack levels used:    1
  6774 ;; Hardware stack levels required when called:    7
  6775 ;; This function calls:
  6776 ;;		___fladd
  6777 ;;		___fldiv
  6778 ;;		___flge
  6779 ;;		___flmul
  6780 ;;		___flneg
  6781 ;;		_atan
  6782 ;;		_fabs
  6783 ;;		_sqrt
  6784 ;; This function is called by:
  6785 ;;		_parallelo
  6786 ;;		_matematica
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           	psect	text16
  6791  004D24                     __ptext16:
  6792                           	opt stack 0
  6793  004D24                     _asin:
  6794                           	opt stack 21
  6795                           
  6796                           ;incstack = 0
  6797  004D24  0E00               	movlw	0
  6798  004D26  0100               	movlb	0	; () banked
  6799  004D28  6FC5               	movwf	___flge@ff1& (0+255),b
  6800  004D2A  0E00               	movlw	0
  6801  004D2C  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  6802  004D2E  0E80               	movlw	128
  6803  004D30  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  6804  004D32  0E3F               	movlw	63
  6805  004D34  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  6806  004D36  C0D5  F0C1         	movff	asin@x,fabs@d
  6807  004D3A  C0D6  F0C2         	movff	asin@x+1,fabs@d+1
  6808  004D3E  C0D7  F0C3         	movff	asin@x+2,fabs@d+2
  6809  004D42  C0D8  F0C4         	movff	asin@x+3,fabs@d+3
  6810  004D46  ECC7  F032         	call	_fabs	;wreg free
  6811  004D4A  C0C1  F0C9         	movff	?_fabs,___flge@ff2
  6812  004D4E  C0C2  F0CA         	movff	?_fabs+1,___flge@ff2+1
  6813  004D52  C0C3  F0CB         	movff	?_fabs+2,___flge@ff2+2
  6814  004D56  C0C4  F0CC         	movff	?_fabs+3,___flge@ff2+3
  6815  004D5A  EC30  F02D         	call	___flge	;wreg free
  6816  004D5E  0100               	movlb	0	; () banked
  6817  004D60  B0D8               	btfsc	status,0,c
  6818  004D62  D00F               	goto	l7874
  6819                           
  6820                           ; BSR set to: 0
  6821  004D64  0E00               	movlw	0
  6822  004D66  0100               	movlb	0	; () banked
  6823  004D68  6FE5               	movwf	(_errno+1)& (0+255),b
  6824  004D6A  0E21               	movlw	33
  6825  004D6C  6FE4               	movwf	_errno& (0+255),b
  6826  004D6E  0E00               	movlw	0
  6827  004D70  0100               	movlb	0	; () banked
  6828  004D72  6FD5               	movwf	?_asin& (0+255),b
  6829  004D74  0E00               	movlw	0
  6830  004D76  6FD6               	movwf	(?_asin+1)& (0+255),b
  6831  004D78  0E00               	movlw	0
  6832  004D7A  6FD7               	movwf	(?_asin+2)& (0+255),b
  6833  004D7C  0E00               	movlw	0
  6834  004D7E  6FD8               	movwf	(?_asin+3)& (0+255),b
  6835                           
  6836                           ; BSR set to: 0
  6837  004D80  0012               	return	
  6838  004D82                     l7874:
  6839                           
  6840                           ; BSR set to: 0
  6841  004D82  0E00               	movlw	0
  6842  004D84  0101               	movlb	1	; () banked
  6843  004D86  6FA0               	movwf	asin@sgn& (0+255),b
  6844  004D88  0E00               	movlw	0
  6845  004D8A  6FA1               	movwf	(asin@sgn+1)& (0+255),b
  6846  004D8C  0E80               	movlw	128
  6847  004D8E  6FA2               	movwf	(asin@sgn+2)& (0+255),b
  6848  004D90  0E3F               	movlw	63
  6849  004D92  6FA3               	movwf	(asin@sgn+3)& (0+255),b
  6850                           
  6851                           ; BSR set to: 1
  6852  004D94  C0D5  F094         	movff	asin@x,___flmul@a
  6853  004D98  C0D6  F095         	movff	asin@x+1,___flmul@a+1
  6854  004D9C  C0D7  F096         	movff	asin@x+2,___flmul@a+2
  6855  004DA0  C0D8  F097         	movff	asin@x+3,___flmul@a+3
  6856  004DA4  C0D5  F090         	movff	asin@x,___flmul@b
  6857  004DA8  C0D6  F091         	movff	asin@x+1,___flmul@b+1
  6858  004DAC  C0D7  F092         	movff	asin@x+2,___flmul@b+2
  6859  004DB0  C0D8  F093         	movff	asin@x+3,___flmul@b+3
  6860  004DB4  ECD9  F01A         	call	___flmul	;wreg free
  6861  004DB8  C090  F0BD         	movff	?___flmul,___flneg@f1
  6862  004DBC  C091  F0BE         	movff	?___flmul+1,___flneg@f1+1
  6863  004DC0  C092  F0BF         	movff	?___flmul+2,___flneg@f1+2
  6864  004DC4  C093  F0C0         	movff	?___flmul+3,___flneg@f1+3
  6865  004DC8  EC03  F033         	call	___flneg	;wreg free
  6866  004DCC  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6867  004DD0  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6868  004DD4  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6869  004DD8  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6870  004DDC  0E00               	movlw	0
  6871  004DDE  0100               	movlb	0	; () banked
  6872  004DE0  6FAD               	movwf	___fladd@a& (0+255),b
  6873  004DE2  0E00               	movlw	0
  6874  004DE4  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6875  004DE6  0E80               	movlw	128
  6876  004DE8  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6877  004DEA  0E3F               	movlw	63
  6878  004DEC  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6879  004DEE  EC85  F018         	call	___fladd	;wreg free
  6880  004DF2  C0A9  F0C1         	movff	?___fladd,sqrt@a
  6881  004DF6  C0AA  F0C2         	movff	?___fladd+1,sqrt@a+1
  6882  004DFA  C0AB  F0C3         	movff	?___fladd+2,sqrt@a+2
  6883  004DFE  C0AC  F0C4         	movff	?___fladd+3,sqrt@a+3
  6884  004E02  EC72  F01F         	call	_sqrt	;wreg free
  6885  004E06  C0C1  F1AC         	movff	?_sqrt,asin@y
  6886  004E0A  C0C2  F1AD         	movff	?_sqrt+1,asin@y+1
  6887  004E0E  C0C3  F1AE         	movff	?_sqrt+2,asin@y+2
  6888  004E12  C0C4  F1AF         	movff	?_sqrt+3,asin@y+3
  6889  004E16  C0D5  F0C1         	movff	asin@x,fabs@d
  6890  004E1A  C0D6  F0C2         	movff	asin@x+1,fabs@d+1
  6891  004E1E  C0D7  F0C3         	movff	asin@x+2,fabs@d+2
  6892  004E22  C0D8  F0C4         	movff	asin@x+3,fabs@d+3
  6893  004E26  ECC7  F032         	call	_fabs	;wreg free
  6894  004E2A  C0C1  F0C5         	movff	?_fabs,___flge@ff1
  6895  004E2E  C0C2  F0C6         	movff	?_fabs+1,___flge@ff1+1
  6896  004E32  C0C3  F0C7         	movff	?_fabs+2,___flge@ff1+2
  6897  004E36  C0C4  F0C8         	movff	?_fabs+3,___flge@ff1+3
  6898  004E3A  0E8F               	movlw	143
  6899  004E3C  0100               	movlb	0	; () banked
  6900  004E3E  6FC9               	movwf	___flge@ff2& (0+255),b
  6901  004E40  0EC2               	movlw	194
  6902  004E42  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  6903  004E44  0E35               	movlw	53
  6904  004E46  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  6905  004E48  0E3F               	movlw	63
  6906  004E4A  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  6907  004E4C  EC30  F02D         	call	___flge	;wreg free
  6908  004E50  0100               	movlb	0	; () banked
  6909  004E52  B0D8               	btfsc	status,0,c
  6910  004E54  D02D               	goto	l7886
  6911                           
  6912                           ; BSR set to: 0
  6913  004E56  C0D5  F077         	movff	asin@x,___fldiv@b
  6914  004E5A  C0D6  F078         	movff	asin@x+1,___fldiv@b+1
  6915  004E5E  C0D7  F079         	movff	asin@x+2,___fldiv@b+2
  6916  004E62  C0D8  F07A         	movff	asin@x+3,___fldiv@b+3
  6917  004E66  C1AC  F07B         	movff	asin@y,___fldiv@a
  6918  004E6A  C1AD  F07C         	movff	asin@y+1,___fldiv@a+1
  6919  004E6E  C1AE  F07D         	movff	asin@y+2,___fldiv@a+2
  6920  004E72  C1AF  F07E         	movff	asin@y+3,___fldiv@a+3
  6921  004E76  EC57  F021         	call	___fldiv	;wreg free
  6922  004E7A  C077  F1B0         	movff	?___fldiv,_asin$3752
  6923  004E7E  C078  F1B1         	movff	?___fldiv+1,_asin$3752+1
  6924  004E82  C079  F1B2         	movff	?___fldiv+2,_asin$3752+2
  6925  004E86  C07A  F1B3         	movff	?___fldiv+3,_asin$3752+3
  6926  004E8A  C1B0  F0D1         	movff	_asin$3752,atan@f
  6927  004E8E  C1B1  F0D2         	movff	_asin$3752+1,atan@f+1
  6928  004E92  C1B2  F0D3         	movff	_asin$3752+2,atan@f+2
  6929  004E96  C1B3  F0D4         	movff	_asin$3752+3,atan@f+3
  6930  004E9A  EC5D  F029         	call	_atan	;wreg free
  6931  004E9E  C0D1  F0D5         	movff	?_atan,?_asin
  6932  004EA2  C0D2  F0D6         	movff	?_atan+1,?_asin+1
  6933  004EA6  C0D3  F0D7         	movff	?_atan+2,?_asin+2
  6934  004EAA  C0D4  F0D8         	movff	?_atan+3,?_asin+3
  6935  004EAE  0012               	return	
  6936  004EB0                     l7886:
  6937  004EB0  0100               	movlb	0	; () banked
  6938  004EB2  AFD8               	btfss	(asin@x+3)& (0+255),7,b
  6939  004EB4  D06E               	goto	l7898
  6940                           
  6941                           ; BSR set to: 0
  6942  004EB6  C0D5  F07B         	movff	asin@x,___fldiv@a
  6943  004EBA  C0D6  F07C         	movff	asin@x+1,___fldiv@a+1
  6944  004EBE  C0D7  F07D         	movff	asin@x+2,___fldiv@a+2
  6945  004EC2  C0D8  F07E         	movff	asin@x+3,___fldiv@a+3
  6946  004EC6  C1AC  F0BD         	movff	asin@y,___flneg@f1
  6947  004ECA  C1AD  F0BE         	movff	asin@y+1,___flneg@f1+1
  6948  004ECE  C1AE  F0BF         	movff	asin@y+2,___flneg@f1+2
  6949  004ED2  C1AF  F0C0         	movff	asin@y+3,___flneg@f1+3
  6950  004ED6  EC03  F033         	call	___flneg	;wreg free
  6951  004EDA  C0BD  F077         	movff	?___flneg,___fldiv@b
  6952  004EDE  C0BE  F078         	movff	?___flneg+1,___fldiv@b+1
  6953  004EE2  C0BF  F079         	movff	?___flneg+2,___fldiv@b+2
  6954  004EE6  C0C0  F07A         	movff	?___flneg+3,___fldiv@b+3
  6955  004EEA  EC57  F021         	call	___fldiv	;wreg free
  6956  004EEE  C077  F1B0         	movff	?___fldiv,_asin$3752
  6957  004EF2  C078  F1B1         	movff	?___fldiv+1,_asin$3752+1
  6958  004EF6  C079  F1B2         	movff	?___fldiv+2,_asin$3752+2
  6959  004EFA  C07A  F1B3         	movff	?___fldiv+3,_asin$3752+3
  6960  004EFE  C1B0  F0D1         	movff	_asin$3752,atan@f
  6961  004F02  C1B1  F0D2         	movff	_asin$3752+1,atan@f+1
  6962  004F06  C1B2  F0D3         	movff	_asin$3752+2,atan@f+2
  6963  004F0A  C1B3  F0D4         	movff	_asin$3752+3,atan@f+3
  6964  004F0E  EC5D  F029         	call	_atan	;wreg free
  6965  004F12  C0D1  F1A8         	movff	?_atan,_asin$3753
  6966  004F16  C0D2  F1A9         	movff	?_atan+1,_asin$3753+1
  6967  004F1A  C0D3  F1AA         	movff	?_atan+2,_asin$3753+2
  6968  004F1E  C0D4  F1AB         	movff	?_atan+3,_asin$3753+3
  6969  004F22  0EDB               	movlw	219
  6970  004F24  0100               	movlb	0	; () banked
  6971  004F26  6FAD               	movwf	___fladd@a& (0+255),b
  6972  004F28  0E0F               	movlw	15
  6973  004F2A  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6974  004F2C  0EC9               	movlw	201
  6975  004F2E  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6976  004F30  0E3F               	movlw	63
  6977  004F32  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6978  004F34  C1A8  F0BD         	movff	_asin$3753,___flneg@f1
  6979  004F38  C1A9  F0BE         	movff	_asin$3753+1,___flneg@f1+1
  6980  004F3C  C1AA  F0BF         	movff	_asin$3753+2,___flneg@f1+2
  6981  004F40  C1AB  F0C0         	movff	_asin$3753+3,___flneg@f1+3
  6982  004F44  EC03  F033         	call	___flneg	;wreg free
  6983  004F48  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6984  004F4C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6985  004F50  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6986  004F54  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6987  004F58  EC85  F018         	call	___fladd	;wreg free
  6988  004F5C  C0A9  F1A4         	movff	?___fladd,_asin$3754
  6989  004F60  C0AA  F1A5         	movff	?___fladd+1,_asin$3754+1
  6990  004F64  C0AB  F1A6         	movff	?___fladd+2,_asin$3754+2
  6991  004F68  C0AC  F1A7         	movff	?___fladd+3,_asin$3754+3
  6992  004F6C  C1A4  F0BD         	movff	_asin$3754,___flneg@f1
  6993  004F70  C1A5  F0BE         	movff	_asin$3754+1,___flneg@f1+1
  6994  004F74  C1A6  F0BF         	movff	_asin$3754+2,___flneg@f1+2
  6995  004F78  C1A7  F0C0         	movff	_asin$3754+3,___flneg@f1+3
  6996  004F7C  EC03  F033         	call	___flneg	;wreg free
  6997  004F80  C0BD  F0D5         	movff	?___flneg,?_asin
  6998  004F84  C0BE  F0D6         	movff	?___flneg+1,?_asin+1
  6999  004F88  C0BF  F0D7         	movff	?___flneg+2,?_asin+2
  7000  004F8C  C0C0  F0D8         	movff	?___flneg+3,?_asin+3
  7001  004F90  0012               	return	
  7002  004F92                     l7898:
  7003  004F92  C0D5  F07B         	movff	asin@x,___fldiv@a
  7004  004F96  C0D6  F07C         	movff	asin@x+1,___fldiv@a+1
  7005  004F9A  C0D7  F07D         	movff	asin@x+2,___fldiv@a+2
  7006  004F9E  C0D8  F07E         	movff	asin@x+3,___fldiv@a+3
  7007  004FA2  C1AC  F077         	movff	asin@y,___fldiv@b
  7008  004FA6  C1AD  F078         	movff	asin@y+1,___fldiv@b+1
  7009  004FAA  C1AE  F079         	movff	asin@y+2,___fldiv@b+2
  7010  004FAE  C1AF  F07A         	movff	asin@y+3,___fldiv@b+3
  7011  004FB2  EC57  F021         	call	___fldiv	;wreg free
  7012  004FB6  C077  F1B0         	movff	?___fldiv,_asin$3752
  7013  004FBA  C078  F1B1         	movff	?___fldiv+1,_asin$3752+1
  7014  004FBE  C079  F1B2         	movff	?___fldiv+2,_asin$3752+2
  7015  004FC2  C07A  F1B3         	movff	?___fldiv+3,_asin$3752+3
  7016  004FC6  C1B0  F0D1         	movff	_asin$3752,atan@f
  7017  004FCA  C1B1  F0D2         	movff	_asin$3752+1,atan@f+1
  7018  004FCE  C1B2  F0D3         	movff	_asin$3752+2,atan@f+2
  7019  004FD2  C1B3  F0D4         	movff	_asin$3752+3,atan@f+3
  7020  004FD6  EC5D  F029         	call	_atan	;wreg free
  7021  004FDA  C0D1  F1A8         	movff	?_atan,_asin$3753
  7022  004FDE  C0D2  F1A9         	movff	?_atan+1,_asin$3753+1
  7023  004FE2  C0D3  F1AA         	movff	?_atan+2,_asin$3753+2
  7024  004FE6  C0D4  F1AB         	movff	?_atan+3,_asin$3753+3
  7025  004FEA  C1A8  F0BD         	movff	_asin$3753,___flneg@f1
  7026  004FEE  C1A9  F0BE         	movff	_asin$3753+1,___flneg@f1+1
  7027  004FF2  C1AA  F0BF         	movff	_asin$3753+2,___flneg@f1+2
  7028  004FF6  C1AB  F0C0         	movff	_asin$3753+3,___flneg@f1+3
  7029  004FFA  EC03  F033         	call	___flneg	;wreg free
  7030  004FFE  C0BD  F0A9         	movff	?___flneg,___fladd@b
  7031  005002  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  7032  005006  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  7033  00500A  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  7034  00500E  0EDB               	movlw	219
  7035  005010  0100               	movlb	0	; () banked
  7036  005012  6FAD               	movwf	___fladd@a& (0+255),b
  7037  005014  0E0F               	movlw	15
  7038  005016  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  7039  005018  0EC9               	movlw	201
  7040  00501A  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  7041  00501C  0E3F               	movlw	63
  7042  00501E  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  7043  005020  EC85  F018         	call	___fladd	;wreg free
  7044  005024  C0A9  F0D5         	movff	?___fladd,?_asin
  7045  005028  C0AA  F0D6         	movff	?___fladd+1,?_asin+1
  7046  00502C  C0AB  F0D7         	movff	?___fladd+2,?_asin+2
  7047  005030  C0AC  F0D8         	movff	?___fladd+3,?_asin+3
  7048  005034  0012               	return	
  7049  005036                     __end_of_asin:
  7050                           	opt stack 0
  7051                           tblptru	equ	0xFF8
  7052                           tblptrh	equ	0xFF7
  7053                           tblptrl	equ	0xFF6
  7054                           tablat	equ	0xFF5
  7055                           postinc0	equ	0xFEE
  7056                           wreg	equ	0xFE8
  7057                           postdec1	equ	0xFE5
  7058                           fsr1l	equ	0xFE1
  7059                           indf2	equ	0xFDF
  7060                           postinc2	equ	0xFDE
  7061                           postdec2	equ	0xFDD
  7062                           fsr2h	equ	0xFDA
  7063                           fsr2l	equ	0xFD9
  7064                           status	equ	0xFD8
  7065                           
  7066 ;; *************** function _sqrt *****************
  7067 ;; Defined at:
  7068 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  7069 ;; Parameters:    Size  Location     Type
  7070 ;;  a               4   97[BANK0 ] long 
  7071 ;; Auto vars:     Size  Location     Type
  7072 ;;  frac            4   17[BANK1 ] unsigned long 
  7073 ;;  root            4   13[BANK1 ] struct .
  7074 ;;  grs             4    7[BANK1 ] unsigned long 
  7075 ;;  tfrac           4    2[BANK1 ] unsigned long 
  7076 ;;  exp             2   11[BANK1 ] int 
  7077 ;;  p               1    6[BANK1 ] unsigned char 
  7078 ;;  i               1    1[BANK1 ] unsigned char 
  7079 ;;  sign            1    0[BANK1 ] unsigned char 
  7080 ;; Return value:  Size  Location     Type
  7081 ;;                  4   97[BANK0 ] unsigned char 
  7082 ;; Registers used:
  7083 ;;		wreg, status,2, status,0
  7084 ;; Tracked objects:
  7085 ;;		On entry : 0/0
  7086 ;;		On exit  : 0/0
  7087 ;;		Unchanged: 0/0
  7088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7089 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7090 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  7091 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7092 ;;      Totals:         0       8      21       0       0       0       0       0       0       0       0       0       
      +0       0
  7093 ;;Total ram usage:       29 bytes
  7094 ;; Hardware stack levels used:    1
  7095 ;; Hardware stack levels required when called:    4
  7096 ;; This function calls:
  7097 ;;		Nothing
  7098 ;; This function is called by:
  7099 ;;		_parallelo
  7100 ;;		_asin
  7101 ;; This function uses a non-reentrant model
  7102 ;;
  7103                           
  7104                           	psect	text17
  7105  003EE4                     __ptext17:
  7106                           	opt stack 0
  7107  003EE4                     _sqrt:
  7108                           	opt stack 24
  7109                           
  7110                           ;incstack = 0
  7111  003EE4  0100               	movlb	0	; () banked
  7112  003EE6  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  7113  003EE8  0B80               	andlw	128
  7114  003EEA  0101               	movlb	1	; () banked
  7115  003EEC  6F8B               	movwf	sqrt@sign& (0+255),b
  7116  003EEE  0100               	movlb	0	; () banked
  7117  003EF0  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  7118  003EF2  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  7119  003EF4  0101               	movlb	1	; () banked
  7120  003EF6  6F91               	movwf	sqrt@p& (0+255),b
  7121                           
  7122                           ; BSR set to: 1
  7123  003EF8  0100               	movlb	0	; () banked
  7124  003EFA  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  7125  003EFC  D002               	goto	l7652
  7126                           
  7127                           ; BSR set to: 0
  7128  003EFE  0101               	movlb	1	; () banked
  7129  003F00  8191               	bsf	sqrt@p& (0+255),0,b
  7130  003F02                     l7652:
  7131  003F02  C191  F196         	movff	sqrt@p,sqrt@exp
  7132  003F06  0101               	movlb	1	; () banked
  7133  003F08  6B97               	clrf	(sqrt@exp+1)& (0+255),b
  7134                           
  7135                           ; BSR set to: 1
  7136  003F0A  0EFF               	movlw	255
  7137  003F0C  0100               	movlb	0	; () banked
  7138  003F0E  15C1               	andwf	sqrt@a& (0+255),w,b
  7139  003F10  0101               	movlb	1	; () banked
  7140  003F12  6F9C               	movwf	sqrt@frac& (0+255),b
  7141  003F14  0EFF               	movlw	255
  7142  003F16  0100               	movlb	0	; () banked
  7143  003F18  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  7144  003F1A  0101               	movlb	1	; () banked
  7145  003F1C  6F9D               	movwf	(sqrt@frac+1)& (0+255),b
  7146  003F1E  0E7F               	movlw	127
  7147  003F20  0100               	movlb	0	; () banked
  7148  003F22  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  7149  003F24  0101               	movlb	1	; () banked
  7150  003F26  6F9E               	movwf	(sqrt@frac+2)& (0+255),b
  7151  003F28  0E00               	movlw	0
  7152  003F2A  0100               	movlb	0	; () banked
  7153  003F2C  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  7154  003F2E  0101               	movlb	1	; () banked
  7155  003F30  6F9F               	movwf	(sqrt@frac+3)& (0+255),b
  7156                           
  7157                           ; BSR set to: 1
  7158  003F32  0101               	movlb	1	; () banked
  7159  003F34  5196               	movf	sqrt@exp& (0+255),w,b
  7160  003F36  0101               	movlb	1	; () banked
  7161  003F38  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7162  003F3A  B4D8               	btfsc	status,2,c
  7163  003F3C  D008               	goto	l7664
  7164                           
  7165                           ; BSR set to: 1
  7166  003F3E  0101               	movlb	1	; () banked
  7167  003F40  8F9E               	bsf	(sqrt@frac+2)& (0+255),7,b
  7168                           
  7169                           ; BSR set to: 1
  7170  003F42  0101               	movlb	1	; () banked
  7171  003F44  2996               	incf	sqrt@exp& (0+255),w,b
  7172  003F46  0101               	movlb	1	; () banked
  7173  003F48  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7174  003F4A  A4D8               	btfss	status,2,c
  7175  003F4C  D009               	goto	l7666
  7176  003F4E                     l7664:
  7177                           
  7178                           ; BSR set to: 1
  7179  003F4E  0E00               	movlw	0
  7180  003F50  0101               	movlb	1	; () banked
  7181  003F52  6F9C               	movwf	sqrt@frac& (0+255),b
  7182  003F54  0E00               	movlw	0
  7183  003F56  6F9D               	movwf	(sqrt@frac+1)& (0+255),b
  7184  003F58  0E00               	movlw	0
  7185  003F5A  6F9E               	movwf	(sqrt@frac+2)& (0+255),b
  7186  003F5C  0E00               	movlw	0
  7187  003F5E  6F9F               	movwf	(sqrt@frac+3)& (0+255),b
  7188  003F60                     l7666:
  7189                           
  7190                           ; BSR set to: 1
  7191  003F60  0101               	movlb	1	; () banked
  7192  003F62  5196               	movf	sqrt@exp& (0+255),w,b
  7193  003F64  0101               	movlb	1	; () banked
  7194  003F66  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7195  003F68  A4D8               	btfss	status,2,c
  7196  003F6A  D00A               	goto	l7672
  7197                           
  7198                           ; BSR set to: 1
  7199  003F6C  0E00               	movlw	0
  7200  003F6E  0100               	movlb	0	; () banked
  7201  003F70  6FC1               	movwf	?_sqrt& (0+255),b
  7202  003F72  0E00               	movlw	0
  7203  003F74  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  7204  003F76  0E00               	movlw	0
  7205  003F78  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  7206  003F7A  0E00               	movlw	0
  7207  003F7C  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  7208                           
  7209                           ; BSR set to: 0
  7210  003F7E  0012               	return	
  7211  003F80                     l7672:
  7212  003F80  0101               	movlb	1	; () banked
  7213  003F82  518B               	movf	sqrt@sign& (0+255),w,b
  7214  003F84  0101               	movlb	1	; () banked
  7215  003F86  B4D8               	btfsc	status,2,c
  7216  003F88  D01C               	goto	l7684
  7217                           
  7218                           ; BSR set to: 1
  7219  003F8A  0E00               	movlw	0
  7220  003F8C  0101               	movlb	1	; () banked
  7221  003F8E  6F98               	movwf	sqrt@root& (0+255),b
  7222  003F90  0E00               	movlw	0
  7223  003F92  6F99               	movwf	(sqrt@root+1)& (0+255),b
  7224  003F94  0E40               	movlw	64
  7225  003F96  6F9A               	movwf	(sqrt@root+2)& (0+255),b
  7226  003F98  0E00               	movlw	0
  7227  003F9A  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7228                           
  7229                           ; BSR set to: 1
  7230  003F9C  0101               	movlb	1	; () banked
  7231  003F9E  0E80               	movlw	128
  7232  003FA0  139A               	iorwf	(sqrt@root+2)& (0+255),f,b
  7233  003FA2  0EFF               	movlw	255
  7234  003FA4  139B               	iorwf	(sqrt@root+3)& (0+255),f,b
  7235                           
  7236                           ; BSR set to: 1
  7237  003FA6  0E00               	movlw	0
  7238  003FA8  0100               	movlb	0	; () banked
  7239  003FAA  6FE5               	movwf	(_errno+1)& (0+255),b
  7240  003FAC  0E21               	movlw	33
  7241  003FAE  6FE4               	movwf	_errno& (0+255),b
  7242                           
  7243                           ; BSR set to: 0
  7244  003FB0  C198  F0C1         	movff	sqrt@root,?_sqrt
  7245  003FB4  C199  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7246  003FB8  C19A  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7247  003FBC  C19B  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7248                           
  7249                           ; BSR set to: 0
  7250  003FC0  0012               	return	
  7251  003FC2                     l7684:
  7252  003FC2  0101               	movlb	1	; () banked
  7253  003FC4  2996               	incf	sqrt@exp& (0+255),w,b
  7254  003FC6  0101               	movlb	1	; () banked
  7255  003FC8  1197               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7256  003FCA  A4D8               	btfss	status,2,c
  7257  003FCC  D012               	goto	l7692
  7258                           
  7259                           ; BSR set to: 1
  7260  003FCE  0E00               	movlw	0
  7261  003FD0  0101               	movlb	1	; () banked
  7262  003FD2  6F98               	movwf	sqrt@root& (0+255),b
  7263  003FD4  0E00               	movlw	0
  7264  003FD6  6F99               	movwf	(sqrt@root+1)& (0+255),b
  7265  003FD8  0E80               	movlw	128
  7266  003FDA  6F9A               	movwf	(sqrt@root+2)& (0+255),b
  7267  003FDC  0E7F               	movlw	127
  7268  003FDE  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7269                           
  7270                           ; BSR set to: 1
  7271  003FE0  C198  F0C1         	movff	sqrt@root,?_sqrt
  7272  003FE4  C199  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7273  003FE8  C19A  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7274  003FEC  C19B  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7275                           
  7276                           ; BSR set to: 1
  7277  003FF0  0012               	return	
  7278  003FF2                     l7692:
  7279                           
  7280                           ; BSR set to: 1
  7281  003FF2  0101               	movlb	1	; () banked
  7282  003FF4  0E81               	movlw	129
  7283  003FF6  2796               	addwf	sqrt@exp& (0+255),f,b
  7284  003FF8  0EFF               	movlw	255
  7285  003FFA  2397               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7286  003FFC  0101               	movlb	1	; () banked
  7287  003FFE  5196               	movf	sqrt@exp& (0+255),w,b
  7288  004000  0B01               	andlw	1
  7289  004002  0101               	movlb	1	; () banked
  7290  004004  6F91               	movwf	sqrt@p& (0+255),b
  7291  004006  0101               	movlb	1	; () banked
  7292  004008  3597               	rlcf	(sqrt@exp+1)& (0+255),w,b
  7293  00400A  3397               	rrcf	(sqrt@exp+1)& (0+255),f,b
  7294  00400C  3396               	rrcf	sqrt@exp& (0+255),f,b
  7295  00400E  0E7F               	movlw	127
  7296  004010  0101               	movlb	1	; () banked
  7297  004012  2796               	addwf	sqrt@exp& (0+255),f,b
  7298  004014  0E00               	movlw	0
  7299  004016  2397               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7300  004018  90D8               	bcf	status,0,c
  7301  00401A  0101               	movlb	1	; () banked
  7302  00401C  359C               	rlcf	sqrt@frac& (0+255),w,b
  7303  00401E  0101               	movlb	1	; () banked
  7304  004020  6F8D               	movwf	sqrt@tfrac& (0+255),b
  7305  004022  0101               	movlb	1	; () banked
  7306  004024  359D               	rlcf	(sqrt@frac+1)& (0+255),w,b
  7307  004026  0101               	movlb	1	; () banked
  7308  004028  6F8E               	movwf	(sqrt@tfrac+1)& (0+255),b
  7309  00402A  0101               	movlb	1	; () banked
  7310  00402C  359E               	rlcf	(sqrt@frac+2)& (0+255),w,b
  7311  00402E  0101               	movlb	1	; () banked
  7312  004030  6F8F               	movwf	(sqrt@tfrac+2)& (0+255),b
  7313  004032  0101               	movlb	1	; () banked
  7314  004034  359F               	rlcf	(sqrt@frac+3)& (0+255),w,b
  7315  004036  0101               	movlb	1	; () banked
  7316  004038  6F90               	movwf	(sqrt@tfrac+3)& (0+255),b
  7317                           
  7318                           ; BSR set to: 1
  7319  00403A  0E00               	movlw	0
  7320  00403C  0101               	movlb	1	; () banked
  7321  00403E  6F9C               	movwf	sqrt@frac& (0+255),b
  7322  004040  0E00               	movlw	0
  7323  004042  6F9D               	movwf	(sqrt@frac+1)& (0+255),b
  7324  004044  0E00               	movlw	0
  7325  004046  6F9E               	movwf	(sqrt@frac+2)& (0+255),b
  7326  004048  0E00               	movlw	0
  7327  00404A  6F9F               	movwf	(sqrt@frac+3)& (0+255),b
  7328                           
  7329                           ; BSR set to: 1
  7330  00404C  0E00               	movlw	0
  7331  00404E  0101               	movlb	1	; () banked
  7332  004050  6F92               	movwf	sqrt@grs& (0+255),b
  7333  004052  0E00               	movlw	0
  7334  004054  6F93               	movwf	(sqrt@grs+1)& (0+255),b
  7335  004056  0E00               	movlw	0
  7336  004058  6F94               	movwf	(sqrt@grs+2)& (0+255),b
  7337  00405A  0E01               	movlw	1
  7338  00405C  6F95               	movwf	(sqrt@grs+3)& (0+255),b
  7339                           
  7340                           ; BSR set to: 1
  7341  00405E  0101               	movlb	1	; () banked
  7342  004060  5191               	movf	sqrt@p& (0+255),w,b
  7343  004062  0101               	movlb	1	; () banked
  7344  004064  B4D8               	btfsc	status,2,c
  7345  004066  D006               	goto	l7702
  7346                           
  7347                           ; BSR set to: 1
  7348  004068  0101               	movlb	1	; () banked
  7349  00406A  90D8               	bcf	status,0,c
  7350  00406C  378D               	rlcf	sqrt@tfrac& (0+255),f,b
  7351  00406E  378E               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7352  004070  378F               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7353  004072  3790               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7354  004074                     l7702:
  7355                           
  7356                           ; BSR set to: 1
  7357  004074  0E00               	movlw	0
  7358  004076  0101               	movlb	1	; () banked
  7359  004078  6F8C               	movwf	sqrt@i& (0+255),b
  7360  00407A  D07E               	goto	l7716
  7361  00407C                     l7704:
  7362                           
  7363                           ; BSR set to: 1
  7364  00407C  0101               	movlb	1	; () banked
  7365  00407E  5192               	movf	sqrt@grs& (0+255),w,b
  7366  004080  0101               	movlb	1	; () banked
  7367  004082  139C               	iorwf	sqrt@frac& (0+255),f,b
  7368  004084  0101               	movlb	1	; () banked
  7369  004086  5193               	movf	(sqrt@grs+1)& (0+255),w,b
  7370  004088  0101               	movlb	1	; () banked
  7371  00408A  139D               	iorwf	(sqrt@frac+1)& (0+255),f,b
  7372  00408C  0101               	movlb	1	; () banked
  7373  00408E  5194               	movf	(sqrt@grs+2)& (0+255),w,b
  7374  004090  0101               	movlb	1	; () banked
  7375  004092  139E               	iorwf	(sqrt@frac+2)& (0+255),f,b
  7376  004094  0101               	movlb	1	; () banked
  7377  004096  5195               	movf	(sqrt@grs+3)& (0+255),w,b
  7378  004098  0101               	movlb	1	; () banked
  7379  00409A  139F               	iorwf	(sqrt@frac+3)& (0+255),f,b
  7380  00409C  0101               	movlb	1	; () banked
  7381  00409E  519C               	movf	sqrt@frac& (0+255),w,b
  7382  0040A0  0101               	movlb	1	; () banked
  7383  0040A2  5D8D               	subwf	sqrt@tfrac& (0+255),w,b
  7384  0040A4  0101               	movlb	1	; () banked
  7385  0040A6  519D               	movf	(sqrt@frac+1)& (0+255),w,b
  7386  0040A8  0101               	movlb	1	; () banked
  7387  0040AA  598E               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  7388  0040AC  0101               	movlb	1	; () banked
  7389  0040AE  519E               	movf	(sqrt@frac+2)& (0+255),w,b
  7390  0040B0  0101               	movlb	1	; () banked
  7391  0040B2  598F               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  7392  0040B4  0101               	movlb	1	; () banked
  7393  0040B6  519F               	movf	(sqrt@frac+3)& (0+255),w,b
  7394  0040B8  0101               	movlb	1	; () banked
  7395  0040BA  5990               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  7396  0040BC  A0D8               	btfss	status,0,c
  7397  0040BE  D021               	goto	l7708
  7398                           
  7399                           ; BSR set to: 1
  7400  0040C0  0101               	movlb	1	; () banked
  7401  0040C2  519C               	movf	sqrt@frac& (0+255),w,b
  7402  0040C4  0101               	movlb	1	; () banked
  7403  0040C6  5F8D               	subwf	sqrt@tfrac& (0+255),f,b
  7404  0040C8  0101               	movlb	1	; () banked
  7405  0040CA  519D               	movf	(sqrt@frac+1)& (0+255),w,b
  7406  0040CC  0101               	movlb	1	; () banked
  7407  0040CE  5B8E               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  7408  0040D0  0101               	movlb	1	; () banked
  7409  0040D2  519E               	movf	(sqrt@frac+2)& (0+255),w,b
  7410  0040D4  0101               	movlb	1	; () banked
  7411  0040D6  5B8F               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  7412  0040D8  0101               	movlb	1	; () banked
  7413  0040DA  519F               	movf	(sqrt@frac+3)& (0+255),w,b
  7414  0040DC  0101               	movlb	1	; () banked
  7415  0040DE  5B90               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  7416  0040E0  0101               	movlb	1	; () banked
  7417  0040E2  5192               	movf	sqrt@grs& (0+255),w,b
  7418  0040E4  0101               	movlb	1	; () banked
  7419  0040E6  279C               	addwf	sqrt@frac& (0+255),f,b
  7420  0040E8  0101               	movlb	1	; () banked
  7421  0040EA  5193               	movf	(sqrt@grs+1)& (0+255),w,b
  7422  0040EC  0101               	movlb	1	; () banked
  7423  0040EE  239D               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7424  0040F0  0101               	movlb	1	; () banked
  7425  0040F2  5194               	movf	(sqrt@grs+2)& (0+255),w,b
  7426  0040F4  0101               	movlb	1	; () banked
  7427  0040F6  239E               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7428  0040F8  0101               	movlb	1	; () banked
  7429  0040FA  5195               	movf	(sqrt@grs+3)& (0+255),w,b
  7430  0040FC  0101               	movlb	1	; () banked
  7431  0040FE  239F               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7432  004100  D01D               	goto	l7710
  7433  004102                     l7708:
  7434                           
  7435                           ; BSR set to: 1
  7436  004102  C192  F0C5         	movff	sqrt@grs,??_sqrt
  7437  004106  C193  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7438  00410A  C194  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7439  00410E  C195  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7440  004112  0100               	movlb	0	; () banked
  7441  004114  1FC5               	comf	??_sqrt& (0+255),f,b
  7442  004116  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  7443  004118  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  7444  00411A  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  7445  00411C  0100               	movlb	0	; () banked
  7446  00411E  51C5               	movf	??_sqrt& (0+255),w,b
  7447  004120  0101               	movlb	1	; () banked
  7448  004122  179C               	andwf	sqrt@frac& (0+255),f,b
  7449  004124  0100               	movlb	0	; () banked
  7450  004126  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  7451  004128  0101               	movlb	1	; () banked
  7452  00412A  179D               	andwf	(sqrt@frac+1)& (0+255),f,b
  7453  00412C  0100               	movlb	0	; () banked
  7454  00412E  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  7455  004130  0101               	movlb	1	; () banked
  7456  004132  179E               	andwf	(sqrt@frac+2)& (0+255),f,b
  7457  004134  0100               	movlb	0	; () banked
  7458  004136  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  7459  004138  0101               	movlb	1	; () banked
  7460  00413A  179F               	andwf	(sqrt@frac+3)& (0+255),f,b
  7461  00413C                     l7710:
  7462                           
  7463                           ; BSR set to: 1
  7464  00413C  C192  F0C5         	movff	sqrt@grs,??_sqrt
  7465  004140  C193  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7466  004144  C194  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7467  004148  C195  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7468  00414C  0100               	movlb	0	; () banked
  7469  00414E  90D8               	bcf	status,0,c
  7470  004150  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7471  004152  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7472  004154  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7473  004156  33C5               	rrcf	??_sqrt& (0+255),f,b
  7474  004158  C0C5  F192         	movff	??_sqrt,sqrt@grs
  7475  00415C  C0C6  F193         	movff	??_sqrt+1,sqrt@grs+1
  7476  004160  C0C7  F194         	movff	??_sqrt+2,sqrt@grs+2
  7477  004164  C0C8  F195         	movff	??_sqrt+3,sqrt@grs+3
  7478                           
  7479                           ; BSR set to: 0
  7480  004168  0101               	movlb	1	; () banked
  7481  00416A  90D8               	bcf	status,0,c
  7482  00416C  378D               	rlcf	sqrt@tfrac& (0+255),f,b
  7483  00416E  378E               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7484  004170  378F               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7485  004172  3790               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7486                           
  7487                           ; BSR set to: 1
  7488  004174  0101               	movlb	1	; () banked
  7489  004176  2B8C               	incf	sqrt@i& (0+255),f,b
  7490  004178                     l7716:
  7491                           
  7492                           ; BSR set to: 1
  7493  004178  0E18               	movlw	24
  7494  00417A  0101               	movlb	1	; () banked
  7495  00417C  658C               	cpfsgt	sqrt@i& (0+255),b
  7496  00417E  D77E               	goto	l7704
  7497                           
  7498                           ; BSR set to: 1
  7499                           
  7500                           ; BSR set to: 1
  7501  004180  C19C  F0C5         	movff	sqrt@frac,??_sqrt
  7502  004184  C19D  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7503  004188  C19E  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7504  00418C  C19F  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7505  004190  0100               	movlb	0	; () banked
  7506  004192  90D8               	bcf	status,0,c
  7507  004194  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7508  004196  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7509  004198  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7510  00419A  33C5               	rrcf	??_sqrt& (0+255),f,b
  7511  00419C  C0C5  F19C         	movff	??_sqrt,sqrt@frac
  7512  0041A0  C0C6  F19D         	movff	??_sqrt+1,sqrt@frac+1
  7513  0041A4  C0C7  F19E         	movff	??_sqrt+2,sqrt@frac+2
  7514  0041A8  C0C8  F19F         	movff	??_sqrt+3,sqrt@frac+3
  7515                           
  7516                           ; BSR set to: 0
  7517  0041AC  0E01               	movlw	1
  7518  0041AE  0101               	movlb	1	; () banked
  7519  0041B0  159C               	andwf	sqrt@frac& (0+255),w,b
  7520  0041B2  0101               	movlb	1	; () banked
  7521  0041B4  6F92               	movwf	sqrt@grs& (0+255),b
  7522  0041B6  0E00               	movlw	0
  7523  0041B8  0101               	movlb	1	; () banked
  7524  0041BA  159D               	andwf	(sqrt@frac+1)& (0+255),w,b
  7525  0041BC  0101               	movlb	1	; () banked
  7526  0041BE  6F93               	movwf	(sqrt@grs+1)& (0+255),b
  7527  0041C0  0E00               	movlw	0
  7528  0041C2  0101               	movlb	1	; () banked
  7529  0041C4  159E               	andwf	(sqrt@frac+2)& (0+255),w,b
  7530  0041C6  0101               	movlb	1	; () banked
  7531  0041C8  6F94               	movwf	(sqrt@grs+2)& (0+255),b
  7532  0041CA  0E00               	movlw	0
  7533  0041CC  0101               	movlb	1	; () banked
  7534  0041CE  159F               	andwf	(sqrt@frac+3)& (0+255),w,b
  7535  0041D0  0101               	movlb	1	; () banked
  7536  0041D2  6F95               	movwf	(sqrt@grs+3)& (0+255),b
  7537                           
  7538                           ; BSR set to: 1
  7539  0041D4  C19C  F0C5         	movff	sqrt@frac,??_sqrt
  7540  0041D8  C19D  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7541  0041DC  C19E  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7542  0041E0  C19F  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7543  0041E4  0100               	movlb	0	; () banked
  7544  0041E6  90D8               	bcf	status,0,c
  7545  0041E8  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7546  0041EA  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7547  0041EC  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7548  0041EE  33C5               	rrcf	??_sqrt& (0+255),f,b
  7549  0041F0  C0C5  F19C         	movff	??_sqrt,sqrt@frac
  7550  0041F4  C0C6  F19D         	movff	??_sqrt+1,sqrt@frac+1
  7551  0041F8  C0C7  F19E         	movff	??_sqrt+2,sqrt@frac+2
  7552  0041FC  C0C8  F19F         	movff	??_sqrt+3,sqrt@frac+3
  7553  004200  0101               	movlb	1	; () banked
  7554  004202  5192               	movf	sqrt@grs& (0+255),w,b
  7555  004204  0101               	movlb	1	; () banked
  7556  004206  279C               	addwf	sqrt@frac& (0+255),f,b
  7557  004208  0101               	movlb	1	; () banked
  7558  00420A  5193               	movf	(sqrt@grs+1)& (0+255),w,b
  7559  00420C  0101               	movlb	1	; () banked
  7560  00420E  239D               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7561  004210  0101               	movlb	1	; () banked
  7562  004212  5194               	movf	(sqrt@grs+2)& (0+255),w,b
  7563  004214  0101               	movlb	1	; () banked
  7564  004216  239E               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7565  004218  0101               	movlb	1	; () banked
  7566  00421A  5195               	movf	(sqrt@grs+3)& (0+255),w,b
  7567  00421C  0101               	movlb	1	; () banked
  7568  00421E  239F               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7569                           
  7570                           ; BSR set to: 1
  7571  004220  0101               	movlb	1	; () banked
  7572  004222  A19F               	btfss	(sqrt@frac+3)& (0+255),0,b
  7573  004224  D019               	goto	l7728
  7574                           
  7575                           ; BSR set to: 1
  7576  004226  C19C  F0C5         	movff	sqrt@frac,??_sqrt
  7577  00422A  C19D  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7578  00422E  C19E  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7579  004232  C19F  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7580  004236  0100               	movlb	0	; () banked
  7581  004238  90D8               	bcf	status,0,c
  7582  00423A  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7583  00423C  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7584  00423E  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7585  004240  33C5               	rrcf	??_sqrt& (0+255),f,b
  7586  004242  C0C5  F19C         	movff	??_sqrt,sqrt@frac
  7587  004246  C0C6  F19D         	movff	??_sqrt+1,sqrt@frac+1
  7588  00424A  C0C7  F19E         	movff	??_sqrt+2,sqrt@frac+2
  7589  00424E  C0C8  F19F         	movff	??_sqrt+3,sqrt@frac+3
  7590  004252  0101               	movlb	1	; () banked
  7591  004254  4B96               	infsnz	sqrt@exp& (0+255),f,b
  7592  004256  2B97               	incf	(sqrt@exp+1)& (0+255),f,b
  7593  004258                     l7728:
  7594                           
  7595                           ; BSR set to: 1
  7596  004258  0EFF               	movlw	255
  7597  00425A  0101               	movlb	1	; () banked
  7598  00425C  159C               	andwf	sqrt@frac& (0+255),w,b
  7599  00425E  0101               	movlb	1	; () banked
  7600  004260  6F98               	movwf	sqrt@root& (0+255),b
  7601  004262  0EFF               	movlw	255
  7602  004264  0101               	movlb	1	; () banked
  7603  004266  159D               	andwf	(sqrt@frac+1)& (0+255),w,b
  7604  004268  0101               	movlb	1	; () banked
  7605  00426A  6F99               	movwf	(sqrt@root+1)& (0+255),b
  7606  00426C  0E7F               	movlw	127
  7607  00426E  0101               	movlb	1	; () banked
  7608  004270  159E               	andwf	(sqrt@frac+2)& (0+255),w,b
  7609  004272  0101               	movlb	1	; () banked
  7610  004274  6F9A               	movwf	(sqrt@root+2)& (0+255),b
  7611  004276  0E00               	movlw	0
  7612  004278  0101               	movlb	1	; () banked
  7613  00427A  159F               	andwf	(sqrt@frac+3)& (0+255),w,b
  7614  00427C  0101               	movlb	1	; () banked
  7615  00427E  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7616                           
  7617                           ; BSR set to: 1
  7618  004280  C196  F191         	movff	sqrt@exp,sqrt@p
  7619                           
  7620                           ; BSR set to: 1
  7621  004284  0101               	movlb	1	; () banked
  7622  004286  A191               	btfss	sqrt@p& (0+255),0,b
  7623  004288  D002               	goto	l7736
  7624                           
  7625                           ; BSR set to: 1
  7626  00428A  0101               	movlb	1	; () banked
  7627  00428C  8F9A               	bsf	(sqrt@root+2)& (0+255),7,b
  7628  00428E                     l7736:
  7629                           
  7630                           ; BSR set to: 1
  7631  00428E  0101               	movlb	1	; () banked
  7632  004290  90D8               	bcf	status,0,c
  7633  004292  3191               	rrcf	sqrt@p& (0+255),w,b
  7634  004294  0101               	movlb	1	; () banked
  7635  004296  6F9B               	movwf	(sqrt@root+3)& (0+255),b
  7636                           
  7637                           ; BSR set to: 1
  7638  004298  0101               	movlb	1	; () banked
  7639  00429A  9F9B               	bcf	(sqrt@root+3)& (0+255),7,b
  7640                           
  7641                           ; BSR set to: 1
  7642  00429C  C198  F0C1         	movff	sqrt@root,?_sqrt
  7643  0042A0  C199  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7644  0042A4  C19A  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7645  0042A8  C19B  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7646  0042AC  0012               	return	
  7647  0042AE                     __end_of_sqrt:
  7648                           	opt stack 0
  7649                           tblptru	equ	0xFF8
  7650                           tblptrh	equ	0xFF7
  7651                           tblptrl	equ	0xFF6
  7652                           tablat	equ	0xFF5
  7653                           postinc0	equ	0xFEE
  7654                           wreg	equ	0xFE8
  7655                           postdec1	equ	0xFE5
  7656                           fsr1l	equ	0xFE1
  7657                           indf2	equ	0xFDF
  7658                           postinc2	equ	0xFDE
  7659                           postdec2	equ	0xFDD
  7660                           fsr2h	equ	0xFDA
  7661                           fsr2l	equ	0xFD9
  7662                           status	equ	0xFD8
  7663                           
  7664 ;; *************** function _atan *****************
  7665 ;; Defined at:
  7666 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;  f               4  113[BANK0 ] unsigned char 
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;  val             4   13[BANK1 ] unsigned char 
  7671 ;;  val_squared     4    9[BANK1 ] unsigned char 
  7672 ;;  x               4    4[BANK1 ] unsigned char 
  7673 ;;  y               4    0[BANK1 ] unsigned char 
  7674 ;;  recip           1    8[BANK1 ] unsigned char 
  7675 ;; Return value:  Size  Location     Type
  7676 ;;                  4  113[BANK0 ] unsigned char 
  7677 ;; Registers used:
  7678 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7679 ;; Tracked objects:
  7680 ;;		On entry : 0/0
  7681 ;;		On exit  : 0/0
  7682 ;;		Unchanged: 0/0
  7683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7684 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7685 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7687 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7688 ;;Total ram usage:       21 bytes
  7689 ;; Hardware stack levels used:    1
  7690 ;; Hardware stack levels required when called:    6
  7691 ;; This function calls:
  7692 ;;		___fladd
  7693 ;;		___fldiv
  7694 ;;		___flge
  7695 ;;		___flmul
  7696 ;;		___flneg
  7697 ;;		_eval_poly
  7698 ;;		_fabs
  7699 ;; This function is called by:
  7700 ;;		_asin
  7701 ;; This function uses a non-reentrant model
  7702 ;;
  7703                           
  7704                           	psect	text18
  7705  0052BA                     __ptext18:
  7706                           	opt stack 0
  7707  0052BA                     _atan:
  7708                           	opt stack 21
  7709                           
  7710                           ;incstack = 0
  7711  0052BA  C0D1  F0C1         	movff	atan@f,fabs@d
  7712  0052BE  C0D2  F0C2         	movff	atan@f+1,fabs@d+1
  7713  0052C2  C0D3  F0C3         	movff	atan@f+2,fabs@d+2
  7714  0052C6  C0D4  F0C4         	movff	atan@f+3,fabs@d+3
  7715  0052CA  ECC7  F032         	call	_fabs	;wreg free
  7716  0052CE  C0C1  F198         	movff	?_fabs,atan@val
  7717  0052D2  C0C2  F199         	movff	?_fabs+1,atan@val+1
  7718  0052D6  C0C3  F19A         	movff	?_fabs+2,atan@val+2
  7719  0052DA  C0C4  F19B         	movff	?_fabs+3,atan@val+3
  7720  0052DE  0101               	movlb	1	; () banked
  7721  0052E0  5198               	movf	atan@val& (0+255),w,b
  7722  0052E2  0101               	movlb	1	; () banked
  7723  0052E4  1199               	iorwf	(atan@val+1)& (0+255),w,b
  7724  0052E6  0101               	movlb	1	; () banked
  7725  0052E8  119A               	iorwf	(atan@val+2)& (0+255),w,b
  7726  0052EA  0101               	movlb	1	; () banked
  7727  0052EC  119B               	iorwf	(atan@val+3)& (0+255),w,b
  7728  0052EE  A4D8               	btfss	status,2,c
  7729  0052F0  D00A               	goto	l7756
  7730                           
  7731                           ; BSR set to: 1
  7732  0052F2  0E00               	movlw	0
  7733  0052F4  0100               	movlb	0	; () banked
  7734  0052F6  6FD1               	movwf	?_atan& (0+255),b
  7735  0052F8  0E00               	movlw	0
  7736  0052FA  6FD2               	movwf	(?_atan+1)& (0+255),b
  7737  0052FC  0E00               	movlw	0
  7738  0052FE  6FD3               	movwf	(?_atan+2)& (0+255),b
  7739  005300  0E00               	movlw	0
  7740  005302  6FD4               	movwf	(?_atan+3)& (0+255),b
  7741                           
  7742                           ; BSR set to: 0
  7743  005304  0012               	return	
  7744  005306                     l7756:
  7745  005306  0E00               	movlw	0
  7746  005308  0100               	movlb	0	; () banked
  7747  00530A  6FC5               	movwf	___flge@ff1& (0+255),b
  7748  00530C  0E00               	movlw	0
  7749  00530E  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  7750  005310  0E80               	movlw	128
  7751  005312  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  7752  005314  0E3F               	movlw	63
  7753  005316  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  7754  005318  C198  F0C9         	movff	atan@val,___flge@ff2
  7755  00531C  C199  F0CA         	movff	atan@val+1,___flge@ff2+1
  7756  005320  C19A  F0CB         	movff	atan@val+2,___flge@ff2+2
  7757  005324  C19B  F0CC         	movff	atan@val+3,___flge@ff2+3
  7758  005328  EC30  F02D         	call	___flge	;wreg free
  7759  00532C  0100               	movlb	0	; () banked
  7760  00532E  B0D8               	btfsc	status,0,c
  7761  005330  D002               	goto	u10310
  7762  005332  0E01               	movlw	1
  7763  005334  D001               	goto	u10320
  7764  005336                     u10310:
  7765  005336  0E00               	movlw	0
  7766  005338                     u10320:
  7767  005338  0101               	movlb	1	; () banked
  7768  00533A  6F93               	movwf	atan@recip& (0+255),b
  7769  00533C  0101               	movlb	1	; () banked
  7770  00533E  5193               	movf	atan@recip& (0+255),w,b
  7771  005340  B4D8               	btfsc	status,2,c
  7772  005342  D01B               	goto	l7760
  7773                           
  7774                           ; BSR set to: 1
  7775  005344  0E00               	movlw	0
  7776  005346  0100               	movlb	0	; () banked
  7777  005348  6F77               	movwf	___fldiv@b& (0+255),b
  7778  00534A  0E00               	movlw	0
  7779  00534C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7780  00534E  0E80               	movlw	128
  7781  005350  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7782  005352  0E3F               	movlw	63
  7783  005354  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7784  005356  C198  F07B         	movff	atan@val,___fldiv@a
  7785  00535A  C199  F07C         	movff	atan@val+1,___fldiv@a+1
  7786  00535E  C19A  F07D         	movff	atan@val+2,___fldiv@a+2
  7787  005362  C19B  F07E         	movff	atan@val+3,___fldiv@a+3
  7788  005366  EC57  F021         	call	___fldiv	;wreg free
  7789  00536A  C077  F198         	movff	?___fldiv,atan@val
  7790  00536E  C078  F199         	movff	?___fldiv+1,atan@val+1
  7791  005372  C079  F19A         	movff	?___fldiv+2,atan@val+2
  7792  005376  C07A  F19B         	movff	?___fldiv+3,atan@val+3
  7793  00537A                     l7760:
  7794  00537A  C198  F090         	movff	atan@val,___flmul@b
  7795  00537E  C199  F091         	movff	atan@val+1,___flmul@b+1
  7796  005382  C19A  F092         	movff	atan@val+2,___flmul@b+2
  7797  005386  C19B  F093         	movff	atan@val+3,___flmul@b+3
  7798  00538A  C198  F094         	movff	atan@val,___flmul@a
  7799  00538E  C199  F095         	movff	atan@val+1,___flmul@a+1
  7800  005392  C19A  F096         	movff	atan@val+2,___flmul@a+2
  7801  005396  C19B  F097         	movff	atan@val+3,___flmul@a+3
  7802  00539A  ECD9  F01A         	call	___flmul	;wreg free
  7803  00539E  C090  F194         	movff	?___flmul,atan@val_squared
  7804  0053A2  C091  F195         	movff	?___flmul+1,atan@val_squared+1
  7805  0053A6  C092  F196         	movff	?___flmul+2,atan@val_squared+2
  7806  0053AA  C093  F197         	movff	?___flmul+3,atan@val_squared+3
  7807  0053AE  C194  F0BD         	movff	atan@val_squared,eval_poly@x
  7808  0053B2  C195  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7809  0053B6  C196  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7810  0053BA  C197  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7811  0053BE  0E19               	movlw	low atan@coeff_b
  7812  0053C0  0100               	movlb	0	; () banked
  7813  0053C2  6FC1               	movwf	eval_poly@d& (0+255),b
  7814  0053C4  0E0D               	movlw	high atan@coeff_b
  7815  0053C6  0100               	movlb	0	; () banked
  7816  0053C8  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7817  0053CA  0E00               	movlw	0
  7818  0053CC  0100               	movlb	0	; () banked
  7819  0053CE  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7820  0053D0  0E04               	movlw	4
  7821  0053D2  6FC3               	movwf	eval_poly@n& (0+255),b
  7822  0053D4  EC2E  F02F         	call	_eval_poly	;wreg free
  7823  0053D8  C0BD  F18B         	movff	?_eval_poly,atan@y
  7824  0053DC  C0BE  F18C         	movff	?_eval_poly+1,atan@y+1
  7825  0053E0  C0BF  F18D         	movff	?_eval_poly+2,atan@y+2
  7826  0053E4  C0C0  F18E         	movff	?_eval_poly+3,atan@y+3
  7827  0053E8  C194  F0BD         	movff	atan@val_squared,eval_poly@x
  7828  0053EC  C195  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7829  0053F0  C196  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7830  0053F4  C197  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7831  0053F8  0E01               	movlw	low atan@coeff_a
  7832  0053FA  0100               	movlb	0	; () banked
  7833  0053FC  6FC1               	movwf	eval_poly@d& (0+255),b
  7834  0053FE  0E0D               	movlw	high atan@coeff_a
  7835  005400  0100               	movlb	0	; () banked
  7836  005402  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7837  005404  0E00               	movlw	0
  7838  005406  0100               	movlb	0	; () banked
  7839  005408  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7840  00540A  0E05               	movlw	5
  7841  00540C  6FC3               	movwf	eval_poly@n& (0+255),b
  7842  00540E  EC2E  F02F         	call	_eval_poly	;wreg free
  7843  005412  C0BD  F18F         	movff	?_eval_poly,atan@x
  7844  005416  C0BE  F190         	movff	?_eval_poly+1,atan@x+1
  7845  00541A  C0BF  F191         	movff	?_eval_poly+2,atan@x+2
  7846  00541E  C0C0  F192         	movff	?_eval_poly+3,atan@x+3
  7847  005422  C198  F090         	movff	atan@val,___flmul@b
  7848  005426  C199  F091         	movff	atan@val+1,___flmul@b+1
  7849  00542A  C19A  F092         	movff	atan@val+2,___flmul@b+2
  7850  00542E  C19B  F093         	movff	atan@val+3,___flmul@b+3
  7851  005432  C18B  F07B         	movff	atan@y,___fldiv@a
  7852  005436  C18C  F07C         	movff	atan@y+1,___fldiv@a+1
  7853  00543A  C18D  F07D         	movff	atan@y+2,___fldiv@a+2
  7854  00543E  C18E  F07E         	movff	atan@y+3,___fldiv@a+3
  7855  005442  C18F  F077         	movff	atan@x,___fldiv@b
  7856  005446  C190  F078         	movff	atan@x+1,___fldiv@b+1
  7857  00544A  C191  F079         	movff	atan@x+2,___fldiv@b+2
  7858  00544E  C192  F07A         	movff	atan@x+3,___fldiv@b+3
  7859  005452  EC57  F021         	call	___fldiv	;wreg free
  7860  005456  C077  F094         	movff	?___fldiv,___flmul@a
  7861  00545A  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  7862  00545E  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  7863  005462  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  7864  005466  ECD9  F01A         	call	___flmul	;wreg free
  7865  00546A  C090  F198         	movff	?___flmul,atan@val
  7866  00546E  C091  F199         	movff	?___flmul+1,atan@val+1
  7867  005472  C092  F19A         	movff	?___flmul+2,atan@val+2
  7868  005476  C093  F19B         	movff	?___flmul+3,atan@val+3
  7869  00547A  0101               	movlb	1	; () banked
  7870  00547C  5193               	movf	atan@recip& (0+255),w,b
  7871  00547E  0101               	movlb	1	; () banked
  7872  005480  B4D8               	btfsc	status,2,c
  7873  005482  D025               	goto	l7772
  7874                           
  7875                           ; BSR set to: 1
  7876  005484  C198  F0BD         	movff	atan@val,___flneg@f1
  7877  005488  C199  F0BE         	movff	atan@val+1,___flneg@f1+1
  7878  00548C  C19A  F0BF         	movff	atan@val+2,___flneg@f1+2
  7879  005490  C19B  F0C0         	movff	atan@val+3,___flneg@f1+3
  7880  005494  EC03  F033         	call	___flneg	;wreg free
  7881  005498  C0BD  F0A9         	movff	?___flneg,___fladd@b
  7882  00549C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  7883  0054A0  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  7884  0054A4  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  7885  0054A8  0EDB               	movlw	219
  7886  0054AA  0100               	movlb	0	; () banked
  7887  0054AC  6FAD               	movwf	___fladd@a& (0+255),b
  7888  0054AE  0E0F               	movlw	15
  7889  0054B0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  7890  0054B2  0EC9               	movlw	201
  7891  0054B4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  7892  0054B6  0E3F               	movlw	63
  7893  0054B8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  7894  0054BA  EC85  F018         	call	___fladd	;wreg free
  7895  0054BE  C0A9  F198         	movff	?___fladd,atan@val
  7896  0054C2  C0AA  F199         	movff	?___fladd+1,atan@val+1
  7897  0054C6  C0AB  F19A         	movff	?___fladd+2,atan@val+2
  7898  0054CA  C0AC  F19B         	movff	?___fladd+3,atan@val+3
  7899  0054CE                     l7772:
  7900  0054CE  0100               	movlb	0	; () banked
  7901  0054D0  BFD4               	btfsc	(atan@f+3)& (0+255),7,b
  7902  0054D2  D009               	goto	l7776
  7903                           
  7904                           ; BSR set to: 0
  7905  0054D4  C198  F0D1         	movff	atan@val,?_atan
  7906  0054D8  C199  F0D2         	movff	atan@val+1,?_atan+1
  7907  0054DC  C19A  F0D3         	movff	atan@val+2,?_atan+2
  7908  0054E0  C19B  F0D4         	movff	atan@val+3,?_atan+3
  7909  0054E4  0012               	return	
  7910  0054E6                     l7776:
  7911                           
  7912                           ; BSR set to: 0
  7913  0054E6  C198  F0BD         	movff	atan@val,___flneg@f1
  7914  0054EA  C199  F0BE         	movff	atan@val+1,___flneg@f1+1
  7915  0054EE  C19A  F0BF         	movff	atan@val+2,___flneg@f1+2
  7916  0054F2  C19B  F0C0         	movff	atan@val+3,___flneg@f1+3
  7917  0054F6  EC03  F033         	call	___flneg	;wreg free
  7918  0054FA  C0BD  F0D1         	movff	?___flneg,?_atan
  7919  0054FE  C0BE  F0D2         	movff	?___flneg+1,?_atan+1
  7920  005502  C0BF  F0D3         	movff	?___flneg+2,?_atan+2
  7921  005506  C0C0  F0D4         	movff	?___flneg+3,?_atan+3
  7922  00550A  0012               	return	
  7923  00550C                     __end_of_atan:
  7924                           	opt stack 0
  7925                           tblptru	equ	0xFF8
  7926                           tblptrh	equ	0xFF7
  7927                           tblptrl	equ	0xFF6
  7928                           tablat	equ	0xFF5
  7929                           postinc0	equ	0xFEE
  7930                           wreg	equ	0xFE8
  7931                           postdec1	equ	0xFE5
  7932                           fsr1l	equ	0xFE1
  7933                           indf2	equ	0xFDF
  7934                           postinc2	equ	0xFDE
  7935                           postdec2	equ	0xFDD
  7936                           fsr2h	equ	0xFDA
  7937                           fsr2l	equ	0xFD9
  7938                           status	equ	0xFD8
  7939                           
  7940 ;; *************** function _fabs *****************
  7941 ;; Defined at:
  7942 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  7943 ;; Parameters:    Size  Location     Type
  7944 ;;  d               4   97[BANK0 ] unsigned char 
  7945 ;; Auto vars:     Size  Location     Type
  7946 ;;		None
  7947 ;; Return value:  Size  Location     Type
  7948 ;;                  4   97[BANK0 ] unsigned char 
  7949 ;; Registers used:
  7950 ;;		wreg, status,2, status,0, cstack
  7951 ;; Tracked objects:
  7952 ;;		On entry : 0/0
  7953 ;;		On exit  : 0/0
  7954 ;;		Unchanged: 0/0
  7955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7956 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7959 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7960 ;;Total ram usage:        4 bytes
  7961 ;; Hardware stack levels used:    1
  7962 ;; Hardware stack levels required when called:    5
  7963 ;; This function calls:
  7964 ;;		___flneg
  7965 ;; This function is called by:
  7966 ;;		_asin
  7967 ;;		_atan
  7968 ;; This function uses a non-reentrant model
  7969 ;;
  7970                           
  7971                           	psect	text19
  7972  00658E                     __ptext19:
  7973                           	opt stack 0
  7974  00658E                     _fabs:
  7975                           	opt stack 22
  7976                           
  7977                           ;incstack = 0
  7978  00658E  0100               	movlb	0	; () banked
  7979  006590  AFC4               	btfss	(fabs@d+3)& (0+255),7,b
  7980  006592  D013               	goto	l1096
  7981                           
  7982                           ; BSR set to: 0
  7983  006594  C0C1  F0BD         	movff	fabs@d,___flneg@f1
  7984  006598  C0C2  F0BE         	movff	fabs@d+1,___flneg@f1+1
  7985  00659C  C0C3  F0BF         	movff	fabs@d+2,___flneg@f1+2
  7986  0065A0  C0C4  F0C0         	movff	fabs@d+3,___flneg@f1+3
  7987  0065A4  EC03  F033         	call	___flneg	;wreg free
  7988  0065A8  C0BD  F0C1         	movff	?___flneg,?_fabs
  7989  0065AC  C0BE  F0C2         	movff	?___flneg+1,?_fabs+1
  7990  0065B0  C0BF  F0C3         	movff	?___flneg+2,?_fabs+2
  7991  0065B4  C0C0  F0C4         	movff	?___flneg+3,?_fabs+3
  7992  0065B8  0012               	return	
  7993  0065BA                     l1096:
  7994                           
  7995                           ; BSR set to: 0
  7996  0065BA  C0C1  F0C1         	movff	fabs@d,?_fabs
  7997  0065BE  C0C2  F0C2         	movff	fabs@d+1,?_fabs+1
  7998  0065C2  C0C3  F0C3         	movff	fabs@d+2,?_fabs+2
  7999  0065C6  C0C4  F0C4         	movff	fabs@d+3,?_fabs+3
  8000  0065CA  0012               	return		;funcret
  8001  0065CC                     __end_of_fabs:
  8002                           	opt stack 0
  8003                           tblptru	equ	0xFF8
  8004                           tblptrh	equ	0xFF7
  8005                           tblptrl	equ	0xFF6
  8006                           tablat	equ	0xFF5
  8007                           postinc0	equ	0xFEE
  8008                           wreg	equ	0xFE8
  8009                           postdec1	equ	0xFE5
  8010                           fsr1l	equ	0xFE1
  8011                           indf2	equ	0xFDF
  8012                           postinc2	equ	0xFDE
  8013                           postdec2	equ	0xFDD
  8014                           fsr2h	equ	0xFDA
  8015                           fsr2l	equ	0xFD9
  8016                           status	equ	0xFD8
  8017                           
  8018 ;; *************** function ___flneg *****************
  8019 ;; Defined at:
  8020 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  8021 ;; Parameters:    Size  Location     Type
  8022 ;;  f1              4   93[BANK0 ] unsigned char 
  8023 ;; Auto vars:     Size  Location     Type
  8024 ;;		None
  8025 ;; Return value:  Size  Location     Type
  8026 ;;                  4   93[BANK0 ] unsigned char 
  8027 ;; Registers used:
  8028 ;;		wreg, status,2, status,0
  8029 ;; Tracked objects:
  8030 ;;		On entry : 0/0
  8031 ;;		On exit  : 0/0
  8032 ;;		Unchanged: 0/0
  8033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8034 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8037 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8038 ;;Total ram usage:        4 bytes
  8039 ;; Hardware stack levels used:    1
  8040 ;; Hardware stack levels required when called:    4
  8041 ;; This function calls:
  8042 ;;		Nothing
  8043 ;; This function is called by:
  8044 ;;		_park_routine
  8045 ;;		_matematica
  8046 ;;		_asin
  8047 ;;		_atan
  8048 ;;		_fabs
  8049 ;;		_sin
  8050 ;; This function uses a non-reentrant model
  8051 ;;
  8052                           
  8053                           	psect	text20
  8054  006606                     __ptext20:
  8055                           	opt stack 0
  8056  006606                     ___flneg:
  8057                           	opt stack 22
  8058                           
  8059                           ;incstack = 0
  8060  006606  0100               	movlb	0	; () banked
  8061  006608  51BD               	movf	___flneg@f1& (0+255),w,b
  8062  00660A  0100               	movlb	0	; () banked
  8063  00660C  11BE               	iorwf	(___flneg@f1+1)& (0+255),w,b
  8064  00660E  0100               	movlb	0	; () banked
  8065  006610  11BF               	iorwf	(___flneg@f1+2)& (0+255),w,b
  8066  006612  0100               	movlb	0	; () banked
  8067  006614  11C0               	iorwf	(___flneg@f1+3)& (0+255),w,b
  8068  006616  B4D8               	btfsc	status,2,c
  8069  006618  D009               	goto	l7120
  8070                           
  8071                           ; BSR set to: 0
  8072  00661A  0E00               	movlw	0
  8073  00661C  0100               	movlb	0	; () banked
  8074  00661E  1BBD               	xorwf	___flneg@f1& (0+255),f,b
  8075  006620  0E00               	movlw	0
  8076  006622  1BBE               	xorwf	(___flneg@f1+1)& (0+255),f,b
  8077  006624  0E00               	movlw	0
  8078  006626  1BBF               	xorwf	(___flneg@f1+2)& (0+255),f,b
  8079  006628  0E80               	movlw	128
  8080  00662A  1BC0               	xorwf	(___flneg@f1+3)& (0+255),f,b
  8081  00662C                     l7120:
  8082                           
  8083                           ; BSR set to: 0
  8084  00662C  C0BD  F0BD         	movff	___flneg@f1,?___flneg
  8085  006630  C0BE  F0BE         	movff	___flneg@f1+1,?___flneg+1
  8086  006634  C0BF  F0BF         	movff	___flneg@f1+2,?___flneg+2
  8087  006638  C0C0  F0C0         	movff	___flneg@f1+3,?___flneg+3
  8088  00663C  0012               	return	
  8089  00663E                     __end_of___flneg:
  8090                           	opt stack 0
  8091                           tblptru	equ	0xFF8
  8092                           tblptrh	equ	0xFF7
  8093                           tblptrl	equ	0xFF6
  8094                           tablat	equ	0xFF5
  8095                           postinc0	equ	0xFEE
  8096                           wreg	equ	0xFE8
  8097                           postdec1	equ	0xFE5
  8098                           fsr1l	equ	0xFE1
  8099                           indf2	equ	0xFDF
  8100                           postinc2	equ	0xFDE
  8101                           postdec2	equ	0xFDD
  8102                           fsr2h	equ	0xFDA
  8103                           fsr2l	equ	0xFD9
  8104                           status	equ	0xFD8
  8105                           
  8106 ;; *************** function _eval_poly *****************
  8107 ;; Defined at:
  8108 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;  x               4   93[BANK0 ] unsigned char 
  8111 ;;  d               2   97[BANK0 ] PTR const 
  8112 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
  8113 ;;  n               2   99[BANK0 ] int 
  8114 ;; Auto vars:     Size  Location     Type
  8115 ;;  res             4  105[BANK0 ] int 
  8116 ;; Return value:  Size  Location     Type
  8117 ;;                  4   93[BANK0 ] int 
  8118 ;; Registers used:
  8119 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8125 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8126 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8127 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8128 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8129 ;;Total ram usage:       16 bytes
  8130 ;; Hardware stack levels used:    1
  8131 ;; Hardware stack levels required when called:    5
  8132 ;; This function calls:
  8133 ;;		___fladd
  8134 ;;		___flmul
  8135 ;; This function is called by:
  8136 ;;		_atan
  8137 ;;		_sin
  8138 ;; This function uses a non-reentrant model
  8139 ;;
  8140                           
  8141                           	psect	text21
  8142  005E5C                     __ptext21:
  8143                           	opt stack 0
  8144  005E5C                     _eval_poly:
  8145                           	opt stack 21
  8146                           
  8147                           ; BSR set to: 0
  8148                           ;incstack = 0
  8149  005E5C  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  8150  005E60  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  8151  005E64  0100               	movlb	0	; () banked
  8152  005E66  90D8               	bcf	status,0,c
  8153  005E68  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8154  005E6A  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8155  005E6C  0100               	movlb	0	; () banked
  8156  005E6E  90D8               	bcf	status,0,c
  8157  005E70  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8158  005E72  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8159  005E74  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  8160  005E78  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  8161  005E7C  0100               	movlb	0	; () banked
  8162  005E7E  51C5               	movf	??_eval_poly& (0+255),w,b
  8163  005E80  0100               	movlb	0	; () banked
  8164  005E82  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  8165  005E84  0100               	movlb	0	; () banked
  8166  005E86  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  8167  005E88  0100               	movlb	0	; () banked
  8168  005E8A  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8169  005E8C  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  8170  005E90  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  8171  005E94                     	if	0	;tblptru may be non-zero
  8172  005E94                     	endif
  8173  005E94                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8174  005E94  0E00               	movlw	low (__mediumconst shr (0+16))
  8175  005E96  6EF8               	movwf	tblptru,c
  8176  005E98                     	endif
  8177  005E98  0009               	tblrd		*+
  8178  005E9A  CFF5 F0C9          	movff	tablat,eval_poly@res
  8179  005E9E  0009               	tblrd		*+
  8180  005EA0  CFF5 F0CA          	movff	tablat,eval_poly@res+1
  8181  005EA4  0009               	tblrd		*+
  8182  005EA6  CFF5 F0CB          	movff	tablat,eval_poly@res+2
  8183  005EAA  000A               	tblrd		*-
  8184  005EAC  CFF5 F0CC          	movff	tablat,eval_poly@res+3
  8185  005EB0  D052               	goto	l7378
  8186  005EB2                     l7376:
  8187                           
  8188                           ; BSR set to: 0
  8189  005EB2  C0C9  F094         	movff	eval_poly@res,___flmul@a
  8190  005EB6  C0CA  F095         	movff	eval_poly@res+1,___flmul@a+1
  8191  005EBA  C0CB  F096         	movff	eval_poly@res+2,___flmul@a+2
  8192  005EBE  C0CC  F097         	movff	eval_poly@res+3,___flmul@a+3
  8193  005EC2  C0BD  F090         	movff	eval_poly@x,___flmul@b
  8194  005EC6  C0BE  F091         	movff	eval_poly@x+1,___flmul@b+1
  8195  005ECA  C0BF  F092         	movff	eval_poly@x+2,___flmul@b+2
  8196  005ECE  C0C0  F093         	movff	eval_poly@x+3,___flmul@b+3
  8197  005ED2  ECD9  F01A         	call	___flmul	;wreg free
  8198  005ED6  C090  F0A9         	movff	?___flmul,___fladd@b
  8199  005EDA  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  8200  005EDE  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  8201  005EE2  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  8202  005EE6  0100               	movlb	0	; () banked
  8203  005EE8  07C3               	decf	eval_poly@n& (0+255),f,b
  8204  005EEA  A0D8               	btfss	status,0,c
  8205  005EEC  07C4               	decf	(eval_poly@n+1)& (0+255),f,b
  8206  005EEE  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  8207  005EF2  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  8208  005EF6  0100               	movlb	0	; () banked
  8209  005EF8  90D8               	bcf	status,0,c
  8210  005EFA  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8211  005EFC  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8212  005EFE  0100               	movlb	0	; () banked
  8213  005F00  90D8               	bcf	status,0,c
  8214  005F02  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8215  005F04  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8216  005F06  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  8217  005F0A  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  8218  005F0E  0100               	movlb	0	; () banked
  8219  005F10  51C5               	movf	??_eval_poly& (0+255),w,b
  8220  005F12  0100               	movlb	0	; () banked
  8221  005F14  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  8222  005F16  0100               	movlb	0	; () banked
  8223  005F18  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  8224  005F1A  0100               	movlb	0	; () banked
  8225  005F1C  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8226  005F1E  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  8227  005F22  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  8228  005F26                     	if	0	;tblptru may be non-zero
  8229  005F26                     	endif
  8230  005F26                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8231  005F26  0E00               	movlw	low (__mediumconst shr (0+16))
  8232  005F28  6EF8               	movwf	tblptru,c
  8233  005F2A                     	endif
  8234  005F2A  0009               	tblrd		*+
  8235  005F2C  CFF5 F0AD          	movff	tablat,___fladd@a
  8236  005F30  0009               	tblrd		*+
  8237  005F32  CFF5 F0AE          	movff	tablat,___fladd@a+1
  8238  005F36  0009               	tblrd		*+
  8239  005F38  CFF5 F0AF          	movff	tablat,___fladd@a+2
  8240  005F3C  000A               	tblrd		*-
  8241  005F3E  CFF5 F0B0          	movff	tablat,___fladd@a+3
  8242  005F42  EC85  F018         	call	___fladd	;wreg free
  8243  005F46  C0A9  F0C9         	movff	?___fladd,eval_poly@res
  8244  005F4A  C0AA  F0CA         	movff	?___fladd+1,eval_poly@res+1
  8245  005F4E  C0AB  F0CB         	movff	?___fladd+2,eval_poly@res+2
  8246  005F52  C0AC  F0CC         	movff	?___fladd+3,eval_poly@res+3
  8247  005F56                     l7378:
  8248  005F56  0100               	movlb	0	; () banked
  8249  005F58  51C3               	movf	eval_poly@n& (0+255),w,b
  8250  005F5A  0100               	movlb	0	; () banked
  8251  005F5C  11C4               	iorwf	(eval_poly@n+1)& (0+255),w,b
  8252  005F5E  A4D8               	btfss	status,2,c
  8253  005F60  D7A8               	goto	l7376
  8254                           
  8255                           ; BSR set to: 0
  8256  005F62  C0C9  F0BD         	movff	eval_poly@res,?_eval_poly
  8257  005F66  C0CA  F0BE         	movff	eval_poly@res+1,?_eval_poly+1
  8258  005F6A  C0CB  F0BF         	movff	eval_poly@res+2,?_eval_poly+2
  8259  005F6E  C0CC  F0C0         	movff	eval_poly@res+3,?_eval_poly+3
  8260                           
  8261                           ; BSR set to: 0
  8262  005F72  0012               	return		;funcret
  8263  005F74                     __end_of_eval_poly:
  8264                           	opt stack 0
  8265                           tblptru	equ	0xFF8
  8266                           tblptrh	equ	0xFF7
  8267                           tblptrl	equ	0xFF6
  8268                           tablat	equ	0xFF5
  8269                           postinc0	equ	0xFEE
  8270                           wreg	equ	0xFE8
  8271                           postdec1	equ	0xFE5
  8272                           fsr1l	equ	0xFE1
  8273                           indf2	equ	0xFDF
  8274                           postinc2	equ	0xFDE
  8275                           postdec2	equ	0xFDD
  8276                           fsr2h	equ	0xFDA
  8277                           fsr2l	equ	0xFD9
  8278                           status	equ	0xFD8
  8279                           
  8280 ;; *************** function ___flmul *****************
  8281 ;; Defined at:
  8282 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  b               4   48[BANK0 ] int 
  8285 ;;  a               4   52[BANK0 ] int 
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;  prod            4   67[BANK0 ] struct .
  8288 ;;  grs             4   62[BANK0 ] unsigned long 
  8289 ;;  temp            2   71[BANK0 ] struct .
  8290 ;;  bexp            1   66[BANK0 ] unsigned char 
  8291 ;;  aexp            1   61[BANK0 ] unsigned char 
  8292 ;;  sign            1   60[BANK0 ] unsigned char 
  8293 ;; Return value:  Size  Location     Type
  8294 ;;                  4   48[BANK0 ] unsigned char 
  8295 ;; Registers used:
  8296 ;;		wreg, status,2, status,0, prodl, prodh
  8297 ;; Tracked objects:
  8298 ;;		On entry : 0/0
  8299 ;;		On exit  : 0/0
  8300 ;;		Unchanged: 0/0
  8301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8302 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8303 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8304 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8305 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8306 ;;Total ram usage:       25 bytes
  8307 ;; Hardware stack levels used:    1
  8308 ;; Hardware stack levels required when called:    4
  8309 ;; This function calls:
  8310 ;;		Nothing
  8311 ;; This function is called by:
  8312 ;;		_parallelo
  8313 ;;		_matematica
  8314 ;;		_asin
  8315 ;;		_atan
  8316 ;;		_eval_poly
  8317 ;;		_sin
  8318 ;; This function uses a non-reentrant model
  8319 ;;
  8320                           
  8321                           	psect	text22
  8322  0035B2                     __ptext22:
  8323                           	opt stack 0
  8324  0035B2                     ___flmul:
  8325                           	opt stack 21
  8326                           
  8327                           ; BSR set to: 0
  8328                           ;incstack = 0
  8329  0035B2  0100               	movlb	0	; () banked
  8330  0035B4  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8331  0035B6  0B80               	andlw	128
  8332  0035B8  0100               	movlb	0	; () banked
  8333  0035BA  6F9C               	movwf	___flmul@sign& (0+255),b
  8334  0035BC  0100               	movlb	0	; () banked
  8335  0035BE  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8336  0035C0  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  8337  0035C2  0100               	movlb	0	; () banked
  8338  0035C4  6FA2               	movwf	___flmul@bexp& (0+255),b
  8339                           
  8340                           ; BSR set to: 0
  8341  0035C6  0100               	movlb	0	; () banked
  8342  0035C8  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  8343  0035CA  D002               	goto	l6970
  8344                           
  8345                           ; BSR set to: 0
  8346  0035CC  0100               	movlb	0	; () banked
  8347  0035CE  81A2               	bsf	___flmul@bexp& (0+255),0,b
  8348  0035D0                     l6970:
  8349                           
  8350                           ; BSR set to: 0
  8351  0035D0  0100               	movlb	0	; () banked
  8352  0035D2  51A2               	movf	___flmul@bexp& (0+255),w,b
  8353  0035D4  0100               	movlb	0	; () banked
  8354  0035D6  B4D8               	btfsc	status,2,c
  8355  0035D8  D010               	goto	l6978
  8356                           
  8357                           ; BSR set to: 0
  8358  0035DA  0100               	movlb	0	; () banked
  8359  0035DC  29A2               	incf	___flmul@bexp& (0+255),w,b
  8360  0035DE  A4D8               	btfss	status,2,c
  8361  0035E0  D009               	goto	l6976
  8362                           
  8363                           ; BSR set to: 0
  8364  0035E2  0E00               	movlw	0
  8365  0035E4  0100               	movlb	0	; () banked
  8366  0035E6  6F90               	movwf	___flmul@b& (0+255),b
  8367  0035E8  0E00               	movlw	0
  8368  0035EA  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8369  0035EC  0E00               	movlw	0
  8370  0035EE  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8371  0035F0  0E00               	movlw	0
  8372  0035F2  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8373  0035F4                     l6976:
  8374                           
  8375                           ; BSR set to: 0
  8376  0035F4  0100               	movlb	0	; () banked
  8377  0035F6  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  8378  0035F8  D009               	goto	l6980
  8379  0035FA                     l6978:
  8380                           
  8381                           ; BSR set to: 0
  8382  0035FA  0E00               	movlw	0
  8383  0035FC  0100               	movlb	0	; () banked
  8384  0035FE  6F90               	movwf	___flmul@b& (0+255),b
  8385  003600  0E00               	movlw	0
  8386  003602  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8387  003604  0E00               	movlw	0
  8388  003606  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8389  003608  0E00               	movlw	0
  8390  00360A  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8391  00360C                     l6980:
  8392                           
  8393                           ; BSR set to: 0
  8394  00360C  0100               	movlb	0	; () banked
  8395  00360E  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8396  003610  0B80               	andlw	128
  8397  003612  0100               	movlb	0	; () banked
  8398  003614  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  8399                           
  8400                           ; BSR set to: 0
  8401  003616  0100               	movlb	0	; () banked
  8402  003618  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8403  00361A  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  8404  00361C  0100               	movlb	0	; () banked
  8405  00361E  6F9D               	movwf	___flmul@aexp& (0+255),b
  8406                           
  8407                           ; BSR set to: 0
  8408  003620  0100               	movlb	0	; () banked
  8409  003622  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  8410  003624  D002               	goto	l6988
  8411                           
  8412                           ; BSR set to: 0
  8413  003626  0100               	movlb	0	; () banked
  8414  003628  819D               	bsf	___flmul@aexp& (0+255),0,b
  8415  00362A                     l6988:
  8416                           
  8417                           ; BSR set to: 0
  8418  00362A  0100               	movlb	0	; () banked
  8419  00362C  519D               	movf	___flmul@aexp& (0+255),w,b
  8420  00362E  0100               	movlb	0	; () banked
  8421  003630  B4D8               	btfsc	status,2,c
  8422  003632  D010               	goto	l6996
  8423                           
  8424                           ; BSR set to: 0
  8425  003634  0100               	movlb	0	; () banked
  8426  003636  299D               	incf	___flmul@aexp& (0+255),w,b
  8427  003638  A4D8               	btfss	status,2,c
  8428  00363A  D009               	goto	l6994
  8429                           
  8430                           ; BSR set to: 0
  8431  00363C  0E00               	movlw	0
  8432  00363E  0100               	movlb	0	; () banked
  8433  003640  6F94               	movwf	___flmul@a& (0+255),b
  8434  003642  0E00               	movlw	0
  8435  003644  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8436  003646  0E00               	movlw	0
  8437  003648  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8438  00364A  0E00               	movlw	0
  8439  00364C  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8440  00364E                     l6994:
  8441                           
  8442                           ; BSR set to: 0
  8443  00364E  0100               	movlb	0	; () banked
  8444  003650  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  8445  003652  D009               	goto	l1441
  8446  003654                     l6996:
  8447                           
  8448                           ; BSR set to: 0
  8449  003654  0E00               	movlw	0
  8450  003656  0100               	movlb	0	; () banked
  8451  003658  6F94               	movwf	___flmul@a& (0+255),b
  8452  00365A  0E00               	movlw	0
  8453  00365C  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8454  00365E  0E00               	movlw	0
  8455  003660  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8456  003662  0E00               	movlw	0
  8457  003664  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8458  003666                     l1441:
  8459                           
  8460                           ; BSR set to: 0
  8461  003666  0100               	movlb	0	; () banked
  8462  003668  519D               	movf	___flmul@aexp& (0+255),w,b
  8463  00366A  0100               	movlb	0	; () banked
  8464  00366C  B4D8               	btfsc	status,2,c
  8465  00366E  D005               	goto	l7000
  8466                           
  8467                           ; BSR set to: 0
  8468  003670  0100               	movlb	0	; () banked
  8469  003672  51A2               	movf	___flmul@bexp& (0+255),w,b
  8470  003674  0100               	movlb	0	; () banked
  8471  003676  A4D8               	btfss	status,2,c
  8472  003678  D00A               	goto	l7004
  8473  00367A                     l7000:
  8474                           
  8475                           ; BSR set to: 0
  8476  00367A  0E00               	movlw	0
  8477  00367C  0100               	movlb	0	; () banked
  8478  00367E  6F90               	movwf	?___flmul& (0+255),b
  8479  003680  0E00               	movlw	0
  8480  003682  6F91               	movwf	(?___flmul+1)& (0+255),b
  8481  003684  0E00               	movlw	0
  8482  003686  6F92               	movwf	(?___flmul+2)& (0+255),b
  8483  003688  0E00               	movlw	0
  8484  00368A  6F93               	movwf	(?___flmul+3)& (0+255),b
  8485                           
  8486                           ; BSR set to: 0
  8487  00368C  0012               	return	
  8488  00368E                     l7004:
  8489                           
  8490                           ; BSR set to: 0
  8491  00368E  0100               	movlb	0	; () banked
  8492  003690  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8493  003692  0100               	movlb	0	; () banked
  8494  003694  0390               	mulwf	___flmul@b& (0+255),b
  8495  003696  CFF3 F0A7          	movff	prodl,___flmul@temp
  8496  00369A  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8497                           
  8498                           ; BSR set to: 0
  8499  00369E  0100               	movlb	0	; () banked
  8500  0036A0  51A7               	movf	___flmul@temp& (0+255),w,b
  8501  0036A2  0100               	movlb	0	; () banked
  8502  0036A4  6F9E               	movwf	___flmul@grs& (0+255),b
  8503  0036A6  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  8504  0036A8  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  8505  0036AA  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  8506                           
  8507                           ; BSR set to: 0
  8508  0036AC  0100               	movlb	0	; () banked
  8509  0036AE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8510  0036B0  0100               	movlb	0	; () banked
  8511  0036B2  6FA3               	movwf	___flmul@prod& (0+255),b
  8512  0036B4  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  8513  0036B6  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  8514  0036B8  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  8515  0036BA  0100               	movlb	0	; () banked
  8516  0036BC  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8517  0036BE  0100               	movlb	0	; () banked
  8518  0036C0  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8519  0036C2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8520  0036C6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8521                           
  8522                           ; BSR set to: 0
  8523  0036CA  0100               	movlb	0	; () banked
  8524  0036CC  51A7               	movf	___flmul@temp& (0+255),w,b
  8525  0036CE  0100               	movlb	0	; () banked
  8526  0036D0  279E               	addwf	___flmul@grs& (0+255),f,b
  8527  0036D2  0E00               	movlw	0
  8528  0036D4  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8529  0036D6  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8530  0036D8  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8531                           
  8532                           ; BSR set to: 0
  8533  0036DA  0100               	movlb	0	; () banked
  8534  0036DC  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8535  0036DE  0100               	movlb	0	; () banked
  8536  0036E0  27A3               	addwf	___flmul@prod& (0+255),f,b
  8537  0036E2  0E00               	movlw	0
  8538  0036E4  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8539  0036E6  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8540  0036E8  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8541  0036EA  0100               	movlb	0	; () banked
  8542  0036EC  5194               	movf	___flmul@a& (0+255),w,b
  8543  0036EE  0100               	movlb	0	; () banked
  8544  0036F0  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8545  0036F2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8546  0036F6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8547                           
  8548                           ; BSR set to: 0
  8549  0036FA  0100               	movlb	0	; () banked
  8550  0036FC  51A7               	movf	___flmul@temp& (0+255),w,b
  8551  0036FE  0100               	movlb	0	; () banked
  8552  003700  279E               	addwf	___flmul@grs& (0+255),f,b
  8553  003702  0E00               	movlw	0
  8554  003704  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8555  003706  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8556  003708  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8557                           
  8558                           ; BSR set to: 0
  8559  00370A  0100               	movlb	0	; () banked
  8560  00370C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8561  00370E  0100               	movlb	0	; () banked
  8562  003710  27A3               	addwf	___flmul@prod& (0+255),f,b
  8563  003712  0E00               	movlw	0
  8564  003714  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8565  003716  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8566  003718  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8567                           
  8568                           ; BSR set to: 0
  8569  00371A  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8570  00371E  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8571  003722  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8572  003726  0100               	movlb	0	; () banked
  8573  003728  6B9E               	clrf	___flmul@grs& (0+255),b
  8574                           
  8575                           ; BSR set to: 0
  8576  00372A  0100               	movlb	0	; () banked
  8577  00372C  5194               	movf	___flmul@a& (0+255),w,b
  8578  00372E  0100               	movlb	0	; () banked
  8579  003730  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8580  003732  CFF3 F0A7          	movff	prodl,___flmul@temp
  8581  003736  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8582                           
  8583                           ; BSR set to: 0
  8584  00373A  0100               	movlb	0	; () banked
  8585  00373C  51A7               	movf	___flmul@temp& (0+255),w,b
  8586  00373E  0100               	movlb	0	; () banked
  8587  003740  279E               	addwf	___flmul@grs& (0+255),f,b
  8588  003742  0100               	movlb	0	; () banked
  8589  003744  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8590  003746  0100               	movlb	0	; () banked
  8591  003748  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8592  00374A  0E00               	movlw	0
  8593  00374C  0100               	movlb	0	; () banked
  8594  00374E  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8595  003750  0E00               	movlw	0
  8596  003752  0100               	movlb	0	; () banked
  8597  003754  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8598                           
  8599                           ; BSR set to: 0
  8600  003756  0100               	movlb	0	; () banked
  8601  003758  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8602  00375A  0100               	movlb	0	; () banked
  8603  00375C  0390               	mulwf	___flmul@b& (0+255),b
  8604  00375E  CFF3 F0A7          	movff	prodl,___flmul@temp
  8605  003762  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8606                           
  8607                           ; BSR set to: 0
  8608  003766  0100               	movlb	0	; () banked
  8609  003768  51A7               	movf	___flmul@temp& (0+255),w,b
  8610  00376A  0100               	movlb	0	; () banked
  8611  00376C  279E               	addwf	___flmul@grs& (0+255),f,b
  8612  00376E  0100               	movlb	0	; () banked
  8613  003770  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8614  003772  0100               	movlb	0	; () banked
  8615  003774  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8616  003776  0E00               	movlw	0
  8617  003778  0100               	movlb	0	; () banked
  8618  00377A  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8619  00377C  0E00               	movlw	0
  8620  00377E  0100               	movlb	0	; () banked
  8621  003780  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8622                           
  8623                           ; BSR set to: 0
  8624  003782  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8625  003786  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8626  00378A  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8627  00378E  0100               	movlb	0	; () banked
  8628  003790  6B9E               	clrf	___flmul@grs& (0+255),b
  8629  003792  0100               	movlb	0	; () banked
  8630  003794  5194               	movf	___flmul@a& (0+255),w,b
  8631  003796  0100               	movlb	0	; () banked
  8632  003798  0390               	mulwf	___flmul@b& (0+255),b
  8633  00379A  CFF3 F0A7          	movff	prodl,___flmul@temp
  8634  00379E  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8635                           
  8636                           ; BSR set to: 0
  8637  0037A2  0100               	movlb	0	; () banked
  8638  0037A4  51A7               	movf	___flmul@temp& (0+255),w,b
  8639  0037A6  0100               	movlb	0	; () banked
  8640  0037A8  279E               	addwf	___flmul@grs& (0+255),f,b
  8641  0037AA  0100               	movlb	0	; () banked
  8642  0037AC  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8643  0037AE  0100               	movlb	0	; () banked
  8644  0037B0  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8645  0037B2  0E00               	movlw	0
  8646  0037B4  0100               	movlb	0	; () banked
  8647  0037B6  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8648  0037B8  0E00               	movlw	0
  8649  0037BA  0100               	movlb	0	; () banked
  8650  0037BC  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8651                           
  8652                           ; BSR set to: 0
  8653  0037BE  0100               	movlb	0	; () banked
  8654  0037C0  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8655  0037C2  0100               	movlb	0	; () banked
  8656  0037C4  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8657  0037C6  CFF3 F0A7          	movff	prodl,___flmul@temp
  8658  0037CA  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8659  0037CE  0100               	movlb	0	; () banked
  8660  0037D0  51A7               	movf	___flmul@temp& (0+255),w,b
  8661  0037D2  0100               	movlb	0	; () banked
  8662  0037D4  27A3               	addwf	___flmul@prod& (0+255),f,b
  8663  0037D6  0100               	movlb	0	; () banked
  8664  0037D8  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8665  0037DA  0100               	movlb	0	; () banked
  8666  0037DC  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8667  0037DE  0E00               	movlw	0
  8668  0037E0  0100               	movlb	0	; () banked
  8669  0037E2  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8670  0037E4  0E00               	movlw	0
  8671  0037E6  0100               	movlb	0	; () banked
  8672  0037E8  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8673                           
  8674                           ; BSR set to: 0
  8675  0037EA  0100               	movlb	0	; () banked
  8676  0037EC  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8677  0037EE  0100               	movlb	0	; () banked
  8678  0037F0  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8679  0037F2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8680  0037F6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8681                           
  8682                           ; BSR set to: 0
  8683  0037FA  0100               	movlb	0	; () banked
  8684  0037FC  51A7               	movf	___flmul@temp& (0+255),w,b
  8685  0037FE  0100               	movlb	0	; () banked
  8686  003800  27A3               	addwf	___flmul@prod& (0+255),f,b
  8687  003802  0100               	movlb	0	; () banked
  8688  003804  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8689  003806  0100               	movlb	0	; () banked
  8690  003808  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8691  00380A  0E00               	movlw	0
  8692  00380C  0100               	movlb	0	; () banked
  8693  00380E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8694  003810  0E00               	movlw	0
  8695  003812  0100               	movlb	0	; () banked
  8696  003814  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8697  003816  0100               	movlb	0	; () banked
  8698  003818  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8699  00381A  0100               	movlb	0	; () banked
  8700  00381C  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8701  00381E  CFF3 F0A7          	movff	prodl,___flmul@temp
  8702  003822  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8703                           
  8704                           ; BSR set to: 0
  8705  003826  0100               	movlb	0	; () banked
  8706  003828  51A7               	movf	___flmul@temp& (0+255),w,b
  8707  00382A  0100               	movlb	0	; () banked
  8708  00382C  6F98               	movwf	??___flmul& (0+255),b
  8709  00382E  0100               	movlb	0	; () banked
  8710  003830  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8711  003832  0100               	movlb	0	; () banked
  8712  003834  6F99               	movwf	(??___flmul+1)& (0+255),b
  8713  003836  0100               	movlb	0	; () banked
  8714  003838  6B9A               	clrf	(??___flmul+2)& (0+255),b
  8715  00383A  0100               	movlb	0	; () banked
  8716  00383C  6B9B               	clrf	(??___flmul+3)& (0+255),b
  8717  00383E  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  8718  003842  C099  F09A         	movff	??___flmul+1,??___flmul+2
  8719  003846  C098  F099         	movff	??___flmul,??___flmul+1
  8720  00384A  0100               	movlb	0	; () banked
  8721  00384C  6B98               	clrf	??___flmul& (0+255),b
  8722  00384E  0100               	movlb	0	; () banked
  8723  003850  5198               	movf	??___flmul& (0+255),w,b
  8724  003852  0100               	movlb	0	; () banked
  8725  003854  27A3               	addwf	___flmul@prod& (0+255),f,b
  8726  003856  0100               	movlb	0	; () banked
  8727  003858  5199               	movf	(??___flmul+1)& (0+255),w,b
  8728  00385A  0100               	movlb	0	; () banked
  8729  00385C  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8730  00385E  0100               	movlb	0	; () banked
  8731  003860  519A               	movf	(??___flmul+2)& (0+255),w,b
  8732  003862  0100               	movlb	0	; () banked
  8733  003864  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8734  003866  0100               	movlb	0	; () banked
  8735  003868  519B               	movf	(??___flmul+3)& (0+255),w,b
  8736  00386A  0100               	movlb	0	; () banked
  8737  00386C  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8738                           
  8739                           ; BSR set to: 0
  8740  00386E  C09E  F098         	movff	___flmul@grs,??___flmul
  8741  003872  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  8742  003876  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  8743  00387A  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  8744  00387E  0E19               	movlw	25
  8745  003880  D006               	goto	u9120
  8746  003882                     u9125:
  8747  003882  0100               	movlb	0	; () banked
  8748  003884  90D8               	bcf	status,0,c
  8749  003886  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8750  003888  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8751  00388A  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8752  00388C  3398               	rrcf	??___flmul& (0+255),f,b
  8753  00388E                     u9120:
  8754  00388E  2EE8               	decfsz	wreg,f,c
  8755  003890  D7F8               	goto	u9125
  8756  003892  0100               	movlb	0	; () banked
  8757  003894  5198               	movf	??___flmul& (0+255),w,b
  8758  003896  0100               	movlb	0	; () banked
  8759  003898  27A3               	addwf	___flmul@prod& (0+255),f,b
  8760  00389A  0100               	movlb	0	; () banked
  8761  00389C  5199               	movf	(??___flmul+1)& (0+255),w,b
  8762  00389E  0100               	movlb	0	; () banked
  8763  0038A0  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8764  0038A2  0100               	movlb	0	; () banked
  8765  0038A4  519A               	movf	(??___flmul+2)& (0+255),w,b
  8766  0038A6  0100               	movlb	0	; () banked
  8767  0038A8  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8768  0038AA  0100               	movlb	0	; () banked
  8769  0038AC  519B               	movf	(??___flmul+3)& (0+255),w,b
  8770  0038AE  0100               	movlb	0	; () banked
  8771  0038B0  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8772                           
  8773                           ; BSR set to: 0
  8774  0038B2  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8775  0038B6  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8776  0038BA  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8777  0038BE  0100               	movlb	0	; () banked
  8778  0038C0  6B9E               	clrf	___flmul@grs& (0+255),b
  8779                           
  8780                           ; BSR set to: 0
  8781  0038C2  0100               	movlb	0	; () banked
  8782  0038C4  519D               	movf	___flmul@aexp& (0+255),w,b
  8783  0038C6  C0A2  F098         	movff	___flmul@bexp,??___flmul
  8784  0038CA  0100               	movlb	0	; () banked
  8785  0038CC  6B99               	clrf	(??___flmul+1)& (0+255),b
  8786  0038CE  0100               	movlb	0	; () banked
  8787  0038D0  2798               	addwf	??___flmul& (0+255),f,b
  8788  0038D2  0E00               	movlw	0
  8789  0038D4  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  8790  0038D6  0E82               	movlw	130
  8791  0038D8  0100               	movlb	0	; () banked
  8792  0038DA  2598               	addwf	??___flmul& (0+255),w,b
  8793  0038DC  0100               	movlb	0	; () banked
  8794  0038DE  6FA7               	movwf	___flmul@temp& (0+255),b
  8795  0038E0  0EFF               	movlw	255
  8796  0038E2  0100               	movlb	0	; () banked
  8797  0038E4  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  8798  0038E6  0100               	movlb	0	; () banked
  8799  0038E8  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  8800  0038EA  D015               	goto	l7052
  8801  0038EC                     l7046:
  8802                           
  8803                           ; BSR set to: 0
  8804  0038EC  0100               	movlb	0	; () banked
  8805  0038EE  90D8               	bcf	status,0,c
  8806  0038F0  37A3               	rlcf	___flmul@prod& (0+255),f,b
  8807  0038F2  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8808  0038F4  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8809  0038F6  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8810                           
  8811                           ; BSR set to: 0
  8812  0038F8  0100               	movlb	0	; () banked
  8813  0038FA  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8814  0038FC  D002               	goto	l1448
  8815                           
  8816                           ; BSR set to: 0
  8817  0038FE  0100               	movlb	0	; () banked
  8818  003900  81A3               	bsf	___flmul@prod& (0+255),0,b
  8819  003902                     l1448:
  8820                           
  8821                           ; BSR set to: 0
  8822  003902  0100               	movlb	0	; () banked
  8823  003904  90D8               	bcf	status,0,c
  8824  003906  379E               	rlcf	___flmul@grs& (0+255),f,b
  8825  003908  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8826  00390A  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8827  00390C  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8828  00390E  0100               	movlb	0	; () banked
  8829  003910  07A7               	decf	___flmul@temp& (0+255),f,b
  8830  003912  A0D8               	btfss	status,0,c
  8831  003914  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  8832  003916                     l7052:
  8833                           
  8834                           ; BSR set to: 0
  8835  003916  0100               	movlb	0	; () banked
  8836  003918  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  8837  00391A  D7E8               	goto	l7046
  8838                           
  8839                           ; BSR set to: 0
  8840                           
  8841                           ; BSR set to: 0
  8842  00391C  0E00               	movlw	0
  8843  00391E  0100               	movlb	0	; () banked
  8844  003920  6F9D               	movwf	___flmul@aexp& (0+255),b
  8845                           
  8846                           ; BSR set to: 0
  8847  003922  0100               	movlb	0	; () banked
  8848  003924  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8849  003926  D024               	goto	l1450
  8850                           
  8851                           ; BSR set to: 0
  8852  003928  0EFF               	movlw	255
  8853  00392A  0100               	movlb	0	; () banked
  8854  00392C  159E               	andwf	___flmul@grs& (0+255),w,b
  8855  00392E  0100               	movlb	0	; () banked
  8856  003930  6F98               	movwf	??___flmul& (0+255),b
  8857  003932  0EFF               	movlw	255
  8858  003934  0100               	movlb	0	; () banked
  8859  003936  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  8860  003938  0100               	movlb	0	; () banked
  8861  00393A  6F99               	movwf	(??___flmul+1)& (0+255),b
  8862  00393C  0EFF               	movlw	255
  8863  00393E  0100               	movlb	0	; () banked
  8864  003940  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  8865  003942  0100               	movlb	0	; () banked
  8866  003944  6F9A               	movwf	(??___flmul+2)& (0+255),b
  8867  003946  0E7F               	movlw	127
  8868  003948  0100               	movlb	0	; () banked
  8869  00394A  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  8870  00394C  0100               	movlb	0	; () banked
  8871  00394E  6F9B               	movwf	(??___flmul+3)& (0+255),b
  8872  003950  0100               	movlb	0	; () banked
  8873  003952  5198               	movf	??___flmul& (0+255),w,b
  8874  003954  0100               	movlb	0	; () banked
  8875  003956  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  8876  003958  0100               	movlb	0	; () banked
  8877  00395A  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  8878  00395C  0100               	movlb	0	; () banked
  8879  00395E  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  8880  003960  A4D8               	btfss	status,2,c
  8881  003962  D003               	goto	l7062
  8882                           
  8883                           ; BSR set to: 0
  8884                           
  8885                           ; BSR set to: 0
  8886  003964  0100               	movlb	0	; () banked
  8887  003966  A1A3               	btfss	___flmul@prod& (0+255),0,b
  8888  003968  D003               	goto	l1450
  8889  00396A                     l7062:
  8890                           
  8891                           ; BSR set to: 0
  8892  00396A  0E01               	movlw	1
  8893  00396C  0100               	movlb	0	; () banked
  8894  00396E  6F9D               	movwf	___flmul@aexp& (0+255),b
  8895  003970                     l1450:
  8896                           
  8897                           ; BSR set to: 0
  8898  003970  0100               	movlb	0	; () banked
  8899  003972  519D               	movf	___flmul@aexp& (0+255),w,b
  8900  003974  0100               	movlb	0	; () banked
  8901  003976  B4D8               	btfsc	status,2,c
  8902  003978  D023               	goto	l7072
  8903                           
  8904                           ; BSR set to: 0
  8905  00397A  0E01               	movlw	1
  8906  00397C  0100               	movlb	0	; () banked
  8907  00397E  27A3               	addwf	___flmul@prod& (0+255),f,b
  8908  003980  0E00               	movlw	0
  8909  003982  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8910  003984  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8911  003986  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8912                           
  8913                           ; BSR set to: 0
  8914  003988  0100               	movlb	0	; () banked
  8915  00398A  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  8916  00398C  D019               	goto	l7072
  8917                           
  8918                           ; BSR set to: 0
  8919  00398E  C0A3  F098         	movff	___flmul@prod,??___flmul
  8920  003992  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  8921  003996  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  8922  00399A  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  8923  00399E  0100               	movlb	0	; () banked
  8924  0039A0  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  8925  0039A2  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8926  0039A4  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8927  0039A6  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8928  0039A8  3398               	rrcf	??___flmul& (0+255),f,b
  8929  0039AA  C098  F0A3         	movff	??___flmul,___flmul@prod
  8930  0039AE  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  8931  0039B2  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  8932  0039B6  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  8933                           
  8934                           ; BSR set to: 0
  8935  0039BA  0100               	movlb	0	; () banked
  8936  0039BC  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  8937  0039BE  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  8938  0039C0                     l7072:
  8939                           
  8940                           ; BSR set to: 0
  8941  0039C0  0100               	movlb	0	; () banked
  8942  0039C2  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8943  0039C4  D010               	goto	l7076
  8944  0039C6  0100               	movlb	0	; () banked
  8945  0039C8  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8946  0039CA  E104               	bnz	u9200
  8947  0039CC  0100               	movlb	0	; () banked
  8948  0039CE  29A7               	incf	___flmul@temp& (0+255),w,b
  8949  0039D0  A0D8               	btfss	status,0,c
  8950  0039D2  D009               	goto	l7076
  8951  0039D4                     u9200:
  8952                           
  8953                           ; BSR set to: 0
  8954  0039D4  0E00               	movlw	0
  8955  0039D6  0100               	movlb	0	; () banked
  8956  0039D8  6FA3               	movwf	___flmul@prod& (0+255),b
  8957  0039DA  0E00               	movlw	0
  8958  0039DC  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8959  0039DE  0E80               	movlw	128
  8960  0039E0  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8961  0039E2  0E7F               	movlw	127
  8962  0039E4  D02B               	goto	L2
  8963  0039E6                     l7076:
  8964                           
  8965                           ; BSR set to: 0
  8966  0039E6  0100               	movlb	0	; () banked
  8967  0039E8  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8968  0039EA  D007               	goto	l7078
  8969  0039EC  0100               	movlb	0	; () banked
  8970  0039EE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8971  0039F0  E111               	bnz	l1458
  8972  0039F2  0100               	movlb	0	; () banked
  8973  0039F4  05A7               	decf	___flmul@temp& (0+255),w,b
  8974  0039F6  B0D8               	btfsc	status,0,c
  8975  0039F8  D00D               	goto	l1458
  8976  0039FA                     l7078:
  8977                           
  8978                           ; BSR set to: 0
  8979  0039FA  0E00               	movlw	0
  8980  0039FC  0100               	movlb	0	; () banked
  8981  0039FE  6FA3               	movwf	___flmul@prod& (0+255),b
  8982  003A00  0E00               	movlw	0
  8983  003A02  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8984  003A04  0E00               	movlw	0
  8985  003A06  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8986  003A08  0E00               	movlw	0
  8987  003A0A  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8988  003A0C  0E00               	movlw	0
  8989  003A0E  0100               	movlb	0	; () banked
  8990  003A10  6F9C               	movwf	___flmul@sign& (0+255),b
  8991  003A12  D015               	goto	l7088
  8992  003A14                     l1458:
  8993                           
  8994                           ; BSR set to: 0
  8995  003A14  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  8996                           
  8997                           ; BSR set to: 0
  8998  003A18  0EFF               	movlw	255
  8999  003A1A  0100               	movlb	0	; () banked
  9000  003A1C  17A3               	andwf	___flmul@prod& (0+255),f,b
  9001  003A1E  0EFF               	movlw	255
  9002  003A20  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  9003  003A22  0E7F               	movlw	127
  9004  003A24  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  9005  003A26  0E00               	movlw	0
  9006  003A28  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  9007                           
  9008                           ; BSR set to: 0
  9009  003A2A  0100               	movlb	0	; () banked
  9010  003A2C  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  9011  003A2E  D002               	goto	l7086
  9012                           
  9013                           ; BSR set to: 0
  9014  003A30  0100               	movlb	0	; () banked
  9015  003A32  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  9016  003A34                     l7086:
  9017                           
  9018                           ; BSR set to: 0
  9019  003A34  0100               	movlb	0	; () banked
  9020  003A36  90D8               	bcf	status,0,c
  9021  003A38  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  9022  003A3A  0100               	movlb	0	; () banked
  9023  003A3C                     L2:
  9024  003A3C  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  9025  003A3E                     l7088:
  9026                           
  9027                           ; BSR set to: 0
  9028  003A3E  0100               	movlb	0	; () banked
  9029  003A40  519C               	movf	___flmul@sign& (0+255),w,b
  9030  003A42  0100               	movlb	0	; () banked
  9031  003A44  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9032                           
  9033                           ; BSR set to: 0
  9034  003A46  C0A3  F090         	movff	___flmul@prod,?___flmul
  9035  003A4A  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  9036  003A4E  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  9037  003A52  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  9038  003A56  0012               	return	
  9039  003A58                     __end_of___flmul:
  9040                           	opt stack 0
  9041                           tblptru	equ	0xFF8
  9042                           tblptrh	equ	0xFF7
  9043                           tblptrl	equ	0xFF6
  9044                           tablat	equ	0xFF5
  9045                           prodh	equ	0xFF4
  9046                           prodl	equ	0xFF3
  9047                           postinc0	equ	0xFEE
  9048                           wreg	equ	0xFE8
  9049                           postdec1	equ	0xFE5
  9050                           fsr1l	equ	0xFE1
  9051                           indf2	equ	0xFDF
  9052                           postinc2	equ	0xFDE
  9053                           postdec2	equ	0xFDD
  9054                           fsr2h	equ	0xFDA
  9055                           fsr2l	equ	0xFD9
  9056                           status	equ	0xFD8
  9057                           
  9058 ;; *************** function ___fladd *****************
  9059 ;; Defined at:
  9060 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  9061 ;; Parameters:    Size  Location     Type
  9062 ;;  b               4   73[BANK0 ] unsigned char 
  9063 ;;  a               4   77[BANK0 ] unsigned char 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;  grs             1   92[BANK0 ] unsigned char 
  9066 ;;  bexp            1   91[BANK0 ] unsigned char 
  9067 ;;  aexp            1   90[BANK0 ] unsigned char 
  9068 ;;  signs           1   89[BANK0 ] unsigned char 
  9069 ;; Return value:  Size  Location     Type
  9070 ;;                  4   73[BANK0 ] unsigned char 
  9071 ;; Registers used:
  9072 ;;		wreg, status,2, status,0
  9073 ;; Tracked objects:
  9074 ;;		On entry : 0/0
  9075 ;;		On exit  : 0/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9078 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;Total ram usage:       20 bytes
  9083 ;; Hardware stack levels used:    1
  9084 ;; Hardware stack levels required when called:    4
  9085 ;; This function calls:
  9086 ;;		Nothing
  9087 ;; This function is called by:
  9088 ;;		_park_routine
  9089 ;;		_parallelo
  9090 ;;		_matematica
  9091 ;;		_asin
  9092 ;;		_atan
  9093 ;;		_cos
  9094 ;;		_eval_poly
  9095 ;;		_sin
  9096 ;;		___flsub
  9097 ;;		_floor
  9098 ;; This function uses a non-reentrant model
  9099 ;;
  9100                           
  9101                           	psect	text23
  9102  00310A                     __ptext23:
  9103                           	opt stack 0
  9104  00310A                     ___fladd:
  9105                           	opt stack 21
  9106                           
  9107                           ; BSR set to: 0
  9108                           ;incstack = 0
  9109  00310A  0100               	movlb	0	; () banked
  9110  00310C  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9111  00310E  0B80               	andlw	128
  9112  003110  0100               	movlb	0	; () banked
  9113  003112  6FB9               	movwf	___fladd@signs& (0+255),b
  9114  003114  0100               	movlb	0	; () banked
  9115  003116  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9116  003118  25AC               	addwf	(___fladd@b+3)& (0+255),w,b
  9117  00311A  0100               	movlb	0	; () banked
  9118  00311C  6FBB               	movwf	___fladd@bexp& (0+255),b
  9119                           
  9120                           ; BSR set to: 0
  9121  00311E  0100               	movlb	0	; () banked
  9122  003120  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  9123  003122  D002               	goto	l6768
  9124                           
  9125                           ; BSR set to: 0
  9126  003124  0100               	movlb	0	; () banked
  9127  003126  81BB               	bsf	___fladd@bexp& (0+255),0,b
  9128  003128                     l6768:
  9129                           
  9130                           ; BSR set to: 0
  9131  003128  0100               	movlb	0	; () banked
  9132  00312A  51BB               	movf	___fladd@bexp& (0+255),w,b
  9133  00312C  0100               	movlb	0	; () banked
  9134  00312E  B4D8               	btfsc	status,2,c
  9135  003130  D012               	goto	l6778
  9136                           
  9137                           ; BSR set to: 0
  9138  003132  0100               	movlb	0	; () banked
  9139  003134  29BB               	incf	___fladd@bexp& (0+255),w,b
  9140  003136  A4D8               	btfss	status,2,c
  9141  003138  D009               	goto	l6774
  9142                           
  9143                           ; BSR set to: 0
  9144  00313A  0E00               	movlw	0
  9145  00313C  0100               	movlb	0	; () banked
  9146  00313E  6FA9               	movwf	___fladd@b& (0+255),b
  9147  003140  0E00               	movlw	0
  9148  003142  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9149  003144  0E00               	movlw	0
  9150  003146  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9151  003148  0E00               	movlw	0
  9152  00314A  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9153  00314C                     l6774:
  9154                           
  9155                           ; BSR set to: 0
  9156  00314C  0100               	movlb	0	; () banked
  9157  00314E  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  9158                           
  9159                           ; BSR set to: 0
  9160  003150  0E00               	movlw	0
  9161  003152  0100               	movlb	0	; () banked
  9162  003154  D008               	goto	L3
  9163  003156                     l6778:
  9164                           
  9165                           ; BSR set to: 0
  9166  003156  0E00               	movlw	0
  9167  003158  0100               	movlb	0	; () banked
  9168  00315A  6FA9               	movwf	___fladd@b& (0+255),b
  9169  00315C  0E00               	movlw	0
  9170  00315E  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9171  003160  0E00               	movlw	0
  9172  003162  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9173  003164  0E00               	movlw	0
  9174  003166                     L3:
  9175  003166  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9176                           
  9177                           ; BSR set to: 0
  9178                           
  9179                           ; BSR set to: 0
  9180  003168  0100               	movlb	0	; () banked
  9181  00316A  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9182  00316C  0B80               	andlw	128
  9183  00316E  0100               	movlb	0	; () banked
  9184  003170  6FBA               	movwf	___fladd@aexp& (0+255),b
  9185                           
  9186                           ; BSR set to: 0
  9187  003172  0100               	movlb	0	; () banked
  9188  003174  51B9               	movf	___fladd@signs& (0+255),w,b
  9189  003176  0100               	movlb	0	; () banked
  9190  003178  19BA               	xorwf	___fladd@aexp& (0+255),w,b
  9191  00317A  B4D8               	btfsc	status,2,c
  9192  00317C  D002               	goto	l6786
  9193                           
  9194                           ; BSR set to: 0
  9195  00317E  0100               	movlb	0	; () banked
  9196  003180  8DB9               	bsf	___fladd@signs& (0+255),6,b
  9197  003182                     l6786:
  9198                           
  9199                           ; BSR set to: 0
  9200  003182  0100               	movlb	0	; () banked
  9201  003184  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9202  003186  25B0               	addwf	(___fladd@a+3)& (0+255),w,b
  9203  003188  0100               	movlb	0	; () banked
  9204  00318A  6FBA               	movwf	___fladd@aexp& (0+255),b
  9205                           
  9206                           ; BSR set to: 0
  9207  00318C  0100               	movlb	0	; () banked
  9208  00318E  AFAF               	btfss	(___fladd@a+2)& (0+255),7,b
  9209  003190  D002               	goto	l6792
  9210                           
  9211                           ; BSR set to: 0
  9212  003192  0100               	movlb	0	; () banked
  9213  003194  81BA               	bsf	___fladd@aexp& (0+255),0,b
  9214  003196                     l6792:
  9215                           
  9216                           ; BSR set to: 0
  9217  003196  0100               	movlb	0	; () banked
  9218  003198  51BA               	movf	___fladd@aexp& (0+255),w,b
  9219  00319A  0100               	movlb	0	; () banked
  9220  00319C  B4D8               	btfsc	status,2,c
  9221  00319E  D012               	goto	l6802
  9222                           
  9223                           ; BSR set to: 0
  9224  0031A0  0100               	movlb	0	; () banked
  9225  0031A2  29BA               	incf	___fladd@aexp& (0+255),w,b
  9226  0031A4  A4D8               	btfss	status,2,c
  9227  0031A6  D009               	goto	l6798
  9228                           
  9229                           ; BSR set to: 0
  9230  0031A8  0E00               	movlw	0
  9231  0031AA  0100               	movlb	0	; () banked
  9232  0031AC  6FAD               	movwf	___fladd@a& (0+255),b
  9233  0031AE  0E00               	movlw	0
  9234  0031B0  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9235  0031B2  0E00               	movlw	0
  9236  0031B4  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9237  0031B6  0E00               	movlw	0
  9238  0031B8  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9239  0031BA                     l6798:
  9240                           
  9241                           ; BSR set to: 0
  9242  0031BA  0100               	movlb	0	; () banked
  9243  0031BC  8FAF               	bsf	(___fladd@a+2)& (0+255),7,b
  9244                           
  9245                           ; BSR set to: 0
  9246  0031BE  0E00               	movlw	0
  9247  0031C0  0100               	movlb	0	; () banked
  9248  0031C2  D008               	goto	L4
  9249  0031C4                     l6802:
  9250                           
  9251                           ; BSR set to: 0
  9252  0031C4  0E00               	movlw	0
  9253  0031C6  0100               	movlb	0	; () banked
  9254  0031C8  6FAD               	movwf	___fladd@a& (0+255),b
  9255  0031CA  0E00               	movlw	0
  9256  0031CC  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9257  0031CE  0E00               	movlw	0
  9258  0031D0  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9259  0031D2  0E00               	movlw	0
  9260  0031D4                     L4:
  9261  0031D4  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9262                           
  9263                           ; BSR set to: 0
  9264                           
  9265                           ; BSR set to: 0
  9266  0031D6  0100               	movlb	0	; () banked
  9267  0031D8  51BB               	movf	___fladd@bexp& (0+255),w,b
  9268  0031DA  0100               	movlb	0	; () banked
  9269  0031DC  5DBA               	subwf	___fladd@aexp& (0+255),w,b
  9270  0031DE  B0D8               	btfsc	status,0,c
  9271  0031E0  D024               	goto	l6840
  9272                           
  9273                           ; BSR set to: 0
  9274  0031E2  0100               	movlb	0	; () banked
  9275  0031E4  ADB9               	btfss	___fladd@signs& (0+255),6,b
  9276  0031E6  D003               	goto	l6810
  9277                           
  9278                           ; BSR set to: 0
  9279  0031E8  0E80               	movlw	128
  9280  0031EA  0100               	movlb	0	; () banked
  9281  0031EC  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9282  0031EE                     l6810:
  9283                           
  9284                           ; BSR set to: 0
  9285  0031EE  C0BB  F0BC         	movff	___fladd@bexp,___fladd@grs
  9286                           
  9287                           ; BSR set to: 0
  9288  0031F2  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9289                           
  9290                           ; BSR set to: 0
  9291  0031F6  C0BC  F0BA         	movff	___fladd@grs,___fladd@aexp
  9292                           
  9293                           ; BSR set to: 0
  9294  0031FA  C0A9  F0BC         	movff	___fladd@b,___fladd@grs
  9295                           
  9296                           ; BSR set to: 0
  9297  0031FE  C0AD  F0A9         	movff	___fladd@a,___fladd@b
  9298                           
  9299                           ; BSR set to: 0
  9300  003202  C0BC  F0AD         	movff	___fladd@grs,___fladd@a
  9301                           
  9302                           ; BSR set to: 0
  9303  003206  C0AA  F0BC         	movff	___fladd@b+1,___fladd@grs
  9304                           
  9305                           ; BSR set to: 0
  9306  00320A  C0AE  F0AA         	movff	___fladd@a+1,___fladd@b+1
  9307                           
  9308                           ; BSR set to: 0
  9309  00320E  C0BC  F0AE         	movff	___fladd@grs,___fladd@a+1
  9310                           
  9311                           ; BSR set to: 0
  9312  003212  C0AB  F0BC         	movff	___fladd@b+2,___fladd@grs
  9313                           
  9314                           ; BSR set to: 0
  9315  003216  C0AF  F0AB         	movff	___fladd@a+2,___fladd@b+2
  9316                           
  9317                           ; BSR set to: 0
  9318  00321A  C0BC  F0AF         	movff	___fladd@grs,___fladd@a+2
  9319                           
  9320                           ; BSR set to: 0
  9321  00321E  C0AC  F0BC         	movff	___fladd@b+3,___fladd@grs
  9322                           
  9323                           ; BSR set to: 0
  9324  003222  C0B0  F0AC         	movff	___fladd@a+3,___fladd@b+3
  9325                           
  9326                           ; BSR set to: 0
  9327  003226  C0BC  F0B0         	movff	___fladd@grs,___fladd@a+3
  9328  00322A                     l6840:
  9329                           
  9330                           ; BSR set to: 0
  9331  00322A  0E00               	movlw	0
  9332  00322C  0100               	movlb	0	; () banked
  9333  00322E  6FBC               	movwf	___fladd@grs& (0+255),b
  9334                           
  9335                           ; BSR set to: 0
  9336  003230  0100               	movlb	0	; () banked
  9337  003232  51BB               	movf	___fladd@bexp& (0+255),w,b
  9338  003234  0100               	movlb	0	; () banked
  9339  003236  6FB1               	movwf	??___fladd& (0+255),b
  9340  003238  6BB2               	clrf	(??___fladd+1)& (0+255),b
  9341  00323A  0100               	movlb	0	; () banked
  9342  00323C  1FB1               	comf	??___fladd& (0+255),f,b
  9343  00323E  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9344  003240  4BB1               	infsnz	??___fladd& (0+255),f,b
  9345  003242  2BB2               	incf	(??___fladd+1)& (0+255),f,b
  9346  003244  0100               	movlb	0	; () banked
  9347  003246  51BA               	movf	___fladd@aexp& (0+255),w,b
  9348  003248  0100               	movlb	0	; () banked
  9349  00324A  6FB3               	movwf	(??___fladd+2)& (0+255),b
  9350  00324C  6BB4               	clrf	(??___fladd+3)& (0+255),b
  9351  00324E  0100               	movlb	0	; () banked
  9352  003250  51B1               	movf	??___fladd& (0+255),w,b
  9353  003252  0100               	movlb	0	; () banked
  9354  003254  27B3               	addwf	(??___fladd+2)& (0+255),f,b
  9355  003256  0100               	movlb	0	; () banked
  9356  003258  51B2               	movf	(??___fladd+1)& (0+255),w,b
  9357  00325A  0100               	movlb	0	; () banked
  9358  00325C  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9359  00325E  0100               	movlb	0	; () banked
  9360  003260  BFB4               	btfsc	(??___fladd+3)& (0+255),7,b
  9361  003262  D03D               	goto	l1356
  9362  003264  0100               	movlb	0	; () banked
  9363  003266  51B4               	movf	(??___fladd+3)& (0+255),w,b
  9364  003268  E105               	bnz	u8740
  9365  00326A  0E1A               	movlw	26
  9366  00326C  0100               	movlb	0	; () banked
  9367  00326E  5DB3               	subwf	(??___fladd+2)& (0+255),w,b
  9368  003270  A0D8               	btfss	status,0,c
  9369  003272  D035               	goto	l1356
  9370  003274                     u8740:
  9371                           
  9372                           ; BSR set to: 0
  9373  003274  0100               	movlb	0	; () banked
  9374  003276  51A9               	movf	___fladd@b& (0+255),w,b
  9375  003278  0100               	movlb	0	; () banked
  9376  00327A  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9377  00327C  0100               	movlb	0	; () banked
  9378  00327E  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9379  003280  0100               	movlb	0	; () banked
  9380  003282  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9381  003284  B4D8               	btfsc	status,2,c
  9382  003286  D002               	goto	u8750
  9383  003288  0E01               	movlw	1
  9384  00328A  D001               	goto	u8760
  9385  00328C                     u8750:
  9386  00328C  0E00               	movlw	0
  9387  00328E                     u8760:
  9388  00328E  0100               	movlb	0	; () banked
  9389  003290  6FBC               	movwf	___fladd@grs& (0+255),b
  9390                           
  9391                           ; BSR set to: 0
  9392  003292  0E00               	movlw	0
  9393  003294  0100               	movlb	0	; () banked
  9394  003296  6FA9               	movwf	___fladd@b& (0+255),b
  9395  003298  0E00               	movlw	0
  9396  00329A  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9397  00329C  0E00               	movlw	0
  9398  00329E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9399  0032A0  0E00               	movlw	0
  9400  0032A2  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9401                           
  9402                           ; BSR set to: 0
  9403  0032A4  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9404  0032A8  D020               	goto	l1355
  9405  0032AA                     l1357:
  9406                           
  9407                           ; BSR set to: 0
  9408  0032AA  0100               	movlb	0	; () banked
  9409  0032AC  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9410  0032AE  D007               	goto	l6852
  9411                           
  9412                           ; BSR set to: 0
  9413  0032B0  0100               	movlb	0	; () banked
  9414  0032B2  90D8               	bcf	status,0,c
  9415  0032B4  31BC               	rrcf	___fladd@grs& (0+255),w,b
  9416  0032B6  0901               	iorlw	1
  9417  0032B8  0100               	movlb	0	; () banked
  9418  0032BA  6FBC               	movwf	___fladd@grs& (0+255),b
  9419  0032BC  D003               	goto	l6854
  9420  0032BE                     l6852:
  9421                           
  9422                           ; BSR set to: 0
  9423  0032BE  0100               	movlb	0	; () banked
  9424  0032C0  90D8               	bcf	status,0,c
  9425  0032C2  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9426  0032C4                     l6854:
  9427                           
  9428                           ; BSR set to: 0
  9429  0032C4  0100               	movlb	0	; () banked
  9430  0032C6  A1A9               	btfss	___fladd@b& (0+255),0,b
  9431  0032C8  D002               	goto	l6858
  9432                           
  9433                           ; BSR set to: 0
  9434  0032CA  0100               	movlb	0	; () banked
  9435  0032CC  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9436  0032CE                     l6858:
  9437                           
  9438                           ; BSR set to: 0
  9439  0032CE  0100               	movlb	0	; () banked
  9440  0032D0  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9441  0032D2  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9442  0032D4  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9443  0032D6  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9444  0032D8  33A9               	rrcf	___fladd@b& (0+255),f,b
  9445                           
  9446                           ; BSR set to: 0
  9447  0032DA  0100               	movlb	0	; () banked
  9448  0032DC  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9449  0032DE                     l1356:
  9450                           
  9451                           ; BSR set to: 0
  9452  0032DE  0100               	movlb	0	; () banked
  9453  0032E0  51BA               	movf	___fladd@aexp& (0+255),w,b
  9454  0032E2  0100               	movlb	0	; () banked
  9455  0032E4  5DBB               	subwf	___fladd@bexp& (0+255),w,b
  9456  0032E6  A0D8               	btfss	status,0,c
  9457  0032E8  D7E0               	goto	l1357
  9458  0032EA                     l1355:
  9459                           
  9460                           ; BSR set to: 0
  9461  0032EA  0100               	movlb	0	; () banked
  9462  0032EC  BDB9               	btfsc	___fladd@signs& (0+255),6,b
  9463  0032EE  D03F               	goto	l6886
  9464                           
  9465                           ; BSR set to: 0
  9466  0032F0  0100               	movlb	0	; () banked
  9467  0032F2  51BB               	movf	___fladd@bexp& (0+255),w,b
  9468  0032F4  0100               	movlb	0	; () banked
  9469  0032F6  A4D8               	btfss	status,2,c
  9470  0032F8  D00A               	goto	l6868
  9471                           
  9472                           ; BSR set to: 0
  9473  0032FA  0E00               	movlw	0
  9474  0032FC  0100               	movlb	0	; () banked
  9475  0032FE  6FA9               	movwf	?___fladd& (0+255),b
  9476  003300  0E00               	movlw	0
  9477  003302  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9478  003304  0E00               	movlw	0
  9479  003306  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9480  003308  0E00               	movlw	0
  9481  00330A  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9482                           
  9483                           ; BSR set to: 0
  9484  00330C  0012               	return	
  9485  00330E                     l6868:
  9486                           
  9487                           ; BSR set to: 0
  9488  00330E  0100               	movlb	0	; () banked
  9489  003310  51AD               	movf	___fladd@a& (0+255),w,b
  9490  003312  0100               	movlb	0	; () banked
  9491  003314  27A9               	addwf	___fladd@b& (0+255),f,b
  9492  003316  0100               	movlb	0	; () banked
  9493  003318  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9494  00331A  0100               	movlb	0	; () banked
  9495  00331C  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9496  00331E  0100               	movlb	0	; () banked
  9497  003320  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9498  003322  0100               	movlb	0	; () banked
  9499  003324  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9500  003326  0100               	movlb	0	; () banked
  9501  003328  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9502  00332A  0100               	movlb	0	; () banked
  9503  00332C  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9504                           
  9505                           ; BSR set to: 0
  9506  00332E  0100               	movlb	0	; () banked
  9507  003330  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9508  003332  D0CC               	goto	l6922
  9509                           
  9510                           ; BSR set to: 0
  9511  003334  0100               	movlb	0	; () banked
  9512  003336  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9513  003338  D009               	goto	l6876
  9514                           
  9515                           ; BSR set to: 0
  9516  00333A  0100               	movlb	0	; () banked
  9517  00333C  90D8               	bcf	status,0,c
  9518  00333E  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9519  003340  0100               	movlb	0	; () banked
  9520  003342  51BC               	movf	___fladd@grs& (0+255),w,b
  9521  003344  0901               	iorlw	1
  9522  003346  0100               	movlb	0	; () banked
  9523  003348  6FBC               	movwf	___fladd@grs& (0+255),b
  9524  00334A  D003               	goto	l6878
  9525  00334C                     l6876:
  9526                           
  9527                           ; BSR set to: 0
  9528  00334C  0100               	movlb	0	; () banked
  9529  00334E  90D8               	bcf	status,0,c
  9530  003350  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9531  003352                     l6878:
  9532                           
  9533                           ; BSR set to: 0
  9534  003352  0100               	movlb	0	; () banked
  9535  003354  A1A9               	btfss	___fladd@b& (0+255),0,b
  9536  003356  D002               	goto	l6882
  9537                           
  9538                           ; BSR set to: 0
  9539  003358  0100               	movlb	0	; () banked
  9540  00335A  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9541  00335C                     l6882:
  9542                           
  9543                           ; BSR set to: 0
  9544  00335C  0100               	movlb	0	; () banked
  9545  00335E  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9546  003360  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9547  003362  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9548  003364  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9549  003366  33A9               	rrcf	___fladd@b& (0+255),f,b
  9550                           
  9551                           ; BSR set to: 0
  9552  003368  0100               	movlb	0	; () banked
  9553  00336A  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9554                           
  9555                           ; BSR set to: 0
  9556  00336C  D0AF               	goto	l6922
  9557  00336E                     l6886:
  9558                           
  9559                           ; BSR set to: 0
  9560  00336E  0100               	movlb	0	; () banked
  9561  003370  51AD               	movf	___fladd@a& (0+255),w,b
  9562  003372  0100               	movlb	0	; () banked
  9563  003374  5DA9               	subwf	___fladd@b& (0+255),w,b
  9564  003376  0100               	movlb	0	; () banked
  9565  003378  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9566  00337A  0100               	movlb	0	; () banked
  9567  00337C  59AA               	subwfb	(___fladd@b+1)& (0+255),w,b
  9568  00337E  0100               	movlb	0	; () banked
  9569  003380  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9570  003382  0100               	movlb	0	; () banked
  9571  003384  59AB               	subwfb	(___fladd@b+2)& (0+255),w,b
  9572  003386  0100               	movlb	0	; () banked
  9573  003388  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9574  00338A  0A80               	xorlw	128
  9575  00338C  0100               	movlb	0	; () banked
  9576  00338E  6FB1               	movwf	??___fladd& (0+255),b
  9577  003390  0100               	movlb	0	; () banked
  9578  003392  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9579  003394  0A80               	xorlw	128
  9580  003396  0100               	movlb	0	; () banked
  9581  003398  59B1               	subwfb	??___fladd& (0+255),w,b
  9582  00339A  B0D8               	btfsc	status,0,c
  9583  00339C  D050               	goto	l6896
  9584                           
  9585                           ; BSR set to: 0
  9586  00339E  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9587  0033A2  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9588  0033A6  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9589  0033AA  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9590  0033AE  0100               	movlb	0	; () banked
  9591  0033B0  1FB1               	comf	??___fladd& (0+255),f,b
  9592  0033B2  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9593  0033B4  1FB3               	comf	(??___fladd+2)& (0+255),f,b
  9594  0033B6  1FB4               	comf	(??___fladd+3)& (0+255),f,b
  9595  0033B8  2BB1               	incf	??___fladd& (0+255),f,b
  9596  0033BA  0E00               	movlw	0
  9597  0033BC  23B2               	addwfc	(??___fladd+1)& (0+255),f,b
  9598  0033BE  23B3               	addwfc	(??___fladd+2)& (0+255),f,b
  9599  0033C0  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9600  0033C2  0100               	movlb	0	; () banked
  9601  0033C4  51AD               	movf	___fladd@a& (0+255),w,b
  9602  0033C6  0100               	movlb	0	; () banked
  9603  0033C8  25B1               	addwf	??___fladd& (0+255),w,b
  9604  0033CA  0100               	movlb	0	; () banked
  9605  0033CC  6FB5               	movwf	(??___fladd+4)& (0+255),b
  9606  0033CE  0100               	movlb	0	; () banked
  9607  0033D0  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9608  0033D2  0100               	movlb	0	; () banked
  9609  0033D4  21B2               	addwfc	(??___fladd+1)& (0+255),w,b
  9610  0033D6  0100               	movlb	0	; () banked
  9611  0033D8  6FB6               	movwf	(??___fladd+5)& (0+255),b
  9612  0033DA  0100               	movlb	0	; () banked
  9613  0033DC  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9614  0033DE  0100               	movlb	0	; () banked
  9615  0033E0  21B3               	addwfc	(??___fladd+2)& (0+255),w,b
  9616  0033E2  0100               	movlb	0	; () banked
  9617  0033E4  6FB7               	movwf	(??___fladd+6)& (0+255),b
  9618  0033E6  0100               	movlb	0	; () banked
  9619  0033E8  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9620  0033EA  0100               	movlb	0	; () banked
  9621  0033EC  21B4               	addwfc	(??___fladd+3)& (0+255),w,b
  9622  0033EE  0100               	movlb	0	; () banked
  9623  0033F0  6FB8               	movwf	(??___fladd+7)& (0+255),b
  9624  0033F2  0EFF               	movlw	255
  9625  0033F4  0100               	movlb	0	; () banked
  9626  0033F6  25B5               	addwf	(??___fladd+4)& (0+255),w,b
  9627  0033F8  0100               	movlb	0	; () banked
  9628  0033FA  6FA9               	movwf	___fladd@b& (0+255),b
  9629  0033FC  0EFF               	movlw	255
  9630  0033FE  0100               	movlb	0	; () banked
  9631  003400  21B6               	addwfc	(??___fladd+5)& (0+255),w,b
  9632  003402  0100               	movlb	0	; () banked
  9633  003404  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9634  003406  0EFF               	movlw	255
  9635  003408  0100               	movlb	0	; () banked
  9636  00340A  21B7               	addwfc	(??___fladd+6)& (0+255),w,b
  9637  00340C  0100               	movlb	0	; () banked
  9638  00340E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9639  003410  0EFF               	movlw	255
  9640  003412  0100               	movlb	0	; () banked
  9641  003414  21B8               	addwfc	(??___fladd+7)& (0+255),w,b
  9642  003416  0100               	movlb	0	; () banked
  9643  003418  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9644  00341A  0E80               	movlw	128
  9645  00341C  0100               	movlb	0	; () banked
  9646  00341E  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9647                           
  9648                           ; BSR set to: 0
  9649  003420  0100               	movlb	0	; () banked
  9650  003422  6DBC               	negf	___fladd@grs& (0+255),b
  9651                           
  9652                           ; BSR set to: 0
  9653  003424  0100               	movlb	0	; () banked
  9654  003426  51BC               	movf	___fladd@grs& (0+255),w,b
  9655  003428  0100               	movlb	0	; () banked
  9656  00342A  A4D8               	btfss	status,2,c
  9657  00342C  D018               	goto	l1372
  9658                           
  9659                           ; BSR set to: 0
  9660  00342E  0E01               	movlw	1
  9661  003430  0100               	movlb	0	; () banked
  9662  003432  27A9               	addwf	___fladd@b& (0+255),f,b
  9663  003434  0E00               	movlw	0
  9664  003436  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9665  003438  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9666  00343A  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9667                           
  9668                           ; BSR set to: 0
  9669  00343C  D010               	goto	l1372
  9670  00343E                     l6896:
  9671                           
  9672                           ; BSR set to: 0
  9673  00343E  0100               	movlb	0	; () banked
  9674  003440  51AD               	movf	___fladd@a& (0+255),w,b
  9675  003442  0100               	movlb	0	; () banked
  9676  003444  5FA9               	subwf	___fladd@b& (0+255),f,b
  9677  003446  0100               	movlb	0	; () banked
  9678  003448  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9679  00344A  0100               	movlb	0	; () banked
  9680  00344C  5BAA               	subwfb	(___fladd@b+1)& (0+255),f,b
  9681  00344E  0100               	movlb	0	; () banked
  9682  003450  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9683  003452  0100               	movlb	0	; () banked
  9684  003454  5BAB               	subwfb	(___fladd@b+2)& (0+255),f,b
  9685  003456  0100               	movlb	0	; () banked
  9686  003458  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9687  00345A  0100               	movlb	0	; () banked
  9688  00345C  5BAC               	subwfb	(___fladd@b+3)& (0+255),f,b
  9689  00345E                     l1372:
  9690                           
  9691                           ; BSR set to: 0
  9692  00345E  0100               	movlb	0	; () banked
  9693  003460  51A9               	movf	___fladd@b& (0+255),w,b
  9694  003462  0100               	movlb	0	; () banked
  9695  003464  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9696  003466  0100               	movlb	0	; () banked
  9697  003468  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9698  00346A  0100               	movlb	0	; () banked
  9699  00346C  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9700  00346E  A4D8               	btfss	status,2,c
  9701  003470  D02A               	goto	l6920
  9702                           
  9703                           ; BSR set to: 0
  9704  003472  0100               	movlb	0	; () banked
  9705  003474  51BC               	movf	___fladd@grs& (0+255),w,b
  9706  003476  0100               	movlb	0	; () banked
  9707  003478  A4D8               	btfss	status,2,c
  9708  00347A  D025               	goto	l6920
  9709                           
  9710                           ; BSR set to: 0
  9711  00347C  0E00               	movlw	0
  9712  00347E  0100               	movlb	0	; () banked
  9713  003480  6FA9               	movwf	?___fladd& (0+255),b
  9714  003482  0E00               	movlw	0
  9715  003484  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9716  003486  0E00               	movlw	0
  9717  003488  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9718  00348A  0E00               	movlw	0
  9719  00348C  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9720                           
  9721                           ; BSR set to: 0
  9722  00348E  0012               	return	
  9723  003490                     l6904:
  9724                           
  9725                           ; BSR set to: 0
  9726  003490  0100               	movlb	0	; () banked
  9727  003492  90D8               	bcf	status,0,c
  9728  003494  37A9               	rlcf	___fladd@b& (0+255),f,b
  9729  003496  37AA               	rlcf	(___fladd@b+1)& (0+255),f,b
  9730  003498  37AB               	rlcf	(___fladd@b+2)& (0+255),f,b
  9731  00349A  37AC               	rlcf	(___fladd@b+3)& (0+255),f,b
  9732                           
  9733                           ; BSR set to: 0
  9734  00349C  0100               	movlb	0	; () banked
  9735  00349E  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9736  0034A0  D002               	goto	l6910
  9737                           
  9738                           ; BSR set to: 0
  9739  0034A2  0100               	movlb	0	; () banked
  9740  0034A4  81A9               	bsf	___fladd@b& (0+255),0,b
  9741  0034A6                     l6910:
  9742                           
  9743                           ; BSR set to: 0
  9744  0034A6  0100               	movlb	0	; () banked
  9745  0034A8  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9746  0034AA  D003               	goto	l6914
  9747                           
  9748                           ; BSR set to: 0
  9749  0034AC  80D8               	bsf	status,0,c
  9750  0034AE  0100               	movlb	0	; () banked
  9751  0034B0  D002               	goto	L5
  9752  0034B2                     l6914:
  9753                           
  9754                           ; BSR set to: 0
  9755  0034B2  0100               	movlb	0	; () banked
  9756  0034B4  90D8               	bcf	status,0,c
  9757  0034B6                     L5:
  9758  0034B6  37BC               	rlcf	___fladd@grs& (0+255),f,b
  9759                           
  9760                           ; BSR set to: 0
  9761                           
  9762                           ; BSR set to: 0
  9763  0034B8  0100               	movlb	0	; () banked
  9764  0034BA  51BB               	movf	___fladd@bexp& (0+255),w,b
  9765  0034BC  0100               	movlb	0	; () banked
  9766  0034BE  B4D8               	btfsc	status,2,c
  9767  0034C0  D002               	goto	l6920
  9768                           
  9769                           ; BSR set to: 0
  9770  0034C2  0100               	movlb	0	; () banked
  9771  0034C4  07BB               	decf	___fladd@bexp& (0+255),f,b
  9772  0034C6                     l6920:
  9773                           
  9774                           ; BSR set to: 0
  9775  0034C6  0100               	movlb	0	; () banked
  9776  0034C8  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  9777  0034CA  D7E2               	goto	l6904
  9778  0034CC                     l6922:
  9779                           
  9780                           ; BSR set to: 0
  9781  0034CC  0E00               	movlw	0
  9782  0034CE  0100               	movlb	0	; () banked
  9783  0034D0  6FBA               	movwf	___fladd@aexp& (0+255),b
  9784                           
  9785                           ; BSR set to: 0
  9786  0034D2  0100               	movlb	0	; () banked
  9787  0034D4  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9788  0034D6  D00D               	goto	l1381
  9789                           
  9790                           ; BSR set to: 0
  9791  0034D8  C0BC  F0B1         	movff	___fladd@grs,??___fladd
  9792  0034DC  0E7F               	movlw	127
  9793  0034DE  0100               	movlb	0	; () banked
  9794  0034E0  17B1               	andwf	??___fladd& (0+255),f,b
  9795  0034E2  A4D8               	btfss	status,2,c
  9796  0034E4  D003               	goto	l6930
  9797                           
  9798                           ; BSR set to: 0
  9799                           
  9800                           ; BSR set to: 0
  9801  0034E6  0100               	movlb	0	; () banked
  9802  0034E8  A1A9               	btfss	___fladd@b& (0+255),0,b
  9803  0034EA  D003               	goto	l1381
  9804  0034EC                     l6930:
  9805                           
  9806                           ; BSR set to: 0
  9807  0034EC  0E01               	movlw	1
  9808  0034EE  0100               	movlb	0	; () banked
  9809  0034F0  6FBA               	movwf	___fladd@aexp& (0+255),b
  9810  0034F2                     l1381:
  9811                           
  9812                           ; BSR set to: 0
  9813  0034F2  0100               	movlb	0	; () banked
  9814  0034F4  51BA               	movf	___fladd@aexp& (0+255),w,b
  9815  0034F6  0100               	movlb	0	; () banked
  9816  0034F8  B4D8               	btfsc	status,2,c
  9817  0034FA  D026               	goto	l6940
  9818                           
  9819                           ; BSR set to: 0
  9820  0034FC  0E01               	movlw	1
  9821  0034FE  0100               	movlb	0	; () banked
  9822  003500  27A9               	addwf	___fladd@b& (0+255),f,b
  9823  003502  0E00               	movlw	0
  9824  003504  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9825  003506  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9826  003508  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9827                           
  9828                           ; BSR set to: 0
  9829  00350A  0100               	movlb	0	; () banked
  9830  00350C  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9831  00350E  D01C               	goto	l6940
  9832                           
  9833                           ; BSR set to: 0
  9834  003510  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9835  003514  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9836  003518  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9837  00351C  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9838  003520  0100               	movlb	0	; () banked
  9839  003522  35B4               	rlcf	(??___fladd+3)& (0+255),w,b
  9840  003524  33B4               	rrcf	(??___fladd+3)& (0+255),f,b
  9841  003526  33B3               	rrcf	(??___fladd+2)& (0+255),f,b
  9842  003528  33B2               	rrcf	(??___fladd+1)& (0+255),f,b
  9843  00352A  33B1               	rrcf	??___fladd& (0+255),f,b
  9844  00352C  C0B1  F0A9         	movff	??___fladd,___fladd@b
  9845  003530  C0B2  F0AA         	movff	??___fladd+1,___fladd@b+1
  9846  003534  C0B3  F0AB         	movff	??___fladd+2,___fladd@b+2
  9847  003538  C0B4  F0AC         	movff	??___fladd+3,___fladd@b+3
  9848  00353C  0100               	movlb	0	; () banked
  9849  00353E  29BB               	incf	___fladd@bexp& (0+255),w,b
  9850  003540  B4D8               	btfsc	status,2,c
  9851  003542  D002               	goto	l6940
  9852                           
  9853                           ; BSR set to: 0
  9854  003544  0100               	movlb	0	; () banked
  9855  003546  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9856  003548                     l6940:
  9857                           
  9858                           ; BSR set to: 0
  9859  003548  0100               	movlb	0	; () banked
  9860  00354A  29BB               	incf	___fladd@bexp& (0+255),w,b
  9861  00354C  B4D8               	btfsc	status,2,c
  9862  00354E  D005               	goto	l6944
  9863                           
  9864                           ; BSR set to: 0
  9865  003550  0100               	movlb	0	; () banked
  9866  003552  51BB               	movf	___fladd@bexp& (0+255),w,b
  9867  003554  0100               	movlb	0	; () banked
  9868  003556  A4D8               	btfss	status,2,c
  9869  003558  D011               	goto	l6948
  9870  00355A                     l6944:
  9871                           
  9872                           ; BSR set to: 0
  9873  00355A  0E00               	movlw	0
  9874  00355C  0100               	movlb	0	; () banked
  9875  00355E  6FA9               	movwf	___fladd@b& (0+255),b
  9876  003560  0E00               	movlw	0
  9877  003562  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9878  003564  0E00               	movlw	0
  9879  003566  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9880  003568  0E00               	movlw	0
  9881  00356A  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9882  00356C  0100               	movlb	0	; () banked
  9883  00356E  51BB               	movf	___fladd@bexp& (0+255),w,b
  9884  003570  0100               	movlb	0	; () banked
  9885  003572  A4D8               	btfss	status,2,c
  9886  003574  D003               	goto	l6948
  9887                           
  9888                           ; BSR set to: 0
  9889  003576  0E00               	movlw	0
  9890  003578  0100               	movlb	0	; () banked
  9891  00357A  6FB9               	movwf	___fladd@signs& (0+255),b
  9892  00357C                     l6948:
  9893                           
  9894                           ; BSR set to: 0
  9895  00357C  0100               	movlb	0	; () banked
  9896  00357E  A1BB               	btfss	___fladd@bexp& (0+255),0,b
  9897  003580  D003               	goto	l6952
  9898                           
  9899                           ; BSR set to: 0
  9900  003582  0100               	movlb	0	; () banked
  9901  003584  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  9902  003586  D002               	goto	l6954
  9903  003588                     l6952:
  9904                           
  9905                           ; BSR set to: 0
  9906  003588  0100               	movlb	0	; () banked
  9907  00358A  9FAB               	bcf	(___fladd@b+2)& (0+255),7,b
  9908  00358C                     l6954:
  9909                           
  9910                           ; BSR set to: 0
  9911  00358C  0100               	movlb	0	; () banked
  9912  00358E  90D8               	bcf	status,0,c
  9913  003590  31BB               	rrcf	___fladd@bexp& (0+255),w,b
  9914  003592  0100               	movlb	0	; () banked
  9915  003594  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9916                           
  9917                           ; BSR set to: 0
  9918  003596  0100               	movlb	0	; () banked
  9919  003598  AFB9               	btfss	___fladd@signs& (0+255),7,b
  9920  00359A  D002               	goto	l6960
  9921                           
  9922                           ; BSR set to: 0
  9923  00359C  0100               	movlb	0	; () banked
  9924  00359E  8FAC               	bsf	(___fladd@b+3)& (0+255),7,b
  9925  0035A0                     l6960:
  9926                           
  9927                           ; BSR set to: 0
  9928  0035A0  C0A9  F0A9         	movff	___fladd@b,?___fladd
  9929  0035A4  C0AA  F0AA         	movff	___fladd@b+1,?___fladd+1
  9930  0035A8  C0AB  F0AB         	movff	___fladd@b+2,?___fladd+2
  9931  0035AC  C0AC  F0AC         	movff	___fladd@b+3,?___fladd+3
  9932  0035B0  0012               	return	
  9933  0035B2                     __end_of___fladd:
  9934                           	opt stack 0
  9935                           tblptru	equ	0xFF8
  9936                           tblptrh	equ	0xFF7
  9937                           tblptrl	equ	0xFF6
  9938                           tablat	equ	0xFF5
  9939                           prodh	equ	0xFF4
  9940                           prodl	equ	0xFF3
  9941                           postinc0	equ	0xFEE
  9942                           wreg	equ	0xFE8
  9943                           postdec1	equ	0xFE5
  9944                           fsr1l	equ	0xFE1
  9945                           indf2	equ	0xFDF
  9946                           postinc2	equ	0xFDE
  9947                           postdec2	equ	0xFDD
  9948                           fsr2h	equ	0xFDA
  9949                           fsr2l	equ	0xFD9
  9950                           status	equ	0xFD8
  9951                           
  9952 ;; *************** function ___flge *****************
  9953 ;; Defined at:
  9954 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  9955 ;; Parameters:    Size  Location     Type
  9956 ;;  ff1             4  101[BANK0 ] unsigned char 
  9957 ;;  ff2             4  105[BANK0 ] unsigned char 
  9958 ;; Auto vars:     Size  Location     Type
  9959 ;;		None
  9960 ;; Return value:  Size  Location     Type
  9961 ;;		None               void
  9962 ;; Registers used:
  9963 ;;		wreg, status,2, status,0
  9964 ;; Tracked objects:
  9965 ;;		On entry : 0/0
  9966 ;;		On exit  : 0/0
  9967 ;;		Unchanged: 0/0
  9968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9969 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9971 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9972 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9973 ;;Total ram usage:       12 bytes
  9974 ;; Hardware stack levels used:    1
  9975 ;; Hardware stack levels required when called:    4
  9976 ;; This function calls:
  9977 ;;		Nothing
  9978 ;; This function is called by:
  9979 ;;		_parallelo
  9980 ;;		_asin
  9981 ;;		_atan
  9982 ;;		_cos
  9983 ;;		_sin
  9984 ;;		_floor
  9985 ;; This function uses a non-reentrant model
  9986 ;;
  9987                           
  9988                           	psect	text24
  9989  005A60                     __ptext24:
  9990                           	opt stack 0
  9991  005A60                     ___flge:
  9992                           	opt stack 22
  9993                           
  9994                           ; BSR set to: 0
  9995                           ;incstack = 0
  9996  005A60  0E00               	movlw	0
  9997  005A62  0100               	movlb	0	; () banked
  9998  005A64  15C5               	andwf	___flge@ff1& (0+255),w,b
  9999  005A66  0100               	movlb	0	; () banked
 10000  005A68  6FCD               	movwf	??___flge& (0+255),b
 10001  005A6A  0E00               	movlw	0
 10002  005A6C  0100               	movlb	0	; () banked
 10003  005A6E  15C6               	andwf	(___flge@ff1+1)& (0+255),w,b
 10004  005A70  0100               	movlb	0	; () banked
 10005  005A72  6FCE               	movwf	(??___flge+1)& (0+255),b
 10006  005A74  0E80               	movlw	128
 10007  005A76  0100               	movlb	0	; () banked
 10008  005A78  15C7               	andwf	(___flge@ff1+2)& (0+255),w,b
 10009  005A7A  0100               	movlb	0	; () banked
 10010  005A7C  6FCF               	movwf	(??___flge+2)& (0+255),b
 10011  005A7E  0E7F               	movlw	127
 10012  005A80  0100               	movlb	0	; () banked
 10013  005A82  15C8               	andwf	(___flge@ff1+3)& (0+255),w,b
 10014  005A84  0100               	movlb	0	; () banked
 10015  005A86  6FD0               	movwf	(??___flge+3)& (0+255),b
 10016  005A88  0100               	movlb	0	; () banked
 10017  005A8A  51CD               	movf	??___flge& (0+255),w,b
 10018  005A8C  0100               	movlb	0	; () banked
 10019  005A8E  11CE               	iorwf	(??___flge+1)& (0+255),w,b
 10020  005A90  0100               	movlb	0	; () banked
 10021  005A92  11CF               	iorwf	(??___flge+2)& (0+255),w,b
 10022  005A94  0100               	movlb	0	; () banked
 10023  005A96  11D0               	iorwf	(??___flge+3)& (0+255),w,b
 10024  005A98  A4D8               	btfss	status,2,c
 10025  005A9A  D009               	goto	l7098
 10026                           
 10027                           ; BSR set to: 0
 10028  005A9C  0E00               	movlw	0
 10029  005A9E  0100               	movlb	0	; () banked
 10030  005AA0  6FC5               	movwf	___flge@ff1& (0+255),b
 10031  005AA2  0E00               	movlw	0
 10032  005AA4  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
 10033  005AA6  0E00               	movlw	0
 10034  005AA8  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
 10035  005AAA  0E00               	movlw	0
 10036  005AAC  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
 10037  005AAE                     l7098:
 10038                           
 10039                           ; BSR set to: 0
 10040  005AAE  0E00               	movlw	0
 10041  005AB0  0100               	movlb	0	; () banked
 10042  005AB2  15C9               	andwf	___flge@ff2& (0+255),w,b
 10043  005AB4  0100               	movlb	0	; () banked
 10044  005AB6  6FCD               	movwf	??___flge& (0+255),b
 10045  005AB8  0E00               	movlw	0
 10046  005ABA  0100               	movlb	0	; () banked
 10047  005ABC  15CA               	andwf	(___flge@ff2+1)& (0+255),w,b
 10048  005ABE  0100               	movlb	0	; () banked
 10049  005AC0  6FCE               	movwf	(??___flge+1)& (0+255),b
 10050  005AC2  0E80               	movlw	128
 10051  005AC4  0100               	movlb	0	; () banked
 10052  005AC6  15CB               	andwf	(___flge@ff2+2)& (0+255),w,b
 10053  005AC8  0100               	movlb	0	; () banked
 10054  005ACA  6FCF               	movwf	(??___flge+2)& (0+255),b
 10055  005ACC  0E7F               	movlw	127
 10056  005ACE  0100               	movlb	0	; () banked
 10057  005AD0  15CC               	andwf	(___flge@ff2+3)& (0+255),w,b
 10058  005AD2  0100               	movlb	0	; () banked
 10059  005AD4  6FD0               	movwf	(??___flge+3)& (0+255),b
 10060  005AD6  0100               	movlb	0	; () banked
 10061  005AD8  51CD               	movf	??___flge& (0+255),w,b
 10062  005ADA  0100               	movlb	0	; () banked
 10063  005ADC  11CE               	iorwf	(??___flge+1)& (0+255),w,b
 10064  005ADE  0100               	movlb	0	; () banked
 10065  005AE0  11CF               	iorwf	(??___flge+2)& (0+255),w,b
 10066  005AE2  0100               	movlb	0	; () banked
 10067  005AE4  11D0               	iorwf	(??___flge+3)& (0+255),w,b
 10068  005AE6  A4D8               	btfss	status,2,c
 10069  005AE8  D009               	goto	l7102
 10070                           
 10071                           ; BSR set to: 0
 10072  005AEA  0E00               	movlw	0
 10073  005AEC  0100               	movlb	0	; () banked
 10074  005AEE  6FC9               	movwf	___flge@ff2& (0+255),b
 10075  005AF0  0E00               	movlw	0
 10076  005AF2  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
 10077  005AF4  0E00               	movlw	0
 10078  005AF6  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
 10079  005AF8  0E00               	movlw	0
 10080  005AFA  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
 10081  005AFC                     l7102:
 10082                           
 10083                           ; BSR set to: 0
 10084  005AFC  0100               	movlb	0	; () banked
 10085  005AFE  AFC8               	btfss	(___flge@ff1+3)& (0+255),7,b
 10086  005B00  D026               	goto	l7106
 10087                           
 10088                           ; BSR set to: 0
 10089  005B02  C0C5  F0CD         	movff	___flge@ff1,??___flge
 10090  005B06  C0C6  F0CE         	movff	___flge@ff1+1,??___flge+1
 10091  005B0A  C0C7  F0CF         	movff	___flge@ff1+2,??___flge+2
 10092  005B0E  C0C8  F0D0         	movff	___flge@ff1+3,??___flge+3
 10093  005B12  0100               	movlb	0	; () banked
 10094  005B14  1FCD               	comf	??___flge& (0+255),f,b
 10095  005B16  1FCE               	comf	(??___flge+1)& (0+255),f,b
 10096  005B18  1FCF               	comf	(??___flge+2)& (0+255),f,b
 10097  005B1A  1FD0               	comf	(??___flge+3)& (0+255),f,b
 10098  005B1C  2BCD               	incf	??___flge& (0+255),f,b
 10099  005B1E  0E00               	movlw	0
 10100  005B20  23CE               	addwfc	(??___flge+1)& (0+255),f,b
 10101  005B22  23CF               	addwfc	(??___flge+2)& (0+255),f,b
 10102  005B24  23D0               	addwfc	(??___flge+3)& (0+255),f,b
 10103  005B26  0E00               	movlw	0
 10104  005B28  0100               	movlb	0	; () banked
 10105  005B2A  25CD               	addwf	??___flge& (0+255),w,b
 10106  005B2C  0100               	movlb	0	; () banked
 10107  005B2E  6FC5               	movwf	___flge@ff1& (0+255),b
 10108  005B30  0E00               	movlw	0
 10109  005B32  0100               	movlb	0	; () banked
 10110  005B34  21CE               	addwfc	(??___flge+1)& (0+255),w,b
 10111  005B36  0100               	movlb	0	; () banked
 10112  005B38  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
 10113  005B3A  0E00               	movlw	0
 10114  005B3C  0100               	movlb	0	; () banked
 10115  005B3E  21CF               	addwfc	(??___flge+2)& (0+255),w,b
 10116  005B40  0100               	movlb	0	; () banked
 10117  005B42  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
 10118  005B44  0E80               	movlw	128
 10119  005B46  0100               	movlb	0	; () banked
 10120  005B48  21D0               	addwfc	(??___flge+3)& (0+255),w,b
 10121  005B4A  0100               	movlb	0	; () banked
 10122  005B4C  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
 10123  005B4E                     l7106:
 10124                           
 10125                           ; BSR set to: 0
 10126  005B4E  0100               	movlb	0	; () banked
 10127  005B50  AFCC               	btfss	(___flge@ff2+3)& (0+255),7,b
 10128  005B52  D026               	goto	l1103
 10129                           
 10130                           ; BSR set to: 0
 10131  005B54  C0C9  F0CD         	movff	___flge@ff2,??___flge
 10132  005B58  C0CA  F0CE         	movff	___flge@ff2+1,??___flge+1
 10133  005B5C  C0CB  F0CF         	movff	___flge@ff2+2,??___flge+2
 10134  005B60  C0CC  F0D0         	movff	___flge@ff2+3,??___flge+3
 10135  005B64  0100               	movlb	0	; () banked
 10136  005B66  1FCD               	comf	??___flge& (0+255),f,b
 10137  005B68  1FCE               	comf	(??___flge+1)& (0+255),f,b
 10138  005B6A  1FCF               	comf	(??___flge+2)& (0+255),f,b
 10139  005B6C  1FD0               	comf	(??___flge+3)& (0+255),f,b
 10140  005B6E  2BCD               	incf	??___flge& (0+255),f,b
 10141  005B70  0E00               	movlw	0
 10142  005B72  23CE               	addwfc	(??___flge+1)& (0+255),f,b
 10143  005B74  23CF               	addwfc	(??___flge+2)& (0+255),f,b
 10144  005B76  23D0               	addwfc	(??___flge+3)& (0+255),f,b
 10145  005B78  0E00               	movlw	0
 10146  005B7A  0100               	movlb	0	; () banked
 10147  005B7C  25CD               	addwf	??___flge& (0+255),w,b
 10148  005B7E  0100               	movlb	0	; () banked
 10149  005B80  6FC9               	movwf	___flge@ff2& (0+255),b
 10150  005B82  0E00               	movlw	0
 10151  005B84  0100               	movlb	0	; () banked
 10152  005B86  21CE               	addwfc	(??___flge+1)& (0+255),w,b
 10153  005B88  0100               	movlb	0	; () banked
 10154  005B8A  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
 10155  005B8C  0E00               	movlw	0
 10156  005B8E  0100               	movlb	0	; () banked
 10157  005B90  21CF               	addwfc	(??___flge+2)& (0+255),w,b
 10158  005B92  0100               	movlb	0	; () banked
 10159  005B94  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
 10160  005B96  0E80               	movlw	128
 10161  005B98  0100               	movlb	0	; () banked
 10162  005B9A  21D0               	addwfc	(??___flge+3)& (0+255),w,b
 10163  005B9C  0100               	movlb	0	; () banked
 10164  005B9E  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
 10165  005BA0                     l1103:
 10166                           
 10167                           ; BSR set to: 0
 10168  005BA0  0E00               	movlw	0
 10169  005BA2  0100               	movlb	0	; () banked
 10170  005BA4  1BC5               	xorwf	___flge@ff1& (0+255),f,b
 10171  005BA6  0E00               	movlw	0
 10172  005BA8  1BC6               	xorwf	(___flge@ff1+1)& (0+255),f,b
 10173  005BAA  0E00               	movlw	0
 10174  005BAC  1BC7               	xorwf	(___flge@ff1+2)& (0+255),f,b
 10175  005BAE  0E80               	movlw	128
 10176  005BB0  1BC8               	xorwf	(___flge@ff1+3)& (0+255),f,b
 10177  005BB2  0E00               	movlw	0
 10178  005BB4  0100               	movlb	0	; () banked
 10179  005BB6  1BC9               	xorwf	___flge@ff2& (0+255),f,b
 10180  005BB8  0E00               	movlw	0
 10181  005BBA  1BCA               	xorwf	(___flge@ff2+1)& (0+255),f,b
 10182  005BBC  0E00               	movlw	0
 10183  005BBE  1BCB               	xorwf	(___flge@ff2+2)& (0+255),f,b
 10184  005BC0  0E80               	movlw	128
 10185  005BC2  1BCC               	xorwf	(___flge@ff2+3)& (0+255),f,b
 10186  005BC4  0100               	movlb	0	; () banked
 10187  005BC6  51C9               	movf	___flge@ff2& (0+255),w,b
 10188  005BC8  0100               	movlb	0	; () banked
 10189  005BCA  5DC5               	subwf	___flge@ff1& (0+255),w,b
 10190  005BCC  0100               	movlb	0	; () banked
 10191  005BCE  51CA               	movf	(___flge@ff2+1)& (0+255),w,b
 10192  005BD0  0100               	movlb	0	; () banked
 10193  005BD2  59C6               	subwfb	(___flge@ff1+1)& (0+255),w,b
 10194  005BD4  0100               	movlb	0	; () banked
 10195  005BD6  51CB               	movf	(___flge@ff2+2)& (0+255),w,b
 10196  005BD8  0100               	movlb	0	; () banked
 10197  005BDA  59C7               	subwfb	(___flge@ff1+2)& (0+255),w,b
 10198  005BDC  0100               	movlb	0	; () banked
 10199  005BDE  51CC               	movf	(___flge@ff2+3)& (0+255),w,b
 10200  005BE0  0100               	movlb	0	; () banked
 10201  005BE2  59C8               	subwfb	(___flge@ff1+3)& (0+255),w,b
 10202  005BE4  B0D8               	btfsc	status,0,c
 10203  005BE6  D002               	goto	l7112
 10204                           
 10205                           ; BSR set to: 0
 10206  005BE8  90D8               	bcf	status,0,c
 10207  005BEA  0012               	return	
 10208  005BEC                     l7112:
 10209                           
 10210                           ; BSR set to: 0
 10211  005BEC  80D8               	bsf	status,0,c
 10212                           
 10213                           ; BSR set to: 0
 10214  005BEE  0012               	return	
 10215  005BF0                     __end_of___flge:
 10216                           	opt stack 0
 10217                           tblptru	equ	0xFF8
 10218                           tblptrh	equ	0xFF7
 10219                           tblptrl	equ	0xFF6
 10220                           tablat	equ	0xFF5
 10221                           prodh	equ	0xFF4
 10222                           prodl	equ	0xFF3
 10223                           postinc0	equ	0xFEE
 10224                           wreg	equ	0xFE8
 10225                           postdec1	equ	0xFE5
 10226                           fsr1l	equ	0xFE1
 10227                           indf2	equ	0xFDF
 10228                           postinc2	equ	0xFDE
 10229                           postdec2	equ	0xFDD
 10230                           fsr2h	equ	0xFDA
 10231                           fsr2l	equ	0xFD9
 10232                           status	equ	0xFD8
 10233                           
 10234 ;; *************** function ___fldiv *****************
 10235 ;; Defined at:
 10236 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 10237 ;; Parameters:    Size  Location     Type
 10238 ;;  b               4   23[BANK0 ] unsigned char 
 10239 ;;  a               4   27[BANK0 ] unsigned char 
 10240 ;; Auto vars:     Size  Location     Type
 10241 ;;  grs             4   42[BANK0 ] unsigned long 
 10242 ;;  rem             4   36[BANK0 ] unsigned long 
 10243 ;;  new_exp         2   40[BANK0 ] int 
 10244 ;;  aexp            1   47[BANK0 ] unsigned char 
 10245 ;;  bexp            1   46[BANK0 ] unsigned char 
 10246 ;;  sign            1   35[BANK0 ] unsigned char 
 10247 ;; Return value:  Size  Location     Type
 10248 ;;                  4   23[BANK0 ] unsigned char 
 10249 ;; Registers used:
 10250 ;;		wreg, status,2, status,0
 10251 ;; Tracked objects:
 10252 ;;		On entry : 0/0
 10253 ;;		On exit  : 0/0
 10254 ;;		Unchanged: 0/0
 10255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10256 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10257 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10258 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10259 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10260 ;;Total ram usage:       25 bytes
 10261 ;; Hardware stack levels used:    1
 10262 ;; Hardware stack levels required when called:    4
 10263 ;; This function calls:
 10264 ;;		Nothing
 10265 ;; This function is called by:
 10266 ;;		_parallelo
 10267 ;;		_matematica
 10268 ;;		_asin
 10269 ;;		_atan
 10270 ;;		_sin
 10271 ;; This function uses a non-reentrant model
 10272 ;;
 10273                           
 10274                           	psect	text25
 10275  0042AE                     __ptext25:
 10276                           	opt stack 0
 10277  0042AE                     ___fldiv:
 10278                           	opt stack 22
 10279                           
 10280                           ; BSR set to: 0
 10281                           ;incstack = 0
 10282  0042AE  0100               	movlb	0	; () banked
 10283  0042B0  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10284  0042B2  0B80               	andlw	128
 10285  0042B4  0100               	movlb	0	; () banked
 10286  0042B6  6F83               	movwf	___fldiv@sign& (0+255),b
 10287  0042B8  0100               	movlb	0	; () banked
 10288  0042BA  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10289  0042BC  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
 10290  0042BE  0100               	movlb	0	; () banked
 10291  0042C0  6F8E               	movwf	___fldiv@bexp& (0+255),b
 10292                           
 10293                           ; BSR set to: 0
 10294  0042C2  0100               	movlb	0	; () banked
 10295  0042C4  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10296  0042C6  D002               	goto	l7232
 10297                           
 10298                           ; BSR set to: 0
 10299  0042C8  0100               	movlb	0	; () banked
 10300  0042CA  818E               	bsf	___fldiv@bexp& (0+255),0,b
 10301  0042CC                     l7232:
 10302                           
 10303                           ; BSR set to: 0
 10304  0042CC  0100               	movlb	0	; () banked
 10305  0042CE  518E               	movf	___fldiv@bexp& (0+255),w,b
 10306  0042D0  0100               	movlb	0	; () banked
 10307  0042D2  B4D8               	btfsc	status,2,c
 10308  0042D4  D012               	goto	l7242
 10309                           
 10310                           ; BSR set to: 0
 10311  0042D6  0100               	movlb	0	; () banked
 10312  0042D8  298E               	incf	___fldiv@bexp& (0+255),w,b
 10313  0042DA  A4D8               	btfss	status,2,c
 10314  0042DC  D009               	goto	l7238
 10315                           
 10316                           ; BSR set to: 0
 10317  0042DE  0E00               	movlw	0
 10318  0042E0  0100               	movlb	0	; () banked
 10319  0042E2  6F77               	movwf	___fldiv@b& (0+255),b
 10320  0042E4  0E00               	movlw	0
 10321  0042E6  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10322  0042E8  0E00               	movlw	0
 10323  0042EA  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10324  0042EC  0E00               	movlw	0
 10325  0042EE  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10326  0042F0                     l7238:
 10327                           
 10328                           ; BSR set to: 0
 10329  0042F0  0100               	movlb	0	; () banked
 10330  0042F2  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10331                           
 10332                           ; BSR set to: 0
 10333  0042F4  0E00               	movlw	0
 10334  0042F6  0100               	movlb	0	; () banked
 10335  0042F8  D008               	goto	L6
 10336  0042FA                     l7242:
 10337                           
 10338                           ; BSR set to: 0
 10339  0042FA  0E00               	movlw	0
 10340  0042FC  0100               	movlb	0	; () banked
 10341  0042FE  6F77               	movwf	___fldiv@b& (0+255),b
 10342  004300  0E00               	movlw	0
 10343  004302  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10344  004304  0E00               	movlw	0
 10345  004306  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10346  004308  0E00               	movlw	0
 10347  00430A                     L6:
 10348  00430A  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10349                           
 10350                           ; BSR set to: 0
 10351                           
 10352                           ; BSR set to: 0
 10353  00430C  0100               	movlb	0	; () banked
 10354  00430E  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10355  004310  0B80               	andlw	128
 10356  004312  0100               	movlb	0	; () banked
 10357  004314  1B83               	xorwf	___fldiv@sign& (0+255),f,b
 10358                           
 10359                           ; BSR set to: 0
 10360  004316  0100               	movlb	0	; () banked
 10361  004318  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10362  00431A  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
 10363  00431C  0100               	movlb	0	; () banked
 10364  00431E  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10365                           
 10366                           ; BSR set to: 0
 10367  004320  0100               	movlb	0	; () banked
 10368  004322  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
 10369  004324  D002               	goto	l7252
 10370                           
 10371                           ; BSR set to: 0
 10372  004326  0100               	movlb	0	; () banked
 10373  004328  818F               	bsf	___fldiv@aexp& (0+255),0,b
 10374  00432A                     l7252:
 10375                           
 10376                           ; BSR set to: 0
 10377  00432A  0100               	movlb	0	; () banked
 10378  00432C  518F               	movf	___fldiv@aexp& (0+255),w,b
 10379  00432E  0100               	movlb	0	; () banked
 10380  004330  B4D8               	btfsc	status,2,c
 10381  004332  D012               	goto	l7262
 10382                           
 10383                           ; BSR set to: 0
 10384  004334  0100               	movlb	0	; () banked
 10385  004336  298F               	incf	___fldiv@aexp& (0+255),w,b
 10386  004338  A4D8               	btfss	status,2,c
 10387  00433A  D009               	goto	l7258
 10388                           
 10389                           ; BSR set to: 0
 10390  00433C  0E00               	movlw	0
 10391  00433E  0100               	movlb	0	; () banked
 10392  004340  6F7B               	movwf	___fldiv@a& (0+255),b
 10393  004342  0E00               	movlw	0
 10394  004344  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10395  004346  0E00               	movlw	0
 10396  004348  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10397  00434A  0E00               	movlw	0
 10398  00434C  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10399  00434E                     l7258:
 10400                           
 10401                           ; BSR set to: 0
 10402  00434E  0100               	movlb	0	; () banked
 10403  004350  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
 10404                           
 10405                           ; BSR set to: 0
 10406  004352  0E00               	movlw	0
 10407  004354  0100               	movlb	0	; () banked
 10408  004356  D008               	goto	L7
 10409  004358                     l7262:
 10410                           
 10411                           ; BSR set to: 0
 10412  004358  0E00               	movlw	0
 10413  00435A  0100               	movlb	0	; () banked
 10414  00435C  6F7B               	movwf	___fldiv@a& (0+255),b
 10415  00435E  0E00               	movlw	0
 10416  004360  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10417  004362  0E00               	movlw	0
 10418  004364  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10419  004366  0E00               	movlw	0
 10420  004368                     L7:
 10421  004368  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10422                           
 10423                           ; BSR set to: 0
 10424                           
 10425                           ; BSR set to: 0
 10426  00436A  0100               	movlb	0	; () banked
 10427  00436C  517B               	movf	___fldiv@a& (0+255),w,b
 10428  00436E  0100               	movlb	0	; () banked
 10429  004370  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10430  004372  0100               	movlb	0	; () banked
 10431  004374  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10432  004376  0100               	movlb	0	; () banked
 10433  004378  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10434  00437A  A4D8               	btfss	status,2,c
 10435  00437C  D017               	goto	l7274
 10436                           
 10437                           ; BSR set to: 0
 10438  00437E  0E00               	movlw	0
 10439  004380  0100               	movlb	0	; () banked
 10440  004382  6F77               	movwf	___fldiv@b& (0+255),b
 10441  004384  0E00               	movlw	0
 10442  004386  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10443  004388  0E00               	movlw	0
 10444  00438A  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10445  00438C  0E00               	movlw	0
 10446  00438E  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10447                           
 10448                           ; BSR set to: 0
 10449  004390  0100               	movlb	0	; () banked
 10450  004392  0E80               	movlw	128
 10451  004394  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10452  004396  0E7F               	movlw	127
 10453  004398  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10454                           
 10455                           ; BSR set to: 0
 10456  00439A  C077  F077         	movff	___fldiv@b,?___fldiv
 10457  00439E  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10458  0043A2  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10459  0043A6  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10460                           
 10461                           ; BSR set to: 0
 10462  0043AA  0012               	return	
 10463  0043AC                     l7274:
 10464                           
 10465                           ; BSR set to: 0
 10466  0043AC  0100               	movlb	0	; () banked
 10467  0043AE  518E               	movf	___fldiv@bexp& (0+255),w,b
 10468  0043B0  0100               	movlb	0	; () banked
 10469  0043B2  A4D8               	btfss	status,2,c
 10470  0043B4  D012               	goto	l7282
 10471                           
 10472                           ; BSR set to: 0
 10473  0043B6  0E00               	movlw	0
 10474  0043B8  0100               	movlb	0	; () banked
 10475  0043BA  6F77               	movwf	___fldiv@b& (0+255),b
 10476  0043BC  0E00               	movlw	0
 10477  0043BE  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10478  0043C0  0E00               	movlw	0
 10479  0043C2  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10480  0043C4  0E00               	movlw	0
 10481  0043C6  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10482                           
 10483                           ; BSR set to: 0
 10484  0043C8  C077  F077         	movff	___fldiv@b,?___fldiv
 10485  0043CC  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10486  0043D0  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10487  0043D4  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10488                           
 10489                           ; BSR set to: 0
 10490  0043D8  0012               	return	
 10491  0043DA                     l7282:
 10492                           
 10493                           ; BSR set to: 0
 10494  0043DA  0100               	movlb	0	; () banked
 10495  0043DC  518F               	movf	___fldiv@aexp& (0+255),w,b
 10496  0043DE  0100               	movlb	0	; () banked
 10497  0043E0  6F7F               	movwf	??___fldiv& (0+255),b
 10498  0043E2  6B80               	clrf	(??___fldiv+1)& (0+255),b
 10499  0043E4  0100               	movlb	0	; () banked
 10500  0043E6  1F7F               	comf	??___fldiv& (0+255),f,b
 10501  0043E8  1F80               	comf	(??___fldiv+1)& (0+255),f,b
 10502  0043EA  4B7F               	infsnz	??___fldiv& (0+255),f,b
 10503  0043EC  2B80               	incf	(??___fldiv+1)& (0+255),f,b
 10504  0043EE  0100               	movlb	0	; () banked
 10505  0043F0  518E               	movf	___fldiv@bexp& (0+255),w,b
 10506  0043F2  0100               	movlb	0	; () banked
 10507  0043F4  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10508  0043F6  6B82               	clrf	(??___fldiv+3)& (0+255),b
 10509  0043F8  0100               	movlb	0	; () banked
 10510  0043FA  517F               	movf	??___fldiv& (0+255),w,b
 10511  0043FC  0100               	movlb	0	; () banked
 10512  0043FE  2781               	addwf	(??___fldiv+2)& (0+255),f,b
 10513  004400  0100               	movlb	0	; () banked
 10514  004402  5180               	movf	(??___fldiv+1)& (0+255),w,b
 10515  004404  0100               	movlb	0	; () banked
 10516  004406  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
 10517  004408  0E7F               	movlw	127
 10518  00440A  0100               	movlb	0	; () banked
 10519  00440C  2581               	addwf	(??___fldiv+2)& (0+255),w,b
 10520  00440E  0100               	movlb	0	; () banked
 10521  004410  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10522  004412  0E00               	movlw	0
 10523  004414  0100               	movlb	0	; () banked
 10524  004416  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
 10525  004418  0100               	movlb	0	; () banked
 10526  00441A  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10527                           
 10528                           ; BSR set to: 0
 10529  00441C  C077  F084         	movff	___fldiv@b,___fldiv@rem
 10530  004420  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 10531  004424  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 10532  004428  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 10533                           
 10534                           ; BSR set to: 0
 10535  00442C  0E00               	movlw	0
 10536  00442E  0100               	movlb	0	; () banked
 10537  004430  6F77               	movwf	___fldiv@b& (0+255),b
 10538  004432  0E00               	movlw	0
 10539  004434  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10540  004436  0E00               	movlw	0
 10541  004438  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10542  00443A  0E00               	movlw	0
 10543  00443C  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10544                           
 10545                           ; BSR set to: 0
 10546  00443E  0E00               	movlw	0
 10547  004440  0100               	movlb	0	; () banked
 10548  004442  6F8A               	movwf	___fldiv@grs& (0+255),b
 10549  004444  0E00               	movlw	0
 10550  004446  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
 10551  004448  0E00               	movlw	0
 10552  00444A  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
 10553  00444C  0E00               	movlw	0
 10554  00444E  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
 10555                           
 10556                           ; BSR set to: 0
 10557  004450  0E00               	movlw	0
 10558  004452  0100               	movlb	0	; () banked
 10559  004454  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10560  004456  D042               	goto	l1411
 10561  004458                     l7292:
 10562                           
 10563                           ; BSR set to: 0
 10564  004458  0100               	movlb	0	; () banked
 10565  00445A  518F               	movf	___fldiv@aexp& (0+255),w,b
 10566  00445C  0100               	movlb	0	; () banked
 10567  00445E  B4D8               	btfsc	status,2,c
 10568  004460  D017               	goto	l7300
 10569                           
 10570                           ; BSR set to: 0
 10571  004462  0100               	movlb	0	; () banked
 10572  004464  90D8               	bcf	status,0,c
 10573  004466  3784               	rlcf	___fldiv@rem& (0+255),f,b
 10574  004468  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10575  00446A  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10576  00446C  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10577  00446E  0100               	movlb	0	; () banked
 10578  004470  90D8               	bcf	status,0,c
 10579  004472  3777               	rlcf	___fldiv@b& (0+255),f,b
 10580  004474  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10581  004476  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10582  004478  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10583                           
 10584                           ; BSR set to: 0
 10585  00447A  0100               	movlb	0	; () banked
 10586  00447C  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10587  00447E  D002               	goto	l1414
 10588                           
 10589                           ; BSR set to: 0
 10590  004480  0100               	movlb	0	; () banked
 10591  004482  8177               	bsf	___fldiv@b& (0+255),0,b
 10592  004484                     l1414:
 10593                           
 10594                           ; BSR set to: 0
 10595  004484  0100               	movlb	0	; () banked
 10596  004486  90D8               	bcf	status,0,c
 10597  004488  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10598  00448A  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10599  00448C  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10600  00448E  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10601  004490                     l7300:
 10602                           
 10603                           ; BSR set to: 0
 10604  004490  0100               	movlb	0	; () banked
 10605  004492  517B               	movf	___fldiv@a& (0+255),w,b
 10606  004494  0100               	movlb	0	; () banked
 10607  004496  5D84               	subwf	___fldiv@rem& (0+255),w,b
 10608  004498  0100               	movlb	0	; () banked
 10609  00449A  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10610  00449C  0100               	movlb	0	; () banked
 10611  00449E  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10612  0044A0  0100               	movlb	0	; () banked
 10613  0044A2  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10614  0044A4  0100               	movlb	0	; () banked
 10615  0044A6  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10616  0044A8  0100               	movlb	0	; () banked
 10617  0044AA  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10618  0044AC  0100               	movlb	0	; () banked
 10619  0044AE  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10620  0044B0  A0D8               	btfss	status,0,c
 10621  0044B2  D012               	goto	l7306
 10622                           
 10623                           ; BSR set to: 0
 10624  0044B4  0100               	movlb	0	; () banked
 10625  0044B6  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10626                           
 10627                           ; BSR set to: 0
 10628  0044B8  0100               	movlb	0	; () banked
 10629  0044BA  517B               	movf	___fldiv@a& (0+255),w,b
 10630  0044BC  0100               	movlb	0	; () banked
 10631  0044BE  5F84               	subwf	___fldiv@rem& (0+255),f,b
 10632  0044C0  0100               	movlb	0	; () banked
 10633  0044C2  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10634  0044C4  0100               	movlb	0	; () banked
 10635  0044C6  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10636  0044C8  0100               	movlb	0	; () banked
 10637  0044CA  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10638  0044CC  0100               	movlb	0	; () banked
 10639  0044CE  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10640  0044D0  0100               	movlb	0	; () banked
 10641  0044D2  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10642  0044D4  0100               	movlb	0	; () banked
 10643  0044D6  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10644  0044D8                     l7306:
 10645                           
 10646                           ; BSR set to: 0
 10647  0044D8  0100               	movlb	0	; () banked
 10648  0044DA  2B8F               	incf	___fldiv@aexp& (0+255),f,b
 10649  0044DC                     l1411:
 10650                           
 10651                           ; BSR set to: 0
 10652  0044DC  0E19               	movlw	25
 10653  0044DE  0100               	movlb	0	; () banked
 10654  0044E0  658F               	cpfsgt	___fldiv@aexp& (0+255),b
 10655  0044E2  D7BA               	goto	l7292
 10656                           
 10657                           ; BSR set to: 0
 10658                           
 10659                           ; BSR set to: 0
 10660  0044E4  0100               	movlb	0	; () banked
 10661  0044E6  5184               	movf	___fldiv@rem& (0+255),w,b
 10662  0044E8  0100               	movlb	0	; () banked
 10663  0044EA  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10664  0044EC  0100               	movlb	0	; () banked
 10665  0044EE  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10666  0044F0  0100               	movlb	0	; () banked
 10667  0044F2  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10668  0044F4  B4D8               	btfsc	status,2,c
 10669  0044F6  D018               	goto	l7318
 10670                           
 10671                           ; BSR set to: 0
 10672  0044F8  0100               	movlb	0	; () banked
 10673  0044FA  818A               	bsf	___fldiv@grs& (0+255),0,b
 10674                           
 10675                           ; BSR set to: 0
 10676  0044FC  D015               	goto	l7318
 10677  0044FE                     l7312:
 10678                           
 10679                           ; BSR set to: 0
 10680  0044FE  0100               	movlb	0	; () banked
 10681  004500  90D8               	bcf	status,0,c
 10682  004502  3777               	rlcf	___fldiv@b& (0+255),f,b
 10683  004504  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10684  004506  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10685  004508  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10686                           
 10687                           ; BSR set to: 0
 10688  00450A  0100               	movlb	0	; () banked
 10689  00450C  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10690  00450E  D002               	goto	l1420
 10691                           
 10692                           ; BSR set to: 0
 10693  004510  0100               	movlb	0	; () banked
 10694  004512  8177               	bsf	___fldiv@b& (0+255),0,b
 10695  004514                     l1420:
 10696                           
 10697                           ; BSR set to: 0
 10698  004514  0100               	movlb	0	; () banked
 10699  004516  90D8               	bcf	status,0,c
 10700  004518  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10701  00451A  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10702  00451C  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10703  00451E  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10704  004520  0100               	movlb	0	; () banked
 10705  004522  0788               	decf	___fldiv@new_exp& (0+255),f,b
 10706  004524  A0D8               	btfss	status,0,c
 10707  004526  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10708  004528                     l7318:
 10709                           
 10710                           ; BSR set to: 0
 10711  004528  0100               	movlb	0	; () banked
 10712  00452A  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10713  00452C  D7E8               	goto	l7312
 10714                           
 10715                           ; BSR set to: 0
 10716                           
 10717                           ; BSR set to: 0
 10718  00452E  0E00               	movlw	0
 10719  004530  0100               	movlb	0	; () banked
 10720  004532  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10721                           
 10722                           ; BSR set to: 0
 10723  004534  0100               	movlb	0	; () banked
 10724  004536  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10725  004538  D024               	goto	l1422
 10726                           
 10727                           ; BSR set to: 0
 10728  00453A  0EFF               	movlw	255
 10729  00453C  0100               	movlb	0	; () banked
 10730  00453E  158A               	andwf	___fldiv@grs& (0+255),w,b
 10731  004540  0100               	movlb	0	; () banked
 10732  004542  6F7F               	movwf	??___fldiv& (0+255),b
 10733  004544  0EFF               	movlw	255
 10734  004546  0100               	movlb	0	; () banked
 10735  004548  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10736  00454A  0100               	movlb	0	; () banked
 10737  00454C  6F80               	movwf	(??___fldiv+1)& (0+255),b
 10738  00454E  0EFF               	movlw	255
 10739  004550  0100               	movlb	0	; () banked
 10740  004552  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10741  004554  0100               	movlb	0	; () banked
 10742  004556  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10743  004558  0E7F               	movlw	127
 10744  00455A  0100               	movlb	0	; () banked
 10745  00455C  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10746  00455E  0100               	movlb	0	; () banked
 10747  004560  6F82               	movwf	(??___fldiv+3)& (0+255),b
 10748  004562  0100               	movlb	0	; () banked
 10749  004564  517F               	movf	??___fldiv& (0+255),w,b
 10750  004566  0100               	movlb	0	; () banked
 10751  004568  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
 10752  00456A  0100               	movlb	0	; () banked
 10753  00456C  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
 10754  00456E  0100               	movlb	0	; () banked
 10755  004570  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
 10756  004572  A4D8               	btfss	status,2,c
 10757  004574  D003               	goto	l7328
 10758                           
 10759                           ; BSR set to: 0
 10760                           
 10761                           ; BSR set to: 0
 10762  004576  0100               	movlb	0	; () banked
 10763  004578  A177               	btfss	___fldiv@b& (0+255),0,b
 10764  00457A  D003               	goto	l1422
 10765  00457C                     l7328:
 10766                           
 10767                           ; BSR set to: 0
 10768  00457C  0E01               	movlw	1
 10769  00457E  0100               	movlb	0	; () banked
 10770  004580  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10771  004582                     l1422:
 10772                           
 10773                           ; BSR set to: 0
 10774  004582  0100               	movlb	0	; () banked
 10775  004584  518F               	movf	___fldiv@aexp& (0+255),w,b
 10776  004586  0100               	movlb	0	; () banked
 10777  004588  B4D8               	btfsc	status,2,c
 10778  00458A  D023               	goto	l7338
 10779                           
 10780                           ; BSR set to: 0
 10781  00458C  0E01               	movlw	1
 10782  00458E  0100               	movlb	0	; () banked
 10783  004590  2777               	addwf	___fldiv@b& (0+255),f,b
 10784  004592  0E00               	movlw	0
 10785  004594  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10786  004596  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10787  004598  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10788                           
 10789                           ; BSR set to: 0
 10790  00459A  0100               	movlb	0	; () banked
 10791  00459C  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
 10792  00459E  D019               	goto	l7338
 10793                           
 10794                           ; BSR set to: 0
 10795  0045A0  C077  F07F         	movff	___fldiv@b,??___fldiv
 10796  0045A4  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
 10797  0045A8  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
 10798  0045AC  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
 10799  0045B0  0100               	movlb	0	; () banked
 10800  0045B2  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
 10801  0045B4  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
 10802  0045B6  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
 10803  0045B8  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
 10804  0045BA  337F               	rrcf	??___fldiv& (0+255),f,b
 10805  0045BC  C07F  F077         	movff	??___fldiv,___fldiv@b
 10806  0045C0  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
 10807  0045C4  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
 10808  0045C8  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
 10809                           
 10810                           ; BSR set to: 0
 10811  0045CC  0100               	movlb	0	; () banked
 10812  0045CE  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
 10813  0045D0  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10814  0045D2                     l7338:
 10815                           
 10816                           ; BSR set to: 0
 10817  0045D2  0100               	movlb	0	; () banked
 10818  0045D4  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10819  0045D6  D014               	goto	l7342
 10820  0045D8  0100               	movlb	0	; () banked
 10821  0045DA  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10822  0045DC  E104               	bnz	u9680
 10823  0045DE  0100               	movlb	0	; () banked
 10824  0045E0  2988               	incf	___fldiv@new_exp& (0+255),w,b
 10825  0045E2  A0D8               	btfss	status,0,c
 10826  0045E4  D00D               	goto	l7342
 10827  0045E6                     u9680:
 10828                           
 10829                           ; BSR set to: 0
 10830  0045E6  0E00               	movlw	0
 10831  0045E8  0100               	movlb	0	; () banked
 10832  0045EA  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10833  0045EC  6988               	setf	___fldiv@new_exp& (0+255),b
 10834  0045EE  0E00               	movlw	0
 10835  0045F0  0100               	movlb	0	; () banked
 10836  0045F2  6F77               	movwf	___fldiv@b& (0+255),b
 10837  0045F4  0E00               	movlw	0
 10838  0045F6  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10839  0045F8  0E00               	movlw	0
 10840  0045FA  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10841  0045FC  0E00               	movlw	0
 10842  0045FE  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10843  004600                     l7342:
 10844                           
 10845                           ; BSR set to: 0
 10846  004600  0100               	movlb	0	; () banked
 10847  004602  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10848  004604  D007               	goto	l7344
 10849  004606  0100               	movlb	0	; () banked
 10850  004608  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10851  00460A  E115               	bnz	l7346
 10852  00460C  0100               	movlb	0	; () banked
 10853  00460E  0588               	decf	___fldiv@new_exp& (0+255),w,b
 10854  004610  B0D8               	btfsc	status,0,c
 10855  004612  D011               	goto	l7346
 10856  004614                     l7344:
 10857                           
 10858                           ; BSR set to: 0
 10859  004614  0E00               	movlw	0
 10860  004616  0100               	movlb	0	; () banked
 10861  004618  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10862  00461A  0E00               	movlw	0
 10863  00461C  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10864  00461E  0E00               	movlw	0
 10865  004620  0100               	movlb	0	; () banked
 10866  004622  6F77               	movwf	___fldiv@b& (0+255),b
 10867  004624  0E00               	movlw	0
 10868  004626  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10869  004628  0E00               	movlw	0
 10870  00462A  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10871  00462C  0E00               	movlw	0
 10872  00462E  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10873  004630  0E00               	movlw	0
 10874  004632  0100               	movlb	0	; () banked
 10875  004634  6F83               	movwf	___fldiv@sign& (0+255),b
 10876  004636                     l7346:
 10877                           
 10878                           ; BSR set to: 0
 10879  004636  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
 10880                           
 10881                           ; BSR set to: 0
 10882  00463A  0100               	movlb	0	; () banked
 10883  00463C  A18E               	btfss	___fldiv@bexp& (0+255),0,b
 10884  00463E  D003               	goto	l7352
 10885                           
 10886                           ; BSR set to: 0
 10887  004640  0100               	movlb	0	; () banked
 10888  004642  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10889  004644  D002               	goto	l7354
 10890  004646                     l7352:
 10891                           
 10892                           ; BSR set to: 0
 10893  004646  0100               	movlb	0	; () banked
 10894  004648  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
 10895  00464A                     l7354:
 10896                           
 10897                           ; BSR set to: 0
 10898  00464A  0100               	movlb	0	; () banked
 10899  00464C  90D8               	bcf	status,0,c
 10900  00464E  318E               	rrcf	___fldiv@bexp& (0+255),w,b
 10901  004650  0100               	movlb	0	; () banked
 10902  004652  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10903                           
 10904                           ; BSR set to: 0
 10905  004654  0100               	movlb	0	; () banked
 10906  004656  5183               	movf	___fldiv@sign& (0+255),w,b
 10907  004658  0100               	movlb	0	; () banked
 10908  00465A  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10909                           
 10910                           ; BSR set to: 0
 10911  00465C  C077  F077         	movff	___fldiv@b,?___fldiv
 10912  004660  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10913  004664  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10914  004668  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10915  00466C  0012               	return	
 10916  00466E                     __end_of___fldiv:
 10917                           	opt stack 0
 10918                           tblptru	equ	0xFF8
 10919                           tblptrh	equ	0xFF7
 10920                           tblptrl	equ	0xFF6
 10921                           tablat	equ	0xFF5
 10922                           prodh	equ	0xFF4
 10923                           prodl	equ	0xFF3
 10924                           postinc0	equ	0xFEE
 10925                           wreg	equ	0xFE8
 10926                           postdec1	equ	0xFE5
 10927                           fsr1l	equ	0xFE1
 10928                           indf2	equ	0xFDF
 10929                           postinc2	equ	0xFDE
 10930                           postdec2	equ	0xFDD
 10931                           fsr2h	equ	0xFDA
 10932                           fsr2l	equ	0xFD9
 10933                           status	equ	0xFD8
 10934                           
 10935 ;; *************** function _delay_s *****************
 10936 ;; Defined at:
 10937 ;;		line 102 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 10938 ;; Parameters:    Size  Location     Type
 10939 ;;  value_s         1    wreg     unsigned char 
 10940 ;; Auto vars:     Size  Location     Type
 10941 ;;  value_s         1   31[BANK0 ] unsigned char 
 10942 ;;  repeat_loop     1   32[BANK0 ] unsigned char 
 10943 ;; Return value:  Size  Location     Type
 10944 ;;		None               void
 10945 ;; Registers used:
 10946 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10947 ;; Tracked objects:
 10948 ;;		On entry : 0/0
 10949 ;;		On exit  : 0/0
 10950 ;;		Unchanged: 0/0
 10951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10953 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10955 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10956 ;;Total ram usage:        2 bytes
 10957 ;; Hardware stack levels used:    1
 10958 ;; Hardware stack levels required when called:    6
 10959 ;; This function calls:
 10960 ;;		_delay_ms
 10961 ;; This function is called by:
 10962 ;;		_park_routine
 10963 ;; This function uses a non-reentrant model
 10964 ;;
 10965                           
 10966                           	psect	text26
 10967  0066A0                     __ptext26:
 10968                           	opt stack 0
 10969  0066A0                     _delay_s:
 10970                           	opt stack 23
 10971                           
 10972                           ; BSR set to: 0
 10973                           ;incstack = 0
 10974                           ;delay_s@value_s stored from wreg
 10975  0066A0  0100               	movlb	0	; () banked
 10976  0066A2  6F7F               	movwf	delay_s@value_s& (0+255),b
 10977                           
 10978                           ;src\delay.c: 104: unsigned char repeat_loop;
 10979                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10980  0066A4  0E00               	movlw	0
 10981  0066A6  0100               	movlb	0	; () banked
 10982  0066A8  6F80               	movwf	delay_s@repeat_loop& (0+255),b
 10983  0066AA  D009               	goto	l7978
 10984  0066AC                     l7974:
 10985                           
 10986                           ; BSR set to: 0
 10987                           ;src\delay.c: 107: delay_ms (1000);
 10988  0066AC  0E03               	movlw	3
 10989  0066AE  0100               	movlb	0	; () banked
 10990  0066B0  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10991  0066B2  0EE8               	movlw	232
 10992  0066B4  6F7D               	movwf	delay_ms@value_ms& (0+255),b
 10993  0066B6  ECE6  F032         	call	_delay_ms	;wreg free
 10994  0066BA  0100               	movlb	0	; () banked
 10995  0066BC  2B80               	incf	delay_s@repeat_loop& (0+255),f,b
 10996  0066BE                     l7978:
 10997                           
 10998                           ; BSR set to: 0
 10999  0066BE  0100               	movlb	0	; () banked
 11000  0066C0  517F               	movf	delay_s@value_s& (0+255),w,b
 11001  0066C2  0100               	movlb	0	; () banked
 11002  0066C4  5D80               	subwf	delay_s@repeat_loop& (0+255),w,b
 11003  0066C6  B0D8               	btfsc	status,0,c
 11004  0066C8  0012               	return	
 11005  0066CA  D7F0               	goto	l7974
 11006  0066CC                     __end_of_delay_s:
 11007                           	opt stack 0
 11008                           tblptru	equ	0xFF8
 11009                           tblptrh	equ	0xFF7
 11010                           tblptrl	equ	0xFF6
 11011                           tablat	equ	0xFF5
 11012                           prodh	equ	0xFF4
 11013                           prodl	equ	0xFF3
 11014                           postinc0	equ	0xFEE
 11015                           wreg	equ	0xFE8
 11016                           postdec1	equ	0xFE5
 11017                           fsr1l	equ	0xFE1
 11018                           indf2	equ	0xFDF
 11019                           postinc2	equ	0xFDE
 11020                           postdec2	equ	0xFDD
 11021                           fsr2h	equ	0xFDA
 11022                           fsr2l	equ	0xFD9
 11023                           status	equ	0xFD8
 11024                           
 11025 ;; *************** function _delay_ms *****************
 11026 ;; Defined at:
 11027 ;;		line 61 in file "../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
 11028 ;; Parameters:    Size  Location     Type
 11029 ;;  value_ms        2   29[BANK0 ] unsigned int 
 11030 ;; Auto vars:     Size  Location     Type
 11031 ;;		None
 11032 ;; Return value:  Size  Location     Type
 11033 ;;		None               void
 11034 ;; Registers used:
 11035 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11036 ;; Tracked objects:
 11037 ;;		On entry : 0/0
 11038 ;;		On exit  : 0/0
 11039 ;;		Unchanged: 0/0
 11040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11041 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11044 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11045 ;;Total ram usage:        2 bytes
 11046 ;; Hardware stack levels used:    1
 11047 ;; Hardware stack levels required when called:    5
 11048 ;; This function calls:
 11049 ;;		___wmul
 11050 ;; This function is called by:
 11051 ;;		_delay_s
 11052 ;;		_main
 11053 ;;		_park_routine
 11054 ;; This function uses a non-reentrant model
 11055 ;;
 11056                           
 11057                           	psect	text27
 11058  0065CC                     __ptext27:
 11059                           	opt stack 0
 11060  0065CC                     _delay_ms:
 11061                           	opt stack 23
 11062                           
 11063                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 11064                           
 11065                           ; BSR set to: 0
 11066                           ;incstack = 0
 11067  0065CC  C0E8  F077         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 11068  0065D0  0100               	movlb	0	; () banked
 11069  0065D2  6B78               	clrf	(___wmul@multiplier+1)& (0+255),b
 11070  0065D4  C07D  F079         	movff	delay_ms@value_ms,___wmul@multiplicand
 11071  0065D8  C07E  F07A         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 11072  0065DC  EC1F  F033         	call	___wmul	;wreg free
 11073  0065E0  C077  F0E0         	movff	?___wmul,_clock_counter_reference	;volatile
 11074  0065E4  C078  F0E1         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 11075                           
 11076                           ;src\delay.c: 75: while (clock_counter_reference) {
 11077  0065E8  D007               	goto	l569
 11078  0065EA                     l7824:
 11079                           
 11080                           ;src\delay.c: 85: _delay(240);
 11081  0065EA  0E50               	movlw	80
 11082  0065EC                     u11737:
 11083  0065EC  2EE8               	decfsz	wreg,f,c
 11084  0065EE  D7FE               	goto	u11737
 11085                           
 11086                           ;src\delay.c: 88: clock_counter_reference--;
 11087  0065F0  0100               	movlb	0	; () banked
 11088  0065F2  07E0               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 11089  0065F4  A0D8               	btfss	status,0,c
 11090  0065F6  07E1               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 11091  0065F8                     l569:
 11092  0065F8  0100               	movlb	0	; () banked
 11093  0065FA  51E0               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 11094  0065FC  0100               	movlb	0	; () banked
 11095  0065FE  11E1               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 11096  006600  B4D8               	btfsc	status,2,c
 11097  006602  0012               	return	
 11098  006604  D7F2               	goto	l7824
 11099  006606                     __end_of_delay_ms:
 11100                           	opt stack 0
 11101                           tblptru	equ	0xFF8
 11102                           tblptrh	equ	0xFF7
 11103                           tblptrl	equ	0xFF6
 11104                           tablat	equ	0xFF5
 11105                           prodh	equ	0xFF4
 11106                           prodl	equ	0xFF3
 11107                           postinc0	equ	0xFEE
 11108                           wreg	equ	0xFE8
 11109                           postdec1	equ	0xFE5
 11110                           fsr1l	equ	0xFE1
 11111                           indf2	equ	0xFDF
 11112                           postinc2	equ	0xFDE
 11113                           postdec2	equ	0xFDD
 11114                           fsr2h	equ	0xFDA
 11115                           fsr2l	equ	0xFD9
 11116                           status	equ	0xFD8
 11117                           
 11118 ;; *************** function ___wmul *****************
 11119 ;; Defined at:
 11120 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 11121 ;; Parameters:    Size  Location     Type
 11122 ;;  multiplier      2   23[BANK0 ] unsigned int 
 11123 ;;  multiplicand    2   25[BANK0 ] unsigned int 
 11124 ;; Auto vars:     Size  Location     Type
 11125 ;;  product         2   27[BANK0 ] unsigned int 
 11126 ;; Return value:  Size  Location     Type
 11127 ;;                  2   23[BANK0 ] unsigned int 
 11128 ;; Registers used:
 11129 ;;		wreg, status,2, status,0, prodl, prodh
 11130 ;; Tracked objects:
 11131 ;;		On entry : 0/0
 11132 ;;		On exit  : 0/0
 11133 ;;		Unchanged: 0/0
 11134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11135 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11136 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11138 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11139 ;;Total ram usage:        6 bytes
 11140 ;; Hardware stack levels used:    1
 11141 ;; Hardware stack levels required when called:    4
 11142 ;; This function calls:
 11143 ;;		Nothing
 11144 ;; This function is called by:
 11145 ;;		_delay_ms
 11146 ;; This function uses a non-reentrant model
 11147 ;;
 11148                           
 11149                           	psect	text28
 11150  00663E                     __ptext28:
 11151                           	opt stack 0
 11152  00663E                     ___wmul:
 11153                           	opt stack 23
 11154                           
 11155                           ; BSR set to: 0
 11156                           ;incstack = 0
 11157  00663E  0100               	movlb	0	; () banked
 11158  006640  5177               	movf	___wmul@multiplier& (0+255),w,b
 11159  006642  0100               	movlb	0	; () banked
 11160  006644  0379               	mulwf	___wmul@multiplicand& (0+255),b
 11161  006646  CFF3 F07B          	movff	prodl,___wmul@product
 11162  00664A  CFF4 F07C          	movff	prodh,___wmul@product+1
 11163  00664E  0100               	movlb	0	; () banked
 11164  006650  5177               	movf	___wmul@multiplier& (0+255),w,b
 11165  006652  0100               	movlb	0	; () banked
 11166  006654  037A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11167  006656  50F3               	movf	prodl,w,c
 11168  006658  0100               	movlb	0	; () banked
 11169  00665A  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 11170  00665C  0100               	movlb	0	; () banked
 11171  00665E  5178               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11172  006660  0100               	movlb	0	; () banked
 11173  006662  0379               	mulwf	___wmul@multiplicand& (0+255),b
 11174  006664  50F3               	movf	prodl,w,c
 11175  006666  0100               	movlb	0	; () banked
 11176  006668  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 11177                           
 11178                           ; BSR set to: 0
 11179  00666A  C07B  F077         	movff	___wmul@product,?___wmul
 11180  00666E  C07C  F078         	movff	___wmul@product+1,?___wmul+1
 11181  006672  0012               	return	
 11182  006674                     __end_of___wmul:
 11183                           	opt stack 0
 11184                           tblptru	equ	0xFF8
 11185                           tblptrh	equ	0xFF7
 11186                           tblptrl	equ	0xFF6
 11187                           tablat	equ	0xFF5
 11188                           prodh	equ	0xFF4
 11189                           prodl	equ	0xFF3
 11190                           postinc0	equ	0xFEE
 11191                           wreg	equ	0xFE8
 11192                           postdec1	equ	0xFE5
 11193                           fsr1l	equ	0xFE1
 11194                           indf2	equ	0xFDF
 11195                           postinc2	equ	0xFDE
 11196                           postdec2	equ	0xFDD
 11197                           fsr2h	equ	0xFDA
 11198                           fsr2l	equ	0xFD9
 11199                           status	equ	0xFD8
 11200                           
 11201 ;; *************** function _configurations *****************
 11202 ;; Defined at:
 11203 ;;		line 513 in file "parcheggio.c"
 11204 ;; Parameters:    Size  Location     Type
 11205 ;;		None
 11206 ;; Auto vars:     Size  Location     Type
 11207 ;;		None
 11208 ;; Return value:  Size  Location     Type
 11209 ;;		None               void
 11210 ;; Registers used:
 11211 ;;		wreg, status,2, status,0, cstack
 11212 ;; Tracked objects:
 11213 ;;		On entry : 0/0
 11214 ;;		On exit  : 0/0
 11215 ;;		Unchanged: 0/0
 11216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11221 ;;Total ram usage:        0 bytes
 11222 ;; Hardware stack levels used:    1
 11223 ;; Hardware stack levels required when called:    6
 11224 ;; This function calls:
 11225 ;;		_CANInitialize
 11226 ;; This function is called by:
 11227 ;;		_main
 11228 ;; This function uses a non-reentrant model
 11229 ;;
 11230                           
 11231                           	psect	text29
 11232  006486                     __ptext29:
 11233                           	opt stack 0
 11234  006486                     _configurations:
 11235                           	opt stack 24
 11236                           
 11237                           ;parcheggio.c: 514: LATA = 0x00;
 11238                           
 11239                           ; BSR set to: 0
 11240                           ;incstack = 0
 11241  006486  0E00               	movlw	0
 11242  006488  6E89               	movwf	3977,c	;volatile
 11243                           
 11244                           ;parcheggio.c: 515: TRISA = 0b11110000;
 11245  00648A  0EF0               	movlw	240
 11246  00648C  6E92               	movwf	3986,c	;volatile
 11247                           
 11248                           ;parcheggio.c: 516: LATB = 0x00;
 11249  00648E  0E00               	movlw	0
 11250  006490  6E8A               	movwf	3978,c	;volatile
 11251                           
 11252                           ;parcheggio.c: 517: TRISB = 0b10001010;
 11253  006492  0E8A               	movlw	138
 11254  006494  6E93               	movwf	3987,c	;volatile
 11255                           
 11256                           ;parcheggio.c: 518: LATC = 0x00;
 11257  006496  0E00               	movlw	0
 11258  006498  6E8B               	movwf	3979,c	;volatile
 11259                           
 11260                           ;parcheggio.c: 519: TRISC = 0b11111111;
 11261  00649A  6894               	setf	3988,c	;volatile
 11262                           
 11263                           ;parcheggio.c: 521: ADCON1 = 0xFF;
 11264  00649C  68C1               	setf	4033,c	;volatile
 11265                           
 11266                           ;parcheggio.c: 522: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
 11267  00649E  0E06               	movlw	6
 11268  0064A0  0100               	movlb	0	; () banked
 11269  0064A2  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11270  0064A4  0E05               	movlw	5
 11271  0064A6  0100               	movlb	0	; () banked
 11272  0064A8  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
 11273  0064AA  0E01               	movlw	1
 11274  0064AC  0100               	movlb	0	; () banked
 11275  0064AE  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11276  0064B0  0E03               	movlw	3
 11277  0064B2  0100               	movlb	0	; () banked
 11278  0064B4  6F88               	movwf	CANInitialize@BRP& (0+255),b
 11279  0064B6  0E9D               	movlw	157
 11280  0064B8  0100               	movlb	0	; () banked
 11281  0064BA  6F89               	movwf	CANInitialize@flags& (0+255),b
 11282  0064BC  0E04               	movlw	4
 11283  0064BE  EC6D  F02B         	call	_CANInitialize
 11284                           
 11285                           ;parcheggio.c: 525: RCONbits.IPEN = 1;
 11286  0064C2  8ED0               	bsf	4048,7,c	;volatile
 11287                           
 11288                           ;parcheggio.c: 526: IPR3bits.RXB1IP = 0;
 11289  0064C4  92A5               	bcf	4005,1,c	;volatile
 11290                           
 11291                           ;parcheggio.c: 527: IPR3bits.RXB0IP = 0;
 11292  0064C6  90A5               	bcf	4005,0,c	;volatile
 11293                           
 11294                           ;parcheggio.c: 528: INTCON2bits.TMR0IP = 0;
 11295  0064C8  94F1               	bcf	intcon2,2,c	;volatile
 11296                           
 11297                           ;parcheggio.c: 531: PIR3bits.RXB1IF = 0;
 11298  0064CA  92A4               	bcf	4004,1,c	;volatile
 11299                           
 11300                           ;parcheggio.c: 532: PIR3bits.RXB0IF = 0;
 11301  0064CC  90A4               	bcf	4004,0,c	;volatile
 11302                           
 11303                           ;parcheggio.c: 533: INTCONbits.INT0IF = 0;
 11304  0064CE  92F2               	bcf	intcon,1,c	;volatile
 11305                           
 11306                           ;parcheggio.c: 534: INTCONbits.TMR0IF = 0;
 11307  0064D0  94F2               	bcf	intcon,2,c	;volatile
 11308                           
 11309                           ;parcheggio.c: 538: PIE3bits.RXB1IE = 1;
 11310  0064D2  82A3               	bsf	4003,1,c	;volatile
 11311                           
 11312                           ;parcheggio.c: 539: PIE3bits.RXB0IE = 1;
 11313  0064D4  80A3               	bsf	4003,0,c	;volatile
 11314                           
 11315                           ;parcheggio.c: 540: INTCONbits.TMR0IE = 1;
 11316  0064D6  8AF2               	bsf	intcon,5,c	;volatile
 11317                           
 11318                           ;parcheggio.c: 541: INTCONbits.INT0IE = 0;
 11319  0064D8  98F2               	bcf	intcon,4,c	;volatile
 11320                           
 11321                           ;parcheggio.c: 544: T0CON = 0x80;
 11322  0064DA  0E80               	movlw	128
 11323  0064DC  6ED5               	movwf	4053,c	;volatile
 11324                           
 11325                           ;parcheggio.c: 545: TMR0H = 0x34;
 11326  0064DE  0E34               	movlw	52
 11327  0064E0  6ED7               	movwf	4055,c	;volatile
 11328                           
 11329                           ;parcheggio.c: 546: TMR0L = 0xE0;
 11330  0064E2  0EE0               	movlw	224
 11331  0064E4  6ED6               	movwf	4054,c	;volatile
 11332                           
 11333                           ;parcheggio.c: 547: T3CON = 0x11;
 11334  0064E6  0E11               	movlw	17
 11335  0064E8  6EB1               	movwf	4017,c	;volatile
 11336                           
 11337                           ;parcheggio.c: 549: INTCON2bits.INTEDG0 = 1;
 11338  0064EA  8CF1               	bsf	intcon2,6,c	;volatile
 11339                           
 11340                           ;parcheggio.c: 550: INTCONbits.GIEL = 1;
 11341  0064EC  8CF2               	bsf	intcon,6,c	;volatile
 11342                           
 11343                           ;parcheggio.c: 551: INTCONbits.GIEH = 1;
 11344  0064EE  8EF2               	bsf	intcon,7,c	;volatile
 11345  0064F0  0012               	return		;funcret
 11346  0064F2                     __end_of_configurations:
 11347                           	opt stack 0
 11348                           tblptru	equ	0xFF8
 11349                           tblptrh	equ	0xFF7
 11350                           tblptrl	equ	0xFF6
 11351                           tablat	equ	0xFF5
 11352                           prodh	equ	0xFF4
 11353                           prodl	equ	0xFF3
 11354                           intcon	equ	0xFF2
 11355                           intcon2	equ	0xFF1
 11356                           postinc0	equ	0xFEE
 11357                           wreg	equ	0xFE8
 11358                           postdec1	equ	0xFE5
 11359                           fsr1l	equ	0xFE1
 11360                           indf2	equ	0xFDF
 11361                           postinc2	equ	0xFDE
 11362                           postdec2	equ	0xFDD
 11363                           fsr2h	equ	0xFDA
 11364                           fsr2l	equ	0xFD9
 11365                           status	equ	0xFD8
 11366                           
 11367 ;; *************** function _CANInitialize *****************
 11368 ;; Defined at:
 11369 ;;		line 218 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 11370 ;; Parameters:    Size  Location     Type
 11371 ;;  propSeg         1    wreg     unsigned char 
 11372 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
 11373 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
 11374 ;;  SJW             1   39[BANK0 ] unsigned char 
 11375 ;;  BRP             1   40[BANK0 ] unsigned char 
 11376 ;;  flags           1   41[BANK0 ] enum E16313
 11377 ;; Auto vars:     Size  Location     Type
 11378 ;;  propSeg         1   46[BANK0 ] unsigned char 
 11379 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
 11380 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
 11381 ;; Return value:  Size  Location     Type
 11382 ;;		None               void
 11383 ;; Registers used:
 11384 ;;		wreg, status,2, status,0, cstack
 11385 ;; Tracked objects:
 11386 ;;		On entry : 0/0
 11387 ;;		On exit  : 0/0
 11388 ;;		Unchanged: 0/0
 11389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11390 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11391 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11392 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11393 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11394 ;;Total ram usage:       12 bytes
 11395 ;; Hardware stack levels used:    1
 11396 ;; Hardware stack levels required when called:    5
 11397 ;; This function calls:
 11398 ;;		_CANOperationMode
 11399 ;;		_CANSetFilter
 11400 ;;		_CANSetMask
 11401 ;; This function is called by:
 11402 ;;		_configurations
 11403 ;; This function uses a non-reentrant model
 11404 ;;
 11405                           
 11406                           	psect	text30
 11407  0056DA                     __ptext30:
 11408                           	opt stack 0
 11409  0056DA                     _CANInitialize:
 11410                           	opt stack 24
 11411                           
 11412                           ;incstack = 0
 11413                           ;CANInitialize@propSeg stored from wreg
 11414  0056DA  0100               	movlb	0	; () banked
 11415  0056DC  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
 11416                           
 11417                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
 11418                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
 11419                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
 11420  0056DE  0E80               	movlw	128
 11421  0056E0  EC87  F033         	call	_CANOperationMode
 11422                           
 11423                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
 11424  0056E4  0E00               	movlw	0
 11425  0056E6  6E70               	movwf	3952,c	;volatile
 11426                           
 11427                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
 11428  0056E8  0E00               	movlw	0
 11429  0056EA  6E71               	movwf	3953,c	;volatile
 11430                           
 11431                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
 11432  0056EC  0E00               	movlw	0
 11433  0056EE  6E72               	movwf	3954,c	;volatile
 11434                           
 11435                           ;inc\CANlib.h: 229: SJW= SJW << 6;
 11436  0056F0  0100               	movlb	0	; () banked
 11437  0056F2  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
 11438  0056F4  42E8               	rrncf	wreg,f,c
 11439  0056F6  0BC0               	andlw	192
 11440  0056F8  0100               	movlb	0	; () banked
 11441  0056FA  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11442                           
 11443                           ; BSR set to: 0
 11444                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
 11445  0056FC  0100               	movlb	0	; () banked
 11446  0056FE  5187               	movf	CANInitialize@SJW& (0+255),w,b
 11447  005700  1270               	iorwf	3952,f,c	;volatile
 11448                           
 11449                           ; BSR set to: 0
 11450                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
 11451  005702  0100               	movlb	0	; () banked
 11452  005704  5188               	movf	CANInitialize@BRP& (0+255),w,b
 11453  005706  1270               	iorwf	3952,f,c	;volatile
 11454                           
 11455                           ; BSR set to: 0
 11456                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
 11457  005708  0100               	movlb	0	; () banked
 11458  00570A  518E               	movf	CANInitialize@propSeg& (0+255),w,b
 11459  00570C  1271               	iorwf	3953,f,c	;volatile
 11460                           
 11461                           ; BSR set to: 0
 11462                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
 11463  00570E  0100               	movlb	0	; () banked
 11464  005710  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
 11465  005712  42E8               	rrncf	wreg,f,c
 11466  005714  0BF8               	andlw	248
 11467  005716  0100               	movlb	0	; () banked
 11468  005718  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11469                           
 11470                           ; BSR set to: 0
 11471                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
 11472  00571A  0100               	movlb	0	; () banked
 11473  00571C  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
 11474  00571E  1271               	iorwf	3953,f,c	;volatile
 11475                           
 11476                           ; BSR set to: 0
 11477                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
 11478  005720  0100               	movlb	0	; () banked
 11479  005722  A589               	btfss	CANInitialize@flags& (0+255),2,b
 11480                           
 11481                           ; BSR set to: 0
 11482                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
 11483  005724  8C71               	bsf	3953,6,c	;volatile
 11484                           
 11485                           ; BSR set to: 0
 11486                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
 11487  005726  0100               	movlb	0	; () banked
 11488  005728  B189               	btfsc	CANInitialize@flags& (0+255),0,b
 11489                           
 11490                           ; BSR set to: 0
 11491                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
 11492  00572A  8E71               	bsf	3953,7,c	;volatile
 11493                           
 11494                           ; BSR set to: 0
 11495                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
 11496                           
 11497                           ; BSR set to: 0
 11498  00572C  0100               	movlb	0	; () banked
 11499  00572E  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
 11500  005730  1272               	iorwf	3954,f,c	;volatile
 11501                           
 11502                           ; BSR set to: 0
 11503                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
 11504  005732  0100               	movlb	0	; () banked
 11505  005734  B389               	btfsc	CANInitialize@flags& (0+255),1,b
 11506                           
 11507                           ; BSR set to: 0
 11508                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
 11509  005736  8C72               	bsf	3954,6,c	;volatile
 11510                           
 11511                           ; BSR set to: 0
 11512                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
 11513                           
 11514                           ; BSR set to: 0
 11515  005738  0100               	movlb	0	; () banked
 11516  00573A  5189               	movf	CANInitialize@flags& (0+255),w,b
 11517  00573C  0B60               	andlw	96
 11518  00573E  6E60               	movwf	3936,c	;volatile
 11519                           
 11520                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
 11521  005740  0100               	movlb	0	; () banked
 11522  005742  5189               	movf	CANInitialize@flags& (0+255),w,b
 11523  005744  0B10               	andlw	16
 11524  005746  0AFF               	xorlw	255
 11525  005748  B4D8               	btfsc	status,2,c
 11526                           
 11527                           ; BSR set to: 0
 11528                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
 11529  00574A  8460               	bsf	3936,2,c	;volatile
 11530                           
 11531                           ; BSR set to: 0
 11532                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
 11533  00574C  CF60 FF50          	movff	3936,3920	;volatile
 11534                           
 11535                           ; BSR set to: 0
 11536                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
 11537  005750  0E00               	movlw	0
 11538  005752  0100               	movlb	0	; () banked
 11539  005754  6F77               	movwf	CANSetMask@mask& (0+255),b
 11540  005756  0E00               	movlw	0
 11541  005758  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11542  00575A  0E00               	movlw	0
 11543  00575C  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11544  00575E  0E00               	movlw	0
 11545  005760  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11546  005762  0EF7               	movlw	247
 11547  005764  0100               	movlb	0	; () banked
 11548  005766  6F7B               	movwf	CANSetMask@type& (0+255),b
 11549  005768  0E01               	movlw	1
 11550  00576A  EC37  F023         	call	_CANSetMask
 11551                           
 11552                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
 11553  00576E  0E00               	movlw	0
 11554  005770  0100               	movlb	0	; () banked
 11555  005772  6F77               	movwf	CANSetMask@mask& (0+255),b
 11556  005774  0E00               	movlw	0
 11557  005776  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11558  005778  0E00               	movlw	0
 11559  00577A  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11560  00577C  0E00               	movlw	0
 11561  00577E  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11562  005780  0EF7               	movlw	247
 11563  005782  0100               	movlb	0	; () banked
 11564  005784  6F7B               	movwf	CANSetMask@type& (0+255),b
 11565  005786  0E02               	movlw	2
 11566  005788  EC37  F023         	call	_CANSetMask
 11567                           
 11568                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
 11569  00578C  D00F               	goto	l7964
 11570  00578E                     l7958:
 11571                           
 11572                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
 11573  00578E  0EF7               	movlw	247
 11574  005790  0100               	movlb	0	; () banked
 11575  005792  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
 11576  005794  D007               	goto	l7960
 11577  005796                     l358:
 11578                           
 11579                           ; BSR set to: 0
 11580                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11581  005796  0100               	movlb	0	; () banked
 11582  005798  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11583                           
 11584                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
 11585  00579A  0100               	movlb	0	; () banked
 11586  00579C  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
 11587                           
 11588                           ;inc\CANlib.h: 273: break;
 11589  00579E  D028               	goto	l7966
 11590  0057A0                     l359:
 11591                           
 11592                           ; BSR set to: 0
 11593                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11594  0057A0  0100               	movlb	0	; () banked
 11595  0057A2  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11596  0057A4                     l7960:
 11597                           
 11598                           ; BSR set to: 0
 11599                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
 11600  0057A4  0EF7               	movlw	247
 11601  0057A6  0100               	movlb	0	; () banked
 11602  0057A8  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
 11603                           
 11604                           ; BSR set to: 0
 11605                           ;inc\CANlib.h: 278: }
 11606                           
 11607                           ;inc\CANlib.h: 277: break;
 11608  0057AA  D022               	goto	l7966
 11609  0057AC                     l7964:
 11610  0057AC  0E9F               	movlw	159
 11611  0057AE  0100               	movlb	0	; () banked
 11612  0057B0  6F8A               	movwf	??_CANInitialize& (0+255),b
 11613  0057B2  0EFF               	movlw	255
 11614  0057B4  0100               	movlb	0	; () banked
 11615  0057B6  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
 11616  0057B8  0100               	movlb	0	; () banked
 11617  0057BA  5189               	movf	CANInitialize@flags& (0+255),w,b
 11618  0057BC  0B60               	andlw	96
 11619  0057BE  0100               	movlb	0	; () banked
 11620  0057C0  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
 11621  0057C2  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
 11622  0057C4  0100               	movlb	0	; () banked
 11623  0057C6  518A               	movf	??_CANInitialize& (0+255),w,b
 11624  0057C8  0100               	movlb	0	; () banked
 11625  0057CA  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
 11626  0057CC  0100               	movlb	0	; () banked
 11627  0057CE  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
 11628  0057D0  0100               	movlb	0	; () banked
 11629  0057D2  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
 11630                           
 11631                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11632                           ; Switch size 1, requested type "space"
 11633                           ; Number of cases is 1, Range of values is 0 to 0
 11634                           ; switch strategies available:
 11635                           ; Name         Instructions Cycles
 11636                           ; simple_byte            4     3 (average)
 11637                           ;	Chosen strategy is simple_byte
 11638  0057D4  0100               	movlb	0	; () banked
 11639  0057D6  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
 11640  0057D8  0A00               	xorlw	0	; case 0
 11641  0057DA  A4D8               	btfss	status,2,c
 11642  0057DC  D7E1               	goto	l359
 11643                           
 11644                           ; BSR set to: 0
 11645                           ; Switch size 1, requested type "space"
 11646                           ; Number of cases is 2, Range of values is 191 to 223
 11647                           ; switch strategies available:
 11648                           ; Name         Instructions Cycles
 11649                           ; simple_byte            7     4 (average)
 11650                           ;	Chosen strategy is simple_byte
 11651  0057DE  0100               	movlb	0	; () banked
 11652  0057E0  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
 11653  0057E2  0ABF               	xorlw	191	; case 191
 11654  0057E4  B4D8               	btfsc	status,2,c
 11655  0057E6  D7D7               	goto	l358
 11656  0057E8  0A60               	xorlw	96	; case 223
 11657  0057EA  B4D8               	btfsc	status,2,c
 11658  0057EC  D7D0               	goto	l7958
 11659  0057EE  D7D8               	goto	l359
 11660  0057F0                     l7966:
 11661                           
 11662                           ; BSR set to: 0
 11663                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
 11664  0057F0  0E00               	movlw	0
 11665  0057F2  0100               	movlb	0	; () banked
 11666  0057F4  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11667  0057F6  0E00               	movlw	0
 11668  0057F8  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11669  0057FA  0E00               	movlw	0
 11670  0057FC  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11671  0057FE  0E00               	movlw	0
 11672  005800  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11673  005802  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11674  005806  0E00               	movlw	0
 11675  005808  ECA9  F006         	call	_CANSetFilter
 11676                           
 11677                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
 11678  00580C  0E00               	movlw	0
 11679  00580E  0100               	movlb	0	; () banked
 11680  005810  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11681  005812  0E00               	movlw	0
 11682  005814  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11683  005816  0E00               	movlw	0
 11684  005818  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11685  00581A  0E00               	movlw	0
 11686  00581C  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11687  00581E  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11688  005822  0E01               	movlw	1
 11689  005824  ECA9  F006         	call	_CANSetFilter
 11690                           
 11691                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
 11692  005828  0E00               	movlw	0
 11693  00582A  0100               	movlb	0	; () banked
 11694  00582C  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11695  00582E  0E00               	movlw	0
 11696  005830  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11697  005832  0E00               	movlw	0
 11698  005834  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11699  005836  0E00               	movlw	0
 11700  005838  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11701  00583A  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11702  00583E  0E02               	movlw	2
 11703  005840  ECA9  F006         	call	_CANSetFilter
 11704                           
 11705                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
 11706  005844  0E00               	movlw	0
 11707  005846  0100               	movlb	0	; () banked
 11708  005848  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11709  00584A  0E00               	movlw	0
 11710  00584C  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11711  00584E  0E00               	movlw	0
 11712  005850  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11713  005852  0E00               	movlw	0
 11714  005854  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11715  005856  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11716  00585A  0E03               	movlw	3
 11717  00585C  ECA9  F006         	call	_CANSetFilter
 11718                           
 11719                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
 11720  005860  0E00               	movlw	0
 11721  005862  0100               	movlb	0	; () banked
 11722  005864  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11723  005866  0E00               	movlw	0
 11724  005868  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11725  00586A  0E00               	movlw	0
 11726  00586C  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11727  00586E  0E00               	movlw	0
 11728  005870  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11729  005872  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11730  005876  0E04               	movlw	4
 11731  005878  ECA9  F006         	call	_CANSetFilter
 11732                           
 11733                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
 11734  00587C  0E00               	movlw	0
 11735  00587E  0100               	movlb	0	; () banked
 11736  005880  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11737  005882  0E00               	movlw	0
 11738  005884  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11739  005886  0E00               	movlw	0
 11740  005888  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11741  00588A  0E00               	movlw	0
 11742  00588C  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11743  00588E  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11744  005892  0E05               	movlw	5
 11745  005894  ECA9  F006         	call	_CANSetFilter
 11746                           
 11747                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
 11748  005898  0E00               	movlw	0
 11749  00589A  EC87  F033         	call	_CANOperationMode
 11750  00589E  0012               	return		;funcret
 11751  0058A0                     __end_of_CANInitialize:
 11752                           	opt stack 0
 11753                           tblptru	equ	0xFF8
 11754                           tblptrh	equ	0xFF7
 11755                           tblptrl	equ	0xFF6
 11756                           tablat	equ	0xFF5
 11757                           prodh	equ	0xFF4
 11758                           prodl	equ	0xFF3
 11759                           intcon	equ	0xFF2
 11760                           intcon2	equ	0xFF1
 11761                           postinc0	equ	0xFEE
 11762                           wreg	equ	0xFE8
 11763                           postdec1	equ	0xFE5
 11764                           fsr1l	equ	0xFE1
 11765                           indf2	equ	0xFDF
 11766                           postinc2	equ	0xFDE
 11767                           postdec2	equ	0xFDD
 11768                           fsr2h	equ	0xFDA
 11769                           fsr2l	equ	0xFD9
 11770                           status	equ	0xFD8
 11771                           
 11772 ;; *************** function _CANSetMask *****************
 11773 ;; Defined at:
 11774 ;;		line 640 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 11775 ;; Parameters:    Size  Location     Type
 11776 ;;  numBuffer       1    wreg     enum E16347
 11777 ;;  mask            4   23[BANK0 ] unsigned long 
 11778 ;;  type            1   27[BANK0 ] enum E16313
 11779 ;; Auto vars:     Size  Location     Type
 11780 ;;  numBuffer       1   32[BANK0 ] enum E16347
 11781 ;;  tamp            4   33[BANK0 ] unsigned long 
 11782 ;; Return value:  Size  Location     Type
 11783 ;;		None               void
 11784 ;; Registers used:
 11785 ;;		wreg, status,2, status,0
 11786 ;; Tracked objects:
 11787 ;;		On entry : 0/0
 11788 ;;		On exit  : 0/0
 11789 ;;		Unchanged: 0/0
 11790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11791 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11792 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11793 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11794 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11795 ;;Total ram usage:       14 bytes
 11796 ;; Hardware stack levels used:    1
 11797 ;; Hardware stack levels required when called:    4
 11798 ;; This function calls:
 11799 ;;		Nothing
 11800 ;; This function is called by:
 11801 ;;		_CANInitialize
 11802 ;; This function uses a non-reentrant model
 11803 ;;
 11804                           
 11805                           	psect	text31
 11806  00466E                     __ptext31:
 11807                           	opt stack 0
 11808  00466E                     _CANSetMask:
 11809                           	opt stack 24
 11810                           
 11811                           ;incstack = 0
 11812                           ;CANSetMask@numBuffer stored from wreg
 11813  00466E  0100               	movlb	0	; () banked
 11814  004670  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
 11815                           
 11816                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
 11817  004672  0100               	movlb	0	; () banked
 11818  004674  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11819  004676  A4D8               	btfss	status,2,c
 11820  004678  D056               	goto	l5268
 11821                           
 11822                           ; BSR set to: 0
 11823  00467A  0100               	movlb	0	; () banked
 11824  00467C  297B               	incf	CANSetMask@type& (0+255),w,b
 11825  00467E  A4D8               	btfss	status,2,c
 11826  004680  D052               	goto	l5268
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;inc\CANlib.h: 644: {
 11830                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
 11831  004682  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11832  004686  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11833  00468A  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11834  00468E  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11835  004692  0E04               	movlw	4
 11836  004694  D006               	goto	u6140
 11837  004696                     u6145:
 11838  004696  0100               	movlb	0	; () banked
 11839  004698  90D8               	bcf	status,0,c
 11840  00469A  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11841  00469C  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11842  00469E  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11843  0046A0  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11844  0046A2                     u6140:
 11845  0046A2  2EE8               	decfsz	wreg,f,c
 11846  0046A4  D7F8               	goto	u6145
 11847  0046A6  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11848  0046AA  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11849  0046AE  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11850  0046B2  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11851                           
 11852                           ; BSR set to: 0
 11853                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
 11854  0046B6  0100               	movlb	0	; () banked
 11855  0046B8  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11856  0046BA  0100               	movlb	0	; () banked
 11857  0046BC  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11858  0046BE  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11859  0046C0  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11860  0046C2  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11861                           
 11862                           ; BSR set to: 0
 11863                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
 11864  0046C4  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11865                           
 11866                           ; BSR set to: 0
 11867                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
 11868  0046C8  0E07               	movlw	7
 11869  0046CA  0100               	movlb	0	; () banked
 11870  0046CC  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11871  0046CE  0100               	movlb	0	; () banked
 11872  0046D0  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11873  0046D2  0E00               	movlw	0
 11874  0046D4  0100               	movlb	0	; () banked
 11875  0046D6  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11876  0046D8  0100               	movlb	0	; () banked
 11877  0046DA  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11878  0046DC  0E00               	movlw	0
 11879  0046DE  0100               	movlb	0	; () banked
 11880  0046E0  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11881  0046E2  0100               	movlb	0	; () banked
 11882  0046E4  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11883  0046E6  0E00               	movlw	0
 11884  0046E8  0100               	movlb	0	; () banked
 11885  0046EA  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11886  0046EC  0100               	movlb	0	; () banked
 11887  0046EE  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11888                           
 11889                           ; BSR set to: 0
 11890                           ;inc\CANlib.h: 650: tamp = tamp << 5;
 11891  0046F0  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11892  0046F4  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11893  0046F8  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11894  0046FC  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11895  004700  0E05               	movlw	5
 11896  004702                     u6155:
 11897  004702  90D8               	bcf	status,0,c
 11898  004704  0100               	movlb	0	; () banked
 11899  004706  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11900  004708  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11901  00470A  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11902  00470C  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11903  00470E  2EE8               	decfsz	wreg,f,c
 11904  004710  D7F8               	goto	u6155
 11905  004712  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11906  004716  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11907  00471A  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11908  00471E  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11909                           
 11910                           ; BSR set to: 0
 11911                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
 11912  004722  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
 11913  004726                     l5268:
 11914                           
 11915                           ; BSR set to: 0
 11916                           ;inc\CANlib.h: 652: }
 11917                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
 11918  004726  0E02               	movlw	2
 11919  004728  0100               	movlb	0	; () banked
 11920  00472A  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11921  00472C  A4D8               	btfss	status,2,c
 11922  00472E  D056               	goto	l5284
 11923                           
 11924                           ; BSR set to: 0
 11925  004730  0100               	movlb	0	; () banked
 11926  004732  297B               	incf	CANSetMask@type& (0+255),w,b
 11927  004734  A4D8               	btfss	status,2,c
 11928  004736  D052               	goto	l5284
 11929                           
 11930                           ; BSR set to: 0
 11931                           ;inc\CANlib.h: 655: {
 11932                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
 11933  004738  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11934  00473C  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11935  004740  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11936  004744  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11937  004748  0E04               	movlw	4
 11938  00474A  D006               	goto	u6180
 11939  00474C                     u6185:
 11940  00474C  0100               	movlb	0	; () banked
 11941  00474E  90D8               	bcf	status,0,c
 11942  004750  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11943  004752  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11944  004754  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11945  004756  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11946  004758                     u6180:
 11947  004758  2EE8               	decfsz	wreg,f,c
 11948  00475A  D7F8               	goto	u6185
 11949  00475C  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11950  004760  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11951  004764  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11952  004768  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11953                           
 11954                           ; BSR set to: 0
 11955                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
 11956  00476C  0100               	movlb	0	; () banked
 11957  00476E  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11958  004770  0100               	movlb	0	; () banked
 11959  004772  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11960  004774  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11961  004776  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11962  004778  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11963                           
 11964                           ; BSR set to: 0
 11965                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
 11966  00477A  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11967                           
 11968                           ; BSR set to: 0
 11969                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
 11970  00477E  0E07               	movlw	7
 11971  004780  0100               	movlb	0	; () banked
 11972  004782  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11973  004784  0100               	movlb	0	; () banked
 11974  004786  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11975  004788  0E00               	movlw	0
 11976  00478A  0100               	movlb	0	; () banked
 11977  00478C  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11978  00478E  0100               	movlb	0	; () banked
 11979  004790  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11980  004792  0E00               	movlw	0
 11981  004794  0100               	movlb	0	; () banked
 11982  004796  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11983  004798  0100               	movlb	0	; () banked
 11984  00479A  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11985  00479C  0E00               	movlw	0
 11986  00479E  0100               	movlb	0	; () banked
 11987  0047A0  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11988  0047A2  0100               	movlb	0	; () banked
 11989  0047A4  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11990                           
 11991                           ; BSR set to: 0
 11992                           ;inc\CANlib.h: 661: tamp = tamp << 5;
 11993  0047A6  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11994  0047AA  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11995  0047AE  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11996  0047B2  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11997  0047B6  0E05               	movlw	5
 11998  0047B8                     u6195:
 11999  0047B8  90D8               	bcf	status,0,c
 12000  0047BA  0100               	movlb	0	; () banked
 12001  0047BC  377C               	rlcf	??_CANSetMask& (0+255),f,b
 12002  0047BE  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 12003  0047C0  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 12004  0047C2  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 12005  0047C4  2EE8               	decfsz	wreg,f,c
 12006  0047C6  D7F8               	goto	u6195
 12007  0047C8  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12008  0047CC  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12009  0047D0  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12010  0047D4  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12011                           
 12012                           ; BSR set to: 0
 12013                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
 12014  0047D8  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
 12015  0047DC                     l5284:
 12016                           
 12017                           ; BSR set to: 0
 12018                           ;inc\CANlib.h: 663: }
 12019                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
 12020  0047DC  0100               	movlb	0	; () banked
 12021  0047DE  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 12022  0047E0  A4D8               	btfss	status,2,c
 12023  0047E2  D087               	goto	l5316
 12024                           
 12025                           ; BSR set to: 0
 12026  0047E4  0EF7               	movlw	247
 12027  0047E6  0100               	movlb	0	; () banked
 12028  0047E8  197B               	xorwf	CANSetMask@type& (0+255),w,b
 12029  0047EA  A4D8               	btfss	status,2,c
 12030  0047EC  D082               	goto	l5316
 12031                           
 12032                           ; BSR set to: 0
 12033                           ;inc\CANlib.h: 666: {
 12034                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
 12035  0047EE  0100               	movlb	0	; () banked
 12036  0047F0  5177               	movf	CANSetMask@mask& (0+255),w,b
 12037  0047F2  0100               	movlb	0	; () banked
 12038  0047F4  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12039  0047F6  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12040  0047F8  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12041  0047FA  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12042                           
 12043                           ; BSR set to: 0
 12044                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
 12045  0047FC  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
 12046                           
 12047                           ; BSR set to: 0
 12048                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
 12049  004800  0E00               	movlw	0
 12050  004802  0100               	movlb	0	; () banked
 12051  004804  1577               	andwf	CANSetMask@mask& (0+255),w,b
 12052  004806  0100               	movlb	0	; () banked
 12053  004808  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12054  00480A  0EFF               	movlw	255
 12055  00480C  0100               	movlb	0	; () banked
 12056  00480E  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12057  004810  0100               	movlb	0	; () banked
 12058  004812  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12059  004814  0E00               	movlw	0
 12060  004816  0100               	movlb	0	; () banked
 12061  004818  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12062  00481A  0100               	movlb	0	; () banked
 12063  00481C  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12064  00481E  0E00               	movlw	0
 12065  004820  0100               	movlb	0	; () banked
 12066  004822  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12067  004824  0100               	movlb	0	; () banked
 12068  004826  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12069                           
 12070                           ; BSR set to: 0
 12071                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
 12072  004828  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 12073  00482C  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12074  004830  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12075  004834  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12076  004838  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 12077  00483C  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 12078  004840  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 12079  004844  0100               	movlb	0	; () banked
 12080  004846  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 12081  004848  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12082  00484C  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12083  004850  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12084  004854  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12085                           
 12086                           ; BSR set to: 0
 12087                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
 12088  004858  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
 12089                           
 12090                           ; BSR set to: 0
 12091                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
 12092  00485C  0100               	movlb	0	; () banked
 12093  00485E  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12094  004860  D003               	goto	l432
 12095                           
 12096                           ; BSR set to: 0
 12097                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
 12098  004862  010F               	movlb	15	; () banked
 12099  004864  8119               	bsf	25,0,b	;volatile
 12100  004866  D002               	goto	l433
 12101  004868                     l432:
 12102                           
 12103                           ; BSR set to: 0
 12104                           ;inc\CANlib.h: 676: else
 12105                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
 12106  004868  010F               	movlb	15	; () banked
 12107  00486A  9119               	bcf	25,0,b	;volatile
 12108  00486C                     l433:
 12109                           
 12110                           ; BSR set to: 15
 12111                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
 12112  00486C  0100               	movlb	0	; () banked
 12113  00486E  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12114  004870  D003               	goto	l434
 12115                           
 12116                           ; BSR set to: 0
 12117                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
 12118  004872  010F               	movlb	15	; () banked
 12119  004874  8319               	bsf	25,1,b	;volatile
 12120  004876  D002               	goto	l435
 12121  004878                     l434:
 12122                           
 12123                           ; BSR set to: 0
 12124                           ;inc\CANlib.h: 681: else
 12125                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
 12126  004878  010F               	movlb	15	; () banked
 12127  00487A  9319               	bcf	25,1,b	;volatile
 12128  00487C                     l435:
 12129                           
 12130                           ; BSR set to: 15
 12131                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
 12132  00487C  0100               	movlb	0	; () banked
 12133  00487E  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12134  004880  D003               	goto	l436
 12135                           
 12136                           ; BSR set to: 0
 12137                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
 12138  004882  010F               	movlb	15	; () banked
 12139  004884  8B19               	bsf	25,5,b	;volatile
 12140  004886  D002               	goto	l437
 12141  004888                     l436:
 12142                           
 12143                           ; BSR set to: 0
 12144                           ;inc\CANlib.h: 686: else
 12145                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
 12146  004888  010F               	movlb	15	; () banked
 12147  00488A  9B19               	bcf	25,5,b	;volatile
 12148  00488C                     l437:
 12149                           
 12150                           ; BSR set to: 15
 12151                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
 12152  00488C  0100               	movlb	0	; () banked
 12153  00488E  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12154  004890  D003               	goto	l438
 12155                           
 12156                           ; BSR set to: 0
 12157                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
 12158  004892  010F               	movlb	15	; () banked
 12159  004894  8D19               	bsf	25,6,b	;volatile
 12160  004896  D002               	goto	l439
 12161  004898                     l438:
 12162                           
 12163                           ; BSR set to: 0
 12164                           ;inc\CANlib.h: 691: else
 12165                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
 12166  004898  010F               	movlb	15	; () banked
 12167  00489A  9D19               	bcf	25,6,b	;volatile
 12168  00489C                     l439:
 12169                           
 12170                           ; BSR set to: 15
 12171                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
 12172  00489C  0100               	movlb	0	; () banked
 12173  00489E  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12174  0048A0  D003               	goto	l440
 12175                           
 12176                           ; BSR set to: 0
 12177                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
 12178  0048A2  010F               	movlb	15	; () banked
 12179  0048A4  8F19               	bsf	25,7,b	;volatile
 12180  0048A6  D002               	goto	l5310
 12181  0048A8                     l440:
 12182                           
 12183                           ; BSR set to: 0
 12184                           ;inc\CANlib.h: 696: else
 12185                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
 12186  0048A8  010F               	movlb	15	; () banked
 12187  0048AA  9F19               	bcf	25,7,b	;volatile
 12188  0048AC                     l5310:
 12189                           
 12190                           ; BSR set to: 15
 12191                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
 12192  0048AC  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12193  0048B0  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12194  0048B4  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12195  0048B8  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12196  0048BC  0E16               	movlw	22
 12197  0048BE  D006               	goto	u6270
 12198  0048C0                     u6275:
 12199  0048C0  0100               	movlb	0	; () banked
 12200  0048C2  90D8               	bcf	status,0,c
 12201  0048C4  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12202  0048C6  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12203  0048C8  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12204  0048CA  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12205  0048CC                     u6270:
 12206  0048CC  2EE8               	decfsz	wreg,f,c
 12207  0048CE  D7F8               	goto	u6275
 12208  0048D0  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12209  0048D4  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12210  0048D8  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12211  0048DC  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12212                           
 12213                           ; BSR set to: 0
 12214                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
 12215  0048E0  0100               	movlb	0	; () banked
 12216  0048E2  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12217  0048E4  0100               	movlb	0	; () banked
 12218  0048E6  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12219  0048E8  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12220  0048EA  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12221  0048EC  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12222                           
 12223                           ; BSR set to: 0
 12224                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
 12225  0048EE  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 12226  0048F2                     l5316:
 12227                           
 12228                           ; BSR set to: 0
 12229                           ;inc\CANlib.h: 702: }
 12230                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
 12231  0048F2  0E02               	movlw	2
 12232  0048F4  0100               	movlb	0	; () banked
 12233  0048F6  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 12234  0048F8  A4D8               	btfss	status,2,c
 12235  0048FA  0012               	return	
 12236                           
 12237                           ; BSR set to: 0
 12238  0048FC  0EF7               	movlw	247
 12239  0048FE  0100               	movlb	0	; () banked
 12240  004900  197B               	xorwf	CANSetMask@type& (0+255),w,b
 12241  004902  A4D8               	btfss	status,2,c
 12242  004904  0012               	return	
 12243                           
 12244                           ; BSR set to: 0
 12245                           ;inc\CANlib.h: 705: {
 12246                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
 12247  004906  0100               	movlb	0	; () banked
 12248  004908  5177               	movf	CANSetMask@mask& (0+255),w,b
 12249  00490A  0100               	movlb	0	; () banked
 12250  00490C  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12251  00490E  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12252  004910  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12253  004912  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12254                           
 12255                           ; BSR set to: 0
 12256                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
 12257  004914  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
 12258                           
 12259                           ; BSR set to: 0
 12260                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
 12261  004918  0E00               	movlw	0
 12262  00491A  0100               	movlb	0	; () banked
 12263  00491C  1577               	andwf	CANSetMask@mask& (0+255),w,b
 12264  00491E  0100               	movlb	0	; () banked
 12265  004920  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12266  004922  0EFF               	movlw	255
 12267  004924  0100               	movlb	0	; () banked
 12268  004926  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12269  004928  0100               	movlb	0	; () banked
 12270  00492A  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12271  00492C  0E00               	movlw	0
 12272  00492E  0100               	movlb	0	; () banked
 12273  004930  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12274  004932  0100               	movlb	0	; () banked
 12275  004934  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12276  004936  0E00               	movlw	0
 12277  004938  0100               	movlb	0	; () banked
 12278  00493A  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12279  00493C  0100               	movlb	0	; () banked
 12280  00493E  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12281                           
 12282                           ; BSR set to: 0
 12283                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
 12284  004940  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 12285  004944  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12286  004948  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12287  00494C  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12288  004950  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 12289  004954  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 12290  004958  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 12291  00495C  0100               	movlb	0	; () banked
 12292  00495E  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 12293  004960  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12294  004964  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12295  004968  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12296  00496C  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12297                           
 12298                           ; BSR set to: 0
 12299                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
 12300  004970  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
 12301                           
 12302                           ; BSR set to: 0
 12303                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
 12304  004974  0100               	movlb	0	; () banked
 12305  004976  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12306  004978  D003               	goto	l443
 12307                           
 12308                           ; BSR set to: 0
 12309                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
 12310  00497A  010F               	movlb	15	; () banked
 12311  00497C  811D               	bsf	29,0,b	;volatile
 12312  00497E  D002               	goto	l444
 12313  004980                     l443:
 12314                           
 12315                           ; BSR set to: 0
 12316                           ;inc\CANlib.h: 715: else
 12317                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
 12318  004980  010F               	movlb	15	; () banked
 12319  004982  911D               	bcf	29,0,b	;volatile
 12320  004984                     l444:
 12321                           
 12322                           ; BSR set to: 15
 12323                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
 12324  004984  0100               	movlb	0	; () banked
 12325  004986  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12326  004988  D003               	goto	l445
 12327                           
 12328                           ; BSR set to: 0
 12329                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
 12330  00498A  010F               	movlb	15	; () banked
 12331  00498C  831D               	bsf	29,1,b	;volatile
 12332  00498E  D002               	goto	l446
 12333  004990                     l445:
 12334                           
 12335                           ; BSR set to: 0
 12336                           ;inc\CANlib.h: 720: else
 12337                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
 12338  004990  010F               	movlb	15	; () banked
 12339  004992  931D               	bcf	29,1,b	;volatile
 12340  004994                     l446:
 12341                           
 12342                           ; BSR set to: 15
 12343                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
 12344  004994  0100               	movlb	0	; () banked
 12345  004996  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12346  004998  D003               	goto	l447
 12347                           
 12348                           ; BSR set to: 0
 12349                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
 12350  00499A  010F               	movlb	15	; () banked
 12351  00499C  8B1D               	bsf	29,5,b	;volatile
 12352  00499E  D002               	goto	l448
 12353  0049A0                     l447:
 12354                           
 12355                           ; BSR set to: 0
 12356                           ;inc\CANlib.h: 725: else
 12357                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
 12358  0049A0  010F               	movlb	15	; () banked
 12359  0049A2  9B1D               	bcf	29,5,b	;volatile
 12360  0049A4                     l448:
 12361                           
 12362                           ; BSR set to: 15
 12363                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
 12364  0049A4  0100               	movlb	0	; () banked
 12365  0049A6  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12366  0049A8  D003               	goto	l449
 12367                           
 12368                           ; BSR set to: 0
 12369                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
 12370  0049AA  010F               	movlb	15	; () banked
 12371  0049AC  8D1D               	bsf	29,6,b	;volatile
 12372  0049AE  D002               	goto	l450
 12373  0049B0                     l449:
 12374                           
 12375                           ; BSR set to: 0
 12376                           ;inc\CANlib.h: 730: else
 12377                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
 12378  0049B0  010F               	movlb	15	; () banked
 12379  0049B2  9D1D               	bcf	29,6,b	;volatile
 12380  0049B4                     l450:
 12381                           
 12382                           ; BSR set to: 15
 12383                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
 12384  0049B4  0100               	movlb	0	; () banked
 12385  0049B6  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12386  0049B8  D003               	goto	l451
 12387                           
 12388                           ; BSR set to: 0
 12389                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
 12390  0049BA  010F               	movlb	15	; () banked
 12391  0049BC  8F1D               	bsf	29,7,b	;volatile
 12392  0049BE  D002               	goto	l5342
 12393  0049C0                     l451:
 12394                           
 12395                           ; BSR set to: 0
 12396                           ;inc\CANlib.h: 735: else
 12397                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
 12398  0049C0  010F               	movlb	15	; () banked
 12399  0049C2  9F1D               	bcf	29,7,b	;volatile
 12400  0049C4                     l5342:
 12401                           
 12402                           ; BSR set to: 15
 12403                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
 12404  0049C4  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12405  0049C8  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12406  0049CC  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12407  0049D0  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12408  0049D4  0E16               	movlw	22
 12409  0049D6  D006               	goto	u6350
 12410  0049D8                     u6355:
 12411  0049D8  0100               	movlb	0	; () banked
 12412  0049DA  90D8               	bcf	status,0,c
 12413  0049DC  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12414  0049DE  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12415  0049E0  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12416  0049E2  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12417  0049E4                     u6350:
 12418  0049E4  2EE8               	decfsz	wreg,f,c
 12419  0049E6  D7F8               	goto	u6355
 12420  0049E8  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12421  0049EC  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12422  0049F0  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12423  0049F4  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12424                           
 12425                           ; BSR set to: 0
 12426                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
 12427  0049F8  0100               	movlb	0	; () banked
 12428  0049FA  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12429  0049FC  0100               	movlb	0	; () banked
 12430  0049FE  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12431  004A00  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12432  004A02  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12433  004A04  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12434                           
 12435                           ; BSR set to: 0
 12436                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
 12437  004A06  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 12438  004A0A  0012               	return	
 12439  004A0C                     __end_of_CANSetMask:
 12440                           	opt stack 0
 12441                           tblptru	equ	0xFF8
 12442                           tblptrh	equ	0xFF7
 12443                           tblptrl	equ	0xFF6
 12444                           tablat	equ	0xFF5
 12445                           prodh	equ	0xFF4
 12446                           prodl	equ	0xFF3
 12447                           intcon	equ	0xFF2
 12448                           intcon2	equ	0xFF1
 12449                           postinc0	equ	0xFEE
 12450                           wreg	equ	0xFE8
 12451                           postdec1	equ	0xFE5
 12452                           fsr1l	equ	0xFE1
 12453                           indf2	equ	0xFDF
 12454                           postinc2	equ	0xFDE
 12455                           postdec2	equ	0xFDD
 12456                           fsr2h	equ	0xFDA
 12457                           fsr2l	equ	0xFD9
 12458                           status	equ	0xFD8
 12459                           
 12460 ;; *************** function _CANSetFilter *****************
 12461 ;; Defined at:
 12462 ;;		line 748 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 12463 ;; Parameters:    Size  Location     Type
 12464 ;;  numBuffer       1    wreg     enum E16350
 12465 ;;  filter          4   23[BANK0 ] unsigned long 
 12466 ;;  type            1   27[BANK0 ] enum E16313
 12467 ;; Auto vars:     Size  Location     Type
 12468 ;;  numBuffer       1   32[BANK0 ] enum E16350
 12469 ;;  tamp            4   33[BANK0 ] unsigned long 
 12470 ;; Return value:  Size  Location     Type
 12471 ;;		None               void
 12472 ;; Registers used:
 12473 ;;		wreg, status,2, status,0
 12474 ;; Tracked objects:
 12475 ;;		On entry : 0/0
 12476 ;;		On exit  : 0/0
 12477 ;;		Unchanged: 0/0
 12478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12479 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12480 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12481 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12482 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12483 ;;Total ram usage:       14 bytes
 12484 ;; Hardware stack levels used:    1
 12485 ;; Hardware stack levels required when called:    4
 12486 ;; This function calls:
 12487 ;;		Nothing
 12488 ;; This function is called by:
 12489 ;;		_CANInitialize
 12490 ;; This function uses a non-reentrant model
 12491 ;;
 12492                           
 12493                           	psect	text32
 12494  000D52                     __ptext32:
 12495                           	opt stack 0
 12496  000D52                     _CANSetFilter:
 12497                           	opt stack 24
 12498                           
 12499                           ; BSR set to: 0
 12500                           ;incstack = 0
 12501                           ;CANSetFilter@numBuffer stored from wreg
 12502  000D52  0100               	movlb	0	; () banked
 12503  000D54  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
 12504                           
 12505                           ;inc\CANlib.h: 750: unsigned long tamp;
 12506                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
 12507  000D56  0100               	movlb	0	; () banked
 12508  000D58  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12509  000D5A  0100               	movlb	0	; () banked
 12510  000D5C  A4D8               	btfss	status,2,c
 12511  000D5E  D058               	goto	l5366
 12512                           
 12513                           ; BSR set to: 0
 12514  000D60  0100               	movlb	0	; () banked
 12515  000D62  297B               	incf	CANSetFilter@type& (0+255),w,b
 12516  000D64  A4D8               	btfss	status,2,c
 12517  000D66  D054               	goto	l5366
 12518                           
 12519                           ; BSR set to: 0
 12520                           ;inc\CANlib.h: 753: {
 12521                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
 12522  000D68  010F               	movlb	15	; () banked
 12523  000D6A  9701               	bcf	1,3,b	;volatile
 12524                           
 12525                           ; BSR set to: 15
 12526                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
 12527  000D6C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12528  000D70  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12529  000D74  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12530  000D78  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12531  000D7C  0E04               	movlw	4
 12532  000D7E  D006               	goto	u6380
 12533  000D80                     u6385:
 12534  000D80  0100               	movlb	0	; () banked
 12535  000D82  90D8               	bcf	status,0,c
 12536  000D84  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12537  000D86  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12538  000D88  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12539  000D8A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12540  000D8C                     u6380:
 12541  000D8C  2EE8               	decfsz	wreg,f,c
 12542  000D8E  D7F8               	goto	u6385
 12543  000D90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12544  000D94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12545  000D98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12546  000D9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12547                           
 12548                           ; BSR set to: 0
 12549                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
 12550  000DA0  0100               	movlb	0	; () banked
 12551  000DA2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12552  000DA4  0100               	movlb	0	; () banked
 12553  000DA6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12554  000DA8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12555  000DAA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12556  000DAC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12557                           
 12558                           ; BSR set to: 0
 12559                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
 12560  000DAE  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12561                           
 12562                           ; BSR set to: 0
 12563                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
 12564  000DB2  0E07               	movlw	7
 12565  000DB4  0100               	movlb	0	; () banked
 12566  000DB6  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12567  000DB8  0100               	movlb	0	; () banked
 12568  000DBA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12569  000DBC  0E00               	movlw	0
 12570  000DBE  0100               	movlb	0	; () banked
 12571  000DC0  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12572  000DC2  0100               	movlb	0	; () banked
 12573  000DC4  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12574  000DC6  0E00               	movlw	0
 12575  000DC8  0100               	movlb	0	; () banked
 12576  000DCA  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12577  000DCC  0100               	movlb	0	; () banked
 12578  000DCE  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12579  000DD0  0E00               	movlw	0
 12580  000DD2  0100               	movlb	0	; () banked
 12581  000DD4  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12582  000DD6  0100               	movlb	0	; () banked
 12583  000DD8  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12584                           
 12585                           ; BSR set to: 0
 12586                           ;inc\CANlib.h: 761: tamp = tamp << 5;
 12587  000DDA  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12588  000DDE  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12589  000DE2  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12590  000DE6  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12591  000DEA  0E05               	movlw	5
 12592  000DEC                     u6395:
 12593  000DEC  90D8               	bcf	status,0,c
 12594  000DEE  0100               	movlb	0	; () banked
 12595  000DF0  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12596  000DF2  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12597  000DF4  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12598  000DF6  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12599  000DF8  2EE8               	decfsz	wreg,f,c
 12600  000DFA  D7F8               	goto	u6395
 12601  000DFC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12602  000E00  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12603  000E04  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12604  000E08  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12605                           
 12606                           ; BSR set to: 0
 12607                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
 12608  000E0C  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
 12609  000E10                     l5366:
 12610                           
 12611                           ; BSR set to: 0
 12612                           ;inc\CANlib.h: 763: }
 12613                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
 12614  000E10  0100               	movlb	0	; () banked
 12615  000E12  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12616  000E14  A4D8               	btfss	status,2,c
 12617  000E16  D058               	goto	l5384
 12618                           
 12619                           ; BSR set to: 0
 12620  000E18  0100               	movlb	0	; () banked
 12621  000E1A  297B               	incf	CANSetFilter@type& (0+255),w,b
 12622  000E1C  A4D8               	btfss	status,2,c
 12623  000E1E  D054               	goto	l5384
 12624                           
 12625                           ; BSR set to: 0
 12626                           ;inc\CANlib.h: 766: {
 12627                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
 12628  000E20  010F               	movlb	15	; () banked
 12629  000E22  9705               	bcf	5,3,b	;volatile
 12630                           
 12631                           ; BSR set to: 15
 12632                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
 12633  000E24  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12634  000E28  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12635  000E2C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12636  000E30  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12637  000E34  0E04               	movlw	4
 12638  000E36  D006               	goto	u6420
 12639  000E38                     u6425:
 12640  000E38  0100               	movlb	0	; () banked
 12641  000E3A  90D8               	bcf	status,0,c
 12642  000E3C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12643  000E3E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12644  000E40  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12645  000E42  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12646  000E44                     u6420:
 12647  000E44  2EE8               	decfsz	wreg,f,c
 12648  000E46  D7F8               	goto	u6425
 12649  000E48  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12650  000E4C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12651  000E50  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12652  000E54  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12653                           
 12654                           ; BSR set to: 0
 12655                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
 12656  000E58  0100               	movlb	0	; () banked
 12657  000E5A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12658  000E5C  0100               	movlb	0	; () banked
 12659  000E5E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12660  000E60  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12661  000E62  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12662  000E64  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12663                           
 12664                           ; BSR set to: 0
 12665                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
 12666  000E66  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 12667                           
 12668                           ; BSR set to: 0
 12669                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
 12670  000E6A  0E07               	movlw	7
 12671  000E6C  0100               	movlb	0	; () banked
 12672  000E6E  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12673  000E70  0100               	movlb	0	; () banked
 12674  000E72  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12675  000E74  0E00               	movlw	0
 12676  000E76  0100               	movlb	0	; () banked
 12677  000E78  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12678  000E7A  0100               	movlb	0	; () banked
 12679  000E7C  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12680  000E7E  0E00               	movlw	0
 12681  000E80  0100               	movlb	0	; () banked
 12682  000E82  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12683  000E84  0100               	movlb	0	; () banked
 12684  000E86  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12685  000E88  0E00               	movlw	0
 12686  000E8A  0100               	movlb	0	; () banked
 12687  000E8C  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12688  000E8E  0100               	movlb	0	; () banked
 12689  000E90  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12690                           
 12691                           ; BSR set to: 0
 12692                           ;inc\CANlib.h: 774: tamp = tamp << 5;
 12693  000E92  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12694  000E96  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12695  000E9A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12696  000E9E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12697  000EA2  0E05               	movlw	5
 12698  000EA4                     u6435:
 12699  000EA4  90D8               	bcf	status,0,c
 12700  000EA6  0100               	movlb	0	; () banked
 12701  000EA8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12702  000EAA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12703  000EAC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12704  000EAE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12705  000EB0  2EE8               	decfsz	wreg,f,c
 12706  000EB2  D7F8               	goto	u6435
 12707  000EB4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12708  000EB8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12709  000EBC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12710  000EC0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12711                           
 12712                           ; BSR set to: 0
 12713                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
 12714  000EC4  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
 12715  000EC8                     l5384:
 12716                           
 12717                           ; BSR set to: 0
 12718                           ;inc\CANlib.h: 776: }
 12719                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
 12720  000EC8  0E02               	movlw	2
 12721  000ECA  0100               	movlb	0	; () banked
 12722  000ECC  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12723  000ECE  A4D8               	btfss	status,2,c
 12724  000ED0  D058               	goto	l5402
 12725                           
 12726                           ; BSR set to: 0
 12727  000ED2  0100               	movlb	0	; () banked
 12728  000ED4  297B               	incf	CANSetFilter@type& (0+255),w,b
 12729  000ED6  A4D8               	btfss	status,2,c
 12730  000ED8  D054               	goto	l5402
 12731                           
 12732                           ; BSR set to: 0
 12733                           ;inc\CANlib.h: 779: {
 12734                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
 12735  000EDA  010F               	movlb	15	; () banked
 12736  000EDC  9709               	bcf	9,3,b	;volatile
 12737                           
 12738                           ; BSR set to: 15
 12739                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
 12740  000EDE  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12741  000EE2  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12742  000EE6  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12743  000EEA  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12744  000EEE  0E04               	movlw	4
 12745  000EF0  D006               	goto	u6460
 12746  000EF2                     u6465:
 12747  000EF2  0100               	movlb	0	; () banked
 12748  000EF4  90D8               	bcf	status,0,c
 12749  000EF6  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12750  000EF8  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12751  000EFA  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12752  000EFC  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12753  000EFE                     u6460:
 12754  000EFE  2EE8               	decfsz	wreg,f,c
 12755  000F00  D7F8               	goto	u6465
 12756  000F02  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12757  000F06  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12758  000F0A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12759  000F0E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12760                           
 12761                           ; BSR set to: 0
 12762                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
 12763  000F12  0100               	movlb	0	; () banked
 12764  000F14  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12765  000F16  0100               	movlb	0	; () banked
 12766  000F18  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12767  000F1A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12768  000F1C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12769  000F1E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12770                           
 12771                           ; BSR set to: 0
 12772                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
 12773  000F20  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 12774                           
 12775                           ; BSR set to: 0
 12776                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
 12777  000F24  0E07               	movlw	7
 12778  000F26  0100               	movlb	0	; () banked
 12779  000F28  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12780  000F2A  0100               	movlb	0	; () banked
 12781  000F2C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12782  000F2E  0E00               	movlw	0
 12783  000F30  0100               	movlb	0	; () banked
 12784  000F32  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12785  000F34  0100               	movlb	0	; () banked
 12786  000F36  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12787  000F38  0E00               	movlw	0
 12788  000F3A  0100               	movlb	0	; () banked
 12789  000F3C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12790  000F3E  0100               	movlb	0	; () banked
 12791  000F40  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12792  000F42  0E00               	movlw	0
 12793  000F44  0100               	movlb	0	; () banked
 12794  000F46  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12795  000F48  0100               	movlb	0	; () banked
 12796  000F4A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12797                           
 12798                           ; BSR set to: 0
 12799                           ;inc\CANlib.h: 787: tamp = tamp << 5;
 12800  000F4C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12801  000F50  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12802  000F54  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12803  000F58  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12804  000F5C  0E05               	movlw	5
 12805  000F5E                     u6475:
 12806  000F5E  90D8               	bcf	status,0,c
 12807  000F60  0100               	movlb	0	; () banked
 12808  000F62  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12809  000F64  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12810  000F66  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12811  000F68  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12812  000F6A  2EE8               	decfsz	wreg,f,c
 12813  000F6C  D7F8               	goto	u6475
 12814  000F6E  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12815  000F72  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12816  000F76  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12817  000F7A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12818                           
 12819                           ; BSR set to: 0
 12820                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
 12821  000F7E  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
 12822  000F82                     l5402:
 12823                           
 12824                           ; BSR set to: 0
 12825                           ;inc\CANlib.h: 789: }
 12826                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
 12827  000F82  0E03               	movlw	3
 12828  000F84  0100               	movlb	0	; () banked
 12829  000F86  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12830  000F88  A4D8               	btfss	status,2,c
 12831  000F8A  D058               	goto	l5420
 12832                           
 12833                           ; BSR set to: 0
 12834  000F8C  0100               	movlb	0	; () banked
 12835  000F8E  297B               	incf	CANSetFilter@type& (0+255),w,b
 12836  000F90  A4D8               	btfss	status,2,c
 12837  000F92  D054               	goto	l5420
 12838                           
 12839                           ; BSR set to: 0
 12840                           ;inc\CANlib.h: 792: {
 12841                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
 12842  000F94  010F               	movlb	15	; () banked
 12843  000F96  970D               	bcf	13,3,b	;volatile
 12844                           
 12845                           ; BSR set to: 15
 12846                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
 12847  000F98  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12848  000F9C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12849  000FA0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12850  000FA4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12851  000FA8  0E04               	movlw	4
 12852  000FAA  D006               	goto	u6500
 12853  000FAC                     u6505:
 12854  000FAC  0100               	movlb	0	; () banked
 12855  000FAE  90D8               	bcf	status,0,c
 12856  000FB0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12857  000FB2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12858  000FB4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12859  000FB6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12860  000FB8                     u6500:
 12861  000FB8  2EE8               	decfsz	wreg,f,c
 12862  000FBA  D7F8               	goto	u6505
 12863  000FBC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12864  000FC0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12865  000FC4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12866  000FC8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12867                           
 12868                           ; BSR set to: 0
 12869                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
 12870  000FCC  0100               	movlb	0	; () banked
 12871  000FCE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12872  000FD0  0100               	movlb	0	; () banked
 12873  000FD2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12874  000FD4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12875  000FD6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12876  000FD8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12877                           
 12878                           ; BSR set to: 0
 12879                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
 12880  000FDA  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 12881                           
 12882                           ; BSR set to: 0
 12883                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
 12884  000FDE  0E07               	movlw	7
 12885  000FE0  0100               	movlb	0	; () banked
 12886  000FE2  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12887  000FE4  0100               	movlb	0	; () banked
 12888  000FE6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12889  000FE8  0E00               	movlw	0
 12890  000FEA  0100               	movlb	0	; () banked
 12891  000FEC  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12892  000FEE  0100               	movlb	0	; () banked
 12893  000FF0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12894  000FF2  0E00               	movlw	0
 12895  000FF4  0100               	movlb	0	; () banked
 12896  000FF6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12897  000FF8  0100               	movlb	0	; () banked
 12898  000FFA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12899  000FFC  0E00               	movlw	0
 12900  000FFE  0100               	movlb	0	; () banked
 12901  001000  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12902  001002  0100               	movlb	0	; () banked
 12903  001004  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12904                           
 12905                           ; BSR set to: 0
 12906                           ;inc\CANlib.h: 800: tamp = tamp << 5;
 12907  001006  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12908  00100A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12909  00100E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12910  001012  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12911  001016  0E05               	movlw	5
 12912  001018                     u6515:
 12913  001018  90D8               	bcf	status,0,c
 12914  00101A  0100               	movlb	0	; () banked
 12915  00101C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12916  00101E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12917  001020  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12918  001022  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12919  001024  2EE8               	decfsz	wreg,f,c
 12920  001026  D7F8               	goto	u6515
 12921  001028  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12922  00102C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12923  001030  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12924  001034  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12925                           
 12926                           ; BSR set to: 0
 12927                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
 12928  001038  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
 12929  00103C                     l5420:
 12930                           
 12931                           ; BSR set to: 0
 12932                           ;inc\CANlib.h: 802: }
 12933                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
 12934  00103C  0E04               	movlw	4
 12935  00103E  0100               	movlb	0	; () banked
 12936  001040  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12937  001042  A4D8               	btfss	status,2,c
 12938  001044  D058               	goto	l5438
 12939                           
 12940                           ; BSR set to: 0
 12941  001046  0100               	movlb	0	; () banked
 12942  001048  297B               	incf	CANSetFilter@type& (0+255),w,b
 12943  00104A  A4D8               	btfss	status,2,c
 12944  00104C  D054               	goto	l5438
 12945                           
 12946                           ; BSR set to: 0
 12947                           ;inc\CANlib.h: 805: {
 12948                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
 12949  00104E  010F               	movlb	15	; () banked
 12950  001050  9711               	bcf	17,3,b	;volatile
 12951                           
 12952                           ; BSR set to: 15
 12953                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
 12954  001052  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12955  001056  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12956  00105A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12957  00105E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12958  001062  0E04               	movlw	4
 12959  001064  D006               	goto	u6540
 12960  001066                     u6545:
 12961  001066  0100               	movlb	0	; () banked
 12962  001068  90D8               	bcf	status,0,c
 12963  00106A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12964  00106C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12965  00106E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12966  001070  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12967  001072                     u6540:
 12968  001072  2EE8               	decfsz	wreg,f,c
 12969  001074  D7F8               	goto	u6545
 12970  001076  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12971  00107A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12972  00107E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12973  001082  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12974                           
 12975                           ; BSR set to: 0
 12976                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
 12977  001086  0100               	movlb	0	; () banked
 12978  001088  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12979  00108A  0100               	movlb	0	; () banked
 12980  00108C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12981  00108E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12982  001090  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12983  001092  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12984                           
 12985                           ; BSR set to: 0
 12986                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
 12987  001094  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 12988                           
 12989                           ; BSR set to: 0
 12990                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
 12991  001098  0E07               	movlw	7
 12992  00109A  0100               	movlb	0	; () banked
 12993  00109C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12994  00109E  0100               	movlb	0	; () banked
 12995  0010A0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12996  0010A2  0E00               	movlw	0
 12997  0010A4  0100               	movlb	0	; () banked
 12998  0010A6  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12999  0010A8  0100               	movlb	0	; () banked
 13000  0010AA  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13001  0010AC  0E00               	movlw	0
 13002  0010AE  0100               	movlb	0	; () banked
 13003  0010B0  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13004  0010B2  0100               	movlb	0	; () banked
 13005  0010B4  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13006  0010B6  0E00               	movlw	0
 13007  0010B8  0100               	movlb	0	; () banked
 13008  0010BA  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13009  0010BC  0100               	movlb	0	; () banked
 13010  0010BE  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13011                           
 13012                           ; BSR set to: 0
 13013                           ;inc\CANlib.h: 813: tamp = tamp << 5;
 13014  0010C0  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13015  0010C4  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13016  0010C8  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13017  0010CC  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13018  0010D0  0E05               	movlw	5
 13019  0010D2                     u6555:
 13020  0010D2  90D8               	bcf	status,0,c
 13021  0010D4  0100               	movlb	0	; () banked
 13022  0010D6  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 13023  0010D8  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 13024  0010DA  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 13025  0010DC  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 13026  0010DE  2EE8               	decfsz	wreg,f,c
 13027  0010E0  D7F8               	goto	u6555
 13028  0010E2  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13029  0010E6  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13030  0010EA  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13031  0010EE  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13032                           
 13033                           ; BSR set to: 0
 13034                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
 13035  0010F2  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 13036  0010F6                     l5438:
 13037                           
 13038                           ; BSR set to: 0
 13039                           ;inc\CANlib.h: 815: }
 13040                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 13041  0010F6  0E05               	movlw	5
 13042  0010F8  0100               	movlb	0	; () banked
 13043  0010FA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13044  0010FC  A4D8               	btfss	status,2,c
 13045  0010FE  D058               	goto	l5456
 13046                           
 13047                           ; BSR set to: 0
 13048  001100  0100               	movlb	0	; () banked
 13049  001102  297B               	incf	CANSetFilter@type& (0+255),w,b
 13050  001104  A4D8               	btfss	status,2,c
 13051  001106  D054               	goto	l5456
 13052                           
 13053                           ; BSR set to: 0
 13054                           ;inc\CANlib.h: 818: {
 13055                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
 13056  001108  010F               	movlb	15	; () banked
 13057  00110A  9715               	bcf	21,3,b	;volatile
 13058                           
 13059                           ; BSR set to: 15
 13060                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
 13061  00110C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13062  001110  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13063  001114  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13064  001118  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13065  00111C  0E04               	movlw	4
 13066  00111E  D006               	goto	u6580
 13067  001120                     u6585:
 13068  001120  0100               	movlb	0	; () banked
 13069  001122  90D8               	bcf	status,0,c
 13070  001124  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13071  001126  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13072  001128  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13073  00112A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13074  00112C                     u6580:
 13075  00112C  2EE8               	decfsz	wreg,f,c
 13076  00112E  D7F8               	goto	u6585
 13077  001130  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13078  001134  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13079  001138  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13080  00113C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
 13084  001140  0100               	movlb	0	; () banked
 13085  001142  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13086  001144  0100               	movlb	0	; () banked
 13087  001146  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13088  001148  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13089  00114A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13090  00114C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13091                           
 13092                           ; BSR set to: 0
 13093                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
 13094  00114E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 13095                           
 13096                           ; BSR set to: 0
 13097                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
 13098  001152  0E07               	movlw	7
 13099  001154  0100               	movlb	0	; () banked
 13100  001156  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13101  001158  0100               	movlb	0	; () banked
 13102  00115A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13103  00115C  0E00               	movlw	0
 13104  00115E  0100               	movlb	0	; () banked
 13105  001160  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13106  001162  0100               	movlb	0	; () banked
 13107  001164  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13108  001166  0E00               	movlw	0
 13109  001168  0100               	movlb	0	; () banked
 13110  00116A  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13111  00116C  0100               	movlb	0	; () banked
 13112  00116E  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13113  001170  0E00               	movlw	0
 13114  001172  0100               	movlb	0	; () banked
 13115  001174  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13116  001176  0100               	movlb	0	; () banked
 13117  001178  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13118                           
 13119                           ; BSR set to: 0
 13120                           ;inc\CANlib.h: 826: tamp = tamp << 5;
 13121  00117A  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13122  00117E  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13123  001182  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13124  001186  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13125  00118A  0E05               	movlw	5
 13126  00118C                     u6595:
 13127  00118C  90D8               	bcf	status,0,c
 13128  00118E  0100               	movlb	0	; () banked
 13129  001190  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 13130  001192  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 13131  001194  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 13132  001196  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 13133  001198  2EE8               	decfsz	wreg,f,c
 13134  00119A  D7F8               	goto	u6595
 13135  00119C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13136  0011A0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13137  0011A4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13138  0011A8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13139                           
 13140                           ; BSR set to: 0
 13141                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
 13142  0011AC  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 13143  0011B0                     l5456:
 13144                           
 13145                           ; BSR set to: 0
 13146                           ;inc\CANlib.h: 828: }
 13147                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 13148  0011B0  0100               	movlb	0	; () banked
 13149  0011B2  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 13150  0011B4  0100               	movlb	0	; () banked
 13151  0011B6  A4D8               	btfss	status,2,c
 13152  0011B8  D089               	goto	l5490
 13153                           
 13154                           ; BSR set to: 0
 13155  0011BA  0EF7               	movlw	247
 13156  0011BC  0100               	movlb	0	; () banked
 13157  0011BE  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13158  0011C0  A4D8               	btfss	status,2,c
 13159  0011C2  D084               	goto	l5490
 13160                           
 13161                           ; BSR set to: 0
 13162                           ;inc\CANlib.h: 832: {
 13163                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
 13164  0011C4  010F               	movlb	15	; () banked
 13165  0011C6  8701               	bsf	1,3,b	;volatile
 13166                           
 13167                           ; BSR set to: 15
 13168                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
 13169  0011C8  0100               	movlb	0	; () banked
 13170  0011CA  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13171  0011CC  0100               	movlb	0	; () banked
 13172  0011CE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13173  0011D0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13174  0011D2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13175  0011D4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13176                           
 13177                           ; BSR set to: 0
 13178                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
 13179  0011D6  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 13180                           
 13181                           ; BSR set to: 0
 13182                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
 13183  0011DA  0E00               	movlw	0
 13184  0011DC  0100               	movlb	0	; () banked
 13185  0011DE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13186  0011E0  0100               	movlb	0	; () banked
 13187  0011E2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13188  0011E4  0EFF               	movlw	255
 13189  0011E6  0100               	movlb	0	; () banked
 13190  0011E8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13191  0011EA  0100               	movlb	0	; () banked
 13192  0011EC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13193  0011EE  0E00               	movlw	0
 13194  0011F0  0100               	movlb	0	; () banked
 13195  0011F2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13196  0011F4  0100               	movlb	0	; () banked
 13197  0011F6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13198  0011F8  0E00               	movlw	0
 13199  0011FA  0100               	movlb	0	; () banked
 13200  0011FC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13201  0011FE  0100               	movlb	0	; () banked
 13202  001200  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13203                           
 13204                           ; BSR set to: 0
 13205                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
 13206  001202  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13207  001206  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13208  00120A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13209  00120E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13210  001212  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13211  001216  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13212  00121A  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13213  00121E  0100               	movlb	0	; () banked
 13214  001220  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13215  001222  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13216  001226  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13217  00122A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13218  00122E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13219                           
 13220                           ; BSR set to: 0
 13221                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
 13222  001232  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 13223                           
 13224                           ; BSR set to: 0
 13225                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
 13226  001236  0100               	movlb	0	; () banked
 13227  001238  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13228  00123A  D003               	goto	l463
 13229                           
 13230                           ; BSR set to: 0
 13231                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
 13232  00123C  010F               	movlb	15	; () banked
 13233  00123E  8101               	bsf	1,0,b	;volatile
 13234  001240  D002               	goto	l464
 13235  001242                     l463:
 13236                           
 13237                           ; BSR set to: 0
 13238                           ;inc\CANlib.h: 844: else
 13239                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
 13240  001242  010F               	movlb	15	; () banked
 13241  001244  9101               	bcf	1,0,b	;volatile
 13242  001246                     l464:
 13243                           
 13244                           ; BSR set to: 15
 13245                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
 13246  001246  0100               	movlb	0	; () banked
 13247  001248  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13248  00124A  D003               	goto	l465
 13249                           
 13250                           ; BSR set to: 0
 13251                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
 13252  00124C  010F               	movlb	15	; () banked
 13253  00124E  8301               	bsf	1,1,b	;volatile
 13254  001250  D002               	goto	l466
 13255  001252                     l465:
 13256                           
 13257                           ; BSR set to: 0
 13258                           ;inc\CANlib.h: 849: else
 13259                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
 13260  001252  010F               	movlb	15	; () banked
 13261  001254  9301               	bcf	1,1,b	;volatile
 13262  001256                     l466:
 13263                           
 13264                           ; BSR set to: 15
 13265                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
 13266  001256  0100               	movlb	0	; () banked
 13267  001258  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13268  00125A  D003               	goto	l467
 13269                           
 13270                           ; BSR set to: 0
 13271                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
 13272  00125C  010F               	movlb	15	; () banked
 13273  00125E  8B01               	bsf	1,5,b	;volatile
 13274  001260  D002               	goto	l468
 13275  001262                     l467:
 13276                           
 13277                           ; BSR set to: 0
 13278                           ;inc\CANlib.h: 854: else
 13279                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
 13280  001262  010F               	movlb	15	; () banked
 13281  001264  9B01               	bcf	1,5,b	;volatile
 13282  001266                     l468:
 13283                           
 13284                           ; BSR set to: 15
 13285                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
 13286  001266  0100               	movlb	0	; () banked
 13287  001268  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13288  00126A  D003               	goto	l469
 13289                           
 13290                           ; BSR set to: 0
 13291                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
 13292  00126C  010F               	movlb	15	; () banked
 13293  00126E  8D01               	bsf	1,6,b	;volatile
 13294  001270  D002               	goto	l470
 13295  001272                     l469:
 13296                           
 13297                           ; BSR set to: 0
 13298                           ;inc\CANlib.h: 859: else
 13299                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
 13300  001272  010F               	movlb	15	; () banked
 13301  001274  9D01               	bcf	1,6,b	;volatile
 13302  001276                     l470:
 13303                           
 13304                           ; BSR set to: 15
 13305                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
 13306  001276  0100               	movlb	0	; () banked
 13307  001278  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13308  00127A  D003               	goto	l471
 13309                           
 13310                           ; BSR set to: 0
 13311                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
 13312  00127C  010F               	movlb	15	; () banked
 13313  00127E  8F01               	bsf	1,7,b	;volatile
 13314  001280  D002               	goto	l5484
 13315  001282                     l471:
 13316                           
 13317                           ; BSR set to: 0
 13318                           ;inc\CANlib.h: 864: else
 13319                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
 13320  001282  010F               	movlb	15	; () banked
 13321  001284  9F01               	bcf	1,7,b	;volatile
 13322  001286                     l5484:
 13323                           
 13324                           ; BSR set to: 15
 13325                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
 13326  001286  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13327  00128A  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13328  00128E  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13329  001292  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13330  001296  0E16               	movlw	22
 13331  001298  D006               	goto	u6670
 13332  00129A                     u6675:
 13333  00129A  0100               	movlb	0	; () banked
 13334  00129C  90D8               	bcf	status,0,c
 13335  00129E  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13336  0012A0  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13337  0012A2  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13338  0012A4  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13339  0012A6                     u6670:
 13340  0012A6  2EE8               	decfsz	wreg,f,c
 13341  0012A8  D7F8               	goto	u6675
 13342  0012AA  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13343  0012AE  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13344  0012B2  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13345  0012B6  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13346                           
 13347                           ; BSR set to: 0
 13348                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
 13349  0012BA  0100               	movlb	0	; () banked
 13350  0012BC  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13351  0012BE  0100               	movlb	0	; () banked
 13352  0012C0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13353  0012C2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13354  0012C4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13355  0012C6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13356                           
 13357                           ; BSR set to: 0
 13358                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
 13359  0012C8  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 13360  0012CC                     l5490:
 13361                           
 13362                           ; BSR set to: 0
 13363                           ;inc\CANlib.h: 870: }
 13364                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 13365  0012CC  0100               	movlb	0	; () banked
 13366  0012CE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 13367  0012D0  A4D8               	btfss	status,2,c
 13368  0012D2  D089               	goto	l5524
 13369                           
 13370                           ; BSR set to: 0
 13371  0012D4  0EF7               	movlw	247
 13372  0012D6  0100               	movlb	0	; () banked
 13373  0012D8  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13374  0012DA  A4D8               	btfss	status,2,c
 13375  0012DC  D084               	goto	l5524
 13376                           
 13377                           ; BSR set to: 0
 13378                           ;inc\CANlib.h: 873: {
 13379                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
 13380  0012DE  010F               	movlb	15	; () banked
 13381  0012E0  8705               	bsf	5,3,b	;volatile
 13382                           
 13383                           ; BSR set to: 15
 13384                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
 13385  0012E2  0100               	movlb	0	; () banked
 13386  0012E4  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13387  0012E6  0100               	movlb	0	; () banked
 13388  0012E8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13389  0012EA  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13390  0012EC  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13391  0012EE  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13392                           
 13393                           ; BSR set to: 0
 13394                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
 13395  0012F0  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 13396                           
 13397                           ; BSR set to: 0
 13398                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
 13399  0012F4  0E00               	movlw	0
 13400  0012F6  0100               	movlb	0	; () banked
 13401  0012F8  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13402  0012FA  0100               	movlb	0	; () banked
 13403  0012FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13404  0012FE  0EFF               	movlw	255
 13405  001300  0100               	movlb	0	; () banked
 13406  001302  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13407  001304  0100               	movlb	0	; () banked
 13408  001306  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13409  001308  0E00               	movlw	0
 13410  00130A  0100               	movlb	0	; () banked
 13411  00130C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13412  00130E  0100               	movlb	0	; () banked
 13413  001310  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13414  001312  0E00               	movlw	0
 13415  001314  0100               	movlb	0	; () banked
 13416  001316  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13417  001318  0100               	movlb	0	; () banked
 13418  00131A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13419                           
 13420                           ; BSR set to: 0
 13421                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
 13422  00131C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13423  001320  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13424  001324  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13425  001328  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13426  00132C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13427  001330  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13428  001334  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13429  001338  0100               	movlb	0	; () banked
 13430  00133A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13431  00133C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13432  001340  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13433  001344  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13434  001348  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13435                           
 13436                           ; BSR set to: 0
 13437                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
 13438  00134C  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 13439                           
 13440                           ; BSR set to: 0
 13441                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
 13442  001350  0100               	movlb	0	; () banked
 13443  001352  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13444  001354  D003               	goto	l474
 13445                           
 13446                           ; BSR set to: 0
 13447                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
 13448  001356  010F               	movlb	15	; () banked
 13449  001358  8105               	bsf	5,0,b	;volatile
 13450  00135A  D002               	goto	l475
 13451  00135C                     l474:
 13452                           
 13453                           ; BSR set to: 0
 13454                           ;inc\CANlib.h: 885: else
 13455                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
 13456  00135C  010F               	movlb	15	; () banked
 13457  00135E  9105               	bcf	5,0,b	;volatile
 13458  001360                     l475:
 13459                           
 13460                           ; BSR set to: 15
 13461                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
 13462  001360  0100               	movlb	0	; () banked
 13463  001362  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13464  001364  D003               	goto	l476
 13465                           
 13466                           ; BSR set to: 0
 13467                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
 13468  001366  010F               	movlb	15	; () banked
 13469  001368  8305               	bsf	5,1,b	;volatile
 13470  00136A  D002               	goto	l477
 13471  00136C                     l476:
 13472                           
 13473                           ; BSR set to: 0
 13474                           ;inc\CANlib.h: 890: else
 13475                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
 13476  00136C  010F               	movlb	15	; () banked
 13477  00136E  9305               	bcf	5,1,b	;volatile
 13478  001370                     l477:
 13479                           
 13480                           ; BSR set to: 15
 13481                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
 13482  001370  0100               	movlb	0	; () banked
 13483  001372  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13484  001374  D003               	goto	l478
 13485                           
 13486                           ; BSR set to: 0
 13487                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
 13488  001376  010F               	movlb	15	; () banked
 13489  001378  8B05               	bsf	5,5,b	;volatile
 13490  00137A  D002               	goto	l479
 13491  00137C                     l478:
 13492                           
 13493                           ; BSR set to: 0
 13494                           ;inc\CANlib.h: 895: else
 13495                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
 13496  00137C  010F               	movlb	15	; () banked
 13497  00137E  9B05               	bcf	5,5,b	;volatile
 13498  001380                     l479:
 13499                           
 13500                           ; BSR set to: 15
 13501                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
 13502  001380  0100               	movlb	0	; () banked
 13503  001382  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13504  001384  D003               	goto	l480
 13505                           
 13506                           ; BSR set to: 0
 13507                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
 13508  001386  010F               	movlb	15	; () banked
 13509  001388  8D05               	bsf	5,6,b	;volatile
 13510  00138A  D002               	goto	l481
 13511  00138C                     l480:
 13512                           
 13513                           ; BSR set to: 0
 13514                           ;inc\CANlib.h: 900: else
 13515                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
 13516  00138C  010F               	movlb	15	; () banked
 13517  00138E  9D05               	bcf	5,6,b	;volatile
 13518  001390                     l481:
 13519                           
 13520                           ; BSR set to: 15
 13521                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
 13522  001390  0100               	movlb	0	; () banked
 13523  001392  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13524  001394  D003               	goto	l482
 13525                           
 13526                           ; BSR set to: 0
 13527                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
 13528  001396  010F               	movlb	15	; () banked
 13529  001398  8F05               	bsf	5,7,b	;volatile
 13530  00139A  D002               	goto	l5518
 13531  00139C                     l482:
 13532                           
 13533                           ; BSR set to: 0
 13534                           ;inc\CANlib.h: 905: else
 13535                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
 13536  00139C  010F               	movlb	15	; () banked
 13537  00139E  9F05               	bcf	5,7,b	;volatile
 13538  0013A0                     l5518:
 13539                           
 13540                           ; BSR set to: 15
 13541                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
 13542  0013A0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13543  0013A4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13544  0013A8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13545  0013AC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13546  0013B0  0E16               	movlw	22
 13547  0013B2  D006               	goto	u6750
 13548  0013B4                     u6755:
 13549  0013B4  0100               	movlb	0	; () banked
 13550  0013B6  90D8               	bcf	status,0,c
 13551  0013B8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13552  0013BA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13553  0013BC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13554  0013BE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13555  0013C0                     u6750:
 13556  0013C0  2EE8               	decfsz	wreg,f,c
 13557  0013C2  D7F8               	goto	u6755
 13558  0013C4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13559  0013C8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13560  0013CC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13561  0013D0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13562                           
 13563                           ; BSR set to: 0
 13564                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
 13565  0013D4  0100               	movlb	0	; () banked
 13566  0013D6  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13567  0013D8  0100               	movlb	0	; () banked
 13568  0013DA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13569  0013DC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13570  0013DE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13571  0013E0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13572                           
 13573                           ; BSR set to: 0
 13574                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
 13575  0013E2  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 13576  0013E6                     l5524:
 13577                           
 13578                           ; BSR set to: 0
 13579                           ;inc\CANlib.h: 911: }
 13580                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 13581  0013E6  0E02               	movlw	2
 13582  0013E8  0100               	movlb	0	; () banked
 13583  0013EA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13584  0013EC  A4D8               	btfss	status,2,c
 13585  0013EE  D089               	goto	l5558
 13586                           
 13587                           ; BSR set to: 0
 13588  0013F0  0EF7               	movlw	247
 13589  0013F2  0100               	movlb	0	; () banked
 13590  0013F4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13591  0013F6  A4D8               	btfss	status,2,c
 13592  0013F8  D084               	goto	l5558
 13593                           
 13594                           ; BSR set to: 0
 13595                           ;inc\CANlib.h: 915: {
 13596                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
 13597  0013FA  010F               	movlb	15	; () banked
 13598  0013FC  8709               	bsf	9,3,b	;volatile
 13599                           
 13600                           ; BSR set to: 15
 13601                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
 13602  0013FE  0100               	movlb	0	; () banked
 13603  001400  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13604  001402  0100               	movlb	0	; () banked
 13605  001404  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13606  001406  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13607  001408  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13608  00140A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13609                           
 13610                           ; BSR set to: 0
 13611                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
 13612  00140C  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 13613                           
 13614                           ; BSR set to: 0
 13615                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
 13616  001410  0E00               	movlw	0
 13617  001412  0100               	movlb	0	; () banked
 13618  001414  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13619  001416  0100               	movlb	0	; () banked
 13620  001418  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13621  00141A  0EFF               	movlw	255
 13622  00141C  0100               	movlb	0	; () banked
 13623  00141E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13624  001420  0100               	movlb	0	; () banked
 13625  001422  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13626  001424  0E00               	movlw	0
 13627  001426  0100               	movlb	0	; () banked
 13628  001428  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13629  00142A  0100               	movlb	0	; () banked
 13630  00142C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13631  00142E  0E00               	movlw	0
 13632  001430  0100               	movlb	0	; () banked
 13633  001432  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13634  001434  0100               	movlb	0	; () banked
 13635  001436  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13636                           
 13637                           ; BSR set to: 0
 13638                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
 13639  001438  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13640  00143C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13641  001440  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13642  001444  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13643  001448  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13644  00144C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13645  001450  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13646  001454  0100               	movlb	0	; () banked
 13647  001456  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13648  001458  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13649  00145C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13650  001460  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13651  001464  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13652                           
 13653                           ; BSR set to: 0
 13654                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
 13655  001468  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 13656                           
 13657                           ; BSR set to: 0
 13658                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
 13659  00146C  0100               	movlb	0	; () banked
 13660  00146E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13661  001470  D003               	goto	l485
 13662                           
 13663                           ; BSR set to: 0
 13664                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
 13665  001472  010F               	movlb	15	; () banked
 13666  001474  8109               	bsf	9,0,b	;volatile
 13667  001476  D002               	goto	l486
 13668  001478                     l485:
 13669                           
 13670                           ; BSR set to: 0
 13671                           ;inc\CANlib.h: 927: else
 13672                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
 13673  001478  010F               	movlb	15	; () banked
 13674  00147A  9109               	bcf	9,0,b	;volatile
 13675  00147C                     l486:
 13676                           
 13677                           ; BSR set to: 15
 13678                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
 13679  00147C  0100               	movlb	0	; () banked
 13680  00147E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13681  001480  D003               	goto	l487
 13682                           
 13683                           ; BSR set to: 0
 13684                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
 13685  001482  010F               	movlb	15	; () banked
 13686  001484  8309               	bsf	9,1,b	;volatile
 13687  001486  D002               	goto	l488
 13688  001488                     l487:
 13689                           
 13690                           ; BSR set to: 0
 13691                           ;inc\CANlib.h: 932: else
 13692                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
 13693  001488  010F               	movlb	15	; () banked
 13694  00148A  9309               	bcf	9,1,b	;volatile
 13695  00148C                     l488:
 13696                           
 13697                           ; BSR set to: 15
 13698                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
 13699  00148C  0100               	movlb	0	; () banked
 13700  00148E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13701  001490  D003               	goto	l489
 13702                           
 13703                           ; BSR set to: 0
 13704                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
 13705  001492  010F               	movlb	15	; () banked
 13706  001494  8B09               	bsf	9,5,b	;volatile
 13707  001496  D002               	goto	l490
 13708  001498                     l489:
 13709                           
 13710                           ; BSR set to: 0
 13711                           ;inc\CANlib.h: 937: else
 13712                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
 13713  001498  010F               	movlb	15	; () banked
 13714  00149A  9B09               	bcf	9,5,b	;volatile
 13715  00149C                     l490:
 13716                           
 13717                           ; BSR set to: 15
 13718                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
 13719  00149C  0100               	movlb	0	; () banked
 13720  00149E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13721  0014A0  D003               	goto	l491
 13722                           
 13723                           ; BSR set to: 0
 13724                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
 13725  0014A2  010F               	movlb	15	; () banked
 13726  0014A4  8D09               	bsf	9,6,b	;volatile
 13727  0014A6  D002               	goto	l492
 13728  0014A8                     l491:
 13729                           
 13730                           ; BSR set to: 0
 13731                           ;inc\CANlib.h: 942: else
 13732                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
 13733  0014A8  010F               	movlb	15	; () banked
 13734  0014AA  9D09               	bcf	9,6,b	;volatile
 13735  0014AC                     l492:
 13736                           
 13737                           ; BSR set to: 15
 13738                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
 13739  0014AC  0100               	movlb	0	; () banked
 13740  0014AE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13741  0014B0  D003               	goto	l493
 13742                           
 13743                           ; BSR set to: 0
 13744                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
 13745  0014B2  010F               	movlb	15	; () banked
 13746  0014B4  8F09               	bsf	9,7,b	;volatile
 13747  0014B6  D002               	goto	l5552
 13748  0014B8                     l493:
 13749                           
 13750                           ; BSR set to: 0
 13751                           ;inc\CANlib.h: 947: else
 13752                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
 13753  0014B8  010F               	movlb	15	; () banked
 13754  0014BA  9F09               	bcf	9,7,b	;volatile
 13755  0014BC                     l5552:
 13756                           
 13757                           ; BSR set to: 15
 13758                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
 13759  0014BC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13760  0014C0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13761  0014C4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13762  0014C8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13763  0014CC  0E16               	movlw	22
 13764  0014CE  D006               	goto	u6830
 13765  0014D0                     u6835:
 13766  0014D0  0100               	movlb	0	; () banked
 13767  0014D2  90D8               	bcf	status,0,c
 13768  0014D4  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13769  0014D6  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13770  0014D8  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13771  0014DA  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13772  0014DC                     u6830:
 13773  0014DC  2EE8               	decfsz	wreg,f,c
 13774  0014DE  D7F8               	goto	u6835
 13775  0014E0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13776  0014E4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13777  0014E8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13778  0014EC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13779                           
 13780                           ; BSR set to: 0
 13781                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
 13782  0014F0  0100               	movlb	0	; () banked
 13783  0014F2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13784  0014F4  0100               	movlb	0	; () banked
 13785  0014F6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13786  0014F8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13787  0014FA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13788  0014FC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13789                           
 13790                           ; BSR set to: 0
 13791                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
 13792  0014FE  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 13793  001502                     l5558:
 13794                           
 13795                           ; BSR set to: 0
 13796                           ;inc\CANlib.h: 953: }
 13797                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 13798  001502  0E03               	movlw	3
 13799  001504  0100               	movlb	0	; () banked
 13800  001506  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13801  001508  A4D8               	btfss	status,2,c
 13802  00150A  D089               	goto	l5592
 13803                           
 13804                           ; BSR set to: 0
 13805  00150C  0EF7               	movlw	247
 13806  00150E  0100               	movlb	0	; () banked
 13807  001510  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13808  001512  A4D8               	btfss	status,2,c
 13809  001514  D084               	goto	l5592
 13810                           
 13811                           ; BSR set to: 0
 13812                           ;inc\CANlib.h: 956: {
 13813                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
 13814  001516  010F               	movlb	15	; () banked
 13815  001518  870D               	bsf	13,3,b	;volatile
 13816                           
 13817                           ; BSR set to: 15
 13818                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
 13819  00151A  0100               	movlb	0	; () banked
 13820  00151C  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13821  00151E  0100               	movlb	0	; () banked
 13822  001520  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13823  001522  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13824  001524  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13825  001526  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13826                           
 13827                           ; BSR set to: 0
 13828                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
 13829  001528  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 13830                           
 13831                           ; BSR set to: 0
 13832                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
 13833  00152C  0E00               	movlw	0
 13834  00152E  0100               	movlb	0	; () banked
 13835  001530  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13836  001532  0100               	movlb	0	; () banked
 13837  001534  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13838  001536  0EFF               	movlw	255
 13839  001538  0100               	movlb	0	; () banked
 13840  00153A  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13841  00153C  0100               	movlb	0	; () banked
 13842  00153E  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13843  001540  0E00               	movlw	0
 13844  001542  0100               	movlb	0	; () banked
 13845  001544  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13846  001546  0100               	movlb	0	; () banked
 13847  001548  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13848  00154A  0E00               	movlw	0
 13849  00154C  0100               	movlb	0	; () banked
 13850  00154E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13851  001550  0100               	movlb	0	; () banked
 13852  001552  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13853                           
 13854                           ; BSR set to: 0
 13855                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
 13856  001554  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13857  001558  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13858  00155C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13859  001560  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13860  001564  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13861  001568  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13862  00156C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13863  001570  0100               	movlb	0	; () banked
 13864  001572  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13865  001574  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13866  001578  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13867  00157C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13868  001580  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13869                           
 13870                           ; BSR set to: 0
 13871                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
 13872  001584  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 13873                           
 13874                           ; BSR set to: 0
 13875                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
 13876  001588  0100               	movlb	0	; () banked
 13877  00158A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13878  00158C  D003               	goto	l496
 13879                           
 13880                           ; BSR set to: 0
 13881                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
 13882  00158E  010F               	movlb	15	; () banked
 13883  001590  810D               	bsf	13,0,b	;volatile
 13884  001592  D002               	goto	l497
 13885  001594                     l496:
 13886                           
 13887                           ; BSR set to: 0
 13888                           ;inc\CANlib.h: 968: else
 13889                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
 13890  001594  010F               	movlb	15	; () banked
 13891  001596  910D               	bcf	13,0,b	;volatile
 13892  001598                     l497:
 13893                           
 13894                           ; BSR set to: 15
 13895                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
 13896  001598  0100               	movlb	0	; () banked
 13897  00159A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13898  00159C  D003               	goto	l498
 13899                           
 13900                           ; BSR set to: 0
 13901                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
 13902  00159E  010F               	movlb	15	; () banked
 13903  0015A0  830D               	bsf	13,1,b	;volatile
 13904  0015A2  D002               	goto	l499
 13905  0015A4                     l498:
 13906                           
 13907                           ; BSR set to: 0
 13908                           ;inc\CANlib.h: 973: else
 13909                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
 13910  0015A4  010F               	movlb	15	; () banked
 13911  0015A6  930D               	bcf	13,1,b	;volatile
 13912  0015A8                     l499:
 13913                           
 13914                           ; BSR set to: 15
 13915                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
 13916  0015A8  0100               	movlb	0	; () banked
 13917  0015AA  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13918  0015AC  D003               	goto	l500
 13919                           
 13920                           ; BSR set to: 0
 13921                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
 13922  0015AE  010F               	movlb	15	; () banked
 13923  0015B0  8B0D               	bsf	13,5,b	;volatile
 13924  0015B2  D002               	goto	l501
 13925  0015B4                     l500:
 13926                           
 13927                           ; BSR set to: 0
 13928                           ;inc\CANlib.h: 978: else
 13929                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
 13930  0015B4  010F               	movlb	15	; () banked
 13931  0015B6  9B0D               	bcf	13,5,b	;volatile
 13932  0015B8                     l501:
 13933                           
 13934                           ; BSR set to: 15
 13935                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
 13936  0015B8  0100               	movlb	0	; () banked
 13937  0015BA  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13938  0015BC  D003               	goto	l502
 13939                           
 13940                           ; BSR set to: 0
 13941                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
 13942  0015BE  010F               	movlb	15	; () banked
 13943  0015C0  8D0D               	bsf	13,6,b	;volatile
 13944  0015C2  D002               	goto	l503
 13945  0015C4                     l502:
 13946                           
 13947                           ; BSR set to: 0
 13948                           ;inc\CANlib.h: 983: else
 13949                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
 13950  0015C4  010F               	movlb	15	; () banked
 13951  0015C6  9D0D               	bcf	13,6,b	;volatile
 13952  0015C8                     l503:
 13953                           
 13954                           ; BSR set to: 15
 13955                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
 13956  0015C8  0100               	movlb	0	; () banked
 13957  0015CA  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13958  0015CC  D003               	goto	l504
 13959                           
 13960                           ; BSR set to: 0
 13961                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
 13962  0015CE  010F               	movlb	15	; () banked
 13963  0015D0  8F0D               	bsf	13,7,b	;volatile
 13964  0015D2  D002               	goto	l5586
 13965  0015D4                     l504:
 13966                           
 13967                           ; BSR set to: 0
 13968                           ;inc\CANlib.h: 988: else
 13969                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
 13970  0015D4  010F               	movlb	15	; () banked
 13971  0015D6  9F0D               	bcf	13,7,b	;volatile
 13972  0015D8                     l5586:
 13973                           
 13974                           ; BSR set to: 15
 13975                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
 13976  0015D8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13977  0015DC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13978  0015E0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13979  0015E4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13980  0015E8  0E16               	movlw	22
 13981  0015EA  D006               	goto	u6910
 13982  0015EC                     u6915:
 13983  0015EC  0100               	movlb	0	; () banked
 13984  0015EE  90D8               	bcf	status,0,c
 13985  0015F0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13986  0015F2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13987  0015F4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13988  0015F6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13989  0015F8                     u6910:
 13990  0015F8  2EE8               	decfsz	wreg,f,c
 13991  0015FA  D7F8               	goto	u6915
 13992  0015FC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13993  001600  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13994  001604  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13995  001608  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13996                           
 13997                           ; BSR set to: 0
 13998                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
 13999  00160C  0100               	movlb	0	; () banked
 14000  00160E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14001  001610  0100               	movlb	0	; () banked
 14002  001612  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14003  001614  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14004  001616  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14005  001618  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14006                           
 14007                           ; BSR set to: 0
 14008                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
 14009  00161A  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 14010  00161E                     l5592:
 14011                           
 14012                           ; BSR set to: 0
 14013                           ;inc\CANlib.h: 994: }
 14014                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 14015  00161E  0E04               	movlw	4
 14016  001620  0100               	movlb	0	; () banked
 14017  001622  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 14018  001624  A4D8               	btfss	status,2,c
 14019  001626  D089               	goto	l5626
 14020                           
 14021                           ; BSR set to: 0
 14022  001628  0EF7               	movlw	247
 14023  00162A  0100               	movlb	0	; () banked
 14024  00162C  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 14025  00162E  A4D8               	btfss	status,2,c
 14026  001630  D084               	goto	l5626
 14027                           
 14028                           ; BSR set to: 0
 14029                           ;inc\CANlib.h: 997: {
 14030                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
 14031  001632  010F               	movlb	15	; () banked
 14032  001634  8711               	bsf	17,3,b	;volatile
 14033                           
 14034                           ; BSR set to: 15
 14035                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
 14036  001636  0100               	movlb	0	; () banked
 14037  001638  5177               	movf	CANSetFilter@filter& (0+255),w,b
 14038  00163A  0100               	movlb	0	; () banked
 14039  00163C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14040  00163E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14041  001640  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14042  001642  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14043                           
 14044                           ; BSR set to: 0
 14045                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
 14046  001644  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 14047                           
 14048                           ; BSR set to: 0
 14049                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
 14050  001648  0E00               	movlw	0
 14051  00164A  0100               	movlb	0	; () banked
 14052  00164C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 14053  00164E  0100               	movlb	0	; () banked
 14054  001650  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14055  001652  0EFF               	movlw	255
 14056  001654  0100               	movlb	0	; () banked
 14057  001656  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14058  001658  0100               	movlb	0	; () banked
 14059  00165A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14060  00165C  0E00               	movlw	0
 14061  00165E  0100               	movlb	0	; () banked
 14062  001660  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14063  001662  0100               	movlb	0	; () banked
 14064  001664  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14065  001666  0E00               	movlw	0
 14066  001668  0100               	movlb	0	; () banked
 14067  00166A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14068  00166C  0100               	movlb	0	; () banked
 14069  00166E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14070                           
 14071                           ; BSR set to: 0
 14072                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
 14073  001670  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 14074  001674  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14075  001678  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14076  00167C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14077  001680  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 14078  001684  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14079  001688  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14080  00168C  0100               	movlb	0	; () banked
 14081  00168E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 14082  001690  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14083  001694  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14084  001698  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14085  00169C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14086                           
 14087                           ; BSR set to: 0
 14088                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
 14089  0016A0  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 14090                           
 14091                           ; BSR set to: 0
 14092                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
 14093  0016A4  0100               	movlb	0	; () banked
 14094  0016A6  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14095  0016A8  D003               	goto	l507
 14096                           
 14097                           ; BSR set to: 0
 14098                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
 14099  0016AA  010F               	movlb	15	; () banked
 14100  0016AC  8111               	bsf	17,0,b	;volatile
 14101  0016AE  D002               	goto	l508
 14102  0016B0                     l507:
 14103                           
 14104                           ; BSR set to: 0
 14105                           ;inc\CANlib.h: 1009: else
 14106                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
 14107  0016B0  010F               	movlb	15	; () banked
 14108  0016B2  9111               	bcf	17,0,b	;volatile
 14109  0016B4                     l508:
 14110                           
 14111                           ; BSR set to: 15
 14112                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
 14113  0016B4  0100               	movlb	0	; () banked
 14114  0016B6  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14115  0016B8  D003               	goto	l509
 14116                           
 14117                           ; BSR set to: 0
 14118                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
 14119  0016BA  010F               	movlb	15	; () banked
 14120  0016BC  8311               	bsf	17,1,b	;volatile
 14121  0016BE  D002               	goto	l510
 14122  0016C0                     l509:
 14123                           
 14124                           ; BSR set to: 0
 14125                           ;inc\CANlib.h: 1014: else
 14126                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
 14127  0016C0  010F               	movlb	15	; () banked
 14128  0016C2  9311               	bcf	17,1,b	;volatile
 14129  0016C4                     l510:
 14130                           
 14131                           ; BSR set to: 15
 14132                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
 14133  0016C4  0100               	movlb	0	; () banked
 14134  0016C6  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14135  0016C8  D003               	goto	l511
 14136                           
 14137                           ; BSR set to: 0
 14138                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
 14139  0016CA  010F               	movlb	15	; () banked
 14140  0016CC  8B11               	bsf	17,5,b	;volatile
 14141  0016CE  D002               	goto	l512
 14142  0016D0                     l511:
 14143                           
 14144                           ; BSR set to: 0
 14145                           ;inc\CANlib.h: 1019: else
 14146                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
 14147  0016D0  010F               	movlb	15	; () banked
 14148  0016D2  9B11               	bcf	17,5,b	;volatile
 14149  0016D4                     l512:
 14150                           
 14151                           ; BSR set to: 15
 14152                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
 14153  0016D4  0100               	movlb	0	; () banked
 14154  0016D6  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14155  0016D8  D003               	goto	l513
 14156                           
 14157                           ; BSR set to: 0
 14158                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
 14159  0016DA  010F               	movlb	15	; () banked
 14160  0016DC  8D11               	bsf	17,6,b	;volatile
 14161  0016DE  D002               	goto	l514
 14162  0016E0                     l513:
 14163                           
 14164                           ; BSR set to: 0
 14165                           ;inc\CANlib.h: 1024: else
 14166                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
 14167  0016E0  010F               	movlb	15	; () banked
 14168  0016E2  9D11               	bcf	17,6,b	;volatile
 14169  0016E4                     l514:
 14170                           
 14171                           ; BSR set to: 15
 14172                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
 14173  0016E4  0100               	movlb	0	; () banked
 14174  0016E6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14175  0016E8  D003               	goto	l515
 14176                           
 14177                           ; BSR set to: 0
 14178                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
 14179  0016EA  010F               	movlb	15	; () banked
 14180  0016EC  8F11               	bsf	17,7,b	;volatile
 14181  0016EE  D002               	goto	l5620
 14182  0016F0                     l515:
 14183                           
 14184                           ; BSR set to: 0
 14185                           ;inc\CANlib.h: 1029: else
 14186                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
 14187  0016F0  010F               	movlb	15	; () banked
 14188  0016F2  9F11               	bcf	17,7,b	;volatile
 14189  0016F4                     l5620:
 14190                           
 14191                           ; BSR set to: 15
 14192                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
 14193  0016F4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14194  0016F8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14195  0016FC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14196  001700  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14197  001704  0E16               	movlw	22
 14198  001706  D006               	goto	u6990
 14199  001708                     u6995:
 14200  001708  0100               	movlb	0	; () banked
 14201  00170A  90D8               	bcf	status,0,c
 14202  00170C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14203  00170E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14204  001710  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14205  001712  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14206  001714                     u6990:
 14207  001714  2EE8               	decfsz	wreg,f,c
 14208  001716  D7F8               	goto	u6995
 14209  001718  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14210  00171C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14211  001720  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14212  001724  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14213                           
 14214                           ; BSR set to: 0
 14215                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
 14216  001728  0100               	movlb	0	; () banked
 14217  00172A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14218  00172C  0100               	movlb	0	; () banked
 14219  00172E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14220  001730  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14221  001732  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14222  001734  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14223                           
 14224                           ; BSR set to: 0
 14225                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
 14226  001736  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 14227  00173A                     l5626:
 14228                           
 14229                           ; BSR set to: 0
 14230                           ;inc\CANlib.h: 1035: }
 14231                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 14232  00173A  0E05               	movlw	5
 14233  00173C  0100               	movlb	0	; () banked
 14234  00173E  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 14235  001740  A4D8               	btfss	status,2,c
 14236  001742  0012               	return	
 14237                           
 14238                           ; BSR set to: 0
 14239  001744  0EF7               	movlw	247
 14240  001746  0100               	movlb	0	; () banked
 14241  001748  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 14242  00174A  A4D8               	btfss	status,2,c
 14243  00174C  0012               	return	
 14244                           
 14245                           ; BSR set to: 0
 14246                           ;inc\CANlib.h: 1038: {
 14247                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
 14248  00174E  010F               	movlb	15	; () banked
 14249  001750  8715               	bsf	21,3,b	;volatile
 14250                           
 14251                           ; BSR set to: 15
 14252                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
 14253  001752  0100               	movlb	0	; () banked
 14254  001754  5177               	movf	CANSetFilter@filter& (0+255),w,b
 14255  001756  0100               	movlb	0	; () banked
 14256  001758  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14257  00175A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14258  00175C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14259  00175E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14260                           
 14261                           ; BSR set to: 0
 14262                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
 14263  001760  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 14264                           
 14265                           ; BSR set to: 0
 14266                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
 14267  001764  0E00               	movlw	0
 14268  001766  0100               	movlb	0	; () banked
 14269  001768  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 14270  00176A  0100               	movlb	0	; () banked
 14271  00176C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14272  00176E  0EFF               	movlw	255
 14273  001770  0100               	movlb	0	; () banked
 14274  001772  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14275  001774  0100               	movlb	0	; () banked
 14276  001776  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14277  001778  0E00               	movlw	0
 14278  00177A  0100               	movlb	0	; () banked
 14279  00177C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14280  00177E  0100               	movlb	0	; () banked
 14281  001780  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14282  001782  0E00               	movlw	0
 14283  001784  0100               	movlb	0	; () banked
 14284  001786  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14285  001788  0100               	movlb	0	; () banked
 14286  00178A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14287                           
 14288                           ; BSR set to: 0
 14289                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
 14290  00178C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 14291  001790  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14292  001794  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14293  001798  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14294  00179C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 14295  0017A0  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14296  0017A4  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14297  0017A8  0100               	movlb	0	; () banked
 14298  0017AA  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 14299  0017AC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14300  0017B0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14301  0017B4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14302  0017B8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14303                           
 14304                           ; BSR set to: 0
 14305                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
 14306  0017BC  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 14307                           
 14308                           ; BSR set to: 0
 14309                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
 14310  0017C0  0100               	movlb	0	; () banked
 14311  0017C2  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14312  0017C4  D003               	goto	l518
 14313                           
 14314                           ; BSR set to: 0
 14315                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
 14316  0017C6  010F               	movlb	15	; () banked
 14317  0017C8  8115               	bsf	21,0,b	;volatile
 14318  0017CA  D002               	goto	l519
 14319  0017CC                     l518:
 14320                           
 14321                           ; BSR set to: 0
 14322                           ;inc\CANlib.h: 1050: else
 14323                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
 14324  0017CC  010F               	movlb	15	; () banked
 14325  0017CE  9115               	bcf	21,0,b	;volatile
 14326  0017D0                     l519:
 14327                           
 14328                           ; BSR set to: 15
 14329                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
 14330  0017D0  0100               	movlb	0	; () banked
 14331  0017D2  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14332  0017D4  D003               	goto	l520
 14333                           
 14334                           ; BSR set to: 0
 14335                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
 14336  0017D6  010F               	movlb	15	; () banked
 14337  0017D8  8315               	bsf	21,1,b	;volatile
 14338  0017DA  D002               	goto	l521
 14339  0017DC                     l520:
 14340                           
 14341                           ; BSR set to: 0
 14342                           ;inc\CANlib.h: 1055: else
 14343                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
 14344  0017DC  010F               	movlb	15	; () banked
 14345  0017DE  9315               	bcf	21,1,b	;volatile
 14346  0017E0                     l521:
 14347                           
 14348                           ; BSR set to: 15
 14349                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
 14350  0017E0  0100               	movlb	0	; () banked
 14351  0017E2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14352  0017E4  D003               	goto	l522
 14353                           
 14354                           ; BSR set to: 0
 14355                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
 14356  0017E6  010F               	movlb	15	; () banked
 14357  0017E8  8B15               	bsf	21,5,b	;volatile
 14358  0017EA  D002               	goto	l523
 14359  0017EC                     l522:
 14360                           
 14361                           ; BSR set to: 0
 14362                           ;inc\CANlib.h: 1060: else
 14363                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
 14364  0017EC  010F               	movlb	15	; () banked
 14365  0017EE  9B15               	bcf	21,5,b	;volatile
 14366  0017F0                     l523:
 14367                           
 14368                           ; BSR set to: 15
 14369                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
 14370  0017F0  0100               	movlb	0	; () banked
 14371  0017F2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14372  0017F4  D003               	goto	l524
 14373                           
 14374                           ; BSR set to: 0
 14375                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
 14376  0017F6  010F               	movlb	15	; () banked
 14377  0017F8  8D15               	bsf	21,6,b	;volatile
 14378  0017FA  D002               	goto	l525
 14379  0017FC                     l524:
 14380                           
 14381                           ; BSR set to: 0
 14382                           ;inc\CANlib.h: 1065: else
 14383                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
 14384  0017FC  010F               	movlb	15	; () banked
 14385  0017FE  9D15               	bcf	21,6,b	;volatile
 14386  001800                     l525:
 14387                           
 14388                           ; BSR set to: 15
 14389                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
 14390  001800  0100               	movlb	0	; () banked
 14391  001802  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14392  001804  D003               	goto	l526
 14393                           
 14394                           ; BSR set to: 0
 14395                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
 14396  001806  010F               	movlb	15	; () banked
 14397  001808  8F15               	bsf	21,7,b	;volatile
 14398  00180A  D002               	goto	l5654
 14399  00180C                     l526:
 14400                           
 14401                           ; BSR set to: 0
 14402                           ;inc\CANlib.h: 1070: else
 14403                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
 14404  00180C  010F               	movlb	15	; () banked
 14405  00180E  9F15               	bcf	21,7,b	;volatile
 14406  001810                     l5654:
 14407                           
 14408                           ; BSR set to: 15
 14409                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
 14410  001810  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14411  001814  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14412  001818  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14413  00181C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14414  001820  0E16               	movlw	22
 14415  001822  D006               	goto	u7070
 14416  001824                     u7075:
 14417  001824  0100               	movlb	0	; () banked
 14418  001826  90D8               	bcf	status,0,c
 14419  001828  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14420  00182A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14421  00182C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14422  00182E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14423  001830                     u7070:
 14424  001830  2EE8               	decfsz	wreg,f,c
 14425  001832  D7F8               	goto	u7075
 14426  001834  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14427  001838  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14428  00183C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14429  001840  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14430                           
 14431                           ; BSR set to: 0
 14432                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
 14433  001844  0100               	movlb	0	; () banked
 14434  001846  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14435  001848  0100               	movlb	0	; () banked
 14436  00184A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14437  00184C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14438  00184E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14439  001850  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14440                           
 14441                           ; BSR set to: 0
 14442                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
 14443  001852  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 14444  001856  0012               	return	
 14445  001858                     __end_of_CANSetFilter:
 14446                           	opt stack 0
 14447                           tblptru	equ	0xFF8
 14448                           tblptrh	equ	0xFF7
 14449                           tblptrl	equ	0xFF6
 14450                           tablat	equ	0xFF5
 14451                           prodh	equ	0xFF4
 14452                           prodl	equ	0xFF3
 14453                           intcon	equ	0xFF2
 14454                           intcon2	equ	0xFF1
 14455                           postinc0	equ	0xFEE
 14456                           wreg	equ	0xFE8
 14457                           postdec1	equ	0xFE5
 14458                           fsr1l	equ	0xFE1
 14459                           indf2	equ	0xFDF
 14460                           postinc2	equ	0xFDE
 14461                           postdec2	equ	0xFDD
 14462                           fsr2h	equ	0xFDA
 14463                           fsr2l	equ	0xFD9
 14464                           status	equ	0xFD8
 14465                           
 14466 ;; *************** function _CANOperationMode *****************
 14467 ;; Defined at:
 14468 ;;		line 206 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 14469 ;; Parameters:    Size  Location     Type
 14470 ;;  mode            1    wreg     enum E16307
 14471 ;; Auto vars:     Size  Location     Type
 14472 ;;  mode            1   23[BANK0 ] enum E16307
 14473 ;; Return value:  Size  Location     Type
 14474 ;;		None               void
 14475 ;; Registers used:
 14476 ;;		wreg, status,2, status,0
 14477 ;; Tracked objects:
 14478 ;;		On entry : 0/0
 14479 ;;		On exit  : 0/0
 14480 ;;		Unchanged: 0/0
 14481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14483 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14485 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14486 ;;Total ram usage:        1 bytes
 14487 ;; Hardware stack levels used:    1
 14488 ;; Hardware stack levels required when called:    4
 14489 ;; This function calls:
 14490 ;;		Nothing
 14491 ;; This function is called by:
 14492 ;;		_CANInitialize
 14493 ;; This function uses a non-reentrant model
 14494 ;;
 14495                           
 14496                           	psect	text33
 14497  00670E                     __ptext33:
 14498                           	opt stack 0
 14499  00670E                     _CANOperationMode:
 14500                           	opt stack 24
 14501                           
 14502                           ; BSR set to: 0
 14503                           ;incstack = 0
 14504                           ;CANOperationMode@mode stored from wreg
 14505  00670E  0100               	movlb	0	; () banked
 14506  006710  6F77               	movwf	CANOperationMode@mode& (0+255),b
 14507                           
 14508                           ;inc\CANlib.h: 208: CANCON = mode;
 14509  006712  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 14510  006716                     l7820:
 14511  006716  506E               	movf	3950,w,c	;volatile
 14512  006718  0BE0               	andlw	224
 14513  00671A  0100               	movlb	0	; () banked
 14514  00671C  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 14515  00671E  B4D8               	btfsc	status,2,c
 14516  006720  0012               	return	
 14517  006722  D7F9               	goto	l7820
 14518  006724                     __end_of_CANOperationMode:
 14519                           	opt stack 0
 14520                           tblptru	equ	0xFF8
 14521                           tblptrh	equ	0xFF7
 14522                           tblptrl	equ	0xFF6
 14523                           tablat	equ	0xFF5
 14524                           prodh	equ	0xFF4
 14525                           prodl	equ	0xFF3
 14526                           intcon	equ	0xFF2
 14527                           intcon2	equ	0xFF1
 14528                           postinc0	equ	0xFEE
 14529                           wreg	equ	0xFE8
 14530                           postdec1	equ	0xFE5
 14531                           fsr1l	equ	0xFE1
 14532                           indf2	equ	0xFDF
 14533                           postinc2	equ	0xFDE
 14534                           postdec2	equ	0xFDD
 14535                           fsr2h	equ	0xFDA
 14536                           fsr2l	equ	0xFD9
 14537                           status	equ	0xFD8
 14538                           
 14539 ;; *************** function _can_interpreter *****************
 14540 ;; Defined at:
 14541 ;;		line 505 in file "parcheggio.c"
 14542 ;; Parameters:    Size  Location     Type
 14543 ;;		None
 14544 ;; Auto vars:     Size  Location     Type
 14545 ;;		None
 14546 ;; Return value:  Size  Location     Type
 14547 ;;		None               void
 14548 ;; Registers used:
 14549 ;;		wreg, status,2, status,0
 14550 ;; Tracked objects:
 14551 ;;		On entry : 0/0
 14552 ;;		On exit  : 0/0
 14553 ;;		Unchanged: 0/0
 14554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14557 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14558 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14559 ;;Total ram usage:        4 bytes
 14560 ;; Hardware stack levels used:    1
 14561 ;; Hardware stack levels required when called:    4
 14562 ;; This function calls:
 14563 ;;		Nothing
 14564 ;; This function is called by:
 14565 ;;		_main
 14566 ;; This function uses a non-reentrant model
 14567 ;;
 14568                           
 14569                           	psect	text34
 14570  0064F2                     __ptext34:
 14571                           	opt stack 0
 14572  0064F2                     _can_interpreter:
 14573                           	opt stack 26
 14574                           
 14575                           ;parcheggio.c: 506: left_speed = data_speed_rx[1];
 14576                           
 14577                           ; BSR set to: 0
 14578                           ;incstack = 0
 14579  0064F2  C109  F01F         	movff	_data_speed_rx+1,_left_speed
 14580  0064F6  6A20               	clrf	_left_speed+1,c
 14581                           
 14582                           ;parcheggio.c: 507: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 14583  0064F8  501F               	movf	_left_speed,w,c
 14584  0064FA  0100               	movlb	0	; () banked
 14585  0064FC  6F77               	movwf	??_can_interpreter& (0+255),b
 14586  0064FE  0101               	movlb	1	; () banked
 14587  006500  5108               	movf	_data_speed_rx& (0+255),w,b
 14588  006502  6E1F               	movwf	_left_speed,c
 14589  006504  C077  F020         	movff	??_can_interpreter,_left_speed+1
 14590                           
 14591                           ; BSR set to: 1
 14592                           ;parcheggio.c: 508: right_speed = data_speed_rx[3];
 14593  006508  C10B  F023         	movff	_data_speed_rx+3,_right_speed
 14594  00650C  6A24               	clrf	_right_speed+1,c
 14595                           
 14596                           ;parcheggio.c: 509: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 14597  00650E  5023               	movf	_right_speed,w,c
 14598  006510  0100               	movlb	0	; () banked
 14599  006512  6F77               	movwf	??_can_interpreter& (0+255),b
 14600  006514  0101               	movlb	1	; () banked
 14601  006516  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 14602  006518  6E23               	movwf	_right_speed,c
 14603  00651A  C077  F024         	movff	??_can_interpreter,_right_speed+1
 14604                           
 14605                           ; BSR set to: 1
 14606                           ;parcheggio.c: 510: actual_speed = (right_speed + left_speed) / 2;
 14607  00651E  501F               	movf	_left_speed,w,c
 14608  006520  2423               	addwf	_right_speed,w,c
 14609  006522  0100               	movlb	0	; () banked
 14610  006524  6F77               	movwf	??_can_interpreter& (0+255),b
 14611  006526  5020               	movf	_left_speed+1,w,c
 14612  006528  2024               	addwfc	_right_speed+1,w,c
 14613  00652A  0100               	movlb	0	; () banked
 14614  00652C  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 14615  00652E  90D8               	bcf	status,0,c
 14616  006530  0100               	movlb	0	; () banked
 14617  006532  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 14618  006534  0100               	movlb	0	; () banked
 14619  006536  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 14620  006538  0100               	movlb	0	; () banked
 14621  00653A  3177               	rrcf	??_can_interpreter& (0+255),w,b
 14622  00653C  0100               	movlb	0	; () banked
 14623  00653E  6FDE               	movwf	_actual_speed& (0+255),b
 14624  006540  C079  F0DF         	movff	??_can_interpreter+2,_actual_speed+1
 14625                           
 14626                           ; BSR set to: 0
 14627  006544  0012               	return		;funcret
 14628  006546                     __end_of_can_interpreter:
 14629                           	opt stack 0
 14630                           tblptru	equ	0xFF8
 14631                           tblptrh	equ	0xFF7
 14632                           tblptrl	equ	0xFF6
 14633                           tablat	equ	0xFF5
 14634                           prodh	equ	0xFF4
 14635                           prodl	equ	0xFF3
 14636                           intcon	equ	0xFF2
 14637                           intcon2	equ	0xFF1
 14638                           postinc0	equ	0xFEE
 14639                           wreg	equ	0xFE8
 14640                           postdec1	equ	0xFE5
 14641                           fsr1l	equ	0xFE1
 14642                           indf2	equ	0xFDF
 14643                           postinc2	equ	0xFDE
 14644                           postdec2	equ	0xFDD
 14645                           fsr2h	equ	0xFDA
 14646                           fsr2l	equ	0xFD9
 14647                           status	equ	0xFD8
 14648                           
 14649 ;; *************** function _ISR_Bassa *****************
 14650 ;; Defined at:
 14651 ;;		line 121 in file "parcheggio.c"
 14652 ;; Parameters:    Size  Location     Type
 14653 ;;		None
 14654 ;; Auto vars:     Size  Location     Type
 14655 ;;  i               1   38[COMRAM] unsigned char 
 14656 ;;  gigi            1   37[COMRAM] unsigned char 
 14657 ;; Return value:  Size  Location     Type
 14658 ;;		None               void
 14659 ;; Registers used:
 14660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14661 ;; Tracked objects:
 14662 ;;		On entry : 0/0
 14663 ;;		On exit  : 0/0
 14664 ;;		Unchanged: 0/0
 14665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14667 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14668 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14669 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14670 ;;Total ram usage:       23 bytes
 14671 ;; Hardware stack levels used:    1
 14672 ;; Hardware stack levels required when called:    3
 14673 ;; This function calls:
 14674 ;;		_CANreceiveMessage
 14675 ;;		i1_CANisTxReady
 14676 ;;		i1_CANsendMessage
 14677 ;; This function is called by:
 14678 ;;		Interrupt level 1
 14679 ;; This function uses a non-reentrant model
 14680 ;;
 14681                           
 14682                           	psect	intcodelo
 14683  000018                     __pintcodelo:
 14684                           	opt stack 0
 14685  000018                     _ISR_Bassa:
 14686                           	opt stack 21
 14687                           
 14688                           ; BSR set to: 0
 14689                           ;incstack = 0
 14690  000018  8056               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14691  00001A  CFD8 F041          	movff	status,??_ISR_Bassa+4
 14692  00001E  CFE8 F042          	movff	wreg,??_ISR_Bassa+5
 14693  000022  CFE0 F043          	movff	bsr,??_ISR_Bassa+6
 14694  000026  CFFA F044          	movff	pclath,??_ISR_Bassa+7
 14695  00002A  CFFB F045          	movff	pclatu,??_ISR_Bassa+8
 14696  00002E  CFE9 F046          	movff	fsr0l,??_ISR_Bassa+9
 14697  000032  CFEA F047          	movff	fsr0h,??_ISR_Bassa+10
 14698  000036  CFE1 F048          	movff	fsr1l,??_ISR_Bassa+11
 14699  00003A  CFE2 F049          	movff	fsr1h,??_ISR_Bassa+12
 14700  00003E  CFD9 F04A          	movff	fsr2l,??_ISR_Bassa+13
 14701  000042  CFDA F04B          	movff	fsr2h,??_ISR_Bassa+14
 14702  000046  CFF3 F04C          	movff	prodl,??_ISR_Bassa+15
 14703  00004A  CFF4 F04D          	movff	prodh,??_ISR_Bassa+16
 14704  00004E  CFF6 F04E          	movff	tblptrl,??_ISR_Bassa+17
 14705  000052  CFF7 F04F          	movff	tblptrh,??_ISR_Bassa+18
 14706  000056  CFF8 F050          	movff	tblptru,??_ISR_Bassa+19
 14707  00005A  CFF5 F051          	movff	tablat,??_ISR_Bassa+20
 14708                           
 14709                           ;parcheggio.c: 124: if (INTCONbits.TMR0IF == 1) {
 14710  00005E  A4F2               	btfss	intcon,2,c	;volatile
 14711  000060  D095               	goto	i1l8656
 14712                           
 14713                           ;parcheggio.c: 125: INTCONbits.INT0IE = 0;
 14714  000062  98F2               	bcf	intcon,4,c	;volatile
 14715                           
 14716                           ;parcheggio.c: 126: T0CONbits.TMR0ON = 0;
 14717  000064  9ED5               	bcf	4053,7,c	;volatile
 14718                           
 14719                           ;parcheggio.c: 127: TMR0H = 0x34;
 14720  000066  0E34               	movlw	52
 14721  000068  6ED7               	movwf	4055,c	;volatile
 14722                           
 14723                           ;parcheggio.c: 128: TMR0L = 0xE0;
 14724  00006A  0EE0               	movlw	224
 14725  00006C  6ED6               	movwf	4054,c	;volatile
 14726                           
 14727                           ;parcheggio.c: 129: T0CONbits.TMR0ON = 1;
 14728  00006E  8ED5               	bsf	4053,7,c	;volatile
 14729                           
 14730                           ;parcheggio.c: 131: if (distance_error == 1) {
 14731  000070  A854               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14732  000072  D00C               	goto	i1l704
 14733                           
 14734                           ;parcheggio.c: 132: sensor_distance[MUX_index] = 5000;
 14735  000074  5029               	movf	_MUX_index,w,c	;volatile
 14736  000076  0D02               	mullw	2
 14737  000078  0E01               	movlw	low _sensor_distance
 14738  00007A  24F3               	addwf	prodl,w,c
 14739  00007C  6ED9               	movwf	fsr2l,c
 14740  00007E  0E00               	movlw	high _sensor_distance
 14741  000080  20F4               	addwfc	prodh,w,c
 14742  000082  6EDA               	movwf	fsr2h,c
 14743  000084  0E88               	movlw	136
 14744  000086  6EDE               	movwf	postinc2,c
 14745  000088  0E13               	movlw	19
 14746  00008A  6EDD               	movwf	postdec2,c
 14747  00008C                     i1l704:
 14748                           
 14749                           ;parcheggio.c: 133: }
 14750                           ;parcheggio.c: 135: if ((sensor_distance[MUX_index] < 10)&&(start_operation == 0)) {
 14751  00008C  5029               	movf	_MUX_index,w,c	;volatile
 14752  00008E  0D02               	mullw	2
 14753  000090  0E01               	movlw	low _sensor_distance
 14754  000092  24F3               	addwf	prodl,w,c
 14755  000094  6ED9               	movwf	fsr2l,c
 14756  000096  0E00               	movlw	high _sensor_distance
 14757  000098  20F4               	addwfc	prodh,w,c
 14758  00009A  6EDA               	movwf	fsr2h,c
 14759  00009C  0E01               	movlw	1
 14760  00009E  50DB               	movf	plusw2,w,c
 14761  0000A0  E113               	bnz	i1l8612
 14762  0000A2  0E0A               	movlw	10
 14763  0000A4  5CDE               	subwf	postinc2,w,c
 14764  0000A6  A0D8               	btfss	status,0,c
 14765  0000A8  BA55               	btfsc	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14766  0000AA  D00E               	goto	i1l8612
 14767                           
 14768                           ;parcheggio.c: 136: sensor_distance_short[0] = sensor_distance_short[0] | (0b00000001 <<
      +                           MUX_index);
 14769  0000AC  C029  F03D         	movff	_MUX_index,??_ISR_Bassa	;volatile
 14770  0000B0  0E01               	movlw	1
 14771  0000B2  6E3E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14772  0000B4  2A3D               	incf	??_ISR_Bassa,f,c
 14773  0000B6  D002               	goto	i1u1151_24
 14774  0000B8                     i1u1151_25:
 14775  0000B8  90D8               	bcf	status,0,c
 14776  0000BA  363E               	rlcf	??_ISR_Bassa+1,f,c
 14777  0000BC                     i1u1151_24:
 14778  0000BC  2E3D               	decfsz	??_ISR_Bassa,f,c
 14779  0000BE  D7FC               	goto	i1u1151_25
 14780  0000C0  503E               	movf	??_ISR_Bassa+1,w,c
 14781  0000C2  0101               	movlb	1	; () banked
 14782  0000C4  1183               	iorwf	_sensor_distance_short& (0+255),w,b	;volatile
 14783  0000C6  D03F               	goto	L8
 14784  0000C8                     i1l8612:
 14785  0000C8  5029               	movf	_MUX_index,w,c	;volatile
 14786  0000CA  0D02               	mullw	2
 14787  0000CC  0E01               	movlw	low _sensor_distance
 14788  0000CE  24F3               	addwf	prodl,w,c
 14789  0000D0  6ED9               	movwf	fsr2l,c
 14790  0000D2  0E00               	movlw	high _sensor_distance
 14791  0000D4  20F4               	addwfc	prodh,w,c
 14792  0000D6  6EDA               	movwf	fsr2h,c
 14793  0000D8  0E01               	movlw	1
 14794  0000DA  50DB               	movf	plusw2,w,c
 14795  0000DC  E126               	bnz	i1l8624
 14796  0000DE  0E04               	movlw	4
 14797  0000E0  5CDE               	subwf	postinc2,w,c
 14798  0000E2  A0D8               	btfss	status,0,c
 14799  0000E4  AA55               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14800  0000E6  D021               	goto	i1l8624
 14801  0000E8  B454               	btfsc	_avvicinamento/(0+8),_avvicinamento& (0+7),c	;volatile
 14802  0000EA  D01F               	goto	i1l8624
 14803                           
 14804                           ;parcheggio.c: 138: data[1] = 0;
 14805  0000EC  0E00               	movlw	0
 14806  0000EE  0101               	movlb	1	; () banked
 14807  0000F0  6F54               	movwf	(_data+1)& (0+255),b
 14808                           
 14809                           ;parcheggio.c: 139: data[0] = 4;
 14810  0000F2  0E04               	movlw	4
 14811  0000F4  0101               	movlb	1	; () banked
 14812  0000F6  6F53               	movwf	_data& (0+255),b
 14813  0000F8                     i1l8620:
 14814  0000F8  EC78  F033         	call	i1_CANisTxReady	;wreg free
 14815  0000FC  0900               	iorlw	0
 14816  0000FE  B4D8               	btfsc	status,2,c
 14817  000100  D7FB               	goto	i1l8620
 14818                           
 14819                           ;parcheggio.c: 141: CANsendMessage(0b00000001011, data, 8, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
 14820  000102  0E0B               	movlw	11
 14821  000104  6E2D               	movwf	i1CANsendMessage@identifier,c
 14822  000106  0E00               	movlw	0
 14823  000108  6E2E               	movwf	i1CANsendMessage@identifier+1,c
 14824  00010A  0E00               	movlw	0
 14825  00010C  6E2F               	movwf	i1CANsendMessage@identifier+2,c
 14826  00010E  0E00               	movlw	0
 14827  000110  6E30               	movwf	i1CANsendMessage@identifier+3,c
 14828  000112  0E53               	movlw	low _data
 14829  000114  6E31               	movwf	i1CANsendMessage@data,c
 14830  000116  0E01               	movlw	high _data
 14831  000118  6E32               	movwf	i1CANsendMessage@data+1,c
 14832  00011A  0E08               	movlw	8
 14833  00011C  6E33               	movwf	i1CANsendMessage@dataLength,c
 14834  00011E  0EBC               	movlw	188
 14835  000120  6E34               	movwf	i1CANsendMessage@flags,c
 14836  000122  ECF2  F00F         	call	i1_CANsendMessage	;wreg free
 14837  000126  00FF               	reset		;# 
 14838                           
 14839                           ;parcheggio.c: 143: } else {
 14840  000128  D010               	goto	i1l8626
 14841  00012A                     i1l8624:
 14842                           
 14843                           ;parcheggio.c: 144: sensor_distance_short[0] = sensor_distance_short[0] & (~(0b00000001 
      +                          << MUX_index));
 14844  00012A  C029  F03D         	movff	_MUX_index,??_ISR_Bassa	;volatile
 14845  00012E  0E01               	movlw	1
 14846  000130  6E3E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14847  000132  2A3D               	incf	??_ISR_Bassa,f,c
 14848  000134  D002               	goto	i1u1156_24
 14849  000136                     i1u1156_25:
 14850  000136  90D8               	bcf	status,0,c
 14851  000138  363E               	rlcf	??_ISR_Bassa+1,f,c
 14852  00013A                     i1u1156_24:
 14853  00013A  2E3D               	decfsz	??_ISR_Bassa,f,c
 14854  00013C  D7FC               	goto	i1u1156_25
 14855  00013E  503E               	movf	??_ISR_Bassa+1,w,c
 14856  000140  0AFF               	xorlw	255
 14857  000142  0101               	movlb	1	; () banked
 14858  000144  1583               	andwf	_sensor_distance_short& (0+255),w,b	;volatile
 14859  000146                     L8:
 14860  000146  0101               	movlb	1	; () banked
 14861  000148  6F83               	movwf	_sensor_distance_short& (0+255),b	;volatile
 14862  00014A                     i1l8626:
 14863                           
 14864                           ;parcheggio.c: 145: }
 14865                           ;parcheggio.c: 147: MUX_index++;
 14866  00014A  2A29               	incf	_MUX_index,f,c	;volatile
 14867                           
 14868                           ;parcheggio.c: 148: if (MUX_index == 8) {
 14869  00014C  0E08               	movlw	8
 14870  00014E  1829               	xorwf	_MUX_index,w,c	;volatile
 14871  000150  A4D8               	btfss	status,2,c
 14872  000152  D002               	goto	i1l712
 14873                           
 14874                           ;parcheggio.c: 149: MUX_index = 0;
 14875  000154  0E00               	movlw	0
 14876  000156  6E29               	movwf	_MUX_index,c	;volatile
 14877  000158                     i1l712:
 14878                           
 14879                           ;parcheggio.c: 150: }
 14880                           ;parcheggio.c: 152: unsigned char gigi = 0;
 14881  000158  0E00               	movlw	0
 14882  00015A  6E52               	movwf	ISR_Bassa@gigi,c
 14883                           
 14884                           ;parcheggio.c: 153: gigi = MUX_select[MUX_index];
 14885  00015C  5029               	movf	_MUX_index,w,c	;volatile
 14886  00015E  0D01               	mullw	1
 14887  000160  0E00               	movlw	low _MUX_select
 14888  000162  24F3               	addwf	prodl,w,c
 14889  000164  6ED9               	movwf	fsr2l,c
 14890  000166  0E01               	movlw	high _MUX_select
 14891  000168  20F4               	addwfc	prodh,w,c
 14892  00016A  6EDA               	movwf	fsr2h,c
 14893  00016C  50DF               	movf	indf2,w,c
 14894  00016E  6E52               	movwf	ISR_Bassa@gigi,c
 14895                           
 14896                           ;parcheggio.c: 154: PORTA = gigi;
 14897  000170  C052  FF80         	movff	ISR_Bassa@gigi,3968	;volatile
 14898                           
 14899                           ;parcheggio.c: 155: TRISBbits.RB0 = 0;
 14900  000174  9093               	bcf	3987,0,c	;volatile
 14901                           
 14902                           ;parcheggio.c: 156: LATBbits.LATB0 = 1;
 14903  000176  808A               	bsf	3978,0,c	;volatile
 14904                           
 14905                           ;parcheggio.c: 157: _delay((unsigned long)((15)*(16000000/4000000.0)));
 14906  000178  0E14               	movlw	20
 14907  00017A                     i1u1174_27:
 14908  00017A  2EE8               	decfsz	wreg,f,c
 14909  00017C  D7FE               	goto	i1u1174_27
 14910                           
 14911                           ;parcheggio.c: 158: distance_error = 1;
 14912  00017E  8854               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14913                           
 14914                           ;parcheggio.c: 159: LATBbits.LATB0 = 0;
 14915  000180  908A               	bcf	3978,0,c	;volatile
 14916                           
 14917                           ;parcheggio.c: 160: TRISBbits.RB0 = 1;
 14918  000182  8093               	bsf	3987,0,c	;volatile
 14919                           
 14920                           ;parcheggio.c: 161: INTCONbits.INT0IF = 0;
 14921  000184  92F2               	bcf	intcon,1,c	;volatile
 14922                           
 14923                           ;parcheggio.c: 162: INTCONbits.INT0IE = 1;
 14924  000186  88F2               	bsf	intcon,4,c	;volatile
 14925                           
 14926                           ;parcheggio.c: 163: INTCONbits.TMR0IF = 0;
 14927  000188  94F2               	bcf	intcon,2,c	;volatile
 14928                           
 14929                           ;parcheggio.c: 164: INTCON2bits.INTEDG0 = 1;
 14930  00018A  8CF1               	bsf	intcon2,6,c	;volatile
 14931  00018C                     i1l8656:
 14932                           
 14933                           ;parcheggio.c: 165: }
 14934                           ;parcheggio.c: 168: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 14935  00018C  A0A4               	btfss	4004,0,c	;volatile
 14936  00018E  B2A4               	btfsc	4004,1,c	;volatile
 14937  000190  D001               	goto	i1l8660
 14938  000192  D09B               	goto	i1l726
 14939  000194                     i1l8660:
 14940                           
 14941                           ;parcheggio.c: 169: CANreceiveMessage(&msg);
 14942  000194  0E44               	movlw	low _msg
 14943  000196  6E2D               	movwf	CANreceiveMessage@msg,c
 14944  000198  0E01               	movlw	high _msg
 14945  00019A  6E2E               	movwf	CANreceiveMessage@msg+1,c
 14946  00019C  ECFF  F015         	call	_CANreceiveMessage	;wreg free
 14947                           
 14948                           ;parcheggio.c: 171: if (msg.identifier == 0b00000001101) {
 14949  0001A0  0E0D               	movlw	13
 14950  0001A2  0101               	movlb	1	; () banked
 14951  0001A4  1944               	xorwf	_msg& (0+255),w,b
 14952  0001A6  0101               	movlb	1	; () banked
 14953  0001A8  1145               	iorwf	(_msg+1)& (0+255),w,b
 14954  0001AA  0101               	movlb	1	; () banked
 14955  0001AC  1146               	iorwf	(_msg+2)& (0+255),w,b
 14956  0001AE  0101               	movlb	1	; () banked
 14957  0001B0  1147               	iorwf	(_msg+3)& (0+255),w,b
 14958  0001B2  B4D8               	btfsc	status,2,c
 14959                           
 14960                           ; BSR set to: 1
 14961                           ;parcheggio.c: 172: asd = 0;
 14962  0001B4  9254               	bcf	_asd/(0+8),_asd& (0+7),c	;volatile
 14963                           
 14964                           ; BSR set to: 1
 14965                           ;parcheggio.c: 173: }
 14966                           ;parcheggio.c: 175: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 14967                           
 14968                           ; BSR set to: 1
 14969  0001B6  0E07               	movlw	7
 14970  0001B8  0101               	movlb	1	; () banked
 14971  0001BA  1944               	xorwf	_msg& (0+255),w,b
 14972  0001BC  0101               	movlb	1	; () banked
 14973  0001BE  1145               	iorwf	(_msg+1)& (0+255),w,b
 14974  0001C0  0101               	movlb	1	; () banked
 14975  0001C2  1146               	iorwf	(_msg+2)& (0+255),w,b
 14976  0001C4  0101               	movlb	1	; () banked
 14977  0001C6  1147               	iorwf	(_msg+3)& (0+255),w,b
 14978  0001C8  A4D8               	btfss	status,2,c
 14979  0001CA  D02B               	goto	i1l8682
 14980                           
 14981                           ; BSR set to: 1
 14982  0001CC  0101               	movlb	1	; () banked
 14983  0001CE  0552               	decf	(_msg+14)& (0+255),w,b
 14984  0001D0  B4D8               	btfsc	status,2,c
 14985  0001D2  D027               	goto	i1l8682
 14986                           
 14987                           ; BSR set to: 1
 14988                           ;parcheggio.c: 176: distance_average = 0;
 14989  0001D4  0E00               	movlw	0
 14990  0001D6  6E1A               	movwf	_distance_average+1,c	;volatile
 14991  0001D8  0E00               	movlw	0
 14992  0001DA  6E19               	movwf	_distance_average,c	;volatile
 14993                           
 14994                           ; BSR set to: 1
 14995                           ;parcheggio.c: 177: distance_dx = msg.data[1];
 14996  0001DC  C149  F01B         	movff	_msg+5,_distance_dx	;volatile
 14997  0001E0  6A1C               	clrf	_distance_dx+1,c	;volatile
 14998                           
 14999                           ;parcheggio.c: 178: distance_dx = ((distance_dx << 8) | msg.data[0]);
 15000  0001E2  501B               	movf	_distance_dx,w,c	;volatile
 15001  0001E4  6E3D               	movwf	??_ISR_Bassa& (0+255),c
 15002  0001E6  0101               	movlb	1	; () banked
 15003  0001E8  5148               	movf	(_msg+4)& (0+255),w,b
 15004  0001EA  6E1B               	movwf	_distance_dx,c	;volatile
 15005  0001EC  C03D  F01C         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 15006                           
 15007                           ; BSR set to: 1
 15008                           ;parcheggio.c: 179: distance_sx = msg.data[3];
 15009  0001F0  C14B  F01D         	movff	_msg+7,_distance_sx	;volatile
 15010  0001F4  6A1E               	clrf	_distance_sx+1,c	;volatile
 15011                           
 15012                           ;parcheggio.c: 180: distance_sx = ((distance_sx << 8) | msg.data[2]);
 15013  0001F6  501D               	movf	_distance_sx,w,c	;volatile
 15014  0001F8  6E3D               	movwf	??_ISR_Bassa& (0+255),c
 15015  0001FA  0101               	movlb	1	; () banked
 15016  0001FC  514A               	movf	(_msg+6)& (0+255),w,b
 15017  0001FE  6E1D               	movwf	_distance_sx,c	;volatile
 15018  000200  C03D  F01E         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 15019                           
 15020                           ; BSR set to: 1
 15021                           ;parcheggio.c: 181: distance_average = (distance_sx + distance_dx) / 2;
 15022  000204  501B               	movf	_distance_dx,w,c	;volatile
 15023  000206  241D               	addwf	_distance_sx,w,c	;volatile
 15024  000208  6E3D               	movwf	??_ISR_Bassa& (0+255),c
 15025  00020A  501C               	movf	_distance_dx+1,w,c	;volatile
 15026  00020C  201E               	addwfc	_distance_sx+1,w,c	;volatile
 15027  00020E  6E3E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 15028  000210  90D8               	bcf	status,0,c
 15029  000212  303E               	rrcf	??_ISR_Bassa+1,w,c
 15030  000214  6E3F               	movwf	(??_ISR_Bassa+2)& (0+255),c
 15031  000216  303D               	rrcf	??_ISR_Bassa,w,c
 15032  000218  6E19               	movwf	_distance_average,c	;volatile
 15033  00021A  C03F  F01A         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 15034                           
 15035                           ; BSR set to: 1
 15036                           ;parcheggio.c: 182: distance_received = 1;
 15037  00021E  8A54               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 15038                           
 15039                           ; BSR set to: 1
 15040                           ;parcheggio.c: 183: distance_received1 = 1;
 15041  000220  8C54               	bsf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
 15042  000222                     i1l8682:
 15043                           
 15044                           ; BSR set to: 1
 15045                           ;parcheggio.c: 184: }
 15046                           ;parcheggio.c: 186: if (msg.identifier == 0b00000001010) {
 15047  000222  0E0A               	movlw	10
 15048  000224  0101               	movlb	1	; () banked
 15049  000226  1944               	xorwf	_msg& (0+255),w,b
 15050  000228  0101               	movlb	1	; () banked
 15051  00022A  1145               	iorwf	(_msg+1)& (0+255),w,b
 15052  00022C  0101               	movlb	1	; () banked
 15053  00022E  1146               	iorwf	(_msg+2)& (0+255),w,b
 15054  000230  0101               	movlb	1	; () banked
 15055  000232  1147               	iorwf	(_msg+3)& (0+255),w,b
 15056  000234  A4D8               	btfss	status,2,c
 15057  000236  D00C               	goto	i1l8688
 15058                           
 15059                           ; BSR set to: 1
 15060                           ;parcheggio.c: 187: if (msg.data[0] == 1) {
 15061  000238  0101               	movlb	1	; () banked
 15062  00023A  0548               	decf	(_msg+4)& (0+255),w,b
 15063  00023C  A4D8               	btfss	status,2,c
 15064  00023E  D003               	goto	i1l719
 15065                           
 15066                           ; BSR set to: 1
 15067                           ;parcheggio.c: 188: activation = 1;
 15068  000240  8054               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 15069                           
 15070                           ;parcheggio.c: 189: PORTBbits.RB6 = 1;
 15071  000242  8C81               	bsf	3969,6,c	;volatile
 15072                           
 15073                           ;parcheggio.c: 190: } else {
 15074  000244  D005               	goto	i1l8688
 15075  000246                     i1l719:
 15076                           
 15077                           ; BSR set to: 1
 15078                           ;parcheggio.c: 191: activation = 0;
 15079  000246  9054               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 15080                           
 15081                           ;parcheggio.c: 192: PORTBbits.RB4 = 0;
 15082  000248  9881               	bcf	3969,4,c	;volatile
 15083                           
 15084                           ;parcheggio.c: 193: PORTBbits.RB5 = 0;
 15085  00024A  9A81               	bcf	3969,5,c	;volatile
 15086                           
 15087                           ;parcheggio.c: 194: PORTBbits.RB6 = 0;
 15088  00024C  9C81               	bcf	3969,6,c	;volatile
 15089                           
 15090                           ;parcheggio.c: 195: request_sent = 0;
 15091  00024E  9655               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
 15092  000250                     i1l8688:
 15093                           
 15094                           ; BSR set to: 1
 15095                           ;parcheggio.c: 196: }
 15096                           ;parcheggio.c: 197: }
 15097                           ;parcheggio.c: 199: if (msg.identifier == 0b00000001100) {
 15098  000250  0E0C               	movlw	12
 15099  000252  0101               	movlb	1	; () banked
 15100  000254  1944               	xorwf	_msg& (0+255),w,b
 15101  000256  0101               	movlb	1	; () banked
 15102  000258  1145               	iorwf	(_msg+1)& (0+255),w,b
 15103  00025A  0101               	movlb	1	; () banked
 15104  00025C  1146               	iorwf	(_msg+2)& (0+255),w,b
 15105  00025E  0101               	movlb	1	; () banked
 15106  000260  1147               	iorwf	(_msg+3)& (0+255),w,b
 15107  000262  B4D8               	btfsc	status,2,c
 15108                           
 15109                           ; BSR set to: 1
 15110                           ;parcheggio.c: 200: start_operation = 1;
 15111  000264  8A55               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 15112                           
 15113                           ; BSR set to: 1
 15114                           ;parcheggio.c: 201: }
 15115                           ;parcheggio.c: 203: if (msg.identifier == 0b00000000110) {
 15116                           
 15117                           ; BSR set to: 1
 15118  000266  0E06               	movlw	6
 15119  000268  0101               	movlb	1	; () banked
 15120  00026A  1944               	xorwf	_msg& (0+255),w,b
 15121  00026C  0101               	movlb	1	; () banked
 15122  00026E  1145               	iorwf	(_msg+1)& (0+255),w,b
 15123  000270  0101               	movlb	1	; () banked
 15124  000272  1146               	iorwf	(_msg+2)& (0+255),w,b
 15125  000274  0101               	movlb	1	; () banked
 15126  000276  1147               	iorwf	(_msg+3)& (0+255),w,b
 15127  000278  A4D8               	btfss	status,2,c
 15128  00027A  D025               	goto	i1l722
 15129                           
 15130                           ; BSR set to: 1
 15131                           ;parcheggio.c: 204: for (unsigned char i = 0; i < 8; i++) {
 15132  00027C  0E00               	movlw	0
 15133  00027E  6E53               	movwf	ISR_Bassa@i,c
 15134  000280                     i1l8696:
 15135                           
 15136                           ; BSR set to: 1
 15137  000280  0E07               	movlw	7
 15138  000282  6453               	cpfsgt	ISR_Bassa@i,c
 15139  000284  D001               	goto	i1l8700
 15140  000286  D014               	goto	i1l8706
 15141  000288                     i1l8700:
 15142                           
 15143                           ;parcheggio.c: 205: data_speed_rx[i] = msg.data[i];
 15144  000288  5053               	movf	ISR_Bassa@i,w,c
 15145  00028A  0D01               	mullw	1
 15146  00028C  0E48               	movlw	low (_msg+4)
 15147  00028E  24F3               	addwf	prodl,w,c
 15148  000290  6ED9               	movwf	fsr2l,c
 15149  000292  0E01               	movlw	high (_msg+4)
 15150  000294  20F4               	addwfc	prodh,w,c
 15151  000296  6EDA               	movwf	fsr2h,c
 15152  000298  5053               	movf	ISR_Bassa@i,w,c
 15153  00029A  0D01               	mullw	1
 15154  00029C  0E08               	movlw	low _data_speed_rx
 15155  00029E  24F3               	addwf	prodl,w,c
 15156  0002A0  6EE1               	movwf	fsr1l,c
 15157  0002A2  0E01               	movlw	high _data_speed_rx
 15158  0002A4  20F4               	addwfc	prodh,w,c
 15159  0002A6  6EE2               	movwf	fsr1h,c
 15160  0002A8  CFDF FFE7          	movff	indf2,indf1
 15161  0002AC  2A53               	incf	ISR_Bassa@i,f,c
 15162  0002AE  D7E8               	goto	i1l8696
 15163  0002B0                     i1l8706:
 15164                           
 15165                           ;parcheggio.c: 206: }
 15166                           ;parcheggio.c: 207: if (msg.identifier == 0b00000001101) {
 15167  0002B0  0E0D               	movlw	13
 15168  0002B2  0101               	movlb	1	; () banked
 15169  0002B4  1944               	xorwf	_msg& (0+255),w,b
 15170  0002B6  0101               	movlb	1	; () banked
 15171  0002B8  1145               	iorwf	(_msg+1)& (0+255),w,b
 15172  0002BA  0101               	movlb	1	; () banked
 15173  0002BC  1146               	iorwf	(_msg+2)& (0+255),w,b
 15174  0002BE  0101               	movlb	1	; () banked
 15175  0002C0  1147               	iorwf	(_msg+3)& (0+255),w,b
 15176  0002C2  B4D8               	btfsc	status,2,c
 15177                           
 15178                           ; BSR set to: 1
 15179                           ;parcheggio.c: 208: distance_wait = 0;
 15180  0002C4  9E54               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 15181  0002C6                     i1l722:
 15182                           
 15183                           ; BSR set to: 1
 15184                           ;parcheggio.c: 209: }
 15185                           ;parcheggio.c: 210: }
 15186                           ;parcheggio.c: 212: PIR3bits.RXB0IF = 0;
 15187  0002C6  90A4               	bcf	4004,0,c	;volatile
 15188                           
 15189                           ;parcheggio.c: 213: PIR3bits.RXB1IF = 0;
 15190  0002C8  92A4               	bcf	4004,1,c	;volatile
 15191  0002CA                     i1l726:
 15192  0002CA  C051  FFF5         	movff	??_ISR_Bassa+20,tablat
 15193  0002CE  C050  FFF8         	movff	??_ISR_Bassa+19,tblptru
 15194  0002D2  C04F  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 15195  0002D6  C04E  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 15196  0002DA  C04D  FFF4         	movff	??_ISR_Bassa+16,prodh
 15197  0002DE  C04C  FFF3         	movff	??_ISR_Bassa+15,prodl
 15198  0002E2  C04B  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 15199  0002E6  C04A  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 15200  0002EA  C049  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 15201  0002EE  C048  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 15202  0002F2  C047  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 15203  0002F6  C046  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 15204  0002FA  C045  FFFB         	movff	??_ISR_Bassa+8,pclatu
 15205  0002FE  C044  FFFA         	movff	??_ISR_Bassa+7,pclath
 15206  000302  C043  FFE0         	movff	??_ISR_Bassa+6,bsr
 15207  000306  C042  FFE8         	movff	??_ISR_Bassa+5,wreg
 15208  00030A  C041  FFD8         	movff	??_ISR_Bassa+4,status
 15209  00030E  9056               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 15210  000310  0010               	retfie	
 15211  000312                     __end_of_ISR_Bassa:
 15212                           	opt stack 0
 15213                           pclatu	equ	0xFFB
 15214                           pclath	equ	0xFFA
 15215                           tblptru	equ	0xFF8
 15216                           tblptrh	equ	0xFF7
 15217                           tblptrl	equ	0xFF6
 15218                           tablat	equ	0xFF5
 15219                           prodh	equ	0xFF4
 15220                           prodl	equ	0xFF3
 15221                           intcon	equ	0xFF2
 15222                           intcon2	equ	0xFF1
 15223                           postinc0	equ	0xFEE
 15224                           fsr0h	equ	0xFEA
 15225                           fsr0l	equ	0xFE9
 15226                           wreg	equ	0xFE8
 15227                           indf1	equ	0xFE7
 15228                           postdec1	equ	0xFE5
 15229                           fsr1h	equ	0xFE2
 15230                           fsr1l	equ	0xFE1
 15231                           bsr	equ	0xFE0
 15232                           indf2	equ	0xFDF
 15233                           postinc2	equ	0xFDE
 15234                           postdec2	equ	0xFDD
 15235                           plusw2	equ	0xFDB
 15236                           fsr2h	equ	0xFDA
 15237                           fsr2l	equ	0xFD9
 15238                           status	equ	0xFD8
 15239                           
 15240 ;; *************** function i1_CANsendMessage *****************
 15241 ;; Defined at:
 15242 ;;		line 294 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 15243 ;; Parameters:    Size  Location     Type
 15244 ;;  identifier      4    0[COMRAM] unsigned long 
 15245 ;;  data            2    4[COMRAM] PTR unsigned char 
 15246 ;;		 -> can_send@data_correction1(0), data_speed(8), data_brake(8), data_steering(8), 
 15247 ;;		 -> data_correction(8), data_test(8), data(8), sensor_distance_short(8), 
 15248 ;;  dataLength      1    6[COMRAM] unsigned char 
 15249 ;;  flags           1    7[COMRAM] enum E16335
 15250 ;; Auto vars:     Size  Location     Type
 15251 ;;  CANsendMessa    4   12[COMRAM] unsigned long 
 15252 ;; Return value:  Size  Location     Type
 15253 ;;		None               void
 15254 ;; Registers used:
 15255 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15256 ;; Tracked objects:
 15257 ;;		On entry : 0/0
 15258 ;;		On exit  : 0/0
 15259 ;;		Unchanged: 0/0
 15260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15261 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15262 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15263 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15264 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15265 ;;Total ram usage:       16 bytes
 15266 ;; Hardware stack levels used:    1
 15267 ;; Hardware stack levels required when called:    2
 15268 ;; This function calls:
 15269 ;;		Nothing
 15270 ;; This function is called by:
 15271 ;;		_ISR_Bassa
 15272 ;; This function uses a non-reentrant model
 15273 ;;
 15274                           
 15275                           	psect	text36
 15276  001FE4                     __ptext36:
 15277                           	opt stack 0
 15278  001FE4                     i1_CANsendMessage:
 15279                           	opt stack 21
 15280                           
 15281                           ;inc\CANlib.h: 296: unsigned long tamp;
 15282                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
 15283                           
 15284                           ;incstack = 0
 15285  001FE4  010F               	movlb	15	; () banked
 15286  001FE6  B740               	btfsc	64,3,b	;volatile
 15287  001FE8  D115               	goto	i1l363
 15288                           
 15289                           ; BSR set to: 15
 15290                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
 15291  001FEA  C033  FF45         	movff	i1CANsendMessage@dataLength,3909	;volatile
 15292                           
 15293                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
 15294  001FEE  AC34               	btfss	i1CANsendMessage@flags,6,c
 15295  001FF0  D003               	goto	i1l364
 15296                           
 15297                           ; BSR set to: 15
 15298                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
 15299  001FF2  010F               	movlb	15	; () banked
 15300  001FF4  8D45               	bsf	69,6,b	;volatile
 15301  001FF6  D002               	goto	i1l365
 15302  001FF8                     i1l364:
 15303                           
 15304                           ; BSR set to: 15
 15305                           ;inc\CANlib.h: 302: else
 15306                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
 15307  001FF8  010F               	movlb	15	; () banked
 15308  001FFA  9D45               	bcf	69,6,b	;volatile
 15309  001FFC                     i1l365:
 15310                           
 15311                           ; BSR set to: 15
 15312                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
 15313  001FFC  A634               	btfss	i1CANsendMessage@flags,3,c
 15314  001FFE  D066               	goto	i1l366
 15315                           
 15316                           ; BSR set to: 15
 15317                           ;inc\CANlib.h: 306: {
 15318                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
 15319  002000  502D               	movf	i1CANsendMessage@identifier,w,c
 15320  002002  6E39               	movwf	i1CANsendMessage@tamp,c
 15321  002004  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15322  002006  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15323  002008  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15324                           
 15325                           ; BSR set to: 15
 15326                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
 15327  00200A  C039  FF44         	movff	i1CANsendMessage@tamp,3908	;volatile
 15328                           
 15329                           ; BSR set to: 15
 15330                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
 15331  00200E  0E00               	movlw	0
 15332  002010  142D               	andwf	i1CANsendMessage@identifier,w,c
 15333  002012  6E39               	movwf	i1CANsendMessage@tamp,c
 15334  002014  0EFF               	movlw	255
 15335  002016  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 15336  002018  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 15337  00201A  0E00               	movlw	0
 15338  00201C  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 15339  00201E  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 15340  002020  0E00               	movlw	0
 15341  002022  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 15342  002024  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 15343                           
 15344                           ; BSR set to: 15
 15345                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
 15346  002026  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15347  00202A  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15348  00202E  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15349  002032  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15350  002036  C036  F035         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 15351  00203A  C037  F036         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 15352  00203E  C038  F037         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 15353  002042  6A38               	clrf	??i1_CANsendMessage+3,c
 15354  002044  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15355  002048  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15356  00204C  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15357  002050  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15358                           
 15359                           ; BSR set to: 15
 15360                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
 15361  002054  C039  FF43         	movff	i1CANsendMessage@tamp,3907	;volatile
 15362                           
 15363                           ; BSR set to: 15
 15364                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
 15365  002058  0E00               	movlw	0
 15366  00205A  010F               	movlb	15	; () banked
 15367  00205C  6F42               	movwf	66,b	;volatile
 15368                           
 15369                           ; BSR set to: 15
 15370                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
 15371  00205E  010F               	movlb	15	; () banked
 15372  002060  8742               	bsf	66,3,b	;volatile
 15373                           
 15374                           ; BSR set to: 15
 15375                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
 15376  002062  A02F               	btfss	i1CANsendMessage@identifier+2,0,c
 15377  002064  D002               	goto	i1l367
 15378                           
 15379                           ; BSR set to: 15
 15380                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
 15381  002066  010F               	movlb	15	; () banked
 15382  002068  8142               	bsf	66,0,b	;volatile
 15383  00206A                     i1l367:
 15384                           
 15385                           ; BSR set to: 15
 15386                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
 15387  00206A  A22F               	btfss	i1CANsendMessage@identifier+2,1,c
 15388  00206C  D002               	goto	i1l368
 15389                           
 15390                           ; BSR set to: 15
 15391                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
 15392  00206E  010F               	movlb	15	; () banked
 15393  002070  8342               	bsf	66,1,b	;volatile
 15394  002072                     i1l368:
 15395                           
 15396                           ; BSR set to: 15
 15397                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
 15398  002072  A42F               	btfss	i1CANsendMessage@identifier+2,2,c
 15399  002074  D002               	goto	i1l369
 15400                           
 15401                           ; BSR set to: 15
 15402                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
 15403  002076  010F               	movlb	15	; () banked
 15404  002078  8B42               	bsf	66,5,b	;volatile
 15405  00207A                     i1l369:
 15406                           
 15407                           ; BSR set to: 15
 15408                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
 15409  00207A  A62F               	btfss	i1CANsendMessage@identifier+2,3,c
 15410  00207C  D002               	goto	i1l370
 15411                           
 15412                           ; BSR set to: 15
 15413                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
 15414  00207E  010F               	movlb	15	; () banked
 15415  002080  8D42               	bsf	66,6,b	;volatile
 15416  002082                     i1l370:
 15417                           
 15418                           ; BSR set to: 15
 15419                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
 15420  002082  A82F               	btfss	i1CANsendMessage@identifier+2,4,c
 15421  002084  D002               	goto	i1l8380
 15422                           
 15423                           ; BSR set to: 15
 15424                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
 15425  002086  010F               	movlb	15	; () banked
 15426  002088  8F42               	bsf	66,7,b	;volatile
 15427  00208A                     i1l8380:
 15428                           
 15429                           ; BSR set to: 15
 15430                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
 15431  00208A  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15432  00208E  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15433  002092  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15434  002096  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15435  00209A  0E16               	movlw	22
 15436  00209C  D005               	goto	i1u1115_20
 15437  00209E                     i1u1115_25:
 15438  00209E  90D8               	bcf	status,0,c
 15439  0020A0  3238               	rrcf	??i1_CANsendMessage+3,f,c
 15440  0020A2  3237               	rrcf	??i1_CANsendMessage+2,f,c
 15441  0020A4  3236               	rrcf	??i1_CANsendMessage+1,f,c
 15442  0020A6  3235               	rrcf	??i1_CANsendMessage,f,c
 15443  0020A8                     i1u1115_20:
 15444  0020A8  2EE8               	decfsz	wreg,f,c
 15445  0020AA  D7F9               	goto	i1u1115_25
 15446  0020AC  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15447  0020B0  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15448  0020B4  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15449  0020B8  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15450                           
 15451                           ; BSR set to: 15
 15452                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
 15453  0020BC  5039               	movf	i1CANsendMessage@tamp,w,c
 15454  0020BE  6E39               	movwf	i1CANsendMessage@tamp,c
 15455  0020C0  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15456  0020C2  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15457  0020C4  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15458                           
 15459                           ; BSR set to: 15
 15460                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
 15461  0020C6  C039  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
 15462                           
 15463                           ;inc\CANlib.h: 332: }
 15464  0020CA  D04D               	goto	i1l8400
 15465  0020CC                     i1l366:
 15466                           
 15467                           ; BSR set to: 15
 15468                           ;inc\CANlib.h: 334: else
 15469                           ;inc\CANlib.h: 336: {
 15470                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
 15471  0020CC  010F               	movlb	15	; () banked
 15472  0020CE  9742               	bcf	66,3,b	;volatile
 15473                           
 15474                           ; BSR set to: 15
 15475                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
 15476  0020D0  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15477  0020D4  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15478  0020D8  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15479  0020DC  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15480  0020E0  0E04               	movlw	4
 15481  0020E2  D005               	goto	i1u1116_20
 15482  0020E4                     i1u1116_25:
 15483  0020E4  90D8               	bcf	status,0,c
 15484  0020E6  3238               	rrcf	??i1_CANsendMessage+3,f,c
 15485  0020E8  3237               	rrcf	??i1_CANsendMessage+2,f,c
 15486  0020EA  3236               	rrcf	??i1_CANsendMessage+1,f,c
 15487  0020EC  3235               	rrcf	??i1_CANsendMessage,f,c
 15488  0020EE                     i1u1116_20:
 15489  0020EE  2EE8               	decfsz	wreg,f,c
 15490  0020F0  D7F9               	goto	i1u1116_25
 15491  0020F2  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15492  0020F6  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15493  0020FA  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15494  0020FE  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15495                           
 15496                           ; BSR set to: 15
 15497                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
 15498  002102  5039               	movf	i1CANsendMessage@tamp,w,c
 15499  002104  6E39               	movwf	i1CANsendMessage@tamp,c
 15500  002106  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15501  002108  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15502  00210A  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15503                           
 15504                           ; BSR set to: 15
 15505                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
 15506  00210C  C039  FF41         	movff	i1CANsendMessage@tamp,3905	;volatile
 15507                           
 15508                           ; BSR set to: 15
 15509                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
 15510  002110  0E07               	movlw	7
 15511  002112  142D               	andwf	i1CANsendMessage@identifier,w,c
 15512  002114  6E39               	movwf	i1CANsendMessage@tamp,c
 15513  002116  0E00               	movlw	0
 15514  002118  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 15515  00211A  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 15516  00211C  0E00               	movlw	0
 15517  00211E  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 15518  002120  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 15519  002122  0E00               	movlw	0
 15520  002124  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 15521  002126  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 15522                           
 15523                           ; BSR set to: 15
 15524                           ;inc\CANlib.h: 344: tamp = tamp << 5;
 15525  002128  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15526  00212C  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15527  002130  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15528  002134  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15529  002138  0E05               	movlw	5
 15530  00213A                     i1u1117_25:
 15531  00213A  90D8               	bcf	status,0,c
 15532  00213C  3635               	rlcf	??i1_CANsendMessage,f,c
 15533  00213E  3636               	rlcf	??i1_CANsendMessage+1,f,c
 15534  002140  3637               	rlcf	??i1_CANsendMessage+2,f,c
 15535  002142  3638               	rlcf	??i1_CANsendMessage+3,f,c
 15536  002144  2EE8               	decfsz	wreg,f,c
 15537  002146  D7F9               	goto	i1u1117_25
 15538  002148  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15539  00214C  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15540  002150  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15541  002154  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15542                           
 15543                           ; BSR set to: 15
 15544                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
 15545  002158  010F               	movlb	15	; () banked
 15546  00215A  5142               	movf	66,w,b	;volatile
 15547  00215C  0B1F               	andlw	31
 15548  00215E  010F               	movlb	15	; () banked
 15549  002160  6F42               	movwf	66,b	;volatile
 15550                           
 15551                           ; BSR set to: 15
 15552                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
 15553  002162  C039  FF42         	movff	i1CANsendMessage@tamp,3906	;volatile
 15554  002166                     i1l8400:
 15555                           
 15556                           ; BSR set to: 15
 15557                           ;inc\CANlib.h: 347: }
 15558                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
 15559  002166  A034               	btfss	i1CANsendMessage@flags,0,c
 15560  002168  D003               	goto	i1l373
 15561                           
 15562                           ; BSR set to: 15
 15563                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
 15564  00216A  010F               	movlb	15	; () banked
 15565  00216C  8140               	bsf	64,0,b	;volatile
 15566  00216E  D002               	goto	i1l374
 15567  002170                     i1l373:
 15568                           
 15569                           ; BSR set to: 15
 15570                           ;inc\CANlib.h: 351: else
 15571                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
 15572  002170  010F               	movlb	15	; () banked
 15573  002172  9140               	bcf	64,0,b	;volatile
 15574  002174                     i1l374:
 15575                           
 15576                           ; BSR set to: 15
 15577                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
 15578  002174  A234               	btfss	i1CANsendMessage@flags,1,c
 15579  002176  D003               	goto	i1l375
 15580                           
 15581                           ; BSR set to: 15
 15582                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
 15583  002178  010F               	movlb	15	; () banked
 15584  00217A  8340               	bsf	64,1,b	;volatile
 15585  00217C  D002               	goto	i1l8406
 15586  00217E                     i1l375:
 15587                           
 15588                           ; BSR set to: 15
 15589                           ;inc\CANlib.h: 355: else
 15590                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
 15591  00217E  010F               	movlb	15	; () banked
 15592  002180  9340               	bcf	64,1,b	;volatile
 15593  002182                     i1l8406:
 15594                           
 15595                           ; BSR set to: 15
 15596                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
 15597  002182  C031  FFD9         	movff	i1CANsendMessage@data,fsr2l
 15598  002186  C032  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 15599  00218A  50DF               	movf	indf2,w,c
 15600  00218C  010F               	movlb	15	; () banked
 15601  00218E  6F46               	movwf	70,b	;volatile
 15602                           
 15603                           ; BSR set to: 15
 15604                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
 15605  002190  EE20 F001          	lfsr	2,1
 15606  002194  5031               	movf	i1CANsendMessage@data,w,c
 15607  002196  26D9               	addwf	fsr2l,f,c
 15608  002198  5032               	movf	i1CANsendMessage@data+1,w,c
 15609  00219A  22DA               	addwfc	fsr2h,f,c
 15610  00219C  50DF               	movf	indf2,w,c
 15611  00219E  010F               	movlb	15	; () banked
 15612  0021A0  6F47               	movwf	71,b	;volatile
 15613                           
 15614                           ; BSR set to: 15
 15615                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
 15616  0021A2  EE20 F002          	lfsr	2,2
 15617  0021A6  5031               	movf	i1CANsendMessage@data,w,c
 15618  0021A8  26D9               	addwf	fsr2l,f,c
 15619  0021AA  5032               	movf	i1CANsendMessage@data+1,w,c
 15620  0021AC  22DA               	addwfc	fsr2h,f,c
 15621  0021AE  50DF               	movf	indf2,w,c
 15622  0021B0  010F               	movlb	15	; () banked
 15623  0021B2  6F48               	movwf	72,b	;volatile
 15624                           
 15625                           ; BSR set to: 15
 15626                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
 15627  0021B4  EE20 F003          	lfsr	2,3
 15628  0021B8  5031               	movf	i1CANsendMessage@data,w,c
 15629  0021BA  26D9               	addwf	fsr2l,f,c
 15630  0021BC  5032               	movf	i1CANsendMessage@data+1,w,c
 15631  0021BE  22DA               	addwfc	fsr2h,f,c
 15632  0021C0  50DF               	movf	indf2,w,c
 15633  0021C2  010F               	movlb	15	; () banked
 15634  0021C4  6F49               	movwf	73,b	;volatile
 15635                           
 15636                           ; BSR set to: 15
 15637                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
 15638  0021C6  EE20 F004          	lfsr	2,4
 15639  0021CA  5031               	movf	i1CANsendMessage@data,w,c
 15640  0021CC  26D9               	addwf	fsr2l,f,c
 15641  0021CE  5032               	movf	i1CANsendMessage@data+1,w,c
 15642  0021D0  22DA               	addwfc	fsr2h,f,c
 15643  0021D2  50DF               	movf	indf2,w,c
 15644  0021D4  010F               	movlb	15	; () banked
 15645  0021D6  6F4A               	movwf	74,b	;volatile
 15646                           
 15647                           ; BSR set to: 15
 15648                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
 15649  0021D8  EE20 F005          	lfsr	2,5
 15650  0021DC  5031               	movf	i1CANsendMessage@data,w,c
 15651  0021DE  26D9               	addwf	fsr2l,f,c
 15652  0021E0  5032               	movf	i1CANsendMessage@data+1,w,c
 15653  0021E2  22DA               	addwfc	fsr2h,f,c
 15654  0021E4  50DF               	movf	indf2,w,c
 15655  0021E6  010F               	movlb	15	; () banked
 15656  0021E8  6F4B               	movwf	75,b	;volatile
 15657                           
 15658                           ; BSR set to: 15
 15659                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
 15660  0021EA  EE20 F006          	lfsr	2,6
 15661  0021EE  5031               	movf	i1CANsendMessage@data,w,c
 15662  0021F0  26D9               	addwf	fsr2l,f,c
 15663  0021F2  5032               	movf	i1CANsendMessage@data+1,w,c
 15664  0021F4  22DA               	addwfc	fsr2h,f,c
 15665  0021F6  50DF               	movf	indf2,w,c
 15666  0021F8  010F               	movlb	15	; () banked
 15667  0021FA  6F4C               	movwf	76,b	;volatile
 15668                           
 15669                           ; BSR set to: 15
 15670                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
 15671  0021FC  EE20 F007          	lfsr	2,7
 15672  002200  5031               	movf	i1CANsendMessage@data,w,c
 15673  002202  26D9               	addwf	fsr2l,f,c
 15674  002204  5032               	movf	i1CANsendMessage@data+1,w,c
 15675  002206  22DA               	addwfc	fsr2h,f,c
 15676  002208  50DF               	movf	indf2,w,c
 15677  00220A  010F               	movlb	15	; () banked
 15678  00220C  6F4D               	movwf	77,b	;volatile
 15679                           
 15680                           ; BSR set to: 15
 15681                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
 15682  00220E  010F               	movlb	15	; () banked
 15683  002210  8740               	bsf	64,3,b	;volatile
 15684                           
 15685                           ; BSR set to: 15
 15686                           ;inc\CANlib.h: 368: return;
 15687  002212  0012               	return	
 15688  002214                     i1l363:
 15689                           
 15690                           ; BSR set to: 15
 15691                           ;inc\CANlib.h: 369: }
 15692                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
 15693  002214  010F               	movlb	15	; () banked
 15694  002216  B730               	btfsc	48,3,b	;volatile
 15695  002218  D115               	goto	i1l378
 15696                           
 15697                           ; BSR set to: 15
 15698                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
 15699  00221A  C033  FF35         	movff	i1CANsendMessage@dataLength,3893	;volatile
 15700                           
 15701                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
 15702  00221E  AC34               	btfss	i1CANsendMessage@flags,6,c
 15703  002220  D003               	goto	i1l379
 15704                           
 15705                           ; BSR set to: 15
 15706                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
 15707  002222  010F               	movlb	15	; () banked
 15708  002224  8D35               	bsf	53,6,b	;volatile
 15709  002226  D002               	goto	i1l380
 15710  002228                     i1l379:
 15711                           
 15712                           ; BSR set to: 15
 15713                           ;inc\CANlib.h: 378: else
 15714                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
 15715  002228  010F               	movlb	15	; () banked
 15716  00222A  9D35               	bcf	53,6,b	;volatile
 15717  00222C                     i1l380:
 15718                           
 15719                           ; BSR set to: 15
 15720                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
 15721  00222C  A634               	btfss	i1CANsendMessage@flags,3,c
 15722  00222E  D066               	goto	i1l381
 15723                           
 15724                           ; BSR set to: 15
 15725                           ;inc\CANlib.h: 382: {
 15726                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
 15727  002230  502D               	movf	i1CANsendMessage@identifier,w,c
 15728  002232  6E39               	movwf	i1CANsendMessage@tamp,c
 15729  002234  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15730  002236  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15731  002238  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15732                           
 15733                           ; BSR set to: 15
 15734                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
 15735  00223A  C039  FF34         	movff	i1CANsendMessage@tamp,3892	;volatile
 15736                           
 15737                           ; BSR set to: 15
 15738                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
 15739  00223E  0E00               	movlw	0
 15740  002240  142D               	andwf	i1CANsendMessage@identifier,w,c
 15741  002242  6E39               	movwf	i1CANsendMessage@tamp,c
 15742  002244  0EFF               	movlw	255
 15743  002246  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 15744  002248  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 15745  00224A  0E00               	movlw	0
 15746  00224C  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 15747  00224E  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 15748  002250  0E00               	movlw	0
 15749  002252  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 15750  002254  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 15751                           
 15752                           ; BSR set to: 15
 15753                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
 15754  002256  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15755  00225A  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15756  00225E  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15757  002262  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15758  002266  C036  F035         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 15759  00226A  C037  F036         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 15760  00226E  C038  F037         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 15761  002272  6A38               	clrf	??i1_CANsendMessage+3,c
 15762  002274  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15763  002278  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15764  00227C  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15765  002280  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15766                           
 15767                           ; BSR set to: 15
 15768                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
 15769  002284  C039  FF33         	movff	i1CANsendMessage@tamp,3891	;volatile
 15770                           
 15771                           ; BSR set to: 15
 15772                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
 15773  002288  0E00               	movlw	0
 15774  00228A  010F               	movlb	15	; () banked
 15775  00228C  6F32               	movwf	50,b	;volatile
 15776                           
 15777                           ; BSR set to: 15
 15778                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
 15779  00228E  010F               	movlb	15	; () banked
 15780  002290  8732               	bsf	50,3,b	;volatile
 15781                           
 15782                           ; BSR set to: 15
 15783                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
 15784  002292  A02F               	btfss	i1CANsendMessage@identifier+2,0,c
 15785  002294  D002               	goto	i1l382
 15786                           
 15787                           ; BSR set to: 15
 15788                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
 15789  002296  010F               	movlb	15	; () banked
 15790  002298  8132               	bsf	50,0,b	;volatile
 15791  00229A                     i1l382:
 15792                           
 15793                           ; BSR set to: 15
 15794                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
 15795  00229A  A22F               	btfss	i1CANsendMessage@identifier+2,1,c
 15796  00229C  D002               	goto	i1l383
 15797                           
 15798                           ; BSR set to: 15
 15799                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
 15800  00229E  010F               	movlb	15	; () banked
 15801  0022A0  8332               	bsf	50,1,b	;volatile
 15802  0022A2                     i1l383:
 15803                           
 15804                           ; BSR set to: 15
 15805                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
 15806  0022A2  A42F               	btfss	i1CANsendMessage@identifier+2,2,c
 15807  0022A4  D002               	goto	i1l384
 15808                           
 15809                           ; BSR set to: 15
 15810                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
 15811  0022A6  010F               	movlb	15	; () banked
 15812  0022A8  8B32               	bsf	50,5,b	;volatile
 15813  0022AA                     i1l384:
 15814                           
 15815                           ; BSR set to: 15
 15816                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
 15817  0022AA  A62F               	btfss	i1CANsendMessage@identifier+2,3,c
 15818  0022AC  D002               	goto	i1l385
 15819                           
 15820                           ; BSR set to: 15
 15821                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
 15822  0022AE  010F               	movlb	15	; () banked
 15823  0022B0  8D32               	bsf	50,6,b	;volatile
 15824  0022B2                     i1l385:
 15825                           
 15826                           ; BSR set to: 15
 15827                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
 15828  0022B2  A82F               	btfss	i1CANsendMessage@identifier+2,4,c
 15829  0022B4  D002               	goto	i1l8456
 15830                           
 15831                           ; BSR set to: 15
 15832                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
 15833  0022B6  010F               	movlb	15	; () banked
 15834  0022B8  8F32               	bsf	50,7,b	;volatile
 15835  0022BA                     i1l8456:
 15836                           
 15837                           ; BSR set to: 15
 15838                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
 15839  0022BA  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15840  0022BE  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15841  0022C2  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15842  0022C6  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15843  0022CA  0E16               	movlw	22
 15844  0022CC  D005               	goto	i1u1128_20
 15845  0022CE                     i1u1128_25:
 15846  0022CE  90D8               	bcf	status,0,c
 15847  0022D0  3238               	rrcf	??i1_CANsendMessage+3,f,c
 15848  0022D2  3237               	rrcf	??i1_CANsendMessage+2,f,c
 15849  0022D4  3236               	rrcf	??i1_CANsendMessage+1,f,c
 15850  0022D6  3235               	rrcf	??i1_CANsendMessage,f,c
 15851  0022D8                     i1u1128_20:
 15852  0022D8  2EE8               	decfsz	wreg,f,c
 15853  0022DA  D7F9               	goto	i1u1128_25
 15854  0022DC  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15855  0022E0  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15856  0022E4  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15857  0022E8  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15858                           
 15859                           ; BSR set to: 15
 15860                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
 15861  0022EC  5039               	movf	i1CANsendMessage@tamp,w,c
 15862  0022EE  6E39               	movwf	i1CANsendMessage@tamp,c
 15863  0022F0  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15864  0022F2  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15865  0022F4  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15866                           
 15867                           ; BSR set to: 15
 15868                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
 15869  0022F6  C039  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
 15870                           
 15871                           ;inc\CANlib.h: 407: }
 15872  0022FA  D04D               	goto	i1l8476
 15873  0022FC                     i1l381:
 15874                           
 15875                           ; BSR set to: 15
 15876                           ;inc\CANlib.h: 409: else
 15877                           ;inc\CANlib.h: 411: {
 15878                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
 15879  0022FC  010F               	movlb	15	; () banked
 15880  0022FE  9732               	bcf	50,3,b	;volatile
 15881                           
 15882                           ; BSR set to: 15
 15883                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
 15884  002300  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 15885  002304  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 15886  002308  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 15887  00230C  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 15888  002310  0E04               	movlw	4
 15889  002312  D005               	goto	i1u1129_20
 15890  002314                     i1u1129_25:
 15891  002314  90D8               	bcf	status,0,c
 15892  002316  3238               	rrcf	??i1_CANsendMessage+3,f,c
 15893  002318  3237               	rrcf	??i1_CANsendMessage+2,f,c
 15894  00231A  3236               	rrcf	??i1_CANsendMessage+1,f,c
 15895  00231C  3235               	rrcf	??i1_CANsendMessage,f,c
 15896  00231E                     i1u1129_20:
 15897  00231E  2EE8               	decfsz	wreg,f,c
 15898  002320  D7F9               	goto	i1u1129_25
 15899  002322  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15900  002326  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15901  00232A  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15902  00232E  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15903                           
 15904                           ; BSR set to: 15
 15905                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
 15906  002332  5039               	movf	i1CANsendMessage@tamp,w,c
 15907  002334  6E39               	movwf	i1CANsendMessage@tamp,c
 15908  002336  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 15909  002338  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 15910  00233A  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 15911                           
 15912                           ; BSR set to: 15
 15913                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
 15914  00233C  C039  FF31         	movff	i1CANsendMessage@tamp,3889	;volatile
 15915                           
 15916                           ; BSR set to: 15
 15917                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
 15918  002340  0E07               	movlw	7
 15919  002342  142D               	andwf	i1CANsendMessage@identifier,w,c
 15920  002344  6E39               	movwf	i1CANsendMessage@tamp,c
 15921  002346  0E00               	movlw	0
 15922  002348  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 15923  00234A  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 15924  00234C  0E00               	movlw	0
 15925  00234E  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 15926  002350  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 15927  002352  0E00               	movlw	0
 15928  002354  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 15929  002356  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 15930                           
 15931                           ; BSR set to: 15
 15932                           ;inc\CANlib.h: 419: tamp = tamp << 5;
 15933  002358  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 15934  00235C  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 15935  002360  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 15936  002364  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 15937  002368  0E05               	movlw	5
 15938  00236A                     i1u1130_25:
 15939  00236A  90D8               	bcf	status,0,c
 15940  00236C  3635               	rlcf	??i1_CANsendMessage,f,c
 15941  00236E  3636               	rlcf	??i1_CANsendMessage+1,f,c
 15942  002370  3637               	rlcf	??i1_CANsendMessage+2,f,c
 15943  002372  3638               	rlcf	??i1_CANsendMessage+3,f,c
 15944  002374  2EE8               	decfsz	wreg,f,c
 15945  002376  D7F9               	goto	i1u1130_25
 15946  002378  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 15947  00237C  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 15948  002380  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 15949  002384  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 15950                           
 15951                           ; BSR set to: 15
 15952                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
 15953  002388  010F               	movlb	15	; () banked
 15954  00238A  5132               	movf	50,w,b	;volatile
 15955  00238C  0B1F               	andlw	31
 15956  00238E  010F               	movlb	15	; () banked
 15957  002390  6F32               	movwf	50,b	;volatile
 15958                           
 15959                           ; BSR set to: 15
 15960                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
 15961  002392  C039  FF32         	movff	i1CANsendMessage@tamp,3890	;volatile
 15962  002396                     i1l8476:
 15963                           
 15964                           ; BSR set to: 15
 15965                           ;inc\CANlib.h: 422: }
 15966                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
 15967  002396  A034               	btfss	i1CANsendMessage@flags,0,c
 15968  002398  D003               	goto	i1l388
 15969                           
 15970                           ; BSR set to: 15
 15971                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
 15972  00239A  010F               	movlb	15	; () banked
 15973  00239C  8130               	bsf	48,0,b	;volatile
 15974  00239E  D002               	goto	i1l389
 15975  0023A0                     i1l388:
 15976                           
 15977                           ; BSR set to: 15
 15978                           ;inc\CANlib.h: 426: else
 15979                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
 15980  0023A0  010F               	movlb	15	; () banked
 15981  0023A2  9130               	bcf	48,0,b	;volatile
 15982  0023A4                     i1l389:
 15983                           
 15984                           ; BSR set to: 15
 15985                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
 15986  0023A4  A234               	btfss	i1CANsendMessage@flags,1,c
 15987  0023A6  D003               	goto	i1l390
 15988                           
 15989                           ; BSR set to: 15
 15990                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
 15991  0023A8  010F               	movlb	15	; () banked
 15992  0023AA  8330               	bsf	48,1,b	;volatile
 15993  0023AC  D002               	goto	i1l8482
 15994  0023AE                     i1l390:
 15995                           
 15996                           ; BSR set to: 15
 15997                           ;inc\CANlib.h: 430: else
 15998                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
 15999  0023AE  010F               	movlb	15	; () banked
 16000  0023B0  9330               	bcf	48,1,b	;volatile
 16001  0023B2                     i1l8482:
 16002                           
 16003                           ; BSR set to: 15
 16004                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
 16005  0023B2  C031  FFD9         	movff	i1CANsendMessage@data,fsr2l
 16006  0023B6  C032  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 16007  0023BA  50DF               	movf	indf2,w,c
 16008  0023BC  010F               	movlb	15	; () banked
 16009  0023BE  6F36               	movwf	54,b	;volatile
 16010                           
 16011                           ; BSR set to: 15
 16012                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
 16013  0023C0  EE20 F001          	lfsr	2,1
 16014  0023C4  5031               	movf	i1CANsendMessage@data,w,c
 16015  0023C6  26D9               	addwf	fsr2l,f,c
 16016  0023C8  5032               	movf	i1CANsendMessage@data+1,w,c
 16017  0023CA  22DA               	addwfc	fsr2h,f,c
 16018  0023CC  50DF               	movf	indf2,w,c
 16019  0023CE  010F               	movlb	15	; () banked
 16020  0023D0  6F37               	movwf	55,b	;volatile
 16021                           
 16022                           ; BSR set to: 15
 16023                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
 16024  0023D2  EE20 F002          	lfsr	2,2
 16025  0023D6  5031               	movf	i1CANsendMessage@data,w,c
 16026  0023D8  26D9               	addwf	fsr2l,f,c
 16027  0023DA  5032               	movf	i1CANsendMessage@data+1,w,c
 16028  0023DC  22DA               	addwfc	fsr2h,f,c
 16029  0023DE  50DF               	movf	indf2,w,c
 16030  0023E0  010F               	movlb	15	; () banked
 16031  0023E2  6F38               	movwf	56,b	;volatile
 16032                           
 16033                           ; BSR set to: 15
 16034                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
 16035  0023E4  EE20 F003          	lfsr	2,3
 16036  0023E8  5031               	movf	i1CANsendMessage@data,w,c
 16037  0023EA  26D9               	addwf	fsr2l,f,c
 16038  0023EC  5032               	movf	i1CANsendMessage@data+1,w,c
 16039  0023EE  22DA               	addwfc	fsr2h,f,c
 16040  0023F0  50DF               	movf	indf2,w,c
 16041  0023F2  010F               	movlb	15	; () banked
 16042  0023F4  6F39               	movwf	57,b	;volatile
 16043                           
 16044                           ; BSR set to: 15
 16045                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
 16046  0023F6  EE20 F004          	lfsr	2,4
 16047  0023FA  5031               	movf	i1CANsendMessage@data,w,c
 16048  0023FC  26D9               	addwf	fsr2l,f,c
 16049  0023FE  5032               	movf	i1CANsendMessage@data+1,w,c
 16050  002400  22DA               	addwfc	fsr2h,f,c
 16051  002402  50DF               	movf	indf2,w,c
 16052  002404  010F               	movlb	15	; () banked
 16053  002406  6F3A               	movwf	58,b	;volatile
 16054                           
 16055                           ; BSR set to: 15
 16056                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
 16057  002408  EE20 F005          	lfsr	2,5
 16058  00240C  5031               	movf	i1CANsendMessage@data,w,c
 16059  00240E  26D9               	addwf	fsr2l,f,c
 16060  002410  5032               	movf	i1CANsendMessage@data+1,w,c
 16061  002412  22DA               	addwfc	fsr2h,f,c
 16062  002414  50DF               	movf	indf2,w,c
 16063  002416  010F               	movlb	15	; () banked
 16064  002418  6F3B               	movwf	59,b	;volatile
 16065                           
 16066                           ; BSR set to: 15
 16067                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
 16068  00241A  EE20 F006          	lfsr	2,6
 16069  00241E  5031               	movf	i1CANsendMessage@data,w,c
 16070  002420  26D9               	addwf	fsr2l,f,c
 16071  002422  5032               	movf	i1CANsendMessage@data+1,w,c
 16072  002424  22DA               	addwfc	fsr2h,f,c
 16073  002426  50DF               	movf	indf2,w,c
 16074  002428  010F               	movlb	15	; () banked
 16075  00242A  6F3C               	movwf	60,b	;volatile
 16076                           
 16077                           ; BSR set to: 15
 16078                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 16079  00242C  EE20 F007          	lfsr	2,7
 16080  002430  5031               	movf	i1CANsendMessage@data,w,c
 16081  002432  26D9               	addwf	fsr2l,f,c
 16082  002434  5032               	movf	i1CANsendMessage@data+1,w,c
 16083  002436  22DA               	addwfc	fsr2h,f,c
 16084  002438  50DF               	movf	indf2,w,c
 16085  00243A  010F               	movlb	15	; () banked
 16086  00243C  6F3D               	movwf	61,b	;volatile
 16087                           
 16088                           ; BSR set to: 15
 16089                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 16090  00243E  010F               	movlb	15	; () banked
 16091  002440  8730               	bsf	48,3,b	;volatile
 16092                           
 16093                           ; BSR set to: 15
 16094                           ;inc\CANlib.h: 444: return;
 16095  002442  0012               	return	
 16096  002444                     i1l378:
 16097                           
 16098                           ; BSR set to: 15
 16099                           ;inc\CANlib.h: 445: }
 16100                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 16101  002444  010F               	movlb	15	; () banked
 16102  002446  B720               	btfsc	32,3,b	;volatile
 16103  002448  0012               	return	
 16104                           
 16105                           ; BSR set to: 15
 16106                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 16107  00244A  C033  FF25         	movff	i1CANsendMessage@dataLength,3877	;volatile
 16108                           
 16109                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 16110  00244E  AC34               	btfss	i1CANsendMessage@flags,6,c
 16111  002450  D003               	goto	i1l393
 16112                           
 16113                           ; BSR set to: 15
 16114                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 16115  002452  010F               	movlb	15	; () banked
 16116  002454  8D25               	bsf	37,6,b	;volatile
 16117  002456  D002               	goto	i1l394
 16118  002458                     i1l393:
 16119                           
 16120                           ; BSR set to: 15
 16121                           ;inc\CANlib.h: 454: else
 16122                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 16123  002458  010F               	movlb	15	; () banked
 16124  00245A  9D25               	bcf	37,6,b	;volatile
 16125  00245C                     i1l394:
 16126                           
 16127                           ; BSR set to: 15
 16128                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 16129  00245C  A634               	btfss	i1CANsendMessage@flags,3,c
 16130  00245E  D066               	goto	i1l395
 16131                           
 16132                           ; BSR set to: 15
 16133                           ;inc\CANlib.h: 458: {
 16134                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 16135  002460  502D               	movf	i1CANsendMessage@identifier,w,c
 16136  002462  6E39               	movwf	i1CANsendMessage@tamp,c
 16137  002464  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 16138  002466  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 16139  002468  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 16140                           
 16141                           ; BSR set to: 15
 16142                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 16143  00246A  C039  FF24         	movff	i1CANsendMessage@tamp,3876	;volatile
 16144                           
 16145                           ; BSR set to: 15
 16146                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 16147  00246E  0E00               	movlw	0
 16148  002470  142D               	andwf	i1CANsendMessage@identifier,w,c
 16149  002472  6E39               	movwf	i1CANsendMessage@tamp,c
 16150  002474  0EFF               	movlw	255
 16151  002476  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 16152  002478  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 16153  00247A  0E00               	movlw	0
 16154  00247C  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 16155  00247E  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 16156  002480  0E00               	movlw	0
 16157  002482  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 16158  002484  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 16159                           
 16160                           ; BSR set to: 15
 16161                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 16162  002486  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 16163  00248A  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 16164  00248E  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 16165  002492  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 16166  002496  C036  F035         	movff	??i1_CANsendMessage+1,??i1_CANsendMessage
 16167  00249A  C037  F036         	movff	??i1_CANsendMessage+2,??i1_CANsendMessage+1
 16168  00249E  C038  F037         	movff	??i1_CANsendMessage+3,??i1_CANsendMessage+2
 16169  0024A2  6A38               	clrf	??i1_CANsendMessage+3,c
 16170  0024A4  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16171  0024A8  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16172  0024AC  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16173  0024B0  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16174                           
 16175                           ; BSR set to: 15
 16176                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 16177  0024B4  C039  FF23         	movff	i1CANsendMessage@tamp,3875	;volatile
 16178                           
 16179                           ; BSR set to: 15
 16180                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 16181  0024B8  0E00               	movlw	0
 16182  0024BA  010F               	movlb	15	; () banked
 16183  0024BC  6F22               	movwf	34,b	;volatile
 16184                           
 16185                           ; BSR set to: 15
 16186                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 16187  0024BE  010F               	movlb	15	; () banked
 16188  0024C0  8722               	bsf	34,3,b	;volatile
 16189                           
 16190                           ; BSR set to: 15
 16191                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 16192  0024C2  A02F               	btfss	i1CANsendMessage@identifier+2,0,c
 16193  0024C4  D002               	goto	i1l396
 16194                           
 16195                           ; BSR set to: 15
 16196                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 16197  0024C6  010F               	movlb	15	; () banked
 16198  0024C8  8122               	bsf	34,0,b	;volatile
 16199  0024CA                     i1l396:
 16200                           
 16201                           ; BSR set to: 15
 16202                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 16203  0024CA  A22F               	btfss	i1CANsendMessage@identifier+2,1,c
 16204  0024CC  D002               	goto	i1l397
 16205                           
 16206                           ; BSR set to: 15
 16207                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 16208  0024CE  010F               	movlb	15	; () banked
 16209  0024D0  8322               	bsf	34,1,b	;volatile
 16210  0024D2                     i1l397:
 16211                           
 16212                           ; BSR set to: 15
 16213                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 16214  0024D2  A42F               	btfss	i1CANsendMessage@identifier+2,2,c
 16215  0024D4  D002               	goto	i1l398
 16216                           
 16217                           ; BSR set to: 15
 16218                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 16219  0024D6  010F               	movlb	15	; () banked
 16220  0024D8  8B22               	bsf	34,5,b	;volatile
 16221  0024DA                     i1l398:
 16222                           
 16223                           ; BSR set to: 15
 16224                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 16225  0024DA  A62F               	btfss	i1CANsendMessage@identifier+2,3,c
 16226  0024DC  D002               	goto	i1l399
 16227                           
 16228                           ; BSR set to: 15
 16229                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 16230  0024DE  010F               	movlb	15	; () banked
 16231  0024E0  8D22               	bsf	34,6,b	;volatile
 16232  0024E2                     i1l399:
 16233                           
 16234                           ; BSR set to: 15
 16235                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 16236  0024E2  A82F               	btfss	i1CANsendMessage@identifier+2,4,c
 16237  0024E4  D002               	goto	i1l8532
 16238                           
 16239                           ; BSR set to: 15
 16240                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 16241  0024E6  010F               	movlb	15	; () banked
 16242  0024E8  8F22               	bsf	34,7,b	;volatile
 16243  0024EA                     i1l8532:
 16244                           
 16245                           ; BSR set to: 15
 16246                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 16247  0024EA  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 16248  0024EE  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 16249  0024F2  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 16250  0024F6  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 16251  0024FA  0E16               	movlw	22
 16252  0024FC  D005               	goto	i1u1141_20
 16253  0024FE                     i1u1141_25:
 16254  0024FE  90D8               	bcf	status,0,c
 16255  002500  3238               	rrcf	??i1_CANsendMessage+3,f,c
 16256  002502  3237               	rrcf	??i1_CANsendMessage+2,f,c
 16257  002504  3236               	rrcf	??i1_CANsendMessage+1,f,c
 16258  002506  3235               	rrcf	??i1_CANsendMessage,f,c
 16259  002508                     i1u1141_20:
 16260  002508  2EE8               	decfsz	wreg,f,c
 16261  00250A  D7F9               	goto	i1u1141_25
 16262  00250C  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16263  002510  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16264  002514  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16265  002518  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16266                           
 16267                           ; BSR set to: 15
 16268                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 16269  00251C  5039               	movf	i1CANsendMessage@tamp,w,c
 16270  00251E  6E39               	movwf	i1CANsendMessage@tamp,c
 16271  002520  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 16272  002522  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 16273  002524  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 16274                           
 16275                           ; BSR set to: 15
 16276                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 16277  002526  C039  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
 16278                           
 16279                           ;inc\CANlib.h: 483: }
 16280  00252A  D04D               	goto	i1l8552
 16281  00252C                     i1l395:
 16282                           
 16283                           ; BSR set to: 15
 16284                           ;inc\CANlib.h: 485: else
 16285                           ;inc\CANlib.h: 487: {
 16286                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 16287  00252C  010F               	movlb	15	; () banked
 16288  00252E  9722               	bcf	34,3,b	;volatile
 16289                           
 16290                           ; BSR set to: 15
 16291                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 16292  002530  C02D  F035         	movff	i1CANsendMessage@identifier,??i1_CANsendMessage
 16293  002534  C02E  F036         	movff	i1CANsendMessage@identifier+1,??i1_CANsendMessage+1
 16294  002538  C02F  F037         	movff	i1CANsendMessage@identifier+2,??i1_CANsendMessage+2
 16295  00253C  C030  F038         	movff	i1CANsendMessage@identifier+3,??i1_CANsendMessage+3
 16296  002540  0E04               	movlw	4
 16297  002542  D005               	goto	i1u1142_20
 16298  002544                     i1u1142_25:
 16299  002544  90D8               	bcf	status,0,c
 16300  002546  3238               	rrcf	??i1_CANsendMessage+3,f,c
 16301  002548  3237               	rrcf	??i1_CANsendMessage+2,f,c
 16302  00254A  3236               	rrcf	??i1_CANsendMessage+1,f,c
 16303  00254C  3235               	rrcf	??i1_CANsendMessage,f,c
 16304  00254E                     i1u1142_20:
 16305  00254E  2EE8               	decfsz	wreg,f,c
 16306  002550  D7F9               	goto	i1u1142_25
 16307  002552  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16308  002556  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16309  00255A  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16310  00255E  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16311                           
 16312                           ; BSR set to: 15
 16313                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 16314  002562  5039               	movf	i1CANsendMessage@tamp,w,c
 16315  002564  6E39               	movwf	i1CANsendMessage@tamp,c
 16316  002566  6A3A               	clrf	i1CANsendMessage@tamp+1,c
 16317  002568  6A3B               	clrf	i1CANsendMessage@tamp+2,c
 16318  00256A  6A3C               	clrf	i1CANsendMessage@tamp+3,c
 16319                           
 16320                           ; BSR set to: 15
 16321                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 16322  00256C  C039  FF21         	movff	i1CANsendMessage@tamp,3873	;volatile
 16323                           
 16324                           ; BSR set to: 15
 16325                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 16326  002570  0E07               	movlw	7
 16327  002572  142D               	andwf	i1CANsendMessage@identifier,w,c
 16328  002574  6E39               	movwf	i1CANsendMessage@tamp,c
 16329  002576  0E00               	movlw	0
 16330  002578  142E               	andwf	i1CANsendMessage@identifier+1,w,c
 16331  00257A  6E3A               	movwf	i1CANsendMessage@tamp+1,c
 16332  00257C  0E00               	movlw	0
 16333  00257E  142F               	andwf	i1CANsendMessage@identifier+2,w,c
 16334  002580  6E3B               	movwf	i1CANsendMessage@tamp+2,c
 16335  002582  0E00               	movlw	0
 16336  002584  1430               	andwf	i1CANsendMessage@identifier+3,w,c
 16337  002586  6E3C               	movwf	i1CANsendMessage@tamp+3,c
 16338                           
 16339                           ; BSR set to: 15
 16340                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 16341  002588  C039  F035         	movff	i1CANsendMessage@tamp,??i1_CANsendMessage
 16342  00258C  C03A  F036         	movff	i1CANsendMessage@tamp+1,??i1_CANsendMessage+1
 16343  002590  C03B  F037         	movff	i1CANsendMessage@tamp+2,??i1_CANsendMessage+2
 16344  002594  C03C  F038         	movff	i1CANsendMessage@tamp+3,??i1_CANsendMessage+3
 16345  002598  0E05               	movlw	5
 16346  00259A                     i1u1143_25:
 16347  00259A  90D8               	bcf	status,0,c
 16348  00259C  3635               	rlcf	??i1_CANsendMessage,f,c
 16349  00259E  3636               	rlcf	??i1_CANsendMessage+1,f,c
 16350  0025A0  3637               	rlcf	??i1_CANsendMessage+2,f,c
 16351  0025A2  3638               	rlcf	??i1_CANsendMessage+3,f,c
 16352  0025A4  2EE8               	decfsz	wreg,f,c
 16353  0025A6  D7F9               	goto	i1u1143_25
 16354  0025A8  C035  F039         	movff	??i1_CANsendMessage,i1CANsendMessage@tamp
 16355  0025AC  C036  F03A         	movff	??i1_CANsendMessage+1,i1CANsendMessage@tamp+1
 16356  0025B0  C037  F03B         	movff	??i1_CANsendMessage+2,i1CANsendMessage@tamp+2
 16357  0025B4  C038  F03C         	movff	??i1_CANsendMessage+3,i1CANsendMessage@tamp+3
 16358                           
 16359                           ; BSR set to: 15
 16360                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 16361  0025B8  010F               	movlb	15	; () banked
 16362  0025BA  5122               	movf	34,w,b	;volatile
 16363  0025BC  0B1F               	andlw	31
 16364  0025BE  010F               	movlb	15	; () banked
 16365  0025C0  6F22               	movwf	34,b	;volatile
 16366                           
 16367                           ; BSR set to: 15
 16368                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 16369  0025C2  C039  FF22         	movff	i1CANsendMessage@tamp,3874	;volatile
 16370  0025C6                     i1l8552:
 16371                           
 16372                           ; BSR set to: 15
 16373                           ;inc\CANlib.h: 498: }
 16374                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 16375  0025C6  A034               	btfss	i1CANsendMessage@flags,0,c
 16376  0025C8  D003               	goto	i1l402
 16377                           
 16378                           ; BSR set to: 15
 16379                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 16380  0025CA  010F               	movlb	15	; () banked
 16381  0025CC  8120               	bsf	32,0,b	;volatile
 16382  0025CE  D002               	goto	i1l403
 16383  0025D0                     i1l402:
 16384                           
 16385                           ; BSR set to: 15
 16386                           ;inc\CANlib.h: 502: else
 16387                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 16388  0025D0  010F               	movlb	15	; () banked
 16389  0025D2  9120               	bcf	32,0,b	;volatile
 16390  0025D4                     i1l403:
 16391                           
 16392                           ; BSR set to: 15
 16393                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 16394  0025D4  A234               	btfss	i1CANsendMessage@flags,1,c
 16395  0025D6  D003               	goto	i1l404
 16396                           
 16397                           ; BSR set to: 15
 16398                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 16399  0025D8  010F               	movlb	15	; () banked
 16400  0025DA  8320               	bsf	32,1,b	;volatile
 16401  0025DC  D002               	goto	i1l8558
 16402  0025DE                     i1l404:
 16403                           
 16404                           ; BSR set to: 15
 16405                           ;inc\CANlib.h: 506: else
 16406                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 16407  0025DE  010F               	movlb	15	; () banked
 16408  0025E0  9320               	bcf	32,1,b	;volatile
 16409  0025E2                     i1l8558:
 16410                           
 16411                           ; BSR set to: 15
 16412                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 16413  0025E2  C031  FFD9         	movff	i1CANsendMessage@data,fsr2l
 16414  0025E6  C032  FFDA         	movff	i1CANsendMessage@data+1,fsr2h
 16415  0025EA  50DF               	movf	indf2,w,c
 16416  0025EC  010F               	movlb	15	; () banked
 16417  0025EE  6F26               	movwf	38,b	;volatile
 16418                           
 16419                           ; BSR set to: 15
 16420                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 16421  0025F0  EE20 F001          	lfsr	2,1
 16422  0025F4  5031               	movf	i1CANsendMessage@data,w,c
 16423  0025F6  26D9               	addwf	fsr2l,f,c
 16424  0025F8  5032               	movf	i1CANsendMessage@data+1,w,c
 16425  0025FA  22DA               	addwfc	fsr2h,f,c
 16426  0025FC  50DF               	movf	indf2,w,c
 16427  0025FE  010F               	movlb	15	; () banked
 16428  002600  6F27               	movwf	39,b	;volatile
 16429                           
 16430                           ; BSR set to: 15
 16431                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 16432  002602  EE20 F002          	lfsr	2,2
 16433  002606  5031               	movf	i1CANsendMessage@data,w,c
 16434  002608  26D9               	addwf	fsr2l,f,c
 16435  00260A  5032               	movf	i1CANsendMessage@data+1,w,c
 16436  00260C  22DA               	addwfc	fsr2h,f,c
 16437  00260E  50DF               	movf	indf2,w,c
 16438  002610  010F               	movlb	15	; () banked
 16439  002612  6F28               	movwf	40,b	;volatile
 16440                           
 16441                           ; BSR set to: 15
 16442                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 16443  002614  EE20 F003          	lfsr	2,3
 16444  002618  5031               	movf	i1CANsendMessage@data,w,c
 16445  00261A  26D9               	addwf	fsr2l,f,c
 16446  00261C  5032               	movf	i1CANsendMessage@data+1,w,c
 16447  00261E  22DA               	addwfc	fsr2h,f,c
 16448  002620  50DF               	movf	indf2,w,c
 16449  002622  010F               	movlb	15	; () banked
 16450  002624  6F29               	movwf	41,b	;volatile
 16451                           
 16452                           ; BSR set to: 15
 16453                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 16454  002626  EE20 F004          	lfsr	2,4
 16455  00262A  5031               	movf	i1CANsendMessage@data,w,c
 16456  00262C  26D9               	addwf	fsr2l,f,c
 16457  00262E  5032               	movf	i1CANsendMessage@data+1,w,c
 16458  002630  22DA               	addwfc	fsr2h,f,c
 16459  002632  50DF               	movf	indf2,w,c
 16460  002634  010F               	movlb	15	; () banked
 16461  002636  6F2A               	movwf	42,b	;volatile
 16462                           
 16463                           ; BSR set to: 15
 16464                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 16465  002638  EE20 F005          	lfsr	2,5
 16466  00263C  5031               	movf	i1CANsendMessage@data,w,c
 16467  00263E  26D9               	addwf	fsr2l,f,c
 16468  002640  5032               	movf	i1CANsendMessage@data+1,w,c
 16469  002642  22DA               	addwfc	fsr2h,f,c
 16470  002644  50DF               	movf	indf2,w,c
 16471  002646  010F               	movlb	15	; () banked
 16472  002648  6F2B               	movwf	43,b	;volatile
 16473                           
 16474                           ; BSR set to: 15
 16475                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 16476  00264A  EE20 F006          	lfsr	2,6
 16477  00264E  5031               	movf	i1CANsendMessage@data,w,c
 16478  002650  26D9               	addwf	fsr2l,f,c
 16479  002652  5032               	movf	i1CANsendMessage@data+1,w,c
 16480  002654  22DA               	addwfc	fsr2h,f,c
 16481  002656  50DF               	movf	indf2,w,c
 16482  002658  010F               	movlb	15	; () banked
 16483  00265A  6F2C               	movwf	44,b	;volatile
 16484                           
 16485                           ; BSR set to: 15
 16486                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 16487  00265C  EE20 F007          	lfsr	2,7
 16488  002660  5031               	movf	i1CANsendMessage@data,w,c
 16489  002662  26D9               	addwf	fsr2l,f,c
 16490  002664  5032               	movf	i1CANsendMessage@data+1,w,c
 16491  002666  22DA               	addwfc	fsr2h,f,c
 16492  002668  50DF               	movf	indf2,w,c
 16493  00266A  010F               	movlb	15	; () banked
 16494  00266C  6F2D               	movwf	45,b	;volatile
 16495                           
 16496                           ; BSR set to: 15
 16497                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 16498  00266E  010F               	movlb	15	; () banked
 16499  002670  8720               	bsf	32,3,b	;volatile
 16500                           
 16501                           ; BSR set to: 15
 16502                           ;inc\CANlib.h: 520: return;
 16503  002672  0012               	return	
 16504  002674                     __end_ofi1_CANsendMessage:
 16505                           	opt stack 0
 16506                           pclatu	equ	0xFFB
 16507                           pclath	equ	0xFFA
 16508                           tblptru	equ	0xFF8
 16509                           tblptrh	equ	0xFF7
 16510                           tblptrl	equ	0xFF6
 16511                           tablat	equ	0xFF5
 16512                           prodh	equ	0xFF4
 16513                           prodl	equ	0xFF3
 16514                           intcon	equ	0xFF2
 16515                           intcon2	equ	0xFF1
 16516                           postinc0	equ	0xFEE
 16517                           fsr0h	equ	0xFEA
 16518                           fsr0l	equ	0xFE9
 16519                           wreg	equ	0xFE8
 16520                           indf1	equ	0xFE7
 16521                           postdec1	equ	0xFE5
 16522                           fsr1h	equ	0xFE2
 16523                           fsr1l	equ	0xFE1
 16524                           bsr	equ	0xFE0
 16525                           indf2	equ	0xFDF
 16526                           postinc2	equ	0xFDE
 16527                           postdec2	equ	0xFDD
 16528                           plusw2	equ	0xFDB
 16529                           fsr2h	equ	0xFDA
 16530                           fsr2l	equ	0xFD9
 16531                           status	equ	0xFD8
 16532                           
 16533 ;; *************** function i1_CANisTxReady *****************
 16534 ;; Defined at:
 16535 ;;		line 1154 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 16536 ;; Parameters:    Size  Location     Type
 16537 ;;		None
 16538 ;; Auto vars:     Size  Location     Type
 16539 ;;		None
 16540 ;; Return value:  Size  Location     Type
 16541 ;;                  1    wreg      unsigned char 
 16542 ;; Registers used:
 16543 ;;		wreg, status,2
 16544 ;; Tracked objects:
 16545 ;;		On entry : 0/0
 16546 ;;		On exit  : 0/0
 16547 ;;		Unchanged: 0/0
 16548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16552 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16553 ;;Total ram usage:        1 bytes
 16554 ;; Hardware stack levels used:    1
 16555 ;; Hardware stack levels required when called:    2
 16556 ;; This function calls:
 16557 ;;		Nothing
 16558 ;; This function is called by:
 16559 ;;		_ISR_Bassa
 16560 ;; This function uses a non-reentrant model
 16561 ;;
 16562                           
 16563                           	psect	text37
 16564  0066F0                     __ptext37:
 16565                           	opt stack 0
 16566  0066F0                     i1_CANisTxReady:
 16567                           	opt stack 21
 16568                           
 16569                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 16570                           
 16571                           ; BSR set to: 15
 16572                           ;incstack = 0
 16573  0066F0  0E01               	movlw	1
 16574  0066F2  6E2D               	movwf	i1_CANisTxReady$2845,c
 16575  0066F4  010F               	movlb	15	; () banked
 16576  0066F6  A740               	btfss	64,3,b	;volatile
 16577  0066F8  D008               	goto	i1l556
 16578                           
 16579                           ; BSR set to: 15
 16580  0066FA  010F               	movlb	15	; () banked
 16581  0066FC  A730               	btfss	48,3,b	;volatile
 16582  0066FE  D005               	goto	i1l556
 16583                           
 16584                           ; BSR set to: 15
 16585  006700  010F               	movlb	15	; () banked
 16586  006702  A720               	btfss	32,3,b	;volatile
 16587  006704  D002               	goto	i1l556
 16588                           
 16589                           ; BSR set to: 15
 16590  006706  0E00               	movlw	0
 16591  006708  6E2D               	movwf	i1_CANisTxReady$2845,c
 16592  00670A                     i1l556:
 16593                           
 16594                           ; BSR set to: 15
 16595  00670A  502D               	movf	i1_CANisTxReady$2845,w,c
 16596  00670C  0012               	return	
 16597  00670E                     __end_ofi1_CANisTxReady:
 16598                           	opt stack 0
 16599                           pclatu	equ	0xFFB
 16600                           pclath	equ	0xFFA
 16601                           tblptru	equ	0xFF8
 16602                           tblptrh	equ	0xFF7
 16603                           tblptrl	equ	0xFF6
 16604                           tablat	equ	0xFF5
 16605                           prodh	equ	0xFF4
 16606                           prodl	equ	0xFF3
 16607                           intcon	equ	0xFF2
 16608                           intcon2	equ	0xFF1
 16609                           postinc0	equ	0xFEE
 16610                           fsr0h	equ	0xFEA
 16611                           fsr0l	equ	0xFE9
 16612                           wreg	equ	0xFE8
 16613                           indf1	equ	0xFE7
 16614                           postdec1	equ	0xFE5
 16615                           fsr1h	equ	0xFE2
 16616                           fsr1l	equ	0xFE1
 16617                           bsr	equ	0xFE0
 16618                           indf2	equ	0xFDF
 16619                           postinc2	equ	0xFDE
 16620                           postdec2	equ	0xFDD
 16621                           plusw2	equ	0xFDB
 16622                           fsr2h	equ	0xFDA
 16623                           fsr2l	equ	0xFD9
 16624                           status	equ	0xFD8
 16625                           
 16626 ;; *************** function _CANreceiveMessage *****************
 16627 ;; Defined at:
 16628 ;;		line 528 in file "../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 16629 ;; Parameters:    Size  Location     Type
 16630 ;;  msg             2    0[COMRAM] PTR struct .
 16631 ;;		 -> msg(15), 
 16632 ;; Auto vars:     Size  Location     Type
 16633 ;;  tamp            1   11[COMRAM] unsigned char 
 16634 ;;  error           1   10[COMRAM] unsigned char 
 16635 ;; Return value:  Size  Location     Type
 16636 ;;                  1    wreg      unsigned char 
 16637 ;; Registers used:
 16638 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16639 ;; Tracked objects:
 16640 ;;		On entry : 0/0
 16641 ;;		On exit  : 0/0
 16642 ;;		Unchanged: 0/0
 16643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16644 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16645 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16646 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16647 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16648 ;;Total ram usage:       12 bytes
 16649 ;; Hardware stack levels used:    1
 16650 ;; Hardware stack levels required when called:    2
 16651 ;; This function calls:
 16652 ;;		Nothing
 16653 ;; This function is called by:
 16654 ;;		_ISR_Bassa
 16655 ;; This function uses a non-reentrant model
 16656 ;;
 16657                           
 16658                           	psect	text38
 16659  002BFE                     __ptext38:
 16660                           	opt stack 0
 16661  002BFE                     _CANreceiveMessage:
 16662                           	opt stack 21
 16663                           
 16664                           ;inc\CANlib.h: 530: BYTE tamp;
 16665                           ;inc\CANlib.h: 531: BYTE error = 0;
 16666                           
 16667                           ; BSR set to: 15
 16668                           ;incstack = 0
 16669  002BFE  0E00               	movlw	0
 16670  002C00  6E37               	movwf	CANreceiveMessage@error,c
 16671                           
 16672                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 16673  002C02  BE74               	btfsc	3956,7,c	;volatile
 16674                           
 16675                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 16676  002C04  8037               	bsf	CANreceiveMessage@error,0,c
 16677                           
 16678                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 16679  002C06  BC74               	btfsc	3956,6,c	;volatile
 16680                           
 16681                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 16682  002C08  8237               	bsf	CANreceiveMessage@error,1,c
 16683                           
 16684                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 16685  002C0A  010F               	movlb	15	; () banked
 16686  002C0C  AF50               	btfss	80,7,b	;volatile
 16687  002C0E  D143               	goto	i1l410
 16688                           
 16689                           ; BSR set to: 15
 16690                           ;inc\CANlib.h: 541: {
 16691                           ;inc\CANlib.h: 542: msg->identifier = 0;
 16692  002C10  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16693  002C14  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16694  002C18  6ADE               	clrf	postinc2,c
 16695  002C1A  6ADE               	clrf	postinc2,c
 16696  002C1C  6ADE               	clrf	postinc2,c
 16697  002C1E  6ADD               	clrf	postdec2,c
 16698                           
 16699                           ; BSR set to: 15
 16700                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 16701  002C20  EE20 F004          	lfsr	2,4
 16702  002C24  502D               	movf	CANreceiveMessage@msg,w,c
 16703  002C26  26D9               	addwf	fsr2l,f,c
 16704  002C28  502E               	movf	CANreceiveMessage@msg+1,w,c
 16705  002C2A  22DA               	addwfc	fsr2h,f,c
 16706  002C2C  CF56 FFDF          	movff	3926,indf2	;volatile
 16707                           
 16708                           ; BSR set to: 15
 16709                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 16710  002C30  EE20 F005          	lfsr	2,5
 16711  002C34  502D               	movf	CANreceiveMessage@msg,w,c
 16712  002C36  26D9               	addwf	fsr2l,f,c
 16713  002C38  502E               	movf	CANreceiveMessage@msg+1,w,c
 16714  002C3A  22DA               	addwfc	fsr2h,f,c
 16715  002C3C  CF57 FFDF          	movff	3927,indf2	;volatile
 16716                           
 16717                           ; BSR set to: 15
 16718                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 16719  002C40  EE20 F006          	lfsr	2,6
 16720  002C44  502D               	movf	CANreceiveMessage@msg,w,c
 16721  002C46  26D9               	addwf	fsr2l,f,c
 16722  002C48  502E               	movf	CANreceiveMessage@msg+1,w,c
 16723  002C4A  22DA               	addwfc	fsr2h,f,c
 16724  002C4C  CF58 FFDF          	movff	3928,indf2	;volatile
 16725                           
 16726                           ; BSR set to: 15
 16727                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 16728  002C50  EE20 F007          	lfsr	2,7
 16729  002C54  502D               	movf	CANreceiveMessage@msg,w,c
 16730  002C56  26D9               	addwf	fsr2l,f,c
 16731  002C58  502E               	movf	CANreceiveMessage@msg+1,w,c
 16732  002C5A  22DA               	addwfc	fsr2h,f,c
 16733  002C5C  CF59 FFDF          	movff	3929,indf2	;volatile
 16734                           
 16735                           ; BSR set to: 15
 16736                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 16737  002C60  EE20 F008          	lfsr	2,8
 16738  002C64  502D               	movf	CANreceiveMessage@msg,w,c
 16739  002C66  26D9               	addwf	fsr2l,f,c
 16740  002C68  502E               	movf	CANreceiveMessage@msg+1,w,c
 16741  002C6A  22DA               	addwfc	fsr2h,f,c
 16742  002C6C  CF5A FFDF          	movff	3930,indf2	;volatile
 16743                           
 16744                           ; BSR set to: 15
 16745                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 16746  002C70  EE20 F009          	lfsr	2,9
 16747  002C74  502D               	movf	CANreceiveMessage@msg,w,c
 16748  002C76  26D9               	addwf	fsr2l,f,c
 16749  002C78  502E               	movf	CANreceiveMessage@msg+1,w,c
 16750  002C7A  22DA               	addwfc	fsr2h,f,c
 16751  002C7C  CF5B FFDF          	movff	3931,indf2	;volatile
 16752                           
 16753                           ; BSR set to: 15
 16754                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 16755  002C80  EE20 F00A          	lfsr	2,10
 16756  002C84  502D               	movf	CANreceiveMessage@msg,w,c
 16757  002C86  26D9               	addwf	fsr2l,f,c
 16758  002C88  502E               	movf	CANreceiveMessage@msg+1,w,c
 16759  002C8A  22DA               	addwfc	fsr2h,f,c
 16760  002C8C  CF5C FFDF          	movff	3932,indf2	;volatile
 16761                           
 16762                           ; BSR set to: 15
 16763                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 16764  002C90  EE20 F00B          	lfsr	2,11
 16765  002C94  502D               	movf	CANreceiveMessage@msg,w,c
 16766  002C96  26D9               	addwf	fsr2l,f,c
 16767  002C98  502E               	movf	CANreceiveMessage@msg+1,w,c
 16768  002C9A  22DA               	addwfc	fsr2h,f,c
 16769  002C9C  CF5D FFDF          	movff	3933,indf2	;volatile
 16770                           
 16771                           ; BSR set to: 15
 16772                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 16773  002CA0  EE20 F00E          	lfsr	2,14
 16774  002CA4  502D               	movf	CANreceiveMessage@msg,w,c
 16775  002CA6  26D9               	addwf	fsr2l,f,c
 16776  002CA8  502E               	movf	CANreceiveMessage@msg+1,w,c
 16777  002CAA  22DA               	addwfc	fsr2h,f,c
 16778  002CAC  010F               	movlb	15	; () banked
 16779  002CAE  AD55               	btfss	85,6,b	;volatile
 16780  002CB0  D002               	goto	i1u738_20
 16781  002CB2  0E01               	movlw	1
 16782  002CB4  D001               	goto	i1u738_26
 16783  002CB6                     i1u738_20:
 16784  002CB6  0E00               	movlw	0
 16785  002CB8                     i1u738_26:
 16786  002CB8  6EDF               	movwf	indf2,c
 16787                           
 16788                           ; BSR set to: 15
 16789                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 16790  002CBA  EE20 F00D          	lfsr	2,13
 16791  002CBE  502D               	movf	CANreceiveMessage@msg,w,c
 16792  002CC0  26D9               	addwf	fsr2l,f,c
 16793  002CC2  502E               	movf	CANreceiveMessage@msg+1,w,c
 16794  002CC4  22DA               	addwfc	fsr2h,f,c
 16795  002CC6  010F               	movlb	15	; () banked
 16796  002CC8  5155               	movf	85,w,b	;volatile
 16797  002CCA  0B0F               	andlw	15
 16798  002CCC  6EDF               	movwf	indf2,c
 16799                           
 16800                           ; BSR set to: 15
 16801                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 16802  002CCE  EE20 F00C          	lfsr	2,12
 16803  002CD2  502D               	movf	CANreceiveMessage@msg,w,c
 16804  002CD4  26D9               	addwf	fsr2l,f,c
 16805  002CD6  502E               	movf	CANreceiveMessage@msg+1,w,c
 16806  002CD8  22DA               	addwfc	fsr2h,f,c
 16807  002CDA  010F               	movlb	15	; () banked
 16808  002CDC  A752               	btfss	82,3,b	;volatile
 16809  002CDE  D002               	goto	i1u739_20
 16810  002CE0  0E01               	movlw	1
 16811  002CE2  D001               	goto	i1u739_26
 16812  002CE4                     i1u739_20:
 16813  002CE4  0E00               	movlw	0
 16814  002CE6                     i1u739_26:
 16815  002CE6  6EDF               	movwf	indf2,c
 16816                           
 16817                           ; BSR set to: 15
 16818                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 16819  002CE8  010F               	movlb	15	; () banked
 16820  002CEA  B752               	btfsc	82,3,b	;volatile
 16821  002CEC  D044               	goto	i1l5942
 16822                           
 16823                           ; BSR set to: 15
 16824                           ;inc\CANlib.h: 559: {
 16825                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 16826  002CEE  CF51 F02F          	movff	3921,??_CANreceiveMessage	;volatile
 16827  002CF2  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16828  002CF4  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16829  002CF6  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16830  002CF8  0E03               	movlw	3
 16831  002CFA                     i1u741_25:
 16832  002CFA  90D8               	bcf	status,0,c
 16833  002CFC  362F               	rlcf	??_CANreceiveMessage,f,c
 16834  002CFE  3630               	rlcf	??_CANreceiveMessage+1,f,c
 16835  002D00  3631               	rlcf	??_CANreceiveMessage+2,f,c
 16836  002D02  3632               	rlcf	??_CANreceiveMessage+3,f,c
 16837  002D04  2EE8               	decfsz	wreg,f,c
 16838  002D06  D7F9               	goto	i1u741_25
 16839  002D08  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16840  002D0C  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16841  002D10  C02F  FFDE         	movff	??_CANreceiveMessage,postinc2
 16842  002D14  C030  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 16843  002D18  C031  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 16844  002D1C  C032  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 16845                           
 16846                           ; BSR set to: 15
 16847                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 16848  002D20  010F               	movlb	15	; () banked
 16849  002D22  3952               	swapf	82,w,b	;volatile
 16850  002D24  42E8               	rrncf	wreg,f,c
 16851  002D26  0B07               	andlw	7
 16852  002D28  0B07               	andlw	7
 16853  002D2A  6E38               	movwf	CANreceiveMessage@tamp,c
 16854                           
 16855                           ; BSR set to: 15
 16856                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 16857  002D2C  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16858  002D30  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16859  002D34  CFDE F02F          	movff	postinc2,??_CANreceiveMessage
 16860  002D38  CFDE F030          	movff	postinc2,??_CANreceiveMessage+1
 16861  002D3C  CFDE F031          	movff	postinc2,??_CANreceiveMessage+2
 16862  002D40  CFDE F032          	movff	postinc2,??_CANreceiveMessage+3
 16863  002D44  5038               	movf	CANreceiveMessage@tamp,w,c
 16864  002D46  242F               	addwf	??_CANreceiveMessage,w,c
 16865  002D48  6E33               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 16866  002D4A  0E00               	movlw	0
 16867  002D4C  2030               	addwfc	??_CANreceiveMessage+1,w,c
 16868  002D4E  6E34               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 16869  002D50  0E00               	movlw	0
 16870  002D52  2031               	addwfc	??_CANreceiveMessage+2,w,c
 16871  002D54  6E35               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 16872  002D56  0E00               	movlw	0
 16873  002D58  2032               	addwfc	??_CANreceiveMessage+3,w,c
 16874  002D5A  6E36               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 16875  002D5C  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16876  002D60  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16877  002D64  C033  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 16878  002D68  C034  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 16879  002D6C  C035  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 16880  002D70  C036  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 16881                           
 16882                           ;inc\CANlib.h: 563: }
 16883  002D74  D08D               	goto	i1l5968
 16884  002D76                     i1l5942:
 16885                           
 16886                           ; BSR set to: 15
 16887                           ;inc\CANlib.h: 564: else
 16888                           ;inc\CANlib.h: 565: {
 16889                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 16890  002D76  CF54 F02F          	movff	3924,??_CANreceiveMessage	;volatile
 16891  002D7A  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16892  002D7C  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16893  002D7E  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16894  002D80  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16895  002D84  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16896  002D88  C02F  FFDE         	movff	??_CANreceiveMessage,postinc2
 16897  002D8C  C030  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 16898  002D90  C031  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 16899  002D94  C032  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 16900                           
 16901                           ; BSR set to: 15
 16902                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 16903  002D98  CF53 F02F          	movff	3923,??_CANreceiveMessage	;volatile
 16904  002D9C  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 16905  002D9E  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 16906  002DA0  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 16907  002DA2  C031  F032         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 16908  002DA6  C030  F031         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 16909  002DAA  C02F  F030         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 16910  002DAE  6A2F               	clrf	??_CANreceiveMessage,c
 16911  002DB0  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16912  002DB4  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16913  002DB8  502F               	movf	??_CANreceiveMessage,w,c
 16914  002DBA  26DE               	addwf	postinc2,f,c
 16915  002DBC  5030               	movf	??_CANreceiveMessage+1,w,c
 16916  002DBE  22DE               	addwfc	postinc2,f,c
 16917  002DC0  5031               	movf	??_CANreceiveMessage+2,w,c
 16918  002DC2  22DE               	addwfc	postinc2,f,c
 16919  002DC4  5032               	movf	??_CANreceiveMessage+3,w,c
 16920  002DC6  22DE               	addwfc	postinc2,f,c
 16921                           
 16922                           ; BSR set to: 15
 16923                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 16924  002DC8  010F               	movlb	15	; () banked
 16925  002DCA  A152               	btfss	82,0,b	;volatile
 16926  002DCC  D00C               	goto	i1l5950
 16927                           
 16928                           ; BSR set to: 15
 16929                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 16930  002DCE  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16931  002DD2  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16932  002DD6  0E00               	movlw	0
 16933  002DD8  12DE               	iorwf	postinc2,f,c
 16934  002DDA  0E00               	movlw	0
 16935  002DDC  12DE               	iorwf	postinc2,f,c
 16936  002DDE  0E01               	movlw	1
 16937  002DE0  12DE               	iorwf	postinc2,f,c
 16938  002DE2  0E00               	movlw	0
 16939  002DE4  12DE               	iorwf	postinc2,f,c
 16940  002DE6                     i1l5950:
 16941                           
 16942                           ; BSR set to: 15
 16943                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 16944  002DE6  010F               	movlb	15	; () banked
 16945  002DE8  A352               	btfss	82,1,b	;volatile
 16946  002DEA  D00C               	goto	i1l5954
 16947                           
 16948                           ; BSR set to: 15
 16949                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 16950  002DEC  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16951  002DF0  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16952  002DF4  0E00               	movlw	0
 16953  002DF6  12DE               	iorwf	postinc2,f,c
 16954  002DF8  0E00               	movlw	0
 16955  002DFA  12DE               	iorwf	postinc2,f,c
 16956  002DFC  0E02               	movlw	2
 16957  002DFE  12DE               	iorwf	postinc2,f,c
 16958  002E00  0E00               	movlw	0
 16959  002E02  12DE               	iorwf	postinc2,f,c
 16960  002E04                     i1l5954:
 16961                           
 16962                           ; BSR set to: 15
 16963                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 16964  002E04  010F               	movlb	15	; () banked
 16965  002E06  AB52               	btfss	82,5,b	;volatile
 16966  002E08  D00C               	goto	i1l5958
 16967                           
 16968                           ; BSR set to: 15
 16969                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 16970  002E0A  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16971  002E0E  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16972  002E12  0E00               	movlw	0
 16973  002E14  12DE               	iorwf	postinc2,f,c
 16974  002E16  0E00               	movlw	0
 16975  002E18  12DE               	iorwf	postinc2,f,c
 16976  002E1A  0E04               	movlw	4
 16977  002E1C  12DE               	iorwf	postinc2,f,c
 16978  002E1E  0E00               	movlw	0
 16979  002E20  12DE               	iorwf	postinc2,f,c
 16980  002E22                     i1l5958:
 16981                           
 16982                           ; BSR set to: 15
 16983                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 16984  002E22  010F               	movlb	15	; () banked
 16985  002E24  AD52               	btfss	82,6,b	;volatile
 16986  002E26  D00C               	goto	i1l5962
 16987                           
 16988                           ; BSR set to: 15
 16989                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 16990  002E28  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 16991  002E2C  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 16992  002E30  0E00               	movlw	0
 16993  002E32  12DE               	iorwf	postinc2,f,c
 16994  002E34  0E00               	movlw	0
 16995  002E36  12DE               	iorwf	postinc2,f,c
 16996  002E38  0E08               	movlw	8
 16997  002E3A  12DE               	iorwf	postinc2,f,c
 16998  002E3C  0E00               	movlw	0
 16999  002E3E  12DE               	iorwf	postinc2,f,c
 17000  002E40                     i1l5962:
 17001                           
 17002                           ; BSR set to: 15
 17003                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 17004  002E40  010F               	movlb	15	; () banked
 17005  002E42  AF52               	btfss	82,7,b	;volatile
 17006  002E44  D00C               	goto	i1l5966
 17007                           
 17008                           ; BSR set to: 15
 17009                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 17010  002E46  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17011  002E4A  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17012  002E4E  0E00               	movlw	0
 17013  002E50  12DE               	iorwf	postinc2,f,c
 17014  002E52  0E00               	movlw	0
 17015  002E54  12DE               	iorwf	postinc2,f,c
 17016  002E56  0E10               	movlw	16
 17017  002E58  12DE               	iorwf	postinc2,f,c
 17018  002E5A  0E00               	movlw	0
 17019  002E5C  12DE               	iorwf	postinc2,f,c
 17020  002E5E                     i1l5966:
 17021                           
 17022                           ; BSR set to: 15
 17023                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 17024  002E5E  CF51 F02F          	movff	3921,??_CANreceiveMessage	;volatile
 17025  002E62  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17026  002E64  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17027  002E66  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17028  002E68  0E15               	movlw	21
 17029  002E6A                     i1u747_25:
 17030  002E6A  90D8               	bcf	status,0,c
 17031  002E6C  362F               	rlcf	??_CANreceiveMessage,f,c
 17032  002E6E  3630               	rlcf	??_CANreceiveMessage+1,f,c
 17033  002E70  3631               	rlcf	??_CANreceiveMessage+2,f,c
 17034  002E72  3632               	rlcf	??_CANreceiveMessage+3,f,c
 17035  002E74  2EE8               	decfsz	wreg,f,c
 17036  002E76  D7F9               	goto	i1u747_25
 17037  002E78  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17038  002E7C  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17039  002E80  502F               	movf	??_CANreceiveMessage,w,c
 17040  002E82  12DE               	iorwf	postinc2,f,c
 17041  002E84  5030               	movf	??_CANreceiveMessage+1,w,c
 17042  002E86  12DE               	iorwf	postinc2,f,c
 17043  002E88  5031               	movf	??_CANreceiveMessage+2,w,c
 17044  002E8A  12DE               	iorwf	postinc2,f,c
 17045  002E8C  5032               	movf	??_CANreceiveMessage+3,w,c
 17046  002E8E  12DE               	iorwf	postinc2,f,c
 17047  002E90                     i1l5968:
 17048                           
 17049                           ; BSR set to: 15
 17050                           ;inc\CANlib.h: 581: }
 17051                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 17052  002E90  010F               	movlb	15	; () banked
 17053  002E92  9F50               	bcf	80,7,b	;volatile
 17054                           
 17055                           ; BSR set to: 15
 17056                           ;inc\CANlib.h: 584: return (error);
 17057                           ;	Return value of _CANreceiveMessage is never used
 17058  002E94  0012               	return	
 17059  002E96                     i1l410:
 17060                           
 17061                           ; BSR set to: 15
 17062                           ;inc\CANlib.h: 585: }
 17063                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 17064  002E96  AE60               	btfss	3936,7,c	;volatile
 17065  002E98  0012               	return	
 17066                           
 17067                           ; BSR set to: 15
 17068                           ;inc\CANlib.h: 588: {
 17069                           ;inc\CANlib.h: 589: msg->identifier = 0;
 17070  002E9A  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17071  002E9E  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17072  002EA2  6ADE               	clrf	postinc2,c
 17073  002EA4  6ADE               	clrf	postinc2,c
 17074  002EA6  6ADE               	clrf	postinc2,c
 17075  002EA8  6ADD               	clrf	postdec2,c
 17076                           
 17077                           ; BSR set to: 15
 17078                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 17079  002EAA  EE20 F004          	lfsr	2,4
 17080  002EAE  502D               	movf	CANreceiveMessage@msg,w,c
 17081  002EB0  26D9               	addwf	fsr2l,f,c
 17082  002EB2  502E               	movf	CANreceiveMessage@msg+1,w,c
 17083  002EB4  22DA               	addwfc	fsr2h,f,c
 17084  002EB6  CF66 FFDF          	movff	3942,indf2	;volatile
 17085                           
 17086                           ; BSR set to: 15
 17087                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 17088  002EBA  EE20 F005          	lfsr	2,5
 17089  002EBE  502D               	movf	CANreceiveMessage@msg,w,c
 17090  002EC0  26D9               	addwf	fsr2l,f,c
 17091  002EC2  502E               	movf	CANreceiveMessage@msg+1,w,c
 17092  002EC4  22DA               	addwfc	fsr2h,f,c
 17093  002EC6  CF67 FFDF          	movff	3943,indf2	;volatile
 17094                           
 17095                           ; BSR set to: 15
 17096                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 17097  002ECA  EE20 F006          	lfsr	2,6
 17098  002ECE  502D               	movf	CANreceiveMessage@msg,w,c
 17099  002ED0  26D9               	addwf	fsr2l,f,c
 17100  002ED2  502E               	movf	CANreceiveMessage@msg+1,w,c
 17101  002ED4  22DA               	addwfc	fsr2h,f,c
 17102  002ED6  CF68 FFDF          	movff	3944,indf2	;volatile
 17103                           
 17104                           ; BSR set to: 15
 17105                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 17106  002EDA  EE20 F007          	lfsr	2,7
 17107  002EDE  502D               	movf	CANreceiveMessage@msg,w,c
 17108  002EE0  26D9               	addwf	fsr2l,f,c
 17109  002EE2  502E               	movf	CANreceiveMessage@msg+1,w,c
 17110  002EE4  22DA               	addwfc	fsr2h,f,c
 17111  002EE6  CF69 FFDF          	movff	3945,indf2	;volatile
 17112                           
 17113                           ; BSR set to: 15
 17114                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 17115  002EEA  EE20 F008          	lfsr	2,8
 17116  002EEE  502D               	movf	CANreceiveMessage@msg,w,c
 17117  002EF0  26D9               	addwf	fsr2l,f,c
 17118  002EF2  502E               	movf	CANreceiveMessage@msg+1,w,c
 17119  002EF4  22DA               	addwfc	fsr2h,f,c
 17120  002EF6  CF6A FFDF          	movff	3946,indf2	;volatile
 17121                           
 17122                           ; BSR set to: 15
 17123                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 17124  002EFA  EE20 F009          	lfsr	2,9
 17125  002EFE  502D               	movf	CANreceiveMessage@msg,w,c
 17126  002F00  26D9               	addwf	fsr2l,f,c
 17127  002F02  502E               	movf	CANreceiveMessage@msg+1,w,c
 17128  002F04  22DA               	addwfc	fsr2h,f,c
 17129  002F06  CF6B FFDF          	movff	3947,indf2	;volatile
 17130                           
 17131                           ; BSR set to: 15
 17132                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 17133  002F0A  EE20 F00A          	lfsr	2,10
 17134  002F0E  502D               	movf	CANreceiveMessage@msg,w,c
 17135  002F10  26D9               	addwf	fsr2l,f,c
 17136  002F12  502E               	movf	CANreceiveMessage@msg+1,w,c
 17137  002F14  22DA               	addwfc	fsr2h,f,c
 17138  002F16  CF6C FFDF          	movff	3948,indf2	;volatile
 17139                           
 17140                           ; BSR set to: 15
 17141                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 17142  002F1A  EE20 F00B          	lfsr	2,11
 17143  002F1E  502D               	movf	CANreceiveMessage@msg,w,c
 17144  002F20  26D9               	addwf	fsr2l,f,c
 17145  002F22  502E               	movf	CANreceiveMessage@msg+1,w,c
 17146  002F24  22DA               	addwfc	fsr2h,f,c
 17147  002F26  CF6D FFDF          	movff	3949,indf2	;volatile
 17148                           
 17149                           ; BSR set to: 15
 17150                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 17151  002F2A  EE20 F00E          	lfsr	2,14
 17152  002F2E  502D               	movf	CANreceiveMessage@msg,w,c
 17153  002F30  26D9               	addwf	fsr2l,f,c
 17154  002F32  502E               	movf	CANreceiveMessage@msg+1,w,c
 17155  002F34  22DA               	addwfc	fsr2h,f,c
 17156  002F36  AC65               	btfss	3941,6,c	;volatile
 17157  002F38  D002               	goto	i1u749_20
 17158  002F3A  0E01               	movlw	1
 17159  002F3C  D001               	goto	i1u749_26
 17160  002F3E                     i1u749_20:
 17161  002F3E  0E00               	movlw	0
 17162  002F40                     i1u749_26:
 17163  002F40  6EDF               	movwf	indf2,c
 17164                           
 17165                           ; BSR set to: 15
 17166                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 17167  002F42  EE20 F00D          	lfsr	2,13
 17168  002F46  502D               	movf	CANreceiveMessage@msg,w,c
 17169  002F48  26D9               	addwf	fsr2l,f,c
 17170  002F4A  502E               	movf	CANreceiveMessage@msg+1,w,c
 17171  002F4C  22DA               	addwfc	fsr2h,f,c
 17172  002F4E  5065               	movf	3941,w,c	;volatile
 17173  002F50  0B0F               	andlw	15
 17174  002F52  6EDF               	movwf	indf2,c
 17175                           
 17176                           ; BSR set to: 15
 17177                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 17178  002F54  EE20 F00C          	lfsr	2,12
 17179  002F58  502D               	movf	CANreceiveMessage@msg,w,c
 17180  002F5A  26D9               	addwf	fsr2l,f,c
 17181  002F5C  502E               	movf	CANreceiveMessage@msg+1,w,c
 17182  002F5E  22DA               	addwfc	fsr2h,f,c
 17183  002F60  A662               	btfss	3938,3,c	;volatile
 17184  002F62  D002               	goto	i1u750_20
 17185  002F64  0E01               	movlw	1
 17186  002F66  D001               	goto	i1u750_26
 17187  002F68                     i1u750_20:
 17188  002F68  0E00               	movlw	0
 17189  002F6A                     i1u750_26:
 17190  002F6A  6EDF               	movwf	indf2,c
 17191                           
 17192                           ; BSR set to: 15
 17193                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 17194  002F6C  B662               	btfsc	3938,3,c	;volatile
 17195  002F6E  D043               	goto	i1l6004
 17196                           
 17197                           ; BSR set to: 15
 17198                           ;inc\CANlib.h: 606: {
 17199                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 17200  002F70  CF61 F02F          	movff	3937,??_CANreceiveMessage	;volatile
 17201  002F74  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17202  002F76  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17203  002F78  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17204  002F7A  0E03               	movlw	3
 17205  002F7C                     i1u752_25:
 17206  002F7C  90D8               	bcf	status,0,c
 17207  002F7E  362F               	rlcf	??_CANreceiveMessage,f,c
 17208  002F80  3630               	rlcf	??_CANreceiveMessage+1,f,c
 17209  002F82  3631               	rlcf	??_CANreceiveMessage+2,f,c
 17210  002F84  3632               	rlcf	??_CANreceiveMessage+3,f,c
 17211  002F86  2EE8               	decfsz	wreg,f,c
 17212  002F88  D7F9               	goto	i1u752_25
 17213  002F8A  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17214  002F8E  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17215  002F92  C02F  FFDE         	movff	??_CANreceiveMessage,postinc2
 17216  002F96  C030  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 17217  002F9A  C031  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 17218  002F9E  C032  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 17219                           
 17220                           ; BSR set to: 15
 17221                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 17222  002FA2  3862               	swapf	3938,w,c	;volatile
 17223  002FA4  42E8               	rrncf	wreg,f,c
 17224  002FA6  0B07               	andlw	7
 17225  002FA8  0B07               	andlw	7
 17226  002FAA  6E38               	movwf	CANreceiveMessage@tamp,c
 17227                           
 17228                           ; BSR set to: 15
 17229                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 17230  002FAC  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17231  002FB0  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17232  002FB4  CFDE F02F          	movff	postinc2,??_CANreceiveMessage
 17233  002FB8  CFDE F030          	movff	postinc2,??_CANreceiveMessage+1
 17234  002FBC  CFDE F031          	movff	postinc2,??_CANreceiveMessage+2
 17235  002FC0  CFDE F032          	movff	postinc2,??_CANreceiveMessage+3
 17236  002FC4  5038               	movf	CANreceiveMessage@tamp,w,c
 17237  002FC6  242F               	addwf	??_CANreceiveMessage,w,c
 17238  002FC8  6E33               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 17239  002FCA  0E00               	movlw	0
 17240  002FCC  2030               	addwfc	??_CANreceiveMessage+1,w,c
 17241  002FCE  6E34               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 17242  002FD0  0E00               	movlw	0
 17243  002FD2  2031               	addwfc	??_CANreceiveMessage+2,w,c
 17244  002FD4  6E35               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 17245  002FD6  0E00               	movlw	0
 17246  002FD8  2032               	addwfc	??_CANreceiveMessage+3,w,c
 17247  002FDA  6E36               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 17248  002FDC  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17249  002FE0  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17250  002FE4  C033  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 17251  002FE8  C034  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 17252  002FEC  C035  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 17253  002FF0  C036  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 17254                           
 17255                           ;inc\CANlib.h: 610: }
 17256  002FF4  D088               	goto	i1l6030
 17257  002FF6                     i1l6004:
 17258                           
 17259                           ; BSR set to: 15
 17260                           ;inc\CANlib.h: 611: else
 17261                           ;inc\CANlib.h: 612: {
 17262                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 17263  002FF6  CF64 F02F          	movff	3940,??_CANreceiveMessage	;volatile
 17264  002FFA  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17265  002FFC  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17266  002FFE  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17267  003000  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17268  003004  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17269  003008  C02F  FFDE         	movff	??_CANreceiveMessage,postinc2
 17270  00300C  C030  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 17271  003010  C031  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 17272  003014  C032  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 17273                           
 17274                           ; BSR set to: 15
 17275                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 17276  003018  CF63 F02F          	movff	3939,??_CANreceiveMessage	;volatile
 17277  00301C  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17278  00301E  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17279  003020  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17280  003022  C031  F032         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 17281  003026  C030  F031         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 17282  00302A  C02F  F030         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 17283  00302E  6A2F               	clrf	??_CANreceiveMessage,c
 17284  003030  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17285  003034  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17286  003038  502F               	movf	??_CANreceiveMessage,w,c
 17287  00303A  26DE               	addwf	postinc2,f,c
 17288  00303C  5030               	movf	??_CANreceiveMessage+1,w,c
 17289  00303E  22DE               	addwfc	postinc2,f,c
 17290  003040  5031               	movf	??_CANreceiveMessage+2,w,c
 17291  003042  22DE               	addwfc	postinc2,f,c
 17292  003044  5032               	movf	??_CANreceiveMessage+3,w,c
 17293  003046  22DE               	addwfc	postinc2,f,c
 17294                           
 17295                           ; BSR set to: 15
 17296                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 17297  003048  A062               	btfss	3938,0,c	;volatile
 17298  00304A  D00C               	goto	i1l6012
 17299                           
 17300                           ; BSR set to: 15
 17301                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 17302  00304C  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17303  003050  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17304  003054  0E00               	movlw	0
 17305  003056  12DE               	iorwf	postinc2,f,c
 17306  003058  0E00               	movlw	0
 17307  00305A  12DE               	iorwf	postinc2,f,c
 17308  00305C  0E01               	movlw	1
 17309  00305E  12DE               	iorwf	postinc2,f,c
 17310  003060  0E00               	movlw	0
 17311  003062  12DE               	iorwf	postinc2,f,c
 17312  003064                     i1l6012:
 17313                           
 17314                           ; BSR set to: 15
 17315                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 17316  003064  A262               	btfss	3938,1,c	;volatile
 17317  003066  D00C               	goto	i1l6016
 17318                           
 17319                           ; BSR set to: 15
 17320                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 17321  003068  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17322  00306C  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17323  003070  0E00               	movlw	0
 17324  003072  12DE               	iorwf	postinc2,f,c
 17325  003074  0E00               	movlw	0
 17326  003076  12DE               	iorwf	postinc2,f,c
 17327  003078  0E02               	movlw	2
 17328  00307A  12DE               	iorwf	postinc2,f,c
 17329  00307C  0E00               	movlw	0
 17330  00307E  12DE               	iorwf	postinc2,f,c
 17331  003080                     i1l6016:
 17332                           
 17333                           ; BSR set to: 15
 17334                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 17335  003080  AA62               	btfss	3938,5,c	;volatile
 17336  003082  D00C               	goto	i1l6020
 17337                           
 17338                           ; BSR set to: 15
 17339                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 17340  003084  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17341  003088  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17342  00308C  0E00               	movlw	0
 17343  00308E  12DE               	iorwf	postinc2,f,c
 17344  003090  0E00               	movlw	0
 17345  003092  12DE               	iorwf	postinc2,f,c
 17346  003094  0E04               	movlw	4
 17347  003096  12DE               	iorwf	postinc2,f,c
 17348  003098  0E00               	movlw	0
 17349  00309A  12DE               	iorwf	postinc2,f,c
 17350  00309C                     i1l6020:
 17351                           
 17352                           ; BSR set to: 15
 17353                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 17354  00309C  AC62               	btfss	3938,6,c	;volatile
 17355  00309E  D00C               	goto	i1l6024
 17356                           
 17357                           ; BSR set to: 15
 17358                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 17359  0030A0  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17360  0030A4  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17361  0030A8  0E00               	movlw	0
 17362  0030AA  12DE               	iorwf	postinc2,f,c
 17363  0030AC  0E00               	movlw	0
 17364  0030AE  12DE               	iorwf	postinc2,f,c
 17365  0030B0  0E08               	movlw	8
 17366  0030B2  12DE               	iorwf	postinc2,f,c
 17367  0030B4  0E00               	movlw	0
 17368  0030B6  12DE               	iorwf	postinc2,f,c
 17369  0030B8                     i1l6024:
 17370                           
 17371                           ; BSR set to: 15
 17372                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 17373  0030B8  AE62               	btfss	3938,7,c	;volatile
 17374  0030BA  D00C               	goto	i1l6028
 17375                           
 17376                           ; BSR set to: 15
 17377                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 17378  0030BC  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17379  0030C0  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17380  0030C4  0E00               	movlw	0
 17381  0030C6  12DE               	iorwf	postinc2,f,c
 17382  0030C8  0E00               	movlw	0
 17383  0030CA  12DE               	iorwf	postinc2,f,c
 17384  0030CC  0E10               	movlw	16
 17385  0030CE  12DE               	iorwf	postinc2,f,c
 17386  0030D0  0E00               	movlw	0
 17387  0030D2  12DE               	iorwf	postinc2,f,c
 17388  0030D4                     i1l6028:
 17389                           
 17390                           ; BSR set to: 15
 17391                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 17392  0030D4  CF61 F02F          	movff	3937,??_CANreceiveMessage	;volatile
 17393  0030D8  6A30               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 17394  0030DA  6A31               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 17395  0030DC  6A32               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 17396  0030DE  0E15               	movlw	21
 17397  0030E0                     i1u758_25:
 17398  0030E0  90D8               	bcf	status,0,c
 17399  0030E2  362F               	rlcf	??_CANreceiveMessage,f,c
 17400  0030E4  3630               	rlcf	??_CANreceiveMessage+1,f,c
 17401  0030E6  3631               	rlcf	??_CANreceiveMessage+2,f,c
 17402  0030E8  3632               	rlcf	??_CANreceiveMessage+3,f,c
 17403  0030EA  2EE8               	decfsz	wreg,f,c
 17404  0030EC  D7F9               	goto	i1u758_25
 17405  0030EE  C02D  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 17406  0030F2  C02E  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 17407  0030F6  502F               	movf	??_CANreceiveMessage,w,c
 17408  0030F8  12DE               	iorwf	postinc2,f,c
 17409  0030FA  5030               	movf	??_CANreceiveMessage+1,w,c
 17410  0030FC  12DE               	iorwf	postinc2,f,c
 17411  0030FE  5031               	movf	??_CANreceiveMessage+2,w,c
 17412  003100  12DE               	iorwf	postinc2,f,c
 17413  003102  5032               	movf	??_CANreceiveMessage+3,w,c
 17414  003104  12DE               	iorwf	postinc2,f,c
 17415  003106                     i1l6030:
 17416                           
 17417                           ; BSR set to: 15
 17418                           ;inc\CANlib.h: 629: }
 17419                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 17420  003106  9E60               	bcf	3936,7,c	;volatile
 17421                           
 17422                           ; BSR set to: 15
 17423                           ;inc\CANlib.h: 632: return (error);
 17424                           ;	Return value of _CANreceiveMessage is never used
 17425  003108  0012               	return	
 17426  00310A                     __end_of_CANreceiveMessage:
 17427                           	opt stack 0
 17428                           pclatu	equ	0xFFB
 17429                           pclath	equ	0xFFA
 17430                           tblptru	equ	0xFF8
 17431                           tblptrh	equ	0xFF7
 17432                           tblptrl	equ	0xFF6
 17433                           tablat	equ	0xFF5
 17434                           prodh	equ	0xFF4
 17435                           prodl	equ	0xFF3
 17436                           intcon	equ	0xFF2
 17437                           intcon2	equ	0xFF1
 17438                           postinc0	equ	0xFEE
 17439                           fsr0h	equ	0xFEA
 17440                           fsr0l	equ	0xFE9
 17441                           wreg	equ	0xFE8
 17442                           indf1	equ	0xFE7
 17443                           postdec1	equ	0xFE5
 17444                           fsr1h	equ	0xFE2
 17445                           fsr1l	equ	0xFE1
 17446                           bsr	equ	0xFE0
 17447                           indf2	equ	0xFDF
 17448                           postinc2	equ	0xFDE
 17449                           postdec2	equ	0xFDD
 17450                           plusw2	equ	0xFDB
 17451                           fsr2h	equ	0xFDA
 17452                           fsr2l	equ	0xFD9
 17453                           status	equ	0xFD8
 17454                           
 17455 ;; *************** function _ISR_Alta *****************
 17456 ;; Defined at:
 17457 ;;		line 103 in file "parcheggio.c"
 17458 ;; Parameters:    Size  Location     Type
 17459 ;;		None
 17460 ;; Auto vars:     Size  Location     Type
 17461 ;;		None
 17462 ;; Return value:  Size  Location     Type
 17463 ;;		None               void
 17464 ;; Registers used:
 17465 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17466 ;; Tracked objects:
 17467 ;;		On entry : 0/0
 17468 ;;		On exit  : 0/0
 17469 ;;		Unchanged: 0/0
 17470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17473 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17474 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17475 ;;Total ram usage:       16 bytes
 17476 ;; Hardware stack levels used:    1
 17477 ;; Hardware stack levels required when called:    1
 17478 ;; This function calls:
 17479 ;;		___lwdiv
 17480 ;; This function is called by:
 17481 ;;		Interrupt level 2
 17482 ;; This function uses a non-reentrant model
 17483 ;;
 17484                           
 17485                           	psect	intcode
 17486  000008                     __pintcode:
 17487                           	opt stack 0
 17488  000008                     _ISR_Alta:
 17489                           	opt stack 21
 17490                           
 17491                           ; BSR set to: 15
 17492                           ;incstack = 0
 17493  000008  8256               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17494  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 17495  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 17496  000012  EFB2  F030         	goto	int_func
 17497                           pclatu	equ	0xFFB
 17498                           pclath	equ	0xFFA
 17499                           tblptru	equ	0xFF8
 17500                           tblptrh	equ	0xFF7
 17501                           tblptrl	equ	0xFF6
 17502                           tablat	equ	0xFF5
 17503                           prodh	equ	0xFF4
 17504                           prodl	equ	0xFF3
 17505                           intcon	equ	0xFF2
 17506                           intcon2	equ	0xFF1
 17507                           postinc0	equ	0xFEE
 17508                           fsr0h	equ	0xFEA
 17509                           fsr0l	equ	0xFE9
 17510                           wreg	equ	0xFE8
 17511                           indf1	equ	0xFE7
 17512                           postdec1	equ	0xFE5
 17513                           fsr1h	equ	0xFE2
 17514                           fsr1l	equ	0xFE1
 17515                           bsr	equ	0xFE0
 17516                           indf2	equ	0xFDF
 17517                           postinc2	equ	0xFDE
 17518                           postdec2	equ	0xFDD
 17519                           plusw2	equ	0xFDB
 17520                           fsr2h	equ	0xFDA
 17521                           fsr2l	equ	0xFD9
 17522                           status	equ	0xFD8
 17523                           
 17524                           	psect	intcode_body
 17525  006164                     __pintcode_body:
 17526                           	opt stack 21
 17527  006164                     int_func:
 17528                           	opt stack 21
 17529  006164  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 17530  006168  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 17531  00616C  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 17532  006170  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 17533  006174  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 17534  006178  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 17535  00617C  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 17536  006180  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 17537  006184  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 17538  006188  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 17539  00618C  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 17540  006190  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 17541                           
 17542                           ;parcheggio.c: 104: if (INTCON2bits.INTEDG0 == 1) {
 17543  006194  ACF1               	btfss	intcon2,6,c	;volatile
 17544  006196  D007               	goto	i2l698
 17545                           
 17546                           ;parcheggio.c: 105: INTCON2bits.INTEDG0 = 0;
 17547  006198  9CF1               	bcf	intcon2,6,c	;volatile
 17548                           
 17549                           ;parcheggio.c: 106: TMR3H = 0;
 17550  00619A  0E00               	movlw	0
 17551  00619C  6EB3               	movwf	4019,c	;volatile
 17552                           
 17553                           ;parcheggio.c: 107: TMR3L = 0;
 17554  00619E  0E00               	movlw	0
 17555  0061A0  6EB2               	movwf	4018,c	;volatile
 17556                           
 17557                           ;parcheggio.c: 108: distance_error = 0;
 17558  0061A2  9854               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 17559                           
 17560                           ;parcheggio.c: 109: } else {
 17561  0061A4  D030               	goto	i2l8594
 17562  0061A6                     i2l698:
 17563                           
 17564                           ;parcheggio.c: 110: TMR3H_temp = TMR3H;
 17565  0061A6  CFB3 F02A          	movff	4019,_TMR3H_temp	;volatile
 17566                           
 17567                           ;parcheggio.c: 111: TMR3L_temp = TMR3L;
 17568  0061AA  CFB2 F02B          	movff	4018,_TMR3L_temp	;volatile
 17569                           
 17570                           ;parcheggio.c: 112: timerValue2 = TMR3H_temp;
 17571  0061AE  C02A  F027         	movff	_TMR3H_temp,_timerValue2	;volatile
 17572  0061B2  6A28               	clrf	_timerValue2+1,c	;volatile
 17573                           
 17574                           ;parcheggio.c: 113: timerValue2 = ((timerValue2 << 8) | (TMR3L_temp));
 17575  0061B4  5027               	movf	_timerValue2,w,c	;volatile
 17576  0061B6  0100               	movlb	0	; () banked
 17577  0061B8  6F67               	movwf	??_ISR_Alta& (0+255),b
 17578  0061BA  502B               	movf	_TMR3L_temp,w,c	;volatile
 17579  0061BC  6E27               	movwf	_timerValue2,c	;volatile
 17580  0061BE  C067  F028         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 17581                           
 17582                           ; BSR set to: 0
 17583                           ;parcheggio.c: 114: pulse_time = timerValue2 / 2;
 17584  0061C2  90D8               	bcf	status,0,c
 17585  0061C4  3028               	rrcf	_timerValue2+1,w,c	;volatile
 17586  0061C6  0100               	movlb	0	; () banked
 17587  0061C8  6F67               	movwf	??_ISR_Alta& (0+255),b
 17588  0061CA  3027               	rrcf	_timerValue2,w,c	;volatile
 17589  0061CC  6E21               	movwf	_pulse_time,c	;volatile
 17590  0061CE  C067  F022         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 17591                           
 17592                           ; BSR set to: 0
 17593                           ;parcheggio.c: 115: sensor_distance[MUX_index] = pulse_time / 58;
 17594  0061D2  C021  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 17595  0061D6  C022  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 17596  0061DA  0E00               	movlw	0
 17597  0061DC  0100               	movlb	0	; () banked
 17598  0061DE  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 17599  0061E0  0E3A               	movlw	58
 17600  0061E2  6F62               	movwf	___lwdiv@divisor& (0+255),b
 17601  0061E4  ECCF  F031         	call	___lwdiv	;wreg free
 17602  0061E8  5029               	movf	_MUX_index,w,c	;volatile
 17603  0061EA  0D02               	mullw	2
 17604  0061EC  0E01               	movlw	low _sensor_distance
 17605  0061EE  24F3               	addwf	prodl,w,c
 17606  0061F0  6ED9               	movwf	fsr2l,c
 17607  0061F2  0E00               	movlw	high _sensor_distance
 17608  0061F4  20F4               	addwfc	prodh,w,c
 17609  0061F6  6EDA               	movwf	fsr2h,c
 17610  0061F8  0100               	movlb	0	; () banked
 17611  0061FA  C060  FFDE         	movff	?___lwdiv,postinc2
 17612  0061FE  0100               	movlb	0	; () banked
 17613  006200  C061  FFDD         	movff	?___lwdiv+1,postdec2
 17614                           
 17615                           ; BSR set to: 0
 17616                           ;parcheggio.c: 116: INTCON2bits.INTEDG0 = 1;
 17617  006204  8CF1               	bsf	intcon2,6,c	;volatile
 17618  006206                     i2l8594:
 17619                           
 17620                           ;parcheggio.c: 117: }
 17621                           ;parcheggio.c: 118: INTCONbits.INT0IF = 0;
 17622  006206  92F2               	bcf	intcon,1,c	;volatile
 17623  006208  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 17624  00620C  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 17625  006210  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 17626  006214  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 17627  006218  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 17628  00621C  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 17629  006220  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 17630  006224  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 17631  006228  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 17632  00622C  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 17633  006230  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 17634  006234  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 17635  006238  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 17636  00623C  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 17637  006240  9256               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17638  006242  0011               	retfie		f
 17639  006244                     __end_of_ISR_Alta:
 17640                           	opt stack 0
 17641                           pclatu	equ	0xFFB
 17642                           pclath	equ	0xFFA
 17643                           tblptru	equ	0xFF8
 17644                           tblptrh	equ	0xFF7
 17645                           tblptrl	equ	0xFF6
 17646                           tablat	equ	0xFF5
 17647                           prodh	equ	0xFF4
 17648                           prodl	equ	0xFF3
 17649                           intcon	equ	0xFF2
 17650                           intcon2	equ	0xFF1
 17651                           postinc0	equ	0xFEE
 17652                           fsr0h	equ	0xFEA
 17653                           fsr0l	equ	0xFE9
 17654                           wreg	equ	0xFE8
 17655                           indf1	equ	0xFE7
 17656                           postdec1	equ	0xFE5
 17657                           fsr1h	equ	0xFE2
 17658                           fsr1l	equ	0xFE1
 17659                           bsr	equ	0xFE0
 17660                           indf2	equ	0xFDF
 17661                           postinc2	equ	0xFDE
 17662                           postdec2	equ	0xFDD
 17663                           plusw2	equ	0xFDB
 17664                           fsr2h	equ	0xFDA
 17665                           fsr2l	equ	0xFD9
 17666                           status	equ	0xFD8
 17667                           
 17668 ;; *************** function ___lwdiv *****************
 17669 ;; Defined at:
 17670 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 17671 ;; Parameters:    Size  Location     Type
 17672 ;;  dividend        2    0[BANK0 ] unsigned int 
 17673 ;;  divisor         2    2[BANK0 ] unsigned int 
 17674 ;; Auto vars:     Size  Location     Type
 17675 ;;  quotient        2    5[BANK0 ] unsigned int 
 17676 ;;  counter         1    4[BANK0 ] unsigned char 
 17677 ;; Return value:  Size  Location     Type
 17678 ;;                  2    0[BANK0 ] unsigned int 
 17679 ;; Registers used:
 17680 ;;		wreg, status,2, status,0
 17681 ;; Tracked objects:
 17682 ;;		On entry : 0/0
 17683 ;;		On exit  : 0/0
 17684 ;;		Unchanged: 0/0
 17685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17686 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17687 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17689 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17690 ;;Total ram usage:        7 bytes
 17691 ;; Hardware stack levels used:    1
 17692 ;; This function calls:
 17693 ;;		Nothing
 17694 ;; This function is called by:
 17695 ;;		_ISR_Alta
 17696 ;; This function uses a non-reentrant model
 17697 ;;
 17698                           
 17699                           	psect	text40
 17700  00639E                     __ptext40:
 17701                           	opt stack 0
 17702  00639E                     ___lwdiv:
 17703                           	opt stack 21
 17704                           
 17705                           ;incstack = 0
 17706  00639E  0E00               	movlw	0
 17707  0063A0  0100               	movlb	0	; () banked
 17708  0063A2  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 17709  0063A4  0E00               	movlw	0
 17710  0063A6  6F65               	movwf	___lwdiv@quotient& (0+255),b
 17711                           
 17712                           ; BSR set to: 0
 17713  0063A8  0100               	movlb	0	; () banked
 17714  0063AA  5162               	movf	___lwdiv@divisor& (0+255),w,b
 17715  0063AC  0100               	movlb	0	; () banked
 17716  0063AE  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 17717  0063B0  B4D8               	btfsc	status,2,c
 17718  0063B2  D02C               	goto	i2l1303
 17719                           
 17720                           ; BSR set to: 0
 17721  0063B4  0E01               	movlw	1
 17722  0063B6  0100               	movlb	0	; () banked
 17723  0063B8  6F64               	movwf	___lwdiv@counter& (0+255),b
 17724  0063BA  D006               	goto	i2l8334
 17725  0063BC                     i2l8332:
 17726                           
 17727                           ; BSR set to: 0
 17728  0063BC  0100               	movlb	0	; () banked
 17729  0063BE  90D8               	bcf	status,0,c
 17730  0063C0  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 17731  0063C2  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 17732  0063C4  0100               	movlb	0	; () banked
 17733  0063C6  2B64               	incf	___lwdiv@counter& (0+255),f,b
 17734  0063C8                     i2l8334:
 17735                           
 17736                           ; BSR set to: 0
 17737  0063C8  0100               	movlb	0	; () banked
 17738  0063CA  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 17739  0063CC  D7F7               	goto	i2l8332
 17740  0063CE                     i2l8336:
 17741                           
 17742                           ; BSR set to: 0
 17743  0063CE  0100               	movlb	0	; () banked
 17744  0063D0  90D8               	bcf	status,0,c
 17745  0063D2  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 17746  0063D4  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 17747                           
 17748                           ; BSR set to: 0
 17749  0063D6  0100               	movlb	0	; () banked
 17750  0063D8  5162               	movf	___lwdiv@divisor& (0+255),w,b
 17751  0063DA  0100               	movlb	0	; () banked
 17752  0063DC  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 17753  0063DE  0100               	movlb	0	; () banked
 17754  0063E0  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 17755  0063E2  0100               	movlb	0	; () banked
 17756  0063E4  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 17757  0063E6  A0D8               	btfss	status,0,c
 17758  0063E8  D00A               	goto	i2l8344
 17759                           
 17760                           ; BSR set to: 0
 17761  0063EA  0100               	movlb	0	; () banked
 17762  0063EC  5162               	movf	___lwdiv@divisor& (0+255),w,b
 17763  0063EE  0100               	movlb	0	; () banked
 17764  0063F0  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 17765  0063F2  0100               	movlb	0	; () banked
 17766  0063F4  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 17767  0063F6  0100               	movlb	0	; () banked
 17768  0063F8  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 17769                           
 17770                           ; BSR set to: 0
 17771  0063FA  0100               	movlb	0	; () banked
 17772  0063FC  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 17773  0063FE                     i2l8344:
 17774                           
 17775                           ; BSR set to: 0
 17776  0063FE  0100               	movlb	0	; () banked
 17777  006400  90D8               	bcf	status,0,c
 17778  006402  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 17779  006404  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 17780                           
 17781                           ; BSR set to: 0
 17782  006406  0100               	movlb	0	; () banked
 17783  006408  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 17784  00640A  D7E1               	goto	i2l8336
 17785  00640C                     i2l1303:
 17786                           
 17787                           ; BSR set to: 0
 17788  00640C  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 17789  006410  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 17790                           
 17791                           ; BSR set to: 0
 17792  006414  0012               	return		;funcret
 17793  006416                     __end_of___lwdiv:
 17794                           	opt stack 0
 17795                           pclatu	equ	0xFFB
 17796                           pclath	equ	0xFFA
 17797                           tblptru	equ	0xFF8
 17798                           tblptrh	equ	0xFF7
 17799                           tblptrl	equ	0xFF6
 17800                           tablat	equ	0xFF5
 17801                           prodh	equ	0xFF4
 17802                           prodl	equ	0xFF3
 17803                           intcon	equ	0xFF2
 17804                           intcon2	equ	0xFF1
 17805                           postinc0	equ	0xFEE
 17806                           fsr0h	equ	0xFEA
 17807                           fsr0l	equ	0xFE9
 17808                           wreg	equ	0xFE8
 17809                           indf1	equ	0xFE7
 17810                           postdec1	equ	0xFE5
 17811                           fsr1h	equ	0xFE2
 17812                           fsr1l	equ	0xFE1
 17813                           bsr	equ	0xFE0
 17814                           indf2	equ	0xFDF
 17815                           postinc2	equ	0xFDE
 17816                           postdec2	equ	0xFDD
 17817                           plusw2	equ	0xFDB
 17818                           fsr2h	equ	0xFDA
 17819                           fsr2l	equ	0xFD9
 17820                           status	equ	0xFD8
 17821                           pclatu	equ	0xFFB
 17822                           pclath	equ	0xFFA
 17823                           tblptru	equ	0xFF8
 17824                           tblptrh	equ	0xFF7
 17825                           tblptrl	equ	0xFF6
 17826                           tablat	equ	0xFF5
 17827                           prodh	equ	0xFF4
 17828                           prodl	equ	0xFF3
 17829                           intcon	equ	0xFF2
 17830                           intcon2	equ	0xFF1
 17831                           postinc0	equ	0xFEE
 17832                           fsr0h	equ	0xFEA
 17833                           fsr0l	equ	0xFE9
 17834                           wreg	equ	0xFE8
 17835                           indf1	equ	0xFE7
 17836                           postdec1	equ	0xFE5
 17837                           fsr1h	equ	0xFE2
 17838                           fsr1l	equ	0xFE1
 17839                           bsr	equ	0xFE0
 17840                           indf2	equ	0xFDF
 17841                           postinc2	equ	0xFDE
 17842                           postdec2	equ	0xFDD
 17843                           plusw2	equ	0xFDB
 17844                           fsr2h	equ	0xFDA
 17845                           fsr2l	equ	0xFD9
 17846                           status	equ	0xFD8
 17847                           
 17848                           	psect	param0
 17849  0000                     pclatu	equ	0xFFB
 17850                           pclath	equ	0xFFA
 17851                           tblptru	equ	0xFF8
 17852                           tblptrh	equ	0xFF7
 17853                           tblptrl	equ	0xFF6
 17854                           tablat	equ	0xFF5
 17855                           prodh	equ	0xFF4
 17856                           prodl	equ	0xFF3
 17857                           intcon	equ	0xFF2
 17858                           intcon2	equ	0xFF1
 17859                           postinc0	equ	0xFEE
 17860                           fsr0h	equ	0xFEA
 17861                           fsr0l	equ	0xFE9
 17862                           wreg	equ	0xFE8
 17863                           indf1	equ	0xFE7
 17864                           postdec1	equ	0xFE5
 17865                           fsr1h	equ	0xFE2
 17866                           fsr1l	equ	0xFE1
 17867                           bsr	equ	0xFE0
 17868                           indf2	equ	0xFDF
 17869                           postinc2	equ	0xFDE
 17870                           postdec2	equ	0xFDD
 17871                           plusw2	equ	0xFDB
 17872                           fsr2h	equ	0xFDA
 17873                           fsr2l	equ	0xFD9
 17874                           status	equ	0xFD8
 17875                           
 17876                           	psect	temp
 17877  000056                     btemp:
 17878                           	opt stack 0
 17879  000056                     	ds	1
 17880  0000                     int$flags	set	btemp
 17881                           pclatu	equ	0xFFB
 17882                           pclath	equ	0xFFA
 17883                           tblptru	equ	0xFF8
 17884                           tblptrh	equ	0xFF7
 17885                           tblptrl	equ	0xFF6
 17886                           tablat	equ	0xFF5
 17887                           prodh	equ	0xFF4
 17888                           prodl	equ	0xFF3
 17889                           intcon	equ	0xFF2
 17890                           intcon2	equ	0xFF1
 17891                           postinc0	equ	0xFEE
 17892                           fsr0h	equ	0xFEA
 17893                           fsr0l	equ	0xFE9
 17894                           wreg	equ	0xFE8
 17895                           indf1	equ	0xFE7
 17896                           postdec1	equ	0xFE5
 17897                           fsr1h	equ	0xFE2
 17898                           fsr1l	equ	0xFE1
 17899                           bsr	equ	0xFE0
 17900                           indf2	equ	0xFDF
 17901                           postinc2	equ	0xFDE
 17902                           postdec2	equ	0xFDD
 17903                           plusw2	equ	0xFDB
 17904                           fsr2h	equ	0xFDA
 17905                           fsr2l	equ	0xFD9
 17906                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        11
    BSS         195
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     39      85
    BANK0           160    122     137
    BANK1           256     89     236
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK1[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> can_send@data_correction1(BANK0[0]), data_speed(BANK1[8]), data_brake(BANK1[8]), data_steering(BANK1[8]), 
		 -> data_correction(BANK1[8]), data_test(BANK1[8]), data(BANK1[8]), sensor_distance_short(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->i1_CANsendMessage

Critical Paths under _main in BANK0

    _park_search->___xxtofl
    _park_routine->___xxtofl
    _parallelo->___xxtofl
    _parallelo->_asin
    _can_send->_CANsendMessage
    _matematica->_asin
    _cos->_asin
    _floor->___xxtofl
    ___xxtofl->___fltol
    ___fltol->___flneg
    _asin->_atan
    _sqrt->___flneg
    _atan->___flge
    _fabs->___flneg
    ___flneg->___fladd
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul
    ___flge->_fabs
    _delay_s->_delay_ms
    _delay_ms->___wmul
    _configurations->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_park_routine
    _park_search->_parallelo
    _park_routine->_matematica
    _parallelo->_asin
    _matematica->_cos
    _cos->_asin
    _sin->___flsub
    ___flsub->_floor
    _asin->_sqrt

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  358772
                                            121 BANK0      1     1      0
                       _CANisTxReady
                     _CANsendMessage
                    _can_interpreter
                     _configurations
                           _delay_ms
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   95960
                                             43 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (1) _park_routine                                        12    12      0  247539
                                             77 BANK1     12    12      0
                       _CANisTxReady
                     _CANsendMessage
                            ___fladd
                            ___flneg
                            ___fltol
                           ___xxtofl
                           _can_send
                           _delay_ms
                            _delay_s
                         _matematica
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   86739
                                             41 BANK1      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    8405
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    8153
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      37
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     247
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _matematica                                          32    32      0  133218
                                             49 BANK1     28    28      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                               _asin
                                _cos
 ---------------------------------------------------------------------------------
 (3) _cos                                                 12     8      4   57965
                                             41 BANK1      8     4      4
                            ___fladd
                             ___flge
                               _asin (ARG)
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 17    13      4   49794
                                             18 BANK1     17    13      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4   10191
                                              0 BANK1     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                8     2      6     452
                                             23 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     784
                                            107 BANK0     14    10      4
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     722
                                             97 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6777
                                             10 BANK1      8     0      8
                            ___fladd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   57438
                                            117 BANK0      4     0      4
                                             21 BANK1     20    20      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0      8     4      4
                                              0 BANK1     21    21      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   34323
                                            113 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1621
                                             97 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1297
                                             93 BANK0      4     0      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   13009
                                             93 BANK0     16     8      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5541
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    6290
                                             73 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1498
                                            101 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4347
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0     947
                                             31 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     879
                                             29 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurations                                       0     0      0    6204
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    6204
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      62
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    4525
                                             16 COMRAM    23    23      0
                  _CANreceiveMessage
                     i1_CANisTxReady
                   i1_CANsendMessage
 ---------------------------------------------------------------------------------
 (8) i1_CANsendMessage                                    16     8      8    3197
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (8) i1_CANisTxReady                                       1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CANisTxReady
   _CANsendMessage
   _can_interpreter
   _configurations
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _delay_ms
     ___wmul
   _park_routine
     _CANisTxReady
     _CANsendMessage
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___flneg
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___flneg (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _can_send
       _CANisTxReady
       _CANsendMessage
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
     _matematica
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _cos
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _asin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _atan
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _fabs
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           _sqrt
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _sin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _floor (ARG)
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flge
                 _fabs (ARG)
                   ___flneg
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___xxtofl
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___flneg (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                 _abs (ARG)
               _frexp
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _floor
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___xxtofl
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               _abs (ARG)
             _frexp
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _abs
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage
   i1_CANisTxReady
   i1_CANsendMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     59      EC       7       92.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7A      89       5       85.6%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     27      55       1       90.4%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1CA      20        0.0%
DATA                 0      0     1CA       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue May 24 22:46:56 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _n 0138  
                           _x 00DA                             _z 0015          __end_of_CANSetFilter 1858  
                ___fldiv@sign 0083            delay_s@repeat_loop 0080                            bsr 000FE0  
         ___wmul@multiplicand 0079                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                    _MUX_select 0100                           l402 1F30  
                         l403 1F34                           l500 15B4                           l404 1F40  
                         l501 15B8                           l510 16C4                           l502 15C4  
                         l511 16D0                           l503 15C8                           l520 17DC  
                         l512 16D4                           l504 15D4                           l440 48A8  
                         l432 4868                           l521 17E0                           l513 16E0  
                         l433 486C                           l522 17EC                           l514 16E4  
                         l450 49B4                           l434 4878                           l370 1918  
                         l523 17F0                           l515 16F0                           l507 16B0  
                         l451 49C0                           l443 4980                           l435 487C  
                         l363 1ADC                           l524 17FC                           l508 16B4  
                         l444 4984                           l436 4888                           l380 1AF6  
                         l364 186E                           l525 1800                           l509 16C0  
                         l445 4990                           l437 488C                           l381 1BEE  
                         l373 1A28                           l365 1872                           l526 180C  
                         l518 17CC                           l470 1276                           l446 4994  
                         l438 4898                           l358 5796                           l390 1CBC  
                         l382 1B7E                           l374 1A2C                           l366 196A  
                         l519 17D0                           l471 1282                           l463 1242  
                         l447 49A0                           l439 489C                           l359 57A0  
                         l383 1B88                           l375 1A38                           l367 18FA  
                         l480 138C                           l464 1246                           l448 49A4  
                         l384 1B92                           l368 1904                           l481 1390  
                         l465 1252                           l449 49B0                           l393 1D76  
                         l385 1B9C                           l369 190E                           l490 149C  
                         l482 139C                           l474 135C                           l466 1256  
                         l394 1D7A                           l378 1D60                           l491 14A8  
                         l475 1360                           l467 1262                           l395 1E72  
                         l379 1AF2                           l492 14AC                           l476 136C  
                         l468 1266                           l556 66EA                           l396 1E02  
                         l388 1CAC                           l493 14B8                           l485 1478  
                         l477 1370                           l469 1272                           l397 1E0C  
                         l389 1CB0                           l741 5A56                           l486 147C  
                         l478 137C                           l398 1E16                           l487 1488  
                         l479 1380                           l399 1E20                           l743 5904  
                         l496 1594                           l488 148C                           l832 526A  
                         l497 1598                           l489 1498                           l569 65F8  
                         l498 15A4                           l826 52A8                           l754 5A52  
                         l499 15A8                           l790 3E00                           l774 3AFA  
                         l783 3B64                           l784 3CE4                           l777 3B38  
                         l787 3D78                           l896 6696                  __CFG_CPB$OFF 000000  
                __CFG_CPD$OFF 000000                           _abs 6674                           _asd 02A1  
                         _dir 02A3                           _cos 6080                           _msg 0144  
                         _sin 4A0C                           prod 000FF3                           wreg 000FE8  
             ?_configurations 002D                  ___flmul@aexp 009D                  ___flmul@bexp 00A2  
                ___flmul@sign 009C                  ___flmul@temp 00A7                  ___flmul@prod 00A3  
                __CFG_LVP$OFF 000000                  ___fltol@exp1 00CA                  __CFG_WDT$OFF 000000  
                        l1103 5BA0                          ?_abs 0077                          l1411 44DC  
                        l1420 4514                          l1422 4582                          l1414 4484  
                        l1096 65BA                          l1441 3666                          l1450 3970  
                        l1355 32EA                          l1339 4D12                          l1372 345E  
                        l1356 32DE                          l1508 5E4A                          l1381 34F2  
                        l1357 32AA                          l1448 3902                          l1458 3A14  
                        l1490 5602                          l1483 5556                          l1497 565E  
                        l1498 5676                          ?_cos 01B4                          l5310 48AC  
                        l7000 367A                          l5402 0F82                          l5420 103C  
                        l5316 48F2                          l7004 368E                          l5342 49C4  
                        l7102 5AFC                          l7112 5BEC                          l7120 662C  
                        l7106 5B4E                          l7130 5F9A                          l8010 5286  
                        l5620 16F4                          l5524 13E6                          l5284 47DC  
                        l5268 4726                          l7300 4490                          l7052 3916  
                        l8004 5234                          l8012 528C                          l5518 13A0  
                        l5438 10F6                          l5366 0E10                          l7062 396A  
                        l7046 38EC                          l7150 601C                          l7206 56C8  
                        l5552 14BC                          l5456 11B0                          l5384 0EC8  
                        l7312 44FE                          l7232 42CC                          l7072 39C0  
                        l7160 6052                          l7216 6330                          l5626 173A  
                        l5490 12CC                          l7306 44D8                          l7242 42FA  
                        l7146 6008                          l8210 3B5C                          l5484 1286  
                        l7252 432A                          l7076 39E6                          l7164 606E  
                        l7156 6038                          l7180 558E                          l8140 59B6  
                        l8116 58B6                          l8124 5900                          l8108 58A2  
                        l5654 1810                          l5558 1502                          l7342 4600  
                        l7318 4528                          l7262 4358                          l7238 42F0  
                        l7086 3A34                          l7078 39FA                          l7158 6048  
                        l7182 5596                          l7174 5566                          l8302 3E56  
                        l5592 161E                          l7352 4646                          l7344 4614  
                        l7328 457C                          l7088 3A3E                          l7192 5640  
                        l7184 55A6                          l7512 1BA6                          l8304 3E62  
                        l8320 3ED6                          l8136 597E                          l8128 5962  
                        l5586 15D8                          l7354 464A                          l7346 4636  
                        l7338 45D2                          l7282 43DA                          l7274 43AC  
                        l7258 434E                          l7098 5AAE                          l6810 31EE  
                        l6802 31C4                          l7194 5650                          l7186 55E4  
                        l8314 3E8E                          l7292 4458                          l7532 1CA0  
                        l7436 1922                          l6910 34A6                          l7710 413C  
                        l7702 4074                          l7390 5D78                          l7614 1F44  
                        l7462 1A3C                          l8190 3AF0                          l8158 5A14  
                        l6904 3490                          l6920 34C6                          l6840 322A  
                        l7376 5EB2                          l7704 407C                          l7800 4B6C  
                        l7608 1F24                          l7456 1A1C                          l8176 3A74  
                        l6930 34EC                          l6914 34B2                          l6922 34CC  
                        l7378 5F56                          l7394 5D8C                          l7538 1CC0  
                        l8186 3AB8                          l7820 6716                          l6940 3548  
                        l6852 32BE                          l7708 4102                          l7716 4178  
                        l7652 3F02                          l7804 4BE2                          l6854 32C4  
                        l6774 314C                          l7398 5DAE                          l7824 65EA  
                        l6960 35A0                          l6952 3588                          l6944 355A  
                        l6792 3196                          l6768 3128                          l7760 537A  
                        l7736 428E                          l7728 4258                          l7672 3F80  
                        l7664 3F4E                          l6954 358C                          l6882 335C  
                        l6858 32CE                          l6786 3182                          l6778 3156  
                        l6970 35D0                          l7666 3F60                          l7914 6108  
                        l6948 357C                          l6876 334C                          l6868 330E  
                        l6980 360C                          l7772 54CE                          l7756 5306  
                        l7692 3FF2                          l7684 3FC2                          l7588 1E2A  
                        l7852 5C7E                          l7836 5BF4                          ?_sin 019D  
                        l6878 3352                          l6886 336E                          l6798 31BA  
                        l7846 5C40                          l8726 6292                          l8734 62F8  
                        l7960 57A4                          l6896 343E                          l6976 35F4  
                        l7776 54E6                          l7864 5CFE                          l7856 5CB8  
                        l8728 62A0                          l6994 364E                          l6978 35FA  
                        l7874 4D82                          l7964 57AC                          l6996 3654  
                        l6988 362A                          l7788 4A42                          l7966 57F0  
                        l7958 578E                          l7974 66AC                          l7886 4EB0  
                        l7978 66BE                          l7898 4F92                          _LATA 000F89  
                        _LATB 000F8A                          _LATC 000F8B                          u6140 46A2  
                        u6145 4696                          u6155 4702                          u6500 0FB8  
                        u6420 0E44                          u6180 4758                          u7070 1830  
                        u6350 49E4                          u6270 48CC                          u6505 0FAC  
                        u6425 0E38                          u6185 474C                          u7075 1824  
                        u6515 1018                          u6435 0EA4                          u6355 49D8  
                        u6275 48C0                          u6195 47B8                          u6540 1072  
                        u6460 0EFE                          u6380 0D8C                          u9200 39D4  
                        u9120 388E                          u6545 1066                          u6465 0EF2  
                        u6385 0D80                          u6555 10D2                          u6475 0F5E  
                        u6395 0DEC                          u6580 112C                          u9300 5FBA  
                        u9125 3882                          u6910 15F8                          u6830 14DC  
                        u6750 13C0                          u6670 12A6                          u6585 1120  
                        u9305 5FAE                          u6915 15EC                          u6835 14D0  
                        u6755 13B4                          u6675 129A                          u6595 118C  
                        u8740 3274                          u6990 1714                          u8750 328C  
                        u9470 6362                          u8760 328E                          u6995 1708  
                        u9478 6366                          u9750 5D9C                          u9680 45E6  
                        u9850 1942                          u9860 198E                          u9855 1936  
                        u9865 1982                          u9875 19EE                          u9980 1BC6  
                        u9990 1C12                          u9985 1BBA                          u9995 1C06  
    __end_ofi1_CANsendMessage 2674           __size_of_CANSetMask 039E                          _Pmin 0128  
                        abs@a 0077                          _alfa 012C                          _fabs 658E  
                        _data 0153                          _beta 0130                          _atan 52BA  
                        _asin 4D24                          _main 6244                          cos@f 01B4  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          indf1 000FE7                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          btemp 0056  
                        _sqrt 3EE4                          pclat 000FFA                          sin@f 019D  
                        sin@y 01A1                          prodh 000FF4                          prodl 000FF3  
                        start 0312                 __CFG_IESO$OFF 000000               ___fldiv@new_exp 0088  
              delay_s@value_s 007F                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
            _CANOperationMode 670E                         ??_abs 0079                         ??_cos 00D9  
                       ??_sin 00D9    __size_of_CANreceiveMessage 050C                         ?_fabs 00C1  
               ___fltol@sign1 00C9                         ?_atan 00D1                         ?_asin 00D5  
             __end_of___fladd 35B2                         ?_main 002D               __end_of___fldiv 466E  
             __end_of___flneg 663E               __end_of___flmul 3A58               __end_of___flsub 658E  
             __end_of___fltol 6080                         ?_sqrt 00C1                         u10005 1C72  
                       u10110 1E4A                         u10120 1E96                         u10115 1E3E  
                       u10125 1E8A                         u10310 5336                         u10135 1EF6  
                       u10320 5338                         _T0CON 000FD5                         u10611 50C8  
                       u10380 4B66                         u10700 58B2                         u10621 50D4  
                       u10390 4B68                         u10660 5284                         u11710 62B2  
                       u10840 3A8A                         u10780 59C6                         u11716 62B4  
                       u10846 3A8C                         _T3CON 000FB1                         u11737 65EC  
                       u10980 3E36            __size_of_ISR_Bassa 02FA               __end_of___lwdiv 6416  
                       i1l410 2E96                         i1l402 25D0                         i1l403 25D4  
                       i1l404 25DE                         i1l370 2082                         i1l363 2214  
                       i1l380 222C                         i1l364 1FF8                         i1l381 22FC  
                       i1l373 2170                         i1l365 1FFC                         i1l390 23AE  
                       i1l382 229A                         i1l374 2174                         i1l366 20CC  
                       i1l383 22A2                         i1l375 217E                         i1l367 206A  
                       i1l384 22AA                         i1l368 2072                         i1l712 0158  
                       i1l704 008C                         i1l393 2458                         i1l385 22B2  
                       i1l369 207A                         i1l394 245C                         i1l378 2444  
                       i1l722 02C6                         i1l395 252C                         i1l379 2228  
                       i1l556 670A                         i1l396 24CA                         i1l388 23A0  
                       i1l397 24D2                         i1l389 23A4                         i1l398 24DA  
                       i1l726 02CA                         i1l399 24E2                         i1l719 0246  
                       i2l698 61A6                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _TMR3H 000FB3                         _TMR3L 000FB2                         _PORTA 000F80  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
          __end_ofsin@coeff_a 0D41            __end_ofsin@coeff_b 0D51                 __CFG_PWRT$OFF 000000  
            __end_of_ISR_Alta 6244               __end_of_delay_s 66CC                 __CFG_WRT0$OFF 000000  
                       _J_var 0120                 __CFG_WRT1$OFF 000000                         _K_var 0124  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000            CANInitialize@flags 0089  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       _bordo 0134                         fabs@d 00C1                         _first 02A8  
                       _floor 5D38                         _frexp 630A                         _errno 00E4  
                       atan@f 00D1                         atan@x 018F                         atan@y 018B  
                       asin@x 00D5                         asin@y 01AC      can_send@data_correction1 0087  
              __pbitbssCOMRAM 02A0                         sin@x2 01A9                         tablat 000FF5  
        __end_of_CANisTxReady 66F0                         plusw2 000FDB                         sqrt@a 00C1  
                       sqrt@i 018C                         sqrt@p 0191                         status 000FD8  
                ?_park_search 002D               __initialization 6416                  __end_of_fabs 65CC  
                __end_of_atan 550C                  __end_of_asin 5036                  __end_of_main 630A  
                __end_of_sqrt 42AE                        ??_fabs 00C5                        ??_atan 00D5  
                      ??_asin 00D9                        ??_main 00D9             _park_routine$3743 01DC  
           _park_routine$3744 01E0                        ??_sqrt 00C5                 __activetblptr 000003  
           _CANisTxReady$2845 0077                        _ADCON1 000FC1                        ?_floor 018B  
                      ?_frexp 0077                        _CANCON 000F6F            _distance_received1 02A6  
             __CFG_BBSIZ$1024 000000             _spazio_parcheggio 00E6                 _avvicinamento 02A2  
                      i1l6020 309C                        i1l6012 3064                        i1l6004 2FF6  
                      i1l6030 3106                        i2l1303 640C                        i1l6024 30B8  
                      i1l6016 3080                        i1l6028 30D4                        i1l8400 2166  
                      i1l5950 2DE6                        i1l5942 2D76                        i1l8406 2182  
                      i1l5962 2E40                        i1l5954 2E04                        i1l8532 24EA  
                      i1l8380 208A                        i1l8700 0288                        i1l8620 00F8  
                      i1l8612 00C8                        i1l5966 2E5E                        i1l5958 2E22  
                      i1l5968 2E90                        i1l8552 25C6                        i1l8456 22BA  
                      i1l8624 012A                        i1l8482 23B2                        i1l8706 02B0  
                      i1l8626 014A                        i1l8476 2396                        i1l8660 0194  
                      i1l8558 25E2                        i1l8656 018C                        i1l8682 0222  
                      i1l8696 0280                        i1l8688 0250                        i2l8332 63BC  
                      i2l8334 63C8                        i2l8344 63FE                        i2l8336 63CE  
                      i2l8594 6206                        _RXB0D0 000F66                        _RXB0D1 000F67  
                      _RXB0D2 000F68                        _RXB0D3 000F69                        _RXB0D4 000F6A  
                      _RXB1D0 000F56                        _RXB0D5 000F6B                        _RXB1D1 000F57  
                      _RXB0D6 000F6C                        _RXB1D2 000F58                        _RXB0D7 000F6D  
                      _RXB1D3 000F59                        _RXB1D4 000F5A                        _RXB1D5 000F5B  
                      _RXB1D6 000F5C                        _RXB1D7 000F5D                        _TXB0D0 000F46  
                      _TXB0D1 000F47                        _TXB0D2 000F48                        _TXB0D3 000F49  
                      _TXB1D0 000F36                        _TXB0D4 000F4A                        _TXB1D1 000F37  
                      _TXB0D5 000F4B                        _TXB1D2 000F38                        _TXB0D6 000F4C  
                      _TXB1D3 000F39                        _TXB0D7 000F4D                        _TXB2D0 000F26  
                      _TXB1D4 000F3A                        _TXB2D1 000F27                        _TXB1D5 000F3B  
                      _TXB2D2 000F28                        _TXB1D6 000F3C                        _TXB2D3 000F29  
                      _TXB1D7 000F3D                        _TXB2D4 000F2A                        _TXB2D5 000F2B  
                      _TXB2D6 000F2C                        _TXB2D7 000F2D            CANsendMessage@data 007B  
            __end_of_can_send 5D38            CANsendMessage@tamp 0083              __end_of___xxtofl 56DA  
           __end_of_ISR_Bassa 0312              __end_of_delay_ms 6606         __size_of_CANSetFilter 0B06  
              __CFG_XINST$OFF 000000                        ___flge 5A60               _data_correction 0163  
                   ??___fladd 00B1                        ___wmul 663E                     ??___fldiv 007F  
                   ??___flneg 00C1                __CFG_STVREN$ON 000000                     ??___flmul 0098  
                   ??___flsub 00D9                     ??___fltol 00C5                     ??___lwdiv 0064  
                ??_CANSetMask 007C                        _raggio 01E8                        clear_0 641C  
                      clear_1 6428                        clear_2 6438                     ??_delay_s 007F  
                      floor@i 018F                        floor@x 018B               __CFG_BOREN$BOHW 000000  
     __size_ofi1_CANisTxReady 001E                        sin@sgn 01AD                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                _CANSetFilter 0D52                    ___flge@ff1 00C5                    ___flge@ff2 00C9  
                ___xxtofl@arg 00D5                  ___xxtofl@exp 00D4                  ___xxtofl@val 00CB  
                  __accesstop 0060       __end_of__initialization 647C            __end_of_CANSetMask 4A0C  
             __CFG_PBADEN$OFF 000000                    ___flneg@f1 00BD                 ?_park_routine 002D  
                eval_poly@res 00C9                 ___rparam_used 000000                    ___fltol@f1 00C1  
              __pcstackCOMRAM 002D                     ?_ISR_Alta 002D                  __pidataBANK0 672C  
                __pidataBANK1 6724                 __end_of_floor 5E5C                 __end_of_frexp 639E  
            ??_configurations 0091         CANSetFilter@numBuffer 0080                  _actual_speed 00DE  
       __size_of_CANisTxReady 0024                       ??_floor 00D9                       ??_frexp 007D  
    __end_of_CANOperationMode 6724                    __pbssBANK0 00DA                    __pbssBANK1 0100  
             _sensor_distance 0001            __size_of_eval_poly 0118             ?i1_CANsendMessage 002D  
                  _data_brake 015B                ??_park_routine 01D8                 ISR_Bassa@gigi 0052  
     __size_of_CANsendMessage 078C                    _data_speed 016B                    _activation 02A0  
          ??i1_CANsendMessage 0035      __size_of_can_interpreter 0054            __size_of_parallelo 0284  
        __size_of_park_search 01C0             _old_alignment_gap 013C                    ??_ISR_Alta 0067  
                     ?___flge 00C5                       ?___wmul 0077                       _CANSTAT 000F6E  
                _CANisTxReady 66CC                       _BRGCON1 000F70                       _BRGCON2 000F71  
                     _BRGCON3 000F72                     ?_can_send 002D                     ?___xxtofl 00CB  
      __size_of_CANInitialize 01C6                     ?_delay_ms 007D                       _RXB0DLC 000F65  
                     _RXB1DLC 000F55                       _RXB0CON 000F60                       _RXB1CON 000F50  
                     _TXB0DLC 000F45                       _TXB1DLC 000F35                       _TXB2DLC 000F25  
         CANsendMessage@flags 007E                       __Hparam 0000                    _left_speed 001F  
                     __Lparam 0000              delay_ms@value_ms 007D               __size_of___flge 0190  
                  _matematica 2674                       ___fladd 310A                       ___fldiv 42AE  
                     ___flneg 6606                       ___flmul 35B2                       ___flsub 6546  
                     ___fltol 5F74               __size_of___wmul 0036                       ___lwdiv 639E  
                __psmallconst 0D00          CANInitialize@propSeg 008E                       __pcinit 6416  
           __end_of_eval_poly 5F74                       _delay_s 66A0                       __ramtop 0D00  
                     __ptext0 6244                       __ptext1 58A0                       __ptext2 3A58  
                     __ptext3 5036                       __ptext4 5BF0                       __ptext5 1858  
                     __ptext6 66CC                       __ptext7 6674                       __ptext8 2674  
                     __ptext9 6080                     _T0CONbits 000FD5                i1_CANisTxReady 66F0  
                  ??_can_send 0087                  __size_of_abs 002C                  __size_of_cos 00E4  
             atan@val_squared 0194                  __size_of_sin 0318                    ??___xxtofl 00CF  
                     atan@val 0198             __end_of_parallelo 52BA                    ??_delay_ms 007F  
                     asin@sgn 01A0        CANreceiveMessage@error 0037               _start_operation 02AD  
              __pintcode_body 6164          end_of_initialization 647C                     i1u1130_25 236A  
                   i1u1115_20 20A8                     i1u1115_25 209E                     i1u1116_20 20EE  
                   i1u1116_25 20E4                     i1u1141_20 2508                     i1u1141_25 24FE  
                   i1u1117_25 213A                     i1u1142_20 254E                     i1u1142_25 2544  
                   i1u1151_24 00BC                     i1u1143_25 259A                     i1u1151_25 00B8  
                   i1u1128_20 22D8                     i1u1128_25 22CE                     i1u1129_20 231E  
                   i1u1129_25 2314                     i1u1156_24 013A                     i1u1156_25 0136  
                     int_func 6164                     i1u1174_27 017A                 _CANInitialize 56DA  
                   _ISR_Bassa 0018                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE                       sqrt@grs 0192  
                     sqrt@exp 0196             ??_can_interpreter 0077        __end_ofi1_CANisTxReady 670E  
     _steering_correction_dir 02AE                     _PORTBbits 000F81                CANSetMask@mask 0077  
              CANSetMask@tamp 0081                  _distance_set 0110                CANSetMask@type 007B  
        __end_of_park_routine 3EE4                   ___fladd@grs 00BC                 ___xxtofl@sign 00D3  
                   _TRISBbits 000F93                   ___fldiv@grs 008A                   ___fldiv@rem 0084  
                   _MUX_index 0029                    _pulse_time 0021       _clock_counter_reference 00E0  
                 ___flmul@grs 009E                _CANsendMessage 1858              CANInitialize@BRP 0088  
            CANInitialize@SJW 0087                ?_CANInitialize 0085           i1_CANisTxReady$2845 002D  
                  ?_ISR_Bassa 002D                   ?_matematica 002D                __end_of___flge 5BF0  
           __size_of_ISR_Alta 623C                __end_of___wmul 6674               ?i1_CANisTxReady 002D  
                  floor@expon 0193           start_initialization 6416                    eval_poly@d 00C1  
                  eval_poly@n 00C3                    eval_poly@x 00BD                   __end_of_abs 66A0  
                 __end_of_cos 6164                   __end_of_sin 4D24           CANSetMask@numBuffer 0080  
               _data_speed_rx 0108        __end_of_CANsendMessage 1FE4             ?_CANOperationMode 002D  
               _data_steering 0173                    frexp@value 0077            ??_CANOperationMode 0077  
           _distance_received 02A5    CANInitialize@FilterConfig1 008F    CANInitialize@FilterConfig2 0090  
         _steering_correction 002C                      ??___flge 00CD                      ??___wmul 007B  
                 __pdataBANK0 00E6                   __pdataBANK1 01E4              __CFG_LPT1OSC$OFF 000000  
   __size_ofi1_CANsendMessage 0690                     ___fladd@a 00AD                     ___fladd@b 00A9  
      CANInitialize@phaseSeg1 0085        CANInitialize@phaseSeg2 0086                     ___fldiv@a 007B  
                   ___fldiv@b 0077                     ___flmul@a 0094                     ___flmul@b 0090  
                 __pbssCOMRAM 0001                     ___flsub@a 0199                     ___flsub@b 0195  
               __pcstackBANK0 0060                 __pcstackBANK1 018B                   _BRGCON2bits 000F71  
                 _BRGCON3bits 000F72             __size_of_can_send 0148             __size_of___xxtofl 01CE  
           __size_of_delay_ms 003A               ?_CANsendMessage 0077           __size_of_matematica 058A  
             ??_CANInitialize 008A                     _asin$3752 01B0                     _asin$3753 01A8  
                   _asin$3754 01A4                    sin@coeff_a 0D2D                    sin@coeff_b 0D41  
               ??_park_search 01B6                 _alignment_gap 0011            CANSetFilter@filter 0077  
                   _data_test 017B              ___lwdiv@dividend 0060                    ISR_Bassa@i 0053  
                 ??_ISR_Bassa 003D                     __pintcode 0008                      ?___fladd 00A9  
                    ?___fldiv 0077                      ?___flneg 00BD                      ?___flmul 0090  
                    ?___flsub 0195                      ?___fltol 00C1         __size_of_park_routine 048C  
                    ?___lwdiv 0060                   __pintcodelo 0018                      ?_delay_s 002D  
                 __smallconst 0D00                   _COMSTATbits 000F74                     _eval_poly 5E5C  
                   _larghezza 01E4              ___lwdiv@quotient 0065                __size_of_floor 0124  
              __size_of_frexp 0094       __size_of_configurations 006C                     _parallelo 5036  
                _new_distance 02A9         CANreceiveMessage@tamp 0038                _prima_sterzata 0140  
              ___wmul@product 007B                      _LATBbits 000F8A               _can_interpreter 64F2  
                   atan@recip 0193                  _park_routine 3A58  _delay_quartz_frequency_value 00E8  
                    _IPR3bits 000FA5                      _PIE3bits 000FA3                      i1u741_25 2CFA  
                    i1u750_20 2F68                      i1u750_26 2F6A                      i1u752_25 2F7C  
                    i1u738_20 2CB6                      i1u738_26 2CB8                      i1u739_20 2CE4  
                    i1u747_25 2E6A                      i1u739_26 2CE6                      i1u749_20 2F3E  
                    i1u749_26 2F40                      _PIR3bits 000FA4                      i1u758_25 30E0  
                    _RXB0EIDH 000F63                      _RXB0EIDL 000F64                      _RXB1EIDH 000F53  
                    _RXB1EIDL 000F54                      _ISR_Alta 0008                     _set_speed 0025  
                    _RCONbits 000FD0              __CFG_WDTPS$32768 000000                      _RXB0SIDH 000F61  
                    _RXB0SIDL 000F62                      _RXF0EIDH 000F02                      _RXB1SIDH 000F51  
                    _RXF0EIDL 000F03                      _RXB1SIDL 000F52                      _RXF1EIDH 000F06  
                    _RXF1EIDL 000F07                      _RXF2EIDH 000F0A                      _RXF2EIDL 000F0B  
                    _RXF3EIDH 000F0E                      _RXF3EIDL 000F0F                      _RXF4EIDH 000F12  
                    _RXF4EIDL 000F13                      _RXF5EIDH 000F16                      _RXF5EIDL 000F17  
                    _RXF0SIDH 000F00                      _RXF0SIDL 000F01           __end_of_park_search 5A60  
                    _TXB0EIDH 000F43                      _RXF1SIDH 000F04                      _TXB0EIDL 000F44  
                    _RXF1SIDL 000F05                      _TXB1EIDH 000F33                      _RXF2SIDH 000F08  
                    _TXB1EIDL 000F34                      _RXF2SIDL 000F09                      _TXB2EIDH 000F23  
                    _RXF3SIDH 000F0C                      _TXB2EIDL 000F24                      _RXF3SIDL 000F0D  
                    _RXF4SIDH 000F10                      _RXF4SIDL 000F11                      _RXF5SIDH 000F14  
                    _RXF5SIDL 000F15                      _RXM0EIDH 000F1A                      _RXM0EIDL 000F1B  
                    _TXB0SIDH 000F41                      _RXM1EIDH 000F1E                      _TXB0SIDL 000F42  
                    _RXM1EIDL 000F1F                      _TXB1SIDH 000F31                      _TXB1SIDL 000F32  
                    _TXB2SIDH 000F21                      _TXB2SIDL 000F22                      _RXM0SIDH 000F18  
                    _RXM0SIDL 000F19                      _RXM1SIDH 000F1C                      _RXM1SIDL 000F1D  
                 _distance_dx 001B                   _distance_sx 001D                      _RXERRCNT 000F75  
                    _TXERRCNT 000F76             ___wmul@multiplier 0077                    ?_eval_poly 00BD  
         __end_ofatan@coeff_a 0D19           __end_ofatan@coeff_b 0D2D                 ?_CANSetFilter 0077  
                 _INTCON2bits 000FF1                     copy_data0 6452                    _CANCONbits 000F6F  
                  ?_parallelo 002D              _distance_average 0019                     frexp@eptr 007B  
                    __Hparam0 0000                      __Lparam0 0000                  _RXB0SIDLbits 000F62  
                _RXB1SIDLbits 000F52              ??i1_CANisTxReady 002D                  ??_matematica 00D9  
               _request_sent1 02AC              __size_of___fladd 04A8                    _CANSetMask 466E  
            __size_of___fldiv 03C0              __size_of___flneg 0038              __size_of___flmul 04A6  
            __size_of___flsub 0048              __size_of___fltol 010C              i1_CANsendMessage 1FE4  
                    _cos$3755 01B8              __size_of___lwdiv 0078              __size_of_delay_s 002C  
                    _can_send 5BF0                      ___xxtofl 550C                  _RXF0SIDLbits 000F01  
                    _delay_ms 65CC               ___lwdiv@divisor 0062                  _RXF1SIDLbits 000F05  
             ___lwdiv@counter 0064         i1CANsendMessage@flags 0034                ??_CANSetFilter 007C  
                    __ptext10 4A0C                      __ptext11 5D38                      __ptext20 6606  
                    __ptext12 630A                      __ptext21 5E5C                      __ptext13 550C  
                    __ptext30 56DA                      __ptext22 35B2                      __ptext14 5F74  
                    __ptext31 466E                      __ptext23 310A                      __ptext15 6546  
                    __ptext40 639E                      __ptext32 0D52                      __ptext24 5A60  
                    __ptext16 4D24                      __ptext33 670E                      __ptext25 42AE  
                    __ptext17 3EE4                      __ptext34 64F2                      __ptext26 66A0  
                    __ptext18 52BA                      __ptext27 65CC                      __ptext19 658E  
                    __ptext36 1FE4                      __ptext28 663E                      __ptext37 66F0  
                    __ptext29 6486                      __ptext38 2BFE                  _RXF2SIDLbits 000F09  
                    _sin$3756 01A5       __end_of_can_interpreter 6546                  _RXF3SIDLbits 000F0D  
                    _distance 00E2            __end_of_matematica 2BFE                  _RXF4SIDLbits 000F11  
                _RXF5SIDLbits 000F15      CANsendMessage@dataLength 007D                 __size_of_fabs 003E  
               __size_of_atan 0252                 __size_of_asin 0312                 __size_of_main 00C6  
               __size_of_sqrt 03CA                   _park_search 58A0          CANreceiveMessage@msg 002D  
                _TXB0SIDLbits 000F42                  _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22  
                    int$flags 0056     __size_of_CANOperationMode 0016                 ?_CANisTxReady 002D  
                 atan@coeff_a 0D01                   atan@coeff_b 0D19                   _RXB0DLCbits 000F65  
                 _RXB1DLCbits 000F55                  _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60  
                 _RXB1CONbits 000F50             _CANreceiveMessage 2BFE                  _RXM1SIDLbits 000F1D  
                  _INTCONbits 000FF2                   ??_eval_poly 00C5              ??_CANsendMessage 007F  
  i1CANsendMessage@dataLength 0033            ?_CANreceiveMessage 002D                  _request_sent 02AB  
              _configurations 6486                     sqrt@tfrac 018D      CANsendMessage@identifier 0077  
                 ??_parallelo 01B4                      intlevel1 0000                      intlevel2 0000  
            CANSetFilter@tamp 0081              CANSetFilter@type 007B           ??_CANreceiveMessage 002F  
        i1CANsendMessage@data 0031           _old_data_correction 02AA          i1CANsendMessage@tamp 0039  
                 _TXB0DLCbits 000F45                   _right_speed 0023                   _TXB1DLCbits 000F35  
                 _TXB0CONbits 000F40                   _TXB2DLCbits 000F25                   _TXB1CONbits 000F30  
                 _TXB2CONbits 000F20          CANOperationMode@mode 0077                   ?_CANSetMask 0077  
              ??_CANisTxReady 0077                _distance_error 02A4               _matematica$3750 01CC  
             _matematica$3751 01D0               _matematica$3745 01BC               _matematica$3746 01C0  
             _matematica$3747 01C4               _matematica$3748 01C8               _matematica$3749 01D4  
   __end_of_CANreceiveMessage 310A                      sqrt@frac 019C                      sqrt@sign 018B  
                    sqrt@root 0198    i1CANsendMessage@identifier 002D                   _timerValue2 0027  
                  _TMR3H_temp 002A        __end_of_configurations 64F2                    _TMR3L_temp 002B  
               ___fladd@signs 00B9                 _distance_wait 02A7              ?_can_interpreter 002D  
                ___fladd@aexp 00BA                  ___fladd@bexp 00BB         __end_of_CANInitialize 58A0  
       _sensor_distance_short 0183           _sensor_distance_old 0118  
