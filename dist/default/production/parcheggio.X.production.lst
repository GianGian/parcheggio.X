

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Apr 18 18:53:54 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    50                           	psect	param0,global,class=BANK0,space=1,delta=1
    51                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    52  0000                     
    53                           	psect	idataCOMRAM
    54  004E8E                     __pidataCOMRAM:
    55                           	opt stack 0
    56                           
    57                           ;initializer for _delay_quartz_frequency_value
    58  004E8E  14                 	db	20
    59                           
    60                           	psect	idataBANK0
    61  004E8C                     __pidataBANK0:
    62                           	opt stack 0
    63                           
    64                           ;initializer for _spazio_parcheggio
    65  004E8C  0064               	dw	100
    66                           
    67                           	psect	smallconst
    68  000D00                     __psmallconst:
    69                           	opt stack 0
    70  000D00  00                 	db	0
    71  000D01                     atan@coeff_a:
    72                           	opt stack 0
    73  000D01  3C06               	dw	15366
    74  000D03  4204               	dw	16900
    75  000D05  9F7D               	dw	40829
    76  000D07  426A               	dw	17002
    77  000D09  905C               	dw	36956
    78  000D0B  4201               	dw	16897
    79  000D0D  4D60               	dw	19808
    80  000D0F  40BB               	dw	16571
    81  000D11  EC51               	dw	60497
    82  000D13  3E47               	dw	15943
    83  000D15  8DDE               	dw	36318
    84  000D17  BB1F               	dw	47903
    85  000D19                     __end_ofatan@coeff_a:
    86                           	opt stack 0
    87  000D19                     atan@coeff_b:
    88                           	opt stack 0
    89  000D19  3C06               	dw	15366
    90  000D1B  4204               	dw	16900
    91  000D1D  59C0               	dw	22976
    92  000D1F  428B               	dw	17035
    93  000D21  0474               	dw	1140
    94  000D23  4244               	dw	16964
    95  000D25  9BF9               	dw	39929
    96  000D27  414F               	dw	16719
    97  000D29  0000               	dw	0
    98  000D2B  3F80               	dw	16256
    99  000D2D                     __end_ofatan@coeff_b:
   100                           	opt stack 0
   101  0000                     _RXB1CON	set	3920
   102  0000                     _RXB1CONbits	set	3920
   103  0000                     _RXB1D0	set	3926
   104  0000                     _RXB1D1	set	3927
   105  0000                     _RXB1D2	set	3928
   106  0000                     _RXB1D3	set	3929
   107  0000                     _RXB1D4	set	3930
   108  0000                     _RXB1D5	set	3931
   109  0000                     _RXB1D6	set	3932
   110  0000                     _RXB1D7	set	3933
   111  0000                     _RXB1DLC	set	3925
   112  0000                     _RXB1DLCbits	set	3925
   113  0000                     _RXB1EIDH	set	3923
   114  0000                     _RXB1EIDL	set	3924
   115  0000                     _RXB1SIDH	set	3921
   116  0000                     _RXB1SIDL	set	3922
   117  0000                     _RXB1SIDLbits	set	3922
   118  0000                     _RXF0EIDH	set	3842
   119  0000                     _RXF0EIDL	set	3843
   120  0000                     _RXF0SIDH	set	3840
   121  0000                     _RXF0SIDL	set	3841
   122  0000                     _RXF0SIDLbits	set	3841
   123  0000                     _RXF1EIDH	set	3846
   124  0000                     _RXF1EIDL	set	3847
   125  0000                     _RXF1SIDH	set	3844
   126  0000                     _RXF1SIDL	set	3845
   127  0000                     _RXF1SIDLbits	set	3845
   128  0000                     _RXF2EIDH	set	3850
   129  0000                     _RXF2EIDL	set	3851
   130  0000                     _RXF2SIDH	set	3848
   131  0000                     _RXF2SIDL	set	3849
   132  0000                     _RXF2SIDLbits	set	3849
   133  0000                     _RXF3EIDH	set	3854
   134  0000                     _RXF3EIDL	set	3855
   135  0000                     _RXF3SIDH	set	3852
   136  0000                     _RXF3SIDL	set	3853
   137  0000                     _RXF3SIDLbits	set	3853
   138  0000                     _RXF4EIDH	set	3858
   139  0000                     _RXF4EIDL	set	3859
   140  0000                     _RXF4SIDH	set	3856
   141  0000                     _RXF4SIDL	set	3857
   142  0000                     _RXF4SIDLbits	set	3857
   143  0000                     _RXF5EIDH	set	3862
   144  0000                     _RXF5EIDL	set	3863
   145  0000                     _RXF5SIDH	set	3860
   146  0000                     _RXF5SIDL	set	3861
   147  0000                     _RXF5SIDLbits	set	3861
   148  0000                     _RXM0EIDH	set	3866
   149  0000                     _RXM0EIDL	set	3867
   150  0000                     _RXM0SIDH	set	3864
   151  0000                     _RXM0SIDL	set	3865
   152  0000                     _RXM0SIDLbits	set	3865
   153  0000                     _RXM1EIDH	set	3870
   154  0000                     _RXM1EIDL	set	3871
   155  0000                     _RXM1SIDH	set	3868
   156  0000                     _RXM1SIDL	set	3869
   157  0000                     _RXM1SIDLbits	set	3869
   158  0000                     _TXB0CONbits	set	3904
   159  0000                     _TXB0D0	set	3910
   160  0000                     _TXB0D1	set	3911
   161  0000                     _TXB0D2	set	3912
   162  0000                     _TXB0D3	set	3913
   163  0000                     _TXB0D4	set	3914
   164  0000                     _TXB0D5	set	3915
   165  0000                     _TXB0D6	set	3916
   166  0000                     _TXB0D7	set	3917
   167  0000                     _TXB0DLC	set	3909
   168  0000                     _TXB0DLCbits	set	3909
   169  0000                     _TXB0EIDH	set	3907
   170  0000                     _TXB0EIDL	set	3908
   171  0000                     _TXB0SIDH	set	3905
   172  0000                     _TXB0SIDL	set	3906
   173  0000                     _TXB0SIDLbits	set	3906
   174  0000                     _TXB1CONbits	set	3888
   175  0000                     _TXB1D0	set	3894
   176  0000                     _TXB1D1	set	3895
   177  0000                     _TXB1D2	set	3896
   178  0000                     _TXB1D3	set	3897
   179  0000                     _TXB1D4	set	3898
   180  0000                     _TXB1D5	set	3899
   181  0000                     _TXB1D6	set	3900
   182  0000                     _TXB1D7	set	3901
   183  0000                     _TXB1DLC	set	3893
   184  0000                     _TXB1DLCbits	set	3893
   185  0000                     _TXB1EIDH	set	3891
   186  0000                     _TXB1EIDL	set	3892
   187  0000                     _TXB1SIDH	set	3889
   188  0000                     _TXB1SIDL	set	3890
   189  0000                     _TXB1SIDLbits	set	3890
   190  0000                     _TXB2CONbits	set	3872
   191  0000                     _TXB2D0	set	3878
   192  0000                     _TXB2D1	set	3879
   193  0000                     _TXB2D2	set	3880
   194  0000                     _TXB2D3	set	3881
   195  0000                     _TXB2D4	set	3882
   196  0000                     _TXB2D5	set	3883
   197  0000                     _TXB2D6	set	3884
   198  0000                     _TXB2D7	set	3885
   199  0000                     _TXB2DLC	set	3877
   200  0000                     _TXB2DLCbits	set	3877
   201  0000                     _TXB2EIDH	set	3875
   202  0000                     _TXB2EIDL	set	3876
   203  0000                     _TXB2SIDH	set	3873
   204  0000                     _TXB2SIDL	set	3874
   205  0000                     _TXB2SIDLbits	set	3874
   206  0000                     _ADCON1	set	4033
   207  0000                     _BRGCON1	set	3952
   208  0000                     _BRGCON2	set	3953
   209  0000                     _BRGCON2bits	set	3953
   210  0000                     _BRGCON3	set	3954
   211  0000                     _BRGCON3bits	set	3954
   212  0000                     _CANCON	set	3951
   213  0000                     _CANCONbits	set	3951
   214  0000                     _CANSTAT	set	3950
   215  0000                     _COMSTATbits	set	3956
   216  0000                     _INTCON2bits	set	4081
   217  0000                     _INTCONbits	set	4082
   218  0000                     _IPR3bits	set	4005
   219  0000                     _LATA	set	3977
   220  0000                     _LATB	set	3978
   221  0000                     _LATBbits	set	3978
   222  0000                     _LATC	set	3979
   223  0000                     _PIE3bits	set	4003
   224  0000                     _PIR3bits	set	4004
   225  0000                     _PORTA	set	3968
   226  0000                     _PORTBbits	set	3969
   227  0000                     _RCONbits	set	4048
   228  0000                     _RXB0CON	set	3936
   229  0000                     _RXB0CONbits	set	3936
   230  0000                     _RXB0D0	set	3942
   231  0000                     _RXB0D1	set	3943
   232  0000                     _RXB0D2	set	3944
   233  0000                     _RXB0D3	set	3945
   234  0000                     _RXB0D4	set	3946
   235  0000                     _RXB0D5	set	3947
   236  0000                     _RXB0D6	set	3948
   237  0000                     _RXB0D7	set	3949
   238  0000                     _RXB0DLC	set	3941
   239  0000                     _RXB0DLCbits	set	3941
   240  0000                     _RXB0EIDH	set	3939
   241  0000                     _RXB0EIDL	set	3940
   242  0000                     _RXB0SIDH	set	3937
   243  0000                     _RXB0SIDL	set	3938
   244  0000                     _RXB0SIDLbits	set	3938
   245  0000                     _RXERRCNT	set	3957
   246  0000                     _T0CON	set	4053
   247  0000                     _T3CON	set	4017
   248  0000                     _TMR0H	set	4055
   249  0000                     _TMR0L	set	4054
   250  0000                     _TMR3H	set	4019
   251  0000                     _TMR3L	set	4018
   252  0000                     _TRISA	set	3986
   253  0000                     _TRISB	set	3987
   254  0000                     _TRISBbits	set	3987
   255  0000                     _TRISC	set	3988
   256  0000                     _TXERRCNT	set	3958
   257                           
   258                           ; #config settings
   259  000D2D  00                 	db	0	; dummy byte at the end
   260  0000                     
   261                           	psect	cinit
   262  004C98                     __pcinit:
   263                           	opt stack 0
   264  004C98                     start_initialization:
   265                           	opt stack 0
   266  004C98                     __initialization:
   267                           	opt stack 0
   268                           
   269                           ; Clear objects allocated to BANK1 (87 bytes)
   270  004C98  EE01  F000         	lfsr	0,__pbssBANK1
   271  004C9C  0E57               	movlw	87
   272  004C9E                     clear_0:
   273  004C9E  6AEE               	clrf	postinc0,c
   274  004CA0  06E8               	decf	wreg,f,c
   275  004CA2  E1FD               	bnz	clear_0
   276                           
   277                           ; Clear objects allocated to BANK0 (18 bytes)
   278  004CA4  EE00  F0D5         	lfsr	0,__pbssBANK0
   279  004CA8  0E12               	movlw	18
   280  004CAA                     clear_1:
   281  004CAA  6AEE               	clrf	postinc0,c
   282  004CAC  06E8               	decf	wreg,f,c
   283  004CAE  E1FD               	bnz	clear_1
   284                           
   285                           ; Clear objects allocated to BITCOMRAM (1 bytes)
   286  004CB0  6A46               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   287                           
   288                           ; Clear objects allocated to COMRAM (34 bytes)
   289  004CB2  EE00  F024         	lfsr	0,__pbssCOMRAM
   290  004CB6  0E22               	movlw	34
   291  004CB8                     clear_2:
   292  004CB8  6AEE               	clrf	postinc0,c
   293  004CBA  06E8               	decf	wreg,f,c
   294  004CBC  E1FD               	bnz	clear_2
   295                           
   296                           ; Initialize objects allocated to BANK0 (2 bytes)
   297                           ; load TBLPTR registers with __pidataBANK0
   298  004CBE  0E8C               	movlw	low __pidataBANK0
   299  004CC0  6EF6               	movwf	tblptrl,c
   300  004CC2  0E4E               	movlw	high __pidataBANK0
   301  004CC4  6EF7               	movwf	tblptrh,c
   302  004CC6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   303  004CC8  6EF8               	movwf	tblptru,c
   304  004CCA  0009               	tblrd		*+	;fetch initializer
   305  004CCC  CFF5 F0E7          	movff	tablat,__pdataBANK0
   306  004CD0  0009               	tblrd		*+	;fetch initializer
   307  004CD2  CFF5 F0E8          	movff	tablat,__pdataBANK0+1
   308                           
   309                           ; Initialize objects allocated to COMRAM (1 bytes)
   310                           ; load TBLPTR registers with __pidataCOMRAM
   311  004CD6  0E8E               	movlw	low __pidataCOMRAM
   312  004CD8  6EF6               	movwf	tblptrl,c
   313  004CDA  0E4E               	movlw	high __pidataCOMRAM
   314  004CDC  6EF7               	movwf	tblptrh,c
   315  004CDE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   316  004CE0  6EF8               	movwf	tblptru,c
   317  004CE2  0009               	tblrd		*+	;fetch initializer
   318  004CE4  CFF5 F047          	movff	tablat,__pdataCOMRAM
   319  004CE8                     end_of_initialization:
   320                           	opt stack 0
   321  004CE8                     __end_of__initialization:
   322                           	opt stack 0
   323  004CE8  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   324  004CEA  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   325  004CEC  0100               	movlb	0
   326  004CEE  EFA3  F026         	goto	_main	;jump to C main() function
   327                           tblptru	equ	0xFF8
   328                           tblptrh	equ	0xFF7
   329                           tblptrl	equ	0xFF6
   330                           tablat	equ	0xFF5
   331                           postinc0	equ	0xFEE
   332                           wreg	equ	0xFE8
   333                           
   334                           	psect	bitbssCOMRAM
   335  000230                     __pbitbssCOMRAM:
   336                           	opt stack 0
   337  000230                     _activation:
   338                           	opt stack 0
   339  000230                     	ds	1
   340  000231                     _dir:
   341                           	opt stack 0
   342  000231                     	ds	1
   343  000232                     _distance_error:
   344                           	opt stack 0
   345  000232                     	ds	1
   346  000233                     _distance_received:
   347                           	opt stack 0
   348  000233                     	ds	1
   349  000234                     _distance_wait:
   350                           	opt stack 0
   351  000234                     	ds	1
   352  000235                     _request_sent:
   353                           	opt stack 0
   354  000235                     	ds	1
   355  000236                     _start_operation:
   356                           	opt stack 0
   357  000236                     	ds	1
   358  000237                     _steering_correction_dir:
   359                           	opt stack 0
   360  000237                     	ds	1
   361                           tblptru	equ	0xFF8
   362                           tblptrh	equ	0xFF7
   363                           tblptrl	equ	0xFF6
   364                           tablat	equ	0xFF5
   365                           postinc0	equ	0xFEE
   366                           wreg	equ	0xFE8
   367                           
   368                           	psect	bssCOMRAM
   369  000024                     __pbssCOMRAM:
   370                           	opt stack 0
   371  000024                     _sensor_distance:
   372                           	opt stack 0
   373  000024                     	ds	16
   374  000034                     _clock_counter_reference:
   375                           	opt stack 0
   376  000034                     	ds	2
   377  000036                     _distance_dx:
   378                           	opt stack 0
   379  000036                     	ds	2
   380  000038                     _distance_sx:
   381                           	opt stack 0
   382  000038                     	ds	2
   383  00003A                     _left_speed:
   384                           	opt stack 0
   385  00003A                     	ds	2
   386  00003C                     _pulse_time:
   387                           	opt stack 0
   388  00003C                     	ds	2
   389  00003E                     _right_speed:
   390                           	opt stack 0
   391  00003E                     	ds	2
   392  000040                     _timerValue2:
   393                           	opt stack 0
   394  000040                     	ds	2
   395  000042                     _MUX_index:
   396                           	opt stack 0
   397  000042                     	ds	1
   398  000043                     _asus:
   399                           	opt stack 0
   400  000043                     	ds	1
   401  000044                     _gianni:
   402                           	opt stack 0
   403  000044                     	ds	1
   404  000045                     _steering_correction:
   405                           	opt stack 0
   406  000045                     	ds	1
   407                           tblptru	equ	0xFF8
   408                           tblptrh	equ	0xFF7
   409                           tblptrl	equ	0xFF6
   410                           tablat	equ	0xFF5
   411                           postinc0	equ	0xFEE
   412                           wreg	equ	0xFE8
   413                           
   414                           	psect	dataCOMRAM
   415  000047                     __pdataCOMRAM:
   416                           	opt stack 0
   417  000047                     _delay_quartz_frequency_value:
   418                           	opt stack 0
   419  000047                     	ds	1
   420                           tblptru	equ	0xFF8
   421                           tblptrh	equ	0xFF7
   422                           tblptrl	equ	0xFF6
   423                           tablat	equ	0xFF5
   424                           postinc0	equ	0xFEE
   425                           wreg	equ	0xFE8
   426                           
   427                           	psect	bssBANK0
   428  0000D5                     __pbssBANK0:
   429                           	opt stack 0
   430  0000D5                     _alignment_gap:
   431                           	opt stack 0
   432  0000D5                     	ds	4
   433  0000D9                     _x:
   434                           	opt stack 0
   435  0000D9                     	ds	4
   436  0000DD                     _z:
   437                           	opt stack 0
   438  0000DD                     	ds	4
   439  0000E1                     _actual_speed:
   440                           	opt stack 0
   441  0000E1                     	ds	2
   442  0000E3                     _distance_average:
   443                           	opt stack 0
   444  0000E3                     	ds	2
   445  0000E5                     _set_speed:
   446                           	opt stack 0
   447  0000E5                     	ds	2
   448                           tblptru	equ	0xFF8
   449                           tblptrh	equ	0xFF7
   450                           tblptrl	equ	0xFF6
   451                           tablat	equ	0xFF5
   452                           postinc0	equ	0xFEE
   453                           wreg	equ	0xFE8
   454                           
   455                           	psect	dataBANK0
   456  0000E7                     __pdataBANK0:
   457                           	opt stack 0
   458  0000E7                     _spazio_parcheggio:
   459                           	opt stack 0
   460  0000E7                     	ds	2
   461                           tblptru	equ	0xFF8
   462                           tblptrh	equ	0xFF7
   463                           tblptrl	equ	0xFF6
   464                           tablat	equ	0xFF5
   465                           postinc0	equ	0xFEE
   466                           wreg	equ	0xFE8
   467                           
   468                           	psect	bssBANK1
   469  000100                     __pbssBANK1:
   470                           	opt stack 0
   471  000100                     _MUX_select:
   472                           	opt stack 0
   473  000100                     	ds	8
   474  000108                     _data_speed_rx:
   475                           	opt stack 0
   476  000108                     	ds	8
   477  000110                     _distance_set:
   478                           	opt stack 0
   479  000110                     	ds	8
   480  000118                     _old_alignment_gap:
   481                           	opt stack 0
   482  000118                     	ds	4
   483  00011C                     _distance:
   484                           	opt stack 0
   485  00011C                     	ds	2
   486  00011E                     _errno:
   487                           	opt stack 0
   488  00011E                     	ds	2
   489  000120                     _msg:
   490                           	opt stack 0
   491  000120                     	ds	15
   492  00012F                     _data:
   493                           	opt stack 0
   494  00012F                     	ds	8
   495  000137                     _data_brake:
   496                           	opt stack 0
   497  000137                     	ds	8
   498  00013F                     _data_correction:
   499                           	opt stack 0
   500  00013F                     	ds	8
   501  000147                     _data_speed:
   502                           	opt stack 0
   503  000147                     	ds	8
   504  00014F                     _data_steering:
   505                           	opt stack 0
   506  00014F                     	ds	8
   507                           tblptru	equ	0xFF8
   508                           tblptrh	equ	0xFF7
   509                           tblptrl	equ	0xFF6
   510                           tablat	equ	0xFF5
   511                           postinc0	equ	0xFEE
   512                           wreg	equ	0xFE8
   513                           
   514                           	psect	cstackBANK1
   515  000157                     __pcstackBANK1:
   516                           	opt stack 0
   517  000157                     ??___xxtofl:
   518  000157                     sqrt@sign:
   519                           	opt stack 0
   520  000157                     atan@y:
   521                           	opt stack 0
   522                           
   523                           ; 4 bytes @ 0x0
   524  000157                     	ds	1
   525  000158                     sqrt@i:
   526                           	opt stack 0
   527                           
   528                           ; 1 bytes @ 0x1
   529  000158                     	ds	1
   530  000159                     sqrt@tfrac:
   531                           	opt stack 0
   532                           
   533                           ; 4 bytes @ 0x2
   534  000159                     	ds	2
   535  00015B                     ___xxtofl@sign:
   536                           	opt stack 0
   537  00015B                     atan@x:
   538                           	opt stack 0
   539                           
   540                           ; 4 bytes @ 0x4
   541  00015B                     	ds	1
   542  00015C                     ___xxtofl@exp:
   543                           	opt stack 0
   544                           
   545                           ; 1 bytes @ 0x5
   546  00015C                     	ds	1
   547  00015D                     sqrt@p:
   548                           	opt stack 0
   549  00015D                     ___xxtofl@arg:
   550                           	opt stack 0
   551                           
   552                           ; 4 bytes @ 0x6
   553  00015D                     	ds	1
   554  00015E                     sqrt@grs:
   555                           	opt stack 0
   556                           
   557                           ; 4 bytes @ 0x7
   558  00015E                     	ds	1
   559  00015F                     atan@recip:
   560                           	opt stack 0
   561                           
   562                           ; 1 bytes @ 0x8
   563  00015F                     	ds	1
   564  000160                     atan@val_squared:
   565                           	opt stack 0
   566                           
   567                           ; 4 bytes @ 0x9
   568  000160                     	ds	2
   569  000162                     sqrt@exp:
   570                           	opt stack 0
   571                           
   572                           ; 2 bytes @ 0xB
   573  000162                     	ds	2
   574  000164                     atan@val:
   575                           	opt stack 0
   576  000164                     sqrt@root:
   577                           	opt stack 0
   578                           
   579                           ; 4 bytes @ 0xD
   580  000164                     	ds	4
   581  000168                     sqrt@frac:
   582                           	opt stack 0
   583                           
   584                           ; 4 bytes @ 0x11
   585  000168                     	ds	4
   586  00016C                     ?_asin:
   587                           	opt stack 0
   588  00016C                     asin@x:
   589                           	opt stack 0
   590                           
   591                           ; 4 bytes @ 0x15
   592  00016C                     	ds	4
   593  000170                     asin@sgn:
   594                           	opt stack 0
   595                           
   596                           ; 4 bytes @ 0x19
   597  000170                     	ds	4
   598  000174                     _asin$3621:
   599                           	opt stack 0
   600                           
   601                           ; 4 bytes @ 0x1D
   602  000174                     	ds	4
   603  000178                     _asin$3620:
   604                           	opt stack 0
   605                           
   606                           ; 4 bytes @ 0x21
   607  000178                     	ds	4
   608  00017C                     asin@y:
   609                           	opt stack 0
   610                           
   611                           ; 4 bytes @ 0x25
   612  00017C                     	ds	4
   613  000180                     _asin$3619:
   614                           	opt stack 0
   615                           
   616                           ; 4 bytes @ 0x29
   617  000180                     	ds	4
   618  000184                     ??_parallelo:
   619                           
   620                           ; 0 bytes @ 0x2D
   621  000184                     	ds	2
   622  000186                     ??_park_search:
   623                           
   624                           ; 0 bytes @ 0x2F
   625  000186                     	ds	2
   626                           tblptru	equ	0xFF8
   627                           tblptrh	equ	0xFF7
   628                           tblptrl	equ	0xFF6
   629                           tablat	equ	0xFF5
   630                           postinc0	equ	0xFEE
   631                           wreg	equ	0xFE8
   632                           
   633                           	psect	cstackBANK0
   634  000060                     __pcstackBANK0:
   635                           	opt stack 0
   636  000060                     ?___lwdiv:
   637                           	opt stack 0
   638  000060                     ___lwdiv@dividend:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x0
   642  000060                     	ds	2
   643  000062                     ___lwdiv@divisor:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x2
   647  000062                     	ds	2
   648  000064                     ___lwdiv@counter:
   649                           	opt stack 0
   650                           
   651                           ; 1 bytes @ 0x4
   652  000064                     	ds	1
   653  000065                     ___lwdiv@quotient:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x5
   657  000065                     	ds	2
   658  000067                     ??_ISR_Alta:
   659                           
   660                           ; 0 bytes @ 0x7
   661  000067                     	ds	16
   662  000077                     ??_can_interpreter:
   663  000077                     ?___fldiv:
   664                           	opt stack 0
   665  000077                     CANOperationMode@mode:
   666                           	opt stack 0
   667  000077                     _CANisTxReady$2808:
   668                           	opt stack 0
   669  000077                     CANsendMessage@identifier:
   670                           	opt stack 0
   671  000077                     CANSetMask@mask:
   672                           	opt stack 0
   673  000077                     CANSetFilter@filter:
   674                           	opt stack 0
   675  000077                     ___fldiv@b:
   676                           	opt stack 0
   677                           
   678                           ; 4 bytes @ 0x17
   679  000077                     	ds	4
   680  00007B                     CANSetMask@type:
   681                           	opt stack 0
   682  00007B                     CANSetFilter@type:
   683                           	opt stack 0
   684  00007B                     CANsendMessage@data:
   685                           	opt stack 0
   686  00007B                     ___fldiv@a:
   687                           	opt stack 0
   688                           
   689                           ; 4 bytes @ 0x1B
   690  00007B                     	ds	1
   691  00007C                     ??_CANSetMask:
   692  00007C                     ??_CANSetFilter:
   693                           
   694                           ; 0 bytes @ 0x1C
   695  00007C                     	ds	1
   696  00007D                     CANsendMessage@dataLength:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x1D
   700  00007D                     	ds	1
   701  00007E                     CANsendMessage@flags:
   702                           	opt stack 0
   703                           
   704                           ; 1 bytes @ 0x1E
   705  00007E                     	ds	1
   706  00007F                     ??___fldiv:
   707  00007F                     ??_CANsendMessage:
   708                           
   709                           ; 0 bytes @ 0x1F
   710  00007F                     	ds	1
   711  000080                     CANSetMask@numBuffer:
   712                           	opt stack 0
   713  000080                     CANSetFilter@numBuffer:
   714                           	opt stack 0
   715                           
   716                           ; 1 bytes @ 0x20
   717  000080                     	ds	1
   718  000081                     CANSetMask@tamp:
   719                           	opt stack 0
   720  000081                     CANSetFilter@tamp:
   721                           	opt stack 0
   722                           
   723                           ; 4 bytes @ 0x21
   724  000081                     	ds	2
   725  000083                     ___fldiv@sign:
   726                           	opt stack 0
   727  000083                     CANsendMessage@tamp:
   728                           	opt stack 0
   729                           
   730                           ; 4 bytes @ 0x23
   731  000083                     	ds	1
   732  000084                     ___fldiv@rem:
   733                           	opt stack 0
   734                           
   735                           ; 4 bytes @ 0x24
   736  000084                     	ds	1
   737  000085                     CANInitialize@phaseSeg1:
   738                           	opt stack 0
   739                           
   740                           ; 1 bytes @ 0x25
   741  000085                     	ds	1
   742  000086                     CANInitialize@phaseSeg2:
   743                           	opt stack 0
   744                           
   745                           ; 1 bytes @ 0x26
   746  000086                     	ds	1
   747  000087                     CANInitialize@SJW:
   748                           	opt stack 0
   749                           
   750                           ; 1 bytes @ 0x27
   751  000087                     	ds	1
   752  000088                     CANInitialize@BRP:
   753                           	opt stack 0
   754  000088                     ___fldiv@new_exp:
   755                           	opt stack 0
   756                           
   757                           ; 2 bytes @ 0x28
   758  000088                     	ds	1
   759  000089                     CANInitialize@flags:
   760                           	opt stack 0
   761                           
   762                           ; 1 bytes @ 0x29
   763  000089                     	ds	1
   764  00008A                     ??_CANInitialize:
   765  00008A                     ___fldiv@grs:
   766                           	opt stack 0
   767                           
   768                           ; 4 bytes @ 0x2A
   769  00008A                     	ds	4
   770  00008E                     CANInitialize@propSeg:
   771                           	opt stack 0
   772  00008E                     ___fldiv@bexp:
   773                           	opt stack 0
   774                           
   775                           ; 1 bytes @ 0x2E
   776  00008E                     	ds	1
   777  00008F                     CANInitialize@FilterConfig1:
   778                           	opt stack 0
   779  00008F                     ___fldiv@aexp:
   780                           	opt stack 0
   781                           
   782                           ; 1 bytes @ 0x2F
   783  00008F                     	ds	1
   784  000090                     ?___flmul:
   785                           	opt stack 0
   786  000090                     CANInitialize@FilterConfig2:
   787                           	opt stack 0
   788  000090                     ___flmul@b:
   789                           	opt stack 0
   790                           
   791                           ; 4 bytes @ 0x30
   792  000090                     	ds	1
   793  000091                     
   794                           ; 0 bytes @ 0x31
   795  000091                     	ds	3
   796  000094                     ___flmul@a:
   797                           	opt stack 0
   798                           
   799                           ; 4 bytes @ 0x34
   800  000094                     	ds	4
   801  000098                     ??___flmul:
   802                           
   803                           ; 0 bytes @ 0x38
   804  000098                     	ds	4
   805  00009C                     ___flmul@sign:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0x3C
   809  00009C                     	ds	1
   810  00009D                     ___flmul@aexp:
   811                           	opt stack 0
   812                           
   813                           ; 1 bytes @ 0x3D
   814  00009D                     	ds	1
   815  00009E                     ___flmul@grs:
   816                           	opt stack 0
   817                           
   818                           ; 4 bytes @ 0x3E
   819  00009E                     	ds	4
   820  0000A2                     ___flmul@bexp:
   821                           	opt stack 0
   822                           
   823                           ; 1 bytes @ 0x42
   824  0000A2                     	ds	1
   825  0000A3                     ___flmul@prod:
   826                           	opt stack 0
   827                           
   828                           ; 4 bytes @ 0x43
   829  0000A3                     	ds	4
   830  0000A7                     ___flmul@temp:
   831                           	opt stack 0
   832                           
   833                           ; 2 bytes @ 0x47
   834  0000A7                     	ds	2
   835  0000A9                     ?___flneg:
   836                           	opt stack 0
   837  0000A9                     ___flneg@f1:
   838                           	opt stack 0
   839                           
   840                           ; 4 bytes @ 0x49
   841  0000A9                     	ds	4
   842  0000AD                     ?___fladd:
   843                           	opt stack 0
   844  0000AD                     ?_fabs:
   845                           	opt stack 0
   846  0000AD                     fabs@d:
   847                           	opt stack 0
   848  0000AD                     ___fladd@b:
   849                           	opt stack 0
   850                           
   851                           ; 4 bytes @ 0x4D
   852  0000AD                     	ds	4
   853  0000B1                     ___flge@ff1:
   854                           	opt stack 0
   855  0000B1                     ___fladd@a:
   856                           	opt stack 0
   857                           
   858                           ; 4 bytes @ 0x51
   859  0000B1                     	ds	4
   860  0000B5                     ??___fladd:
   861  0000B5                     ___flge@ff2:
   862                           	opt stack 0
   863                           
   864                           ; 4 bytes @ 0x55
   865  0000B5                     	ds	4
   866  0000B9                     ??___flge:
   867                           
   868                           ; 0 bytes @ 0x59
   869  0000B9                     	ds	4
   870  0000BD                     ___fladd@signs:
   871                           	opt stack 0
   872                           
   873                           ; 1 bytes @ 0x5D
   874  0000BD                     	ds	1
   875  0000BE                     ___fladd@aexp:
   876                           	opt stack 0
   877                           
   878                           ; 1 bytes @ 0x5E
   879  0000BE                     	ds	1
   880  0000BF                     ___fladd@bexp:
   881                           	opt stack 0
   882                           
   883                           ; 1 bytes @ 0x5F
   884  0000BF                     	ds	1
   885  0000C0                     ___fladd@grs:
   886                           	opt stack 0
   887                           
   888                           ; 1 bytes @ 0x60
   889  0000C0                     	ds	1
   890  0000C1                     ?_sqrt:
   891                           	opt stack 0
   892  0000C1                     ?_eval_poly:
   893                           	opt stack 0
   894  0000C1                     ?___fltol:
   895                           	opt stack 0
   896  0000C1                     eval_poly@x:
   897                           	opt stack 0
   898  0000C1                     ___fltol@f1:
   899                           	opt stack 0
   900  0000C1                     sqrt@a:
   901                           	opt stack 0
   902                           
   903                           ; 4 bytes @ 0x61
   904  0000C1                     	ds	4
   905  0000C5                     ??_sqrt:
   906  0000C5                     ??___fltol:
   907  0000C5                     eval_poly@d:
   908                           	opt stack 0
   909                           
   910                           ; 2 bytes @ 0x65
   911  0000C5                     	ds	2
   912  0000C7                     eval_poly@n:
   913                           	opt stack 0
   914                           
   915                           ; 2 bytes @ 0x67
   916  0000C7                     	ds	2
   917  0000C9                     ??_eval_poly:
   918  0000C9                     ___fltol@sign1:
   919                           	opt stack 0
   920                           
   921                           ; 1 bytes @ 0x69
   922  0000C9                     	ds	1
   923  0000CA                     ___fltol@exp1:
   924                           	opt stack 0
   925                           
   926                           ; 1 bytes @ 0x6A
   927  0000CA                     	ds	1
   928  0000CB                     ?_abs:
   929                           	opt stack 0
   930  0000CB                     abs@a:
   931                           	opt stack 0
   932                           
   933                           ; 2 bytes @ 0x6B
   934  0000CB                     	ds	2
   935  0000CD                     ??_abs:
   936  0000CD                     eval_poly@res:
   937                           	opt stack 0
   938                           
   939                           ; 4 bytes @ 0x6D
   940  0000CD                     	ds	2
   941  0000CF                     ?___xxtofl:
   942                           	opt stack 0
   943  0000CF                     ___xxtofl@val:
   944                           	opt stack 0
   945                           
   946                           ; 4 bytes @ 0x6F
   947  0000CF                     	ds	2
   948  0000D1                     ?_atan:
   949                           	opt stack 0
   950  0000D1                     atan@f:
   951                           	opt stack 0
   952                           
   953                           ; 4 bytes @ 0x71
   954  0000D1                     	ds	4
   955  0000D5                     tblptru	equ	0xFF8
   956                           tblptrh	equ	0xFF7
   957                           tblptrl	equ	0xFF6
   958                           tablat	equ	0xFF5
   959                           postinc0	equ	0xFEE
   960                           wreg	equ	0xFE8
   961                           
   962                           ; 0 bytes @ 0x75
   963                           
   964                           	psect	cstackCOMRAM
   965  000001                     __pcstackCOMRAM:
   966                           	opt stack 0
   967  000001                     CANreceiveMessage@msg:
   968                           	opt stack 0
   969                           
   970                           ; 2 bytes @ 0x0
   971  000001                     	ds	2
   972  000003                     ??_CANreceiveMessage:
   973                           
   974                           ; 0 bytes @ 0x2
   975  000003                     	ds	8
   976  00000B                     CANreceiveMessage@error:
   977                           	opt stack 0
   978                           
   979                           ; 1 bytes @ 0xA
   980  00000B                     	ds	1
   981  00000C                     CANreceiveMessage@tamp:
   982                           	opt stack 0
   983                           
   984                           ; 1 bytes @ 0xB
   985  00000C                     	ds	1
   986  00000D                     ??_ISR_Bassa:
   987                           
   988                           ; 0 bytes @ 0xC
   989  00000D                     	ds	21
   990  000022                     ISR_Bassa@gigi:
   991                           	opt stack 0
   992                           
   993                           ; 1 bytes @ 0x21
   994  000022                     	ds	1
   995  000023                     ISR_Bassa@i:
   996                           	opt stack 0
   997                           
   998                           ; 1 bytes @ 0x22
   999  000023                     	ds	1
  1000                           tblptru	equ	0xFF8
  1001                           tblptrh	equ	0xFF7
  1002                           tblptrl	equ	0xFF6
  1003                           tablat	equ	0xFF5
  1004                           postinc0	equ	0xFEE
  1005                           wreg	equ	0xFE8
  1006                           
  1007 ;;
  1008 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1009 ;;
  1010 ;; *************** function _main *****************
  1011 ;; Defined at:
  1012 ;;		line 161 in file "parcheggio.c"
  1013 ;; Parameters:    Size  Location     Type
  1014 ;;		None
  1015 ;; Auto vars:     Size  Location     Type
  1016 ;;		None
  1017 ;; Return value:  Size  Location     Type
  1018 ;;		None               void
  1019 ;; Registers used:
  1020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1030 ;;Total ram usage:        0 bytes
  1031 ;; Hardware stack levels required when called:   10
  1032 ;; This function calls:
  1033 ;;		_can_interpreter
  1034 ;;		_configurazione
  1035 ;;		_park_routine
  1036 ;;		_park_search
  1037 ;; This function is called by:
  1038 ;;		Startup code after reset
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text0
  1043  004D46                     __ptext0:
  1044                           	opt stack 0
  1045  004D46                     _main:
  1046                           	opt stack 21
  1047                           
  1048                           ;parcheggio.c: 162: configurazione();
  1049                           
  1050                           ; BSR set to: 15
  1051                           ;incstack = 0
  1052  004D46  EC16  F026         	call	_configurazione	;wreg free
  1053                           
  1054                           ;parcheggio.c: 163: MUX_select[0] = 0b00000000;
  1055  004D4A  0E00               	movlw	0
  1056  004D4C  0101               	movlb	1	; () banked
  1057  004D4E  6F00               	movwf	_MUX_select& (0+255),b
  1058                           
  1059                           ; BSR set to: 1
  1060                           ;parcheggio.c: 164: MUX_select[1] = 0b00000001;
  1061  004D50  0E01               	movlw	1
  1062  004D52  0101               	movlb	1	; () banked
  1063  004D54  6F01               	movwf	(_MUX_select+1)& (0+255),b
  1064                           
  1065                           ; BSR set to: 1
  1066                           ;parcheggio.c: 165: MUX_select[2] = 0b00000010;
  1067  004D56  0E02               	movlw	2
  1068  004D58  0101               	movlb	1	; () banked
  1069  004D5A  6F02               	movwf	(_MUX_select+2)& (0+255),b
  1070                           
  1071                           ; BSR set to: 1
  1072                           ;parcheggio.c: 166: MUX_select[3] = 0b00000011;
  1073  004D5C  0E03               	movlw	3
  1074  004D5E  0101               	movlb	1	; () banked
  1075  004D60  6F03               	movwf	(_MUX_select+3)& (0+255),b
  1076                           
  1077                           ; BSR set to: 1
  1078                           ;parcheggio.c: 167: MUX_select[4] = 0b00000100;
  1079  004D62  0E04               	movlw	4
  1080  004D64  0101               	movlb	1	; () banked
  1081  004D66  6F04               	movwf	(_MUX_select+4)& (0+255),b
  1082                           
  1083                           ; BSR set to: 1
  1084                           ;parcheggio.c: 168: MUX_select[5] = 0b00000101;
  1085  004D68  0E05               	movlw	5
  1086  004D6A  0101               	movlb	1	; () banked
  1087  004D6C  6F05               	movwf	(_MUX_select+5)& (0+255),b
  1088                           
  1089                           ; BSR set to: 1
  1090                           ;parcheggio.c: 169: MUX_select[6] = 0b00000110;
  1091  004D6E  0E06               	movlw	6
  1092  004D70  0101               	movlb	1	; () banked
  1093  004D72  6F06               	movwf	(_MUX_select+6)& (0+255),b
  1094                           
  1095                           ; BSR set to: 1
  1096                           ;parcheggio.c: 170: MUX_select[7] = 0b00000111;
  1097  004D74  0E07               	movlw	7
  1098  004D76  0101               	movlb	1	; () banked
  1099  004D78  6F07               	movwf	(_MUX_select+7)& (0+255),b
  1100                           
  1101                           ; BSR set to: 1
  1102                           ;parcheggio.c: 172: PORTBbits.RB4 = 0;
  1103  004D7A  9881               	bcf	3969,4,c	;volatile
  1104                           
  1105                           ; BSR set to: 1
  1106                           ;parcheggio.c: 173: PORTBbits.RB5 = 0;
  1107  004D7C  9A81               	bcf	3969,5,c	;volatile
  1108                           
  1109                           ; BSR set to: 1
  1110                           ;parcheggio.c: 174: PORTBbits.RB6 = 0;
  1111  004D7E  9C81               	bcf	3969,6,c	;volatile
  1112                           
  1113                           ; BSR set to: 1
  1114                           ;parcheggio.c: 175: request_sent = 0;
  1115  004D80  9A46               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1116  004D82                     l6252:
  1117                           
  1118                           ;parcheggio.c: 177: park_search();
  1119  004D82  EC2B  F023         	call	_park_search	;wreg free
  1120                           
  1121                           ;parcheggio.c: 178: can_interpreter();
  1122  004D86  EC79  F026         	call	_can_interpreter	;wreg free
  1123                           
  1124                           ;parcheggio.c: 179: park_routine();
  1125  004D8A  EC2B  F027         	call	_park_routine	;wreg free
  1126  004D8E  D7F9               	goto	l6252
  1127  004D90                     __end_of_main:
  1128                           	opt stack 0
  1129                           tblptru	equ	0xFF8
  1130                           tblptrh	equ	0xFF7
  1131                           tblptrl	equ	0xFF6
  1132                           tablat	equ	0xFF5
  1133                           postinc0	equ	0xFEE
  1134                           wreg	equ	0xFE8
  1135                           
  1136 ;; *************** function _park_search *****************
  1137 ;; Defined at:
  1138 ;;		line 183 in file "parcheggio.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;		None
  1143 ;; Return value:  Size  Location     Type
  1144 ;;		None               void
  1145 ;; Registers used:
  1146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1154 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1155 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1156 ;;Total ram usage:        2 bytes
  1157 ;; Hardware stack levels used:    1
  1158 ;; Hardware stack levels required when called:    9
  1159 ;; This function calls:
  1160 ;;		_CANisTxReady
  1161 ;;		_CANsendMessage
  1162 ;;		___xxtofl
  1163 ;;		_abs
  1164 ;;		_parallelo
  1165 ;; This function is called by:
  1166 ;;		_main
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text1
  1171  004656                     __ptext1:
  1172                           	opt stack 0
  1173  004656                     _park_search:
  1174                           	opt stack 21
  1175                           
  1176                           ;parcheggio.c: 184: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1177                           
  1178                           ;incstack = 0
  1179  004656  D0AD               	goto	l681
  1180  004658                     l6142:
  1181                           
  1182                           ;parcheggio.c: 185: parallelo();
  1183  004658  EC2A  F01E         	call	_parallelo	;wreg free
  1184                           
  1185                           ;parcheggio.c: 186: if (sensor_distance[0] > 50) {
  1186  00465C  5025               	movf	_sensor_distance+1,w,c	;volatile
  1187  00465E  E104               	bnz	u7950
  1188  004660  0E33               	movlw	51
  1189  004662  5C24               	subwf	_sensor_distance,w,c	;volatile
  1190  004664  A0D8               	btfss	status,0,c
  1191  004666  D02A               	goto	l6160
  1192  004668                     u7950:
  1193                           
  1194                           ;parcheggio.c: 187: if (request_sent == 0) {
  1195  004668  BA46               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1196  00466A  D056               	goto	l6162
  1197  00466C                     l6150:
  1198  00466C  EC19  F027         	call	_CANisTxReady	;wreg free
  1199  004670  0900               	iorlw	0
  1200  004672  B4D8               	btfsc	status,2,c
  1201  004674  D7FB               	goto	l6150
  1202                           
  1203                           ;parcheggio.c: 189: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1204  004676  0E08               	movlw	8
  1205  004678  0100               	movlb	0	; () banked
  1206  00467A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1207  00467C  0E00               	movlw	0
  1208  00467E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1209  004680  0E00               	movlw	0
  1210  004682  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1211  004684  0E00               	movlw	0
  1212  004686  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1213  004688  0E2F               	movlw	low _data
  1214  00468A  0100               	movlb	0	; () banked
  1215  00468C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1216  00468E  0E01               	movlw	high _data
  1217  004690  0100               	movlb	0	; () banked
  1218  004692  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1219  004694  0E08               	movlw	8
  1220  004696  0100               	movlb	0	; () banked
  1221  004698  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1222  00469A  0EFC               	movlw	252
  1223  00469C  0100               	movlb	0	; () banked
  1224  00469E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1225  0046A0  EC1A  F00C         	call	_CANsendMessage	;wreg free
  1226                           
  1227                           ;parcheggio.c: 190: request_sent = 1;
  1228  0046A4  8A46               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1229                           
  1230                           ;parcheggio.c: 191: alignment_gap = 0;
  1231  0046A6  0E00               	movlw	0
  1232  0046A8  0100               	movlb	0	; () banked
  1233  0046AA  6FD5               	movwf	_alignment_gap& (0+255),b
  1234  0046AC  0E00               	movlw	0
  1235  0046AE  6FD6               	movwf	(_alignment_gap+1)& (0+255),b
  1236  0046B0  0E00               	movlw	0
  1237  0046B2  6FD7               	movwf	(_alignment_gap+2)& (0+255),b
  1238  0046B4  0E00               	movlw	0
  1239  0046B6  6FD8               	movwf	(_alignment_gap+3)& (0+255),b
  1240                           
  1241                           ; BSR set to: 0
  1242                           ;parcheggio.c: 192: LATBbits.LATB4 = 1;
  1243  0046B8  888A               	bsf	3978,4,c	;volatile
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;parcheggio.c: 193: }
  1247                           ;parcheggio.c: 194: } else {
  1248  0046BA  D02E               	goto	l6162
  1249  0046BC                     l6160:
  1250                           
  1251                           ;parcheggio.c: 195: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1252  0046BC  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1253  0046C0  CFDE F186          	movff	postinc2,??_park_search
  1254  0046C4  CFDD F187          	movff	postdec2,??_park_search+1
  1255  0046C8  0101               	movlb	1	; () banked
  1256  0046CA  1F86               	comf	??_park_search& (0+255),f,b
  1257  0046CC  1F87               	comf	(??_park_search+1)& (0+255),f,b
  1258  0046CE  4B86               	infsnz	??_park_search& (0+255),f,b
  1259  0046D0  2B87               	incf	(??_park_search+1)& (0+255),f,b
  1260  0046D2  5024               	movf	_sensor_distance,w,c	;volatile
  1261  0046D4  0101               	movlb	1	; () banked
  1262  0046D6  2586               	addwf	??_park_search& (0+255),w,b
  1263  0046D8  0100               	movlb	0	; () banked
  1264  0046DA  6FCB               	movwf	abs@a& (0+255),b
  1265  0046DC  5025               	movf	_sensor_distance+1,w,c	;volatile
  1266  0046DE  0101               	movlb	1	; () banked
  1267  0046E0  2187               	addwfc	(??_park_search+1)& (0+255),w,b
  1268  0046E2  0100               	movlb	0	; () banked
  1269  0046E4  6FCC               	movwf	(abs@a+1)& (0+255),b
  1270  0046E6  EC03  F027         	call	_abs	;wreg free
  1271  0046EA  0100               	movlb	0	; () banked
  1272  0046EC  C0CB  F0CF         	movff	?_abs,___xxtofl@val
  1273  0046F0  0100               	movlb	0	; () banked
  1274  0046F2  C0CC  F0D0         	movff	?_abs+1,___xxtofl@val+1
  1275  0046F6  0100               	movlb	0	; () banked
  1276  0046F8  0E00               	movlw	0
  1277  0046FA  BFD0               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1278  0046FC  0EFF               	movlw	-1
  1279  0046FE  6FD1               	movwf	(___xxtofl@val+2)& (0+255),b
  1280  004700  6FD2               	movwf	(___xxtofl@val+3)& (0+255),b
  1281  004702  0E01               	movlw	1
  1282  004704  EC99  F020         	call	___xxtofl
  1283  004708  C0CF  F0D5         	movff	?___xxtofl,_alignment_gap
  1284  00470C  C0D0  F0D6         	movff	?___xxtofl+1,_alignment_gap+1
  1285  004710  C0D1  F0D7         	movff	?___xxtofl+2,_alignment_gap+2
  1286  004714  C0D2  F0D8         	movff	?___xxtofl+3,_alignment_gap+3
  1287  004718                     l6162:
  1288                           
  1289                           ;parcheggio.c: 196: }
  1290                           ;parcheggio.c: 197: if ((sensor_distance[0] < 50) && (request_sent == 1)) {
  1291  004718  5025               	movf	_sensor_distance+1,w,c	;volatile
  1292  00471A  E122               	bnz	l6172
  1293  00471C  0E32               	movlw	50
  1294  00471E  5C24               	subwf	_sensor_distance,w,c	;volatile
  1295  004720  A0D8               	btfss	status,0,c
  1296  004722  AA46               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1297  004724  D01D               	goto	l6172
  1298                           
  1299                           ;parcheggio.c: 198: request_sent = 0;
  1300  004726  9A46               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1301  004728                     l6168:
  1302  004728  EC19  F027         	call	_CANisTxReady	;wreg free
  1303  00472C  0900               	iorlw	0
  1304  00472E  B4D8               	btfsc	status,2,c
  1305  004730  D7FB               	goto	l6168
  1306                           
  1307                           ;parcheggio.c: 200: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1308  004732  0E07               	movlw	7
  1309  004734  0100               	movlb	0	; () banked
  1310  004736  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1311  004738  0E00               	movlw	0
  1312  00473A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1313  00473C  0E00               	movlw	0
  1314  00473E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1315  004740  0E00               	movlw	0
  1316  004742  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1317  004744  0E2F               	movlw	low _data
  1318  004746  0100               	movlb	0	; () banked
  1319  004748  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1320  00474A  0E01               	movlw	high _data
  1321  00474C  0100               	movlb	0	; () banked
  1322  00474E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1323  004750  0E08               	movlw	8
  1324  004752  0100               	movlb	0	; () banked
  1325  004754  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1326  004756  0EFC               	movlw	252
  1327  004758  0100               	movlb	0	; () banked
  1328  00475A  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1329  00475C  EC1A  F00C         	call	_CANsendMessage	;wreg free
  1330  004760                     l6172:
  1331                           
  1332                           ;parcheggio.c: 201: }
  1333                           ;parcheggio.c: 202: if (distance_received == 1) {
  1334  004760  A646               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1335  004762  D027               	goto	l681
  1336                           
  1337                           ;parcheggio.c: 203: if (distance_average > 100) {
  1338  004764  0100               	movlb	0	; () banked
  1339  004766  51E4               	movf	(_distance_average+1)& (0+255),w,b	;volatile
  1340  004768  E105               	bnz	u8020
  1341  00476A  0E65               	movlw	101
  1342  00476C  0100               	movlb	0	; () banked
  1343  00476E  5DE3               	subwf	_distance_average& (0+255),w,b	;volatile
  1344  004770  A0D8               	btfss	status,0,c
  1345  004772  D01D               	goto	l694
  1346  004774                     u8020:
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;parcheggio.c: 204: PORTBbits.RB5 = 1;
  1350  004774  8A81               	bsf	3969,5,c	;volatile
  1351                           
  1352                           ; BSR set to: 0
  1353                           ;parcheggio.c: 205: data[0] = 1;
  1354  004776  0E01               	movlw	1
  1355  004778  0101               	movlb	1	; () banked
  1356  00477A  6F2F               	movwf	_data& (0+255),b
  1357                           
  1358                           ; BSR set to: 1
  1359                           ;parcheggio.c: 206: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1360  00477C  0E0B               	movlw	11
  1361  00477E  0100               	movlb	0	; () banked
  1362  004780  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1363  004782  0E00               	movlw	0
  1364  004784  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1365  004786  0E00               	movlw	0
  1366  004788  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1367  00478A  0E00               	movlw	0
  1368  00478C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1369  00478E  0E2F               	movlw	low _data
  1370  004790  0100               	movlb	0	; () banked
  1371  004792  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1372  004794  0E01               	movlw	high _data
  1373  004796  0100               	movlb	0	; () banked
  1374  004798  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1375  00479A  0E01               	movlw	1
  1376  00479C  0100               	movlb	0	; () banked
  1377  00479E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1378  0047A0  0EBC               	movlw	188
  1379  0047A2  0100               	movlb	0	; () banked
  1380  0047A4  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1381  0047A6  EC1A  F00C         	call	_CANsendMessage	;wreg free
  1382                           
  1383                           ;parcheggio.c: 207: distance_received = 0;
  1384  0047AA  9646               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1385                           
  1386                           ;parcheggio.c: 208: } else {
  1387  0047AC  D002               	goto	l681
  1388  0047AE                     l694:
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;parcheggio.c: 209: distance_received = 0;
  1392  0047AE  9646               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1393                           
  1394                           ;parcheggio.c: 210: PORTBbits.RB5 = 0;
  1395  0047B0  9A81               	bcf	3969,5,c	;volatile
  1396  0047B2                     l681:
  1397  0047B2  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1398  0047B4  0012               	return	
  1399  0047B6  BA81               	btfsc	3969,5,c	;volatile
  1400  0047B8  0012               	return	
  1401  0047BA  D74E               	goto	l6142
  1402  0047BC                     __end_of_park_search:
  1403                           	opt stack 0
  1404                           tblptru	equ	0xFF8
  1405                           tblptrh	equ	0xFF7
  1406                           tblptrl	equ	0xFF6
  1407                           tablat	equ	0xFF5
  1408                           postinc0	equ	0xFEE
  1409                           wreg	equ	0xFE8
  1410                           postinc2	equ	0xFDE
  1411                           postdec2	equ	0xFDD
  1412                           status	equ	0xFD8
  1413                           
  1414 ;; *************** function _parallelo *****************
  1415 ;; Defined at:
  1416 ;;		line 241 in file "parcheggio.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;		None
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;		None
  1421 ;; Return value:  Size  Location     Type
  1422 ;;		None               void
  1423 ;; Registers used:
  1424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1432 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1433 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1434 ;;Total ram usage:        2 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; Hardware stack levels required when called:    8
  1437 ;; This function calls:
  1438 ;;		___fladd
  1439 ;;		___fldiv
  1440 ;;		___flge
  1441 ;;		___flmul
  1442 ;;		___flneg
  1443 ;;		___fltol
  1444 ;;		___xxtofl
  1445 ;;		_abs
  1446 ;;		_asin
  1447 ;;		_can_send
  1448 ;;		_sqrt
  1449 ;; This function is called by:
  1450 ;;		_park_search
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           	psect	text2
  1455  003C54                     __ptext2:
  1456                           	opt stack 0
  1457  003C54                     _parallelo:
  1458                           	opt stack 21
  1459                           
  1460                           ;parcheggio.c: 242: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1461                           
  1462                           ;incstack = 0
  1463  003C54  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1464  003C58  CFDE F184          	movff	postinc2,??_parallelo
  1465  003C5C  CFDD F185          	movff	postdec2,??_parallelo+1
  1466  003C60  0101               	movlb	1	; () banked
  1467  003C62  1F84               	comf	??_parallelo& (0+255),f,b
  1468  003C64  1F85               	comf	(??_parallelo+1)& (0+255),f,b
  1469  003C66  4B84               	infsnz	??_parallelo& (0+255),f,b
  1470  003C68  2B85               	incf	(??_parallelo+1)& (0+255),f,b
  1471  003C6A  5024               	movf	_sensor_distance,w,c	;volatile
  1472  003C6C  0101               	movlb	1	; () banked
  1473  003C6E  2584               	addwf	??_parallelo& (0+255),w,b
  1474  003C70  0100               	movlb	0	; () banked
  1475  003C72  6FCB               	movwf	abs@a& (0+255),b
  1476  003C74  5025               	movf	_sensor_distance+1,w,c	;volatile
  1477  003C76  0101               	movlb	1	; () banked
  1478  003C78  2185               	addwfc	(??_parallelo+1)& (0+255),w,b
  1479  003C7A  0100               	movlb	0	; () banked
  1480  003C7C  6FCC               	movwf	(abs@a+1)& (0+255),b
  1481  003C7E  EC03  F027         	call	_abs	;wreg free
  1482  003C82  0100               	movlb	0	; () banked
  1483  003C84  C0CB  F0CF         	movff	?_abs,___xxtofl@val
  1484  003C88  0100               	movlb	0	; () banked
  1485  003C8A  C0CC  F0D0         	movff	?_abs+1,___xxtofl@val+1
  1486  003C8E  0100               	movlb	0	; () banked
  1487  003C90  0E00               	movlw	0
  1488  003C92  BFD0               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1489  003C94  0EFF               	movlw	-1
  1490  003C96  6FD1               	movwf	(___xxtofl@val+2)& (0+255),b
  1491  003C98  6FD2               	movwf	(___xxtofl@val+3)& (0+255),b
  1492  003C9A  0E01               	movlw	1
  1493  003C9C  EC99  F020         	call	___xxtofl
  1494  003CA0  C0CF  F0D5         	movff	?___xxtofl,_alignment_gap
  1495  003CA4  C0D0  F0D6         	movff	?___xxtofl+1,_alignment_gap+1
  1496  003CA8  C0D1  F0D7         	movff	?___xxtofl+2,_alignment_gap+2
  1497  003CAC  C0D2  F0D8         	movff	?___xxtofl+3,_alignment_gap+3
  1498                           
  1499                           ;parcheggio.c: 244: if (alignment_gap < 30) {
  1500  003CB0  C0D5  F0B1         	movff	_alignment_gap,___flge@ff1
  1501  003CB4  C0D6  F0B2         	movff	_alignment_gap+1,___flge@ff1+1
  1502  003CB8  C0D7  F0B3         	movff	_alignment_gap+2,___flge@ff1+2
  1503  003CBC  C0D8  F0B4         	movff	_alignment_gap+3,___flge@ff1+3
  1504  003CC0  0E00               	movlw	0
  1505  003CC2  0100               	movlb	0	; () banked
  1506  003CC4  6FB5               	movwf	___flge@ff2& (0+255),b
  1507  003CC6  0E00               	movlw	0
  1508  003CC8  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  1509  003CCA  0EF0               	movlw	240
  1510  003CCC  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  1511  003CCE  0E41               	movlw	65
  1512  003CD0  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  1513  003CD2  EC63  F022         	call	___flge	;wreg free
  1514  003CD6  0100               	movlb	0	; () banked
  1515  003CD8  B0D8               	btfsc	status,0,c
  1516  003CDA  0012               	return	
  1517                           
  1518                           ; BSR set to: 0
  1519                           ;parcheggio.c: 245: if ((sensor_distance[0] < 30) && (sensor_distance[1] < 30)) {
  1520  003CDC  5025               	movf	_sensor_distance+1,w,c	;volatile
  1521  003CDE  E103               	bnz	u7911
  1522  003CE0  0E1E               	movlw	30
  1523  003CE2  5C24               	subwf	_sensor_distance,w,c	;volatile
  1524  003CE4  B0D8               	btfsc	status,0,c
  1525  003CE6                     u7911:
  1526  003CE6  0012               	return	
  1527                           
  1528                           ; BSR set to: 0
  1529  003CE8  5027               	movf	_sensor_distance+3,w,c	;volatile
  1530  003CEA  E103               	bnz	u7921
  1531  003CEC  0E1E               	movlw	30
  1532  003CEE  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  1533  003CF0  B0D8               	btfsc	status,0,c
  1534  003CF2                     u7921:
  1535  003CF2  0012               	return	
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;parcheggio.c: 250: x = ((1024) + (alignment_gap * alignment_gap));
  1539  003CF4  C0D5  F094         	movff	_alignment_gap,___flmul@a
  1540  003CF8  C0D6  F095         	movff	_alignment_gap+1,___flmul@a+1
  1541  003CFC  C0D7  F096         	movff	_alignment_gap+2,___flmul@a+2
  1542  003D00  C0D8  F097         	movff	_alignment_gap+3,___flmul@a+3
  1543  003D04  C0D5  F090         	movff	_alignment_gap,___flmul@b
  1544  003D08  C0D6  F091         	movff	_alignment_gap+1,___flmul@b+1
  1545  003D0C  C0D7  F092         	movff	_alignment_gap+2,___flmul@b+2
  1546  003D10  C0D8  F093         	movff	_alignment_gap+3,___flmul@b+3
  1547  003D14  ECBA  F014         	call	___flmul	;wreg free
  1548  003D18  C090  F0AD         	movff	?___flmul,___fladd@b
  1549  003D1C  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  1550  003D20  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  1551  003D24  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  1552  003D28  0E00               	movlw	0
  1553  003D2A  0100               	movlb	0	; () banked
  1554  003D2C  6FB1               	movwf	___fladd@a& (0+255),b
  1555  003D2E  0E00               	movlw	0
  1556  003D30  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  1557  003D32  0E80               	movlw	128
  1558  003D34  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  1559  003D36  0E44               	movlw	68
  1560  003D38  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  1561  003D3A  EC66  F012         	call	___fladd	;wreg free
  1562  003D3E  C0AD  F0D9         	movff	?___fladd,_x
  1563  003D42  C0AE  F0DA         	movff	?___fladd+1,_x+1
  1564  003D46  C0AF  F0DB         	movff	?___fladd+2,_x+2
  1565  003D4A  C0B0  F0DC         	movff	?___fladd+3,_x+3
  1566                           
  1567                           ;parcheggio.c: 251: x = sqrt(x);
  1568  003D4E  C0D9  F0C1         	movff	_x,sqrt@a
  1569  003D52  C0DA  F0C2         	movff	_x+1,sqrt@a+1
  1570  003D56  C0DB  F0C3         	movff	_x+2,sqrt@a+2
  1571  003D5A  C0DC  F0C4         	movff	_x+3,sqrt@a+3
  1572  003D5E  EC0D  F017         	call	_sqrt	;wreg free
  1573  003D62  C0C1  F0D9         	movff	?_sqrt,_x
  1574  003D66  C0C2  F0DA         	movff	?_sqrt+1,_x+1
  1575  003D6A  C0C3  F0DB         	movff	?_sqrt+2,_x+2
  1576  003D6E  C0C4  F0DC         	movff	?_sqrt+3,_x+3
  1577                           
  1578                           ;parcheggio.c: 252: z = ((alignment_gap) / x);
  1579  003D72  C0D5  F077         	movff	_alignment_gap,___fldiv@b
  1580  003D76  C0D6  F078         	movff	_alignment_gap+1,___fldiv@b+1
  1581  003D7A  C0D7  F079         	movff	_alignment_gap+2,___fldiv@b+2
  1582  003D7E  C0D8  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  1583  003D82  C0D9  F07B         	movff	_x,___fldiv@a
  1584  003D86  C0DA  F07C         	movff	_x+1,___fldiv@a+1
  1585  003D8A  C0DB  F07D         	movff	_x+2,___fldiv@a+2
  1586  003D8E  C0DC  F07E         	movff	_x+3,___fldiv@a+3
  1587  003D92  ECF2  F018         	call	___fldiv	;wreg free
  1588  003D96  C077  F0DD         	movff	?___fldiv,_z
  1589  003D9A  C078  F0DE         	movff	?___fldiv+1,_z+1
  1590  003D9E  C079  F0DF         	movff	?___fldiv+2,_z+2
  1591  003DA2  C07A  F0E0         	movff	?___fldiv+3,_z+3
  1592                           
  1593                           ;parcheggio.c: 253: z = asin(z);
  1594  003DA6  C0DD  F16C         	movff	_z,asin@x
  1595  003DAA  C0DE  F16D         	movff	_z+1,asin@x+1
  1596  003DAE  C0DF  F16E         	movff	_z+2,asin@x+2
  1597  003DB2  C0E0  F16F         	movff	_z+3,asin@x+3
  1598  003DB6  ECA1  F01C         	call	_asin	;wreg free
  1599  003DBA  C16C  F0DD         	movff	?_asin,_z
  1600  003DBE  C16D  F0DE         	movff	?_asin+1,_z+1
  1601  003DC2  C16E  F0DF         	movff	?_asin+2,_z+2
  1602  003DC6  C16F  F0E0         	movff	?_asin+3,_z+3
  1603                           
  1604                           ;parcheggio.c: 254: z = z / 3.14159265358979323846 * 180;
  1605  003DCA  0EDB               	movlw	219
  1606  003DCC  0100               	movlb	0	; () banked
  1607  003DCE  6F7B               	movwf	___fldiv@a& (0+255),b
  1608  003DD0  0E0F               	movlw	15
  1609  003DD2  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  1610  003DD4  0E49               	movlw	73
  1611  003DD6  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  1612  003DD8  0E40               	movlw	64
  1613  003DDA  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  1614  003DDC  C0DD  F077         	movff	_z,___fldiv@b
  1615  003DE0  C0DE  F078         	movff	_z+1,___fldiv@b+1
  1616  003DE4  C0DF  F079         	movff	_z+2,___fldiv@b+2
  1617  003DE8  C0E0  F07A         	movff	_z+3,___fldiv@b+3
  1618  003DEC  ECF2  F018         	call	___fldiv	;wreg free
  1619  003DF0  C077  F090         	movff	?___fldiv,___flmul@b
  1620  003DF4  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  1621  003DF8  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  1622  003DFC  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  1623  003E00  0E00               	movlw	0
  1624  003E02  0100               	movlb	0	; () banked
  1625  003E04  6F94               	movwf	___flmul@a& (0+255),b
  1626  003E06  0E00               	movlw	0
  1627  003E08  6F95               	movwf	(___flmul@a+1)& (0+255),b
  1628  003E0A  0E34               	movlw	52
  1629  003E0C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  1630  003E0E  0E43               	movlw	67
  1631  003E10  6F97               	movwf	(___flmul@a+3)& (0+255),b
  1632  003E12  ECBA  F014         	call	___flmul	;wreg free
  1633  003E16  C090  F0DD         	movff	?___flmul,_z
  1634  003E1A  C091  F0DE         	movff	?___flmul+1,_z+1
  1635  003E1E  C092  F0DF         	movff	?___flmul+2,_z+2
  1636  003E22  C093  F0E0         	movff	?___flmul+3,_z+3
  1637                           
  1638                           ;parcheggio.c: 255: data_correction[0] = z;
  1639  003E26  C0DD  F0C1         	movff	_z,___fltol@f1
  1640  003E2A  C0DE  F0C2         	movff	_z+1,___fltol@f1+1
  1641  003E2E  C0DF  F0C3         	movff	_z+2,___fltol@f1+2
  1642  003E32  C0E0  F0C4         	movff	_z+3,___fltol@f1+3
  1643  003E36  EC6A  F024         	call	___fltol	;wreg free
  1644  003E3A  0100               	movlb	0	; () banked
  1645  003E3C  51C1               	movf	?___fltol& (0+255),w,b
  1646  003E3E  0101               	movlb	1	; () banked
  1647  003E40  6F3F               	movwf	_data_correction& (0+255),b
  1648                           
  1649                           ; BSR set to: 1
  1650                           ;parcheggio.c: 257: if (sensor_distance[0] > sensor_distance[1]) {
  1651  003E42  5024               	movf	_sensor_distance,w,c	;volatile
  1652  003E44  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  1653  003E46  5025               	movf	_sensor_distance+1,w,c	;volatile
  1654  003E48  5827               	subwfb	_sensor_distance+3,w,c	;volatile
  1655  003E4A  B0D8               	btfsc	status,0,c
  1656  003E4C  D004               	goto	l6132
  1657                           
  1658                           ; BSR set to: 1
  1659                           ;parcheggio.c: 258: data_correction[1] = 0;
  1660  003E4E  0E00               	movlw	0
  1661  003E50  0101               	movlb	1	; () banked
  1662  003E52  6F40               	movwf	(_data_correction+1)& (0+255),b
  1663                           
  1664                           ;parcheggio.c: 259: } else {
  1665  003E54  D003               	goto	l6134
  1666  003E56                     l6132:
  1667                           
  1668                           ; BSR set to: 1
  1669                           ;parcheggio.c: 260: data_correction[0] = 1;
  1670  003E56  0E01               	movlw	1
  1671  003E58  0101               	movlb	1	; () banked
  1672  003E5A  6F3F               	movwf	_data_correction& (0+255),b
  1673  003E5C                     l6134:
  1674                           
  1675                           ; BSR set to: 1
  1676                           ;parcheggio.c: 261: }
  1677                           ;parcheggio.c: 262: if (abs(old_alignment_gap - alignment_gap) > 5) {
  1678  003E5C  C118  F0B1         	movff	_old_alignment_gap,___fladd@a
  1679  003E60  C119  F0B2         	movff	_old_alignment_gap+1,___fladd@a+1
  1680  003E64  C11A  F0B3         	movff	_old_alignment_gap+2,___fladd@a+2
  1681  003E68  C11B  F0B4         	movff	_old_alignment_gap+3,___fladd@a+3
  1682  003E6C  C0D5  F0A9         	movff	_alignment_gap,___flneg@f1
  1683  003E70  C0D6  F0AA         	movff	_alignment_gap+1,___flneg@f1+1
  1684  003E74  C0D7  F0AB         	movff	_alignment_gap+2,___flneg@f1+2
  1685  003E78  C0D8  F0AC         	movff	_alignment_gap+3,___flneg@f1+3
  1686  003E7C  ECE7  F026         	call	___flneg	;wreg free
  1687  003E80  C0A9  F0AD         	movff	?___flneg,___fladd@b
  1688  003E84  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  1689  003E88  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  1690  003E8C  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  1691  003E90  EC66  F012         	call	___fladd	;wreg free
  1692  003E94  C0AD  F0C1         	movff	?___fladd,___fltol@f1
  1693  003E98  C0AE  F0C2         	movff	?___fladd+1,___fltol@f1+1
  1694  003E9C  C0AF  F0C3         	movff	?___fladd+2,___fltol@f1+2
  1695  003EA0  C0B0  F0C4         	movff	?___fladd+3,___fltol@f1+3
  1696  003EA4  EC6A  F024         	call	___fltol	;wreg free
  1697  003EA8  C0C1  F0CB         	movff	?___fltol,abs@a
  1698  003EAC  C0C2  F0CC         	movff	?___fltol+1,abs@a+1
  1699  003EB0  EC03  F027         	call	_abs	;wreg free
  1700  003EB4  0100               	movlb	0	; () banked
  1701  003EB6  BFCC               	btfsc	(?_abs+1)& (0+255),7,b
  1702  003EB8  0012               	return	
  1703  003EBA  0100               	movlb	0	; () banked
  1704  003EBC  51CC               	movf	(?_abs+1)& (0+255),w,b
  1705  003EBE  E105               	bnz	u7940
  1706  003EC0  0E06               	movlw	6
  1707  003EC2  0100               	movlb	0	; () banked
  1708  003EC4  5DCB               	subwf	?_abs& (0+255),w,b
  1709  003EC6  A0D8               	btfss	status,0,c
  1710  003EC8  0012               	return	
  1711  003ECA                     u7940:
  1712                           
  1713                           ; BSR set to: 0
  1714                           ;parcheggio.c: 263: old_alignment_gap = alignment_gap;
  1715  003ECA  C0D5  F118         	movff	_alignment_gap,_old_alignment_gap
  1716  003ECE  C0D6  F119         	movff	_alignment_gap+1,_old_alignment_gap+1
  1717  003ED2  C0D7  F11A         	movff	_alignment_gap+2,_old_alignment_gap+2
  1718  003ED6  C0D8  F11B         	movff	_alignment_gap+3,_old_alignment_gap+3
  1719                           
  1720                           ; BSR set to: 0
  1721                           ;parcheggio.c: 264: can_send();
  1722  003EDA  ECF0  F024         	call	_can_send	;wreg free
  1723                           
  1724                           ;parcheggio.c: 265: }
  1725                           ;parcheggio.c: 266: }
  1726                           ;parcheggio.c: 267: } else {
  1727  003EDE  0012               	return	
  1728  003EE0                     __end_of_parallelo:
  1729                           	opt stack 0
  1730                           tblptru	equ	0xFF8
  1731                           tblptrh	equ	0xFF7
  1732                           tblptrl	equ	0xFF6
  1733                           tablat	equ	0xFF5
  1734                           postinc0	equ	0xFEE
  1735                           wreg	equ	0xFE8
  1736                           postinc2	equ	0xFDE
  1737                           postdec2	equ	0xFDD
  1738                           status	equ	0xFD8
  1739                           
  1740 ;; *************** function _asin *****************
  1741 ;; Defined at:
  1742 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\asin.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;  x               4   21[BANK1 ] PTR unsigned char 
  1745 ;; Auto vars:     Size  Location     Type
  1746 ;;  y               4   37[BANK1 ] PTR unsigned char 
  1747 ;;  sgn             4   25[BANK1 ] PTR unsigned char 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  4   21[BANK1 ] PTR unsigned char 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1757 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1758 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1760 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  1761 ;;Total ram usage:       24 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    7
  1764 ;; This function calls:
  1765 ;;		___fladd
  1766 ;;		___fldiv
  1767 ;;		___flge
  1768 ;;		___flmul
  1769 ;;		___flneg
  1770 ;;		_atan
  1771 ;;		_fabs
  1772 ;;		_sqrt
  1773 ;; This function is called by:
  1774 ;;		_parallelo
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           	psect	text3
  1779  003942                     __ptext3:
  1780                           	opt stack 0
  1781  003942                     _asin:
  1782                           	opt stack 21
  1783                           
  1784                           ;incstack = 0
  1785  003942  0E00               	movlw	0
  1786  003944  0100               	movlb	0	; () banked
  1787  003946  6FB1               	movwf	___flge@ff1& (0+255),b
  1788  003948  0E00               	movlw	0
  1789  00394A  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  1790  00394C  0E80               	movlw	128
  1791  00394E  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  1792  003950  0E3F               	movlw	63
  1793  003952  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  1794  003954  C16C  F0AD         	movff	asin@x,fabs@d
  1795  003958  C16D  F0AE         	movff	asin@x+1,fabs@d+1
  1796  00395C  C16E  F0AF         	movff	asin@x+2,fabs@d+2
  1797  003960  C16F  F0B0         	movff	asin@x+3,fabs@d+3
  1798  003964  ECC8  F026         	call	_fabs	;wreg free
  1799  003968  C0AD  F0B5         	movff	?_fabs,___flge@ff2
  1800  00396C  C0AE  F0B6         	movff	?_fabs+1,___flge@ff2+1
  1801  003970  C0AF  F0B7         	movff	?_fabs+2,___flge@ff2+2
  1802  003974  C0B0  F0B8         	movff	?_fabs+3,___flge@ff2+3
  1803  003978  EC63  F022         	call	___flge	;wreg free
  1804  00397C  0100               	movlb	0	; () banked
  1805  00397E  B0D8               	btfsc	status,0,c
  1806  003980  D00F               	goto	l6034
  1807                           
  1808                           ; BSR set to: 0
  1809  003982  0E00               	movlw	0
  1810  003984  0101               	movlb	1	; () banked
  1811  003986  6F1F               	movwf	(_errno+1)& (0+255),b
  1812  003988  0E21               	movlw	33
  1813  00398A  6F1E               	movwf	_errno& (0+255),b
  1814  00398C  0E00               	movlw	0
  1815  00398E  0101               	movlb	1	; () banked
  1816  003990  6F6C               	movwf	?_asin& (0+255),b
  1817  003992  0E00               	movlw	0
  1818  003994  6F6D               	movwf	(?_asin+1)& (0+255),b
  1819  003996  0E00               	movlw	0
  1820  003998  6F6E               	movwf	(?_asin+2)& (0+255),b
  1821  00399A  0E00               	movlw	0
  1822  00399C  6F6F               	movwf	(?_asin+3)& (0+255),b
  1823                           
  1824                           ; BSR set to: 1
  1825  00399E  0012               	return	
  1826  0039A0                     l6034:
  1827  0039A0  0E00               	movlw	0
  1828  0039A2  0101               	movlb	1	; () banked
  1829  0039A4  6F70               	movwf	asin@sgn& (0+255),b
  1830  0039A6  0E00               	movlw	0
  1831  0039A8  6F71               	movwf	(asin@sgn+1)& (0+255),b
  1832  0039AA  0E80               	movlw	128
  1833  0039AC  6F72               	movwf	(asin@sgn+2)& (0+255),b
  1834  0039AE  0E3F               	movlw	63
  1835  0039B0  6F73               	movwf	(asin@sgn+3)& (0+255),b
  1836                           
  1837                           ; BSR set to: 1
  1838  0039B2  C16C  F094         	movff	asin@x,___flmul@a
  1839  0039B6  C16D  F095         	movff	asin@x+1,___flmul@a+1
  1840  0039BA  C16E  F096         	movff	asin@x+2,___flmul@a+2
  1841  0039BE  C16F  F097         	movff	asin@x+3,___flmul@a+3
  1842  0039C2  C16C  F090         	movff	asin@x,___flmul@b
  1843  0039C6  C16D  F091         	movff	asin@x+1,___flmul@b+1
  1844  0039CA  C16E  F092         	movff	asin@x+2,___flmul@b+2
  1845  0039CE  C16F  F093         	movff	asin@x+3,___flmul@b+3
  1846  0039D2  ECBA  F014         	call	___flmul	;wreg free
  1847  0039D6  C090  F0A9         	movff	?___flmul,___flneg@f1
  1848  0039DA  C091  F0AA         	movff	?___flmul+1,___flneg@f1+1
  1849  0039DE  C092  F0AB         	movff	?___flmul+2,___flneg@f1+2
  1850  0039E2  C093  F0AC         	movff	?___flmul+3,___flneg@f1+3
  1851  0039E6  ECE7  F026         	call	___flneg	;wreg free
  1852  0039EA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  1853  0039EE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  1854  0039F2  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  1855  0039F6  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  1856  0039FA  0E00               	movlw	0
  1857  0039FC  0100               	movlb	0	; () banked
  1858  0039FE  6FB1               	movwf	___fladd@a& (0+255),b
  1859  003A00  0E00               	movlw	0
  1860  003A02  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  1861  003A04  0E80               	movlw	128
  1862  003A06  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  1863  003A08  0E3F               	movlw	63
  1864  003A0A  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  1865  003A0C  EC66  F012         	call	___fladd	;wreg free
  1866  003A10  C0AD  F0C1         	movff	?___fladd,sqrt@a
  1867  003A14  C0AE  F0C2         	movff	?___fladd+1,sqrt@a+1
  1868  003A18  C0AF  F0C3         	movff	?___fladd+2,sqrt@a+2
  1869  003A1C  C0B0  F0C4         	movff	?___fladd+3,sqrt@a+3
  1870  003A20  EC0D  F017         	call	_sqrt	;wreg free
  1871  003A24  C0C1  F17C         	movff	?_sqrt,asin@y
  1872  003A28  C0C2  F17D         	movff	?_sqrt+1,asin@y+1
  1873  003A2C  C0C3  F17E         	movff	?_sqrt+2,asin@y+2
  1874  003A30  C0C4  F17F         	movff	?_sqrt+3,asin@y+3
  1875  003A34  C16C  F0AD         	movff	asin@x,fabs@d
  1876  003A38  C16D  F0AE         	movff	asin@x+1,fabs@d+1
  1877  003A3C  C16E  F0AF         	movff	asin@x+2,fabs@d+2
  1878  003A40  C16F  F0B0         	movff	asin@x+3,fabs@d+3
  1879  003A44  ECC8  F026         	call	_fabs	;wreg free
  1880  003A48  C0AD  F0B1         	movff	?_fabs,___flge@ff1
  1881  003A4C  C0AE  F0B2         	movff	?_fabs+1,___flge@ff1+1
  1882  003A50  C0AF  F0B3         	movff	?_fabs+2,___flge@ff1+2
  1883  003A54  C0B0  F0B4         	movff	?_fabs+3,___flge@ff1+3
  1884  003A58  0E8F               	movlw	143
  1885  003A5A  0100               	movlb	0	; () banked
  1886  003A5C  6FB5               	movwf	___flge@ff2& (0+255),b
  1887  003A5E  0EC2               	movlw	194
  1888  003A60  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  1889  003A62  0E35               	movlw	53
  1890  003A64  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  1891  003A66  0E3F               	movlw	63
  1892  003A68  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  1893  003A6A  EC63  F022         	call	___flge	;wreg free
  1894  003A6E  0100               	movlb	0	; () banked
  1895  003A70  B0D8               	btfsc	status,0,c
  1896  003A72  D02D               	goto	l6046
  1897                           
  1898                           ; BSR set to: 0
  1899  003A74  C16C  F077         	movff	asin@x,___fldiv@b
  1900  003A78  C16D  F078         	movff	asin@x+1,___fldiv@b+1
  1901  003A7C  C16E  F079         	movff	asin@x+2,___fldiv@b+2
  1902  003A80  C16F  F07A         	movff	asin@x+3,___fldiv@b+3
  1903  003A84  C17C  F07B         	movff	asin@y,___fldiv@a
  1904  003A88  C17D  F07C         	movff	asin@y+1,___fldiv@a+1
  1905  003A8C  C17E  F07D         	movff	asin@y+2,___fldiv@a+2
  1906  003A90  C17F  F07E         	movff	asin@y+3,___fldiv@a+3
  1907  003A94  ECF2  F018         	call	___fldiv	;wreg free
  1908  003A98  C077  F180         	movff	?___fldiv,_asin$3619
  1909  003A9C  C078  F181         	movff	?___fldiv+1,_asin$3619+1
  1910  003AA0  C079  F182         	movff	?___fldiv+2,_asin$3619+2
  1911  003AA4  C07A  F183         	movff	?___fldiv+3,_asin$3619+3
  1912  003AA8  C180  F0D1         	movff	_asin$3619,atan@f
  1913  003AAC  C181  F0D2         	movff	_asin$3619+1,atan@f+1
  1914  003AB0  C182  F0D3         	movff	_asin$3619+2,atan@f+2
  1915  003AB4  C183  F0D4         	movff	_asin$3619+3,atan@f+3
  1916  003AB8  EC70  F01F         	call	_atan	;wreg free
  1917  003ABC  C0D1  F16C         	movff	?_atan,?_asin
  1918  003AC0  C0D2  F16D         	movff	?_atan+1,?_asin+1
  1919  003AC4  C0D3  F16E         	movff	?_atan+2,?_asin+2
  1920  003AC8  C0D4  F16F         	movff	?_atan+3,?_asin+3
  1921  003ACC  0012               	return	
  1922  003ACE                     l6046:
  1923  003ACE  0101               	movlb	1	; () banked
  1924  003AD0  AF6F               	btfss	(asin@x+3)& (0+255),7,b
  1925  003AD2  D06E               	goto	l6058
  1926                           
  1927                           ; BSR set to: 1
  1928  003AD4  C16C  F07B         	movff	asin@x,___fldiv@a
  1929  003AD8  C16D  F07C         	movff	asin@x+1,___fldiv@a+1
  1930  003ADC  C16E  F07D         	movff	asin@x+2,___fldiv@a+2
  1931  003AE0  C16F  F07E         	movff	asin@x+3,___fldiv@a+3
  1932  003AE4  C17C  F0A9         	movff	asin@y,___flneg@f1
  1933  003AE8  C17D  F0AA         	movff	asin@y+1,___flneg@f1+1
  1934  003AEC  C17E  F0AB         	movff	asin@y+2,___flneg@f1+2
  1935  003AF0  C17F  F0AC         	movff	asin@y+3,___flneg@f1+3
  1936  003AF4  ECE7  F026         	call	___flneg	;wreg free
  1937  003AF8  C0A9  F077         	movff	?___flneg,___fldiv@b
  1938  003AFC  C0AA  F078         	movff	?___flneg+1,___fldiv@b+1
  1939  003B00  C0AB  F079         	movff	?___flneg+2,___fldiv@b+2
  1940  003B04  C0AC  F07A         	movff	?___flneg+3,___fldiv@b+3
  1941  003B08  ECF2  F018         	call	___fldiv	;wreg free
  1942  003B0C  C077  F180         	movff	?___fldiv,_asin$3619
  1943  003B10  C078  F181         	movff	?___fldiv+1,_asin$3619+1
  1944  003B14  C079  F182         	movff	?___fldiv+2,_asin$3619+2
  1945  003B18  C07A  F183         	movff	?___fldiv+3,_asin$3619+3
  1946  003B1C  C180  F0D1         	movff	_asin$3619,atan@f
  1947  003B20  C181  F0D2         	movff	_asin$3619+1,atan@f+1
  1948  003B24  C182  F0D3         	movff	_asin$3619+2,atan@f+2
  1949  003B28  C183  F0D4         	movff	_asin$3619+3,atan@f+3
  1950  003B2C  EC70  F01F         	call	_atan	;wreg free
  1951  003B30  C0D1  F178         	movff	?_atan,_asin$3620
  1952  003B34  C0D2  F179         	movff	?_atan+1,_asin$3620+1
  1953  003B38  C0D3  F17A         	movff	?_atan+2,_asin$3620+2
  1954  003B3C  C0D4  F17B         	movff	?_atan+3,_asin$3620+3
  1955  003B40  0EDB               	movlw	219
  1956  003B42  0100               	movlb	0	; () banked
  1957  003B44  6FB1               	movwf	___fladd@a& (0+255),b
  1958  003B46  0E0F               	movlw	15
  1959  003B48  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  1960  003B4A  0EC9               	movlw	201
  1961  003B4C  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  1962  003B4E  0E3F               	movlw	63
  1963  003B50  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  1964  003B52  C178  F0A9         	movff	_asin$3620,___flneg@f1
  1965  003B56  C179  F0AA         	movff	_asin$3620+1,___flneg@f1+1
  1966  003B5A  C17A  F0AB         	movff	_asin$3620+2,___flneg@f1+2
  1967  003B5E  C17B  F0AC         	movff	_asin$3620+3,___flneg@f1+3
  1968  003B62  ECE7  F026         	call	___flneg	;wreg free
  1969  003B66  C0A9  F0AD         	movff	?___flneg,___fladd@b
  1970  003B6A  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  1971  003B6E  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  1972  003B72  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  1973  003B76  EC66  F012         	call	___fladd	;wreg free
  1974  003B7A  C0AD  F174         	movff	?___fladd,_asin$3621
  1975  003B7E  C0AE  F175         	movff	?___fladd+1,_asin$3621+1
  1976  003B82  C0AF  F176         	movff	?___fladd+2,_asin$3621+2
  1977  003B86  C0B0  F177         	movff	?___fladd+3,_asin$3621+3
  1978  003B8A  C174  F0A9         	movff	_asin$3621,___flneg@f1
  1979  003B8E  C175  F0AA         	movff	_asin$3621+1,___flneg@f1+1
  1980  003B92  C176  F0AB         	movff	_asin$3621+2,___flneg@f1+2
  1981  003B96  C177  F0AC         	movff	_asin$3621+3,___flneg@f1+3
  1982  003B9A  ECE7  F026         	call	___flneg	;wreg free
  1983  003B9E  C0A9  F16C         	movff	?___flneg,?_asin
  1984  003BA2  C0AA  F16D         	movff	?___flneg+1,?_asin+1
  1985  003BA6  C0AB  F16E         	movff	?___flneg+2,?_asin+2
  1986  003BAA  C0AC  F16F         	movff	?___flneg+3,?_asin+3
  1987  003BAE  0012               	return	
  1988  003BB0                     l6058:
  1989  003BB0  C16C  F07B         	movff	asin@x,___fldiv@a
  1990  003BB4  C16D  F07C         	movff	asin@x+1,___fldiv@a+1
  1991  003BB8  C16E  F07D         	movff	asin@x+2,___fldiv@a+2
  1992  003BBC  C16F  F07E         	movff	asin@x+3,___fldiv@a+3
  1993  003BC0  C17C  F077         	movff	asin@y,___fldiv@b
  1994  003BC4  C17D  F078         	movff	asin@y+1,___fldiv@b+1
  1995  003BC8  C17E  F079         	movff	asin@y+2,___fldiv@b+2
  1996  003BCC  C17F  F07A         	movff	asin@y+3,___fldiv@b+3
  1997  003BD0  ECF2  F018         	call	___fldiv	;wreg free
  1998  003BD4  C077  F180         	movff	?___fldiv,_asin$3619
  1999  003BD8  C078  F181         	movff	?___fldiv+1,_asin$3619+1
  2000  003BDC  C079  F182         	movff	?___fldiv+2,_asin$3619+2
  2001  003BE0  C07A  F183         	movff	?___fldiv+3,_asin$3619+3
  2002  003BE4  C180  F0D1         	movff	_asin$3619,atan@f
  2003  003BE8  C181  F0D2         	movff	_asin$3619+1,atan@f+1
  2004  003BEC  C182  F0D3         	movff	_asin$3619+2,atan@f+2
  2005  003BF0  C183  F0D4         	movff	_asin$3619+3,atan@f+3
  2006  003BF4  EC70  F01F         	call	_atan	;wreg free
  2007  003BF8  C0D1  F178         	movff	?_atan,_asin$3620
  2008  003BFC  C0D2  F179         	movff	?_atan+1,_asin$3620+1
  2009  003C00  C0D3  F17A         	movff	?_atan+2,_asin$3620+2
  2010  003C04  C0D4  F17B         	movff	?_atan+3,_asin$3620+3
  2011  003C08  C178  F0A9         	movff	_asin$3620,___flneg@f1
  2012  003C0C  C179  F0AA         	movff	_asin$3620+1,___flneg@f1+1
  2013  003C10  C17A  F0AB         	movff	_asin$3620+2,___flneg@f1+2
  2014  003C14  C17B  F0AC         	movff	_asin$3620+3,___flneg@f1+3
  2015  003C18  ECE7  F026         	call	___flneg	;wreg free
  2016  003C1C  C0A9  F0AD         	movff	?___flneg,___fladd@b
  2017  003C20  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  2018  003C24  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  2019  003C28  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  2020  003C2C  0EDB               	movlw	219
  2021  003C2E  0100               	movlb	0	; () banked
  2022  003C30  6FB1               	movwf	___fladd@a& (0+255),b
  2023  003C32  0E0F               	movlw	15
  2024  003C34  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  2025  003C36  0EC9               	movlw	201
  2026  003C38  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  2027  003C3A  0E3F               	movlw	63
  2028  003C3C  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  2029  003C3E  EC66  F012         	call	___fladd	;wreg free
  2030  003C42  C0AD  F16C         	movff	?___fladd,?_asin
  2031  003C46  C0AE  F16D         	movff	?___fladd+1,?_asin+1
  2032  003C4A  C0AF  F16E         	movff	?___fladd+2,?_asin+2
  2033  003C4E  C0B0  F16F         	movff	?___fladd+3,?_asin+3
  2034  003C52  0012               	return	
  2035  003C54                     __end_of_asin:
  2036                           	opt stack 0
  2037                           tblptru	equ	0xFF8
  2038                           tblptrh	equ	0xFF7
  2039                           tblptrl	equ	0xFF6
  2040                           tablat	equ	0xFF5
  2041                           postinc0	equ	0xFEE
  2042                           wreg	equ	0xFE8
  2043                           postinc2	equ	0xFDE
  2044                           postdec2	equ	0xFDD
  2045                           status	equ	0xFD8
  2046                           
  2047 ;; *************** function _sqrt *****************
  2048 ;; Defined at:
  2049 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;  a               4   97[BANK0 ] PTR unsigned char 
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;  frac            4   17[BANK1 ] unsigned long 
  2054 ;;  root            4   13[BANK1 ] struct .
  2055 ;;  grs             4    7[BANK1 ] unsigned long 
  2056 ;;  tfrac           4    2[BANK1 ] unsigned long 
  2057 ;;  exp             2   11[BANK1 ] int 
  2058 ;;  p               1    6[BANK1 ] unsigned char 
  2059 ;;  i               1    1[BANK1 ] unsigned char 
  2060 ;;  sign            1    0[BANK1 ] unsigned char 
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  4   97[BANK0 ] unsigned char 
  2063 ;; Registers used:
  2064 ;;		wreg, status,2, status,0
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2070 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2071 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  2072 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2073 ;;      Totals:         0       8      21       0       0       0       0       0       0       0       0       0       
      +0       0
  2074 ;;Total ram usage:       29 bytes
  2075 ;; Hardware stack levels used:    1
  2076 ;; Hardware stack levels required when called:    4
  2077 ;; This function calls:
  2078 ;;		Nothing
  2079 ;; This function is called by:
  2080 ;;		_parallelo
  2081 ;;		_asin
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text4
  2086  002E1A                     __ptext4:
  2087                           	opt stack 0
  2088  002E1A                     _sqrt:
  2089                           	opt stack 24
  2090                           
  2091                           ;incstack = 0
  2092  002E1A  0100               	movlb	0	; () banked
  2093  002E1C  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  2094  002E1E  0B80               	andlw	128
  2095  002E20  0101               	movlb	1	; () banked
  2096  002E22  6F57               	movwf	sqrt@sign& (0+255),b
  2097  002E24  0100               	movlb	0	; () banked
  2098  002E26  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  2099  002E28  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  2100  002E2A  0101               	movlb	1	; () banked
  2101  002E2C  6F5D               	movwf	sqrt@p& (0+255),b
  2102                           
  2103                           ; BSR set to: 1
  2104  002E2E  0100               	movlb	0	; () banked
  2105  002E30  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  2106  002E32  D002               	goto	l5906
  2107                           
  2108                           ; BSR set to: 0
  2109  002E34  0101               	movlb	1	; () banked
  2110  002E36  815D               	bsf	sqrt@p& (0+255),0,b
  2111  002E38                     l5906:
  2112  002E38  C15D  F162         	movff	sqrt@p,sqrt@exp
  2113  002E3C  0101               	movlb	1	; () banked
  2114  002E3E  6B63               	clrf	(sqrt@exp+1)& (0+255),b
  2115                           
  2116                           ; BSR set to: 1
  2117  002E40  0EFF               	movlw	255
  2118  002E42  0100               	movlb	0	; () banked
  2119  002E44  15C1               	andwf	sqrt@a& (0+255),w,b
  2120  002E46  0101               	movlb	1	; () banked
  2121  002E48  6F68               	movwf	sqrt@frac& (0+255),b
  2122  002E4A  0EFF               	movlw	255
  2123  002E4C  0100               	movlb	0	; () banked
  2124  002E4E  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  2125  002E50  0101               	movlb	1	; () banked
  2126  002E52  6F69               	movwf	(sqrt@frac+1)& (0+255),b
  2127  002E54  0E7F               	movlw	127
  2128  002E56  0100               	movlb	0	; () banked
  2129  002E58  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  2130  002E5A  0101               	movlb	1	; () banked
  2131  002E5C  6F6A               	movwf	(sqrt@frac+2)& (0+255),b
  2132  002E5E  0E00               	movlw	0
  2133  002E60  0100               	movlb	0	; () banked
  2134  002E62  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  2135  002E64  0101               	movlb	1	; () banked
  2136  002E66  6F6B               	movwf	(sqrt@frac+3)& (0+255),b
  2137                           
  2138                           ; BSR set to: 1
  2139  002E68  0101               	movlb	1	; () banked
  2140  002E6A  5162               	movf	sqrt@exp& (0+255),w,b
  2141  002E6C  0101               	movlb	1	; () banked
  2142  002E6E  1163               	iorwf	(sqrt@exp+1)& (0+255),w,b
  2143  002E70  B4D8               	btfsc	status,2,c
  2144  002E72  D008               	goto	l5918
  2145                           
  2146                           ; BSR set to: 1
  2147  002E74  0101               	movlb	1	; () banked
  2148  002E76  8F6A               	bsf	(sqrt@frac+2)& (0+255),7,b
  2149                           
  2150                           ; BSR set to: 1
  2151  002E78  0101               	movlb	1	; () banked
  2152  002E7A  2962               	incf	sqrt@exp& (0+255),w,b
  2153  002E7C  0101               	movlb	1	; () banked
  2154  002E7E  1163               	iorwf	(sqrt@exp+1)& (0+255),w,b
  2155  002E80  A4D8               	btfss	status,2,c
  2156  002E82  D009               	goto	l5920
  2157  002E84                     l5918:
  2158                           
  2159                           ; BSR set to: 1
  2160  002E84  0E00               	movlw	0
  2161  002E86  0101               	movlb	1	; () banked
  2162  002E88  6F68               	movwf	sqrt@frac& (0+255),b
  2163  002E8A  0E00               	movlw	0
  2164  002E8C  6F69               	movwf	(sqrt@frac+1)& (0+255),b
  2165  002E8E  0E00               	movlw	0
  2166  002E90  6F6A               	movwf	(sqrt@frac+2)& (0+255),b
  2167  002E92  0E00               	movlw	0
  2168  002E94  6F6B               	movwf	(sqrt@frac+3)& (0+255),b
  2169  002E96                     l5920:
  2170                           
  2171                           ; BSR set to: 1
  2172  002E96  0101               	movlb	1	; () banked
  2173  002E98  5162               	movf	sqrt@exp& (0+255),w,b
  2174  002E9A  0101               	movlb	1	; () banked
  2175  002E9C  1163               	iorwf	(sqrt@exp+1)& (0+255),w,b
  2176  002E9E  A4D8               	btfss	status,2,c
  2177  002EA0  D00A               	goto	l5926
  2178                           
  2179                           ; BSR set to: 1
  2180  002EA2  0E00               	movlw	0
  2181  002EA4  0100               	movlb	0	; () banked
  2182  002EA6  6FC1               	movwf	?_sqrt& (0+255),b
  2183  002EA8  0E00               	movlw	0
  2184  002EAA  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  2185  002EAC  0E00               	movlw	0
  2186  002EAE  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  2187  002EB0  0E00               	movlw	0
  2188  002EB2  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  2189                           
  2190                           ; BSR set to: 0
  2191  002EB4  0012               	return	
  2192  002EB6                     l5926:
  2193  002EB6  0101               	movlb	1	; () banked
  2194  002EB8  5157               	movf	sqrt@sign& (0+255),w,b
  2195  002EBA  0101               	movlb	1	; () banked
  2196  002EBC  B4D8               	btfsc	status,2,c
  2197  002EBE  D01C               	goto	l5938
  2198                           
  2199                           ; BSR set to: 1
  2200  002EC0  0E00               	movlw	0
  2201  002EC2  0101               	movlb	1	; () banked
  2202  002EC4  6F64               	movwf	sqrt@root& (0+255),b
  2203  002EC6  0E00               	movlw	0
  2204  002EC8  6F65               	movwf	(sqrt@root+1)& (0+255),b
  2205  002ECA  0E40               	movlw	64
  2206  002ECC  6F66               	movwf	(sqrt@root+2)& (0+255),b
  2207  002ECE  0E00               	movlw	0
  2208  002ED0  6F67               	movwf	(sqrt@root+3)& (0+255),b
  2209                           
  2210                           ; BSR set to: 1
  2211  002ED2  0101               	movlb	1	; () banked
  2212  002ED4  0E80               	movlw	128
  2213  002ED6  1366               	iorwf	(sqrt@root+2)& (0+255),f,b
  2214  002ED8  0EFF               	movlw	255
  2215  002EDA  1367               	iorwf	(sqrt@root+3)& (0+255),f,b
  2216                           
  2217                           ; BSR set to: 1
  2218  002EDC  0E00               	movlw	0
  2219  002EDE  0101               	movlb	1	; () banked
  2220  002EE0  6F1F               	movwf	(_errno+1)& (0+255),b
  2221  002EE2  0E21               	movlw	33
  2222  002EE4  6F1E               	movwf	_errno& (0+255),b
  2223                           
  2224                           ; BSR set to: 1
  2225  002EE6  C164  F0C1         	movff	sqrt@root,?_sqrt
  2226  002EEA  C165  F0C2         	movff	sqrt@root+1,?_sqrt+1
  2227  002EEE  C166  F0C3         	movff	sqrt@root+2,?_sqrt+2
  2228  002EF2  C167  F0C4         	movff	sqrt@root+3,?_sqrt+3
  2229                           
  2230                           ; BSR set to: 1
  2231  002EF6  0012               	return	
  2232  002EF8                     l5938:
  2233                           
  2234                           ; BSR set to: 1
  2235  002EF8  0101               	movlb	1	; () banked
  2236  002EFA  2962               	incf	sqrt@exp& (0+255),w,b
  2237  002EFC  0101               	movlb	1	; () banked
  2238  002EFE  1163               	iorwf	(sqrt@exp+1)& (0+255),w,b
  2239  002F00  A4D8               	btfss	status,2,c
  2240  002F02  D012               	goto	l5946
  2241                           
  2242                           ; BSR set to: 1
  2243  002F04  0E00               	movlw	0
  2244  002F06  0101               	movlb	1	; () banked
  2245  002F08  6F64               	movwf	sqrt@root& (0+255),b
  2246  002F0A  0E00               	movlw	0
  2247  002F0C  6F65               	movwf	(sqrt@root+1)& (0+255),b
  2248  002F0E  0E80               	movlw	128
  2249  002F10  6F66               	movwf	(sqrt@root+2)& (0+255),b
  2250  002F12  0E7F               	movlw	127
  2251  002F14  6F67               	movwf	(sqrt@root+3)& (0+255),b
  2252                           
  2253                           ; BSR set to: 1
  2254  002F16  C164  F0C1         	movff	sqrt@root,?_sqrt
  2255  002F1A  C165  F0C2         	movff	sqrt@root+1,?_sqrt+1
  2256  002F1E  C166  F0C3         	movff	sqrt@root+2,?_sqrt+2
  2257  002F22  C167  F0C4         	movff	sqrt@root+3,?_sqrt+3
  2258                           
  2259                           ; BSR set to: 1
  2260  002F26  0012               	return	
  2261  002F28                     l5946:
  2262                           
  2263                           ; BSR set to: 1
  2264  002F28  0101               	movlb	1	; () banked
  2265  002F2A  0E81               	movlw	129
  2266  002F2C  2762               	addwf	sqrt@exp& (0+255),f,b
  2267  002F2E  0EFF               	movlw	255
  2268  002F30  2363               	addwfc	(sqrt@exp+1)& (0+255),f,b
  2269  002F32  0101               	movlb	1	; () banked
  2270  002F34  5162               	movf	sqrt@exp& (0+255),w,b
  2271  002F36  0B01               	andlw	1
  2272  002F38  0101               	movlb	1	; () banked
  2273  002F3A  6F5D               	movwf	sqrt@p& (0+255),b
  2274  002F3C  0101               	movlb	1	; () banked
  2275  002F3E  3563               	rlcf	(sqrt@exp+1)& (0+255),w,b
  2276  002F40  3363               	rrcf	(sqrt@exp+1)& (0+255),f,b
  2277  002F42  3362               	rrcf	sqrt@exp& (0+255),f,b
  2278  002F44  0E7F               	movlw	127
  2279  002F46  0101               	movlb	1	; () banked
  2280  002F48  2762               	addwf	sqrt@exp& (0+255),f,b
  2281  002F4A  0E00               	movlw	0
  2282  002F4C  2363               	addwfc	(sqrt@exp+1)& (0+255),f,b
  2283  002F4E  90D8               	bcf	status,0,c
  2284  002F50  0101               	movlb	1	; () banked
  2285  002F52  3568               	rlcf	sqrt@frac& (0+255),w,b
  2286  002F54  0101               	movlb	1	; () banked
  2287  002F56  6F59               	movwf	sqrt@tfrac& (0+255),b
  2288  002F58  0101               	movlb	1	; () banked
  2289  002F5A  3569               	rlcf	(sqrt@frac+1)& (0+255),w,b
  2290  002F5C  0101               	movlb	1	; () banked
  2291  002F5E  6F5A               	movwf	(sqrt@tfrac+1)& (0+255),b
  2292  002F60  0101               	movlb	1	; () banked
  2293  002F62  356A               	rlcf	(sqrt@frac+2)& (0+255),w,b
  2294  002F64  0101               	movlb	1	; () banked
  2295  002F66  6F5B               	movwf	(sqrt@tfrac+2)& (0+255),b
  2296  002F68  0101               	movlb	1	; () banked
  2297  002F6A  356B               	rlcf	(sqrt@frac+3)& (0+255),w,b
  2298  002F6C  0101               	movlb	1	; () banked
  2299  002F6E  6F5C               	movwf	(sqrt@tfrac+3)& (0+255),b
  2300                           
  2301                           ; BSR set to: 1
  2302  002F70  0E00               	movlw	0
  2303  002F72  0101               	movlb	1	; () banked
  2304  002F74  6F68               	movwf	sqrt@frac& (0+255),b
  2305  002F76  0E00               	movlw	0
  2306  002F78  6F69               	movwf	(sqrt@frac+1)& (0+255),b
  2307  002F7A  0E00               	movlw	0
  2308  002F7C  6F6A               	movwf	(sqrt@frac+2)& (0+255),b
  2309  002F7E  0E00               	movlw	0
  2310  002F80  6F6B               	movwf	(sqrt@frac+3)& (0+255),b
  2311                           
  2312                           ; BSR set to: 1
  2313  002F82  0E00               	movlw	0
  2314  002F84  0101               	movlb	1	; () banked
  2315  002F86  6F5E               	movwf	sqrt@grs& (0+255),b
  2316  002F88  0E00               	movlw	0
  2317  002F8A  6F5F               	movwf	(sqrt@grs+1)& (0+255),b
  2318  002F8C  0E00               	movlw	0
  2319  002F8E  6F60               	movwf	(sqrt@grs+2)& (0+255),b
  2320  002F90  0E01               	movlw	1
  2321  002F92  6F61               	movwf	(sqrt@grs+3)& (0+255),b
  2322                           
  2323                           ; BSR set to: 1
  2324  002F94  0101               	movlb	1	; () banked
  2325  002F96  515D               	movf	sqrt@p& (0+255),w,b
  2326  002F98  0101               	movlb	1	; () banked
  2327  002F9A  B4D8               	btfsc	status,2,c
  2328  002F9C  D006               	goto	l5956
  2329                           
  2330                           ; BSR set to: 1
  2331  002F9E  0101               	movlb	1	; () banked
  2332  002FA0  90D8               	bcf	status,0,c
  2333  002FA2  3759               	rlcf	sqrt@tfrac& (0+255),f,b
  2334  002FA4  375A               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  2335  002FA6  375B               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  2336  002FA8  375C               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  2337  002FAA                     l5956:
  2338                           
  2339                           ; BSR set to: 1
  2340  002FAA  0E00               	movlw	0
  2341  002FAC  0101               	movlb	1	; () banked
  2342  002FAE  6F58               	movwf	sqrt@i& (0+255),b
  2343  002FB0  D07E               	goto	l5970
  2344  002FB2                     l5958:
  2345                           
  2346                           ; BSR set to: 1
  2347  002FB2  0101               	movlb	1	; () banked
  2348  002FB4  515E               	movf	sqrt@grs& (0+255),w,b
  2349  002FB6  0101               	movlb	1	; () banked
  2350  002FB8  1368               	iorwf	sqrt@frac& (0+255),f,b
  2351  002FBA  0101               	movlb	1	; () banked
  2352  002FBC  515F               	movf	(sqrt@grs+1)& (0+255),w,b
  2353  002FBE  0101               	movlb	1	; () banked
  2354  002FC0  1369               	iorwf	(sqrt@frac+1)& (0+255),f,b
  2355  002FC2  0101               	movlb	1	; () banked
  2356  002FC4  5160               	movf	(sqrt@grs+2)& (0+255),w,b
  2357  002FC6  0101               	movlb	1	; () banked
  2358  002FC8  136A               	iorwf	(sqrt@frac+2)& (0+255),f,b
  2359  002FCA  0101               	movlb	1	; () banked
  2360  002FCC  5161               	movf	(sqrt@grs+3)& (0+255),w,b
  2361  002FCE  0101               	movlb	1	; () banked
  2362  002FD0  136B               	iorwf	(sqrt@frac+3)& (0+255),f,b
  2363  002FD2  0101               	movlb	1	; () banked
  2364  002FD4  5168               	movf	sqrt@frac& (0+255),w,b
  2365  002FD6  0101               	movlb	1	; () banked
  2366  002FD8  5D59               	subwf	sqrt@tfrac& (0+255),w,b
  2367  002FDA  0101               	movlb	1	; () banked
  2368  002FDC  5169               	movf	(sqrt@frac+1)& (0+255),w,b
  2369  002FDE  0101               	movlb	1	; () banked
  2370  002FE0  595A               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  2371  002FE2  0101               	movlb	1	; () banked
  2372  002FE4  516A               	movf	(sqrt@frac+2)& (0+255),w,b
  2373  002FE6  0101               	movlb	1	; () banked
  2374  002FE8  595B               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  2375  002FEA  0101               	movlb	1	; () banked
  2376  002FEC  516B               	movf	(sqrt@frac+3)& (0+255),w,b
  2377  002FEE  0101               	movlb	1	; () banked
  2378  002FF0  595C               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  2379  002FF2  A0D8               	btfss	status,0,c
  2380  002FF4  D021               	goto	l5962
  2381                           
  2382                           ; BSR set to: 1
  2383  002FF6  0101               	movlb	1	; () banked
  2384  002FF8  5168               	movf	sqrt@frac& (0+255),w,b
  2385  002FFA  0101               	movlb	1	; () banked
  2386  002FFC  5F59               	subwf	sqrt@tfrac& (0+255),f,b
  2387  002FFE  0101               	movlb	1	; () banked
  2388  003000  5169               	movf	(sqrt@frac+1)& (0+255),w,b
  2389  003002  0101               	movlb	1	; () banked
  2390  003004  5B5A               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  2391  003006  0101               	movlb	1	; () banked
  2392  003008  516A               	movf	(sqrt@frac+2)& (0+255),w,b
  2393  00300A  0101               	movlb	1	; () banked
  2394  00300C  5B5B               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  2395  00300E  0101               	movlb	1	; () banked
  2396  003010  516B               	movf	(sqrt@frac+3)& (0+255),w,b
  2397  003012  0101               	movlb	1	; () banked
  2398  003014  5B5C               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  2399  003016  0101               	movlb	1	; () banked
  2400  003018  515E               	movf	sqrt@grs& (0+255),w,b
  2401  00301A  0101               	movlb	1	; () banked
  2402  00301C  2768               	addwf	sqrt@frac& (0+255),f,b
  2403  00301E  0101               	movlb	1	; () banked
  2404  003020  515F               	movf	(sqrt@grs+1)& (0+255),w,b
  2405  003022  0101               	movlb	1	; () banked
  2406  003024  2369               	addwfc	(sqrt@frac+1)& (0+255),f,b
  2407  003026  0101               	movlb	1	; () banked
  2408  003028  5160               	movf	(sqrt@grs+2)& (0+255),w,b
  2409  00302A  0101               	movlb	1	; () banked
  2410  00302C  236A               	addwfc	(sqrt@frac+2)& (0+255),f,b
  2411  00302E  0101               	movlb	1	; () banked
  2412  003030  5161               	movf	(sqrt@grs+3)& (0+255),w,b
  2413  003032  0101               	movlb	1	; () banked
  2414  003034  236B               	addwfc	(sqrt@frac+3)& (0+255),f,b
  2415  003036  D01D               	goto	l5964
  2416  003038                     l5962:
  2417                           
  2418                           ; BSR set to: 1
  2419  003038  C15E  F0C5         	movff	sqrt@grs,??_sqrt
  2420  00303C  C15F  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  2421  003040  C160  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  2422  003044  C161  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  2423  003048  0100               	movlb	0	; () banked
  2424  00304A  1FC5               	comf	??_sqrt& (0+255),f,b
  2425  00304C  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  2426  00304E  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  2427  003050  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  2428  003052  0100               	movlb	0	; () banked
  2429  003054  51C5               	movf	??_sqrt& (0+255),w,b
  2430  003056  0101               	movlb	1	; () banked
  2431  003058  1768               	andwf	sqrt@frac& (0+255),f,b
  2432  00305A  0100               	movlb	0	; () banked
  2433  00305C  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  2434  00305E  0101               	movlb	1	; () banked
  2435  003060  1769               	andwf	(sqrt@frac+1)& (0+255),f,b
  2436  003062  0100               	movlb	0	; () banked
  2437  003064  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  2438  003066  0101               	movlb	1	; () banked
  2439  003068  176A               	andwf	(sqrt@frac+2)& (0+255),f,b
  2440  00306A  0100               	movlb	0	; () banked
  2441  00306C  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  2442  00306E  0101               	movlb	1	; () banked
  2443  003070  176B               	andwf	(sqrt@frac+3)& (0+255),f,b
  2444  003072                     l5964:
  2445                           
  2446                           ; BSR set to: 1
  2447  003072  C15E  F0C5         	movff	sqrt@grs,??_sqrt
  2448  003076  C15F  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  2449  00307A  C160  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  2450  00307E  C161  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  2451  003082  0100               	movlb	0	; () banked
  2452  003084  90D8               	bcf	status,0,c
  2453  003086  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  2454  003088  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  2455  00308A  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  2456  00308C  33C5               	rrcf	??_sqrt& (0+255),f,b
  2457  00308E  C0C5  F15E         	movff	??_sqrt,sqrt@grs
  2458  003092  C0C6  F15F         	movff	??_sqrt+1,sqrt@grs+1
  2459  003096  C0C7  F160         	movff	??_sqrt+2,sqrt@grs+2
  2460  00309A  C0C8  F161         	movff	??_sqrt+3,sqrt@grs+3
  2461                           
  2462                           ; BSR set to: 0
  2463  00309E  0101               	movlb	1	; () banked
  2464  0030A0  90D8               	bcf	status,0,c
  2465  0030A2  3759               	rlcf	sqrt@tfrac& (0+255),f,b
  2466  0030A4  375A               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  2467  0030A6  375B               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  2468  0030A8  375C               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  2469                           
  2470                           ; BSR set to: 1
  2471  0030AA  0101               	movlb	1	; () banked
  2472  0030AC  2B58               	incf	sqrt@i& (0+255),f,b
  2473  0030AE                     l5970:
  2474                           
  2475                           ; BSR set to: 1
  2476  0030AE  0E18               	movlw	24
  2477  0030B0  0101               	movlb	1	; () banked
  2478  0030B2  6558               	cpfsgt	sqrt@i& (0+255),b
  2479  0030B4  D77E               	goto	l5958
  2480                           
  2481                           ; BSR set to: 1
  2482                           
  2483                           ; BSR set to: 1
  2484  0030B6  C168  F0C5         	movff	sqrt@frac,??_sqrt
  2485  0030BA  C169  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  2486  0030BE  C16A  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  2487  0030C2  C16B  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  2488  0030C6  0100               	movlb	0	; () banked
  2489  0030C8  90D8               	bcf	status,0,c
  2490  0030CA  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  2491  0030CC  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  2492  0030CE  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  2493  0030D0  33C5               	rrcf	??_sqrt& (0+255),f,b
  2494  0030D2  C0C5  F168         	movff	??_sqrt,sqrt@frac
  2495  0030D6  C0C6  F169         	movff	??_sqrt+1,sqrt@frac+1
  2496  0030DA  C0C7  F16A         	movff	??_sqrt+2,sqrt@frac+2
  2497  0030DE  C0C8  F16B         	movff	??_sqrt+3,sqrt@frac+3
  2498                           
  2499                           ; BSR set to: 0
  2500  0030E2  0E01               	movlw	1
  2501  0030E4  0101               	movlb	1	; () banked
  2502  0030E6  1568               	andwf	sqrt@frac& (0+255),w,b
  2503  0030E8  0101               	movlb	1	; () banked
  2504  0030EA  6F5E               	movwf	sqrt@grs& (0+255),b
  2505  0030EC  0E00               	movlw	0
  2506  0030EE  0101               	movlb	1	; () banked
  2507  0030F0  1569               	andwf	(sqrt@frac+1)& (0+255),w,b
  2508  0030F2  0101               	movlb	1	; () banked
  2509  0030F4  6F5F               	movwf	(sqrt@grs+1)& (0+255),b
  2510  0030F6  0E00               	movlw	0
  2511  0030F8  0101               	movlb	1	; () banked
  2512  0030FA  156A               	andwf	(sqrt@frac+2)& (0+255),w,b
  2513  0030FC  0101               	movlb	1	; () banked
  2514  0030FE  6F60               	movwf	(sqrt@grs+2)& (0+255),b
  2515  003100  0E00               	movlw	0
  2516  003102  0101               	movlb	1	; () banked
  2517  003104  156B               	andwf	(sqrt@frac+3)& (0+255),w,b
  2518  003106  0101               	movlb	1	; () banked
  2519  003108  6F61               	movwf	(sqrt@grs+3)& (0+255),b
  2520                           
  2521                           ; BSR set to: 1
  2522  00310A  C168  F0C5         	movff	sqrt@frac,??_sqrt
  2523  00310E  C169  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  2524  003112  C16A  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  2525  003116  C16B  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  2526  00311A  0100               	movlb	0	; () banked
  2527  00311C  90D8               	bcf	status,0,c
  2528  00311E  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  2529  003120  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  2530  003122  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  2531  003124  33C5               	rrcf	??_sqrt& (0+255),f,b
  2532  003126  C0C5  F168         	movff	??_sqrt,sqrt@frac
  2533  00312A  C0C6  F169         	movff	??_sqrt+1,sqrt@frac+1
  2534  00312E  C0C7  F16A         	movff	??_sqrt+2,sqrt@frac+2
  2535  003132  C0C8  F16B         	movff	??_sqrt+3,sqrt@frac+3
  2536  003136  0101               	movlb	1	; () banked
  2537  003138  515E               	movf	sqrt@grs& (0+255),w,b
  2538  00313A  0101               	movlb	1	; () banked
  2539  00313C  2768               	addwf	sqrt@frac& (0+255),f,b
  2540  00313E  0101               	movlb	1	; () banked
  2541  003140  515F               	movf	(sqrt@grs+1)& (0+255),w,b
  2542  003142  0101               	movlb	1	; () banked
  2543  003144  2369               	addwfc	(sqrt@frac+1)& (0+255),f,b
  2544  003146  0101               	movlb	1	; () banked
  2545  003148  5160               	movf	(sqrt@grs+2)& (0+255),w,b
  2546  00314A  0101               	movlb	1	; () banked
  2547  00314C  236A               	addwfc	(sqrt@frac+2)& (0+255),f,b
  2548  00314E  0101               	movlb	1	; () banked
  2549  003150  5161               	movf	(sqrt@grs+3)& (0+255),w,b
  2550  003152  0101               	movlb	1	; () banked
  2551  003154  236B               	addwfc	(sqrt@frac+3)& (0+255),f,b
  2552                           
  2553                           ; BSR set to: 1
  2554  003156  0101               	movlb	1	; () banked
  2555  003158  A16B               	btfss	(sqrt@frac+3)& (0+255),0,b
  2556  00315A  D019               	goto	l5982
  2557                           
  2558                           ; BSR set to: 1
  2559  00315C  C168  F0C5         	movff	sqrt@frac,??_sqrt
  2560  003160  C169  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  2561  003164  C16A  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  2562  003168  C16B  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  2563  00316C  0100               	movlb	0	; () banked
  2564  00316E  90D8               	bcf	status,0,c
  2565  003170  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  2566  003172  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  2567  003174  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  2568  003176  33C5               	rrcf	??_sqrt& (0+255),f,b
  2569  003178  C0C5  F168         	movff	??_sqrt,sqrt@frac
  2570  00317C  C0C6  F169         	movff	??_sqrt+1,sqrt@frac+1
  2571  003180  C0C7  F16A         	movff	??_sqrt+2,sqrt@frac+2
  2572  003184  C0C8  F16B         	movff	??_sqrt+3,sqrt@frac+3
  2573  003188  0101               	movlb	1	; () banked
  2574  00318A  4B62               	infsnz	sqrt@exp& (0+255),f,b
  2575  00318C  2B63               	incf	(sqrt@exp+1)& (0+255),f,b
  2576  00318E                     l5982:
  2577                           
  2578                           ; BSR set to: 1
  2579  00318E  0EFF               	movlw	255
  2580  003190  0101               	movlb	1	; () banked
  2581  003192  1568               	andwf	sqrt@frac& (0+255),w,b
  2582  003194  0101               	movlb	1	; () banked
  2583  003196  6F64               	movwf	sqrt@root& (0+255),b
  2584  003198  0EFF               	movlw	255
  2585  00319A  0101               	movlb	1	; () banked
  2586  00319C  1569               	andwf	(sqrt@frac+1)& (0+255),w,b
  2587  00319E  0101               	movlb	1	; () banked
  2588  0031A0  6F65               	movwf	(sqrt@root+1)& (0+255),b
  2589  0031A2  0E7F               	movlw	127
  2590  0031A4  0101               	movlb	1	; () banked
  2591  0031A6  156A               	andwf	(sqrt@frac+2)& (0+255),w,b
  2592  0031A8  0101               	movlb	1	; () banked
  2593  0031AA  6F66               	movwf	(sqrt@root+2)& (0+255),b
  2594  0031AC  0E00               	movlw	0
  2595  0031AE  0101               	movlb	1	; () banked
  2596  0031B0  156B               	andwf	(sqrt@frac+3)& (0+255),w,b
  2597  0031B2  0101               	movlb	1	; () banked
  2598  0031B4  6F67               	movwf	(sqrt@root+3)& (0+255),b
  2599                           
  2600                           ; BSR set to: 1
  2601  0031B6  C162  F15D         	movff	sqrt@exp,sqrt@p
  2602                           
  2603                           ; BSR set to: 1
  2604  0031BA  0101               	movlb	1	; () banked
  2605  0031BC  A15D               	btfss	sqrt@p& (0+255),0,b
  2606  0031BE  D002               	goto	l5990
  2607                           
  2608                           ; BSR set to: 1
  2609  0031C0  0101               	movlb	1	; () banked
  2610  0031C2  8F66               	bsf	(sqrt@root+2)& (0+255),7,b
  2611  0031C4                     l5990:
  2612                           
  2613                           ; BSR set to: 1
  2614  0031C4  0101               	movlb	1	; () banked
  2615  0031C6  90D8               	bcf	status,0,c
  2616  0031C8  315D               	rrcf	sqrt@p& (0+255),w,b
  2617  0031CA  0101               	movlb	1	; () banked
  2618  0031CC  6F67               	movwf	(sqrt@root+3)& (0+255),b
  2619                           
  2620                           ; BSR set to: 1
  2621  0031CE  0101               	movlb	1	; () banked
  2622  0031D0  9F67               	bcf	(sqrt@root+3)& (0+255),7,b
  2623                           
  2624                           ; BSR set to: 1
  2625  0031D2  C164  F0C1         	movff	sqrt@root,?_sqrt
  2626  0031D6  C165  F0C2         	movff	sqrt@root+1,?_sqrt+1
  2627  0031DA  C166  F0C3         	movff	sqrt@root+2,?_sqrt+2
  2628  0031DE  C167  F0C4         	movff	sqrt@root+3,?_sqrt+3
  2629  0031E2  0012               	return	
  2630  0031E4                     __end_of_sqrt:
  2631                           	opt stack 0
  2632                           tblptru	equ	0xFF8
  2633                           tblptrh	equ	0xFF7
  2634                           tblptrl	equ	0xFF6
  2635                           tablat	equ	0xFF5
  2636                           postinc0	equ	0xFEE
  2637                           wreg	equ	0xFE8
  2638                           postinc2	equ	0xFDE
  2639                           postdec2	equ	0xFDD
  2640                           status	equ	0xFD8
  2641                           
  2642 ;; *************** function _atan *****************
  2643 ;; Defined at:
  2644 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;  f               4  113[BANK0 ] unsigned char 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  val             4   13[BANK1 ] unsigned char 
  2649 ;;  val_squared     4    9[BANK1 ] unsigned char 
  2650 ;;  x               4    4[BANK1 ] unsigned char 
  2651 ;;  y               4    0[BANK1 ] unsigned char 
  2652 ;;  recip           1    8[BANK1 ] unsigned char 
  2653 ;; Return value:  Size  Location     Type
  2654 ;;                  4  113[BANK0 ] unsigned char 
  2655 ;; Registers used:
  2656 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2657 ;; Tracked objects:
  2658 ;;		On entry : 0/0
  2659 ;;		On exit  : 0/0
  2660 ;;		Unchanged: 0/0
  2661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2662 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2663 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  2664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2665 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  2666 ;;Total ram usage:       21 bytes
  2667 ;; Hardware stack levels used:    1
  2668 ;; Hardware stack levels required when called:    6
  2669 ;; This function calls:
  2670 ;;		___fladd
  2671 ;;		___fldiv
  2672 ;;		___flge
  2673 ;;		___flmul
  2674 ;;		___flneg
  2675 ;;		_eval_poly
  2676 ;;		_fabs
  2677 ;; This function is called by:
  2678 ;;		_asin
  2679 ;; This function uses a non-reentrant model
  2680 ;;
  2681                           
  2682                           	psect	text5
  2683  003EE0                     __ptext5:
  2684                           	opt stack 0
  2685  003EE0                     _atan:
  2686                           	opt stack 21
  2687                           
  2688                           ;incstack = 0
  2689  003EE0  C0D1  F0AD         	movff	atan@f,fabs@d
  2690  003EE4  C0D2  F0AE         	movff	atan@f+1,fabs@d+1
  2691  003EE8  C0D3  F0AF         	movff	atan@f+2,fabs@d+2
  2692  003EEC  C0D4  F0B0         	movff	atan@f+3,fabs@d+3
  2693  003EF0  ECC8  F026         	call	_fabs	;wreg free
  2694  003EF4  C0AD  F164         	movff	?_fabs,atan@val
  2695  003EF8  C0AE  F165         	movff	?_fabs+1,atan@val+1
  2696  003EFC  C0AF  F166         	movff	?_fabs+2,atan@val+2
  2697  003F00  C0B0  F167         	movff	?_fabs+3,atan@val+3
  2698  003F04  0101               	movlb	1	; () banked
  2699  003F06  5164               	movf	atan@val& (0+255),w,b
  2700  003F08  0101               	movlb	1	; () banked
  2701  003F0A  1165               	iorwf	(atan@val+1)& (0+255),w,b
  2702  003F0C  0101               	movlb	1	; () banked
  2703  003F0E  1166               	iorwf	(atan@val+2)& (0+255),w,b
  2704  003F10  0101               	movlb	1	; () banked
  2705  003F12  1167               	iorwf	(atan@val+3)& (0+255),w,b
  2706  003F14  A4D8               	btfss	status,2,c
  2707  003F16  D00A               	goto	l6004
  2708                           
  2709                           ; BSR set to: 1
  2710  003F18  0E00               	movlw	0
  2711  003F1A  0100               	movlb	0	; () banked
  2712  003F1C  6FD1               	movwf	?_atan& (0+255),b
  2713  003F1E  0E00               	movlw	0
  2714  003F20  6FD2               	movwf	(?_atan+1)& (0+255),b
  2715  003F22  0E00               	movlw	0
  2716  003F24  6FD3               	movwf	(?_atan+2)& (0+255),b
  2717  003F26  0E00               	movlw	0
  2718  003F28  6FD4               	movwf	(?_atan+3)& (0+255),b
  2719                           
  2720                           ; BSR set to: 0
  2721  003F2A  0012               	return	
  2722  003F2C                     l6004:
  2723  003F2C  0E00               	movlw	0
  2724  003F2E  0100               	movlb	0	; () banked
  2725  003F30  6FB1               	movwf	___flge@ff1& (0+255),b
  2726  003F32  0E00               	movlw	0
  2727  003F34  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  2728  003F36  0E80               	movlw	128
  2729  003F38  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  2730  003F3A  0E3F               	movlw	63
  2731  003F3C  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  2732  003F3E  C164  F0B5         	movff	atan@val,___flge@ff2
  2733  003F42  C165  F0B6         	movff	atan@val+1,___flge@ff2+1
  2734  003F46  C166  F0B7         	movff	atan@val+2,___flge@ff2+2
  2735  003F4A  C167  F0B8         	movff	atan@val+3,___flge@ff2+3
  2736  003F4E  EC63  F022         	call	___flge	;wreg free
  2737  003F52  0100               	movlb	0	; () banked
  2738  003F54  B0D8               	btfsc	status,0,c
  2739  003F56  D002               	goto	u7720
  2740  003F58  0E01               	movlw	1
  2741  003F5A  D001               	goto	u7730
  2742  003F5C                     u7720:
  2743  003F5C  0E00               	movlw	0
  2744  003F5E                     u7730:
  2745  003F5E  0101               	movlb	1	; () banked
  2746  003F60  6F5F               	movwf	atan@recip& (0+255),b
  2747  003F62  0101               	movlb	1	; () banked
  2748  003F64  515F               	movf	atan@recip& (0+255),w,b
  2749  003F66  B4D8               	btfsc	status,2,c
  2750  003F68  D01B               	goto	l6008
  2751                           
  2752                           ; BSR set to: 1
  2753  003F6A  0E00               	movlw	0
  2754  003F6C  0100               	movlb	0	; () banked
  2755  003F6E  6F77               	movwf	___fldiv@b& (0+255),b
  2756  003F70  0E00               	movlw	0
  2757  003F72  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  2758  003F74  0E80               	movlw	128
  2759  003F76  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  2760  003F78  0E3F               	movlw	63
  2761  003F7A  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  2762  003F7C  C164  F07B         	movff	atan@val,___fldiv@a
  2763  003F80  C165  F07C         	movff	atan@val+1,___fldiv@a+1
  2764  003F84  C166  F07D         	movff	atan@val+2,___fldiv@a+2
  2765  003F88  C167  F07E         	movff	atan@val+3,___fldiv@a+3
  2766  003F8C  ECF2  F018         	call	___fldiv	;wreg free
  2767  003F90  C077  F164         	movff	?___fldiv,atan@val
  2768  003F94  C078  F165         	movff	?___fldiv+1,atan@val+1
  2769  003F98  C079  F166         	movff	?___fldiv+2,atan@val+2
  2770  003F9C  C07A  F167         	movff	?___fldiv+3,atan@val+3
  2771  003FA0                     l6008:
  2772  003FA0  C164  F090         	movff	atan@val,___flmul@b
  2773  003FA4  C165  F091         	movff	atan@val+1,___flmul@b+1
  2774  003FA8  C166  F092         	movff	atan@val+2,___flmul@b+2
  2775  003FAC  C167  F093         	movff	atan@val+3,___flmul@b+3
  2776  003FB0  C164  F094         	movff	atan@val,___flmul@a
  2777  003FB4  C165  F095         	movff	atan@val+1,___flmul@a+1
  2778  003FB8  C166  F096         	movff	atan@val+2,___flmul@a+2
  2779  003FBC  C167  F097         	movff	atan@val+3,___flmul@a+3
  2780  003FC0  ECBA  F014         	call	___flmul	;wreg free
  2781  003FC4  C090  F160         	movff	?___flmul,atan@val_squared
  2782  003FC8  C091  F161         	movff	?___flmul+1,atan@val_squared+1
  2783  003FCC  C092  F162         	movff	?___flmul+2,atan@val_squared+2
  2784  003FD0  C093  F163         	movff	?___flmul+3,atan@val_squared+3
  2785  003FD4  C160  F0C1         	movff	atan@val_squared,eval_poly@x
  2786  003FD8  C161  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  2787  003FDC  C162  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  2788  003FE0  C163  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  2789  003FE4  0E19               	movlw	low atan@coeff_b
  2790  003FE6  0100               	movlb	0	; () banked
  2791  003FE8  6FC5               	movwf	eval_poly@d& (0+255),b
  2792  003FEA  0E0D               	movlw	high atan@coeff_b
  2793  003FEC  0100               	movlb	0	; () banked
  2794  003FEE  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  2795  003FF0  0E00               	movlw	0
  2796  003FF2  0100               	movlb	0	; () banked
  2797  003FF4  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  2798  003FF6  0E04               	movlw	4
  2799  003FF8  6FC7               	movwf	eval_poly@n& (0+255),b
  2800  003FFA  ECDE  F023         	call	_eval_poly	;wreg free
  2801  003FFE  C0C1  F157         	movff	?_eval_poly,atan@y
  2802  004002  C0C2  F158         	movff	?_eval_poly+1,atan@y+1
  2803  004006  C0C3  F159         	movff	?_eval_poly+2,atan@y+2
  2804  00400A  C0C4  F15A         	movff	?_eval_poly+3,atan@y+3
  2805  00400E  C160  F0C1         	movff	atan@val_squared,eval_poly@x
  2806  004012  C161  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  2807  004016  C162  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  2808  00401A  C163  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  2809  00401E  0E01               	movlw	low atan@coeff_a
  2810  004020  0100               	movlb	0	; () banked
  2811  004022  6FC5               	movwf	eval_poly@d& (0+255),b
  2812  004024  0E0D               	movlw	high atan@coeff_a
  2813  004026  0100               	movlb	0	; () banked
  2814  004028  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  2815  00402A  0E00               	movlw	0
  2816  00402C  0100               	movlb	0	; () banked
  2817  00402E  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  2818  004030  0E05               	movlw	5
  2819  004032  6FC7               	movwf	eval_poly@n& (0+255),b
  2820  004034  ECDE  F023         	call	_eval_poly	;wreg free
  2821  004038  C0C1  F15B         	movff	?_eval_poly,atan@x
  2822  00403C  C0C2  F15C         	movff	?_eval_poly+1,atan@x+1
  2823  004040  C0C3  F15D         	movff	?_eval_poly+2,atan@x+2
  2824  004044  C0C4  F15E         	movff	?_eval_poly+3,atan@x+3
  2825  004048  C164  F090         	movff	atan@val,___flmul@b
  2826  00404C  C165  F091         	movff	atan@val+1,___flmul@b+1
  2827  004050  C166  F092         	movff	atan@val+2,___flmul@b+2
  2828  004054  C167  F093         	movff	atan@val+3,___flmul@b+3
  2829  004058  C157  F07B         	movff	atan@y,___fldiv@a
  2830  00405C  C158  F07C         	movff	atan@y+1,___fldiv@a+1
  2831  004060  C159  F07D         	movff	atan@y+2,___fldiv@a+2
  2832  004064  C15A  F07E         	movff	atan@y+3,___fldiv@a+3
  2833  004068  C15B  F077         	movff	atan@x,___fldiv@b
  2834  00406C  C15C  F078         	movff	atan@x+1,___fldiv@b+1
  2835  004070  C15D  F079         	movff	atan@x+2,___fldiv@b+2
  2836  004074  C15E  F07A         	movff	atan@x+3,___fldiv@b+3
  2837  004078  ECF2  F018         	call	___fldiv	;wreg free
  2838  00407C  C077  F094         	movff	?___fldiv,___flmul@a
  2839  004080  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  2840  004084  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  2841  004088  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  2842  00408C  ECBA  F014         	call	___flmul	;wreg free
  2843  004090  C090  F164         	movff	?___flmul,atan@val
  2844  004094  C091  F165         	movff	?___flmul+1,atan@val+1
  2845  004098  C092  F166         	movff	?___flmul+2,atan@val+2
  2846  00409C  C093  F167         	movff	?___flmul+3,atan@val+3
  2847  0040A0  0101               	movlb	1	; () banked
  2848  0040A2  515F               	movf	atan@recip& (0+255),w,b
  2849  0040A4  0101               	movlb	1	; () banked
  2850  0040A6  B4D8               	btfsc	status,2,c
  2851  0040A8  D025               	goto	l6020
  2852                           
  2853                           ; BSR set to: 1
  2854  0040AA  C164  F0A9         	movff	atan@val,___flneg@f1
  2855  0040AE  C165  F0AA         	movff	atan@val+1,___flneg@f1+1
  2856  0040B2  C166  F0AB         	movff	atan@val+2,___flneg@f1+2
  2857  0040B6  C167  F0AC         	movff	atan@val+3,___flneg@f1+3
  2858  0040BA  ECE7  F026         	call	___flneg	;wreg free
  2859  0040BE  C0A9  F0AD         	movff	?___flneg,___fladd@b
  2860  0040C2  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  2861  0040C6  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  2862  0040CA  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  2863  0040CE  0EDB               	movlw	219
  2864  0040D0  0100               	movlb	0	; () banked
  2865  0040D2  6FB1               	movwf	___fladd@a& (0+255),b
  2866  0040D4  0E0F               	movlw	15
  2867  0040D6  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  2868  0040D8  0EC9               	movlw	201
  2869  0040DA  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  2870  0040DC  0E3F               	movlw	63
  2871  0040DE  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  2872  0040E0  EC66  F012         	call	___fladd	;wreg free
  2873  0040E4  C0AD  F164         	movff	?___fladd,atan@val
  2874  0040E8  C0AE  F165         	movff	?___fladd+1,atan@val+1
  2875  0040EC  C0AF  F166         	movff	?___fladd+2,atan@val+2
  2876  0040F0  C0B0  F167         	movff	?___fladd+3,atan@val+3
  2877  0040F4                     l6020:
  2878  0040F4  0100               	movlb	0	; () banked
  2879  0040F6  BFD4               	btfsc	(atan@f+3)& (0+255),7,b
  2880  0040F8  D009               	goto	l6024
  2881                           
  2882                           ; BSR set to: 0
  2883  0040FA  C164  F0D1         	movff	atan@val,?_atan
  2884  0040FE  C165  F0D2         	movff	atan@val+1,?_atan+1
  2885  004102  C166  F0D3         	movff	atan@val+2,?_atan+2
  2886  004106  C167  F0D4         	movff	atan@val+3,?_atan+3
  2887  00410A  0012               	return	
  2888  00410C                     l6024:
  2889                           
  2890                           ; BSR set to: 0
  2891  00410C  C164  F0A9         	movff	atan@val,___flneg@f1
  2892  004110  C165  F0AA         	movff	atan@val+1,___flneg@f1+1
  2893  004114  C166  F0AB         	movff	atan@val+2,___flneg@f1+2
  2894  004118  C167  F0AC         	movff	atan@val+3,___flneg@f1+3
  2895  00411C  ECE7  F026         	call	___flneg	;wreg free
  2896  004120  C0A9  F0D1         	movff	?___flneg,?_atan
  2897  004124  C0AA  F0D2         	movff	?___flneg+1,?_atan+1
  2898  004128  C0AB  F0D3         	movff	?___flneg+2,?_atan+2
  2899  00412C  C0AC  F0D4         	movff	?___flneg+3,?_atan+3
  2900  004130  0012               	return	
  2901  004132                     __end_of_atan:
  2902                           	opt stack 0
  2903                           tblptru	equ	0xFF8
  2904                           tblptrh	equ	0xFF7
  2905                           tblptrl	equ	0xFF6
  2906                           tablat	equ	0xFF5
  2907                           postinc0	equ	0xFEE
  2908                           wreg	equ	0xFE8
  2909                           postinc2	equ	0xFDE
  2910                           postdec2	equ	0xFDD
  2911                           status	equ	0xFD8
  2912                           
  2913 ;; *************** function _fabs *****************
  2914 ;; Defined at:
  2915 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  d               4   77[BANK0 ] unsigned char 
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;		None
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  4   77[BANK0 ] unsigned char 
  2922 ;; Registers used:
  2923 ;;		wreg, status,2, status,0, cstack
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2929 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2932 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2933 ;;Total ram usage:        4 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; Hardware stack levels required when called:    5
  2936 ;; This function calls:
  2937 ;;		___flneg
  2938 ;; This function is called by:
  2939 ;;		_asin
  2940 ;;		_atan
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text6
  2945  004D90                     __ptext6:
  2946                           	opt stack 0
  2947  004D90                     _fabs:
  2948                           	opt stack 22
  2949                           
  2950                           ;incstack = 0
  2951  004D90  0100               	movlb	0	; () banked
  2952  004D92  AFB0               	btfss	(fabs@d+3)& (0+255),7,b
  2953  004D94  D013               	goto	l980
  2954                           
  2955                           ; BSR set to: 0
  2956  004D96  C0AD  F0A9         	movff	fabs@d,___flneg@f1
  2957  004D9A  C0AE  F0AA         	movff	fabs@d+1,___flneg@f1+1
  2958  004D9E  C0AF  F0AB         	movff	fabs@d+2,___flneg@f1+2
  2959  004DA2  C0B0  F0AC         	movff	fabs@d+3,___flneg@f1+3
  2960  004DA6  ECE7  F026         	call	___flneg	;wreg free
  2961  004DAA  C0A9  F0AD         	movff	?___flneg,?_fabs
  2962  004DAE  C0AA  F0AE         	movff	?___flneg+1,?_fabs+1
  2963  004DB2  C0AB  F0AF         	movff	?___flneg+2,?_fabs+2
  2964  004DB6  C0AC  F0B0         	movff	?___flneg+3,?_fabs+3
  2965  004DBA  0012               	return	
  2966  004DBC                     l980:
  2967                           
  2968                           ; BSR set to: 0
  2969  004DBC  C0AD  F0AD         	movff	fabs@d,?_fabs
  2970  004DC0  C0AE  F0AE         	movff	fabs@d+1,?_fabs+1
  2971  004DC4  C0AF  F0AF         	movff	fabs@d+2,?_fabs+2
  2972  004DC8  C0B0  F0B0         	movff	fabs@d+3,?_fabs+3
  2973  004DCC  0012               	return		;funcret
  2974  004DCE                     __end_of_fabs:
  2975                           	opt stack 0
  2976                           tblptru	equ	0xFF8
  2977                           tblptrh	equ	0xFF7
  2978                           tblptrl	equ	0xFF6
  2979                           tablat	equ	0xFF5
  2980                           postinc0	equ	0xFEE
  2981                           wreg	equ	0xFE8
  2982                           postinc2	equ	0xFDE
  2983                           postdec2	equ	0xFDD
  2984                           status	equ	0xFD8
  2985                           
  2986 ;; *************** function ___flneg *****************
  2987 ;; Defined at:
  2988 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;  f1              4   73[BANK0 ] unsigned char 
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;		None
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  4   73[BANK0 ] unsigned char 
  2995 ;; Registers used:
  2996 ;;		wreg, status,2, status,0
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3002 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3005 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3006 ;;Total ram usage:        4 bytes
  3007 ;; Hardware stack levels used:    1
  3008 ;; Hardware stack levels required when called:    4
  3009 ;; This function calls:
  3010 ;;		Nothing
  3011 ;; This function is called by:
  3012 ;;		_parallelo
  3013 ;;		_asin
  3014 ;;		_atan
  3015 ;;		_fabs
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text7
  3020  004DCE                     __ptext7:
  3021                           	opt stack 0
  3022  004DCE                     ___flneg:
  3023                           	opt stack 22
  3024                           
  3025                           ;incstack = 0
  3026  004DCE  0100               	movlb	0	; () banked
  3027  004DD0  51A9               	movf	___flneg@f1& (0+255),w,b
  3028  004DD2  0100               	movlb	0	; () banked
  3029  004DD4  11AA               	iorwf	(___flneg@f1+1)& (0+255),w,b
  3030  004DD6  0100               	movlb	0	; () banked
  3031  004DD8  11AB               	iorwf	(___flneg@f1+2)& (0+255),w,b
  3032  004DDA  0100               	movlb	0	; () banked
  3033  004DDC  11AC               	iorwf	(___flneg@f1+3)& (0+255),w,b
  3034  004DDE  B4D8               	btfsc	status,2,c
  3035  004DE0  D009               	goto	l5726
  3036                           
  3037                           ; BSR set to: 0
  3038  004DE2  0E00               	movlw	0
  3039  004DE4  0100               	movlb	0	; () banked
  3040  004DE6  1BA9               	xorwf	___flneg@f1& (0+255),f,b
  3041  004DE8  0E00               	movlw	0
  3042  004DEA  1BAA               	xorwf	(___flneg@f1+1)& (0+255),f,b
  3043  004DEC  0E00               	movlw	0
  3044  004DEE  1BAB               	xorwf	(___flneg@f1+2)& (0+255),f,b
  3045  004DF0  0E80               	movlw	128
  3046  004DF2  1BAC               	xorwf	(___flneg@f1+3)& (0+255),f,b
  3047  004DF4                     l5726:
  3048                           
  3049                           ; BSR set to: 0
  3050  004DF4  C0A9  F0A9         	movff	___flneg@f1,?___flneg
  3051  004DF8  C0AA  F0AA         	movff	___flneg@f1+1,?___flneg+1
  3052  004DFC  C0AB  F0AB         	movff	___flneg@f1+2,?___flneg+2
  3053  004E00  C0AC  F0AC         	movff	___flneg@f1+3,?___flneg+3
  3054  004E04  0012               	return	
  3055  004E06                     __end_of___flneg:
  3056                           	opt stack 0
  3057                           tblptru	equ	0xFF8
  3058                           tblptrh	equ	0xFF7
  3059                           tblptrl	equ	0xFF6
  3060                           tablat	equ	0xFF5
  3061                           postinc0	equ	0xFEE
  3062                           wreg	equ	0xFE8
  3063                           postinc2	equ	0xFDE
  3064                           postdec2	equ	0xFDD
  3065                           status	equ	0xFD8
  3066                           
  3067 ;; *************** function _eval_poly *****************
  3068 ;; Defined at:
  3069 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  x               4   97[BANK0 ] unsigned char 
  3072 ;;  d               2  101[BANK0 ] PTR const 
  3073 ;;		 -> atan@coeff_a(24), atan@coeff_b(20), 
  3074 ;;  n               2  103[BANK0 ] int 
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;  res             4  109[BANK0 ] int 
  3077 ;; Return value:  Size  Location     Type
  3078 ;;                  4   97[BANK0 ] int 
  3079 ;; Registers used:
  3080 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3081 ;; Tracked objects:
  3082 ;;		On entry : 0/0
  3083 ;;		On exit  : 0/0
  3084 ;;		Unchanged: 0/0
  3085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3086 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3087 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3088 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3089 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3090 ;;Total ram usage:       16 bytes
  3091 ;; Hardware stack levels used:    1
  3092 ;; Hardware stack levels required when called:    5
  3093 ;; This function calls:
  3094 ;;		___fladd
  3095 ;;		___flmul
  3096 ;; This function is called by:
  3097 ;;		_atan
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           	psect	text8
  3102  0047BC                     __ptext8:
  3103                           	opt stack 0
  3104  0047BC                     _eval_poly:
  3105                           	opt stack 21
  3106                           
  3107                           ; BSR set to: 0
  3108                           ;incstack = 0
  3109  0047BC  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  3110  0047C0  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  3111  0047C4  0100               	movlb	0	; () banked
  3112  0047C6  90D8               	bcf	status,0,c
  3113  0047C8  37C9               	rlcf	??_eval_poly& (0+255),f,b
  3114  0047CA  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3115  0047CC  0100               	movlb	0	; () banked
  3116  0047CE  90D8               	bcf	status,0,c
  3117  0047D0  37C9               	rlcf	??_eval_poly& (0+255),f,b
  3118  0047D2  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3119  0047D4  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  3120  0047D8  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  3121  0047DC  0100               	movlb	0	; () banked
  3122  0047DE  51C9               	movf	??_eval_poly& (0+255),w,b
  3123  0047E0  0100               	movlb	0	; () banked
  3124  0047E2  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  3125  0047E4  0100               	movlb	0	; () banked
  3126  0047E6  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  3127  0047E8  0100               	movlb	0	; () banked
  3128  0047EA  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  3129  0047EC  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  3130  0047F0  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  3131  0047F4                     	if	0	;tblptru may be non-zero
  3132  0047F4                     	endif
  3133  0047F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3134  0047F4  0E00               	movlw	low (__mediumconst shr (0+16))
  3135  0047F6  6EF8               	movwf	tblptru,c
  3136  0047F8                     	endif
  3137  0047F8  0009               	tblrd		*+
  3138  0047FA  CFF5 F0CD          	movff	tablat,eval_poly@res
  3139  0047FE  0009               	tblrd		*+
  3140  004800  CFF5 F0CE          	movff	tablat,eval_poly@res+1
  3141  004804  0009               	tblrd		*+
  3142  004806  CFF5 F0CF          	movff	tablat,eval_poly@res+2
  3143  00480A  000A               	tblrd		*-
  3144  00480C  CFF5 F0D0          	movff	tablat,eval_poly@res+3
  3145  004810  D052               	goto	l5876
  3146  004812                     l5874:
  3147                           
  3148                           ; BSR set to: 0
  3149  004812  C0CD  F094         	movff	eval_poly@res,___flmul@a
  3150  004816  C0CE  F095         	movff	eval_poly@res+1,___flmul@a+1
  3151  00481A  C0CF  F096         	movff	eval_poly@res+2,___flmul@a+2
  3152  00481E  C0D0  F097         	movff	eval_poly@res+3,___flmul@a+3
  3153  004822  C0C1  F090         	movff	eval_poly@x,___flmul@b
  3154  004826  C0C2  F091         	movff	eval_poly@x+1,___flmul@b+1
  3155  00482A  C0C3  F092         	movff	eval_poly@x+2,___flmul@b+2
  3156  00482E  C0C4  F093         	movff	eval_poly@x+3,___flmul@b+3
  3157  004832  ECBA  F014         	call	___flmul	;wreg free
  3158  004836  C090  F0AD         	movff	?___flmul,___fladd@b
  3159  00483A  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  3160  00483E  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  3161  004842  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  3162  004846  0100               	movlb	0	; () banked
  3163  004848  07C7               	decf	eval_poly@n& (0+255),f,b
  3164  00484A  A0D8               	btfss	status,0,c
  3165  00484C  07C8               	decf	(eval_poly@n+1)& (0+255),f,b
  3166  00484E  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  3167  004852  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  3168  004856  0100               	movlb	0	; () banked
  3169  004858  90D8               	bcf	status,0,c
  3170  00485A  37C9               	rlcf	??_eval_poly& (0+255),f,b
  3171  00485C  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3172  00485E  0100               	movlb	0	; () banked
  3173  004860  90D8               	bcf	status,0,c
  3174  004862  37C9               	rlcf	??_eval_poly& (0+255),f,b
  3175  004864  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3176  004866  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  3177  00486A  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  3178  00486E  0100               	movlb	0	; () banked
  3179  004870  51C9               	movf	??_eval_poly& (0+255),w,b
  3180  004872  0100               	movlb	0	; () banked
  3181  004874  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  3182  004876  0100               	movlb	0	; () banked
  3183  004878  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  3184  00487A  0100               	movlb	0	; () banked
  3185  00487C  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  3186  00487E  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  3187  004882  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  3188  004886                     	if	0	;tblptru may be non-zero
  3189  004886                     	endif
  3190  004886                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3191  004886  0E00               	movlw	low (__mediumconst shr (0+16))
  3192  004888  6EF8               	movwf	tblptru,c
  3193  00488A                     	endif
  3194  00488A  0009               	tblrd		*+
  3195  00488C  CFF5 F0B1          	movff	tablat,___fladd@a
  3196  004890  0009               	tblrd		*+
  3197  004892  CFF5 F0B2          	movff	tablat,___fladd@a+1
  3198  004896  0009               	tblrd		*+
  3199  004898  CFF5 F0B3          	movff	tablat,___fladd@a+2
  3200  00489C  000A               	tblrd		*-
  3201  00489E  CFF5 F0B4          	movff	tablat,___fladd@a+3
  3202  0048A2  EC66  F012         	call	___fladd	;wreg free
  3203  0048A6  C0AD  F0CD         	movff	?___fladd,eval_poly@res
  3204  0048AA  C0AE  F0CE         	movff	?___fladd+1,eval_poly@res+1
  3205  0048AE  C0AF  F0CF         	movff	?___fladd+2,eval_poly@res+2
  3206  0048B2  C0B0  F0D0         	movff	?___fladd+3,eval_poly@res+3
  3207  0048B6                     l5876:
  3208  0048B6  0100               	movlb	0	; () banked
  3209  0048B8  51C7               	movf	eval_poly@n& (0+255),w,b
  3210  0048BA  0100               	movlb	0	; () banked
  3211  0048BC  11C8               	iorwf	(eval_poly@n+1)& (0+255),w,b
  3212  0048BE  A4D8               	btfss	status,2,c
  3213  0048C0  D7A8               	goto	l5874
  3214                           
  3215                           ; BSR set to: 0
  3216  0048C2  C0CD  F0C1         	movff	eval_poly@res,?_eval_poly
  3217  0048C6  C0CE  F0C2         	movff	eval_poly@res+1,?_eval_poly+1
  3218  0048CA  C0CF  F0C3         	movff	eval_poly@res+2,?_eval_poly+2
  3219  0048CE  C0D0  F0C4         	movff	eval_poly@res+3,?_eval_poly+3
  3220                           
  3221                           ; BSR set to: 0
  3222  0048D2  0012               	return		;funcret
  3223  0048D4                     __end_of_eval_poly:
  3224                           	opt stack 0
  3225                           tblptru	equ	0xFF8
  3226                           tblptrh	equ	0xFF7
  3227                           tblptrl	equ	0xFF6
  3228                           tablat	equ	0xFF5
  3229                           postinc0	equ	0xFEE
  3230                           wreg	equ	0xFE8
  3231                           postinc2	equ	0xFDE
  3232                           postdec2	equ	0xFDD
  3233                           status	equ	0xFD8
  3234                           
  3235 ;; *************** function ___flmul *****************
  3236 ;; Defined at:
  3237 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  b               4   48[BANK0 ] int 
  3240 ;;  a               4   52[BANK0 ] int 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;  prod            4   67[BANK0 ] struct .
  3243 ;;  grs             4   62[BANK0 ] unsigned long 
  3244 ;;  temp            2   71[BANK0 ] struct .
  3245 ;;  bexp            1   66[BANK0 ] unsigned char 
  3246 ;;  aexp            1   61[BANK0 ] unsigned char 
  3247 ;;  sign            1   60[BANK0 ] unsigned char 
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  4   48[BANK0 ] unsigned char 
  3250 ;; Registers used:
  3251 ;;		wreg, status,2, status,0, prodl, prodh
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3257 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3258 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3259 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3260 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3261 ;;Total ram usage:       25 bytes
  3262 ;; Hardware stack levels used:    1
  3263 ;; Hardware stack levels required when called:    4
  3264 ;; This function calls:
  3265 ;;		Nothing
  3266 ;; This function is called by:
  3267 ;;		_parallelo
  3268 ;;		_asin
  3269 ;;		_atan
  3270 ;;		_eval_poly
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           	psect	text9
  3275  002974                     __ptext9:
  3276                           	opt stack 0
  3277  002974                     ___flmul:
  3278                           	opt stack 21
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;incstack = 0
  3282  002974  0100               	movlb	0	; () banked
  3283  002976  5193               	movf	(___flmul@b+3)& (0+255),w,b
  3284  002978  0B80               	andlw	128
  3285  00297A  0100               	movlb	0	; () banked
  3286  00297C  6F9C               	movwf	___flmul@sign& (0+255),b
  3287  00297E  0100               	movlb	0	; () banked
  3288  002980  5193               	movf	(___flmul@b+3)& (0+255),w,b
  3289  002982  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  3290  002984  0100               	movlb	0	; () banked
  3291  002986  6FA2               	movwf	___flmul@bexp& (0+255),b
  3292                           
  3293                           ; BSR set to: 0
  3294  002988  0100               	movlb	0	; () banked
  3295  00298A  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  3296  00298C  D002               	goto	l5598
  3297                           
  3298                           ; BSR set to: 0
  3299  00298E  0100               	movlb	0	; () banked
  3300  002990  81A2               	bsf	___flmul@bexp& (0+255),0,b
  3301  002992                     l5598:
  3302                           
  3303                           ; BSR set to: 0
  3304  002992  0100               	movlb	0	; () banked
  3305  002994  51A2               	movf	___flmul@bexp& (0+255),w,b
  3306  002996  0100               	movlb	0	; () banked
  3307  002998  B4D8               	btfsc	status,2,c
  3308  00299A  D010               	goto	l5606
  3309                           
  3310                           ; BSR set to: 0
  3311  00299C  0100               	movlb	0	; () banked
  3312  00299E  29A2               	incf	___flmul@bexp& (0+255),w,b
  3313  0029A0  A4D8               	btfss	status,2,c
  3314  0029A2  D009               	goto	l5604
  3315                           
  3316                           ; BSR set to: 0
  3317  0029A4  0E00               	movlw	0
  3318  0029A6  0100               	movlb	0	; () banked
  3319  0029A8  6F90               	movwf	___flmul@b& (0+255),b
  3320  0029AA  0E00               	movlw	0
  3321  0029AC  6F91               	movwf	(___flmul@b+1)& (0+255),b
  3322  0029AE  0E00               	movlw	0
  3323  0029B0  6F92               	movwf	(___flmul@b+2)& (0+255),b
  3324  0029B2  0E00               	movlw	0
  3325  0029B4  6F93               	movwf	(___flmul@b+3)& (0+255),b
  3326  0029B6                     l5604:
  3327                           
  3328                           ; BSR set to: 0
  3329  0029B6  0100               	movlb	0	; () banked
  3330  0029B8  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  3331  0029BA  D009               	goto	l5608
  3332  0029BC                     l5606:
  3333                           
  3334                           ; BSR set to: 0
  3335  0029BC  0E00               	movlw	0
  3336  0029BE  0100               	movlb	0	; () banked
  3337  0029C0  6F90               	movwf	___flmul@b& (0+255),b
  3338  0029C2  0E00               	movlw	0
  3339  0029C4  6F91               	movwf	(___flmul@b+1)& (0+255),b
  3340  0029C6  0E00               	movlw	0
  3341  0029C8  6F92               	movwf	(___flmul@b+2)& (0+255),b
  3342  0029CA  0E00               	movlw	0
  3343  0029CC  6F93               	movwf	(___flmul@b+3)& (0+255),b
  3344  0029CE                     l5608:
  3345                           
  3346                           ; BSR set to: 0
  3347  0029CE  0100               	movlb	0	; () banked
  3348  0029D0  5197               	movf	(___flmul@a+3)& (0+255),w,b
  3349  0029D2  0B80               	andlw	128
  3350  0029D4  0100               	movlb	0	; () banked
  3351  0029D6  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  3352                           
  3353                           ; BSR set to: 0
  3354  0029D8  0100               	movlb	0	; () banked
  3355  0029DA  5197               	movf	(___flmul@a+3)& (0+255),w,b
  3356  0029DC  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  3357  0029DE  0100               	movlb	0	; () banked
  3358  0029E0  6F9D               	movwf	___flmul@aexp& (0+255),b
  3359                           
  3360                           ; BSR set to: 0
  3361  0029E2  0100               	movlb	0	; () banked
  3362  0029E4  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  3363  0029E6  D002               	goto	l5616
  3364                           
  3365                           ; BSR set to: 0
  3366  0029E8  0100               	movlb	0	; () banked
  3367  0029EA  819D               	bsf	___flmul@aexp& (0+255),0,b
  3368  0029EC                     l5616:
  3369                           
  3370                           ; BSR set to: 0
  3371  0029EC  0100               	movlb	0	; () banked
  3372  0029EE  519D               	movf	___flmul@aexp& (0+255),w,b
  3373  0029F0  0100               	movlb	0	; () banked
  3374  0029F2  B4D8               	btfsc	status,2,c
  3375  0029F4  D010               	goto	l5624
  3376                           
  3377                           ; BSR set to: 0
  3378  0029F6  0100               	movlb	0	; () banked
  3379  0029F8  299D               	incf	___flmul@aexp& (0+255),w,b
  3380  0029FA  A4D8               	btfss	status,2,c
  3381  0029FC  D009               	goto	l5622
  3382                           
  3383                           ; BSR set to: 0
  3384  0029FE  0E00               	movlw	0
  3385  002A00  0100               	movlb	0	; () banked
  3386  002A02  6F94               	movwf	___flmul@a& (0+255),b
  3387  002A04  0E00               	movlw	0
  3388  002A06  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3389  002A08  0E00               	movlw	0
  3390  002A0A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3391  002A0C  0E00               	movlw	0
  3392  002A0E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3393  002A10                     l5622:
  3394                           
  3395                           ; BSR set to: 0
  3396  002A10  0100               	movlb	0	; () banked
  3397  002A12  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  3398  002A14  D009               	goto	l1310
  3399  002A16                     l5624:
  3400                           
  3401                           ; BSR set to: 0
  3402  002A16  0E00               	movlw	0
  3403  002A18  0100               	movlb	0	; () banked
  3404  002A1A  6F94               	movwf	___flmul@a& (0+255),b
  3405  002A1C  0E00               	movlw	0
  3406  002A1E  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3407  002A20  0E00               	movlw	0
  3408  002A22  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3409  002A24  0E00               	movlw	0
  3410  002A26  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3411  002A28                     l1310:
  3412                           
  3413                           ; BSR set to: 0
  3414  002A28  0100               	movlb	0	; () banked
  3415  002A2A  519D               	movf	___flmul@aexp& (0+255),w,b
  3416  002A2C  0100               	movlb	0	; () banked
  3417  002A2E  B4D8               	btfsc	status,2,c
  3418  002A30  D005               	goto	l5628
  3419                           
  3420                           ; BSR set to: 0
  3421  002A32  0100               	movlb	0	; () banked
  3422  002A34  51A2               	movf	___flmul@bexp& (0+255),w,b
  3423  002A36  0100               	movlb	0	; () banked
  3424  002A38  A4D8               	btfss	status,2,c
  3425  002A3A  D00A               	goto	l5632
  3426  002A3C                     l5628:
  3427                           
  3428                           ; BSR set to: 0
  3429  002A3C  0E00               	movlw	0
  3430  002A3E  0100               	movlb	0	; () banked
  3431  002A40  6F90               	movwf	?___flmul& (0+255),b
  3432  002A42  0E00               	movlw	0
  3433  002A44  6F91               	movwf	(?___flmul+1)& (0+255),b
  3434  002A46  0E00               	movlw	0
  3435  002A48  6F92               	movwf	(?___flmul+2)& (0+255),b
  3436  002A4A  0E00               	movlw	0
  3437  002A4C  6F93               	movwf	(?___flmul+3)& (0+255),b
  3438                           
  3439                           ; BSR set to: 0
  3440  002A4E  0012               	return	
  3441  002A50                     l5632:
  3442                           
  3443                           ; BSR set to: 0
  3444  002A50  0100               	movlb	0	; () banked
  3445  002A52  5196               	movf	(___flmul@a+2)& (0+255),w,b
  3446  002A54  0100               	movlb	0	; () banked
  3447  002A56  0390               	mulwf	___flmul@b& (0+255),b
  3448  002A58  CFF3 F0A7          	movff	prodl,___flmul@temp
  3449  002A5C  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3450                           
  3451                           ; BSR set to: 0
  3452  002A60  0100               	movlb	0	; () banked
  3453  002A62  51A7               	movf	___flmul@temp& (0+255),w,b
  3454  002A64  0100               	movlb	0	; () banked
  3455  002A66  6F9E               	movwf	___flmul@grs& (0+255),b
  3456  002A68  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  3457  002A6A  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  3458  002A6C  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  3459                           
  3460                           ; BSR set to: 0
  3461  002A6E  0100               	movlb	0	; () banked
  3462  002A70  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3463  002A72  0100               	movlb	0	; () banked
  3464  002A74  6FA3               	movwf	___flmul@prod& (0+255),b
  3465  002A76  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  3466  002A78  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  3467  002A7A  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  3468  002A7C  0100               	movlb	0	; () banked
  3469  002A7E  5195               	movf	(___flmul@a+1)& (0+255),w,b
  3470  002A80  0100               	movlb	0	; () banked
  3471  002A82  0391               	mulwf	(___flmul@b+1)& (0+255),b
  3472  002A84  CFF3 F0A7          	movff	prodl,___flmul@temp
  3473  002A88  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3474                           
  3475                           ; BSR set to: 0
  3476  002A8C  0100               	movlb	0	; () banked
  3477  002A8E  51A7               	movf	___flmul@temp& (0+255),w,b
  3478  002A90  0100               	movlb	0	; () banked
  3479  002A92  279E               	addwf	___flmul@grs& (0+255),f,b
  3480  002A94  0E00               	movlw	0
  3481  002A96  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3482  002A98  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3483  002A9A  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3484                           
  3485                           ; BSR set to: 0
  3486  002A9C  0100               	movlb	0	; () banked
  3487  002A9E  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3488  002AA0  0100               	movlb	0	; () banked
  3489  002AA2  27A3               	addwf	___flmul@prod& (0+255),f,b
  3490  002AA4  0E00               	movlw	0
  3491  002AA6  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3492  002AA8  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3493  002AAA  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3494  002AAC  0100               	movlb	0	; () banked
  3495  002AAE  5194               	movf	___flmul@a& (0+255),w,b
  3496  002AB0  0100               	movlb	0	; () banked
  3497  002AB2  0392               	mulwf	(___flmul@b+2)& (0+255),b
  3498  002AB4  CFF3 F0A7          	movff	prodl,___flmul@temp
  3499  002AB8  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3500                           
  3501                           ; BSR set to: 0
  3502  002ABC  0100               	movlb	0	; () banked
  3503  002ABE  51A7               	movf	___flmul@temp& (0+255),w,b
  3504  002AC0  0100               	movlb	0	; () banked
  3505  002AC2  279E               	addwf	___flmul@grs& (0+255),f,b
  3506  002AC4  0E00               	movlw	0
  3507  002AC6  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3508  002AC8  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3509  002ACA  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3510                           
  3511                           ; BSR set to: 0
  3512  002ACC  0100               	movlb	0	; () banked
  3513  002ACE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3514  002AD0  0100               	movlb	0	; () banked
  3515  002AD2  27A3               	addwf	___flmul@prod& (0+255),f,b
  3516  002AD4  0E00               	movlw	0
  3517  002AD6  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3518  002AD8  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3519  002ADA  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3520                           
  3521                           ; BSR set to: 0
  3522  002ADC  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  3523  002AE0  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  3524  002AE4  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  3525  002AE8  0100               	movlb	0	; () banked
  3526  002AEA  6B9E               	clrf	___flmul@grs& (0+255),b
  3527                           
  3528                           ; BSR set to: 0
  3529  002AEC  0100               	movlb	0	; () banked
  3530  002AEE  5194               	movf	___flmul@a& (0+255),w,b
  3531  002AF0  0100               	movlb	0	; () banked
  3532  002AF2  0391               	mulwf	(___flmul@b+1)& (0+255),b
  3533  002AF4  CFF3 F0A7          	movff	prodl,___flmul@temp
  3534  002AF8  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3535                           
  3536                           ; BSR set to: 0
  3537  002AFC  0100               	movlb	0	; () banked
  3538  002AFE  51A7               	movf	___flmul@temp& (0+255),w,b
  3539  002B00  0100               	movlb	0	; () banked
  3540  002B02  279E               	addwf	___flmul@grs& (0+255),f,b
  3541  002B04  0100               	movlb	0	; () banked
  3542  002B06  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3543  002B08  0100               	movlb	0	; () banked
  3544  002B0A  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3545  002B0C  0E00               	movlw	0
  3546  002B0E  0100               	movlb	0	; () banked
  3547  002B10  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3548  002B12  0E00               	movlw	0
  3549  002B14  0100               	movlb	0	; () banked
  3550  002B16  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3551                           
  3552                           ; BSR set to: 0
  3553  002B18  0100               	movlb	0	; () banked
  3554  002B1A  5195               	movf	(___flmul@a+1)& (0+255),w,b
  3555  002B1C  0100               	movlb	0	; () banked
  3556  002B1E  0390               	mulwf	___flmul@b& (0+255),b
  3557  002B20  CFF3 F0A7          	movff	prodl,___flmul@temp
  3558  002B24  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3559                           
  3560                           ; BSR set to: 0
  3561  002B28  0100               	movlb	0	; () banked
  3562  002B2A  51A7               	movf	___flmul@temp& (0+255),w,b
  3563  002B2C  0100               	movlb	0	; () banked
  3564  002B2E  279E               	addwf	___flmul@grs& (0+255),f,b
  3565  002B30  0100               	movlb	0	; () banked
  3566  002B32  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3567  002B34  0100               	movlb	0	; () banked
  3568  002B36  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3569  002B38  0E00               	movlw	0
  3570  002B3A  0100               	movlb	0	; () banked
  3571  002B3C  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3572  002B3E  0E00               	movlw	0
  3573  002B40  0100               	movlb	0	; () banked
  3574  002B42  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3575                           
  3576                           ; BSR set to: 0
  3577  002B44  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  3578  002B48  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  3579  002B4C  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  3580  002B50  0100               	movlb	0	; () banked
  3581  002B52  6B9E               	clrf	___flmul@grs& (0+255),b
  3582  002B54  0100               	movlb	0	; () banked
  3583  002B56  5194               	movf	___flmul@a& (0+255),w,b
  3584  002B58  0100               	movlb	0	; () banked
  3585  002B5A  0390               	mulwf	___flmul@b& (0+255),b
  3586  002B5C  CFF3 F0A7          	movff	prodl,___flmul@temp
  3587  002B60  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3588                           
  3589                           ; BSR set to: 0
  3590  002B64  0100               	movlb	0	; () banked
  3591  002B66  51A7               	movf	___flmul@temp& (0+255),w,b
  3592  002B68  0100               	movlb	0	; () banked
  3593  002B6A  279E               	addwf	___flmul@grs& (0+255),f,b
  3594  002B6C  0100               	movlb	0	; () banked
  3595  002B6E  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3596  002B70  0100               	movlb	0	; () banked
  3597  002B72  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3598  002B74  0E00               	movlw	0
  3599  002B76  0100               	movlb	0	; () banked
  3600  002B78  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3601  002B7A  0E00               	movlw	0
  3602  002B7C  0100               	movlb	0	; () banked
  3603  002B7E  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3604                           
  3605                           ; BSR set to: 0
  3606  002B80  0100               	movlb	0	; () banked
  3607  002B82  5196               	movf	(___flmul@a+2)& (0+255),w,b
  3608  002B84  0100               	movlb	0	; () banked
  3609  002B86  0391               	mulwf	(___flmul@b+1)& (0+255),b
  3610  002B88  CFF3 F0A7          	movff	prodl,___flmul@temp
  3611  002B8C  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3612  002B90  0100               	movlb	0	; () banked
  3613  002B92  51A7               	movf	___flmul@temp& (0+255),w,b
  3614  002B94  0100               	movlb	0	; () banked
  3615  002B96  27A3               	addwf	___flmul@prod& (0+255),f,b
  3616  002B98  0100               	movlb	0	; () banked
  3617  002B9A  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3618  002B9C  0100               	movlb	0	; () banked
  3619  002B9E  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3620  002BA0  0E00               	movlw	0
  3621  002BA2  0100               	movlb	0	; () banked
  3622  002BA4  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3623  002BA6  0E00               	movlw	0
  3624  002BA8  0100               	movlb	0	; () banked
  3625  002BAA  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3626                           
  3627                           ; BSR set to: 0
  3628  002BAC  0100               	movlb	0	; () banked
  3629  002BAE  5195               	movf	(___flmul@a+1)& (0+255),w,b
  3630  002BB0  0100               	movlb	0	; () banked
  3631  002BB2  0392               	mulwf	(___flmul@b+2)& (0+255),b
  3632  002BB4  CFF3 F0A7          	movff	prodl,___flmul@temp
  3633  002BB8  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3634                           
  3635                           ; BSR set to: 0
  3636  002BBC  0100               	movlb	0	; () banked
  3637  002BBE  51A7               	movf	___flmul@temp& (0+255),w,b
  3638  002BC0  0100               	movlb	0	; () banked
  3639  002BC2  27A3               	addwf	___flmul@prod& (0+255),f,b
  3640  002BC4  0100               	movlb	0	; () banked
  3641  002BC6  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3642  002BC8  0100               	movlb	0	; () banked
  3643  002BCA  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3644  002BCC  0E00               	movlw	0
  3645  002BCE  0100               	movlb	0	; () banked
  3646  002BD0  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3647  002BD2  0E00               	movlw	0
  3648  002BD4  0100               	movlb	0	; () banked
  3649  002BD6  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3650  002BD8  0100               	movlb	0	; () banked
  3651  002BDA  5196               	movf	(___flmul@a+2)& (0+255),w,b
  3652  002BDC  0100               	movlb	0	; () banked
  3653  002BDE  0392               	mulwf	(___flmul@b+2)& (0+255),b
  3654  002BE0  CFF3 F0A7          	movff	prodl,___flmul@temp
  3655  002BE4  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3656                           
  3657                           ; BSR set to: 0
  3658  002BE8  0100               	movlb	0	; () banked
  3659  002BEA  51A7               	movf	___flmul@temp& (0+255),w,b
  3660  002BEC  0100               	movlb	0	; () banked
  3661  002BEE  6F98               	movwf	??___flmul& (0+255),b
  3662  002BF0  0100               	movlb	0	; () banked
  3663  002BF2  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3664  002BF4  0100               	movlb	0	; () banked
  3665  002BF6  6F99               	movwf	(??___flmul+1)& (0+255),b
  3666  002BF8  0100               	movlb	0	; () banked
  3667  002BFA  6B9A               	clrf	(??___flmul+2)& (0+255),b
  3668  002BFC  0100               	movlb	0	; () banked
  3669  002BFE  6B9B               	clrf	(??___flmul+3)& (0+255),b
  3670  002C00  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  3671  002C04  C099  F09A         	movff	??___flmul+1,??___flmul+2
  3672  002C08  C098  F099         	movff	??___flmul,??___flmul+1
  3673  002C0C  0100               	movlb	0	; () banked
  3674  002C0E  6B98               	clrf	??___flmul& (0+255),b
  3675  002C10  0100               	movlb	0	; () banked
  3676  002C12  5198               	movf	??___flmul& (0+255),w,b
  3677  002C14  0100               	movlb	0	; () banked
  3678  002C16  27A3               	addwf	___flmul@prod& (0+255),f,b
  3679  002C18  0100               	movlb	0	; () banked
  3680  002C1A  5199               	movf	(??___flmul+1)& (0+255),w,b
  3681  002C1C  0100               	movlb	0	; () banked
  3682  002C1E  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3683  002C20  0100               	movlb	0	; () banked
  3684  002C22  519A               	movf	(??___flmul+2)& (0+255),w,b
  3685  002C24  0100               	movlb	0	; () banked
  3686  002C26  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3687  002C28  0100               	movlb	0	; () banked
  3688  002C2A  519B               	movf	(??___flmul+3)& (0+255),w,b
  3689  002C2C  0100               	movlb	0	; () banked
  3690  002C2E  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3691                           
  3692                           ; BSR set to: 0
  3693  002C30  C09E  F098         	movff	___flmul@grs,??___flmul
  3694  002C34  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  3695  002C38  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  3696  002C3C  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  3697  002C40  0E19               	movlw	25
  3698  002C42  D006               	goto	u7180
  3699  002C44                     u7185:
  3700  002C44  0100               	movlb	0	; () banked
  3701  002C46  90D8               	bcf	status,0,c
  3702  002C48  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  3703  002C4A  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  3704  002C4C  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  3705  002C4E  3398               	rrcf	??___flmul& (0+255),f,b
  3706  002C50                     u7180:
  3707  002C50  2EE8               	decfsz	wreg,f,c
  3708  002C52  D7F8               	goto	u7185
  3709  002C54  0100               	movlb	0	; () banked
  3710  002C56  5198               	movf	??___flmul& (0+255),w,b
  3711  002C58  0100               	movlb	0	; () banked
  3712  002C5A  27A3               	addwf	___flmul@prod& (0+255),f,b
  3713  002C5C  0100               	movlb	0	; () banked
  3714  002C5E  5199               	movf	(??___flmul+1)& (0+255),w,b
  3715  002C60  0100               	movlb	0	; () banked
  3716  002C62  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3717  002C64  0100               	movlb	0	; () banked
  3718  002C66  519A               	movf	(??___flmul+2)& (0+255),w,b
  3719  002C68  0100               	movlb	0	; () banked
  3720  002C6A  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3721  002C6C  0100               	movlb	0	; () banked
  3722  002C6E  519B               	movf	(??___flmul+3)& (0+255),w,b
  3723  002C70  0100               	movlb	0	; () banked
  3724  002C72  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3725                           
  3726                           ; BSR set to: 0
  3727  002C74  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  3728  002C78  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  3729  002C7C  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  3730  002C80  0100               	movlb	0	; () banked
  3731  002C82  6B9E               	clrf	___flmul@grs& (0+255),b
  3732                           
  3733                           ; BSR set to: 0
  3734  002C84  0100               	movlb	0	; () banked
  3735  002C86  519D               	movf	___flmul@aexp& (0+255),w,b
  3736  002C88  C0A2  F098         	movff	___flmul@bexp,??___flmul
  3737  002C8C  0100               	movlb	0	; () banked
  3738  002C8E  6B99               	clrf	(??___flmul+1)& (0+255),b
  3739  002C90  0100               	movlb	0	; () banked
  3740  002C92  2798               	addwf	??___flmul& (0+255),f,b
  3741  002C94  0E00               	movlw	0
  3742  002C96  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  3743  002C98  0E82               	movlw	130
  3744  002C9A  0100               	movlb	0	; () banked
  3745  002C9C  2598               	addwf	??___flmul& (0+255),w,b
  3746  002C9E  0100               	movlb	0	; () banked
  3747  002CA0  6FA7               	movwf	___flmul@temp& (0+255),b
  3748  002CA2  0EFF               	movlw	255
  3749  002CA4  0100               	movlb	0	; () banked
  3750  002CA6  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  3751  002CA8  0100               	movlb	0	; () banked
  3752  002CAA  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  3753  002CAC  D015               	goto	l5680
  3754  002CAE                     l5674:
  3755                           
  3756                           ; BSR set to: 0
  3757  002CAE  0100               	movlb	0	; () banked
  3758  002CB0  90D8               	bcf	status,0,c
  3759  002CB2  37A3               	rlcf	___flmul@prod& (0+255),f,b
  3760  002CB4  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  3761  002CB6  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  3762  002CB8  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  3763                           
  3764                           ; BSR set to: 0
  3765  002CBA  0100               	movlb	0	; () banked
  3766  002CBC  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  3767  002CBE  D002               	goto	l1317
  3768                           
  3769                           ; BSR set to: 0
  3770  002CC0  0100               	movlb	0	; () banked
  3771  002CC2  81A3               	bsf	___flmul@prod& (0+255),0,b
  3772  002CC4                     l1317:
  3773                           
  3774                           ; BSR set to: 0
  3775  002CC4  0100               	movlb	0	; () banked
  3776  002CC6  90D8               	bcf	status,0,c
  3777  002CC8  379E               	rlcf	___flmul@grs& (0+255),f,b
  3778  002CCA  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  3779  002CCC  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  3780  002CCE  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  3781  002CD0  0100               	movlb	0	; () banked
  3782  002CD2  07A7               	decf	___flmul@temp& (0+255),f,b
  3783  002CD4  A0D8               	btfss	status,0,c
  3784  002CD6  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  3785  002CD8                     l5680:
  3786                           
  3787                           ; BSR set to: 0
  3788  002CD8  0100               	movlb	0	; () banked
  3789  002CDA  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  3790  002CDC  D7E8               	goto	l5674
  3791                           
  3792                           ; BSR set to: 0
  3793                           
  3794                           ; BSR set to: 0
  3795  002CDE  0E00               	movlw	0
  3796  002CE0  0100               	movlb	0	; () banked
  3797  002CE2  6F9D               	movwf	___flmul@aexp& (0+255),b
  3798                           
  3799                           ; BSR set to: 0
  3800  002CE4  0100               	movlb	0	; () banked
  3801  002CE6  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  3802  002CE8  D024               	goto	l1319
  3803                           
  3804                           ; BSR set to: 0
  3805  002CEA  0EFF               	movlw	255
  3806  002CEC  0100               	movlb	0	; () banked
  3807  002CEE  159E               	andwf	___flmul@grs& (0+255),w,b
  3808  002CF0  0100               	movlb	0	; () banked
  3809  002CF2  6F98               	movwf	??___flmul& (0+255),b
  3810  002CF4  0EFF               	movlw	255
  3811  002CF6  0100               	movlb	0	; () banked
  3812  002CF8  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  3813  002CFA  0100               	movlb	0	; () banked
  3814  002CFC  6F99               	movwf	(??___flmul+1)& (0+255),b
  3815  002CFE  0EFF               	movlw	255
  3816  002D00  0100               	movlb	0	; () banked
  3817  002D02  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  3818  002D04  0100               	movlb	0	; () banked
  3819  002D06  6F9A               	movwf	(??___flmul+2)& (0+255),b
  3820  002D08  0E7F               	movlw	127
  3821  002D0A  0100               	movlb	0	; () banked
  3822  002D0C  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  3823  002D0E  0100               	movlb	0	; () banked
  3824  002D10  6F9B               	movwf	(??___flmul+3)& (0+255),b
  3825  002D12  0100               	movlb	0	; () banked
  3826  002D14  5198               	movf	??___flmul& (0+255),w,b
  3827  002D16  0100               	movlb	0	; () banked
  3828  002D18  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  3829  002D1A  0100               	movlb	0	; () banked
  3830  002D1C  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  3831  002D1E  0100               	movlb	0	; () banked
  3832  002D20  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  3833  002D22  A4D8               	btfss	status,2,c
  3834  002D24  D003               	goto	l5690
  3835                           
  3836                           ; BSR set to: 0
  3837                           
  3838                           ; BSR set to: 0
  3839  002D26  0100               	movlb	0	; () banked
  3840  002D28  A1A3               	btfss	___flmul@prod& (0+255),0,b
  3841  002D2A  D003               	goto	l1319
  3842  002D2C                     l5690:
  3843                           
  3844                           ; BSR set to: 0
  3845  002D2C  0E01               	movlw	1
  3846  002D2E  0100               	movlb	0	; () banked
  3847  002D30  6F9D               	movwf	___flmul@aexp& (0+255),b
  3848  002D32                     l1319:
  3849                           
  3850                           ; BSR set to: 0
  3851  002D32  0100               	movlb	0	; () banked
  3852  002D34  519D               	movf	___flmul@aexp& (0+255),w,b
  3853  002D36  0100               	movlb	0	; () banked
  3854  002D38  B4D8               	btfsc	status,2,c
  3855  002D3A  D023               	goto	l5700
  3856                           
  3857                           ; BSR set to: 0
  3858  002D3C  0E01               	movlw	1
  3859  002D3E  0100               	movlb	0	; () banked
  3860  002D40  27A3               	addwf	___flmul@prod& (0+255),f,b
  3861  002D42  0E00               	movlw	0
  3862  002D44  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3863  002D46  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3864  002D48  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3865                           
  3866                           ; BSR set to: 0
  3867  002D4A  0100               	movlb	0	; () banked
  3868  002D4C  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  3869  002D4E  D019               	goto	l5700
  3870                           
  3871                           ; BSR set to: 0
  3872  002D50  C0A3  F098         	movff	___flmul@prod,??___flmul
  3873  002D54  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  3874  002D58  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  3875  002D5C  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  3876  002D60  0100               	movlb	0	; () banked
  3877  002D62  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  3878  002D64  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  3879  002D66  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  3880  002D68  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  3881  002D6A  3398               	rrcf	??___flmul& (0+255),f,b
  3882  002D6C  C098  F0A3         	movff	??___flmul,___flmul@prod
  3883  002D70  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  3884  002D74  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  3885  002D78  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  3886                           
  3887                           ; BSR set to: 0
  3888  002D7C  0100               	movlb	0	; () banked
  3889  002D7E  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  3890  002D80  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  3891  002D82                     l5700:
  3892                           
  3893                           ; BSR set to: 0
  3894  002D82  0100               	movlb	0	; () banked
  3895  002D84  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  3896  002D86  D010               	goto	l5704
  3897  002D88  0100               	movlb	0	; () banked
  3898  002D8A  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3899  002D8C  E104               	bnz	u7260
  3900  002D8E  0100               	movlb	0	; () banked
  3901  002D90  29A7               	incf	___flmul@temp& (0+255),w,b
  3902  002D92  A0D8               	btfss	status,0,c
  3903  002D94  D009               	goto	l5704
  3904  002D96                     u7260:
  3905                           
  3906                           ; BSR set to: 0
  3907  002D96  0E00               	movlw	0
  3908  002D98  0100               	movlb	0	; () banked
  3909  002D9A  6FA3               	movwf	___flmul@prod& (0+255),b
  3910  002D9C  0E00               	movlw	0
  3911  002D9E  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  3912  002DA0  0E80               	movlw	128
  3913  002DA2  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  3914  002DA4  0E7F               	movlw	127
  3915  002DA6  D02B               	goto	L1
  3916  002DA8                     l5704:
  3917                           
  3918                           ; BSR set to: 0
  3919  002DA8  0100               	movlb	0	; () banked
  3920  002DAA  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  3921  002DAC  D007               	goto	l5706
  3922  002DAE  0100               	movlb	0	; () banked
  3923  002DB0  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3924  002DB2  E111               	bnz	l1327
  3925  002DB4  0100               	movlb	0	; () banked
  3926  002DB6  05A7               	decf	___flmul@temp& (0+255),w,b
  3927  002DB8  B0D8               	btfsc	status,0,c
  3928  002DBA  D00D               	goto	l1327
  3929  002DBC                     l5706:
  3930                           
  3931                           ; BSR set to: 0
  3932  002DBC  0E00               	movlw	0
  3933  002DBE  0100               	movlb	0	; () banked
  3934  002DC0  6FA3               	movwf	___flmul@prod& (0+255),b
  3935  002DC2  0E00               	movlw	0
  3936  002DC4  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  3937  002DC6  0E00               	movlw	0
  3938  002DC8  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  3939  002DCA  0E00               	movlw	0
  3940  002DCC  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  3941  002DCE  0E00               	movlw	0
  3942  002DD0  0100               	movlb	0	; () banked
  3943  002DD2  6F9C               	movwf	___flmul@sign& (0+255),b
  3944  002DD4  D015               	goto	l5716
  3945  002DD6                     l1327:
  3946                           
  3947                           ; BSR set to: 0
  3948  002DD6  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  3949                           
  3950                           ; BSR set to: 0
  3951  002DDA  0EFF               	movlw	255
  3952  002DDC  0100               	movlb	0	; () banked
  3953  002DDE  17A3               	andwf	___flmul@prod& (0+255),f,b
  3954  002DE0  0EFF               	movlw	255
  3955  002DE2  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  3956  002DE4  0E7F               	movlw	127
  3957  002DE6  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  3958  002DE8  0E00               	movlw	0
  3959  002DEA  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  3960                           
  3961                           ; BSR set to: 0
  3962  002DEC  0100               	movlb	0	; () banked
  3963  002DEE  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  3964  002DF0  D002               	goto	l5714
  3965                           
  3966                           ; BSR set to: 0
  3967  002DF2  0100               	movlb	0	; () banked
  3968  002DF4  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  3969  002DF6                     l5714:
  3970                           
  3971                           ; BSR set to: 0
  3972  002DF6  0100               	movlb	0	; () banked
  3973  002DF8  90D8               	bcf	status,0,c
  3974  002DFA  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  3975  002DFC  0100               	movlb	0	; () banked
  3976  002DFE                     L1:
  3977  002DFE  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  3978  002E00                     l5716:
  3979                           
  3980                           ; BSR set to: 0
  3981  002E00  0100               	movlb	0	; () banked
  3982  002E02  519C               	movf	___flmul@sign& (0+255),w,b
  3983  002E04  0100               	movlb	0	; () banked
  3984  002E06  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  3985                           
  3986                           ; BSR set to: 0
  3987  002E08  C0A3  F090         	movff	___flmul@prod,?___flmul
  3988  002E0C  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  3989  002E10  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  3990  002E14  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  3991  002E18  0012               	return	
  3992  002E1A                     __end_of___flmul:
  3993                           	opt stack 0
  3994                           tblptru	equ	0xFF8
  3995                           tblptrh	equ	0xFF7
  3996                           tblptrl	equ	0xFF6
  3997                           tablat	equ	0xFF5
  3998                           prodh	equ	0xFF4
  3999                           prodl	equ	0xFF3
  4000                           postinc0	equ	0xFEE
  4001                           wreg	equ	0xFE8
  4002                           postinc2	equ	0xFDE
  4003                           postdec2	equ	0xFDD
  4004                           status	equ	0xFD8
  4005                           
  4006 ;; *************** function ___fladd *****************
  4007 ;; Defined at:
  4008 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  4009 ;; Parameters:    Size  Location     Type
  4010 ;;  b               4   77[BANK0 ] unsigned char 
  4011 ;;  a               4   81[BANK0 ] unsigned char 
  4012 ;; Auto vars:     Size  Location     Type
  4013 ;;  grs             1   96[BANK0 ] unsigned char 
  4014 ;;  bexp            1   95[BANK0 ] unsigned char 
  4015 ;;  aexp            1   94[BANK0 ] unsigned char 
  4016 ;;  signs           1   93[BANK0 ] unsigned char 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  4   77[BANK0 ] unsigned char 
  4019 ;; Registers used:
  4020 ;;		wreg, status,2, status,0
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4026 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4027 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4028 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4029 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4030 ;;Total ram usage:       20 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    4
  4033 ;; This function calls:
  4034 ;;		Nothing
  4035 ;; This function is called by:
  4036 ;;		_parallelo
  4037 ;;		_asin
  4038 ;;		_atan
  4039 ;;		_eval_poly
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           	psect	text10
  4044  0024CC                     __ptext10:
  4045                           	opt stack 0
  4046  0024CC                     ___fladd:
  4047                           	opt stack 21
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;incstack = 0
  4051  0024CC  0100               	movlb	0	; () banked
  4052  0024CE  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  4053  0024D0  0B80               	andlw	128
  4054  0024D2  0100               	movlb	0	; () banked
  4055  0024D4  6FBD               	movwf	___fladd@signs& (0+255),b
  4056  0024D6  0100               	movlb	0	; () banked
  4057  0024D8  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  4058  0024DA  25B0               	addwf	(___fladd@b+3)& (0+255),w,b
  4059  0024DC  0100               	movlb	0	; () banked
  4060  0024DE  6FBF               	movwf	___fladd@bexp& (0+255),b
  4061                           
  4062                           ; BSR set to: 0
  4063  0024E0  0100               	movlb	0	; () banked
  4064  0024E2  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  4065  0024E4  D002               	goto	l5396
  4066                           
  4067                           ; BSR set to: 0
  4068  0024E6  0100               	movlb	0	; () banked
  4069  0024E8  81BF               	bsf	___fladd@bexp& (0+255),0,b
  4070  0024EA                     l5396:
  4071                           
  4072                           ; BSR set to: 0
  4073  0024EA  0100               	movlb	0	; () banked
  4074  0024EC  51BF               	movf	___fladd@bexp& (0+255),w,b
  4075  0024EE  0100               	movlb	0	; () banked
  4076  0024F0  B4D8               	btfsc	status,2,c
  4077  0024F2  D012               	goto	l5406
  4078                           
  4079                           ; BSR set to: 0
  4080  0024F4  0100               	movlb	0	; () banked
  4081  0024F6  29BF               	incf	___fladd@bexp& (0+255),w,b
  4082  0024F8  A4D8               	btfss	status,2,c
  4083  0024FA  D009               	goto	l5402
  4084                           
  4085                           ; BSR set to: 0
  4086  0024FC  0E00               	movlw	0
  4087  0024FE  0100               	movlb	0	; () banked
  4088  002500  6FAD               	movwf	___fladd@b& (0+255),b
  4089  002502  0E00               	movlw	0
  4090  002504  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  4091  002506  0E00               	movlw	0
  4092  002508  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  4093  00250A  0E00               	movlw	0
  4094  00250C  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  4095  00250E                     l5402:
  4096                           
  4097                           ; BSR set to: 0
  4098  00250E  0100               	movlb	0	; () banked
  4099  002510  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  4100                           
  4101                           ; BSR set to: 0
  4102  002512  0E00               	movlw	0
  4103  002514  0100               	movlb	0	; () banked
  4104  002516  D008               	goto	L2
  4105  002518                     l5406:
  4106                           
  4107                           ; BSR set to: 0
  4108  002518  0E00               	movlw	0
  4109  00251A  0100               	movlb	0	; () banked
  4110  00251C  6FAD               	movwf	___fladd@b& (0+255),b
  4111  00251E  0E00               	movlw	0
  4112  002520  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  4113  002522  0E00               	movlw	0
  4114  002524  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  4115  002526  0E00               	movlw	0
  4116  002528                     L2:
  4117  002528  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  4118                           
  4119                           ; BSR set to: 0
  4120                           
  4121                           ; BSR set to: 0
  4122  00252A  0100               	movlb	0	; () banked
  4123  00252C  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  4124  00252E  0B80               	andlw	128
  4125  002530  0100               	movlb	0	; () banked
  4126  002532  6FBE               	movwf	___fladd@aexp& (0+255),b
  4127                           
  4128                           ; BSR set to: 0
  4129  002534  0100               	movlb	0	; () banked
  4130  002536  51BD               	movf	___fladd@signs& (0+255),w,b
  4131  002538  0100               	movlb	0	; () banked
  4132  00253A  19BE               	xorwf	___fladd@aexp& (0+255),w,b
  4133  00253C  B4D8               	btfsc	status,2,c
  4134  00253E  D002               	goto	l5414
  4135                           
  4136                           ; BSR set to: 0
  4137  002540  0100               	movlb	0	; () banked
  4138  002542  8DBD               	bsf	___fladd@signs& (0+255),6,b
  4139  002544                     l5414:
  4140                           
  4141                           ; BSR set to: 0
  4142  002544  0100               	movlb	0	; () banked
  4143  002546  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  4144  002548  25B4               	addwf	(___fladd@a+3)& (0+255),w,b
  4145  00254A  0100               	movlb	0	; () banked
  4146  00254C  6FBE               	movwf	___fladd@aexp& (0+255),b
  4147                           
  4148                           ; BSR set to: 0
  4149  00254E  0100               	movlb	0	; () banked
  4150  002550  AFB3               	btfss	(___fladd@a+2)& (0+255),7,b
  4151  002552  D002               	goto	l5420
  4152                           
  4153                           ; BSR set to: 0
  4154  002554  0100               	movlb	0	; () banked
  4155  002556  81BE               	bsf	___fladd@aexp& (0+255),0,b
  4156  002558                     l5420:
  4157                           
  4158                           ; BSR set to: 0
  4159  002558  0100               	movlb	0	; () banked
  4160  00255A  51BE               	movf	___fladd@aexp& (0+255),w,b
  4161  00255C  0100               	movlb	0	; () banked
  4162  00255E  B4D8               	btfsc	status,2,c
  4163  002560  D012               	goto	l5430
  4164                           
  4165                           ; BSR set to: 0
  4166  002562  0100               	movlb	0	; () banked
  4167  002564  29BE               	incf	___fladd@aexp& (0+255),w,b
  4168  002566  A4D8               	btfss	status,2,c
  4169  002568  D009               	goto	l5426
  4170                           
  4171                           ; BSR set to: 0
  4172  00256A  0E00               	movlw	0
  4173  00256C  0100               	movlb	0	; () banked
  4174  00256E  6FB1               	movwf	___fladd@a& (0+255),b
  4175  002570  0E00               	movlw	0
  4176  002572  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4177  002574  0E00               	movlw	0
  4178  002576  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4179  002578  0E00               	movlw	0
  4180  00257A  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4181  00257C                     l5426:
  4182                           
  4183                           ; BSR set to: 0
  4184  00257C  0100               	movlb	0	; () banked
  4185  00257E  8FB3               	bsf	(___fladd@a+2)& (0+255),7,b
  4186                           
  4187                           ; BSR set to: 0
  4188  002580  0E00               	movlw	0
  4189  002582  0100               	movlb	0	; () banked
  4190  002584  D008               	goto	L3
  4191  002586                     l5430:
  4192                           
  4193                           ; BSR set to: 0
  4194  002586  0E00               	movlw	0
  4195  002588  0100               	movlb	0	; () banked
  4196  00258A  6FB1               	movwf	___fladd@a& (0+255),b
  4197  00258C  0E00               	movlw	0
  4198  00258E  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4199  002590  0E00               	movlw	0
  4200  002592  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4201  002594  0E00               	movlw	0
  4202  002596                     L3:
  4203  002596  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4204                           
  4205                           ; BSR set to: 0
  4206                           
  4207                           ; BSR set to: 0
  4208  002598  0100               	movlb	0	; () banked
  4209  00259A  51BF               	movf	___fladd@bexp& (0+255),w,b
  4210  00259C  0100               	movlb	0	; () banked
  4211  00259E  5DBE               	subwf	___fladd@aexp& (0+255),w,b
  4212  0025A0  B0D8               	btfsc	status,0,c
  4213  0025A2  D024               	goto	l5468
  4214                           
  4215                           ; BSR set to: 0
  4216  0025A4  0100               	movlb	0	; () banked
  4217  0025A6  ADBD               	btfss	___fladd@signs& (0+255),6,b
  4218  0025A8  D003               	goto	l5438
  4219                           
  4220                           ; BSR set to: 0
  4221  0025AA  0E80               	movlw	128
  4222  0025AC  0100               	movlb	0	; () banked
  4223  0025AE  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  4224  0025B0                     l5438:
  4225                           
  4226                           ; BSR set to: 0
  4227  0025B0  C0BF  F0C0         	movff	___fladd@bexp,___fladd@grs
  4228                           
  4229                           ; BSR set to: 0
  4230  0025B4  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  4231                           
  4232                           ; BSR set to: 0
  4233  0025B8  C0C0  F0BE         	movff	___fladd@grs,___fladd@aexp
  4234                           
  4235                           ; BSR set to: 0
  4236  0025BC  C0AD  F0C0         	movff	___fladd@b,___fladd@grs
  4237                           
  4238                           ; BSR set to: 0
  4239  0025C0  C0B1  F0AD         	movff	___fladd@a,___fladd@b
  4240                           
  4241                           ; BSR set to: 0
  4242  0025C4  C0C0  F0B1         	movff	___fladd@grs,___fladd@a
  4243                           
  4244                           ; BSR set to: 0
  4245  0025C8  C0AE  F0C0         	movff	___fladd@b+1,___fladd@grs
  4246                           
  4247                           ; BSR set to: 0
  4248  0025CC  C0B2  F0AE         	movff	___fladd@a+1,___fladd@b+1
  4249                           
  4250                           ; BSR set to: 0
  4251  0025D0  C0C0  F0B2         	movff	___fladd@grs,___fladd@a+1
  4252                           
  4253                           ; BSR set to: 0
  4254  0025D4  C0AF  F0C0         	movff	___fladd@b+2,___fladd@grs
  4255                           
  4256                           ; BSR set to: 0
  4257  0025D8  C0B3  F0AF         	movff	___fladd@a+2,___fladd@b+2
  4258                           
  4259                           ; BSR set to: 0
  4260  0025DC  C0C0  F0B3         	movff	___fladd@grs,___fladd@a+2
  4261                           
  4262                           ; BSR set to: 0
  4263  0025E0  C0B0  F0C0         	movff	___fladd@b+3,___fladd@grs
  4264                           
  4265                           ; BSR set to: 0
  4266  0025E4  C0B4  F0B0         	movff	___fladd@a+3,___fladd@b+3
  4267                           
  4268                           ; BSR set to: 0
  4269  0025E8  C0C0  F0B4         	movff	___fladd@grs,___fladd@a+3
  4270  0025EC                     l5468:
  4271                           
  4272                           ; BSR set to: 0
  4273  0025EC  0E00               	movlw	0
  4274  0025EE  0100               	movlb	0	; () banked
  4275  0025F0  6FC0               	movwf	___fladd@grs& (0+255),b
  4276                           
  4277                           ; BSR set to: 0
  4278  0025F2  0100               	movlb	0	; () banked
  4279  0025F4  51BF               	movf	___fladd@bexp& (0+255),w,b
  4280  0025F6  0100               	movlb	0	; () banked
  4281  0025F8  6FB5               	movwf	??___fladd& (0+255),b
  4282  0025FA  6BB6               	clrf	(??___fladd+1)& (0+255),b
  4283  0025FC  0100               	movlb	0	; () banked
  4284  0025FE  1FB5               	comf	??___fladd& (0+255),f,b
  4285  002600  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  4286  002602  4BB5               	infsnz	??___fladd& (0+255),f,b
  4287  002604  2BB6               	incf	(??___fladd+1)& (0+255),f,b
  4288  002606  0100               	movlb	0	; () banked
  4289  002608  51BE               	movf	___fladd@aexp& (0+255),w,b
  4290  00260A  0100               	movlb	0	; () banked
  4291  00260C  6FB7               	movwf	(??___fladd+2)& (0+255),b
  4292  00260E  6BB8               	clrf	(??___fladd+3)& (0+255),b
  4293  002610  0100               	movlb	0	; () banked
  4294  002612  51B5               	movf	??___fladd& (0+255),w,b
  4295  002614  0100               	movlb	0	; () banked
  4296  002616  27B7               	addwf	(??___fladd+2)& (0+255),f,b
  4297  002618  0100               	movlb	0	; () banked
  4298  00261A  51B6               	movf	(??___fladd+1)& (0+255),w,b
  4299  00261C  0100               	movlb	0	; () banked
  4300  00261E  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  4301  002620  0100               	movlb	0	; () banked
  4302  002622  BFB8               	btfsc	(??___fladd+3)& (0+255),7,b
  4303  002624  D03D               	goto	l1225
  4304  002626  0100               	movlb	0	; () banked
  4305  002628  51B8               	movf	(??___fladd+3)& (0+255),w,b
  4306  00262A  E105               	bnz	u6800
  4307  00262C  0E1A               	movlw	26
  4308  00262E  0100               	movlb	0	; () banked
  4309  002630  5DB7               	subwf	(??___fladd+2)& (0+255),w,b
  4310  002632  A0D8               	btfss	status,0,c
  4311  002634  D035               	goto	l1225
  4312  002636                     u6800:
  4313                           
  4314                           ; BSR set to: 0
  4315  002636  0100               	movlb	0	; () banked
  4316  002638  51AD               	movf	___fladd@b& (0+255),w,b
  4317  00263A  0100               	movlb	0	; () banked
  4318  00263C  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  4319  00263E  0100               	movlb	0	; () banked
  4320  002640  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  4321  002642  0100               	movlb	0	; () banked
  4322  002644  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  4323  002646  B4D8               	btfsc	status,2,c
  4324  002648  D002               	goto	u6810
  4325  00264A  0E01               	movlw	1
  4326  00264C  D001               	goto	u6820
  4327  00264E                     u6810:
  4328  00264E  0E00               	movlw	0
  4329  002650                     u6820:
  4330  002650  0100               	movlb	0	; () banked
  4331  002652  6FC0               	movwf	___fladd@grs& (0+255),b
  4332                           
  4333                           ; BSR set to: 0
  4334  002654  0E00               	movlw	0
  4335  002656  0100               	movlb	0	; () banked
  4336  002658  6FAD               	movwf	___fladd@b& (0+255),b
  4337  00265A  0E00               	movlw	0
  4338  00265C  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  4339  00265E  0E00               	movlw	0
  4340  002660  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  4341  002662  0E00               	movlw	0
  4342  002664  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  4343                           
  4344                           ; BSR set to: 0
  4345  002666  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  4346  00266A  D020               	goto	l1224
  4347  00266C                     l1226:
  4348                           
  4349                           ; BSR set to: 0
  4350  00266C  0100               	movlb	0	; () banked
  4351  00266E  A1C0               	btfss	___fladd@grs& (0+255),0,b
  4352  002670  D007               	goto	l5480
  4353                           
  4354                           ; BSR set to: 0
  4355  002672  0100               	movlb	0	; () banked
  4356  002674  90D8               	bcf	status,0,c
  4357  002676  31C0               	rrcf	___fladd@grs& (0+255),w,b
  4358  002678  0901               	iorlw	1
  4359  00267A  0100               	movlb	0	; () banked
  4360  00267C  6FC0               	movwf	___fladd@grs& (0+255),b
  4361  00267E  D003               	goto	l5482
  4362  002680                     l5480:
  4363                           
  4364                           ; BSR set to: 0
  4365  002680  0100               	movlb	0	; () banked
  4366  002682  90D8               	bcf	status,0,c
  4367  002684  33C0               	rrcf	___fladd@grs& (0+255),f,b
  4368  002686                     l5482:
  4369                           
  4370                           ; BSR set to: 0
  4371  002686  0100               	movlb	0	; () banked
  4372  002688  A1AD               	btfss	___fladd@b& (0+255),0,b
  4373  00268A  D002               	goto	l5486
  4374                           
  4375                           ; BSR set to: 0
  4376  00268C  0100               	movlb	0	; () banked
  4377  00268E  8FC0               	bsf	___fladd@grs& (0+255),7,b
  4378  002690                     l5486:
  4379                           
  4380                           ; BSR set to: 0
  4381  002690  0100               	movlb	0	; () banked
  4382  002692  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  4383  002694  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  4384  002696  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  4385  002698  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  4386  00269A  33AD               	rrcf	___fladd@b& (0+255),f,b
  4387                           
  4388                           ; BSR set to: 0
  4389  00269C  0100               	movlb	0	; () banked
  4390  00269E  2BBF               	incf	___fladd@bexp& (0+255),f,b
  4391  0026A0                     l1225:
  4392                           
  4393                           ; BSR set to: 0
  4394  0026A0  0100               	movlb	0	; () banked
  4395  0026A2  51BE               	movf	___fladd@aexp& (0+255),w,b
  4396  0026A4  0100               	movlb	0	; () banked
  4397  0026A6  5DBF               	subwf	___fladd@bexp& (0+255),w,b
  4398  0026A8  A0D8               	btfss	status,0,c
  4399  0026AA  D7E0               	goto	l1226
  4400  0026AC                     l1224:
  4401                           
  4402                           ; BSR set to: 0
  4403  0026AC  0100               	movlb	0	; () banked
  4404  0026AE  BDBD               	btfsc	___fladd@signs& (0+255),6,b
  4405  0026B0  D03F               	goto	l5514
  4406                           
  4407                           ; BSR set to: 0
  4408  0026B2  0100               	movlb	0	; () banked
  4409  0026B4  51BF               	movf	___fladd@bexp& (0+255),w,b
  4410  0026B6  0100               	movlb	0	; () banked
  4411  0026B8  A4D8               	btfss	status,2,c
  4412  0026BA  D00A               	goto	l5496
  4413                           
  4414                           ; BSR set to: 0
  4415  0026BC  0E00               	movlw	0
  4416  0026BE  0100               	movlb	0	; () banked
  4417  0026C0  6FAD               	movwf	?___fladd& (0+255),b
  4418  0026C2  0E00               	movlw	0
  4419  0026C4  6FAE               	movwf	(?___fladd+1)& (0+255),b
  4420  0026C6  0E00               	movlw	0
  4421  0026C8  6FAF               	movwf	(?___fladd+2)& (0+255),b
  4422  0026CA  0E00               	movlw	0
  4423  0026CC  6FB0               	movwf	(?___fladd+3)& (0+255),b
  4424                           
  4425                           ; BSR set to: 0
  4426  0026CE  0012               	return	
  4427  0026D0                     l5496:
  4428                           
  4429                           ; BSR set to: 0
  4430  0026D0  0100               	movlb	0	; () banked
  4431  0026D2  51B1               	movf	___fladd@a& (0+255),w,b
  4432  0026D4  0100               	movlb	0	; () banked
  4433  0026D6  27AD               	addwf	___fladd@b& (0+255),f,b
  4434  0026D8  0100               	movlb	0	; () banked
  4435  0026DA  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  4436  0026DC  0100               	movlb	0	; () banked
  4437  0026DE  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  4438  0026E0  0100               	movlb	0	; () banked
  4439  0026E2  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  4440  0026E4  0100               	movlb	0	; () banked
  4441  0026E6  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  4442  0026E8  0100               	movlb	0	; () banked
  4443  0026EA  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  4444  0026EC  0100               	movlb	0	; () banked
  4445  0026EE  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  4446                           
  4447                           ; BSR set to: 0
  4448  0026F0  0100               	movlb	0	; () banked
  4449  0026F2  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  4450  0026F4  D0CC               	goto	l5550
  4451                           
  4452                           ; BSR set to: 0
  4453  0026F6  0100               	movlb	0	; () banked
  4454  0026F8  A1C0               	btfss	___fladd@grs& (0+255),0,b
  4455  0026FA  D009               	goto	l5504
  4456                           
  4457                           ; BSR set to: 0
  4458  0026FC  0100               	movlb	0	; () banked
  4459  0026FE  90D8               	bcf	status,0,c
  4460  002700  33C0               	rrcf	___fladd@grs& (0+255),f,b
  4461  002702  0100               	movlb	0	; () banked
  4462  002704  51C0               	movf	___fladd@grs& (0+255),w,b
  4463  002706  0901               	iorlw	1
  4464  002708  0100               	movlb	0	; () banked
  4465  00270A  6FC0               	movwf	___fladd@grs& (0+255),b
  4466  00270C  D003               	goto	l5506
  4467  00270E                     l5504:
  4468                           
  4469                           ; BSR set to: 0
  4470  00270E  0100               	movlb	0	; () banked
  4471  002710  90D8               	bcf	status,0,c
  4472  002712  33C0               	rrcf	___fladd@grs& (0+255),f,b
  4473  002714                     l5506:
  4474                           
  4475                           ; BSR set to: 0
  4476  002714  0100               	movlb	0	; () banked
  4477  002716  A1AD               	btfss	___fladd@b& (0+255),0,b
  4478  002718  D002               	goto	l5510
  4479                           
  4480                           ; BSR set to: 0
  4481  00271A  0100               	movlb	0	; () banked
  4482  00271C  8FC0               	bsf	___fladd@grs& (0+255),7,b
  4483  00271E                     l5510:
  4484                           
  4485                           ; BSR set to: 0
  4486  00271E  0100               	movlb	0	; () banked
  4487  002720  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  4488  002722  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  4489  002724  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  4490  002726  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  4491  002728  33AD               	rrcf	___fladd@b& (0+255),f,b
  4492                           
  4493                           ; BSR set to: 0
  4494  00272A  0100               	movlb	0	; () banked
  4495  00272C  2BBF               	incf	___fladd@bexp& (0+255),f,b
  4496                           
  4497                           ; BSR set to: 0
  4498  00272E  D0AF               	goto	l5550
  4499  002730                     l5514:
  4500                           
  4501                           ; BSR set to: 0
  4502  002730  0100               	movlb	0	; () banked
  4503  002732  51B1               	movf	___fladd@a& (0+255),w,b
  4504  002734  0100               	movlb	0	; () banked
  4505  002736  5DAD               	subwf	___fladd@b& (0+255),w,b
  4506  002738  0100               	movlb	0	; () banked
  4507  00273A  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  4508  00273C  0100               	movlb	0	; () banked
  4509  00273E  59AE               	subwfb	(___fladd@b+1)& (0+255),w,b
  4510  002740  0100               	movlb	0	; () banked
  4511  002742  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  4512  002744  0100               	movlb	0	; () banked
  4513  002746  59AF               	subwfb	(___fladd@b+2)& (0+255),w,b
  4514  002748  0100               	movlb	0	; () banked
  4515  00274A  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  4516  00274C  0A80               	xorlw	128
  4517  00274E  0100               	movlb	0	; () banked
  4518  002750  6FB5               	movwf	??___fladd& (0+255),b
  4519  002752  0100               	movlb	0	; () banked
  4520  002754  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  4521  002756  0A80               	xorlw	128
  4522  002758  0100               	movlb	0	; () banked
  4523  00275A  59B5               	subwfb	??___fladd& (0+255),w,b
  4524  00275C  B0D8               	btfsc	status,0,c
  4525  00275E  D050               	goto	l5524
  4526                           
  4527                           ; BSR set to: 0
  4528  002760  C0AD  F0B5         	movff	___fladd@b,??___fladd
  4529  002764  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  4530  002768  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  4531  00276C  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  4532  002770  0100               	movlb	0	; () banked
  4533  002772  1FB5               	comf	??___fladd& (0+255),f,b
  4534  002774  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  4535  002776  1FB7               	comf	(??___fladd+2)& (0+255),f,b
  4536  002778  1FB8               	comf	(??___fladd+3)& (0+255),f,b
  4537  00277A  2BB5               	incf	??___fladd& (0+255),f,b
  4538  00277C  0E00               	movlw	0
  4539  00277E  23B6               	addwfc	(??___fladd+1)& (0+255),f,b
  4540  002780  23B7               	addwfc	(??___fladd+2)& (0+255),f,b
  4541  002782  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  4542  002784  0100               	movlb	0	; () banked
  4543  002786  51B1               	movf	___fladd@a& (0+255),w,b
  4544  002788  0100               	movlb	0	; () banked
  4545  00278A  25B5               	addwf	??___fladd& (0+255),w,b
  4546  00278C  0100               	movlb	0	; () banked
  4547  00278E  6FB9               	movwf	(??___fladd+4)& (0+255),b
  4548  002790  0100               	movlb	0	; () banked
  4549  002792  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  4550  002794  0100               	movlb	0	; () banked
  4551  002796  21B6               	addwfc	(??___fladd+1)& (0+255),w,b
  4552  002798  0100               	movlb	0	; () banked
  4553  00279A  6FBA               	movwf	(??___fladd+5)& (0+255),b
  4554  00279C  0100               	movlb	0	; () banked
  4555  00279E  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  4556  0027A0  0100               	movlb	0	; () banked
  4557  0027A2  21B7               	addwfc	(??___fladd+2)& (0+255),w,b
  4558  0027A4  0100               	movlb	0	; () banked
  4559  0027A6  6FBB               	movwf	(??___fladd+6)& (0+255),b
  4560  0027A8  0100               	movlb	0	; () banked
  4561  0027AA  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  4562  0027AC  0100               	movlb	0	; () banked
  4563  0027AE  21B8               	addwfc	(??___fladd+3)& (0+255),w,b
  4564  0027B0  0100               	movlb	0	; () banked
  4565  0027B2  6FBC               	movwf	(??___fladd+7)& (0+255),b
  4566  0027B4  0EFF               	movlw	255
  4567  0027B6  0100               	movlb	0	; () banked
  4568  0027B8  25B9               	addwf	(??___fladd+4)& (0+255),w,b
  4569  0027BA  0100               	movlb	0	; () banked
  4570  0027BC  6FAD               	movwf	___fladd@b& (0+255),b
  4571  0027BE  0EFF               	movlw	255
  4572  0027C0  0100               	movlb	0	; () banked
  4573  0027C2  21BA               	addwfc	(??___fladd+5)& (0+255),w,b
  4574  0027C4  0100               	movlb	0	; () banked
  4575  0027C6  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  4576  0027C8  0EFF               	movlw	255
  4577  0027CA  0100               	movlb	0	; () banked
  4578  0027CC  21BB               	addwfc	(??___fladd+6)& (0+255),w,b
  4579  0027CE  0100               	movlb	0	; () banked
  4580  0027D0  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  4581  0027D2  0EFF               	movlw	255
  4582  0027D4  0100               	movlb	0	; () banked
  4583  0027D6  21BC               	addwfc	(??___fladd+7)& (0+255),w,b
  4584  0027D8  0100               	movlb	0	; () banked
  4585  0027DA  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  4586  0027DC  0E80               	movlw	128
  4587  0027DE  0100               	movlb	0	; () banked
  4588  0027E0  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  4589                           
  4590                           ; BSR set to: 0
  4591  0027E2  0100               	movlb	0	; () banked
  4592  0027E4  6DC0               	negf	___fladd@grs& (0+255),b
  4593                           
  4594                           ; BSR set to: 0
  4595  0027E6  0100               	movlb	0	; () banked
  4596  0027E8  51C0               	movf	___fladd@grs& (0+255),w,b
  4597  0027EA  0100               	movlb	0	; () banked
  4598  0027EC  A4D8               	btfss	status,2,c
  4599  0027EE  D018               	goto	l1241
  4600                           
  4601                           ; BSR set to: 0
  4602  0027F0  0E01               	movlw	1
  4603  0027F2  0100               	movlb	0	; () banked
  4604  0027F4  27AD               	addwf	___fladd@b& (0+255),f,b
  4605  0027F6  0E00               	movlw	0
  4606  0027F8  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  4607  0027FA  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  4608  0027FC  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  4609                           
  4610                           ; BSR set to: 0
  4611  0027FE  D010               	goto	l1241
  4612  002800                     l5524:
  4613                           
  4614                           ; BSR set to: 0
  4615  002800  0100               	movlb	0	; () banked
  4616  002802  51B1               	movf	___fladd@a& (0+255),w,b
  4617  002804  0100               	movlb	0	; () banked
  4618  002806  5FAD               	subwf	___fladd@b& (0+255),f,b
  4619  002808  0100               	movlb	0	; () banked
  4620  00280A  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  4621  00280C  0100               	movlb	0	; () banked
  4622  00280E  5BAE               	subwfb	(___fladd@b+1)& (0+255),f,b
  4623  002810  0100               	movlb	0	; () banked
  4624  002812  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  4625  002814  0100               	movlb	0	; () banked
  4626  002816  5BAF               	subwfb	(___fladd@b+2)& (0+255),f,b
  4627  002818  0100               	movlb	0	; () banked
  4628  00281A  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  4629  00281C  0100               	movlb	0	; () banked
  4630  00281E  5BB0               	subwfb	(___fladd@b+3)& (0+255),f,b
  4631  002820                     l1241:
  4632                           
  4633                           ; BSR set to: 0
  4634  002820  0100               	movlb	0	; () banked
  4635  002822  51AD               	movf	___fladd@b& (0+255),w,b
  4636  002824  0100               	movlb	0	; () banked
  4637  002826  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  4638  002828  0100               	movlb	0	; () banked
  4639  00282A  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  4640  00282C  0100               	movlb	0	; () banked
  4641  00282E  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  4642  002830  A4D8               	btfss	status,2,c
  4643  002832  D02A               	goto	l5548
  4644                           
  4645                           ; BSR set to: 0
  4646  002834  0100               	movlb	0	; () banked
  4647  002836  51C0               	movf	___fladd@grs& (0+255),w,b
  4648  002838  0100               	movlb	0	; () banked
  4649  00283A  A4D8               	btfss	status,2,c
  4650  00283C  D025               	goto	l5548
  4651                           
  4652                           ; BSR set to: 0
  4653  00283E  0E00               	movlw	0
  4654  002840  0100               	movlb	0	; () banked
  4655  002842  6FAD               	movwf	?___fladd& (0+255),b
  4656  002844  0E00               	movlw	0
  4657  002846  6FAE               	movwf	(?___fladd+1)& (0+255),b
  4658  002848  0E00               	movlw	0
  4659  00284A  6FAF               	movwf	(?___fladd+2)& (0+255),b
  4660  00284C  0E00               	movlw	0
  4661  00284E  6FB0               	movwf	(?___fladd+3)& (0+255),b
  4662                           
  4663                           ; BSR set to: 0
  4664  002850  0012               	return	
  4665  002852                     l5532:
  4666                           
  4667                           ; BSR set to: 0
  4668  002852  0100               	movlb	0	; () banked
  4669  002854  90D8               	bcf	status,0,c
  4670  002856  37AD               	rlcf	___fladd@b& (0+255),f,b
  4671  002858  37AE               	rlcf	(___fladd@b+1)& (0+255),f,b
  4672  00285A  37AF               	rlcf	(___fladd@b+2)& (0+255),f,b
  4673  00285C  37B0               	rlcf	(___fladd@b+3)& (0+255),f,b
  4674                           
  4675                           ; BSR set to: 0
  4676  00285E  0100               	movlb	0	; () banked
  4677  002860  AFC0               	btfss	___fladd@grs& (0+255),7,b
  4678  002862  D002               	goto	l5538
  4679                           
  4680                           ; BSR set to: 0
  4681  002864  0100               	movlb	0	; () banked
  4682  002866  81AD               	bsf	___fladd@b& (0+255),0,b
  4683  002868                     l5538:
  4684                           
  4685                           ; BSR set to: 0
  4686  002868  0100               	movlb	0	; () banked
  4687  00286A  A1C0               	btfss	___fladd@grs& (0+255),0,b
  4688  00286C  D003               	goto	l5542
  4689                           
  4690                           ; BSR set to: 0
  4691  00286E  80D8               	bsf	status,0,c
  4692  002870  0100               	movlb	0	; () banked
  4693  002872  D002               	goto	L4
  4694  002874                     l5542:
  4695                           
  4696                           ; BSR set to: 0
  4697  002874  0100               	movlb	0	; () banked
  4698  002876  90D8               	bcf	status,0,c
  4699  002878                     L4:
  4700  002878  37C0               	rlcf	___fladd@grs& (0+255),f,b
  4701                           
  4702                           ; BSR set to: 0
  4703                           
  4704                           ; BSR set to: 0
  4705  00287A  0100               	movlb	0	; () banked
  4706  00287C  51BF               	movf	___fladd@bexp& (0+255),w,b
  4707  00287E  0100               	movlb	0	; () banked
  4708  002880  B4D8               	btfsc	status,2,c
  4709  002882  D002               	goto	l5548
  4710                           
  4711                           ; BSR set to: 0
  4712  002884  0100               	movlb	0	; () banked
  4713  002886  07BF               	decf	___fladd@bexp& (0+255),f,b
  4714  002888                     l5548:
  4715                           
  4716                           ; BSR set to: 0
  4717  002888  0100               	movlb	0	; () banked
  4718  00288A  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  4719  00288C  D7E2               	goto	l5532
  4720  00288E                     l5550:
  4721                           
  4722                           ; BSR set to: 0
  4723  00288E  0E00               	movlw	0
  4724  002890  0100               	movlb	0	; () banked
  4725  002892  6FBE               	movwf	___fladd@aexp& (0+255),b
  4726                           
  4727                           ; BSR set to: 0
  4728  002894  0100               	movlb	0	; () banked
  4729  002896  AFC0               	btfss	___fladd@grs& (0+255),7,b
  4730  002898  D00D               	goto	l1250
  4731                           
  4732                           ; BSR set to: 0
  4733  00289A  C0C0  F0B5         	movff	___fladd@grs,??___fladd
  4734  00289E  0E7F               	movlw	127
  4735  0028A0  0100               	movlb	0	; () banked
  4736  0028A2  17B5               	andwf	??___fladd& (0+255),f,b
  4737  0028A4  A4D8               	btfss	status,2,c
  4738  0028A6  D003               	goto	l5558
  4739                           
  4740                           ; BSR set to: 0
  4741                           
  4742                           ; BSR set to: 0
  4743  0028A8  0100               	movlb	0	; () banked
  4744  0028AA  A1AD               	btfss	___fladd@b& (0+255),0,b
  4745  0028AC  D003               	goto	l1250
  4746  0028AE                     l5558:
  4747                           
  4748                           ; BSR set to: 0
  4749  0028AE  0E01               	movlw	1
  4750  0028B0  0100               	movlb	0	; () banked
  4751  0028B2  6FBE               	movwf	___fladd@aexp& (0+255),b
  4752  0028B4                     l1250:
  4753                           
  4754                           ; BSR set to: 0
  4755  0028B4  0100               	movlb	0	; () banked
  4756  0028B6  51BE               	movf	___fladd@aexp& (0+255),w,b
  4757  0028B8  0100               	movlb	0	; () banked
  4758  0028BA  B4D8               	btfsc	status,2,c
  4759  0028BC  D026               	goto	l5568
  4760                           
  4761                           ; BSR set to: 0
  4762  0028BE  0E01               	movlw	1
  4763  0028C0  0100               	movlb	0	; () banked
  4764  0028C2  27AD               	addwf	___fladd@b& (0+255),f,b
  4765  0028C4  0E00               	movlw	0
  4766  0028C6  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  4767  0028C8  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  4768  0028CA  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  4769                           
  4770                           ; BSR set to: 0
  4771  0028CC  0100               	movlb	0	; () banked
  4772  0028CE  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  4773  0028D0  D01C               	goto	l5568
  4774                           
  4775                           ; BSR set to: 0
  4776  0028D2  C0AD  F0B5         	movff	___fladd@b,??___fladd
  4777  0028D6  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  4778  0028DA  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  4779  0028DE  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  4780  0028E2  0100               	movlb	0	; () banked
  4781  0028E4  35B8               	rlcf	(??___fladd+3)& (0+255),w,b
  4782  0028E6  33B8               	rrcf	(??___fladd+3)& (0+255),f,b
  4783  0028E8  33B7               	rrcf	(??___fladd+2)& (0+255),f,b
  4784  0028EA  33B6               	rrcf	(??___fladd+1)& (0+255),f,b
  4785  0028EC  33B5               	rrcf	??___fladd& (0+255),f,b
  4786  0028EE  C0B5  F0AD         	movff	??___fladd,___fladd@b
  4787  0028F2  C0B6  F0AE         	movff	??___fladd+1,___fladd@b+1
  4788  0028F6  C0B7  F0AF         	movff	??___fladd+2,___fladd@b+2
  4789  0028FA  C0B8  F0B0         	movff	??___fladd+3,___fladd@b+3
  4790  0028FE  0100               	movlb	0	; () banked
  4791  002900  29BF               	incf	___fladd@bexp& (0+255),w,b
  4792  002902  B4D8               	btfsc	status,2,c
  4793  002904  D002               	goto	l5568
  4794                           
  4795                           ; BSR set to: 0
  4796  002906  0100               	movlb	0	; () banked
  4797  002908  2BBF               	incf	___fladd@bexp& (0+255),f,b
  4798  00290A                     l5568:
  4799                           
  4800                           ; BSR set to: 0
  4801  00290A  0100               	movlb	0	; () banked
  4802  00290C  29BF               	incf	___fladd@bexp& (0+255),w,b
  4803  00290E  B4D8               	btfsc	status,2,c
  4804  002910  D005               	goto	l5572
  4805                           
  4806                           ; BSR set to: 0
  4807  002912  0100               	movlb	0	; () banked
  4808  002914  51BF               	movf	___fladd@bexp& (0+255),w,b
  4809  002916  0100               	movlb	0	; () banked
  4810  002918  A4D8               	btfss	status,2,c
  4811  00291A  D011               	goto	l5576
  4812  00291C                     l5572:
  4813                           
  4814                           ; BSR set to: 0
  4815  00291C  0E00               	movlw	0
  4816  00291E  0100               	movlb	0	; () banked
  4817  002920  6FAD               	movwf	___fladd@b& (0+255),b
  4818  002922  0E00               	movlw	0
  4819  002924  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  4820  002926  0E00               	movlw	0
  4821  002928  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  4822  00292A  0E00               	movlw	0
  4823  00292C  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  4824  00292E  0100               	movlb	0	; () banked
  4825  002930  51BF               	movf	___fladd@bexp& (0+255),w,b
  4826  002932  0100               	movlb	0	; () banked
  4827  002934  A4D8               	btfss	status,2,c
  4828  002936  D003               	goto	l5576
  4829                           
  4830                           ; BSR set to: 0
  4831  002938  0E00               	movlw	0
  4832  00293A  0100               	movlb	0	; () banked
  4833  00293C  6FBD               	movwf	___fladd@signs& (0+255),b
  4834  00293E                     l5576:
  4835                           
  4836                           ; BSR set to: 0
  4837  00293E  0100               	movlb	0	; () banked
  4838  002940  A1BF               	btfss	___fladd@bexp& (0+255),0,b
  4839  002942  D003               	goto	l5580
  4840                           
  4841                           ; BSR set to: 0
  4842  002944  0100               	movlb	0	; () banked
  4843  002946  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  4844  002948  D002               	goto	l5582
  4845  00294A                     l5580:
  4846                           
  4847                           ; BSR set to: 0
  4848  00294A  0100               	movlb	0	; () banked
  4849  00294C  9FAF               	bcf	(___fladd@b+2)& (0+255),7,b
  4850  00294E                     l5582:
  4851                           
  4852                           ; BSR set to: 0
  4853  00294E  0100               	movlb	0	; () banked
  4854  002950  90D8               	bcf	status,0,c
  4855  002952  31BF               	rrcf	___fladd@bexp& (0+255),w,b
  4856  002954  0100               	movlb	0	; () banked
  4857  002956  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  4858                           
  4859                           ; BSR set to: 0
  4860  002958  0100               	movlb	0	; () banked
  4861  00295A  AFBD               	btfss	___fladd@signs& (0+255),7,b
  4862  00295C  D002               	goto	l5588
  4863                           
  4864                           ; BSR set to: 0
  4865  00295E  0100               	movlb	0	; () banked
  4866  002960  8FB0               	bsf	(___fladd@b+3)& (0+255),7,b
  4867  002962                     l5588:
  4868                           
  4869                           ; BSR set to: 0
  4870  002962  C0AD  F0AD         	movff	___fladd@b,?___fladd
  4871  002966  C0AE  F0AE         	movff	___fladd@b+1,?___fladd+1
  4872  00296A  C0AF  F0AF         	movff	___fladd@b+2,?___fladd+2
  4873  00296E  C0B0  F0B0         	movff	___fladd@b+3,?___fladd+3
  4874  002972  0012               	return	
  4875  002974                     __end_of___fladd:
  4876                           	opt stack 0
  4877                           tblptru	equ	0xFF8
  4878                           tblptrh	equ	0xFF7
  4879                           tblptrl	equ	0xFF6
  4880                           tablat	equ	0xFF5
  4881                           prodh	equ	0xFF4
  4882                           prodl	equ	0xFF3
  4883                           postinc0	equ	0xFEE
  4884                           wreg	equ	0xFE8
  4885                           postinc2	equ	0xFDE
  4886                           postdec2	equ	0xFDD
  4887                           status	equ	0xFD8
  4888                           
  4889 ;; *************** function ___flge *****************
  4890 ;; Defined at:
  4891 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;  ff1             4   81[BANK0 ] unsigned char 
  4894 ;;  ff2             4   85[BANK0 ] unsigned char 
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;		None
  4897 ;; Return value:  Size  Location     Type
  4898 ;;		None               void
  4899 ;; Registers used:
  4900 ;;		wreg, status,2, status,0
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4906 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4908 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4909 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4910 ;;Total ram usage:       12 bytes
  4911 ;; Hardware stack levels used:    1
  4912 ;; Hardware stack levels required when called:    4
  4913 ;; This function calls:
  4914 ;;		Nothing
  4915 ;; This function is called by:
  4916 ;;		_parallelo
  4917 ;;		_asin
  4918 ;;		_atan
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           	psect	text11
  4923  0044C6                     __ptext11:
  4924                           	opt stack 0
  4925  0044C6                     ___flge:
  4926                           	opt stack 22
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;incstack = 0
  4930  0044C6  0E00               	movlw	0
  4931  0044C8  0100               	movlb	0	; () banked
  4932  0044CA  15B1               	andwf	___flge@ff1& (0+255),w,b
  4933  0044CC  0100               	movlb	0	; () banked
  4934  0044CE  6FB9               	movwf	??___flge& (0+255),b
  4935  0044D0  0E00               	movlw	0
  4936  0044D2  0100               	movlb	0	; () banked
  4937  0044D4  15B2               	andwf	(___flge@ff1+1)& (0+255),w,b
  4938  0044D6  0100               	movlb	0	; () banked
  4939  0044D8  6FBA               	movwf	(??___flge+1)& (0+255),b
  4940  0044DA  0E80               	movlw	128
  4941  0044DC  0100               	movlb	0	; () banked
  4942  0044DE  15B3               	andwf	(___flge@ff1+2)& (0+255),w,b
  4943  0044E0  0100               	movlb	0	; () banked
  4944  0044E2  6FBB               	movwf	(??___flge+2)& (0+255),b
  4945  0044E4  0E7F               	movlw	127
  4946  0044E6  0100               	movlb	0	; () banked
  4947  0044E8  15B4               	andwf	(___flge@ff1+3)& (0+255),w,b
  4948  0044EA  0100               	movlb	0	; () banked
  4949  0044EC  6FBC               	movwf	(??___flge+3)& (0+255),b
  4950  0044EE  0100               	movlb	0	; () banked
  4951  0044F0  51B9               	movf	??___flge& (0+255),w,b
  4952  0044F2  0100               	movlb	0	; () banked
  4953  0044F4  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  4954  0044F6  0100               	movlb	0	; () banked
  4955  0044F8  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  4956  0044FA  0100               	movlb	0	; () banked
  4957  0044FC  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  4958  0044FE  A4D8               	btfss	status,2,c
  4959  004500  D009               	goto	l5882
  4960                           
  4961                           ; BSR set to: 0
  4962  004502  0E00               	movlw	0
  4963  004504  0100               	movlb	0	; () banked
  4964  004506  6FB1               	movwf	___flge@ff1& (0+255),b
  4965  004508  0E00               	movlw	0
  4966  00450A  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  4967  00450C  0E00               	movlw	0
  4968  00450E  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  4969  004510  0E00               	movlw	0
  4970  004512  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  4971  004514                     l5882:
  4972                           
  4973                           ; BSR set to: 0
  4974  004514  0E00               	movlw	0
  4975  004516  0100               	movlb	0	; () banked
  4976  004518  15B5               	andwf	___flge@ff2& (0+255),w,b
  4977  00451A  0100               	movlb	0	; () banked
  4978  00451C  6FB9               	movwf	??___flge& (0+255),b
  4979  00451E  0E00               	movlw	0
  4980  004520  0100               	movlb	0	; () banked
  4981  004522  15B6               	andwf	(___flge@ff2+1)& (0+255),w,b
  4982  004524  0100               	movlb	0	; () banked
  4983  004526  6FBA               	movwf	(??___flge+1)& (0+255),b
  4984  004528  0E80               	movlw	128
  4985  00452A  0100               	movlb	0	; () banked
  4986  00452C  15B7               	andwf	(___flge@ff2+2)& (0+255),w,b
  4987  00452E  0100               	movlb	0	; () banked
  4988  004530  6FBB               	movwf	(??___flge+2)& (0+255),b
  4989  004532  0E7F               	movlw	127
  4990  004534  0100               	movlb	0	; () banked
  4991  004536  15B8               	andwf	(___flge@ff2+3)& (0+255),w,b
  4992  004538  0100               	movlb	0	; () banked
  4993  00453A  6FBC               	movwf	(??___flge+3)& (0+255),b
  4994  00453C  0100               	movlb	0	; () banked
  4995  00453E  51B9               	movf	??___flge& (0+255),w,b
  4996  004540  0100               	movlb	0	; () banked
  4997  004542  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  4998  004544  0100               	movlb	0	; () banked
  4999  004546  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  5000  004548  0100               	movlb	0	; () banked
  5001  00454A  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  5002  00454C  A4D8               	btfss	status,2,c
  5003  00454E  D009               	goto	l5886
  5004                           
  5005                           ; BSR set to: 0
  5006  004550  0E00               	movlw	0
  5007  004552  0100               	movlb	0	; () banked
  5008  004554  6FB5               	movwf	___flge@ff2& (0+255),b
  5009  004556  0E00               	movlw	0
  5010  004558  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  5011  00455A  0E00               	movlw	0
  5012  00455C  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  5013  00455E  0E00               	movlw	0
  5014  004560  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  5015  004562                     l5886:
  5016                           
  5017                           ; BSR set to: 0
  5018  004562  0100               	movlb	0	; () banked
  5019  004564  AFB4               	btfss	(___flge@ff1+3)& (0+255),7,b
  5020  004566  D026               	goto	l5890
  5021                           
  5022                           ; BSR set to: 0
  5023  004568  C0B1  F0B9         	movff	___flge@ff1,??___flge
  5024  00456C  C0B2  F0BA         	movff	___flge@ff1+1,??___flge+1
  5025  004570  C0B3  F0BB         	movff	___flge@ff1+2,??___flge+2
  5026  004574  C0B4  F0BC         	movff	___flge@ff1+3,??___flge+3
  5027  004578  0100               	movlb	0	; () banked
  5028  00457A  1FB9               	comf	??___flge& (0+255),f,b
  5029  00457C  1FBA               	comf	(??___flge+1)& (0+255),f,b
  5030  00457E  1FBB               	comf	(??___flge+2)& (0+255),f,b
  5031  004580  1FBC               	comf	(??___flge+3)& (0+255),f,b
  5032  004582  2BB9               	incf	??___flge& (0+255),f,b
  5033  004584  0E00               	movlw	0
  5034  004586  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  5035  004588  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  5036  00458A  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  5037  00458C  0E00               	movlw	0
  5038  00458E  0100               	movlb	0	; () banked
  5039  004590  25B9               	addwf	??___flge& (0+255),w,b
  5040  004592  0100               	movlb	0	; () banked
  5041  004594  6FB1               	movwf	___flge@ff1& (0+255),b
  5042  004596  0E00               	movlw	0
  5043  004598  0100               	movlb	0	; () banked
  5044  00459A  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  5045  00459C  0100               	movlb	0	; () banked
  5046  00459E  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  5047  0045A0  0E00               	movlw	0
  5048  0045A2  0100               	movlb	0	; () banked
  5049  0045A4  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  5050  0045A6  0100               	movlb	0	; () banked
  5051  0045A8  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  5052  0045AA  0E80               	movlw	128
  5053  0045AC  0100               	movlb	0	; () banked
  5054  0045AE  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  5055  0045B0  0100               	movlb	0	; () banked
  5056  0045B2  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  5057  0045B4                     l5890:
  5058                           
  5059                           ; BSR set to: 0
  5060  0045B4  0100               	movlb	0	; () banked
  5061  0045B6  AFB8               	btfss	(___flge@ff2+3)& (0+255),7,b
  5062  0045B8  D026               	goto	l987
  5063                           
  5064                           ; BSR set to: 0
  5065  0045BA  C0B5  F0B9         	movff	___flge@ff2,??___flge
  5066  0045BE  C0B6  F0BA         	movff	___flge@ff2+1,??___flge+1
  5067  0045C2  C0B7  F0BB         	movff	___flge@ff2+2,??___flge+2
  5068  0045C6  C0B8  F0BC         	movff	___flge@ff2+3,??___flge+3
  5069  0045CA  0100               	movlb	0	; () banked
  5070  0045CC  1FB9               	comf	??___flge& (0+255),f,b
  5071  0045CE  1FBA               	comf	(??___flge+1)& (0+255),f,b
  5072  0045D0  1FBB               	comf	(??___flge+2)& (0+255),f,b
  5073  0045D2  1FBC               	comf	(??___flge+3)& (0+255),f,b
  5074  0045D4  2BB9               	incf	??___flge& (0+255),f,b
  5075  0045D6  0E00               	movlw	0
  5076  0045D8  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  5077  0045DA  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  5078  0045DC  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  5079  0045DE  0E00               	movlw	0
  5080  0045E0  0100               	movlb	0	; () banked
  5081  0045E2  25B9               	addwf	??___flge& (0+255),w,b
  5082  0045E4  0100               	movlb	0	; () banked
  5083  0045E6  6FB5               	movwf	___flge@ff2& (0+255),b
  5084  0045E8  0E00               	movlw	0
  5085  0045EA  0100               	movlb	0	; () banked
  5086  0045EC  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  5087  0045EE  0100               	movlb	0	; () banked
  5088  0045F0  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  5089  0045F2  0E00               	movlw	0
  5090  0045F4  0100               	movlb	0	; () banked
  5091  0045F6  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  5092  0045F8  0100               	movlb	0	; () banked
  5093  0045FA  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  5094  0045FC  0E80               	movlw	128
  5095  0045FE  0100               	movlb	0	; () banked
  5096  004600  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  5097  004602  0100               	movlb	0	; () banked
  5098  004604  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  5099  004606                     l987:
  5100                           
  5101                           ; BSR set to: 0
  5102  004606  0E00               	movlw	0
  5103  004608  0100               	movlb	0	; () banked
  5104  00460A  1BB1               	xorwf	___flge@ff1& (0+255),f,b
  5105  00460C  0E00               	movlw	0
  5106  00460E  1BB2               	xorwf	(___flge@ff1+1)& (0+255),f,b
  5107  004610  0E00               	movlw	0
  5108  004612  1BB3               	xorwf	(___flge@ff1+2)& (0+255),f,b
  5109  004614  0E80               	movlw	128
  5110  004616  1BB4               	xorwf	(___flge@ff1+3)& (0+255),f,b
  5111  004618  0E00               	movlw	0
  5112  00461A  0100               	movlb	0	; () banked
  5113  00461C  1BB5               	xorwf	___flge@ff2& (0+255),f,b
  5114  00461E  0E00               	movlw	0
  5115  004620  1BB6               	xorwf	(___flge@ff2+1)& (0+255),f,b
  5116  004622  0E00               	movlw	0
  5117  004624  1BB7               	xorwf	(___flge@ff2+2)& (0+255),f,b
  5118  004626  0E80               	movlw	128
  5119  004628  1BB8               	xorwf	(___flge@ff2+3)& (0+255),f,b
  5120  00462A  0100               	movlb	0	; () banked
  5121  00462C  51B5               	movf	___flge@ff2& (0+255),w,b
  5122  00462E  0100               	movlb	0	; () banked
  5123  004630  5DB1               	subwf	___flge@ff1& (0+255),w,b
  5124  004632  0100               	movlb	0	; () banked
  5125  004634  51B6               	movf	(___flge@ff2+1)& (0+255),w,b
  5126  004636  0100               	movlb	0	; () banked
  5127  004638  59B2               	subwfb	(___flge@ff1+1)& (0+255),w,b
  5128  00463A  0100               	movlb	0	; () banked
  5129  00463C  51B7               	movf	(___flge@ff2+2)& (0+255),w,b
  5130  00463E  0100               	movlb	0	; () banked
  5131  004640  59B3               	subwfb	(___flge@ff1+2)& (0+255),w,b
  5132  004642  0100               	movlb	0	; () banked
  5133  004644  51B8               	movf	(___flge@ff2+3)& (0+255),w,b
  5134  004646  0100               	movlb	0	; () banked
  5135  004648  59B4               	subwfb	(___flge@ff1+3)& (0+255),w,b
  5136  00464A  B0D8               	btfsc	status,0,c
  5137  00464C  D002               	goto	l5896
  5138                           
  5139                           ; BSR set to: 0
  5140  00464E  90D8               	bcf	status,0,c
  5141  004650  0012               	return	
  5142  004652                     l5896:
  5143                           
  5144                           ; BSR set to: 0
  5145  004652  80D8               	bsf	status,0,c
  5146                           
  5147                           ; BSR set to: 0
  5148  004654  0012               	return	
  5149  004656                     __end_of___flge:
  5150                           	opt stack 0
  5151                           tblptru	equ	0xFF8
  5152                           tblptrh	equ	0xFF7
  5153                           tblptrl	equ	0xFF6
  5154                           tablat	equ	0xFF5
  5155                           prodh	equ	0xFF4
  5156                           prodl	equ	0xFF3
  5157                           postinc0	equ	0xFEE
  5158                           wreg	equ	0xFE8
  5159                           postinc2	equ	0xFDE
  5160                           postdec2	equ	0xFDD
  5161                           status	equ	0xFD8
  5162                           
  5163 ;; *************** function ___fldiv *****************
  5164 ;; Defined at:
  5165 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;  b               4   23[BANK0 ] unsigned char 
  5168 ;;  a               4   27[BANK0 ] unsigned char 
  5169 ;; Auto vars:     Size  Location     Type
  5170 ;;  grs             4   42[BANK0 ] unsigned long 
  5171 ;;  rem             4   36[BANK0 ] unsigned long 
  5172 ;;  new_exp         2   40[BANK0 ] int 
  5173 ;;  aexp            1   47[BANK0 ] unsigned char 
  5174 ;;  bexp            1   46[BANK0 ] unsigned char 
  5175 ;;  sign            1   35[BANK0 ] unsigned char 
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  4   23[BANK0 ] unsigned char 
  5178 ;; Registers used:
  5179 ;;		wreg, status,2, status,0
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5185 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5186 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5187 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5188 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5189 ;;Total ram usage:       25 bytes
  5190 ;; Hardware stack levels used:    1
  5191 ;; Hardware stack levels required when called:    4
  5192 ;; This function calls:
  5193 ;;		Nothing
  5194 ;; This function is called by:
  5195 ;;		_parallelo
  5196 ;;		_asin
  5197 ;;		_atan
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           	psect	text12
  5202  0031E4                     __ptext12:
  5203                           	opt stack 0
  5204  0031E4                     ___fldiv:
  5205                           	opt stack 22
  5206                           
  5207                           ; BSR set to: 0
  5208                           ;incstack = 0
  5209  0031E4  0100               	movlb	0	; () banked
  5210  0031E6  517A               	movf	(___fldiv@b+3)& (0+255),w,b
  5211  0031E8  0B80               	andlw	128
  5212  0031EA  0100               	movlb	0	; () banked
  5213  0031EC  6F83               	movwf	___fldiv@sign& (0+255),b
  5214  0031EE  0100               	movlb	0	; () banked
  5215  0031F0  517A               	movf	(___fldiv@b+3)& (0+255),w,b
  5216  0031F2  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
  5217  0031F4  0100               	movlb	0	; () banked
  5218  0031F6  6F8E               	movwf	___fldiv@bexp& (0+255),b
  5219                           
  5220                           ; BSR set to: 0
  5221  0031F8  0100               	movlb	0	; () banked
  5222  0031FA  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
  5223  0031FC  D002               	goto	l5736
  5224                           
  5225                           ; BSR set to: 0
  5226  0031FE  0100               	movlb	0	; () banked
  5227  003200  818E               	bsf	___fldiv@bexp& (0+255),0,b
  5228  003202                     l5736:
  5229                           
  5230                           ; BSR set to: 0
  5231  003202  0100               	movlb	0	; () banked
  5232  003204  518E               	movf	___fldiv@bexp& (0+255),w,b
  5233  003206  0100               	movlb	0	; () banked
  5234  003208  B4D8               	btfsc	status,2,c
  5235  00320A  D012               	goto	l5746
  5236                           
  5237                           ; BSR set to: 0
  5238  00320C  0100               	movlb	0	; () banked
  5239  00320E  298E               	incf	___fldiv@bexp& (0+255),w,b
  5240  003210  A4D8               	btfss	status,2,c
  5241  003212  D009               	goto	l5742
  5242                           
  5243                           ; BSR set to: 0
  5244  003214  0E00               	movlw	0
  5245  003216  0100               	movlb	0	; () banked
  5246  003218  6F77               	movwf	___fldiv@b& (0+255),b
  5247  00321A  0E00               	movlw	0
  5248  00321C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5249  00321E  0E00               	movlw	0
  5250  003220  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5251  003222  0E00               	movlw	0
  5252  003224  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5253  003226                     l5742:
  5254                           
  5255                           ; BSR set to: 0
  5256  003226  0100               	movlb	0	; () banked
  5257  003228  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
  5258                           
  5259                           ; BSR set to: 0
  5260  00322A  0E00               	movlw	0
  5261  00322C  0100               	movlb	0	; () banked
  5262  00322E  D008               	goto	L5
  5263  003230                     l5746:
  5264                           
  5265                           ; BSR set to: 0
  5266  003230  0E00               	movlw	0
  5267  003232  0100               	movlb	0	; () banked
  5268  003234  6F77               	movwf	___fldiv@b& (0+255),b
  5269  003236  0E00               	movlw	0
  5270  003238  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5271  00323A  0E00               	movlw	0
  5272  00323C  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5273  00323E  0E00               	movlw	0
  5274  003240                     L5:
  5275  003240  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5276                           
  5277                           ; BSR set to: 0
  5278                           
  5279                           ; BSR set to: 0
  5280  003242  0100               	movlb	0	; () banked
  5281  003244  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  5282  003246  0B80               	andlw	128
  5283  003248  0100               	movlb	0	; () banked
  5284  00324A  1B83               	xorwf	___fldiv@sign& (0+255),f,b
  5285                           
  5286                           ; BSR set to: 0
  5287  00324C  0100               	movlb	0	; () banked
  5288  00324E  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  5289  003250  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
  5290  003252  0100               	movlb	0	; () banked
  5291  003254  6F8F               	movwf	___fldiv@aexp& (0+255),b
  5292                           
  5293                           ; BSR set to: 0
  5294  003256  0100               	movlb	0	; () banked
  5295  003258  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
  5296  00325A  D002               	goto	l5756
  5297                           
  5298                           ; BSR set to: 0
  5299  00325C  0100               	movlb	0	; () banked
  5300  00325E  818F               	bsf	___fldiv@aexp& (0+255),0,b
  5301  003260                     l5756:
  5302                           
  5303                           ; BSR set to: 0
  5304  003260  0100               	movlb	0	; () banked
  5305  003262  518F               	movf	___fldiv@aexp& (0+255),w,b
  5306  003264  0100               	movlb	0	; () banked
  5307  003266  B4D8               	btfsc	status,2,c
  5308  003268  D012               	goto	l5766
  5309                           
  5310                           ; BSR set to: 0
  5311  00326A  0100               	movlb	0	; () banked
  5312  00326C  298F               	incf	___fldiv@aexp& (0+255),w,b
  5313  00326E  A4D8               	btfss	status,2,c
  5314  003270  D009               	goto	l5762
  5315                           
  5316                           ; BSR set to: 0
  5317  003272  0E00               	movlw	0
  5318  003274  0100               	movlb	0	; () banked
  5319  003276  6F7B               	movwf	___fldiv@a& (0+255),b
  5320  003278  0E00               	movlw	0
  5321  00327A  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5322  00327C  0E00               	movlw	0
  5323  00327E  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5324  003280  0E00               	movlw	0
  5325  003282  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5326  003284                     l5762:
  5327                           
  5328                           ; BSR set to: 0
  5329  003284  0100               	movlb	0	; () banked
  5330  003286  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
  5331                           
  5332                           ; BSR set to: 0
  5333  003288  0E00               	movlw	0
  5334  00328A  0100               	movlb	0	; () banked
  5335  00328C  D008               	goto	L6
  5336  00328E                     l5766:
  5337                           
  5338                           ; BSR set to: 0
  5339  00328E  0E00               	movlw	0
  5340  003290  0100               	movlb	0	; () banked
  5341  003292  6F7B               	movwf	___fldiv@a& (0+255),b
  5342  003294  0E00               	movlw	0
  5343  003296  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5344  003298  0E00               	movlw	0
  5345  00329A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5346  00329C  0E00               	movlw	0
  5347  00329E                     L6:
  5348  00329E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5349                           
  5350                           ; BSR set to: 0
  5351                           
  5352                           ; BSR set to: 0
  5353  0032A0  0100               	movlb	0	; () banked
  5354  0032A2  517B               	movf	___fldiv@a& (0+255),w,b
  5355  0032A4  0100               	movlb	0	; () banked
  5356  0032A6  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
  5357  0032A8  0100               	movlb	0	; () banked
  5358  0032AA  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
  5359  0032AC  0100               	movlb	0	; () banked
  5360  0032AE  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
  5361  0032B0  A4D8               	btfss	status,2,c
  5362  0032B2  D017               	goto	l5778
  5363                           
  5364                           ; BSR set to: 0
  5365  0032B4  0E00               	movlw	0
  5366  0032B6  0100               	movlb	0	; () banked
  5367  0032B8  6F77               	movwf	___fldiv@b& (0+255),b
  5368  0032BA  0E00               	movlw	0
  5369  0032BC  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5370  0032BE  0E00               	movlw	0
  5371  0032C0  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5372  0032C2  0E00               	movlw	0
  5373  0032C4  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5374                           
  5375                           ; BSR set to: 0
  5376  0032C6  0100               	movlb	0	; () banked
  5377  0032C8  0E80               	movlw	128
  5378  0032CA  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
  5379  0032CC  0E7F               	movlw	127
  5380  0032CE  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
  5381                           
  5382                           ; BSR set to: 0
  5383  0032D0  C077  F077         	movff	___fldiv@b,?___fldiv
  5384  0032D4  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  5385  0032D8  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  5386  0032DC  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  5387                           
  5388                           ; BSR set to: 0
  5389  0032E0  0012               	return	
  5390  0032E2                     l5778:
  5391                           
  5392                           ; BSR set to: 0
  5393  0032E2  0100               	movlb	0	; () banked
  5394  0032E4  518E               	movf	___fldiv@bexp& (0+255),w,b
  5395  0032E6  0100               	movlb	0	; () banked
  5396  0032E8  A4D8               	btfss	status,2,c
  5397  0032EA  D012               	goto	l5786
  5398                           
  5399                           ; BSR set to: 0
  5400  0032EC  0E00               	movlw	0
  5401  0032EE  0100               	movlb	0	; () banked
  5402  0032F0  6F77               	movwf	___fldiv@b& (0+255),b
  5403  0032F2  0E00               	movlw	0
  5404  0032F4  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5405  0032F6  0E00               	movlw	0
  5406  0032F8  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5407  0032FA  0E00               	movlw	0
  5408  0032FC  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5409                           
  5410                           ; BSR set to: 0
  5411  0032FE  C077  F077         	movff	___fldiv@b,?___fldiv
  5412  003302  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  5413  003306  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  5414  00330A  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  5415                           
  5416                           ; BSR set to: 0
  5417  00330E  0012               	return	
  5418  003310                     l5786:
  5419                           
  5420                           ; BSR set to: 0
  5421  003310  0100               	movlb	0	; () banked
  5422  003312  518F               	movf	___fldiv@aexp& (0+255),w,b
  5423  003314  0100               	movlb	0	; () banked
  5424  003316  6F7F               	movwf	??___fldiv& (0+255),b
  5425  003318  6B80               	clrf	(??___fldiv+1)& (0+255),b
  5426  00331A  0100               	movlb	0	; () banked
  5427  00331C  1F7F               	comf	??___fldiv& (0+255),f,b
  5428  00331E  1F80               	comf	(??___fldiv+1)& (0+255),f,b
  5429  003320  4B7F               	infsnz	??___fldiv& (0+255),f,b
  5430  003322  2B80               	incf	(??___fldiv+1)& (0+255),f,b
  5431  003324  0100               	movlb	0	; () banked
  5432  003326  518E               	movf	___fldiv@bexp& (0+255),w,b
  5433  003328  0100               	movlb	0	; () banked
  5434  00332A  6F81               	movwf	(??___fldiv+2)& (0+255),b
  5435  00332C  6B82               	clrf	(??___fldiv+3)& (0+255),b
  5436  00332E  0100               	movlb	0	; () banked
  5437  003330  517F               	movf	??___fldiv& (0+255),w,b
  5438  003332  0100               	movlb	0	; () banked
  5439  003334  2781               	addwf	(??___fldiv+2)& (0+255),f,b
  5440  003336  0100               	movlb	0	; () banked
  5441  003338  5180               	movf	(??___fldiv+1)& (0+255),w,b
  5442  00333A  0100               	movlb	0	; () banked
  5443  00333C  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
  5444  00333E  0E7F               	movlw	127
  5445  003340  0100               	movlb	0	; () banked
  5446  003342  2581               	addwf	(??___fldiv+2)& (0+255),w,b
  5447  003344  0100               	movlb	0	; () banked
  5448  003346  6F88               	movwf	___fldiv@new_exp& (0+255),b
  5449  003348  0E00               	movlw	0
  5450  00334A  0100               	movlb	0	; () banked
  5451  00334C  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
  5452  00334E  0100               	movlb	0	; () banked
  5453  003350  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5454                           
  5455                           ; BSR set to: 0
  5456  003352  C077  F084         	movff	___fldiv@b,___fldiv@rem
  5457  003356  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
  5458  00335A  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
  5459  00335E  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
  5460                           
  5461                           ; BSR set to: 0
  5462  003362  0E00               	movlw	0
  5463  003364  0100               	movlb	0	; () banked
  5464  003366  6F77               	movwf	___fldiv@b& (0+255),b
  5465  003368  0E00               	movlw	0
  5466  00336A  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5467  00336C  0E00               	movlw	0
  5468  00336E  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5469  003370  0E00               	movlw	0
  5470  003372  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5471                           
  5472                           ; BSR set to: 0
  5473  003374  0E00               	movlw	0
  5474  003376  0100               	movlb	0	; () banked
  5475  003378  6F8A               	movwf	___fldiv@grs& (0+255),b
  5476  00337A  0E00               	movlw	0
  5477  00337C  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
  5478  00337E  0E00               	movlw	0
  5479  003380  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
  5480  003382  0E00               	movlw	0
  5481  003384  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
  5482                           
  5483                           ; BSR set to: 0
  5484  003386  0E00               	movlw	0
  5485  003388  0100               	movlb	0	; () banked
  5486  00338A  6F8F               	movwf	___fldiv@aexp& (0+255),b
  5487  00338C  D042               	goto	l1280
  5488  00338E                     l5796:
  5489                           
  5490                           ; BSR set to: 0
  5491  00338E  0100               	movlb	0	; () banked
  5492  003390  518F               	movf	___fldiv@aexp& (0+255),w,b
  5493  003392  0100               	movlb	0	; () banked
  5494  003394  B4D8               	btfsc	status,2,c
  5495  003396  D017               	goto	l5804
  5496                           
  5497                           ; BSR set to: 0
  5498  003398  0100               	movlb	0	; () banked
  5499  00339A  90D8               	bcf	status,0,c
  5500  00339C  3784               	rlcf	___fldiv@rem& (0+255),f,b
  5501  00339E  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  5502  0033A0  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  5503  0033A2  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  5504  0033A4  0100               	movlb	0	; () banked
  5505  0033A6  90D8               	bcf	status,0,c
  5506  0033A8  3777               	rlcf	___fldiv@b& (0+255),f,b
  5507  0033AA  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
  5508  0033AC  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
  5509  0033AE  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
  5510                           
  5511                           ; BSR set to: 0
  5512  0033B0  0100               	movlb	0	; () banked
  5513  0033B2  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5514  0033B4  D002               	goto	l1283
  5515                           
  5516                           ; BSR set to: 0
  5517  0033B6  0100               	movlb	0	; () banked
  5518  0033B8  8177               	bsf	___fldiv@b& (0+255),0,b
  5519  0033BA                     l1283:
  5520                           
  5521                           ; BSR set to: 0
  5522  0033BA  0100               	movlb	0	; () banked
  5523  0033BC  90D8               	bcf	status,0,c
  5524  0033BE  378A               	rlcf	___fldiv@grs& (0+255),f,b
  5525  0033C0  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  5526  0033C2  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  5527  0033C4  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  5528  0033C6                     l5804:
  5529                           
  5530                           ; BSR set to: 0
  5531  0033C6  0100               	movlb	0	; () banked
  5532  0033C8  517B               	movf	___fldiv@a& (0+255),w,b
  5533  0033CA  0100               	movlb	0	; () banked
  5534  0033CC  5D84               	subwf	___fldiv@rem& (0+255),w,b
  5535  0033CE  0100               	movlb	0	; () banked
  5536  0033D0  517C               	movf	(___fldiv@a+1)& (0+255),w,b
  5537  0033D2  0100               	movlb	0	; () banked
  5538  0033D4  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  5539  0033D6  0100               	movlb	0	; () banked
  5540  0033D8  517D               	movf	(___fldiv@a+2)& (0+255),w,b
  5541  0033DA  0100               	movlb	0	; () banked
  5542  0033DC  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  5543  0033DE  0100               	movlb	0	; () banked
  5544  0033E0  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  5545  0033E2  0100               	movlb	0	; () banked
  5546  0033E4  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  5547  0033E6  A0D8               	btfss	status,0,c
  5548  0033E8  D012               	goto	l5810
  5549                           
  5550                           ; BSR set to: 0
  5551  0033EA  0100               	movlb	0	; () banked
  5552  0033EC  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
  5553                           
  5554                           ; BSR set to: 0
  5555  0033EE  0100               	movlb	0	; () banked
  5556  0033F0  517B               	movf	___fldiv@a& (0+255),w,b
  5557  0033F2  0100               	movlb	0	; () banked
  5558  0033F4  5F84               	subwf	___fldiv@rem& (0+255),f,b
  5559  0033F6  0100               	movlb	0	; () banked
  5560  0033F8  517C               	movf	(___fldiv@a+1)& (0+255),w,b
  5561  0033FA  0100               	movlb	0	; () banked
  5562  0033FC  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  5563  0033FE  0100               	movlb	0	; () banked
  5564  003400  517D               	movf	(___fldiv@a+2)& (0+255),w,b
  5565  003402  0100               	movlb	0	; () banked
  5566  003404  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  5567  003406  0100               	movlb	0	; () banked
  5568  003408  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  5569  00340A  0100               	movlb	0	; () banked
  5570  00340C  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  5571  00340E                     l5810:
  5572                           
  5573                           ; BSR set to: 0
  5574  00340E  0100               	movlb	0	; () banked
  5575  003410  2B8F               	incf	___fldiv@aexp& (0+255),f,b
  5576  003412                     l1280:
  5577                           
  5578                           ; BSR set to: 0
  5579  003412  0E19               	movlw	25
  5580  003414  0100               	movlb	0	; () banked
  5581  003416  658F               	cpfsgt	___fldiv@aexp& (0+255),b
  5582  003418  D7BA               	goto	l5796
  5583                           
  5584                           ; BSR set to: 0
  5585                           
  5586                           ; BSR set to: 0
  5587  00341A  0100               	movlb	0	; () banked
  5588  00341C  5184               	movf	___fldiv@rem& (0+255),w,b
  5589  00341E  0100               	movlb	0	; () banked
  5590  003420  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  5591  003422  0100               	movlb	0	; () banked
  5592  003424  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  5593  003426  0100               	movlb	0	; () banked
  5594  003428  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  5595  00342A  B4D8               	btfsc	status,2,c
  5596  00342C  D018               	goto	l5822
  5597                           
  5598                           ; BSR set to: 0
  5599  00342E  0100               	movlb	0	; () banked
  5600  003430  818A               	bsf	___fldiv@grs& (0+255),0,b
  5601                           
  5602                           ; BSR set to: 0
  5603  003432  D015               	goto	l5822
  5604  003434                     l5816:
  5605                           
  5606                           ; BSR set to: 0
  5607  003434  0100               	movlb	0	; () banked
  5608  003436  90D8               	bcf	status,0,c
  5609  003438  3777               	rlcf	___fldiv@b& (0+255),f,b
  5610  00343A  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
  5611  00343C  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
  5612  00343E  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
  5613                           
  5614                           ; BSR set to: 0
  5615  003440  0100               	movlb	0	; () banked
  5616  003442  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5617  003444  D002               	goto	l1289
  5618                           
  5619                           ; BSR set to: 0
  5620  003446  0100               	movlb	0	; () banked
  5621  003448  8177               	bsf	___fldiv@b& (0+255),0,b
  5622  00344A                     l1289:
  5623                           
  5624                           ; BSR set to: 0
  5625  00344A  0100               	movlb	0	; () banked
  5626  00344C  90D8               	bcf	status,0,c
  5627  00344E  378A               	rlcf	___fldiv@grs& (0+255),f,b
  5628  003450  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  5629  003452  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  5630  003454  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  5631  003456  0100               	movlb	0	; () banked
  5632  003458  0788               	decf	___fldiv@new_exp& (0+255),f,b
  5633  00345A  A0D8               	btfss	status,0,c
  5634  00345C  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  5635  00345E                     l5822:
  5636                           
  5637                           ; BSR set to: 0
  5638  00345E  0100               	movlb	0	; () banked
  5639  003460  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
  5640  003462  D7E8               	goto	l5816
  5641                           
  5642                           ; BSR set to: 0
  5643                           
  5644                           ; BSR set to: 0
  5645  003464  0E00               	movlw	0
  5646  003466  0100               	movlb	0	; () banked
  5647  003468  6F8F               	movwf	___fldiv@aexp& (0+255),b
  5648                           
  5649                           ; BSR set to: 0
  5650  00346A  0100               	movlb	0	; () banked
  5651  00346C  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5652  00346E  D024               	goto	l1291
  5653                           
  5654                           ; BSR set to: 0
  5655  003470  0EFF               	movlw	255
  5656  003472  0100               	movlb	0	; () banked
  5657  003474  158A               	andwf	___fldiv@grs& (0+255),w,b
  5658  003476  0100               	movlb	0	; () banked
  5659  003478  6F7F               	movwf	??___fldiv& (0+255),b
  5660  00347A  0EFF               	movlw	255
  5661  00347C  0100               	movlb	0	; () banked
  5662  00347E  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
  5663  003480  0100               	movlb	0	; () banked
  5664  003482  6F80               	movwf	(??___fldiv+1)& (0+255),b
  5665  003484  0EFF               	movlw	255
  5666  003486  0100               	movlb	0	; () banked
  5667  003488  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
  5668  00348A  0100               	movlb	0	; () banked
  5669  00348C  6F81               	movwf	(??___fldiv+2)& (0+255),b
  5670  00348E  0E7F               	movlw	127
  5671  003490  0100               	movlb	0	; () banked
  5672  003492  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
  5673  003494  0100               	movlb	0	; () banked
  5674  003496  6F82               	movwf	(??___fldiv+3)& (0+255),b
  5675  003498  0100               	movlb	0	; () banked
  5676  00349A  517F               	movf	??___fldiv& (0+255),w,b
  5677  00349C  0100               	movlb	0	; () banked
  5678  00349E  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
  5679  0034A0  0100               	movlb	0	; () banked
  5680  0034A2  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
  5681  0034A4  0100               	movlb	0	; () banked
  5682  0034A6  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
  5683  0034A8  A4D8               	btfss	status,2,c
  5684  0034AA  D003               	goto	l5832
  5685                           
  5686                           ; BSR set to: 0
  5687                           
  5688                           ; BSR set to: 0
  5689  0034AC  0100               	movlb	0	; () banked
  5690  0034AE  A177               	btfss	___fldiv@b& (0+255),0,b
  5691  0034B0  D003               	goto	l1291
  5692  0034B2                     l5832:
  5693                           
  5694                           ; BSR set to: 0
  5695  0034B2  0E01               	movlw	1
  5696  0034B4  0100               	movlb	0	; () banked
  5697  0034B6  6F8F               	movwf	___fldiv@aexp& (0+255),b
  5698  0034B8                     l1291:
  5699                           
  5700                           ; BSR set to: 0
  5701  0034B8  0100               	movlb	0	; () banked
  5702  0034BA  518F               	movf	___fldiv@aexp& (0+255),w,b
  5703  0034BC  0100               	movlb	0	; () banked
  5704  0034BE  B4D8               	btfsc	status,2,c
  5705  0034C0  D023               	goto	l5842
  5706                           
  5707                           ; BSR set to: 0
  5708  0034C2  0E01               	movlw	1
  5709  0034C4  0100               	movlb	0	; () banked
  5710  0034C6  2777               	addwf	___fldiv@b& (0+255),f,b
  5711  0034C8  0E00               	movlw	0
  5712  0034CA  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
  5713  0034CC  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
  5714  0034CE  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
  5715                           
  5716                           ; BSR set to: 0
  5717  0034D0  0100               	movlb	0	; () banked
  5718  0034D2  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
  5719  0034D4  D019               	goto	l5842
  5720                           
  5721                           ; BSR set to: 0
  5722  0034D6  C077  F07F         	movff	___fldiv@b,??___fldiv
  5723  0034DA  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
  5724  0034DE  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
  5725  0034E2  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
  5726  0034E6  0100               	movlb	0	; () banked
  5727  0034E8  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
  5728  0034EA  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
  5729  0034EC  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
  5730  0034EE  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
  5731  0034F0  337F               	rrcf	??___fldiv& (0+255),f,b
  5732  0034F2  C07F  F077         	movff	??___fldiv,___fldiv@b
  5733  0034F6  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
  5734  0034FA  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
  5735  0034FE  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
  5736                           
  5737                           ; BSR set to: 0
  5738  003502  0100               	movlb	0	; () banked
  5739  003504  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
  5740  003506  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  5741  003508                     l5842:
  5742                           
  5743                           ; BSR set to: 0
  5744  003508  0100               	movlb	0	; () banked
  5745  00350A  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  5746  00350C  D014               	goto	l5846
  5747  00350E  0100               	movlb	0	; () banked
  5748  003510  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  5749  003512  E104               	bnz	u7500
  5750  003514  0100               	movlb	0	; () banked
  5751  003516  2988               	incf	___fldiv@new_exp& (0+255),w,b
  5752  003518  A0D8               	btfss	status,0,c
  5753  00351A  D00D               	goto	l5846
  5754  00351C                     u7500:
  5755                           
  5756                           ; BSR set to: 0
  5757  00351C  0E00               	movlw	0
  5758  00351E  0100               	movlb	0	; () banked
  5759  003520  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5760  003522  6988               	setf	___fldiv@new_exp& (0+255),b
  5761  003524  0E00               	movlw	0
  5762  003526  0100               	movlb	0	; () banked
  5763  003528  6F77               	movwf	___fldiv@b& (0+255),b
  5764  00352A  0E00               	movlw	0
  5765  00352C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5766  00352E  0E00               	movlw	0
  5767  003530  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5768  003532  0E00               	movlw	0
  5769  003534  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5770  003536                     l5846:
  5771                           
  5772                           ; BSR set to: 0
  5773  003536  0100               	movlb	0	; () banked
  5774  003538  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  5775  00353A  D007               	goto	l5848
  5776  00353C  0100               	movlb	0	; () banked
  5777  00353E  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  5778  003540  E115               	bnz	l5850
  5779  003542  0100               	movlb	0	; () banked
  5780  003544  0588               	decf	___fldiv@new_exp& (0+255),w,b
  5781  003546  B0D8               	btfsc	status,0,c
  5782  003548  D011               	goto	l5850
  5783  00354A                     l5848:
  5784                           
  5785                           ; BSR set to: 0
  5786  00354A  0E00               	movlw	0
  5787  00354C  0100               	movlb	0	; () banked
  5788  00354E  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5789  003550  0E00               	movlw	0
  5790  003552  6F88               	movwf	___fldiv@new_exp& (0+255),b
  5791  003554  0E00               	movlw	0
  5792  003556  0100               	movlb	0	; () banked
  5793  003558  6F77               	movwf	___fldiv@b& (0+255),b
  5794  00355A  0E00               	movlw	0
  5795  00355C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5796  00355E  0E00               	movlw	0
  5797  003560  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5798  003562  0E00               	movlw	0
  5799  003564  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5800  003566  0E00               	movlw	0
  5801  003568  0100               	movlb	0	; () banked
  5802  00356A  6F83               	movwf	___fldiv@sign& (0+255),b
  5803  00356C                     l5850:
  5804                           
  5805                           ; BSR set to: 0
  5806  00356C  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
  5807                           
  5808                           ; BSR set to: 0
  5809  003570  0100               	movlb	0	; () banked
  5810  003572  A18E               	btfss	___fldiv@bexp& (0+255),0,b
  5811  003574  D003               	goto	l5856
  5812                           
  5813                           ; BSR set to: 0
  5814  003576  0100               	movlb	0	; () banked
  5815  003578  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
  5816  00357A  D002               	goto	l5858
  5817  00357C                     l5856:
  5818                           
  5819                           ; BSR set to: 0
  5820  00357C  0100               	movlb	0	; () banked
  5821  00357E  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
  5822  003580                     l5858:
  5823                           
  5824                           ; BSR set to: 0
  5825  003580  0100               	movlb	0	; () banked
  5826  003582  90D8               	bcf	status,0,c
  5827  003584  318E               	rrcf	___fldiv@bexp& (0+255),w,b
  5828  003586  0100               	movlb	0	; () banked
  5829  003588  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5830                           
  5831                           ; BSR set to: 0
  5832  00358A  0100               	movlb	0	; () banked
  5833  00358C  5183               	movf	___fldiv@sign& (0+255),w,b
  5834  00358E  0100               	movlb	0	; () banked
  5835  003590  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
  5836                           
  5837                           ; BSR set to: 0
  5838  003592  C077  F077         	movff	___fldiv@b,?___fldiv
  5839  003596  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  5840  00359A  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  5841  00359E  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  5842  0035A2  0012               	return	
  5843  0035A4                     __end_of___fldiv:
  5844                           	opt stack 0
  5845                           tblptru	equ	0xFF8
  5846                           tblptrh	equ	0xFF7
  5847                           tblptrl	equ	0xFF6
  5848                           tablat	equ	0xFF5
  5849                           prodh	equ	0xFF4
  5850                           prodl	equ	0xFF3
  5851                           postinc0	equ	0xFEE
  5852                           wreg	equ	0xFE8
  5853                           postinc2	equ	0xFDE
  5854                           postdec2	equ	0xFDD
  5855                           status	equ	0xFD8
  5856                           
  5857 ;; *************** function _abs *****************
  5858 ;; Defined at:
  5859 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  5860 ;; Parameters:    Size  Location     Type
  5861 ;;  a               2  107[BANK0 ] int 
  5862 ;; Auto vars:     Size  Location     Type
  5863 ;;		None
  5864 ;; Return value:  Size  Location     Type
  5865 ;;                  2  107[BANK0 ] int 
  5866 ;; Registers used:
  5867 ;;		wreg, status,2, status,0
  5868 ;; Tracked objects:
  5869 ;;		On entry : 0/0
  5870 ;;		On exit  : 0/0
  5871 ;;		Unchanged: 0/0
  5872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5873 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5875 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5876 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5877 ;;Total ram usage:        4 bytes
  5878 ;; Hardware stack levels used:    1
  5879 ;; Hardware stack levels required when called:    4
  5880 ;; This function calls:
  5881 ;;		Nothing
  5882 ;; This function is called by:
  5883 ;;		_park_search
  5884 ;;		_parallelo
  5885 ;; This function uses a non-reentrant model
  5886 ;;
  5887                           
  5888                           	psect	text13
  5889  004E06                     __ptext13:
  5890                           	opt stack 0
  5891  004E06                     _abs:
  5892                           	opt stack 24
  5893                           
  5894                           ; BSR set to: 0
  5895                           ;incstack = 0
  5896  004E06  0100               	movlb	0	; () banked
  5897  004E08  AFCC               	btfss	(abs@a+1)& (0+255),7,b
  5898  004E0A  D00E               	goto	l786
  5899                           
  5900                           ; BSR set to: 0
  5901  004E0C  C0CB  F0CD         	movff	abs@a,??_abs
  5902  004E10  C0CC  F0CE         	movff	abs@a+1,??_abs+1
  5903  004E14  0100               	movlb	0	; () banked
  5904  004E16  1FCD               	comf	??_abs& (0+255),f,b
  5905  004E18  1FCE               	comf	(??_abs+1)& (0+255),f,b
  5906  004E1A  4BCD               	infsnz	??_abs& (0+255),f,b
  5907  004E1C  2BCE               	incf	(??_abs+1)& (0+255),f,b
  5908  004E1E  C0CD  F0CB         	movff	??_abs,?_abs
  5909  004E22  C0CE  F0CC         	movff	??_abs+1,?_abs+1
  5910  004E26  0012               	return	
  5911  004E28                     l786:
  5912                           
  5913                           ; BSR set to: 0
  5914  004E28  C0CB  F0CB         	movff	abs@a,?_abs
  5915  004E2C  C0CC  F0CC         	movff	abs@a+1,?_abs+1
  5916                           
  5917                           ; BSR set to: 0
  5918  004E30  0012               	return		;funcret
  5919  004E32                     __end_of_abs:
  5920                           	opt stack 0
  5921                           tblptru	equ	0xFF8
  5922                           tblptrh	equ	0xFF7
  5923                           tblptrl	equ	0xFF6
  5924                           tablat	equ	0xFF5
  5925                           prodh	equ	0xFF4
  5926                           prodl	equ	0xFF3
  5927                           postinc0	equ	0xFEE
  5928                           wreg	equ	0xFE8
  5929                           postinc2	equ	0xFDE
  5930                           postdec2	equ	0xFDD
  5931                           status	equ	0xFD8
  5932                           
  5933 ;; *************** function ___xxtofl *****************
  5934 ;; Defined at:
  5935 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;  sign            1    wreg     unsigned char 
  5938 ;;  val             4  111[BANK0 ] long 
  5939 ;; Auto vars:     Size  Location     Type
  5940 ;;  sign            1    4[BANK1 ] unsigned char 
  5941 ;;  arg             4    6[BANK1 ] unsigned long 
  5942 ;;  exp             1    5[BANK1 ] unsigned char 
  5943 ;; Return value:  Size  Location     Type
  5944 ;;                  4  111[BANK0 ] unsigned char 
  5945 ;; Registers used:
  5946 ;;		wreg, status,2, status,0
  5947 ;; Tracked objects:
  5948 ;;		On entry : 0/0
  5949 ;;		On exit  : 0/0
  5950 ;;		Unchanged: 0/0
  5951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5952 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5953 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  5954 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5955 ;;      Totals:         0       4      10       0       0       0       0       0       0       0       0       0       
      +0       0
  5956 ;;Total ram usage:       14 bytes
  5957 ;; Hardware stack levels used:    1
  5958 ;; Hardware stack levels required when called:    4
  5959 ;; This function calls:
  5960 ;;		Nothing
  5961 ;; This function is called by:
  5962 ;;		_park_search
  5963 ;;		_parallelo
  5964 ;; This function uses a non-reentrant model
  5965 ;;
  5966                           
  5967                           	psect	text14
  5968  004132                     __ptext14:
  5969                           	opt stack 0
  5970  004132                     ___xxtofl:
  5971                           	opt stack 24
  5972                           
  5973                           ; BSR set to: 0
  5974                           ;incstack = 0
  5975                           ;___xxtofl@sign stored from wreg
  5976  004132  0101               	movlb	1	; () banked
  5977  004134  6F5B               	movwf	___xxtofl@sign& (0+255),b
  5978  004136  0101               	movlb	1	; () banked
  5979  004138  515B               	movf	___xxtofl@sign& (0+255),w,b
  5980  00413A  0101               	movlb	1	; () banked
  5981  00413C  B4D8               	btfsc	status,2,c
  5982  00413E  D01E               	goto	l1352
  5983                           
  5984                           ; BSR set to: 1
  5985  004140  0100               	movlb	0	; () banked
  5986  004142  AFD2               	btfss	(___xxtofl@val+3)& (0+255),7,b
  5987  004144  D01B               	goto	l1352
  5988                           
  5989                           ; BSR set to: 0
  5990  004146  C0CF  F157         	movff	___xxtofl@val,??___xxtofl
  5991  00414A  C0D0  F158         	movff	___xxtofl@val+1,??___xxtofl+1
  5992  00414E  C0D1  F159         	movff	___xxtofl@val+2,??___xxtofl+2
  5993  004152  C0D2  F15A         	movff	___xxtofl@val+3,??___xxtofl+3
  5994  004156  0101               	movlb	1	; () banked
  5995  004158  1F57               	comf	??___xxtofl& (0+255),f,b
  5996  00415A  1F58               	comf	(??___xxtofl+1)& (0+255),f,b
  5997  00415C  1F59               	comf	(??___xxtofl+2)& (0+255),f,b
  5998  00415E  1F5A               	comf	(??___xxtofl+3)& (0+255),f,b
  5999  004160  2B57               	incf	??___xxtofl& (0+255),f,b
  6000  004162  0E00               	movlw	0
  6001  004164  2358               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6002  004166  2359               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6003  004168  235A               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6004  00416A  C157  F15D         	movff	??___xxtofl,___xxtofl@arg
  6005  00416E  C158  F15E         	movff	??___xxtofl+1,___xxtofl@arg+1
  6006  004172  C159  F15F         	movff	??___xxtofl+2,___xxtofl@arg+2
  6007  004176  C15A  F160         	movff	??___xxtofl+3,___xxtofl@arg+3
  6008  00417A  D008               	goto	l6072
  6009  00417C                     l1352:
  6010  00417C  C0CF  F15D         	movff	___xxtofl@val,___xxtofl@arg
  6011  004180  C0D0  F15E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6012  004184  C0D1  F15F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6013  004188  C0D2  F160         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6014  00418C                     l6072:
  6015  00418C  0100               	movlb	0	; () banked
  6016  00418E  51CF               	movf	___xxtofl@val& (0+255),w,b
  6017  004190  0100               	movlb	0	; () banked
  6018  004192  11D0               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6019  004194  0100               	movlb	0	; () banked
  6020  004196  11D1               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6021  004198  0100               	movlb	0	; () banked
  6022  00419A  11D2               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6023  00419C  A4D8               	btfss	status,2,c
  6024  00419E  D00A               	goto	l6078
  6025                           
  6026                           ; BSR set to: 0
  6027  0041A0  0E00               	movlw	0
  6028  0041A2  0100               	movlb	0	; () banked
  6029  0041A4  6FCF               	movwf	?___xxtofl& (0+255),b
  6030  0041A6  0E00               	movlw	0
  6031  0041A8  6FD0               	movwf	(?___xxtofl+1)& (0+255),b
  6032  0041AA  0E00               	movlw	0
  6033  0041AC  6FD1               	movwf	(?___xxtofl+2)& (0+255),b
  6034  0041AE  0E00               	movlw	0
  6035  0041B0  6FD2               	movwf	(?___xxtofl+3)& (0+255),b
  6036                           
  6037                           ; BSR set to: 0
  6038  0041B2  0012               	return	
  6039  0041B4                     l6078:
  6040                           
  6041                           ; BSR set to: 0
  6042  0041B4  0E96               	movlw	150
  6043  0041B6  0101               	movlb	1	; () banked
  6044  0041B8  6F5C               	movwf	___xxtofl@exp& (0+255),b
  6045  0041BA  D008               	goto	l6082
  6046  0041BC                     l6080:
  6047                           
  6048                           ; BSR set to: 1
  6049  0041BC  0101               	movlb	1	; () banked
  6050  0041BE  2B5C               	incf	___xxtofl@exp& (0+255),f,b
  6051  0041C0  0101               	movlb	1	; () banked
  6052  0041C2  90D8               	bcf	status,0,c
  6053  0041C4  3360               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6054  0041C6  335F               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6055  0041C8  335E               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6056  0041CA  335D               	rrcf	___xxtofl@arg& (0+255),f,b
  6057  0041CC                     l6082:
  6058                           
  6059                           ; BSR set to: 1
  6060  0041CC  0E00               	movlw	0
  6061  0041CE  0101               	movlb	1	; () banked
  6062  0041D0  155D               	andwf	___xxtofl@arg& (0+255),w,b
  6063  0041D2  0101               	movlb	1	; () banked
  6064  0041D4  6F57               	movwf	??___xxtofl& (0+255),b
  6065  0041D6  0E00               	movlw	0
  6066  0041D8  0101               	movlb	1	; () banked
  6067  0041DA  155E               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6068  0041DC  0101               	movlb	1	; () banked
  6069  0041DE  6F58               	movwf	(??___xxtofl+1)& (0+255),b
  6070  0041E0  0E00               	movlw	0
  6071  0041E2  0101               	movlb	1	; () banked
  6072  0041E4  155F               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6073  0041E6  0101               	movlb	1	; () banked
  6074  0041E8  6F59               	movwf	(??___xxtofl+2)& (0+255),b
  6075  0041EA  0EFE               	movlw	254
  6076  0041EC  0101               	movlb	1	; () banked
  6077  0041EE  1560               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6078  0041F0  0101               	movlb	1	; () banked
  6079  0041F2  6F5A               	movwf	(??___xxtofl+3)& (0+255),b
  6080  0041F4  0101               	movlb	1	; () banked
  6081  0041F6  5157               	movf	??___xxtofl& (0+255),w,b
  6082  0041F8  0101               	movlb	1	; () banked
  6083  0041FA  1158               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6084  0041FC  0101               	movlb	1	; () banked
  6085  0041FE  1159               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6086  004200  0101               	movlb	1	; () banked
  6087  004202  115A               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6088  004204  B4D8               	btfsc	status,2,c
  6089  004206  D010               	goto	l1359
  6090  004208  D7D9               	goto	l6080
  6091  00420A                     l6084:
  6092                           
  6093                           ; BSR set to: 1
  6094  00420A  0101               	movlb	1	; () banked
  6095  00420C  2B5C               	incf	___xxtofl@exp& (0+255),f,b
  6096                           
  6097                           ; BSR set to: 1
  6098  00420E  0E01               	movlw	1
  6099  004210  0101               	movlb	1	; () banked
  6100  004212  275D               	addwf	___xxtofl@arg& (0+255),f,b
  6101  004214  0E00               	movlw	0
  6102  004216  235E               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6103  004218  235F               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6104  00421A  2360               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6105                           
  6106                           ; BSR set to: 1
  6107  00421C  0101               	movlb	1	; () banked
  6108  00421E  90D8               	bcf	status,0,c
  6109  004220  3360               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6110  004222  335F               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6111  004224  335E               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6112  004226  335D               	rrcf	___xxtofl@arg& (0+255),f,b
  6113  004228                     l1359:
  6114                           
  6115                           ; BSR set to: 1
  6116  004228  0E00               	movlw	0
  6117  00422A  0101               	movlb	1	; () banked
  6118  00422C  155D               	andwf	___xxtofl@arg& (0+255),w,b
  6119  00422E  0101               	movlb	1	; () banked
  6120  004230  6F57               	movwf	??___xxtofl& (0+255),b
  6121  004232  0E00               	movlw	0
  6122  004234  0101               	movlb	1	; () banked
  6123  004236  155E               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6124  004238  0101               	movlb	1	; () banked
  6125  00423A  6F58               	movwf	(??___xxtofl+1)& (0+255),b
  6126  00423C  0E00               	movlw	0
  6127  00423E  0101               	movlb	1	; () banked
  6128  004240  155F               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6129  004242  0101               	movlb	1	; () banked
  6130  004244  6F59               	movwf	(??___xxtofl+2)& (0+255),b
  6131  004246  0EFF               	movlw	255
  6132  004248  0101               	movlb	1	; () banked
  6133  00424A  1560               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6134  00424C  0101               	movlb	1	; () banked
  6135  00424E  6F5A               	movwf	(??___xxtofl+3)& (0+255),b
  6136  004250  0101               	movlb	1	; () banked
  6137  004252  5157               	movf	??___xxtofl& (0+255),w,b
  6138  004254  0101               	movlb	1	; () banked
  6139  004256  1158               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6140  004258  0101               	movlb	1	; () banked
  6141  00425A  1159               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6142  00425C  0101               	movlb	1	; () banked
  6143  00425E  115A               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6144  004260  B4D8               	btfsc	status,2,c
  6145  004262  D009               	goto	l6092
  6146  004264  D7D2               	goto	l6084
  6147  004266                     l6090:
  6148                           
  6149                           ; BSR set to: 1
  6150  004266  0101               	movlb	1	; () banked
  6151  004268  075C               	decf	___xxtofl@exp& (0+255),f,b
  6152  00426A  0101               	movlb	1	; () banked
  6153  00426C  90D8               	bcf	status,0,c
  6154  00426E  375D               	rlcf	___xxtofl@arg& (0+255),f,b
  6155  004270  375E               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6156  004272  375F               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6157  004274  3760               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6158  004276                     l6092:
  6159                           
  6160                           ; BSR set to: 1
  6161  004276  0101               	movlb	1	; () banked
  6162  004278  BF5F               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6163  00427A  D004               	goto	l1366
  6164                           
  6165                           ; BSR set to: 1
  6166  00427C  0E02               	movlw	2
  6167  00427E  0101               	movlb	1	; () banked
  6168  004280  615C               	cpfslt	___xxtofl@exp& (0+255),b
  6169  004282  D7F1               	goto	l6090
  6170  004284                     l1366:
  6171                           
  6172                           ; BSR set to: 1
  6173  004284  0101               	movlb	1	; () banked
  6174  004286  B15C               	btfsc	___xxtofl@exp& (0+255),0,b
  6175  004288  D009               	goto	l1367
  6176                           
  6177                           ; BSR set to: 1
  6178  00428A  0EFF               	movlw	255
  6179  00428C  0101               	movlb	1	; () banked
  6180  00428E  175D               	andwf	___xxtofl@arg& (0+255),f,b
  6181  004290  0EFF               	movlw	255
  6182  004292  175E               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  6183  004294  0E7F               	movlw	127
  6184  004296  175F               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  6185  004298  0EFF               	movlw	255
  6186  00429A  1760               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  6187  00429C                     l1367:
  6188                           
  6189                           ; BSR set to: 1
  6190  00429C  0101               	movlb	1	; () banked
  6191  00429E  90D8               	bcf	status,0,c
  6192  0042A0  335C               	rrcf	___xxtofl@exp& (0+255),f,b
  6193  0042A2  C15C  F157         	movff	___xxtofl@exp,??___xxtofl
  6194  0042A6  0101               	movlb	1	; () banked
  6195  0042A8  6B58               	clrf	(??___xxtofl+1)& (0+255),b
  6196  0042AA  6B59               	clrf	(??___xxtofl+2)& (0+255),b
  6197  0042AC  6B5A               	clrf	(??___xxtofl+3)& (0+255),b
  6198  0042AE  C157  F15A         	movff	??___xxtofl,??___xxtofl+3
  6199  0042B2  0101               	movlb	1	; () banked
  6200  0042B4  6B59               	clrf	(??___xxtofl+2)& (0+255),b
  6201  0042B6  6B58               	clrf	(??___xxtofl+1)& (0+255),b
  6202  0042B8  6B57               	clrf	??___xxtofl& (0+255),b
  6203  0042BA  0101               	movlb	1	; () banked
  6204  0042BC  5157               	movf	??___xxtofl& (0+255),w,b
  6205  0042BE  0101               	movlb	1	; () banked
  6206  0042C0  135D               	iorwf	___xxtofl@arg& (0+255),f,b
  6207  0042C2  0101               	movlb	1	; () banked
  6208  0042C4  5158               	movf	(??___xxtofl+1)& (0+255),w,b
  6209  0042C6  0101               	movlb	1	; () banked
  6210  0042C8  135E               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6211  0042CA  0101               	movlb	1	; () banked
  6212  0042CC  5159               	movf	(??___xxtofl+2)& (0+255),w,b
  6213  0042CE  0101               	movlb	1	; () banked
  6214  0042D0  135F               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6215  0042D2  0101               	movlb	1	; () banked
  6216  0042D4  515A               	movf	(??___xxtofl+3)& (0+255),w,b
  6217  0042D6  0101               	movlb	1	; () banked
  6218  0042D8  1360               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6219                           
  6220                           ; BSR set to: 1
  6221  0042DA  0101               	movlb	1	; () banked
  6222  0042DC  515B               	movf	___xxtofl@sign& (0+255),w,b
  6223  0042DE  0101               	movlb	1	; () banked
  6224  0042E0  B4D8               	btfsc	status,2,c
  6225  0042E2  D005               	goto	l6104
  6226                           
  6227                           ; BSR set to: 1
  6228  0042E4  0100               	movlb	0	; () banked
  6229  0042E6  AFD2               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6230  0042E8  D002               	goto	l6104
  6231                           
  6232                           ; BSR set to: 0
  6233  0042EA  0101               	movlb	1	; () banked
  6234  0042EC  8F60               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6235  0042EE                     l6104:
  6236  0042EE  C15D  F0CF         	movff	___xxtofl@arg,?___xxtofl
  6237  0042F2  C15E  F0D0         	movff	___xxtofl@arg+1,?___xxtofl+1
  6238  0042F6  C15F  F0D1         	movff	___xxtofl@arg+2,?___xxtofl+2
  6239  0042FA  C160  F0D2         	movff	___xxtofl@arg+3,?___xxtofl+3
  6240  0042FE  0012               	return	
  6241  004300                     __end_of___xxtofl:
  6242                           	opt stack 0
  6243                           tblptru	equ	0xFF8
  6244                           tblptrh	equ	0xFF7
  6245                           tblptrl	equ	0xFF6
  6246                           tablat	equ	0xFF5
  6247                           prodh	equ	0xFF4
  6248                           prodl	equ	0xFF3
  6249                           postinc0	equ	0xFEE
  6250                           wreg	equ	0xFE8
  6251                           postinc2	equ	0xFDE
  6252                           postdec2	equ	0xFDD
  6253                           status	equ	0xFD8
  6254                           
  6255 ;; *************** function ___fltol *****************
  6256 ;; Defined at:
  6257 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;  f1              4   97[BANK0 ] unsigned char 
  6260 ;; Auto vars:     Size  Location     Type
  6261 ;;  exp1            1  106[BANK0 ] unsigned char 
  6262 ;;  sign1           1  105[BANK0 ] unsigned char 
  6263 ;; Return value:  Size  Location     Type
  6264 ;;                  4   97[BANK0 ] long 
  6265 ;; Registers used:
  6266 ;;		wreg, status,2, status,0
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6272 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6273 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6274 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6275 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6276 ;;Total ram usage:       10 bytes
  6277 ;; Hardware stack levels used:    1
  6278 ;; Hardware stack levels required when called:    4
  6279 ;; This function calls:
  6280 ;;		Nothing
  6281 ;; This function is called by:
  6282 ;;		_parallelo
  6283 ;; This function uses a non-reentrant model
  6284 ;;
  6285                           
  6286                           	psect	text15
  6287  0048D4                     __ptext15:
  6288                           	opt stack 0
  6289  0048D4                     ___fltol:
  6290                           	opt stack 24
  6291                           
  6292                           ;incstack = 0
  6293  0048D4  0100               	movlb	0	; () banked
  6294  0048D6  35C3               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6295  0048D8  35C4               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6296  0048DA  0100               	movlb	0	; () banked
  6297  0048DC  6FCA               	movwf	___fltol@exp1& (0+255),b
  6298  0048DE  0100               	movlb	0	; () banked
  6299  0048E0  51CA               	movf	___fltol@exp1& (0+255),w,b
  6300  0048E2  A4D8               	btfss	status,2,c
  6301  0048E4  D00A               	goto	l4800
  6302                           
  6303                           ; BSR set to: 0
  6304  0048E6  0E00               	movlw	0
  6305  0048E8  0100               	movlb	0	; () banked
  6306  0048EA  6FC1               	movwf	?___fltol& (0+255),b
  6307  0048EC  0E00               	movlw	0
  6308  0048EE  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6309  0048F0  0E00               	movlw	0
  6310  0048F2  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6311  0048F4  0E00               	movlw	0
  6312  0048F6  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6313                           
  6314                           ; BSR set to: 0
  6315  0048F8  0012               	return	
  6316  0048FA                     l4800:
  6317                           
  6318                           ; BSR set to: 0
  6319  0048FA  C0C1  F0C5         	movff	___fltol@f1,??___fltol
  6320  0048FE  C0C2  F0C6         	movff	___fltol@f1+1,??___fltol+1
  6321  004902  C0C3  F0C7         	movff	___fltol@f1+2,??___fltol+2
  6322  004906  C0C4  F0C8         	movff	___fltol@f1+3,??___fltol+3
  6323  00490A  0E20               	movlw	32
  6324  00490C  D006               	goto	u5920
  6325  00490E                     u5925:
  6326  00490E  0100               	movlb	0	; () banked
  6327  004910  90D8               	bcf	status,0,c
  6328  004912  33C8               	rrcf	(??___fltol+3)& (0+255),f,b
  6329  004914  33C7               	rrcf	(??___fltol+2)& (0+255),f,b
  6330  004916  33C6               	rrcf	(??___fltol+1)& (0+255),f,b
  6331  004918  33C5               	rrcf	??___fltol& (0+255),f,b
  6332  00491A                     u5920:
  6333  00491A  2EE8               	decfsz	wreg,f,c
  6334  00491C  D7F8               	goto	u5925
  6335  00491E  0100               	movlb	0	; () banked
  6336  004920  51C5               	movf	??___fltol& (0+255),w,b
  6337  004922  0100               	movlb	0	; () banked
  6338  004924  6FC9               	movwf	___fltol@sign1& (0+255),b
  6339                           
  6340                           ; BSR set to: 0
  6341  004926  0100               	movlb	0	; () banked
  6342  004928  8FC3               	bsf	(___fltol@f1+2)& (0+255),7,b
  6343                           
  6344                           ; BSR set to: 0
  6345  00492A  0EFF               	movlw	255
  6346  00492C  0100               	movlb	0	; () banked
  6347  00492E  17C1               	andwf	___fltol@f1& (0+255),f,b
  6348  004930  0EFF               	movlw	255
  6349  004932  17C2               	andwf	(___fltol@f1+1)& (0+255),f,b
  6350  004934  0EFF               	movlw	255
  6351  004936  17C3               	andwf	(___fltol@f1+2)& (0+255),f,b
  6352  004938  0E00               	movlw	0
  6353  00493A  17C4               	andwf	(___fltol@f1+3)& (0+255),f,b
  6354                           
  6355                           ; BSR set to: 0
  6356  00493C  0E96               	movlw	150
  6357  00493E  0100               	movlb	0	; () banked
  6358  004940  5FCA               	subwf	___fltol@exp1& (0+255),f,b
  6359                           
  6360                           ; BSR set to: 0
  6361  004942  0100               	movlb	0	; () banked
  6362  004944  AFCA               	btfss	___fltol@exp1& (0+255),7,b
  6363  004946  D01A               	goto	l4820
  6364                           
  6365                           ; BSR set to: 0
  6366  004948  0100               	movlb	0	; () banked
  6367  00494A  51CA               	movf	___fltol@exp1& (0+255),w,b
  6368  00494C  0A80               	xorlw	128
  6369  00494E  0F97               	addlw	151
  6370  004950  B0D8               	btfsc	status,0,c
  6371  004952  D00A               	goto	l4816
  6372                           
  6373                           ; BSR set to: 0
  6374  004954  0E00               	movlw	0
  6375  004956  0100               	movlb	0	; () banked
  6376  004958  6FC1               	movwf	?___fltol& (0+255),b
  6377  00495A  0E00               	movlw	0
  6378  00495C  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6379  00495E  0E00               	movlw	0
  6380  004960  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6381  004962  0E00               	movlw	0
  6382  004964  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6383                           
  6384                           ; BSR set to: 0
  6385  004966  0012               	return	
  6386  004968                     l4816:
  6387                           
  6388                           ; BSR set to: 0
  6389  004968  0100               	movlb	0	; () banked
  6390  00496A  90D8               	bcf	status,0,c
  6391  00496C  33C4               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6392  00496E  33C3               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6393  004970  33C2               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6394  004972  33C1               	rrcf	___fltol@f1& (0+255),f,b
  6395                           
  6396                           ; BSR set to: 0
  6397  004974  0100               	movlb	0	; () banked
  6398  004976  3FCA               	incfsz	___fltol@exp1& (0+255),f,b
  6399  004978  D7F7               	goto	l4816
  6400                           
  6401                           ; BSR set to: 0
  6402  00497A  D01B               	goto	l4830
  6403  00497C                     l4820:
  6404                           
  6405                           ; BSR set to: 0
  6406  00497C  0E1F               	movlw	31
  6407  00497E  0100               	movlb	0	; () banked
  6408  004980  65CA               	cpfsgt	___fltol@exp1& (0+255),b
  6409  004982  D012               	goto	l4828
  6410                           
  6411                           ; BSR set to: 0
  6412  004984  0E00               	movlw	0
  6413  004986  0100               	movlb	0	; () banked
  6414  004988  6FC1               	movwf	?___fltol& (0+255),b
  6415  00498A  0E00               	movlw	0
  6416  00498C  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6417  00498E  0E00               	movlw	0
  6418  004990  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6419  004992  0E00               	movlw	0
  6420  004994  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6421                           
  6422                           ; BSR set to: 0
  6423  004996  0012               	return	
  6424  004998                     l4826:
  6425                           
  6426                           ; BSR set to: 0
  6427  004998  0100               	movlb	0	; () banked
  6428  00499A  90D8               	bcf	status,0,c
  6429  00499C  37C1               	rlcf	___fltol@f1& (0+255),f,b
  6430  00499E  37C2               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6431  0049A0  37C3               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6432  0049A2  37C4               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6433  0049A4  0100               	movlb	0	; () banked
  6434  0049A6  07CA               	decf	___fltol@exp1& (0+255),f,b
  6435  0049A8                     l4828:
  6436                           
  6437                           ; BSR set to: 0
  6438  0049A8  0100               	movlb	0	; () banked
  6439  0049AA  51CA               	movf	___fltol@exp1& (0+255),w,b
  6440  0049AC  0100               	movlb	0	; () banked
  6441  0049AE  A4D8               	btfss	status,2,c
  6442  0049B0  D7F3               	goto	l4826
  6443  0049B2                     l4830:
  6444                           
  6445                           ; BSR set to: 0
  6446  0049B2  0100               	movlb	0	; () banked
  6447  0049B4  51C9               	movf	___fltol@sign1& (0+255),w,b
  6448  0049B6  0100               	movlb	0	; () banked
  6449  0049B8  B4D8               	btfsc	status,2,c
  6450  0049BA  D009               	goto	l4834
  6451                           
  6452                           ; BSR set to: 0
  6453  0049BC  0100               	movlb	0	; () banked
  6454  0049BE  1FC4               	comf	(___fltol@f1+3)& (0+255),f,b
  6455  0049C0  1FC3               	comf	(___fltol@f1+2)& (0+255),f,b
  6456  0049C2  1FC2               	comf	(___fltol@f1+1)& (0+255),f,b
  6457  0049C4  6DC1               	negf	___fltol@f1& (0+255),b
  6458  0049C6  0E00               	movlw	0
  6459  0049C8  23C2               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6460  0049CA  23C3               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6461  0049CC  23C4               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6462  0049CE                     l4834:
  6463                           
  6464                           ; BSR set to: 0
  6465  0049CE  C0C1  F0C1         	movff	___fltol@f1,?___fltol
  6466  0049D2  C0C2  F0C2         	movff	___fltol@f1+1,?___fltol+1
  6467  0049D6  C0C3  F0C3         	movff	___fltol@f1+2,?___fltol+2
  6468  0049DA  C0C4  F0C4         	movff	___fltol@f1+3,?___fltol+3
  6469  0049DE  0012               	return	
  6470  0049E0                     __end_of___fltol:
  6471                           	opt stack 0
  6472                           tblptru	equ	0xFF8
  6473                           tblptrh	equ	0xFF7
  6474                           tblptrl	equ	0xFF6
  6475                           tablat	equ	0xFF5
  6476                           prodh	equ	0xFF4
  6477                           prodl	equ	0xFF3
  6478                           postinc0	equ	0xFEE
  6479                           wreg	equ	0xFE8
  6480                           postinc2	equ	0xFDE
  6481                           postdec2	equ	0xFDD
  6482                           status	equ	0xFD8
  6483                           
  6484 ;; *************** function _park_routine *****************
  6485 ;; Defined at:
  6486 ;;		line 216 in file "parcheggio.c"
  6487 ;; Parameters:    Size  Location     Type
  6488 ;;		None
  6489 ;; Auto vars:     Size  Location     Type
  6490 ;;		None
  6491 ;; Return value:  Size  Location     Type
  6492 ;;		None               void
  6493 ;; Registers used:
  6494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6495 ;; Tracked objects:
  6496 ;;		On entry : 0/0
  6497 ;;		On exit  : 0/0
  6498 ;;		Unchanged: 0/0
  6499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6504 ;;Total ram usage:        0 bytes
  6505 ;; Hardware stack levels used:    1
  6506 ;; Hardware stack levels required when called:    6
  6507 ;; This function calls:
  6508 ;;		_can_send
  6509 ;; This function is called by:
  6510 ;;		_main
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           
  6514                           	psect	text16
  6515  004E56                     __ptext16:
  6516                           	opt stack 0
  6517  004E56                     _park_routine:
  6518                           	opt stack 24
  6519                           
  6520                           ;parcheggio.c: 217: while ((PORTBbits.RB5 == 1) && (activation == 1)) {
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;incstack = 0
  6524  004E56  D00A               	goto	l5206
  6525  004E58                     l5202:
  6526                           
  6527                           ;parcheggio.c: 218: set_speed = 0;
  6528  004E58  0E00               	movlw	0
  6529  004E5A  0100               	movlb	0	; () banked
  6530  004E5C  6FE6               	movwf	(_set_speed+1)& (0+255),b
  6531  004E5E  0E00               	movlw	0
  6532  004E60  6FE5               	movwf	_set_speed& (0+255),b
  6533                           
  6534                           ;parcheggio.c: 219: data_brake[0] = 0;
  6535  004E62  0E00               	movlw	0
  6536  004E64  0101               	movlb	1	; () banked
  6537  004E66  6F37               	movwf	_data_brake& (0+255),b
  6538                           
  6539                           ; BSR set to: 1
  6540                           ;parcheggio.c: 220: can_send();
  6541  004E68  ECF0  F024         	call	_can_send	;wreg free
  6542  004E6C                     l5206:
  6543  004E6C  AA81               	btfss	3969,5,c	;volatile
  6544  004E6E  0012               	return	
  6545  004E70  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  6546  004E72  0012               	return	
  6547  004E74  D7F1               	goto	l5202
  6548  004E76                     __end_of_park_routine:
  6549                           	opt stack 0
  6550                           tblptru	equ	0xFF8
  6551                           tblptrh	equ	0xFF7
  6552                           tblptrl	equ	0xFF6
  6553                           tablat	equ	0xFF5
  6554                           prodh	equ	0xFF4
  6555                           prodl	equ	0xFF3
  6556                           postinc0	equ	0xFEE
  6557                           wreg	equ	0xFE8
  6558                           postinc2	equ	0xFDE
  6559                           postdec2	equ	0xFDD
  6560                           status	equ	0xFD8
  6561                           
  6562 ;; *************** function _can_send *****************
  6563 ;; Defined at:
  6564 ;;		line 225 in file "parcheggio.c"
  6565 ;; Parameters:    Size  Location     Type
  6566 ;;		None
  6567 ;; Auto vars:     Size  Location     Type
  6568 ;;		None
  6569 ;; Return value:  Size  Location     Type
  6570 ;;		None               void
  6571 ;; Registers used:
  6572 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6573 ;; Tracked objects:
  6574 ;;		On entry : 0/0
  6575 ;;		On exit  : 0/0
  6576 ;;		Unchanged: 0/0
  6577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6582 ;;Total ram usage:        0 bytes
  6583 ;; Hardware stack levels used:    1
  6584 ;; Hardware stack levels required when called:    5
  6585 ;; This function calls:
  6586 ;;		_CANisTxReady
  6587 ;;		_CANsendMessage
  6588 ;; This function is called by:
  6589 ;;		_park_routine
  6590 ;;		_parallelo
  6591 ;; This function uses a non-reentrant model
  6592 ;;
  6593                           
  6594                           	psect	text17
  6595  0049E0                     __ptext17:
  6596                           	opt stack 0
  6597  0049E0                     _can_send:
  6598                           	opt stack 23
  6599                           
  6600                           ;parcheggio.c: 226: if (PORTBbits.RB5 == 1) {
  6601                           
  6602                           ;incstack = 0
  6603  0049E0  AA81               	btfss	3969,5,c	;volatile
  6604  0049E2  D060               	goto	l4754
  6605  0049E4                     l4736:
  6606  0049E4  EC19  F027         	call	_CANisTxReady	;wreg free
  6607  0049E8  06E8               	decf	wreg,f,c
  6608  0049EA  A4D8               	btfss	status,2,c
  6609  0049EC  D7FB               	goto	l4736
  6610                           
  6611                           ;parcheggio.c: 228: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  6612  0049EE  0E05               	movlw	5
  6613  0049F0  0100               	movlb	0	; () banked
  6614  0049F2  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  6615  0049F4  0E00               	movlw	0
  6616  0049F6  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  6617  0049F8  0E00               	movlw	0
  6618  0049FA  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  6619  0049FC  0E00               	movlw	0
  6620  0049FE  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  6621  004A00  0E4F               	movlw	low _data_steering
  6622  004A02  0100               	movlb	0	; () banked
  6623  004A04  6F7B               	movwf	CANsendMessage@data& (0+255),b
  6624  004A06  0E01               	movlw	high _data_steering
  6625  004A08  0100               	movlb	0	; () banked
  6626  004A0A  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  6627  004A0C  0E08               	movlw	8
  6628  004A0E  0100               	movlb	0	; () banked
  6629  004A10  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  6630  004A12  0EBC               	movlw	188
  6631  004A14  0100               	movlb	0	; () banked
  6632  004A16  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  6633  004A18  EC1A  F00C         	call	_CANsendMessage	;wreg free
  6634                           
  6635                           ;parcheggio.c: 229: data_speed[0] = set_speed;
  6636  004A1C  C0E5  F147         	movff	_set_speed,_data_speed
  6637                           
  6638                           ;parcheggio.c: 230: data_speed[1] = (set_speed >> 8);
  6639  004A20  0100               	movlb	0	; () banked
  6640  004A22  51E6               	movf	(_set_speed+1)& (0+255),w,b
  6641  004A24  0101               	movlb	1	; () banked
  6642  004A26  6F48               	movwf	(_data_speed+1)& (0+255),b
  6643                           
  6644                           ; BSR set to: 1
  6645                           ;parcheggio.c: 231: data_speed[2] = dir;
  6646  004A28  0E00               	movlw	0
  6647  004A2A  B246               	btfsc	_dir/(0+8),_dir& (0+7),c
  6648  004A2C  0E01               	movlw	1
  6649  004A2E  0101               	movlb	1	; () banked
  6650  004A30  6F49               	movwf	(_data_speed+2)& (0+255),b
  6651  004A32                     l4746:
  6652  004A32  EC19  F027         	call	_CANisTxReady	;wreg free
  6653  004A36  06E8               	decf	wreg,f,c
  6654  004A38  A4D8               	btfss	status,2,c
  6655  004A3A  D7FB               	goto	l4746
  6656                           
  6657                           ;parcheggio.c: 233: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  6658  004A3C  0E03               	movlw	3
  6659  004A3E  0100               	movlb	0	; () banked
  6660  004A40  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  6661  004A42  0E00               	movlw	0
  6662  004A44  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  6663  004A46  0E00               	movlw	0
  6664  004A48  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  6665  004A4A  0E00               	movlw	0
  6666  004A4C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  6667  004A4E  0E47               	movlw	low _data_speed
  6668  004A50  0100               	movlb	0	; () banked
  6669  004A52  6F7B               	movwf	CANsendMessage@data& (0+255),b
  6670  004A54  0E01               	movlw	high _data_speed
  6671  004A56  0100               	movlb	0	; () banked
  6672  004A58  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  6673  004A5A  0E08               	movlw	8
  6674  004A5C  0100               	movlb	0	; () banked
  6675  004A5E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  6676  004A60  0EBC               	movlw	188
  6677  004A62  0100               	movlb	0	; () banked
  6678  004A64  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  6679  004A66  EC1A  F00C         	call	_CANsendMessage	;wreg free
  6680  004A6A                     l4750:
  6681  004A6A  EC19  F027         	call	_CANisTxReady	;wreg free
  6682  004A6E  06E8               	decf	wreg,f,c
  6683  004A70  A4D8               	btfss	status,2,c
  6684  004A72  D7FB               	goto	l4750
  6685                           
  6686                           ;parcheggio.c: 235: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  6687  004A74  0E04               	movlw	4
  6688  004A76  0100               	movlb	0	; () banked
  6689  004A78  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  6690  004A7A  0E00               	movlw	0
  6691  004A7C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  6692  004A7E  0E00               	movlw	0
  6693  004A80  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  6694  004A82  0E00               	movlw	0
  6695  004A84  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  6696  004A86  0E37               	movlw	low _data_brake
  6697  004A88  0100               	movlb	0	; () banked
  6698  004A8A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  6699  004A8C  0E01               	movlw	high _data_brake
  6700  004A8E  0100               	movlb	0	; () banked
  6701  004A90  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  6702  004A92  0E08               	movlw	8
  6703  004A94  0100               	movlb	0	; () banked
  6704  004A96  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  6705  004A98  0EBC               	movlw	188
  6706  004A9A  0100               	movlb	0	; () banked
  6707  004A9C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  6708  004A9E  EC1A  F00C         	call	_CANsendMessage	;wreg free
  6709                           
  6710                           ;parcheggio.c: 236: } else {
  6711  004AA2  0012               	return	
  6712  004AA4                     l4754:
  6713                           
  6714                           ;parcheggio.c: 237: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  6715  004AA4  0E0E               	movlw	14
  6716  004AA6  0100               	movlb	0	; () banked
  6717  004AA8  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  6718  004AAA  0E00               	movlw	0
  6719  004AAC  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  6720  004AAE  0E00               	movlw	0
  6721  004AB0  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  6722  004AB2  0E00               	movlw	0
  6723  004AB4  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  6724  004AB6  0E3F               	movlw	low _data_correction
  6725  004AB8  0100               	movlb	0	; () banked
  6726  004ABA  6F7B               	movwf	CANsendMessage@data& (0+255),b
  6727  004ABC  0E01               	movlw	high _data_correction
  6728  004ABE  0100               	movlb	0	; () banked
  6729  004AC0  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  6730  004AC2  0E08               	movlw	8
  6731  004AC4  0100               	movlb	0	; () banked
  6732  004AC6  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  6733  004AC8  0EBC               	movlw	188
  6734  004ACA  0100               	movlb	0	; () banked
  6735  004ACC  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  6736  004ACE  EC1A  F00C         	call	_CANsendMessage	;wreg free
  6737  004AD2  0012               	return	
  6738  004AD4                     __end_of_can_send:
  6739                           	opt stack 0
  6740                           tblptru	equ	0xFF8
  6741                           tblptrh	equ	0xFF7
  6742                           tblptrl	equ	0xFF6
  6743                           tablat	equ	0xFF5
  6744                           prodh	equ	0xFF4
  6745                           prodl	equ	0xFF3
  6746                           postinc0	equ	0xFEE
  6747                           wreg	equ	0xFE8
  6748                           postinc2	equ	0xFDE
  6749                           postdec2	equ	0xFDD
  6750                           status	equ	0xFD8
  6751                           
  6752 ;; *************** function _CANsendMessage *****************
  6753 ;; Defined at:
  6754 ;;		line 293 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;  identifier      4   23[BANK0 ] unsigned long 
  6757 ;;  data            2   27[BANK0 ] PTR unsigned char 
  6758 ;;		 -> data_correction(8), data_speed(8), data_steering(8), data_brake(8), 
  6759 ;;		 -> data(8), 
  6760 ;;  dataLength      1   29[BANK0 ] unsigned char 
  6761 ;;  flags           1   30[BANK0 ] enum E16335
  6762 ;; Auto vars:     Size  Location     Type
  6763 ;;  tamp            4   35[BANK0 ] unsigned long 
  6764 ;; Return value:  Size  Location     Type
  6765 ;;		None               void
  6766 ;; Registers used:
  6767 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6768 ;; Tracked objects:
  6769 ;;		On entry : 0/0
  6770 ;;		On exit  : 0/0
  6771 ;;		Unchanged: 0/0
  6772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6773 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6774 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6775 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6776 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6777 ;;Total ram usage:       16 bytes
  6778 ;; Hardware stack levels used:    1
  6779 ;; Hardware stack levels required when called:    4
  6780 ;; This function calls:
  6781 ;;		Nothing
  6782 ;; This function is called by:
  6783 ;;		_park_search
  6784 ;;		_can_send
  6785 ;; This function uses a non-reentrant model
  6786 ;;
  6787                           
  6788                           	psect	text18
  6789  001834                     __ptext18:
  6790                           	opt stack 0
  6791  001834                     _CANsendMessage:
  6792                           	opt stack 23
  6793                           
  6794                           ;inc\CANlib.h: 295: unsigned long tamp;
  6795                           ;inc\CANlib.h: 297: if (TXB0CONbits.TXREQ == 0)
  6796                           
  6797                           ;incstack = 0
  6798  001834  010F               	movlb	15	; () banked
  6799  001836  B740               	btfsc	64,3,b	;volatile
  6800  001838  D13F               	goto	l357
  6801                           
  6802                           ; BSR set to: 15
  6803                           ;inc\CANlib.h: 298: { TXB0DLC = dataLength;
  6804  00183A  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  6805                           
  6806                           ;inc\CANlib.h: 299: if (0b01000000 & flags)
  6807  00183E  0100               	movlb	0	; () banked
  6808  001840  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  6809  001842  D003               	goto	l358
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;inc\CANlib.h: 300: TXB0DLCbits.TXRTR = 0x01;
  6813  001844  010F               	movlb	15	; () banked
  6814  001846  8D45               	bsf	69,6,b	;volatile
  6815  001848  D002               	goto	l359
  6816  00184A                     l358:
  6817                           
  6818                           ; BSR set to: 0
  6819                           ;inc\CANlib.h: 301: else
  6820                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x00;
  6821  00184A  010F               	movlb	15	; () banked
  6822  00184C  9D45               	bcf	69,6,b	;volatile
  6823  00184E                     l359:
  6824                           
  6825                           ; BSR set to: 15
  6826                           ;inc\CANlib.h: 304: if (CAN_TX_FRAME_MASK & flags)
  6827  00184E  0100               	movlb	0	; () banked
  6828  001850  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  6829  001852  D079               	goto	l360
  6830                           
  6831                           ; BSR set to: 0
  6832                           ;inc\CANlib.h: 305: {
  6833                           ;inc\CANlib.h: 307: tamp = identifier & 0x000000FF;
  6834  001854  0100               	movlb	0	; () banked
  6835  001856  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  6836  001858  0100               	movlb	0	; () banked
  6837  00185A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  6838  00185C  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6839  00185E  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6840  001860  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6841                           
  6842                           ; BSR set to: 0
  6843                           ;inc\CANlib.h: 308: TXB0EIDL = (unsigned char) tamp;
  6844  001862  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  6845                           
  6846                           ; BSR set to: 0
  6847                           ;inc\CANlib.h: 310: tamp = identifier & 0x0000FF00;
  6848  001866  0E00               	movlw	0
  6849  001868  0100               	movlb	0	; () banked
  6850  00186A  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  6851  00186C  0100               	movlb	0	; () banked
  6852  00186E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  6853  001870  0EFF               	movlw	255
  6854  001872  0100               	movlb	0	; () banked
  6855  001874  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  6856  001876  0100               	movlb	0	; () banked
  6857  001878  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  6858  00187A  0E00               	movlw	0
  6859  00187C  0100               	movlb	0	; () banked
  6860  00187E  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  6861  001880  0100               	movlb	0	; () banked
  6862  001882  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  6863  001884  0E00               	movlw	0
  6864  001886  0100               	movlb	0	; () banked
  6865  001888  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  6866  00188A  0100               	movlb	0	; () banked
  6867  00188C  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  6868                           
  6869                           ; BSR set to: 0
  6870                           ;inc\CANlib.h: 311: tamp = tamp >> 8;
  6871  00188E  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  6872  001892  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  6873  001896  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  6874  00189A  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  6875  00189E  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  6876  0018A2  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  6877  0018A6  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  6878  0018AA  0100               	movlb	0	; () banked
  6879  0018AC  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  6880  0018AE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  6881  0018B2  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6882  0018B6  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6883  0018BA  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6884                           
  6885                           ; BSR set to: 0
  6886                           ;inc\CANlib.h: 312: TXB0EIDH = (unsigned char) tamp;
  6887  0018BE  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  6888                           
  6889                           ; BSR set to: 0
  6890                           ;inc\CANlib.h: 314: TXB0SIDL = 0x00;
  6891  0018C2  0E00               	movlw	0
  6892  0018C4  010F               	movlb	15	; () banked
  6893  0018C6  6F42               	movwf	66,b	;volatile
  6894                           
  6895                           ; BSR set to: 15
  6896                           ;inc\CANlib.h: 315: TXB0SIDLbits.EXIDE = 0x01;
  6897  0018C8  010F               	movlb	15	; () banked
  6898  0018CA  8742               	bsf	66,3,b	;volatile
  6899                           
  6900                           ; BSR set to: 15
  6901                           ;inc\CANlib.h: 317: if (identifier & 0x00010000)
  6902  0018CC  0100               	movlb	0	; () banked
  6903  0018CE  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  6904  0018D0  D002               	goto	l361
  6905                           
  6906                           ; BSR set to: 0
  6907                           ;inc\CANlib.h: 318: TXB0SIDLbits.EID16 = 0x01;
  6908  0018D2  010F               	movlb	15	; () banked
  6909  0018D4  8142               	bsf	66,0,b	;volatile
  6910  0018D6                     l361:
  6911                           
  6912                           ;inc\CANlib.h: 319: if (identifier & 0x00020000)
  6913  0018D6  0100               	movlb	0	; () banked
  6914  0018D8  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  6915  0018DA  D002               	goto	l362
  6916                           
  6917                           ; BSR set to: 0
  6918                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID17 = 0x01;
  6919  0018DC  010F               	movlb	15	; () banked
  6920  0018DE  8342               	bsf	66,1,b	;volatile
  6921  0018E0                     l362:
  6922                           
  6923                           ;inc\CANlib.h: 321: if (identifier & 0x00040000)
  6924  0018E0  0100               	movlb	0	; () banked
  6925  0018E2  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  6926  0018E4  D002               	goto	l363
  6927                           
  6928                           ; BSR set to: 0
  6929                           ;inc\CANlib.h: 322: TXB0SIDLbits.SID0 = 0x01;
  6930  0018E6  010F               	movlb	15	; () banked
  6931  0018E8  8B42               	bsf	66,5,b	;volatile
  6932  0018EA                     l363:
  6933                           
  6934                           ;inc\CANlib.h: 323: if (identifier & 0x00080000)
  6935  0018EA  0100               	movlb	0	; () banked
  6936  0018EC  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  6937  0018EE  D002               	goto	l364
  6938                           
  6939                           ; BSR set to: 0
  6940                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID1 = 0x01;
  6941  0018F0  010F               	movlb	15	; () banked
  6942  0018F2  8D42               	bsf	66,6,b	;volatile
  6943  0018F4                     l364:
  6944                           
  6945                           ;inc\CANlib.h: 325: if (identifier & 0x00100000)
  6946  0018F4  0100               	movlb	0	; () banked
  6947  0018F6  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  6948  0018F8  D002               	goto	l3978
  6949                           
  6950                           ; BSR set to: 0
  6951                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID2 = 0x01;
  6952  0018FA  010F               	movlb	15	; () banked
  6953  0018FC  8F42               	bsf	66,7,b	;volatile
  6954  0018FE                     l3978:
  6955                           
  6956                           ;inc\CANlib.h: 328: tamp = (identifier >> 21);
  6957  0018FE  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  6958  001902  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  6959  001906  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  6960  00190A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  6961  00190E  0E16               	movlw	22
  6962  001910  D006               	goto	u4350
  6963  001912                     u4355:
  6964  001912  0100               	movlb	0	; () banked
  6965  001914  90D8               	bcf	status,0,c
  6966  001916  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  6967  001918  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  6968  00191A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  6969  00191C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  6970  00191E                     u4350:
  6971  00191E  2EE8               	decfsz	wreg,f,c
  6972  001920  D7F8               	goto	u4355
  6973  001922  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  6974  001926  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  6975  00192A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  6976  00192E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  6977                           
  6978                           ; BSR set to: 0
  6979                           ;inc\CANlib.h: 329: tamp = tamp & 0x000000FF;
  6980  001932  0100               	movlb	0	; () banked
  6981  001934  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  6982  001936  0100               	movlb	0	; () banked
  6983  001938  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  6984  00193A  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  6985  00193C  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  6986  00193E  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;inc\CANlib.h: 330: TXB0SIDH = (unsigned char) tamp;
  6990  001940  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  6991                           
  6992                           ;inc\CANlib.h: 331: }
  6993  001944  D059               	goto	l3998
  6994  001946                     l360:
  6995                           
  6996                           ; BSR set to: 0
  6997                           ;inc\CANlib.h: 333: else
  6998                           ;inc\CANlib.h: 335: {
  6999                           ;inc\CANlib.h: 336: TXB0SIDLbits.EXIDE = 0x00;
  7000  001946  010F               	movlb	15	; () banked
  7001  001948  9742               	bcf	66,3,b	;volatile
  7002                           
  7003                           ; BSR set to: 15
  7004                           ;inc\CANlib.h: 338: tamp = (identifier >> 3);
  7005  00194A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  7006  00194E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7007  001952  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7008  001956  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7009  00195A  0E04               	movlw	4
  7010  00195C  D006               	goto	u4360
  7011  00195E                     u4365:
  7012  00195E  0100               	movlb	0	; () banked
  7013  001960  90D8               	bcf	status,0,c
  7014  001962  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  7015  001964  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  7016  001966  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  7017  001968  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  7018  00196A                     u4360:
  7019  00196A  2EE8               	decfsz	wreg,f,c
  7020  00196C  D7F8               	goto	u4365
  7021  00196E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7022  001972  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7023  001976  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7024  00197A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7025                           
  7026                           ; BSR set to: 0
  7027                           ;inc\CANlib.h: 339: tamp = tamp & 0x000000FF;
  7028  00197E  0100               	movlb	0	; () banked
  7029  001980  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  7030  001982  0100               	movlb	0	; () banked
  7031  001984  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7032  001986  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7033  001988  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7034  00198A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;inc\CANlib.h: 340: TXB0SIDH = (unsigned char) tamp;
  7038  00198C  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  7039                           
  7040                           ; BSR set to: 0
  7041                           ;inc\CANlib.h: 342: tamp = identifier & 0x00000007;
  7042  001990  0E07               	movlw	7
  7043  001992  0100               	movlb	0	; () banked
  7044  001994  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  7045  001996  0100               	movlb	0	; () banked
  7046  001998  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7047  00199A  0E00               	movlw	0
  7048  00199C  0100               	movlb	0	; () banked
  7049  00199E  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  7050  0019A0  0100               	movlb	0	; () banked
  7051  0019A2  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  7052  0019A4  0E00               	movlw	0
  7053  0019A6  0100               	movlb	0	; () banked
  7054  0019A8  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  7055  0019AA  0100               	movlb	0	; () banked
  7056  0019AC  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  7057  0019AE  0E00               	movlw	0
  7058  0019B0  0100               	movlb	0	; () banked
  7059  0019B2  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  7060  0019B4  0100               	movlb	0	; () banked
  7061  0019B6  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  7062                           
  7063                           ; BSR set to: 0
  7064                           ;inc\CANlib.h: 343: tamp = tamp << 5;
  7065  0019B8  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  7066  0019BC  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  7067  0019C0  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  7068  0019C4  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  7069  0019C8  0E05               	movlw	5
  7070  0019CA                     u4375:
  7071  0019CA  90D8               	bcf	status,0,c
  7072  0019CC  0100               	movlb	0	; () banked
  7073  0019CE  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  7074  0019D0  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  7075  0019D2  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  7076  0019D4  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  7077  0019D6  2EE8               	decfsz	wreg,f,c
  7078  0019D8  D7F8               	goto	u4375
  7079  0019DA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7080  0019DE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7081  0019E2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7082  0019E6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7083                           
  7084                           ; BSR set to: 0
  7085                           ;inc\CANlib.h: 344: TXB0SIDL = TXB0SIDL & 0b00011111;
  7086  0019EA  010F               	movlb	15	; () banked
  7087  0019EC  5142               	movf	66,w,b	;volatile
  7088  0019EE  0B1F               	andlw	31
  7089  0019F0  010F               	movlb	15	; () banked
  7090  0019F2  6F42               	movwf	66,b	;volatile
  7091                           
  7092                           ; BSR set to: 15
  7093                           ;inc\CANlib.h: 345: TXB0SIDL = (unsigned char) tamp;
  7094  0019F4  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  7095  0019F8                     l3998:
  7096                           
  7097                           ;inc\CANlib.h: 346: }
  7098                           ;inc\CANlib.h: 348: if (0b00000001 & flags)
  7099  0019F8  0100               	movlb	0	; () banked
  7100  0019FA  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  7101  0019FC  D003               	goto	l367
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;inc\CANlib.h: 349: TXB0CONbits.TXPRI0 = 0x01;
  7105  0019FE  010F               	movlb	15	; () banked
  7106  001A00  8140               	bsf	64,0,b	;volatile
  7107  001A02  D002               	goto	l368
  7108  001A04                     l367:
  7109                           
  7110                           ; BSR set to: 0
  7111                           ;inc\CANlib.h: 350: else
  7112                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x00;
  7113  001A04  010F               	movlb	15	; () banked
  7114  001A06  9140               	bcf	64,0,b	;volatile
  7115  001A08                     l368:
  7116                           
  7117                           ; BSR set to: 15
  7118                           ;inc\CANlib.h: 352: if (0b00000010 & flags)
  7119  001A08  0100               	movlb	0	; () banked
  7120  001A0A  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  7121  001A0C  D003               	goto	l369
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI1 = 0x01;
  7125  001A0E  010F               	movlb	15	; () banked
  7126  001A10  8340               	bsf	64,1,b	;volatile
  7127  001A12  D002               	goto	l4004
  7128  001A14                     l369:
  7129                           
  7130                           ; BSR set to: 0
  7131                           ;inc\CANlib.h: 354: else
  7132                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x00;
  7133  001A14  010F               	movlb	15	; () banked
  7134  001A16  9340               	bcf	64,1,b	;volatile
  7135  001A18                     l4004:
  7136                           
  7137                           ; BSR set to: 15
  7138                           ;inc\CANlib.h: 357: TXB0D0 = data[0];
  7139  001A18  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  7140  001A1C  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  7141  001A20  50DF               	movf	indf2,w,c
  7142  001A22  010F               	movlb	15	; () banked
  7143  001A24  6F46               	movwf	70,b	;volatile
  7144                           
  7145                           ; BSR set to: 15
  7146                           ;inc\CANlib.h: 358: TXB0D1 = data[1];
  7147  001A26  0100               	movlb	0	; () banked
  7148  001A28  EE20 F001          	lfsr	2,1
  7149  001A2C  517B               	movf	CANsendMessage@data& (0+255),w,b
  7150  001A2E  26D9               	addwf	fsr2l,f,c
  7151  001A30  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7152  001A32  22DA               	addwfc	fsr2h,f,c
  7153  001A34  50DF               	movf	indf2,w,c
  7154  001A36  010F               	movlb	15	; () banked
  7155  001A38  6F47               	movwf	71,b	;volatile
  7156                           
  7157                           ; BSR set to: 15
  7158                           ;inc\CANlib.h: 359: TXB0D2 = data[2];
  7159  001A3A  0100               	movlb	0	; () banked
  7160  001A3C  EE20 F002          	lfsr	2,2
  7161  001A40  517B               	movf	CANsendMessage@data& (0+255),w,b
  7162  001A42  26D9               	addwf	fsr2l,f,c
  7163  001A44  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7164  001A46  22DA               	addwfc	fsr2h,f,c
  7165  001A48  50DF               	movf	indf2,w,c
  7166  001A4A  010F               	movlb	15	; () banked
  7167  001A4C  6F48               	movwf	72,b	;volatile
  7168                           
  7169                           ; BSR set to: 15
  7170                           ;inc\CANlib.h: 360: TXB0D3 = data[3];
  7171  001A4E  0100               	movlb	0	; () banked
  7172  001A50  EE20 F003          	lfsr	2,3
  7173  001A54  517B               	movf	CANsendMessage@data& (0+255),w,b
  7174  001A56  26D9               	addwf	fsr2l,f,c
  7175  001A58  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7176  001A5A  22DA               	addwfc	fsr2h,f,c
  7177  001A5C  50DF               	movf	indf2,w,c
  7178  001A5E  010F               	movlb	15	; () banked
  7179  001A60  6F49               	movwf	73,b	;volatile
  7180                           
  7181                           ; BSR set to: 15
  7182                           ;inc\CANlib.h: 361: TXB0D4 = data[4];
  7183  001A62  0100               	movlb	0	; () banked
  7184  001A64  EE20 F004          	lfsr	2,4
  7185  001A68  517B               	movf	CANsendMessage@data& (0+255),w,b
  7186  001A6A  26D9               	addwf	fsr2l,f,c
  7187  001A6C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7188  001A6E  22DA               	addwfc	fsr2h,f,c
  7189  001A70  50DF               	movf	indf2,w,c
  7190  001A72  010F               	movlb	15	; () banked
  7191  001A74  6F4A               	movwf	74,b	;volatile
  7192                           
  7193                           ; BSR set to: 15
  7194                           ;inc\CANlib.h: 362: TXB0D5 = data[5];
  7195  001A76  0100               	movlb	0	; () banked
  7196  001A78  EE20 F005          	lfsr	2,5
  7197  001A7C  517B               	movf	CANsendMessage@data& (0+255),w,b
  7198  001A7E  26D9               	addwf	fsr2l,f,c
  7199  001A80  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7200  001A82  22DA               	addwfc	fsr2h,f,c
  7201  001A84  50DF               	movf	indf2,w,c
  7202  001A86  010F               	movlb	15	; () banked
  7203  001A88  6F4B               	movwf	75,b	;volatile
  7204                           
  7205                           ; BSR set to: 15
  7206                           ;inc\CANlib.h: 363: TXB0D6 = data[6];
  7207  001A8A  0100               	movlb	0	; () banked
  7208  001A8C  EE20 F006          	lfsr	2,6
  7209  001A90  517B               	movf	CANsendMessage@data& (0+255),w,b
  7210  001A92  26D9               	addwf	fsr2l,f,c
  7211  001A94  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7212  001A96  22DA               	addwfc	fsr2h,f,c
  7213  001A98  50DF               	movf	indf2,w,c
  7214  001A9A  010F               	movlb	15	; () banked
  7215  001A9C  6F4C               	movwf	76,b	;volatile
  7216                           
  7217                           ; BSR set to: 15
  7218                           ;inc\CANlib.h: 364: TXB0D7 = data[7];
  7219  001A9E  0100               	movlb	0	; () banked
  7220  001AA0  EE20 F007          	lfsr	2,7
  7221  001AA4  517B               	movf	CANsendMessage@data& (0+255),w,b
  7222  001AA6  26D9               	addwf	fsr2l,f,c
  7223  001AA8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7224  001AAA  22DA               	addwfc	fsr2h,f,c
  7225  001AAC  50DF               	movf	indf2,w,c
  7226  001AAE  010F               	movlb	15	; () banked
  7227  001AB0  6F4D               	movwf	77,b	;volatile
  7228                           
  7229                           ; BSR set to: 15
  7230                           ;inc\CANlib.h: 366: TXB0CONbits.TXREQ = 0x01;
  7231  001AB2  010F               	movlb	15	; () banked
  7232  001AB4  8740               	bsf	64,3,b	;volatile
  7233                           
  7234                           ; BSR set to: 15
  7235                           ;inc\CANlib.h: 367: return;
  7236  001AB6  0012               	return	
  7237  001AB8                     l357:
  7238                           
  7239                           ; BSR set to: 15
  7240                           ;inc\CANlib.h: 368: }
  7241                           ;inc\CANlib.h: 372: if (TXB1CONbits.TXREQ == 0)
  7242  001AB8  010F               	movlb	15	; () banked
  7243  001ABA  B730               	btfsc	48,3,b	;volatile
  7244  001ABC  D13F               	goto	l372
  7245                           
  7246                           ; BSR set to: 15
  7247                           ;inc\CANlib.h: 373: { TXB1DLC = dataLength;
  7248  001ABE  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  7249                           
  7250                           ;inc\CANlib.h: 375: if (0b01000000 & flags)
  7251  001AC2  0100               	movlb	0	; () banked
  7252  001AC4  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  7253  001AC6  D003               	goto	l373
  7254                           
  7255                           ; BSR set to: 0
  7256                           ;inc\CANlib.h: 376: TXB1DLCbits.TXRTR = 0x01;
  7257  001AC8  010F               	movlb	15	; () banked
  7258  001ACA  8D35               	bsf	53,6,b	;volatile
  7259  001ACC  D002               	goto	l374
  7260  001ACE                     l373:
  7261                           
  7262                           ; BSR set to: 0
  7263                           ;inc\CANlib.h: 377: else
  7264                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x00;
  7265  001ACE  010F               	movlb	15	; () banked
  7266  001AD0  9D35               	bcf	53,6,b	;volatile
  7267  001AD2                     l374:
  7268                           
  7269                           ; BSR set to: 15
  7270                           ;inc\CANlib.h: 380: if (CAN_TX_FRAME_MASK & flags)
  7271  001AD2  0100               	movlb	0	; () banked
  7272  001AD4  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  7273  001AD6  D079               	goto	l375
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;inc\CANlib.h: 381: {
  7277                           ;inc\CANlib.h: 382: tamp = identifier & 0x000000FF;
  7278  001AD8  0100               	movlb	0	; () banked
  7279  001ADA  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  7280  001ADC  0100               	movlb	0	; () banked
  7281  001ADE  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7282  001AE0  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7283  001AE2  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7284  001AE4  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7285                           
  7286                           ; BSR set to: 0
  7287                           ;inc\CANlib.h: 383: TXB1EIDL = (unsigned char) tamp;
  7288  001AE6  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  7289                           
  7290                           ; BSR set to: 0
  7291                           ;inc\CANlib.h: 385: tamp = identifier & 0x0000FF00;
  7292  001AEA  0E00               	movlw	0
  7293  001AEC  0100               	movlb	0	; () banked
  7294  001AEE  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  7295  001AF0  0100               	movlb	0	; () banked
  7296  001AF2  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7297  001AF4  0EFF               	movlw	255
  7298  001AF6  0100               	movlb	0	; () banked
  7299  001AF8  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  7300  001AFA  0100               	movlb	0	; () banked
  7301  001AFC  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  7302  001AFE  0E00               	movlw	0
  7303  001B00  0100               	movlb	0	; () banked
  7304  001B02  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  7305  001B04  0100               	movlb	0	; () banked
  7306  001B06  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  7307  001B08  0E00               	movlw	0
  7308  001B0A  0100               	movlb	0	; () banked
  7309  001B0C  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  7310  001B0E  0100               	movlb	0	; () banked
  7311  001B10  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  7312                           
  7313                           ; BSR set to: 0
  7314                           ;inc\CANlib.h: 386: tamp = tamp >> 8;
  7315  001B12  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  7316  001B16  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  7317  001B1A  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  7318  001B1E  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  7319  001B22  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  7320  001B26  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  7321  001B2A  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  7322  001B2E  0100               	movlb	0	; () banked
  7323  001B30  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  7324  001B32  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7325  001B36  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7326  001B3A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7327  001B3E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7328                           
  7329                           ; BSR set to: 0
  7330                           ;inc\CANlib.h: 387: TXB1EIDH = (unsigned char) tamp;
  7331  001B42  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  7332                           
  7333                           ; BSR set to: 0
  7334                           ;inc\CANlib.h: 389: TXB1SIDL = 0x00;
  7335  001B46  0E00               	movlw	0
  7336  001B48  010F               	movlb	15	; () banked
  7337  001B4A  6F32               	movwf	50,b	;volatile
  7338                           
  7339                           ; BSR set to: 15
  7340                           ;inc\CANlib.h: 390: TXB1SIDLbits.EXIDE = 0x01;
  7341  001B4C  010F               	movlb	15	; () banked
  7342  001B4E  8732               	bsf	50,3,b	;volatile
  7343                           
  7344                           ; BSR set to: 15
  7345                           ;inc\CANlib.h: 392: if (identifier & 0x00010000)
  7346  001B50  0100               	movlb	0	; () banked
  7347  001B52  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  7348  001B54  D002               	goto	l376
  7349                           
  7350                           ; BSR set to: 0
  7351                           ;inc\CANlib.h: 393: TXB1SIDLbits.EID16 = 0x01;
  7352  001B56  010F               	movlb	15	; () banked
  7353  001B58  8132               	bsf	50,0,b	;volatile
  7354  001B5A                     l376:
  7355                           
  7356                           ;inc\CANlib.h: 394: if (identifier & 0x00020000)
  7357  001B5A  0100               	movlb	0	; () banked
  7358  001B5C  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  7359  001B5E  D002               	goto	l377
  7360                           
  7361                           ; BSR set to: 0
  7362                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID17 = 0x01;
  7363  001B60  010F               	movlb	15	; () banked
  7364  001B62  8332               	bsf	50,1,b	;volatile
  7365  001B64                     l377:
  7366                           
  7367                           ;inc\CANlib.h: 396: if (identifier & 0x00040000)
  7368  001B64  0100               	movlb	0	; () banked
  7369  001B66  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  7370  001B68  D002               	goto	l378
  7371                           
  7372                           ; BSR set to: 0
  7373                           ;inc\CANlib.h: 397: TXB1SIDLbits.SID0 = 0x01;
  7374  001B6A  010F               	movlb	15	; () banked
  7375  001B6C  8B32               	bsf	50,5,b	;volatile
  7376  001B6E                     l378:
  7377                           
  7378                           ;inc\CANlib.h: 398: if (identifier & 0x00080000)
  7379  001B6E  0100               	movlb	0	; () banked
  7380  001B70  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  7381  001B72  D002               	goto	l379
  7382                           
  7383                           ; BSR set to: 0
  7384                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID1 = 0x01;
  7385  001B74  010F               	movlb	15	; () banked
  7386  001B76  8D32               	bsf	50,6,b	;volatile
  7387  001B78                     l379:
  7388                           
  7389                           ;inc\CANlib.h: 400: if (identifier & 0x00100000)
  7390  001B78  0100               	movlb	0	; () banked
  7391  001B7A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  7392  001B7C  D002               	goto	l4054
  7393                           
  7394                           ; BSR set to: 0
  7395                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID2 = 0x01;
  7396  001B7E  010F               	movlb	15	; () banked
  7397  001B80  8F32               	bsf	50,7,b	;volatile
  7398  001B82                     l4054:
  7399                           
  7400                           ;inc\CANlib.h: 403: tamp = (identifier >> 21);
  7401  001B82  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  7402  001B86  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7403  001B8A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7404  001B8E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7405  001B92  0E16               	movlw	22
  7406  001B94  D006               	goto	u4480
  7407  001B96                     u4485:
  7408  001B96  0100               	movlb	0	; () banked
  7409  001B98  90D8               	bcf	status,0,c
  7410  001B9A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  7411  001B9C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  7412  001B9E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  7413  001BA0  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  7414  001BA2                     u4480:
  7415  001BA2  2EE8               	decfsz	wreg,f,c
  7416  001BA4  D7F8               	goto	u4485
  7417  001BA6  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7418  001BAA  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7419  001BAE  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7420  001BB2  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7421                           
  7422                           ; BSR set to: 0
  7423                           ;inc\CANlib.h: 404: tamp = tamp & 0x000000FF;
  7424  001BB6  0100               	movlb	0	; () banked
  7425  001BB8  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  7426  001BBA  0100               	movlb	0	; () banked
  7427  001BBC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7428  001BBE  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7429  001BC0  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7430  001BC2  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7431                           
  7432                           ; BSR set to: 0
  7433                           ;inc\CANlib.h: 405: TXB1SIDH = (unsigned char) tamp;
  7434  001BC4  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  7435                           
  7436                           ;inc\CANlib.h: 406: }
  7437  001BC8  D059               	goto	l4074
  7438  001BCA                     l375:
  7439                           
  7440                           ; BSR set to: 0
  7441                           ;inc\CANlib.h: 408: else
  7442                           ;inc\CANlib.h: 410: {
  7443                           ;inc\CANlib.h: 411: TXB1SIDLbits.EXIDE = 0x00;
  7444  001BCA  010F               	movlb	15	; () banked
  7445  001BCC  9732               	bcf	50,3,b	;volatile
  7446                           
  7447                           ; BSR set to: 15
  7448                           ;inc\CANlib.h: 413: tamp = (identifier >> 3);
  7449  001BCE  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  7450  001BD2  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7451  001BD6  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7452  001BDA  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7453  001BDE  0E04               	movlw	4
  7454  001BE0  D006               	goto	u4490
  7455  001BE2                     u4495:
  7456  001BE2  0100               	movlb	0	; () banked
  7457  001BE4  90D8               	bcf	status,0,c
  7458  001BE6  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  7459  001BE8  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  7460  001BEA  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  7461  001BEC  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  7462  001BEE                     u4490:
  7463  001BEE  2EE8               	decfsz	wreg,f,c
  7464  001BF0  D7F8               	goto	u4495
  7465  001BF2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7466  001BF6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7467  001BFA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7468  001BFE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;inc\CANlib.h: 414: tamp = tamp & 0x000000FF;
  7472  001C02  0100               	movlb	0	; () banked
  7473  001C04  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  7474  001C06  0100               	movlb	0	; () banked
  7475  001C08  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7476  001C0A  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7477  001C0C  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7478  001C0E  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;inc\CANlib.h: 415: TXB1SIDH = (unsigned char) tamp;
  7482  001C10  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  7483                           
  7484                           ; BSR set to: 0
  7485                           ;inc\CANlib.h: 417: tamp = identifier & 0x00000007;
  7486  001C14  0E07               	movlw	7
  7487  001C16  0100               	movlb	0	; () banked
  7488  001C18  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  7489  001C1A  0100               	movlb	0	; () banked
  7490  001C1C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7491  001C1E  0E00               	movlw	0
  7492  001C20  0100               	movlb	0	; () banked
  7493  001C22  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  7494  001C24  0100               	movlb	0	; () banked
  7495  001C26  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  7496  001C28  0E00               	movlw	0
  7497  001C2A  0100               	movlb	0	; () banked
  7498  001C2C  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  7499  001C2E  0100               	movlb	0	; () banked
  7500  001C30  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  7501  001C32  0E00               	movlw	0
  7502  001C34  0100               	movlb	0	; () banked
  7503  001C36  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  7504  001C38  0100               	movlb	0	; () banked
  7505  001C3A  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;inc\CANlib.h: 418: tamp = tamp << 5;
  7509  001C3C  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  7510  001C40  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  7511  001C44  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  7512  001C48  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  7513  001C4C  0E05               	movlw	5
  7514  001C4E                     u4505:
  7515  001C4E  90D8               	bcf	status,0,c
  7516  001C50  0100               	movlb	0	; () banked
  7517  001C52  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  7518  001C54  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  7519  001C56  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  7520  001C58  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  7521  001C5A  2EE8               	decfsz	wreg,f,c
  7522  001C5C  D7F8               	goto	u4505
  7523  001C5E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7524  001C62  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7525  001C66  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7526  001C6A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7527                           
  7528                           ; BSR set to: 0
  7529                           ;inc\CANlib.h: 419: TXB1SIDL = TXB1SIDL & 0b00011111;
  7530  001C6E  010F               	movlb	15	; () banked
  7531  001C70  5132               	movf	50,w,b	;volatile
  7532  001C72  0B1F               	andlw	31
  7533  001C74  010F               	movlb	15	; () banked
  7534  001C76  6F32               	movwf	50,b	;volatile
  7535                           
  7536                           ; BSR set to: 15
  7537                           ;inc\CANlib.h: 420: TXB1SIDL = (unsigned char) tamp;
  7538  001C78  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  7539  001C7C                     l4074:
  7540                           
  7541                           ;inc\CANlib.h: 421: }
  7542                           ;inc\CANlib.h: 423: if (0b00000001 & flags)
  7543  001C7C  0100               	movlb	0	; () banked
  7544  001C7E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  7545  001C80  D003               	goto	l382
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;inc\CANlib.h: 424: TXB1CONbits.TXPRI0 = 0x01;
  7549  001C82  010F               	movlb	15	; () banked
  7550  001C84  8130               	bsf	48,0,b	;volatile
  7551  001C86  D002               	goto	l383
  7552  001C88                     l382:
  7553                           
  7554                           ; BSR set to: 0
  7555                           ;inc\CANlib.h: 425: else
  7556                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x00;
  7557  001C88  010F               	movlb	15	; () banked
  7558  001C8A  9130               	bcf	48,0,b	;volatile
  7559  001C8C                     l383:
  7560                           
  7561                           ; BSR set to: 15
  7562                           ;inc\CANlib.h: 427: if (0b00000010 & flags)
  7563  001C8C  0100               	movlb	0	; () banked
  7564  001C8E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  7565  001C90  D003               	goto	l384
  7566                           
  7567                           ; BSR set to: 0
  7568                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI1 = 0x01;
  7569  001C92  010F               	movlb	15	; () banked
  7570  001C94  8330               	bsf	48,1,b	;volatile
  7571  001C96  D002               	goto	l4080
  7572  001C98                     l384:
  7573                           
  7574                           ; BSR set to: 0
  7575                           ;inc\CANlib.h: 429: else
  7576                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x00;
  7577  001C98  010F               	movlb	15	; () banked
  7578  001C9A  9330               	bcf	48,1,b	;volatile
  7579  001C9C                     l4080:
  7580                           
  7581                           ; BSR set to: 15
  7582                           ;inc\CANlib.h: 432: TXB1D0 = data[0];
  7583  001C9C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  7584  001CA0  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  7585  001CA4  50DF               	movf	indf2,w,c
  7586  001CA6  010F               	movlb	15	; () banked
  7587  001CA8  6F36               	movwf	54,b	;volatile
  7588                           
  7589                           ; BSR set to: 15
  7590                           ;inc\CANlib.h: 433: TXB1D1 = data[1];
  7591  001CAA  0100               	movlb	0	; () banked
  7592  001CAC  EE20 F001          	lfsr	2,1
  7593  001CB0  517B               	movf	CANsendMessage@data& (0+255),w,b
  7594  001CB2  26D9               	addwf	fsr2l,f,c
  7595  001CB4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7596  001CB6  22DA               	addwfc	fsr2h,f,c
  7597  001CB8  50DF               	movf	indf2,w,c
  7598  001CBA  010F               	movlb	15	; () banked
  7599  001CBC  6F37               	movwf	55,b	;volatile
  7600                           
  7601                           ; BSR set to: 15
  7602                           ;inc\CANlib.h: 434: TXB1D2 = data[2];
  7603  001CBE  0100               	movlb	0	; () banked
  7604  001CC0  EE20 F002          	lfsr	2,2
  7605  001CC4  517B               	movf	CANsendMessage@data& (0+255),w,b
  7606  001CC6  26D9               	addwf	fsr2l,f,c
  7607  001CC8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7608  001CCA  22DA               	addwfc	fsr2h,f,c
  7609  001CCC  50DF               	movf	indf2,w,c
  7610  001CCE  010F               	movlb	15	; () banked
  7611  001CD0  6F38               	movwf	56,b	;volatile
  7612                           
  7613                           ; BSR set to: 15
  7614                           ;inc\CANlib.h: 435: TXB1D3 = data[3];
  7615  001CD2  0100               	movlb	0	; () banked
  7616  001CD4  EE20 F003          	lfsr	2,3
  7617  001CD8  517B               	movf	CANsendMessage@data& (0+255),w,b
  7618  001CDA  26D9               	addwf	fsr2l,f,c
  7619  001CDC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7620  001CDE  22DA               	addwfc	fsr2h,f,c
  7621  001CE0  50DF               	movf	indf2,w,c
  7622  001CE2  010F               	movlb	15	; () banked
  7623  001CE4  6F39               	movwf	57,b	;volatile
  7624                           
  7625                           ; BSR set to: 15
  7626                           ;inc\CANlib.h: 436: TXB1D4 = data[4];
  7627  001CE6  0100               	movlb	0	; () banked
  7628  001CE8  EE20 F004          	lfsr	2,4
  7629  001CEC  517B               	movf	CANsendMessage@data& (0+255),w,b
  7630  001CEE  26D9               	addwf	fsr2l,f,c
  7631  001CF0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7632  001CF2  22DA               	addwfc	fsr2h,f,c
  7633  001CF4  50DF               	movf	indf2,w,c
  7634  001CF6  010F               	movlb	15	; () banked
  7635  001CF8  6F3A               	movwf	58,b	;volatile
  7636                           
  7637                           ; BSR set to: 15
  7638                           ;inc\CANlib.h: 437: TXB1D5 = data[5];
  7639  001CFA  0100               	movlb	0	; () banked
  7640  001CFC  EE20 F005          	lfsr	2,5
  7641  001D00  517B               	movf	CANsendMessage@data& (0+255),w,b
  7642  001D02  26D9               	addwf	fsr2l,f,c
  7643  001D04  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7644  001D06  22DA               	addwfc	fsr2h,f,c
  7645  001D08  50DF               	movf	indf2,w,c
  7646  001D0A  010F               	movlb	15	; () banked
  7647  001D0C  6F3B               	movwf	59,b	;volatile
  7648                           
  7649                           ; BSR set to: 15
  7650                           ;inc\CANlib.h: 438: TXB1D6 = data[6];
  7651  001D0E  0100               	movlb	0	; () banked
  7652  001D10  EE20 F006          	lfsr	2,6
  7653  001D14  517B               	movf	CANsendMessage@data& (0+255),w,b
  7654  001D16  26D9               	addwf	fsr2l,f,c
  7655  001D18  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7656  001D1A  22DA               	addwfc	fsr2h,f,c
  7657  001D1C  50DF               	movf	indf2,w,c
  7658  001D1E  010F               	movlb	15	; () banked
  7659  001D20  6F3C               	movwf	60,b	;volatile
  7660                           
  7661                           ; BSR set to: 15
  7662                           ;inc\CANlib.h: 439: TXB1D7 = data[7];
  7663  001D22  0100               	movlb	0	; () banked
  7664  001D24  EE20 F007          	lfsr	2,7
  7665  001D28  517B               	movf	CANsendMessage@data& (0+255),w,b
  7666  001D2A  26D9               	addwf	fsr2l,f,c
  7667  001D2C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7668  001D2E  22DA               	addwfc	fsr2h,f,c
  7669  001D30  50DF               	movf	indf2,w,c
  7670  001D32  010F               	movlb	15	; () banked
  7671  001D34  6F3D               	movwf	61,b	;volatile
  7672                           
  7673                           ; BSR set to: 15
  7674                           ;inc\CANlib.h: 441: TXB1CONbits.TXREQ = 0x01;
  7675  001D36  010F               	movlb	15	; () banked
  7676  001D38  8730               	bsf	48,3,b	;volatile
  7677                           
  7678                           ; BSR set to: 15
  7679                           ;inc\CANlib.h: 443: return;
  7680  001D3A  0012               	return	
  7681  001D3C                     l372:
  7682                           
  7683                           ; BSR set to: 15
  7684                           ;inc\CANlib.h: 444: }
  7685                           ;inc\CANlib.h: 448: if (TXB2CONbits.TXREQ == 0)
  7686  001D3C  010F               	movlb	15	; () banked
  7687  001D3E  B720               	btfsc	32,3,b	;volatile
  7688  001D40  0012               	return	
  7689                           
  7690                           ; BSR set to: 15
  7691                           ;inc\CANlib.h: 449: { TXB2DLC = dataLength;
  7692  001D42  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  7693                           
  7694                           ;inc\CANlib.h: 451: if (0b01000000 & flags)
  7695  001D46  0100               	movlb	0	; () banked
  7696  001D48  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  7697  001D4A  D003               	goto	l387
  7698                           
  7699                           ; BSR set to: 0
  7700                           ;inc\CANlib.h: 452: TXB2DLCbits.TXRTR = 0x01;
  7701  001D4C  010F               	movlb	15	; () banked
  7702  001D4E  8D25               	bsf	37,6,b	;volatile
  7703  001D50  D002               	goto	l388
  7704  001D52                     l387:
  7705                           
  7706                           ; BSR set to: 0
  7707                           ;inc\CANlib.h: 453: else
  7708                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x00;
  7709  001D52  010F               	movlb	15	; () banked
  7710  001D54  9D25               	bcf	37,6,b	;volatile
  7711  001D56                     l388:
  7712                           
  7713                           ; BSR set to: 15
  7714                           ;inc\CANlib.h: 456: if (CAN_TX_FRAME_MASK & flags)
  7715  001D56  0100               	movlb	0	; () banked
  7716  001D58  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  7717  001D5A  D079               	goto	l389
  7718                           
  7719                           ; BSR set to: 0
  7720                           ;inc\CANlib.h: 457: {
  7721                           ;inc\CANlib.h: 458: tamp = identifier & 0x000000FF;
  7722  001D5C  0100               	movlb	0	; () banked
  7723  001D5E  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  7724  001D60  0100               	movlb	0	; () banked
  7725  001D62  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7726  001D64  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7727  001D66  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7728  001D68  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7729                           
  7730                           ; BSR set to: 0
  7731                           ;inc\CANlib.h: 459: TXB2EIDL = (unsigned char) tamp;
  7732  001D6A  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;inc\CANlib.h: 461: tamp = identifier & 0x0000FF00;
  7736  001D6E  0E00               	movlw	0
  7737  001D70  0100               	movlb	0	; () banked
  7738  001D72  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  7739  001D74  0100               	movlb	0	; () banked
  7740  001D76  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7741  001D78  0EFF               	movlw	255
  7742  001D7A  0100               	movlb	0	; () banked
  7743  001D7C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  7744  001D7E  0100               	movlb	0	; () banked
  7745  001D80  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  7746  001D82  0E00               	movlw	0
  7747  001D84  0100               	movlb	0	; () banked
  7748  001D86  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  7749  001D88  0100               	movlb	0	; () banked
  7750  001D8A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  7751  001D8C  0E00               	movlw	0
  7752  001D8E  0100               	movlb	0	; () banked
  7753  001D90  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  7754  001D92  0100               	movlb	0	; () banked
  7755  001D94  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;inc\CANlib.h: 462: tamp = tamp >> 8;
  7759  001D96  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  7760  001D9A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  7761  001D9E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  7762  001DA2  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  7763  001DA6  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  7764  001DAA  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  7765  001DAE  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  7766  001DB2  0100               	movlb	0	; () banked
  7767  001DB4  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  7768  001DB6  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7769  001DBA  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7770  001DBE  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7771  001DC2  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;inc\CANlib.h: 463: TXB2EIDH = (unsigned char) tamp;
  7775  001DC6  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  7776                           
  7777                           ; BSR set to: 0
  7778                           ;inc\CANlib.h: 465: TXB2SIDL = 0x00;
  7779  001DCA  0E00               	movlw	0
  7780  001DCC  010F               	movlb	15	; () banked
  7781  001DCE  6F22               	movwf	34,b	;volatile
  7782                           
  7783                           ; BSR set to: 15
  7784                           ;inc\CANlib.h: 466: TXB2SIDLbits.EXIDE = 0x01;
  7785  001DD0  010F               	movlb	15	; () banked
  7786  001DD2  8722               	bsf	34,3,b	;volatile
  7787                           
  7788                           ; BSR set to: 15
  7789                           ;inc\CANlib.h: 468: if (identifier & 0x00010000)
  7790  001DD4  0100               	movlb	0	; () banked
  7791  001DD6  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  7792  001DD8  D002               	goto	l390
  7793                           
  7794                           ; BSR set to: 0
  7795                           ;inc\CANlib.h: 469: TXB2SIDLbits.EID16 = 0x01;
  7796  001DDA  010F               	movlb	15	; () banked
  7797  001DDC  8122               	bsf	34,0,b	;volatile
  7798  001DDE                     l390:
  7799                           
  7800                           ;inc\CANlib.h: 470: if (identifier & 0x00020000)
  7801  001DDE  0100               	movlb	0	; () banked
  7802  001DE0  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  7803  001DE2  D002               	goto	l391
  7804                           
  7805                           ; BSR set to: 0
  7806                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID17 = 0x01;
  7807  001DE4  010F               	movlb	15	; () banked
  7808  001DE6  8322               	bsf	34,1,b	;volatile
  7809  001DE8                     l391:
  7810                           
  7811                           ;inc\CANlib.h: 472: if (identifier & 0x00040000)
  7812  001DE8  0100               	movlb	0	; () banked
  7813  001DEA  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  7814  001DEC  D002               	goto	l392
  7815                           
  7816                           ; BSR set to: 0
  7817                           ;inc\CANlib.h: 473: TXB2SIDLbits.SID0 = 0x01;
  7818  001DEE  010F               	movlb	15	; () banked
  7819  001DF0  8B22               	bsf	34,5,b	;volatile
  7820  001DF2                     l392:
  7821                           
  7822                           ;inc\CANlib.h: 474: if (identifier & 0x00080000)
  7823  001DF2  0100               	movlb	0	; () banked
  7824  001DF4  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  7825  001DF6  D002               	goto	l393
  7826                           
  7827                           ; BSR set to: 0
  7828                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID1 = 0x01;
  7829  001DF8  010F               	movlb	15	; () banked
  7830  001DFA  8D22               	bsf	34,6,b	;volatile
  7831  001DFC                     l393:
  7832                           
  7833                           ;inc\CANlib.h: 476: if (identifier & 0x00100000)
  7834  001DFC  0100               	movlb	0	; () banked
  7835  001DFE  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  7836  001E00  D002               	goto	l4130
  7837                           
  7838                           ; BSR set to: 0
  7839                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID2 = 0x01;
  7840  001E02  010F               	movlb	15	; () banked
  7841  001E04  8F22               	bsf	34,7,b	;volatile
  7842  001E06                     l4130:
  7843                           
  7844                           ;inc\CANlib.h: 479: tamp = (identifier >> 21);
  7845  001E06  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  7846  001E0A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7847  001E0E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7848  001E12  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7849  001E16  0E16               	movlw	22
  7850  001E18  D006               	goto	u4610
  7851  001E1A                     u4615:
  7852  001E1A  0100               	movlb	0	; () banked
  7853  001E1C  90D8               	bcf	status,0,c
  7854  001E1E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  7855  001E20  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  7856  001E22  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  7857  001E24  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  7858  001E26                     u4610:
  7859  001E26  2EE8               	decfsz	wreg,f,c
  7860  001E28  D7F8               	goto	u4615
  7861  001E2A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7862  001E2E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7863  001E32  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7864  001E36  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7865                           
  7866                           ; BSR set to: 0
  7867                           ;inc\CANlib.h: 480: tamp = tamp & 0x000000FF;
  7868  001E3A  0100               	movlb	0	; () banked
  7869  001E3C  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  7870  001E3E  0100               	movlb	0	; () banked
  7871  001E40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7872  001E42  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7873  001E44  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7874  001E46  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7875                           
  7876                           ; BSR set to: 0
  7877                           ;inc\CANlib.h: 481: TXB2SIDH = (unsigned char) tamp;
  7878  001E48  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  7879                           
  7880                           ;inc\CANlib.h: 482: }
  7881  001E4C  D059               	goto	l4150
  7882  001E4E                     l389:
  7883                           
  7884                           ; BSR set to: 0
  7885                           ;inc\CANlib.h: 484: else
  7886                           ;inc\CANlib.h: 486: {
  7887                           ;inc\CANlib.h: 487: TXB2SIDLbits.EXIDE = 0x00;
  7888  001E4E  010F               	movlb	15	; () banked
  7889  001E50  9722               	bcf	34,3,b	;volatile
  7890                           
  7891                           ; BSR set to: 15
  7892                           ;inc\CANlib.h: 489: tamp = (identifier >> 3);
  7893  001E52  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  7894  001E56  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7895  001E5A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7896  001E5E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7897  001E62  0E04               	movlw	4
  7898  001E64  D006               	goto	u4620
  7899  001E66                     u4625:
  7900  001E66  0100               	movlb	0	; () banked
  7901  001E68  90D8               	bcf	status,0,c
  7902  001E6A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  7903  001E6C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  7904  001E6E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  7905  001E70  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  7906  001E72                     u4620:
  7907  001E72  2EE8               	decfsz	wreg,f,c
  7908  001E74  D7F8               	goto	u4625
  7909  001E76  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7910  001E7A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7911  001E7E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7912  001E82  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7913                           
  7914                           ; BSR set to: 0
  7915                           ;inc\CANlib.h: 490: tamp = tamp & 0x000000FF;
  7916  001E86  0100               	movlb	0	; () banked
  7917  001E88  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  7918  001E8A  0100               	movlb	0	; () banked
  7919  001E8C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7920  001E8E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7921  001E90  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7922  001E92  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;inc\CANlib.h: 491: TXB2SIDH = (unsigned char) tamp;
  7926  001E94  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  7927                           
  7928                           ; BSR set to: 0
  7929                           ;inc\CANlib.h: 493: tamp = identifier & 0x00000007;
  7930  001E98  0E07               	movlw	7
  7931  001E9A  0100               	movlb	0	; () banked
  7932  001E9C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  7933  001E9E  0100               	movlb	0	; () banked
  7934  001EA0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7935  001EA2  0E00               	movlw	0
  7936  001EA4  0100               	movlb	0	; () banked
  7937  001EA6  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  7938  001EA8  0100               	movlb	0	; () banked
  7939  001EAA  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  7940  001EAC  0E00               	movlw	0
  7941  001EAE  0100               	movlb	0	; () banked
  7942  001EB0  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  7943  001EB2  0100               	movlb	0	; () banked
  7944  001EB4  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  7945  001EB6  0E00               	movlw	0
  7946  001EB8  0100               	movlb	0	; () banked
  7947  001EBA  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  7948  001EBC  0100               	movlb	0	; () banked
  7949  001EBE  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  7950                           
  7951                           ; BSR set to: 0
  7952                           ;inc\CANlib.h: 494: tamp = tamp << 5;
  7953  001EC0  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  7954  001EC4  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  7955  001EC8  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  7956  001ECC  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  7957  001ED0  0E05               	movlw	5
  7958  001ED2                     u4635:
  7959  001ED2  90D8               	bcf	status,0,c
  7960  001ED4  0100               	movlb	0	; () banked
  7961  001ED6  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  7962  001ED8  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  7963  001EDA  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  7964  001EDC  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  7965  001EDE  2EE8               	decfsz	wreg,f,c
  7966  001EE0  D7F8               	goto	u4635
  7967  001EE2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7968  001EE6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7969  001EEA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7970  001EEE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7971                           
  7972                           ; BSR set to: 0
  7973                           ;inc\CANlib.h: 495: TXB2SIDL = TXB2SIDL & 0b00011111;
  7974  001EF2  010F               	movlb	15	; () banked
  7975  001EF4  5122               	movf	34,w,b	;volatile
  7976  001EF6  0B1F               	andlw	31
  7977  001EF8  010F               	movlb	15	; () banked
  7978  001EFA  6F22               	movwf	34,b	;volatile
  7979                           
  7980                           ; BSR set to: 15
  7981                           ;inc\CANlib.h: 496: TXB2SIDL = (unsigned char) tamp;
  7982  001EFC  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  7983  001F00                     l4150:
  7984                           
  7985                           ;inc\CANlib.h: 497: }
  7986                           ;inc\CANlib.h: 499: if (0b00000001 & flags)
  7987  001F00  0100               	movlb	0	; () banked
  7988  001F02  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  7989  001F04  D003               	goto	l396
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;inc\CANlib.h: 500: TXB2CONbits.TXPRI0 = 0x01;
  7993  001F06  010F               	movlb	15	; () banked
  7994  001F08  8120               	bsf	32,0,b	;volatile
  7995  001F0A  D002               	goto	l397
  7996  001F0C                     l396:
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;inc\CANlib.h: 501: else
  8000                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x00;
  8001  001F0C  010F               	movlb	15	; () banked
  8002  001F0E  9120               	bcf	32,0,b	;volatile
  8003  001F10                     l397:
  8004                           
  8005                           ; BSR set to: 15
  8006                           ;inc\CANlib.h: 503: if (0b00000010 & flags)
  8007  001F10  0100               	movlb	0	; () banked
  8008  001F12  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  8009  001F14  D003               	goto	l398
  8010                           
  8011                           ; BSR set to: 0
  8012                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI1 = 0x01;
  8013  001F16  010F               	movlb	15	; () banked
  8014  001F18  8320               	bsf	32,1,b	;volatile
  8015  001F1A  D002               	goto	l4156
  8016  001F1C                     l398:
  8017                           
  8018                           ; BSR set to: 0
  8019                           ;inc\CANlib.h: 505: else
  8020                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x00;
  8021  001F1C  010F               	movlb	15	; () banked
  8022  001F1E  9320               	bcf	32,1,b	;volatile
  8023  001F20                     l4156:
  8024                           
  8025                           ; BSR set to: 15
  8026                           ;inc\CANlib.h: 508: TXB2D0 = data[0];
  8027  001F20  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  8028  001F24  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  8029  001F28  50DF               	movf	indf2,w,c
  8030  001F2A  010F               	movlb	15	; () banked
  8031  001F2C  6F26               	movwf	38,b	;volatile
  8032                           
  8033                           ; BSR set to: 15
  8034                           ;inc\CANlib.h: 509: TXB2D1 = data[1];
  8035  001F2E  0100               	movlb	0	; () banked
  8036  001F30  EE20 F001          	lfsr	2,1
  8037  001F34  517B               	movf	CANsendMessage@data& (0+255),w,b
  8038  001F36  26D9               	addwf	fsr2l,f,c
  8039  001F38  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8040  001F3A  22DA               	addwfc	fsr2h,f,c
  8041  001F3C  50DF               	movf	indf2,w,c
  8042  001F3E  010F               	movlb	15	; () banked
  8043  001F40  6F27               	movwf	39,b	;volatile
  8044                           
  8045                           ; BSR set to: 15
  8046                           ;inc\CANlib.h: 510: TXB2D2 = data[2];
  8047  001F42  0100               	movlb	0	; () banked
  8048  001F44  EE20 F002          	lfsr	2,2
  8049  001F48  517B               	movf	CANsendMessage@data& (0+255),w,b
  8050  001F4A  26D9               	addwf	fsr2l,f,c
  8051  001F4C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8052  001F4E  22DA               	addwfc	fsr2h,f,c
  8053  001F50  50DF               	movf	indf2,w,c
  8054  001F52  010F               	movlb	15	; () banked
  8055  001F54  6F28               	movwf	40,b	;volatile
  8056                           
  8057                           ; BSR set to: 15
  8058                           ;inc\CANlib.h: 511: TXB2D3 = data[3];
  8059  001F56  0100               	movlb	0	; () banked
  8060  001F58  EE20 F003          	lfsr	2,3
  8061  001F5C  517B               	movf	CANsendMessage@data& (0+255),w,b
  8062  001F5E  26D9               	addwf	fsr2l,f,c
  8063  001F60  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8064  001F62  22DA               	addwfc	fsr2h,f,c
  8065  001F64  50DF               	movf	indf2,w,c
  8066  001F66  010F               	movlb	15	; () banked
  8067  001F68  6F29               	movwf	41,b	;volatile
  8068                           
  8069                           ; BSR set to: 15
  8070                           ;inc\CANlib.h: 512: TXB2D4 = data[4];
  8071  001F6A  0100               	movlb	0	; () banked
  8072  001F6C  EE20 F004          	lfsr	2,4
  8073  001F70  517B               	movf	CANsendMessage@data& (0+255),w,b
  8074  001F72  26D9               	addwf	fsr2l,f,c
  8075  001F74  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8076  001F76  22DA               	addwfc	fsr2h,f,c
  8077  001F78  50DF               	movf	indf2,w,c
  8078  001F7A  010F               	movlb	15	; () banked
  8079  001F7C  6F2A               	movwf	42,b	;volatile
  8080                           
  8081                           ; BSR set to: 15
  8082                           ;inc\CANlib.h: 513: TXB2D5 = data[5];
  8083  001F7E  0100               	movlb	0	; () banked
  8084  001F80  EE20 F005          	lfsr	2,5
  8085  001F84  517B               	movf	CANsendMessage@data& (0+255),w,b
  8086  001F86  26D9               	addwf	fsr2l,f,c
  8087  001F88  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8088  001F8A  22DA               	addwfc	fsr2h,f,c
  8089  001F8C  50DF               	movf	indf2,w,c
  8090  001F8E  010F               	movlb	15	; () banked
  8091  001F90  6F2B               	movwf	43,b	;volatile
  8092                           
  8093                           ; BSR set to: 15
  8094                           ;inc\CANlib.h: 514: TXB2D6 = data[6];
  8095  001F92  0100               	movlb	0	; () banked
  8096  001F94  EE20 F006          	lfsr	2,6
  8097  001F98  517B               	movf	CANsendMessage@data& (0+255),w,b
  8098  001F9A  26D9               	addwf	fsr2l,f,c
  8099  001F9C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8100  001F9E  22DA               	addwfc	fsr2h,f,c
  8101  001FA0  50DF               	movf	indf2,w,c
  8102  001FA2  010F               	movlb	15	; () banked
  8103  001FA4  6F2C               	movwf	44,b	;volatile
  8104                           
  8105                           ; BSR set to: 15
  8106                           ;inc\CANlib.h: 515: TXB2D7 = data[7];
  8107  001FA6  0100               	movlb	0	; () banked
  8108  001FA8  EE20 F007          	lfsr	2,7
  8109  001FAC  517B               	movf	CANsendMessage@data& (0+255),w,b
  8110  001FAE  26D9               	addwf	fsr2l,f,c
  8111  001FB0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8112  001FB2  22DA               	addwfc	fsr2h,f,c
  8113  001FB4  50DF               	movf	indf2,w,c
  8114  001FB6  010F               	movlb	15	; () banked
  8115  001FB8  6F2D               	movwf	45,b	;volatile
  8116                           
  8117                           ; BSR set to: 15
  8118                           ;inc\CANlib.h: 517: TXB2CONbits.TXREQ = 0x01;
  8119  001FBA  010F               	movlb	15	; () banked
  8120  001FBC  8720               	bsf	32,3,b	;volatile
  8121                           
  8122                           ; BSR set to: 15
  8123                           ;inc\CANlib.h: 519: return;
  8124  001FBE  0012               	return	
  8125  001FC0                     __end_of_CANsendMessage:
  8126                           	opt stack 0
  8127                           tblptru	equ	0xFF8
  8128                           tblptrh	equ	0xFF7
  8129                           tblptrl	equ	0xFF6
  8130                           tablat	equ	0xFF5
  8131                           prodh	equ	0xFF4
  8132                           prodl	equ	0xFF3
  8133                           postinc0	equ	0xFEE
  8134                           wreg	equ	0xFE8
  8135                           indf2	equ	0xFDF
  8136                           postinc2	equ	0xFDE
  8137                           postdec2	equ	0xFDD
  8138                           fsr2h	equ	0xFDA
  8139                           fsr2l	equ	0xFD9
  8140                           status	equ	0xFD8
  8141                           
  8142 ;; *************** function _CANisTxReady *****************
  8143 ;; Defined at:
  8144 ;;		line 1153 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8145 ;; Parameters:    Size  Location     Type
  8146 ;;		None
  8147 ;; Auto vars:     Size  Location     Type
  8148 ;;		None
  8149 ;; Return value:  Size  Location     Type
  8150 ;;                  1    wreg      unsigned char 
  8151 ;; Registers used:
  8152 ;;		wreg, status,2
  8153 ;; Tracked objects:
  8154 ;;		On entry : 0/0
  8155 ;;		On exit  : 0/0
  8156 ;;		Unchanged: 0/0
  8157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8159 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8161 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8162 ;;Total ram usage:        1 bytes
  8163 ;; Hardware stack levels used:    1
  8164 ;; Hardware stack levels required when called:    4
  8165 ;; This function calls:
  8166 ;;		Nothing
  8167 ;; This function is called by:
  8168 ;;		_park_search
  8169 ;;		_can_send
  8170 ;; This function uses a non-reentrant model
  8171 ;;
  8172                           
  8173                           	psect	text19
  8174  004E32                     __ptext19:
  8175                           	opt stack 0
  8176  004E32                     _CANisTxReady:
  8177                           	opt stack 23
  8178                           
  8179                           ;inc\CANlib.h: 1155: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  8180                           
  8181                           ; BSR set to: 15
  8182                           ;incstack = 0
  8183  004E32  0E01               	movlw	1
  8184  004E34  0100               	movlb	0	; () banked
  8185  004E36  6F77               	movwf	_CANisTxReady$2808& (0+255),b
  8186                           
  8187                           ; BSR set to: 0
  8188  004E38  010F               	movlb	15	; () banked
  8189  004E3A  A740               	btfss	64,3,b	;volatile
  8190  004E3C  D009               	goto	l550
  8191                           
  8192                           ; BSR set to: 15
  8193  004E3E  010F               	movlb	15	; () banked
  8194  004E40  A730               	btfss	48,3,b	;volatile
  8195  004E42  D006               	goto	l550
  8196                           
  8197                           ; BSR set to: 15
  8198  004E44  010F               	movlb	15	; () banked
  8199  004E46  A720               	btfss	32,3,b	;volatile
  8200  004E48  D003               	goto	l550
  8201                           
  8202                           ; BSR set to: 15
  8203  004E4A  0E00               	movlw	0
  8204  004E4C  0100               	movlb	0	; () banked
  8205  004E4E  6F77               	movwf	_CANisTxReady$2808& (0+255),b
  8206  004E50                     l550:
  8207  004E50  0100               	movlb	0	; () banked
  8208  004E52  5177               	movf	_CANisTxReady$2808& (0+255),w,b
  8209  004E54  0012               	return	
  8210  004E56                     __end_of_CANisTxReady:
  8211                           	opt stack 0
  8212                           tblptru	equ	0xFF8
  8213                           tblptrh	equ	0xFF7
  8214                           tblptrl	equ	0xFF6
  8215                           tablat	equ	0xFF5
  8216                           prodh	equ	0xFF4
  8217                           prodl	equ	0xFF3
  8218                           postinc0	equ	0xFEE
  8219                           wreg	equ	0xFE8
  8220                           indf2	equ	0xFDF
  8221                           postinc2	equ	0xFDE
  8222                           postdec2	equ	0xFDD
  8223                           fsr2h	equ	0xFDA
  8224                           fsr2l	equ	0xFD9
  8225                           status	equ	0xFD8
  8226                           
  8227 ;; *************** function _configurazione *****************
  8228 ;; Defined at:
  8229 ;;		line 281 in file "parcheggio.c"
  8230 ;; Parameters:    Size  Location     Type
  8231 ;;		None
  8232 ;; Auto vars:     Size  Location     Type
  8233 ;;		None
  8234 ;; Return value:  Size  Location     Type
  8235 ;;		None               void
  8236 ;; Registers used:
  8237 ;;		wreg, status,2, status,0, cstack
  8238 ;; Tracked objects:
  8239 ;;		On entry : 0/0
  8240 ;;		On exit  : 0/0
  8241 ;;		Unchanged: 0/0
  8242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8247 ;;Total ram usage:        0 bytes
  8248 ;; Hardware stack levels used:    1
  8249 ;; Hardware stack levels required when called:    6
  8250 ;; This function calls:
  8251 ;;		_CANInitialize
  8252 ;; This function is called by:
  8253 ;;		_main
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           	psect	text20
  8258  004C2C                     __ptext20:
  8259                           	opt stack 0
  8260  004C2C                     _configurazione:
  8261                           	opt stack 24
  8262                           
  8263                           ;parcheggio.c: 282: LATA = 0x00;
  8264                           
  8265                           ; BSR set to: 0
  8266                           ;incstack = 0
  8267  004C2C  0E00               	movlw	0
  8268  004C2E  6E89               	movwf	3977,c	;volatile
  8269                           
  8270                           ;parcheggio.c: 283: TRISA = 0b11110000;
  8271  004C30  0EF0               	movlw	240
  8272  004C32  6E92               	movwf	3986,c	;volatile
  8273                           
  8274                           ;parcheggio.c: 285: LATB = 0x00;
  8275  004C34  0E00               	movlw	0
  8276  004C36  6E8A               	movwf	3978,c	;volatile
  8277                           
  8278                           ;parcheggio.c: 286: TRISB = 0b10001010;
  8279  004C38  0E8A               	movlw	138
  8280  004C3A  6E93               	movwf	3987,c	;volatile
  8281                           
  8282                           ;parcheggio.c: 288: LATC = 0x00;
  8283  004C3C  0E00               	movlw	0
  8284  004C3E  6E8B               	movwf	3979,c	;volatile
  8285                           
  8286                           ;parcheggio.c: 289: TRISC = 0b11111111;
  8287  004C40  6894               	setf	3988,c	;volatile
  8288                           
  8289                           ;parcheggio.c: 291: ADCON1 = 0xFF;
  8290  004C42  68C1               	setf	4033,c	;volatile
  8291                           
  8292                           ;parcheggio.c: 292: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  8293  004C44  0E06               	movlw	6
  8294  004C46  0100               	movlb	0	; () banked
  8295  004C48  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
  8296  004C4A  0E05               	movlw	5
  8297  004C4C  0100               	movlb	0	; () banked
  8298  004C4E  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
  8299  004C50  0E01               	movlw	1
  8300  004C52  0100               	movlb	0	; () banked
  8301  004C54  6F87               	movwf	CANInitialize@SJW& (0+255),b
  8302  004C56  0E03               	movlw	3
  8303  004C58  0100               	movlb	0	; () banked
  8304  004C5A  6F88               	movwf	CANInitialize@BRP& (0+255),b
  8305  004C5C  0E9D               	movlw	157
  8306  004C5E  0100               	movlb	0	; () banked
  8307  004C60  6F89               	movwf	CANInitialize@flags& (0+255),b
  8308  004C62  0E04               	movlw	4
  8309  004C64  EC80  F021         	call	_CANInitialize
  8310                           
  8311                           ;parcheggio.c: 294: RCONbits.IPEN = 1;
  8312  004C68  8ED0               	bsf	4048,7,c	;volatile
  8313                           
  8314                           ;parcheggio.c: 295: PIR3bits.RXB1IF = 0;
  8315  004C6A  92A4               	bcf	4004,1,c	;volatile
  8316                           
  8317                           ;parcheggio.c: 296: PIR3bits.RXB0IF = 0;
  8318  004C6C  90A4               	bcf	4004,0,c	;volatile
  8319                           
  8320                           ;parcheggio.c: 297: IPR3bits.RXB1IP = 0;
  8321  004C6E  92A5               	bcf	4005,1,c	;volatile
  8322                           
  8323                           ;parcheggio.c: 298: IPR3bits.RXB0IP = 0;
  8324  004C70  90A5               	bcf	4005,0,c	;volatile
  8325                           
  8326                           ;parcheggio.c: 299: PIE3bits.RXB1IE = 1;
  8327  004C72  82A3               	bsf	4003,1,c	;volatile
  8328                           
  8329                           ;parcheggio.c: 300: PIE3bits.RXB0IE = 1;
  8330  004C74  80A3               	bsf	4003,0,c	;volatile
  8331                           
  8332                           ;parcheggio.c: 301: INTCON2bits.TMR0IP = 0;
  8333  004C76  94F1               	bcf	intcon2,2,c	;volatile
  8334                           
  8335                           ;parcheggio.c: 302: T0CON = 0x80;
  8336  004C78  0E80               	movlw	128
  8337  004C7A  6ED5               	movwf	4053,c	;volatile
  8338                           
  8339                           ;parcheggio.c: 303: T3CON = 0x11;
  8340  004C7C  0E11               	movlw	17
  8341  004C7E  6EB1               	movwf	4017,c	;volatile
  8342                           
  8343                           ;parcheggio.c: 304: TMR0H = 0x34;
  8344  004C80  0E34               	movlw	52
  8345  004C82  6ED7               	movwf	4055,c	;volatile
  8346                           
  8347                           ;parcheggio.c: 305: TMR0L = 0xE0;
  8348  004C84  0EE0               	movlw	224
  8349  004C86  6ED6               	movwf	4054,c	;volatile
  8350                           
  8351                           ;parcheggio.c: 306: INTCONbits.TMR0IF = 0;
  8352  004C88  94F2               	bcf	intcon,2,c	;volatile
  8353                           
  8354                           ;parcheggio.c: 307: INTCONbits.TMR0IE = 1;
  8355  004C8A  8AF2               	bsf	intcon,5,c	;volatile
  8356                           
  8357                           ;parcheggio.c: 308: INTCON2bits.INTEDG0 = 1;
  8358  004C8C  8CF1               	bsf	intcon2,6,c	;volatile
  8359                           
  8360                           ;parcheggio.c: 309: INTCONbits.INT0IF = 0;
  8361  004C8E  92F2               	bcf	intcon,1,c	;volatile
  8362                           
  8363                           ;parcheggio.c: 310: INTCONbits.INT0IE = 0;
  8364  004C90  98F2               	bcf	intcon,4,c	;volatile
  8365                           
  8366                           ;parcheggio.c: 311: INTCONbits.GIEL = 1;
  8367  004C92  8CF2               	bsf	intcon,6,c	;volatile
  8368                           
  8369                           ;parcheggio.c: 312: INTCONbits.GIEH = 1;
  8370  004C94  8EF2               	bsf	intcon,7,c	;volatile
  8371  004C96  0012               	return		;funcret
  8372  004C98                     __end_of_configurazione:
  8373                           	opt stack 0
  8374                           tblptru	equ	0xFF8
  8375                           tblptrh	equ	0xFF7
  8376                           tblptrl	equ	0xFF6
  8377                           tablat	equ	0xFF5
  8378                           prodh	equ	0xFF4
  8379                           prodl	equ	0xFF3
  8380                           intcon	equ	0xFF2
  8381                           intcon2	equ	0xFF1
  8382                           postinc0	equ	0xFEE
  8383                           wreg	equ	0xFE8
  8384                           indf2	equ	0xFDF
  8385                           postinc2	equ	0xFDE
  8386                           postdec2	equ	0xFDD
  8387                           fsr2h	equ	0xFDA
  8388                           fsr2l	equ	0xFD9
  8389                           status	equ	0xFD8
  8390                           
  8391 ;; *************** function _CANInitialize *****************
  8392 ;; Defined at:
  8393 ;;		line 218 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8394 ;; Parameters:    Size  Location     Type
  8395 ;;  propSeg         1    wreg     unsigned char 
  8396 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
  8397 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
  8398 ;;  SJW             1   39[BANK0 ] unsigned char 
  8399 ;;  BRP             1   40[BANK0 ] unsigned char 
  8400 ;;  flags           1   41[BANK0 ] enum E16313
  8401 ;; Auto vars:     Size  Location     Type
  8402 ;;  propSeg         1   46[BANK0 ] unsigned char 
  8403 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
  8404 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
  8405 ;; Return value:  Size  Location     Type
  8406 ;;		None               void
  8407 ;; Registers used:
  8408 ;;		wreg, status,2, status,0, cstack
  8409 ;; Tracked objects:
  8410 ;;		On entry : 0/0
  8411 ;;		On exit  : 0/0
  8412 ;;		Unchanged: 0/0
  8413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8414 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8415 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8416 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8417 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8418 ;;Total ram usage:       12 bytes
  8419 ;; Hardware stack levels used:    1
  8420 ;; Hardware stack levels required when called:    5
  8421 ;; This function calls:
  8422 ;;		_CANOperationMode
  8423 ;;		_CANSetFilter
  8424 ;;		_CANSetMask
  8425 ;; This function is called by:
  8426 ;;		_configurazione
  8427 ;; This function uses a non-reentrant model
  8428 ;;
  8429                           
  8430                           	psect	text21
  8431  004300                     __ptext21:
  8432                           	opt stack 0
  8433  004300                     _CANInitialize:
  8434                           	opt stack 24
  8435                           
  8436                           ;incstack = 0
  8437                           ;CANInitialize@propSeg stored from wreg
  8438  004300  0100               	movlb	0	; () banked
  8439  004302  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
  8440                           
  8441                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
  8442                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
  8443                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
  8444  004304  0E80               	movlw	128
  8445  004306  EC3B  F027         	call	_CANOperationMode
  8446                           
  8447                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
  8448  00430A  0E00               	movlw	0
  8449  00430C  6E70               	movwf	3952,c	;volatile
  8450                           
  8451                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
  8452  00430E  0E00               	movlw	0
  8453  004310  6E71               	movwf	3953,c	;volatile
  8454                           
  8455                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
  8456  004312  0E00               	movlw	0
  8457  004314  6E72               	movwf	3954,c	;volatile
  8458                           
  8459                           ;inc\CANlib.h: 229: SJW= SJW << 6;
  8460  004316  0100               	movlb	0	; () banked
  8461  004318  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
  8462  00431A  42E8               	rrncf	wreg,f,c
  8463  00431C  0BC0               	andlw	192
  8464  00431E  0100               	movlb	0	; () banked
  8465  004320  6F87               	movwf	CANInitialize@SJW& (0+255),b
  8466                           
  8467                           ; BSR set to: 0
  8468                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
  8469  004322  0100               	movlb	0	; () banked
  8470  004324  5187               	movf	CANInitialize@SJW& (0+255),w,b
  8471  004326  1270               	iorwf	3952,f,c	;volatile
  8472                           
  8473                           ; BSR set to: 0
  8474                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
  8475  004328  0100               	movlb	0	; () banked
  8476  00432A  5188               	movf	CANInitialize@BRP& (0+255),w,b
  8477  00432C  1270               	iorwf	3952,f,c	;volatile
  8478                           
  8479                           ; BSR set to: 0
  8480                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
  8481  00432E  0100               	movlb	0	; () banked
  8482  004330  518E               	movf	CANInitialize@propSeg& (0+255),w,b
  8483  004332  1271               	iorwf	3953,f,c	;volatile
  8484                           
  8485                           ; BSR set to: 0
  8486                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
  8487  004334  0100               	movlb	0	; () banked
  8488  004336  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  8489  004338  42E8               	rrncf	wreg,f,c
  8490  00433A  0BF8               	andlw	248
  8491  00433C  0100               	movlb	0	; () banked
  8492  00433E  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
  8493                           
  8494                           ; BSR set to: 0
  8495                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
  8496  004340  0100               	movlb	0	; () banked
  8497  004342  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  8498  004344  1271               	iorwf	3953,f,c	;volatile
  8499                           
  8500                           ; BSR set to: 0
  8501                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  8502  004346  0100               	movlb	0	; () banked
  8503  004348  A589               	btfss	CANInitialize@flags& (0+255),2,b
  8504                           
  8505                           ; BSR set to: 0
  8506                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
  8507  00434A  8C71               	bsf	3953,6,c	;volatile
  8508                           
  8509                           ; BSR set to: 0
  8510                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  8511  00434C  0100               	movlb	0	; () banked
  8512  00434E  B189               	btfsc	CANInitialize@flags& (0+255),0,b
  8513                           
  8514                           ; BSR set to: 0
  8515                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
  8516  004350  8E71               	bsf	3953,7,c	;volatile
  8517                           
  8518                           ; BSR set to: 0
  8519                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
  8520                           
  8521                           ; BSR set to: 0
  8522  004352  0100               	movlb	0	; () banked
  8523  004354  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  8524  004356  1272               	iorwf	3954,f,c	;volatile
  8525                           
  8526                           ; BSR set to: 0
  8527                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  8528  004358  0100               	movlb	0	; () banked
  8529  00435A  B389               	btfsc	CANInitialize@flags& (0+255),1,b
  8530                           
  8531                           ; BSR set to: 0
  8532                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
  8533  00435C  8C72               	bsf	3954,6,c	;volatile
  8534                           
  8535                           ; BSR set to: 0
  8536                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  8537                           
  8538                           ; BSR set to: 0
  8539  00435E  0100               	movlb	0	; () banked
  8540  004360  5189               	movf	CANInitialize@flags& (0+255),w,b
  8541  004362  0B60               	andlw	96
  8542  004364  6E60               	movwf	3936,c	;volatile
  8543                           
  8544                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  8545  004366  0100               	movlb	0	; () banked
  8546  004368  5189               	movf	CANInitialize@flags& (0+255),w,b
  8547  00436A  0B10               	andlw	16
  8548  00436C  0AFF               	xorlw	255
  8549  00436E  B4D8               	btfsc	status,2,c
  8550                           
  8551                           ; BSR set to: 0
  8552                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
  8553  004370  8460               	bsf	3936,2,c	;volatile
  8554                           
  8555                           ; BSR set to: 0
  8556                           ;inc\CANlib.h: 254: RXB1CON = RXB0CON;
  8557  004372  CF60 FF50          	movff	3936,3920	;volatile
  8558                           
  8559                           ; BSR set to: 0
  8560                           ;inc\CANlib.h: 258: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  8561  004376  0E00               	movlw	0
  8562  004378  0100               	movlb	0	; () banked
  8563  00437A  6F77               	movwf	CANSetMask@mask& (0+255),b
  8564  00437C  0E00               	movlw	0
  8565  00437E  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
  8566  004380  0E00               	movlw	0
  8567  004382  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
  8568  004384  0E00               	movlw	0
  8569  004386  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
  8570  004388  0EF7               	movlw	247
  8571  00438A  0100               	movlb	0	; () banked
  8572  00438C  6F7B               	movwf	CANSetMask@type& (0+255),b
  8573  00438E  0E01               	movlw	1
  8574  004390  ECD2  F01A         	call	_CANSetMask
  8575                           
  8576                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  8577  004394  0E00               	movlw	0
  8578  004396  0100               	movlb	0	; () banked
  8579  004398  6F77               	movwf	CANSetMask@mask& (0+255),b
  8580  00439A  0E00               	movlw	0
  8581  00439C  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
  8582  00439E  0E00               	movlw	0
  8583  0043A0  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
  8584  0043A2  0E00               	movlw	0
  8585  0043A4  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
  8586  0043A6  0EF7               	movlw	247
  8587  0043A8  0100               	movlb	0	; () banked
  8588  0043AA  6F7B               	movwf	CANSetMask@type& (0+255),b
  8589  0043AC  0E02               	movlw	2
  8590  0043AE  ECD2  F01A         	call	_CANSetMask
  8591                           
  8592                           ;inc\CANlib.h: 262: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  8593  0043B2  D00F               	goto	l4924
  8594  0043B4                     l4918:
  8595                           
  8596                           ;inc\CANlib.h: 265: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  8597  0043B4  0EF7               	movlw	247
  8598  0043B6  0100               	movlb	0	; () banked
  8599  0043B8  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
  8600  0043BA  D007               	goto	l4920
  8601  0043BC                     l352:
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;inc\CANlib.h: 270: FilterConfig1 = CAN_CONFIG_STD_MSG;
  8605  0043BC  0100               	movlb	0	; () banked
  8606  0043BE  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
  8607                           
  8608                           ;inc\CANlib.h: 271: FilterConfig2 = CAN_CONFIG_STD_MSG;
  8609  0043C0  0100               	movlb	0	; () banked
  8610  0043C2  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
  8611                           
  8612                           ;inc\CANlib.h: 272: break;
  8613  0043C4  D028               	goto	l4926
  8614  0043C6                     l353:
  8615                           
  8616                           ; BSR set to: 0
  8617                           ;inc\CANlib.h: 274: FilterConfig1 = CAN_CONFIG_STD_MSG;
  8618  0043C6  0100               	movlb	0	; () banked
  8619  0043C8  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
  8620  0043CA                     l4920:
  8621                           
  8622                           ; BSR set to: 0
  8623                           ;inc\CANlib.h: 275: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  8624  0043CA  0EF7               	movlw	247
  8625  0043CC  0100               	movlb	0	; () banked
  8626  0043CE  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
  8627                           
  8628                           ; BSR set to: 0
  8629                           ;inc\CANlib.h: 277: }
  8630                           
  8631                           ;inc\CANlib.h: 276: break;
  8632  0043D0  D022               	goto	l4926
  8633  0043D2                     l4924:
  8634  0043D2  0E9F               	movlw	159
  8635  0043D4  0100               	movlb	0	; () banked
  8636  0043D6  6F8A               	movwf	??_CANInitialize& (0+255),b
  8637  0043D8  0EFF               	movlw	255
  8638  0043DA  0100               	movlb	0	; () banked
  8639  0043DC  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
  8640  0043DE  0100               	movlb	0	; () banked
  8641  0043E0  5189               	movf	CANInitialize@flags& (0+255),w,b
  8642  0043E2  0B60               	andlw	96
  8643  0043E4  0100               	movlb	0	; () banked
  8644  0043E6  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
  8645  0043E8  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
  8646  0043EA  0100               	movlb	0	; () banked
  8647  0043EC  518A               	movf	??_CANInitialize& (0+255),w,b
  8648  0043EE  0100               	movlb	0	; () banked
  8649  0043F0  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  8650  0043F2  0100               	movlb	0	; () banked
  8651  0043F4  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
  8652  0043F6  0100               	movlb	0	; () banked
  8653  0043F8  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  8654                           
  8655                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8656                           ; Switch size 1, requested type "space"
  8657                           ; Number of cases is 1, Range of values is 0 to 0
  8658                           ; switch strategies available:
  8659                           ; Name         Instructions Cycles
  8660                           ; simple_byte            4     3 (average)
  8661                           ;	Chosen strategy is simple_byte
  8662  0043FA  0100               	movlb	0	; () banked
  8663  0043FC  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
  8664  0043FE  0A00               	xorlw	0	; case 0
  8665  004400  A4D8               	btfss	status,2,c
  8666  004402  D7E1               	goto	l353
  8667                           
  8668                           ; BSR set to: 0
  8669                           ; Switch size 1, requested type "space"
  8670                           ; Number of cases is 2, Range of values is 191 to 223
  8671                           ; switch strategies available:
  8672                           ; Name         Instructions Cycles
  8673                           ; simple_byte            7     4 (average)
  8674                           ;	Chosen strategy is simple_byte
  8675  004404  0100               	movlb	0	; () banked
  8676  004406  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
  8677  004408  0ABF               	xorlw	191	; case 191
  8678  00440A  B4D8               	btfsc	status,2,c
  8679  00440C  D7D7               	goto	l352
  8680  00440E  0A60               	xorlw	96	; case 223
  8681  004410  B4D8               	btfsc	status,2,c
  8682  004412  D7D0               	goto	l4918
  8683  004414  D7D8               	goto	l353
  8684  004416                     l4926:
  8685                           
  8686                           ; BSR set to: 0
  8687                           ;inc\CANlib.h: 279: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  8688  004416  0E00               	movlw	0
  8689  004418  0100               	movlb	0	; () banked
  8690  00441A  6F77               	movwf	CANSetFilter@filter& (0+255),b
  8691  00441C  0E00               	movlw	0
  8692  00441E  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8693  004420  0E00               	movlw	0
  8694  004422  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8695  004424  0E00               	movlw	0
  8696  004426  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8697  004428  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  8698  00442C  0E00               	movlw	0
  8699  00442E  EC97  F006         	call	_CANSetFilter
  8700                           
  8701                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  8702  004432  0E00               	movlw	0
  8703  004434  0100               	movlb	0	; () banked
  8704  004436  6F77               	movwf	CANSetFilter@filter& (0+255),b
  8705  004438  0E00               	movlw	0
  8706  00443A  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8707  00443C  0E00               	movlw	0
  8708  00443E  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8709  004440  0E00               	movlw	0
  8710  004442  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8711  004444  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  8712  004448  0E01               	movlw	1
  8713  00444A  EC97  F006         	call	_CANSetFilter
  8714                           
  8715                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  8716  00444E  0E00               	movlw	0
  8717  004450  0100               	movlb	0	; () banked
  8718  004452  6F77               	movwf	CANSetFilter@filter& (0+255),b
  8719  004454  0E00               	movlw	0
  8720  004456  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8721  004458  0E00               	movlw	0
  8722  00445A  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8723  00445C  0E00               	movlw	0
  8724  00445E  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8725  004460  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  8726  004464  0E02               	movlw	2
  8727  004466  EC97  F006         	call	_CANSetFilter
  8728                           
  8729                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  8730  00446A  0E00               	movlw	0
  8731  00446C  0100               	movlb	0	; () banked
  8732  00446E  6F77               	movwf	CANSetFilter@filter& (0+255),b
  8733  004470  0E00               	movlw	0
  8734  004472  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8735  004474  0E00               	movlw	0
  8736  004476  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8737  004478  0E00               	movlw	0
  8738  00447A  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8739  00447C  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  8740  004480  0E03               	movlw	3
  8741  004482  EC97  F006         	call	_CANSetFilter
  8742                           
  8743                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  8744  004486  0E00               	movlw	0
  8745  004488  0100               	movlb	0	; () banked
  8746  00448A  6F77               	movwf	CANSetFilter@filter& (0+255),b
  8747  00448C  0E00               	movlw	0
  8748  00448E  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8749  004490  0E00               	movlw	0
  8750  004492  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8751  004494  0E00               	movlw	0
  8752  004496  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8753  004498  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  8754  00449C  0E04               	movlw	4
  8755  00449E  EC97  F006         	call	_CANSetFilter
  8756                           
  8757                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  8758  0044A2  0E00               	movlw	0
  8759  0044A4  0100               	movlb	0	; () banked
  8760  0044A6  6F77               	movwf	CANSetFilter@filter& (0+255),b
  8761  0044A8  0E00               	movlw	0
  8762  0044AA  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  8763  0044AC  0E00               	movlw	0
  8764  0044AE  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  8765  0044B0  0E00               	movlw	0
  8766  0044B2  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  8767  0044B4  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  8768  0044B8  0E05               	movlw	5
  8769  0044BA  EC97  F006         	call	_CANSetFilter
  8770                           
  8771                           ;inc\CANlib.h: 286: CANOperationMode(CAN_OP_MODE_NORMAL);
  8772  0044BE  0E00               	movlw	0
  8773  0044C0  EC3B  F027         	call	_CANOperationMode
  8774  0044C4  0012               	return		;funcret
  8775  0044C6                     __end_of_CANInitialize:
  8776                           	opt stack 0
  8777                           tblptru	equ	0xFF8
  8778                           tblptrh	equ	0xFF7
  8779                           tblptrl	equ	0xFF6
  8780                           tablat	equ	0xFF5
  8781                           prodh	equ	0xFF4
  8782                           prodl	equ	0xFF3
  8783                           intcon	equ	0xFF2
  8784                           intcon2	equ	0xFF1
  8785                           postinc0	equ	0xFEE
  8786                           wreg	equ	0xFE8
  8787                           indf2	equ	0xFDF
  8788                           postinc2	equ	0xFDE
  8789                           postdec2	equ	0xFDD
  8790                           fsr2h	equ	0xFDA
  8791                           fsr2l	equ	0xFD9
  8792                           status	equ	0xFD8
  8793                           
  8794 ;; *************** function _CANSetMask *****************
  8795 ;; Defined at:
  8796 ;;		line 639 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8797 ;; Parameters:    Size  Location     Type
  8798 ;;  numBuffer       1    wreg     enum E16347
  8799 ;;  mask            4   23[BANK0 ] unsigned long 
  8800 ;;  type            1   27[BANK0 ] enum E16313
  8801 ;; Auto vars:     Size  Location     Type
  8802 ;;  numBuffer       1   32[BANK0 ] enum E16347
  8803 ;;  tamp            4   33[BANK0 ] unsigned long 
  8804 ;; Return value:  Size  Location     Type
  8805 ;;		None               void
  8806 ;; Registers used:
  8807 ;;		wreg, status,2, status,0
  8808 ;; Tracked objects:
  8809 ;;		On entry : 0/0
  8810 ;;		On exit  : 0/0
  8811 ;;		Unchanged: 0/0
  8812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8813 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8814 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8815 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8816 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8817 ;;Total ram usage:       14 bytes
  8818 ;; Hardware stack levels used:    1
  8819 ;; Hardware stack levels required when called:    4
  8820 ;; This function calls:
  8821 ;;		Nothing
  8822 ;; This function is called by:
  8823 ;;		_CANInitialize
  8824 ;; This function uses a non-reentrant model
  8825 ;;
  8826                           
  8827                           	psect	text22
  8828  0035A4                     __ptext22:
  8829                           	opt stack 0
  8830  0035A4                     _CANSetMask:
  8831                           	opt stack 24
  8832                           
  8833                           ;incstack = 0
  8834                           ;CANSetMask@numBuffer stored from wreg
  8835  0035A4  0100               	movlb	0	; () banked
  8836  0035A6  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
  8837                           
  8838                           ;inc\CANlib.h: 642: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  8839  0035A8  0100               	movlb	0	; () banked
  8840  0035AA  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
  8841  0035AC  A4D8               	btfss	status,2,c
  8842  0035AE  D056               	goto	l4336
  8843                           
  8844                           ; BSR set to: 0
  8845  0035B0  0100               	movlb	0	; () banked
  8846  0035B2  297B               	incf	CANSetMask@type& (0+255),w,b
  8847  0035B4  A4D8               	btfss	status,2,c
  8848  0035B6  D052               	goto	l4336
  8849                           
  8850                           ; BSR set to: 0
  8851                           ;inc\CANlib.h: 643: {
  8852                           ;inc\CANlib.h: 644: tamp = (mask >> 3);
  8853  0035B8  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
  8854  0035BC  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
  8855  0035C0  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
  8856  0035C4  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
  8857  0035C8  0E04               	movlw	4
  8858  0035CA  D006               	goto	u4890
  8859  0035CC                     u4895:
  8860  0035CC  0100               	movlb	0	; () banked
  8861  0035CE  90D8               	bcf	status,0,c
  8862  0035D0  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  8863  0035D2  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  8864  0035D4  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  8865  0035D6  337C               	rrcf	??_CANSetMask& (0+255),f,b
  8866  0035D8                     u4890:
  8867  0035D8  2EE8               	decfsz	wreg,f,c
  8868  0035DA  D7F8               	goto	u4895
  8869  0035DC  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  8870  0035E0  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8871  0035E4  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8872  0035E8  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8873                           
  8874                           ; BSR set to: 0
  8875                           ;inc\CANlib.h: 645: tamp = tamp & 0x000000FF;
  8876  0035EC  0100               	movlb	0	; () banked
  8877  0035EE  5181               	movf	CANSetMask@tamp& (0+255),w,b
  8878  0035F0  0100               	movlb	0	; () banked
  8879  0035F2  6F81               	movwf	CANSetMask@tamp& (0+255),b
  8880  0035F4  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8881  0035F6  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8882  0035F8  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8883                           
  8884                           ; BSR set to: 0
  8885                           ;inc\CANlib.h: 646: RXM0SIDH = (unsigned char) tamp;
  8886  0035FA  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
  8887                           
  8888                           ; BSR set to: 0
  8889                           ;inc\CANlib.h: 648: tamp = mask & 0x00000007;
  8890  0035FE  0E07               	movlw	7
  8891  003600  0100               	movlb	0	; () banked
  8892  003602  1577               	andwf	CANSetMask@mask& (0+255),w,b
  8893  003604  0100               	movlb	0	; () banked
  8894  003606  6F81               	movwf	CANSetMask@tamp& (0+255),b
  8895  003608  0E00               	movlw	0
  8896  00360A  0100               	movlb	0	; () banked
  8897  00360C  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  8898  00360E  0100               	movlb	0	; () banked
  8899  003610  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
  8900  003612  0E00               	movlw	0
  8901  003614  0100               	movlb	0	; () banked
  8902  003616  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  8903  003618  0100               	movlb	0	; () banked
  8904  00361A  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
  8905  00361C  0E00               	movlw	0
  8906  00361E  0100               	movlb	0	; () banked
  8907  003620  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  8908  003622  0100               	movlb	0	; () banked
  8909  003624  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
  8910                           
  8911                           ; BSR set to: 0
  8912                           ;inc\CANlib.h: 649: tamp = tamp << 5;
  8913  003626  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
  8914  00362A  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  8915  00362E  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  8916  003632  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  8917  003636  0E05               	movlw	5
  8918  003638                     u4905:
  8919  003638  90D8               	bcf	status,0,c
  8920  00363A  0100               	movlb	0	; () banked
  8921  00363C  377C               	rlcf	??_CANSetMask& (0+255),f,b
  8922  00363E  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  8923  003640  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  8924  003642  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  8925  003644  2EE8               	decfsz	wreg,f,c
  8926  003646  D7F8               	goto	u4905
  8927  003648  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  8928  00364C  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8929  003650  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8930  003654  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8931                           
  8932                           ; BSR set to: 0
  8933                           ;inc\CANlib.h: 650: RXM0SIDL = (unsigned char) tamp;
  8934  003658  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
  8935  00365C                     l4336:
  8936                           
  8937                           ; BSR set to: 0
  8938                           ;inc\CANlib.h: 651: }
  8939                           ;inc\CANlib.h: 653: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  8940  00365C  0E02               	movlw	2
  8941  00365E  0100               	movlb	0	; () banked
  8942  003660  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  8943  003662  A4D8               	btfss	status,2,c
  8944  003664  D056               	goto	l4352
  8945                           
  8946                           ; BSR set to: 0
  8947  003666  0100               	movlb	0	; () banked
  8948  003668  297B               	incf	CANSetMask@type& (0+255),w,b
  8949  00366A  A4D8               	btfss	status,2,c
  8950  00366C  D052               	goto	l4352
  8951                           
  8952                           ; BSR set to: 0
  8953                           ;inc\CANlib.h: 654: {
  8954                           ;inc\CANlib.h: 655: tamp = (mask >> 3);
  8955  00366E  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
  8956  003672  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
  8957  003676  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
  8958  00367A  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
  8959  00367E  0E04               	movlw	4
  8960  003680  D006               	goto	u4930
  8961  003682                     u4935:
  8962  003682  0100               	movlb	0	; () banked
  8963  003684  90D8               	bcf	status,0,c
  8964  003686  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  8965  003688  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  8966  00368A  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  8967  00368C  337C               	rrcf	??_CANSetMask& (0+255),f,b
  8968  00368E                     u4930:
  8969  00368E  2EE8               	decfsz	wreg,f,c
  8970  003690  D7F8               	goto	u4935
  8971  003692  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  8972  003696  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  8973  00369A  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  8974  00369E  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;inc\CANlib.h: 656: tamp = tamp & 0x000000FF;
  8978  0036A2  0100               	movlb	0	; () banked
  8979  0036A4  5181               	movf	CANSetMask@tamp& (0+255),w,b
  8980  0036A6  0100               	movlb	0	; () banked
  8981  0036A8  6F81               	movwf	CANSetMask@tamp& (0+255),b
  8982  0036AA  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  8983  0036AC  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  8984  0036AE  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  8985                           
  8986                           ; BSR set to: 0
  8987                           ;inc\CANlib.h: 657: RXM1SIDH = (unsigned char) tamp;
  8988  0036B0  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  8989                           
  8990                           ; BSR set to: 0
  8991                           ;inc\CANlib.h: 659: tamp = mask & 0x00000007;
  8992  0036B4  0E07               	movlw	7
  8993  0036B6  0100               	movlb	0	; () banked
  8994  0036B8  1577               	andwf	CANSetMask@mask& (0+255),w,b
  8995  0036BA  0100               	movlb	0	; () banked
  8996  0036BC  6F81               	movwf	CANSetMask@tamp& (0+255),b
  8997  0036BE  0E00               	movlw	0
  8998  0036C0  0100               	movlb	0	; () banked
  8999  0036C2  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  9000  0036C4  0100               	movlb	0	; () banked
  9001  0036C6  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
  9002  0036C8  0E00               	movlw	0
  9003  0036CA  0100               	movlb	0	; () banked
  9004  0036CC  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  9005  0036CE  0100               	movlb	0	; () banked
  9006  0036D0  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
  9007  0036D2  0E00               	movlw	0
  9008  0036D4  0100               	movlb	0	; () banked
  9009  0036D6  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  9010  0036D8  0100               	movlb	0	; () banked
  9011  0036DA  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
  9012                           
  9013                           ; BSR set to: 0
  9014                           ;inc\CANlib.h: 660: tamp = tamp << 5;
  9015  0036DC  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
  9016  0036E0  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  9017  0036E4  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  9018  0036E8  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  9019  0036EC  0E05               	movlw	5
  9020  0036EE                     u4945:
  9021  0036EE  90D8               	bcf	status,0,c
  9022  0036F0  0100               	movlb	0	; () banked
  9023  0036F2  377C               	rlcf	??_CANSetMask& (0+255),f,b
  9024  0036F4  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  9025  0036F6  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  9026  0036F8  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  9027  0036FA  2EE8               	decfsz	wreg,f,c
  9028  0036FC  D7F8               	goto	u4945
  9029  0036FE  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9030  003702  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9031  003706  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9032  00370A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9033                           
  9034                           ; BSR set to: 0
  9035                           ;inc\CANlib.h: 661: RXM1SIDL = (unsigned char) tamp;
  9036  00370E  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  9037  003712                     l4352:
  9038                           
  9039                           ; BSR set to: 0
  9040                           ;inc\CANlib.h: 662: }
  9041                           ;inc\CANlib.h: 664: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  9042  003712  0100               	movlb	0	; () banked
  9043  003714  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
  9044  003716  A4D8               	btfss	status,2,c
  9045  003718  D087               	goto	l4384
  9046                           
  9047                           ; BSR set to: 0
  9048  00371A  0EF7               	movlw	247
  9049  00371C  0100               	movlb	0	; () banked
  9050  00371E  197B               	xorwf	CANSetMask@type& (0+255),w,b
  9051  003720  A4D8               	btfss	status,2,c
  9052  003722  D082               	goto	l4384
  9053                           
  9054                           ; BSR set to: 0
  9055                           ;inc\CANlib.h: 665: {
  9056                           ;inc\CANlib.h: 666: tamp = mask & 0x000000FF;
  9057  003724  0100               	movlb	0	; () banked
  9058  003726  5177               	movf	CANSetMask@mask& (0+255),w,b
  9059  003728  0100               	movlb	0	; () banked
  9060  00372A  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9061  00372C  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  9062  00372E  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  9063  003730  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  9064                           
  9065                           ; BSR set to: 0
  9066                           ;inc\CANlib.h: 667: RXM0EIDL = (unsigned char) tamp;
  9067  003732  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  9068                           
  9069                           ; BSR set to: 0
  9070                           ;inc\CANlib.h: 669: tamp = mask & 0x0000FF00;
  9071  003736  0E00               	movlw	0
  9072  003738  0100               	movlb	0	; () banked
  9073  00373A  1577               	andwf	CANSetMask@mask& (0+255),w,b
  9074  00373C  0100               	movlb	0	; () banked
  9075  00373E  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9076  003740  0EFF               	movlw	255
  9077  003742  0100               	movlb	0	; () banked
  9078  003744  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  9079  003746  0100               	movlb	0	; () banked
  9080  003748  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
  9081  00374A  0E00               	movlw	0
  9082  00374C  0100               	movlb	0	; () banked
  9083  00374E  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  9084  003750  0100               	movlb	0	; () banked
  9085  003752  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
  9086  003754  0E00               	movlw	0
  9087  003756  0100               	movlb	0	; () banked
  9088  003758  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  9089  00375A  0100               	movlb	0	; () banked
  9090  00375C  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
  9091                           
  9092                           ; BSR set to: 0
  9093                           ;inc\CANlib.h: 670: tamp = tamp >> 8;
  9094  00375E  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
  9095  003762  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  9096  003766  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  9097  00376A  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  9098  00376E  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
  9099  003772  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
  9100  003776  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
  9101  00377A  0100               	movlb	0	; () banked
  9102  00377C  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
  9103  00377E  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9104  003782  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9105  003786  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9106  00378A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9107                           
  9108                           ; BSR set to: 0
  9109                           ;inc\CANlib.h: 671: RXM0EIDH = (unsigned char) tamp;
  9110  00378E  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  9111                           
  9112                           ; BSR set to: 0
  9113                           ;inc\CANlib.h: 673: if (mask & 0x00010000)
  9114  003792  0100               	movlb	0	; () banked
  9115  003794  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  9116  003796  D003               	goto	l426
  9117                           
  9118                           ; BSR set to: 0
  9119                           ;inc\CANlib.h: 674: RXM0SIDLbits.EID16 = 0x01;
  9120  003798  010F               	movlb	15	; () banked
  9121  00379A  8119               	bsf	25,0,b	;volatile
  9122  00379C  D002               	goto	l427
  9123  00379E                     l426:
  9124                           
  9125                           ; BSR set to: 0
  9126                           ;inc\CANlib.h: 675: else
  9127                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x00;
  9128  00379E  010F               	movlb	15	; () banked
  9129  0037A0  9119               	bcf	25,0,b	;volatile
  9130  0037A2                     l427:
  9131                           
  9132                           ; BSR set to: 15
  9133                           ;inc\CANlib.h: 678: if (mask & 0x00020000)
  9134  0037A2  0100               	movlb	0	; () banked
  9135  0037A4  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  9136  0037A6  D003               	goto	l428
  9137                           
  9138                           ; BSR set to: 0
  9139                           ;inc\CANlib.h: 679: RXM0SIDLbits.EID17 = 0x01;
  9140  0037A8  010F               	movlb	15	; () banked
  9141  0037AA  8319               	bsf	25,1,b	;volatile
  9142  0037AC  D002               	goto	l429
  9143  0037AE                     l428:
  9144                           
  9145                           ; BSR set to: 0
  9146                           ;inc\CANlib.h: 680: else
  9147                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x00;
  9148  0037AE  010F               	movlb	15	; () banked
  9149  0037B0  9319               	bcf	25,1,b	;volatile
  9150  0037B2                     l429:
  9151                           
  9152                           ; BSR set to: 15
  9153                           ;inc\CANlib.h: 683: if (mask & 0x00040000)
  9154  0037B2  0100               	movlb	0	; () banked
  9155  0037B4  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  9156  0037B6  D003               	goto	l430
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;inc\CANlib.h: 684: RXM0SIDLbits.SID0 = 0x01;
  9160  0037B8  010F               	movlb	15	; () banked
  9161  0037BA  8B19               	bsf	25,5,b	;volatile
  9162  0037BC  D002               	goto	l431
  9163  0037BE                     l430:
  9164                           
  9165                           ; BSR set to: 0
  9166                           ;inc\CANlib.h: 685: else
  9167                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x00;
  9168  0037BE  010F               	movlb	15	; () banked
  9169  0037C0  9B19               	bcf	25,5,b	;volatile
  9170  0037C2                     l431:
  9171                           
  9172                           ; BSR set to: 15
  9173                           ;inc\CANlib.h: 688: if (mask & 0x00080000)
  9174  0037C2  0100               	movlb	0	; () banked
  9175  0037C4  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  9176  0037C6  D003               	goto	l432
  9177                           
  9178                           ; BSR set to: 0
  9179                           ;inc\CANlib.h: 689: RXM0SIDLbits.SID1 = 0x01;
  9180  0037C8  010F               	movlb	15	; () banked
  9181  0037CA  8D19               	bsf	25,6,b	;volatile
  9182  0037CC  D002               	goto	l433
  9183  0037CE                     l432:
  9184                           
  9185                           ; BSR set to: 0
  9186                           ;inc\CANlib.h: 690: else
  9187                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x00;
  9188  0037CE  010F               	movlb	15	; () banked
  9189  0037D0  9D19               	bcf	25,6,b	;volatile
  9190  0037D2                     l433:
  9191                           
  9192                           ; BSR set to: 15
  9193                           ;inc\CANlib.h: 693: if (mask & 0x00100000)
  9194  0037D2  0100               	movlb	0	; () banked
  9195  0037D4  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  9196  0037D6  D003               	goto	l434
  9197                           
  9198                           ; BSR set to: 0
  9199                           ;inc\CANlib.h: 694: RXM0SIDLbits.SID2 = 0x01 ;
  9200  0037D8  010F               	movlb	15	; () banked
  9201  0037DA  8F19               	bsf	25,7,b	;volatile
  9202  0037DC  D002               	goto	l4378
  9203  0037DE                     l434:
  9204                           
  9205                           ; BSR set to: 0
  9206                           ;inc\CANlib.h: 695: else
  9207                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x00 ;
  9208  0037DE  010F               	movlb	15	; () banked
  9209  0037E0  9F19               	bcf	25,7,b	;volatile
  9210  0037E2                     l4378:
  9211                           
  9212                           ; BSR set to: 15
  9213                           ;inc\CANlib.h: 698: tamp = (mask >> 21);
  9214  0037E2  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
  9215  0037E6  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
  9216  0037EA  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
  9217  0037EE  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
  9218  0037F2  0E16               	movlw	22
  9219  0037F4  D006               	goto	u5020
  9220  0037F6                     u5025:
  9221  0037F6  0100               	movlb	0	; () banked
  9222  0037F8  90D8               	bcf	status,0,c
  9223  0037FA  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  9224  0037FC  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  9225  0037FE  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  9226  003800  337C               	rrcf	??_CANSetMask& (0+255),f,b
  9227  003802                     u5020:
  9228  003802  2EE8               	decfsz	wreg,f,c
  9229  003804  D7F8               	goto	u5025
  9230  003806  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9231  00380A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9232  00380E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9233  003812  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9234                           
  9235                           ; BSR set to: 0
  9236                           ;inc\CANlib.h: 699: tamp = tamp & 0x000000FF;
  9237  003816  0100               	movlb	0	; () banked
  9238  003818  5181               	movf	CANSetMask@tamp& (0+255),w,b
  9239  00381A  0100               	movlb	0	; () banked
  9240  00381C  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9241  00381E  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  9242  003820  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  9243  003822  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  9244                           
  9245                           ; BSR set to: 0
  9246                           ;inc\CANlib.h: 700: RXM0SIDH = (unsigned char) tamp;
  9247  003824  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
  9248  003828                     l4384:
  9249                           
  9250                           ; BSR set to: 0
  9251                           ;inc\CANlib.h: 701: }
  9252                           ;inc\CANlib.h: 703: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  9253  003828  0E02               	movlw	2
  9254  00382A  0100               	movlb	0	; () banked
  9255  00382C  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  9256  00382E  A4D8               	btfss	status,2,c
  9257  003830  0012               	return	
  9258                           
  9259                           ; BSR set to: 0
  9260  003832  0EF7               	movlw	247
  9261  003834  0100               	movlb	0	; () banked
  9262  003836  197B               	xorwf	CANSetMask@type& (0+255),w,b
  9263  003838  A4D8               	btfss	status,2,c
  9264  00383A  0012               	return	
  9265                           
  9266                           ; BSR set to: 0
  9267                           ;inc\CANlib.h: 704: {
  9268                           ;inc\CANlib.h: 705: tamp = mask & 0x000000FF;
  9269  00383C  0100               	movlb	0	; () banked
  9270  00383E  5177               	movf	CANSetMask@mask& (0+255),w,b
  9271  003840  0100               	movlb	0	; () banked
  9272  003842  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9273  003844  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  9274  003846  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  9275  003848  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  9276                           
  9277                           ; BSR set to: 0
  9278                           ;inc\CANlib.h: 706: RXM1EIDL = (unsigned char) tamp;
  9279  00384A  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  9280                           
  9281                           ; BSR set to: 0
  9282                           ;inc\CANlib.h: 708: tamp = mask & 0x0000FF00;
  9283  00384E  0E00               	movlw	0
  9284  003850  0100               	movlb	0	; () banked
  9285  003852  1577               	andwf	CANSetMask@mask& (0+255),w,b
  9286  003854  0100               	movlb	0	; () banked
  9287  003856  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9288  003858  0EFF               	movlw	255
  9289  00385A  0100               	movlb	0	; () banked
  9290  00385C  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  9291  00385E  0100               	movlb	0	; () banked
  9292  003860  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
  9293  003862  0E00               	movlw	0
  9294  003864  0100               	movlb	0	; () banked
  9295  003866  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  9296  003868  0100               	movlb	0	; () banked
  9297  00386A  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
  9298  00386C  0E00               	movlw	0
  9299  00386E  0100               	movlb	0	; () banked
  9300  003870  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  9301  003872  0100               	movlb	0	; () banked
  9302  003874  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
  9303                           
  9304                           ; BSR set to: 0
  9305                           ;inc\CANlib.h: 709: tamp = tamp >> 8;
  9306  003876  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
  9307  00387A  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  9308  00387E  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  9309  003882  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  9310  003886  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
  9311  00388A  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
  9312  00388E  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
  9313  003892  0100               	movlb	0	; () banked
  9314  003894  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
  9315  003896  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9316  00389A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9317  00389E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9318  0038A2  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9319                           
  9320                           ; BSR set to: 0
  9321                           ;inc\CANlib.h: 710: RXM1EIDH = (unsigned char) tamp;
  9322  0038A6  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;inc\CANlib.h: 712: if (mask & 0x00010000)
  9326  0038AA  0100               	movlb	0	; () banked
  9327  0038AC  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  9328  0038AE  D003               	goto	l437
  9329                           
  9330                           ; BSR set to: 0
  9331                           ;inc\CANlib.h: 713: RXM1SIDLbits.EID16 = 0x01;
  9332  0038B0  010F               	movlb	15	; () banked
  9333  0038B2  811D               	bsf	29,0,b	;volatile
  9334  0038B4  D002               	goto	l438
  9335  0038B6                     l437:
  9336                           
  9337                           ; BSR set to: 0
  9338                           ;inc\CANlib.h: 714: else
  9339                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x00;
  9340  0038B6  010F               	movlb	15	; () banked
  9341  0038B8  911D               	bcf	29,0,b	;volatile
  9342  0038BA                     l438:
  9343                           
  9344                           ; BSR set to: 15
  9345                           ;inc\CANlib.h: 717: if (mask & 0x00020000)
  9346  0038BA  0100               	movlb	0	; () banked
  9347  0038BC  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  9348  0038BE  D003               	goto	l439
  9349                           
  9350                           ; BSR set to: 0
  9351                           ;inc\CANlib.h: 718: RXM1SIDLbits.EID17 = 0x01;
  9352  0038C0  010F               	movlb	15	; () banked
  9353  0038C2  831D               	bsf	29,1,b	;volatile
  9354  0038C4  D002               	goto	l440
  9355  0038C6                     l439:
  9356                           
  9357                           ; BSR set to: 0
  9358                           ;inc\CANlib.h: 719: else
  9359                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x00;
  9360  0038C6  010F               	movlb	15	; () banked
  9361  0038C8  931D               	bcf	29,1,b	;volatile
  9362  0038CA                     l440:
  9363                           
  9364                           ; BSR set to: 15
  9365                           ;inc\CANlib.h: 722: if (mask & 0x00040000)
  9366  0038CA  0100               	movlb	0	; () banked
  9367  0038CC  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  9368  0038CE  D003               	goto	l441
  9369                           
  9370                           ; BSR set to: 0
  9371                           ;inc\CANlib.h: 723: RXM1SIDLbits.SID0 = 0x01;
  9372  0038D0  010F               	movlb	15	; () banked
  9373  0038D2  8B1D               	bsf	29,5,b	;volatile
  9374  0038D4  D002               	goto	l442
  9375  0038D6                     l441:
  9376                           
  9377                           ; BSR set to: 0
  9378                           ;inc\CANlib.h: 724: else
  9379                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x00;
  9380  0038D6  010F               	movlb	15	; () banked
  9381  0038D8  9B1D               	bcf	29,5,b	;volatile
  9382  0038DA                     l442:
  9383                           
  9384                           ; BSR set to: 15
  9385                           ;inc\CANlib.h: 727: if (mask & 0x00080000)
  9386  0038DA  0100               	movlb	0	; () banked
  9387  0038DC  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  9388  0038DE  D003               	goto	l443
  9389                           
  9390                           ; BSR set to: 0
  9391                           ;inc\CANlib.h: 728: RXM1SIDLbits.SID1 = 0x01;
  9392  0038E0  010F               	movlb	15	; () banked
  9393  0038E2  8D1D               	bsf	29,6,b	;volatile
  9394  0038E4  D002               	goto	l444
  9395  0038E6                     l443:
  9396                           
  9397                           ; BSR set to: 0
  9398                           ;inc\CANlib.h: 729: else
  9399                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x00;
  9400  0038E6  010F               	movlb	15	; () banked
  9401  0038E8  9D1D               	bcf	29,6,b	;volatile
  9402  0038EA                     l444:
  9403                           
  9404                           ; BSR set to: 15
  9405                           ;inc\CANlib.h: 732: if (mask & 0x00100000)
  9406  0038EA  0100               	movlb	0	; () banked
  9407  0038EC  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  9408  0038EE  D003               	goto	l445
  9409                           
  9410                           ; BSR set to: 0
  9411                           ;inc\CANlib.h: 733: RXM1SIDLbits.SID2 = 0x01 ;
  9412  0038F0  010F               	movlb	15	; () banked
  9413  0038F2  8F1D               	bsf	29,7,b	;volatile
  9414  0038F4  D002               	goto	l4410
  9415  0038F6                     l445:
  9416                           
  9417                           ; BSR set to: 0
  9418                           ;inc\CANlib.h: 734: else
  9419                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x00 ;
  9420  0038F6  010F               	movlb	15	; () banked
  9421  0038F8  9F1D               	bcf	29,7,b	;volatile
  9422  0038FA                     l4410:
  9423                           
  9424                           ; BSR set to: 15
  9425                           ;inc\CANlib.h: 737: tamp = (mask >> 21);
  9426  0038FA  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
  9427  0038FE  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
  9428  003902  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
  9429  003906  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
  9430  00390A  0E16               	movlw	22
  9431  00390C  D006               	goto	u5100
  9432  00390E                     u5105:
  9433  00390E  0100               	movlb	0	; () banked
  9434  003910  90D8               	bcf	status,0,c
  9435  003912  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  9436  003914  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  9437  003916  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  9438  003918  337C               	rrcf	??_CANSetMask& (0+255),f,b
  9439  00391A                     u5100:
  9440  00391A  2EE8               	decfsz	wreg,f,c
  9441  00391C  D7F8               	goto	u5105
  9442  00391E  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9443  003922  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9444  003926  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9445  00392A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9446                           
  9447                           ; BSR set to: 0
  9448                           ;inc\CANlib.h: 738: tamp = tamp & 0x000000FF;
  9449  00392E  0100               	movlb	0	; () banked
  9450  003930  5181               	movf	CANSetMask@tamp& (0+255),w,b
  9451  003932  0100               	movlb	0	; () banked
  9452  003934  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9453  003936  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  9454  003938  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  9455  00393A  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  9456                           
  9457                           ; BSR set to: 0
  9458                           ;inc\CANlib.h: 739: RXM1SIDH = (unsigned char) tamp;
  9459  00393C  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  9460  003940  0012               	return	
  9461  003942                     __end_of_CANSetMask:
  9462                           	opt stack 0
  9463                           tblptru	equ	0xFF8
  9464                           tblptrh	equ	0xFF7
  9465                           tblptrl	equ	0xFF6
  9466                           tablat	equ	0xFF5
  9467                           prodh	equ	0xFF4
  9468                           prodl	equ	0xFF3
  9469                           intcon	equ	0xFF2
  9470                           intcon2	equ	0xFF1
  9471                           postinc0	equ	0xFEE
  9472                           wreg	equ	0xFE8
  9473                           indf2	equ	0xFDF
  9474                           postinc2	equ	0xFDE
  9475                           postdec2	equ	0xFDD
  9476                           fsr2h	equ	0xFDA
  9477                           fsr2l	equ	0xFD9
  9478                           status	equ	0xFD8
  9479                           
  9480 ;; *************** function _CANSetFilter *****************
  9481 ;; Defined at:
  9482 ;;		line 747 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  9483 ;; Parameters:    Size  Location     Type
  9484 ;;  numBuffer       1    wreg     enum E16350
  9485 ;;  filter          4   23[BANK0 ] unsigned long 
  9486 ;;  type            1   27[BANK0 ] enum E16313
  9487 ;; Auto vars:     Size  Location     Type
  9488 ;;  numBuffer       1   32[BANK0 ] enum E16350
  9489 ;;  tamp            4   33[BANK0 ] unsigned long 
  9490 ;; Return value:  Size  Location     Type
  9491 ;;		None               void
  9492 ;; Registers used:
  9493 ;;		wreg, status,2, status,0
  9494 ;; Tracked objects:
  9495 ;;		On entry : 0/0
  9496 ;;		On exit  : 0/0
  9497 ;;		Unchanged: 0/0
  9498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9499 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9500 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9501 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9502 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9503 ;;Total ram usage:       14 bytes
  9504 ;; Hardware stack levels used:    1
  9505 ;; Hardware stack levels required when called:    4
  9506 ;; This function calls:
  9507 ;;		Nothing
  9508 ;; This function is called by:
  9509 ;;		_CANInitialize
  9510 ;; This function uses a non-reentrant model
  9511 ;;
  9512                           
  9513                           	psect	text23
  9514  000D2E                     __ptext23:
  9515                           	opt stack 0
  9516  000D2E                     _CANSetFilter:
  9517                           	opt stack 24
  9518                           
  9519                           ; BSR set to: 0
  9520                           ;incstack = 0
  9521                           ;CANSetFilter@numBuffer stored from wreg
  9522  000D2E  0100               	movlb	0	; () banked
  9523  000D30  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
  9524                           
  9525                           ;inc\CANlib.h: 749: unsigned long tamp;
  9526                           ;inc\CANlib.h: 751: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  9527  000D32  0100               	movlb	0	; () banked
  9528  000D34  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
  9529  000D36  0100               	movlb	0	; () banked
  9530  000D38  A4D8               	btfss	status,2,c
  9531  000D3A  D058               	goto	l4434
  9532                           
  9533                           ; BSR set to: 0
  9534  000D3C  0100               	movlb	0	; () banked
  9535  000D3E  297B               	incf	CANSetFilter@type& (0+255),w,b
  9536  000D40  A4D8               	btfss	status,2,c
  9537  000D42  D054               	goto	l4434
  9538                           
  9539                           ; BSR set to: 0
  9540                           ;inc\CANlib.h: 752: {
  9541                           ;inc\CANlib.h: 753: RXF0SIDLbits.EXIDEN = 0x00;
  9542  000D44  010F               	movlb	15	; () banked
  9543  000D46  9701               	bcf	1,3,b	;volatile
  9544                           
  9545                           ; BSR set to: 15
  9546                           ;inc\CANlib.h: 755: tamp = (filter >> 3);
  9547  000D48  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
  9548  000D4C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9549  000D50  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9550  000D54  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9551  000D58  0E04               	movlw	4
  9552  000D5A  D006               	goto	u5130
  9553  000D5C                     u5135:
  9554  000D5C  0100               	movlb	0	; () banked
  9555  000D5E  90D8               	bcf	status,0,c
  9556  000D60  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9557  000D62  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9558  000D64  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9559  000D66  337C               	rrcf	??_CANSetFilter& (0+255),f,b
  9560  000D68                     u5130:
  9561  000D68  2EE8               	decfsz	wreg,f,c
  9562  000D6A  D7F8               	goto	u5135
  9563  000D6C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9564  000D70  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9565  000D74  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9566  000D78  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9567                           
  9568                           ; BSR set to: 0
  9569                           ;inc\CANlib.h: 756: tamp = tamp & 0x000000FF;
  9570  000D7C  0100               	movlb	0	; () banked
  9571  000D7E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
  9572  000D80  0100               	movlb	0	; () banked
  9573  000D82  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9574  000D84  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9575  000D86  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9576  000D88  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9577                           
  9578                           ; BSR set to: 0
  9579                           ;inc\CANlib.h: 757: RXF0SIDH = (unsigned char) tamp;
  9580  000D8A  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
  9581                           
  9582                           ; BSR set to: 0
  9583                           ;inc\CANlib.h: 759: tamp = filter & 0x00000007;
  9584  000D8E  0E07               	movlw	7
  9585  000D90  0100               	movlb	0	; () banked
  9586  000D92  1577               	andwf	CANSetFilter@filter& (0+255),w,b
  9587  000D94  0100               	movlb	0	; () banked
  9588  000D96  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9589  000D98  0E00               	movlw	0
  9590  000D9A  0100               	movlb	0	; () banked
  9591  000D9C  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9592  000D9E  0100               	movlb	0	; () banked
  9593  000DA0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9594  000DA2  0E00               	movlw	0
  9595  000DA4  0100               	movlb	0	; () banked
  9596  000DA6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9597  000DA8  0100               	movlb	0	; () banked
  9598  000DAA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9599  000DAC  0E00               	movlw	0
  9600  000DAE  0100               	movlb	0	; () banked
  9601  000DB0  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9602  000DB2  0100               	movlb	0	; () banked
  9603  000DB4  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9604                           
  9605                           ; BSR set to: 0
  9606                           ;inc\CANlib.h: 760: tamp = tamp << 5;
  9607  000DB6  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
  9608  000DBA  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9609  000DBE  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9610  000DC2  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9611  000DC6  0E05               	movlw	5
  9612  000DC8                     u5145:
  9613  000DC8  90D8               	bcf	status,0,c
  9614  000DCA  0100               	movlb	0	; () banked
  9615  000DCC  377C               	rlcf	??_CANSetFilter& (0+255),f,b
  9616  000DCE  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9617  000DD0  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9618  000DD2  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9619  000DD4  2EE8               	decfsz	wreg,f,c
  9620  000DD6  D7F8               	goto	u5145
  9621  000DD8  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9622  000DDC  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9623  000DE0  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9624  000DE4  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9625                           
  9626                           ; BSR set to: 0
  9627                           ;inc\CANlib.h: 761: RXF0SIDL = (unsigned char) tamp;
  9628  000DE8  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
  9629  000DEC                     l4434:
  9630                           
  9631                           ; BSR set to: 0
  9632                           ;inc\CANlib.h: 762: }
  9633                           ;inc\CANlib.h: 764: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
  9634  000DEC  0100               	movlb	0	; () banked
  9635  000DEE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
  9636  000DF0  A4D8               	btfss	status,2,c
  9637  000DF2  D058               	goto	l4452
  9638                           
  9639                           ; BSR set to: 0
  9640  000DF4  0100               	movlb	0	; () banked
  9641  000DF6  297B               	incf	CANSetFilter@type& (0+255),w,b
  9642  000DF8  A4D8               	btfss	status,2,c
  9643  000DFA  D054               	goto	l4452
  9644                           
  9645                           ; BSR set to: 0
  9646                           ;inc\CANlib.h: 765: {
  9647                           ;inc\CANlib.h: 766: RXF1SIDLbits.EXIDEN = 0x00;
  9648  000DFC  010F               	movlb	15	; () banked
  9649  000DFE  9705               	bcf	5,3,b	;volatile
  9650                           
  9651                           ; BSR set to: 15
  9652                           ;inc\CANlib.h: 768: tamp = (filter >> 3);
  9653  000E00  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
  9654  000E04  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9655  000E08  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9656  000E0C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9657  000E10  0E04               	movlw	4
  9658  000E12  D006               	goto	u5170
  9659  000E14                     u5175:
  9660  000E14  0100               	movlb	0	; () banked
  9661  000E16  90D8               	bcf	status,0,c
  9662  000E18  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9663  000E1A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9664  000E1C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9665  000E1E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
  9666  000E20                     u5170:
  9667  000E20  2EE8               	decfsz	wreg,f,c
  9668  000E22  D7F8               	goto	u5175
  9669  000E24  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9670  000E28  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9671  000E2C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9672  000E30  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9673                           
  9674                           ; BSR set to: 0
  9675                           ;inc\CANlib.h: 769: tamp = tamp & 0x000000FF;
  9676  000E34  0100               	movlb	0	; () banked
  9677  000E36  5181               	movf	CANSetFilter@tamp& (0+255),w,b
  9678  000E38  0100               	movlb	0	; () banked
  9679  000E3A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9680  000E3C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9681  000E3E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9682  000E40  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9683                           
  9684                           ; BSR set to: 0
  9685                           ;inc\CANlib.h: 770: RXF1SIDH = (unsigned char) tamp;
  9686  000E42  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
  9687                           
  9688                           ; BSR set to: 0
  9689                           ;inc\CANlib.h: 772: tamp = filter & 0x00000007;
  9690  000E46  0E07               	movlw	7
  9691  000E48  0100               	movlb	0	; () banked
  9692  000E4A  1577               	andwf	CANSetFilter@filter& (0+255),w,b
  9693  000E4C  0100               	movlb	0	; () banked
  9694  000E4E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9695  000E50  0E00               	movlw	0
  9696  000E52  0100               	movlb	0	; () banked
  9697  000E54  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9698  000E56  0100               	movlb	0	; () banked
  9699  000E58  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9700  000E5A  0E00               	movlw	0
  9701  000E5C  0100               	movlb	0	; () banked
  9702  000E5E  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9703  000E60  0100               	movlb	0	; () banked
  9704  000E62  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9705  000E64  0E00               	movlw	0
  9706  000E66  0100               	movlb	0	; () banked
  9707  000E68  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9708  000E6A  0100               	movlb	0	; () banked
  9709  000E6C  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9710                           
  9711                           ; BSR set to: 0
  9712                           ;inc\CANlib.h: 773: tamp = tamp << 5;
  9713  000E6E  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
  9714  000E72  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9715  000E76  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9716  000E7A  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9717  000E7E  0E05               	movlw	5
  9718  000E80                     u5185:
  9719  000E80  90D8               	bcf	status,0,c
  9720  000E82  0100               	movlb	0	; () banked
  9721  000E84  377C               	rlcf	??_CANSetFilter& (0+255),f,b
  9722  000E86  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9723  000E88  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9724  000E8A  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9725  000E8C  2EE8               	decfsz	wreg,f,c
  9726  000E8E  D7F8               	goto	u5185
  9727  000E90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9728  000E94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9729  000E98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9730  000E9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9731                           
  9732                           ; BSR set to: 0
  9733                           ;inc\CANlib.h: 774: RXF1SIDL = (unsigned char) tamp;
  9734  000EA0  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
  9735  000EA4                     l4452:
  9736                           
  9737                           ; BSR set to: 0
  9738                           ;inc\CANlib.h: 775: }
  9739                           ;inc\CANlib.h: 777: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
  9740  000EA4  0E02               	movlw	2
  9741  000EA6  0100               	movlb	0	; () banked
  9742  000EA8  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9743  000EAA  A4D8               	btfss	status,2,c
  9744  000EAC  D058               	goto	l4470
  9745                           
  9746                           ; BSR set to: 0
  9747  000EAE  0100               	movlb	0	; () banked
  9748  000EB0  297B               	incf	CANSetFilter@type& (0+255),w,b
  9749  000EB2  A4D8               	btfss	status,2,c
  9750  000EB4  D054               	goto	l4470
  9751                           
  9752                           ; BSR set to: 0
  9753                           ;inc\CANlib.h: 778: {
  9754                           ;inc\CANlib.h: 779: RXF2SIDLbits.EXIDEN = 0x00;
  9755  000EB6  010F               	movlb	15	; () banked
  9756  000EB8  9709               	bcf	9,3,b	;volatile
  9757                           
  9758                           ; BSR set to: 15
  9759                           ;inc\CANlib.h: 781: tamp = (filter >> 3);
  9760  000EBA  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
  9761  000EBE  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9762  000EC2  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9763  000EC6  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9764  000ECA  0E04               	movlw	4
  9765  000ECC  D006               	goto	u5210
  9766  000ECE                     u5215:
  9767  000ECE  0100               	movlb	0	; () banked
  9768  000ED0  90D8               	bcf	status,0,c
  9769  000ED2  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9770  000ED4  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9771  000ED6  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9772  000ED8  337C               	rrcf	??_CANSetFilter& (0+255),f,b
  9773  000EDA                     u5210:
  9774  000EDA  2EE8               	decfsz	wreg,f,c
  9775  000EDC  D7F8               	goto	u5215
  9776  000EDE  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9777  000EE2  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9778  000EE6  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9779  000EEA  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9780                           
  9781                           ; BSR set to: 0
  9782                           ;inc\CANlib.h: 782: tamp = tamp & 0x000000FF;
  9783  000EEE  0100               	movlb	0	; () banked
  9784  000EF0  5181               	movf	CANSetFilter@tamp& (0+255),w,b
  9785  000EF2  0100               	movlb	0	; () banked
  9786  000EF4  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9787  000EF6  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9788  000EF8  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9789  000EFA  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9790                           
  9791                           ; BSR set to: 0
  9792                           ;inc\CANlib.h: 783: RXF2SIDH = (unsigned char) tamp;
  9793  000EFC  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
  9794                           
  9795                           ; BSR set to: 0
  9796                           ;inc\CANlib.h: 785: tamp = filter & 0x00000007;
  9797  000F00  0E07               	movlw	7
  9798  000F02  0100               	movlb	0	; () banked
  9799  000F04  1577               	andwf	CANSetFilter@filter& (0+255),w,b
  9800  000F06  0100               	movlb	0	; () banked
  9801  000F08  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9802  000F0A  0E00               	movlw	0
  9803  000F0C  0100               	movlb	0	; () banked
  9804  000F0E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9805  000F10  0100               	movlb	0	; () banked
  9806  000F12  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9807  000F14  0E00               	movlw	0
  9808  000F16  0100               	movlb	0	; () banked
  9809  000F18  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9810  000F1A  0100               	movlb	0	; () banked
  9811  000F1C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9812  000F1E  0E00               	movlw	0
  9813  000F20  0100               	movlb	0	; () banked
  9814  000F22  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9815  000F24  0100               	movlb	0	; () banked
  9816  000F26  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9817                           
  9818                           ; BSR set to: 0
  9819                           ;inc\CANlib.h: 786: tamp = tamp << 5;
  9820  000F28  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
  9821  000F2C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9822  000F30  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9823  000F34  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9824  000F38  0E05               	movlw	5
  9825  000F3A                     u5225:
  9826  000F3A  90D8               	bcf	status,0,c
  9827  000F3C  0100               	movlb	0	; () banked
  9828  000F3E  377C               	rlcf	??_CANSetFilter& (0+255),f,b
  9829  000F40  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9830  000F42  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9831  000F44  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9832  000F46  2EE8               	decfsz	wreg,f,c
  9833  000F48  D7F8               	goto	u5225
  9834  000F4A  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9835  000F4E  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9836  000F52  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9837  000F56  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9838                           
  9839                           ; BSR set to: 0
  9840                           ;inc\CANlib.h: 787: RXF2SIDL = (unsigned char) tamp;
  9841  000F5A  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
  9842  000F5E                     l4470:
  9843                           
  9844                           ; BSR set to: 0
  9845                           ;inc\CANlib.h: 788: }
  9846                           ;inc\CANlib.h: 790: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
  9847  000F5E  0E03               	movlw	3
  9848  000F60  0100               	movlb	0	; () banked
  9849  000F62  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9850  000F64  A4D8               	btfss	status,2,c
  9851  000F66  D058               	goto	l4488
  9852                           
  9853                           ; BSR set to: 0
  9854  000F68  0100               	movlb	0	; () banked
  9855  000F6A  297B               	incf	CANSetFilter@type& (0+255),w,b
  9856  000F6C  A4D8               	btfss	status,2,c
  9857  000F6E  D054               	goto	l4488
  9858                           
  9859                           ; BSR set to: 0
  9860                           ;inc\CANlib.h: 791: {
  9861                           ;inc\CANlib.h: 792: RXF3SIDLbits.EXIDEN = 0x00;
  9862  000F70  010F               	movlb	15	; () banked
  9863  000F72  970D               	bcf	13,3,b	;volatile
  9864                           
  9865                           ; BSR set to: 15
  9866                           ;inc\CANlib.h: 794: tamp = (filter >> 3);
  9867  000F74  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
  9868  000F78  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9869  000F7C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9870  000F80  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9871  000F84  0E04               	movlw	4
  9872  000F86  D006               	goto	u5250
  9873  000F88                     u5255:
  9874  000F88  0100               	movlb	0	; () banked
  9875  000F8A  90D8               	bcf	status,0,c
  9876  000F8C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9877  000F8E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9878  000F90  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9879  000F92  337C               	rrcf	??_CANSetFilter& (0+255),f,b
  9880  000F94                     u5250:
  9881  000F94  2EE8               	decfsz	wreg,f,c
  9882  000F96  D7F8               	goto	u5255
  9883  000F98  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9884  000F9C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9885  000FA0  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9886  000FA4  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9887                           
  9888                           ; BSR set to: 0
  9889                           ;inc\CANlib.h: 795: tamp = tamp & 0x000000FF;
  9890  000FA8  0100               	movlb	0	; () banked
  9891  000FAA  5181               	movf	CANSetFilter@tamp& (0+255),w,b
  9892  000FAC  0100               	movlb	0	; () banked
  9893  000FAE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9894  000FB0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
  9895  000FB2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
  9896  000FB4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
  9897                           
  9898                           ; BSR set to: 0
  9899                           ;inc\CANlib.h: 796: RXF3SIDH = (unsigned char) tamp;
  9900  000FB6  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
  9901                           
  9902                           ; BSR set to: 0
  9903                           ;inc\CANlib.h: 798: tamp = filter & 0x00000007;
  9904  000FBA  0E07               	movlw	7
  9905  000FBC  0100               	movlb	0	; () banked
  9906  000FBE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
  9907  000FC0  0100               	movlb	0	; () banked
  9908  000FC2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
  9909  000FC4  0E00               	movlw	0
  9910  000FC6  0100               	movlb	0	; () banked
  9911  000FC8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
  9912  000FCA  0100               	movlb	0	; () banked
  9913  000FCC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
  9914  000FCE  0E00               	movlw	0
  9915  000FD0  0100               	movlb	0	; () banked
  9916  000FD2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
  9917  000FD4  0100               	movlb	0	; () banked
  9918  000FD6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
  9919  000FD8  0E00               	movlw	0
  9920  000FDA  0100               	movlb	0	; () banked
  9921  000FDC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
  9922  000FDE  0100               	movlb	0	; () banked
  9923  000FE0  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
  9924                           
  9925                           ; BSR set to: 0
  9926                           ;inc\CANlib.h: 799: tamp = tamp << 5;
  9927  000FE2  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
  9928  000FE6  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
  9929  000FEA  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
  9930  000FEE  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
  9931  000FF2  0E05               	movlw	5
  9932  000FF4                     u5265:
  9933  000FF4  90D8               	bcf	status,0,c
  9934  000FF6  0100               	movlb	0	; () banked
  9935  000FF8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
  9936  000FFA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
  9937  000FFC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
  9938  000FFE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
  9939  001000  2EE8               	decfsz	wreg,f,c
  9940  001002  D7F8               	goto	u5265
  9941  001004  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9942  001008  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9943  00100C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9944  001010  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9945                           
  9946                           ; BSR set to: 0
  9947                           ;inc\CANlib.h: 800: RXF3SIDL = (unsigned char) tamp;
  9948  001014  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
  9949  001018                     l4488:
  9950                           
  9951                           ; BSR set to: 0
  9952                           ;inc\CANlib.h: 801: }
  9953                           ;inc\CANlib.h: 803: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
  9954  001018  0E04               	movlw	4
  9955  00101A  0100               	movlb	0	; () banked
  9956  00101C  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
  9957  00101E  A4D8               	btfss	status,2,c
  9958  001020  D058               	goto	l4506
  9959                           
  9960                           ; BSR set to: 0
  9961  001022  0100               	movlb	0	; () banked
  9962  001024  297B               	incf	CANSetFilter@type& (0+255),w,b
  9963  001026  A4D8               	btfss	status,2,c
  9964  001028  D054               	goto	l4506
  9965                           
  9966                           ; BSR set to: 0
  9967                           ;inc\CANlib.h: 804: {
  9968                           ;inc\CANlib.h: 805: RXF4SIDLbits.EXIDEN = 0x00;
  9969  00102A  010F               	movlb	15	; () banked
  9970  00102C  9711               	bcf	17,3,b	;volatile
  9971                           
  9972                           ; BSR set to: 15
  9973                           ;inc\CANlib.h: 807: tamp = (filter >> 3);
  9974  00102E  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
  9975  001032  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
  9976  001036  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
  9977  00103A  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
  9978  00103E  0E04               	movlw	4
  9979  001040  D006               	goto	u5290
  9980  001042                     u5295:
  9981  001042  0100               	movlb	0	; () banked
  9982  001044  90D8               	bcf	status,0,c
  9983  001046  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
  9984  001048  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
  9985  00104A  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
  9986  00104C  337C               	rrcf	??_CANSetFilter& (0+255),f,b
  9987  00104E                     u5290:
  9988  00104E  2EE8               	decfsz	wreg,f,c
  9989  001050  D7F8               	goto	u5295
  9990  001052  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
  9991  001056  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
  9992  00105A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
  9993  00105E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
  9994                           
  9995                           ; BSR set to: 0
  9996                           ;inc\CANlib.h: 808: tamp = tamp & 0x000000FF;
  9997  001062  0100               	movlb	0	; () banked
  9998  001064  5181               	movf	CANSetFilter@tamp& (0+255),w,b
  9999  001066  0100               	movlb	0	; () banked
 10000  001068  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10001  00106A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10002  00106C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10003  00106E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10004                           
 10005                           ; BSR set to: 0
 10006                           ;inc\CANlib.h: 809: RXF4SIDH = (unsigned char) tamp;
 10007  001070  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 10008                           
 10009                           ; BSR set to: 0
 10010                           ;inc\CANlib.h: 811: tamp = filter & 0x00000007;
 10011  001074  0E07               	movlw	7
 10012  001076  0100               	movlb	0	; () banked
 10013  001078  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10014  00107A  0100               	movlb	0	; () banked
 10015  00107C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10016  00107E  0E00               	movlw	0
 10017  001080  0100               	movlb	0	; () banked
 10018  001082  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10019  001084  0100               	movlb	0	; () banked
 10020  001086  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10021  001088  0E00               	movlw	0
 10022  00108A  0100               	movlb	0	; () banked
 10023  00108C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10024  00108E  0100               	movlb	0	; () banked
 10025  001090  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10026  001092  0E00               	movlw	0
 10027  001094  0100               	movlb	0	; () banked
 10028  001096  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10029  001098  0100               	movlb	0	; () banked
 10030  00109A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10031                           
 10032                           ; BSR set to: 0
 10033                           ;inc\CANlib.h: 812: tamp = tamp << 5;
 10034  00109C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10035  0010A0  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10036  0010A4  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10037  0010A8  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10038  0010AC  0E05               	movlw	5
 10039  0010AE                     u5305:
 10040  0010AE  90D8               	bcf	status,0,c
 10041  0010B0  0100               	movlb	0	; () banked
 10042  0010B2  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 10043  0010B4  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 10044  0010B6  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 10045  0010B8  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 10046  0010BA  2EE8               	decfsz	wreg,f,c
 10047  0010BC  D7F8               	goto	u5305
 10048  0010BE  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10049  0010C2  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10050  0010C6  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10051  0010CA  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10052                           
 10053                           ; BSR set to: 0
 10054                           ;inc\CANlib.h: 813: RXF4SIDL = (unsigned char) tamp;
 10055  0010CE  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 10056  0010D2                     l4506:
 10057                           
 10058                           ; BSR set to: 0
 10059                           ;inc\CANlib.h: 814: }
 10060                           ;inc\CANlib.h: 816: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 10061  0010D2  0E05               	movlw	5
 10062  0010D4  0100               	movlb	0	; () banked
 10063  0010D6  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10064  0010D8  A4D8               	btfss	status,2,c
 10065  0010DA  D058               	goto	l4524
 10066                           
 10067                           ; BSR set to: 0
 10068  0010DC  0100               	movlb	0	; () banked
 10069  0010DE  297B               	incf	CANSetFilter@type& (0+255),w,b
 10070  0010E0  A4D8               	btfss	status,2,c
 10071  0010E2  D054               	goto	l4524
 10072                           
 10073                           ; BSR set to: 0
 10074                           ;inc\CANlib.h: 817: {
 10075                           ;inc\CANlib.h: 818: RXF5SIDLbits.EXIDEN = 0x00;
 10076  0010E4  010F               	movlb	15	; () banked
 10077  0010E6  9715               	bcf	21,3,b	;volatile
 10078                           
 10079                           ; BSR set to: 15
 10080                           ;inc\CANlib.h: 820: tamp = (filter >> 3);
 10081  0010E8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10082  0010EC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10083  0010F0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10084  0010F4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10085  0010F8  0E04               	movlw	4
 10086  0010FA  D006               	goto	u5330
 10087  0010FC                     u5335:
 10088  0010FC  0100               	movlb	0	; () banked
 10089  0010FE  90D8               	bcf	status,0,c
 10090  001100  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10091  001102  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10092  001104  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10093  001106  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10094  001108                     u5330:
 10095  001108  2EE8               	decfsz	wreg,f,c
 10096  00110A  D7F8               	goto	u5335
 10097  00110C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10098  001110  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10099  001114  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10100  001118  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10101                           
 10102                           ; BSR set to: 0
 10103                           ;inc\CANlib.h: 821: tamp = tamp & 0x000000FF;
 10104  00111C  0100               	movlb	0	; () banked
 10105  00111E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10106  001120  0100               	movlb	0	; () banked
 10107  001122  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10108  001124  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10109  001126  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10110  001128  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10111                           
 10112                           ; BSR set to: 0
 10113                           ;inc\CANlib.h: 822: RXF5SIDH = (unsigned char) tamp;
 10114  00112A  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 10115                           
 10116                           ; BSR set to: 0
 10117                           ;inc\CANlib.h: 824: tamp = filter & 0x00000007;
 10118  00112E  0E07               	movlw	7
 10119  001130  0100               	movlb	0	; () banked
 10120  001132  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10121  001134  0100               	movlb	0	; () banked
 10122  001136  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10123  001138  0E00               	movlw	0
 10124  00113A  0100               	movlb	0	; () banked
 10125  00113C  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10126  00113E  0100               	movlb	0	; () banked
 10127  001140  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10128  001142  0E00               	movlw	0
 10129  001144  0100               	movlb	0	; () banked
 10130  001146  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10131  001148  0100               	movlb	0	; () banked
 10132  00114A  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10133  00114C  0E00               	movlw	0
 10134  00114E  0100               	movlb	0	; () banked
 10135  001150  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10136  001152  0100               	movlb	0	; () banked
 10137  001154  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10138                           
 10139                           ; BSR set to: 0
 10140                           ;inc\CANlib.h: 825: tamp = tamp << 5;
 10141  001156  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10142  00115A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10143  00115E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10144  001162  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10145  001166  0E05               	movlw	5
 10146  001168                     u5345:
 10147  001168  90D8               	bcf	status,0,c
 10148  00116A  0100               	movlb	0	; () banked
 10149  00116C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 10150  00116E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 10151  001170  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 10152  001172  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 10153  001174  2EE8               	decfsz	wreg,f,c
 10154  001176  D7F8               	goto	u5345
 10155  001178  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10156  00117C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10157  001180  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10158  001184  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10159                           
 10160                           ; BSR set to: 0
 10161                           ;inc\CANlib.h: 826: RXF5SIDL = (unsigned char) tamp;
 10162  001188  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 10163  00118C                     l4524:
 10164                           
 10165                           ; BSR set to: 0
 10166                           ;inc\CANlib.h: 827: }
 10167                           ;inc\CANlib.h: 830: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 10168  00118C  0100               	movlb	0	; () banked
 10169  00118E  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 10170  001190  0100               	movlb	0	; () banked
 10171  001192  A4D8               	btfss	status,2,c
 10172  001194  D089               	goto	l4558
 10173                           
 10174                           ; BSR set to: 0
 10175  001196  0EF7               	movlw	247
 10176  001198  0100               	movlb	0	; () banked
 10177  00119A  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 10178  00119C  A4D8               	btfss	status,2,c
 10179  00119E  D084               	goto	l4558
 10180                           
 10181                           ; BSR set to: 0
 10182                           ;inc\CANlib.h: 831: {
 10183                           ;inc\CANlib.h: 832: RXF0SIDLbits.EXIDEN = 0x01;
 10184  0011A0  010F               	movlb	15	; () banked
 10185  0011A2  8701               	bsf	1,3,b	;volatile
 10186                           
 10187                           ; BSR set to: 15
 10188                           ;inc\CANlib.h: 834: tamp = filter & 0x000000FF;
 10189  0011A4  0100               	movlb	0	; () banked
 10190  0011A6  5177               	movf	CANSetFilter@filter& (0+255),w,b
 10191  0011A8  0100               	movlb	0	; () banked
 10192  0011AA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10193  0011AC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10194  0011AE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10195  0011B0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10196                           
 10197                           ; BSR set to: 0
 10198                           ;inc\CANlib.h: 835: RXF0EIDL = (unsigned char) tamp;
 10199  0011B2  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 10200                           
 10201                           ; BSR set to: 0
 10202                           ;inc\CANlib.h: 837: tamp = filter & 0x0000FF00;
 10203  0011B6  0E00               	movlw	0
 10204  0011B8  0100               	movlb	0	; () banked
 10205  0011BA  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10206  0011BC  0100               	movlb	0	; () banked
 10207  0011BE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10208  0011C0  0EFF               	movlw	255
 10209  0011C2  0100               	movlb	0	; () banked
 10210  0011C4  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10211  0011C6  0100               	movlb	0	; () banked
 10212  0011C8  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10213  0011CA  0E00               	movlw	0
 10214  0011CC  0100               	movlb	0	; () banked
 10215  0011CE  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10216  0011D0  0100               	movlb	0	; () banked
 10217  0011D2  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10218  0011D4  0E00               	movlw	0
 10219  0011D6  0100               	movlb	0	; () banked
 10220  0011D8  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10221  0011DA  0100               	movlb	0	; () banked
 10222  0011DC  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10223                           
 10224                           ; BSR set to: 0
 10225                           ;inc\CANlib.h: 838: tamp = tamp >> 8;
 10226  0011DE  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10227  0011E2  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10228  0011E6  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10229  0011EA  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10230  0011EE  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 10231  0011F2  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10232  0011F6  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10233  0011FA  0100               	movlb	0	; () banked
 10234  0011FC  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 10235  0011FE  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10236  001202  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10237  001206  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10238  00120A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10239                           
 10240                           ; BSR set to: 0
 10241                           ;inc\CANlib.h: 839: RXF0EIDH = (unsigned char) tamp;
 10242  00120E  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 10243                           
 10244                           ; BSR set to: 0
 10245                           ;inc\CANlib.h: 841: if (filter & 0x00010000)
 10246  001212  0100               	movlb	0	; () banked
 10247  001214  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10248  001216  D003               	goto	l457
 10249                           
 10250                           ; BSR set to: 0
 10251                           ;inc\CANlib.h: 842: RXF0SIDLbits.EID16 = 0x01;
 10252  001218  010F               	movlb	15	; () banked
 10253  00121A  8101               	bsf	1,0,b	;volatile
 10254  00121C  D002               	goto	l458
 10255  00121E                     l457:
 10256                           
 10257                           ; BSR set to: 0
 10258                           ;inc\CANlib.h: 843: else
 10259                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x00;
 10260  00121E  010F               	movlb	15	; () banked
 10261  001220  9101               	bcf	1,0,b	;volatile
 10262  001222                     l458:
 10263                           
 10264                           ; BSR set to: 15
 10265                           ;inc\CANlib.h: 846: if (filter & 0x00020000)
 10266  001222  0100               	movlb	0	; () banked
 10267  001224  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10268  001226  D003               	goto	l459
 10269                           
 10270                           ; BSR set to: 0
 10271                           ;inc\CANlib.h: 847: RXF0SIDLbits.EID17 = 0x01;
 10272  001228  010F               	movlb	15	; () banked
 10273  00122A  8301               	bsf	1,1,b	;volatile
 10274  00122C  D002               	goto	l460
 10275  00122E                     l459:
 10276                           
 10277                           ; BSR set to: 0
 10278                           ;inc\CANlib.h: 848: else
 10279                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x00;
 10280  00122E  010F               	movlb	15	; () banked
 10281  001230  9301               	bcf	1,1,b	;volatile
 10282  001232                     l460:
 10283                           
 10284                           ; BSR set to: 15
 10285                           ;inc\CANlib.h: 851: if (filter & 0x00040000)
 10286  001232  0100               	movlb	0	; () banked
 10287  001234  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10288  001236  D003               	goto	l461
 10289                           
 10290                           ; BSR set to: 0
 10291                           ;inc\CANlib.h: 852: RXF0SIDLbits.SID0 = 0x01;
 10292  001238  010F               	movlb	15	; () banked
 10293  00123A  8B01               	bsf	1,5,b	;volatile
 10294  00123C  D002               	goto	l462
 10295  00123E                     l461:
 10296                           
 10297                           ; BSR set to: 0
 10298                           ;inc\CANlib.h: 853: else
 10299                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x00;
 10300  00123E  010F               	movlb	15	; () banked
 10301  001240  9B01               	bcf	1,5,b	;volatile
 10302  001242                     l462:
 10303                           
 10304                           ; BSR set to: 15
 10305                           ;inc\CANlib.h: 856: if (filter & 0x00080000)
 10306  001242  0100               	movlb	0	; () banked
 10307  001244  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10308  001246  D003               	goto	l463
 10309                           
 10310                           ; BSR set to: 0
 10311                           ;inc\CANlib.h: 857: RXF0SIDLbits.SID1 = 0x01;
 10312  001248  010F               	movlb	15	; () banked
 10313  00124A  8D01               	bsf	1,6,b	;volatile
 10314  00124C  D002               	goto	l464
 10315  00124E                     l463:
 10316                           
 10317                           ; BSR set to: 0
 10318                           ;inc\CANlib.h: 858: else
 10319                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x00;
 10320  00124E  010F               	movlb	15	; () banked
 10321  001250  9D01               	bcf	1,6,b	;volatile
 10322  001252                     l464:
 10323                           
 10324                           ; BSR set to: 15
 10325                           ;inc\CANlib.h: 861: if (filter & 0x00100000)
 10326  001252  0100               	movlb	0	; () banked
 10327  001254  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10328  001256  D003               	goto	l465
 10329                           
 10330                           ; BSR set to: 0
 10331                           ;inc\CANlib.h: 862: RXF0SIDLbits.SID2 = 0x01 ;
 10332  001258  010F               	movlb	15	; () banked
 10333  00125A  8F01               	bsf	1,7,b	;volatile
 10334  00125C  D002               	goto	l4552
 10335  00125E                     l465:
 10336                           
 10337                           ; BSR set to: 0
 10338                           ;inc\CANlib.h: 863: else
 10339                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x00 ;
 10340  00125E  010F               	movlb	15	; () banked
 10341  001260  9F01               	bcf	1,7,b	;volatile
 10342  001262                     l4552:
 10343                           
 10344                           ; BSR set to: 15
 10345                           ;inc\CANlib.h: 866: tamp = (filter >> 21);
 10346  001262  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10347  001266  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10348  00126A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10349  00126E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10350  001272  0E16               	movlw	22
 10351  001274  D006               	goto	u5420
 10352  001276                     u5425:
 10353  001276  0100               	movlb	0	; () banked
 10354  001278  90D8               	bcf	status,0,c
 10355  00127A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10356  00127C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10357  00127E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10358  001280  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10359  001282                     u5420:
 10360  001282  2EE8               	decfsz	wreg,f,c
 10361  001284  D7F8               	goto	u5425
 10362  001286  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10363  00128A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10364  00128E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10365  001292  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10366                           
 10367                           ; BSR set to: 0
 10368                           ;inc\CANlib.h: 867: tamp = tamp & 0x000000FF;
 10369  001296  0100               	movlb	0	; () banked
 10370  001298  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10371  00129A  0100               	movlb	0	; () banked
 10372  00129C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10373  00129E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10374  0012A0  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10375  0012A2  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10376                           
 10377                           ; BSR set to: 0
 10378                           ;inc\CANlib.h: 868: RXF0SIDH = (unsigned char) tamp;
 10379  0012A4  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 10380  0012A8                     l4558:
 10381                           
 10382                           ; BSR set to: 0
 10383                           ;inc\CANlib.h: 869: }
 10384                           ;inc\CANlib.h: 871: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 10385  0012A8  0100               	movlb	0	; () banked
 10386  0012AA  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 10387  0012AC  A4D8               	btfss	status,2,c
 10388  0012AE  D089               	goto	l4592
 10389                           
 10390                           ; BSR set to: 0
 10391  0012B0  0EF7               	movlw	247
 10392  0012B2  0100               	movlb	0	; () banked
 10393  0012B4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 10394  0012B6  A4D8               	btfss	status,2,c
 10395  0012B8  D084               	goto	l4592
 10396                           
 10397                           ; BSR set to: 0
 10398                           ;inc\CANlib.h: 872: {
 10399                           ;inc\CANlib.h: 873: RXF1SIDLbits.EXIDEN = 0x01;
 10400  0012BA  010F               	movlb	15	; () banked
 10401  0012BC  8705               	bsf	5,3,b	;volatile
 10402                           
 10403                           ; BSR set to: 15
 10404                           ;inc\CANlib.h: 875: tamp = filter & 0x000000FF;
 10405  0012BE  0100               	movlb	0	; () banked
 10406  0012C0  5177               	movf	CANSetFilter@filter& (0+255),w,b
 10407  0012C2  0100               	movlb	0	; () banked
 10408  0012C4  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10409  0012C6  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10410  0012C8  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10411  0012CA  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10412                           
 10413                           ; BSR set to: 0
 10414                           ;inc\CANlib.h: 876: RXF1EIDL = (unsigned char) tamp;
 10415  0012CC  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 10416                           
 10417                           ; BSR set to: 0
 10418                           ;inc\CANlib.h: 878: tamp = filter & 0x0000FF00;
 10419  0012D0  0E00               	movlw	0
 10420  0012D2  0100               	movlb	0	; () banked
 10421  0012D4  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10422  0012D6  0100               	movlb	0	; () banked
 10423  0012D8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10424  0012DA  0EFF               	movlw	255
 10425  0012DC  0100               	movlb	0	; () banked
 10426  0012DE  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10427  0012E0  0100               	movlb	0	; () banked
 10428  0012E2  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10429  0012E4  0E00               	movlw	0
 10430  0012E6  0100               	movlb	0	; () banked
 10431  0012E8  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10432  0012EA  0100               	movlb	0	; () banked
 10433  0012EC  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10434  0012EE  0E00               	movlw	0
 10435  0012F0  0100               	movlb	0	; () banked
 10436  0012F2  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10437  0012F4  0100               	movlb	0	; () banked
 10438  0012F6  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10439                           
 10440                           ; BSR set to: 0
 10441                           ;inc\CANlib.h: 879: tamp = tamp >> 8;
 10442  0012F8  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10443  0012FC  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10444  001300  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10445  001304  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10446  001308  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 10447  00130C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10448  001310  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10449  001314  0100               	movlb	0	; () banked
 10450  001316  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 10451  001318  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10452  00131C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10453  001320  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10454  001324  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10455                           
 10456                           ; BSR set to: 0
 10457                           ;inc\CANlib.h: 880: RXF1EIDH = (unsigned char) tamp;
 10458  001328  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 10459                           
 10460                           ; BSR set to: 0
 10461                           ;inc\CANlib.h: 882: if (filter & 0x00010000)
 10462  00132C  0100               	movlb	0	; () banked
 10463  00132E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10464  001330  D003               	goto	l468
 10465                           
 10466                           ; BSR set to: 0
 10467                           ;inc\CANlib.h: 883: RXF1SIDLbits.EID16 = 0x01;
 10468  001332  010F               	movlb	15	; () banked
 10469  001334  8105               	bsf	5,0,b	;volatile
 10470  001336  D002               	goto	l469
 10471  001338                     l468:
 10472                           
 10473                           ; BSR set to: 0
 10474                           ;inc\CANlib.h: 884: else
 10475                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x00;
 10476  001338  010F               	movlb	15	; () banked
 10477  00133A  9105               	bcf	5,0,b	;volatile
 10478  00133C                     l469:
 10479                           
 10480                           ; BSR set to: 15
 10481                           ;inc\CANlib.h: 887: if (filter & 0x00020000)
 10482  00133C  0100               	movlb	0	; () banked
 10483  00133E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10484  001340  D003               	goto	l470
 10485                           
 10486                           ; BSR set to: 0
 10487                           ;inc\CANlib.h: 888: RXF1SIDLbits.EID17 = 0x01;
 10488  001342  010F               	movlb	15	; () banked
 10489  001344  8305               	bsf	5,1,b	;volatile
 10490  001346  D002               	goto	l471
 10491  001348                     l470:
 10492                           
 10493                           ; BSR set to: 0
 10494                           ;inc\CANlib.h: 889: else
 10495                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x00;
 10496  001348  010F               	movlb	15	; () banked
 10497  00134A  9305               	bcf	5,1,b	;volatile
 10498  00134C                     l471:
 10499                           
 10500                           ; BSR set to: 15
 10501                           ;inc\CANlib.h: 892: if (filter & 0x00040000)
 10502  00134C  0100               	movlb	0	; () banked
 10503  00134E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10504  001350  D003               	goto	l472
 10505                           
 10506                           ; BSR set to: 0
 10507                           ;inc\CANlib.h: 893: RXF1SIDLbits.SID0 = 0x01;
 10508  001352  010F               	movlb	15	; () banked
 10509  001354  8B05               	bsf	5,5,b	;volatile
 10510  001356  D002               	goto	l473
 10511  001358                     l472:
 10512                           
 10513                           ; BSR set to: 0
 10514                           ;inc\CANlib.h: 894: else
 10515                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x00;
 10516  001358  010F               	movlb	15	; () banked
 10517  00135A  9B05               	bcf	5,5,b	;volatile
 10518  00135C                     l473:
 10519                           
 10520                           ; BSR set to: 15
 10521                           ;inc\CANlib.h: 897: if (filter & 0x00080000)
 10522  00135C  0100               	movlb	0	; () banked
 10523  00135E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10524  001360  D003               	goto	l474
 10525                           
 10526                           ; BSR set to: 0
 10527                           ;inc\CANlib.h: 898: RXF1SIDLbits.SID1 = 0x01;
 10528  001362  010F               	movlb	15	; () banked
 10529  001364  8D05               	bsf	5,6,b	;volatile
 10530  001366  D002               	goto	l475
 10531  001368                     l474:
 10532                           
 10533                           ; BSR set to: 0
 10534                           ;inc\CANlib.h: 899: else
 10535                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x00;
 10536  001368  010F               	movlb	15	; () banked
 10537  00136A  9D05               	bcf	5,6,b	;volatile
 10538  00136C                     l475:
 10539                           
 10540                           ; BSR set to: 15
 10541                           ;inc\CANlib.h: 902: if (filter & 0x00100000)
 10542  00136C  0100               	movlb	0	; () banked
 10543  00136E  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10544  001370  D003               	goto	l476
 10545                           
 10546                           ; BSR set to: 0
 10547                           ;inc\CANlib.h: 903: RXF1SIDLbits.SID2 = 0x01 ;
 10548  001372  010F               	movlb	15	; () banked
 10549  001374  8F05               	bsf	5,7,b	;volatile
 10550  001376  D002               	goto	l4586
 10551  001378                     l476:
 10552                           
 10553                           ; BSR set to: 0
 10554                           ;inc\CANlib.h: 904: else
 10555                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x00 ;
 10556  001378  010F               	movlb	15	; () banked
 10557  00137A  9F05               	bcf	5,7,b	;volatile
 10558  00137C                     l4586:
 10559                           
 10560                           ; BSR set to: 15
 10561                           ;inc\CANlib.h: 907: tamp = (filter >> 21);
 10562  00137C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10563  001380  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10564  001384  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10565  001388  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10566  00138C  0E16               	movlw	22
 10567  00138E  D006               	goto	u5500
 10568  001390                     u5505:
 10569  001390  0100               	movlb	0	; () banked
 10570  001392  90D8               	bcf	status,0,c
 10571  001394  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10572  001396  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10573  001398  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10574  00139A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10575  00139C                     u5500:
 10576  00139C  2EE8               	decfsz	wreg,f,c
 10577  00139E  D7F8               	goto	u5505
 10578  0013A0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10579  0013A4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10580  0013A8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10581  0013AC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10582                           
 10583                           ; BSR set to: 0
 10584                           ;inc\CANlib.h: 908: tamp = tamp & 0x000000FF;
 10585  0013B0  0100               	movlb	0	; () banked
 10586  0013B2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10587  0013B4  0100               	movlb	0	; () banked
 10588  0013B6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10589  0013B8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10590  0013BA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10591  0013BC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10592                           
 10593                           ; BSR set to: 0
 10594                           ;inc\CANlib.h: 909: RXF1SIDH = (unsigned char) tamp;
 10595  0013BE  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 10596  0013C2                     l4592:
 10597                           
 10598                           ; BSR set to: 0
 10599                           ;inc\CANlib.h: 910: }
 10600                           ;inc\CANlib.h: 913: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 10601  0013C2  0E02               	movlw	2
 10602  0013C4  0100               	movlb	0	; () banked
 10603  0013C6  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10604  0013C8  A4D8               	btfss	status,2,c
 10605  0013CA  D089               	goto	l4626
 10606                           
 10607                           ; BSR set to: 0
 10608  0013CC  0EF7               	movlw	247
 10609  0013CE  0100               	movlb	0	; () banked
 10610  0013D0  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 10611  0013D2  A4D8               	btfss	status,2,c
 10612  0013D4  D084               	goto	l4626
 10613                           
 10614                           ; BSR set to: 0
 10615                           ;inc\CANlib.h: 914: {
 10616                           ;inc\CANlib.h: 915: RXF2SIDLbits.EXIDEN = 0x01;
 10617  0013D6  010F               	movlb	15	; () banked
 10618  0013D8  8709               	bsf	9,3,b	;volatile
 10619                           
 10620                           ; BSR set to: 15
 10621                           ;inc\CANlib.h: 917: tamp = filter & 0x000000FF;
 10622  0013DA  0100               	movlb	0	; () banked
 10623  0013DC  5177               	movf	CANSetFilter@filter& (0+255),w,b
 10624  0013DE  0100               	movlb	0	; () banked
 10625  0013E0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10626  0013E2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10627  0013E4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10628  0013E6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10629                           
 10630                           ; BSR set to: 0
 10631                           ;inc\CANlib.h: 918: RXF2EIDL = (unsigned char) tamp;
 10632  0013E8  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 10633                           
 10634                           ; BSR set to: 0
 10635                           ;inc\CANlib.h: 920: tamp = filter & 0x0000FF00;
 10636  0013EC  0E00               	movlw	0
 10637  0013EE  0100               	movlb	0	; () banked
 10638  0013F0  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10639  0013F2  0100               	movlb	0	; () banked
 10640  0013F4  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10641  0013F6  0EFF               	movlw	255
 10642  0013F8  0100               	movlb	0	; () banked
 10643  0013FA  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10644  0013FC  0100               	movlb	0	; () banked
 10645  0013FE  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10646  001400  0E00               	movlw	0
 10647  001402  0100               	movlb	0	; () banked
 10648  001404  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10649  001406  0100               	movlb	0	; () banked
 10650  001408  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10651  00140A  0E00               	movlw	0
 10652  00140C  0100               	movlb	0	; () banked
 10653  00140E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10654  001410  0100               	movlb	0	; () banked
 10655  001412  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10656                           
 10657                           ; BSR set to: 0
 10658                           ;inc\CANlib.h: 921: tamp = tamp >> 8;
 10659  001414  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10660  001418  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10661  00141C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10662  001420  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10663  001424  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 10664  001428  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10665  00142C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10666  001430  0100               	movlb	0	; () banked
 10667  001432  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 10668  001434  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10669  001438  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10670  00143C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10671  001440  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10672                           
 10673                           ; BSR set to: 0
 10674                           ;inc\CANlib.h: 922: RXF2EIDH = (unsigned char) tamp;
 10675  001444  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 10676                           
 10677                           ; BSR set to: 0
 10678                           ;inc\CANlib.h: 924: if (filter & 0x00010000)
 10679  001448  0100               	movlb	0	; () banked
 10680  00144A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10681  00144C  D003               	goto	l479
 10682                           
 10683                           ; BSR set to: 0
 10684                           ;inc\CANlib.h: 925: RXF2SIDLbits.EID16 = 0x01;
 10685  00144E  010F               	movlb	15	; () banked
 10686  001450  8109               	bsf	9,0,b	;volatile
 10687  001452  D002               	goto	l480
 10688  001454                     l479:
 10689                           
 10690                           ; BSR set to: 0
 10691                           ;inc\CANlib.h: 926: else
 10692                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x00;
 10693  001454  010F               	movlb	15	; () banked
 10694  001456  9109               	bcf	9,0,b	;volatile
 10695  001458                     l480:
 10696                           
 10697                           ; BSR set to: 15
 10698                           ;inc\CANlib.h: 929: if (filter & 0x00020000)
 10699  001458  0100               	movlb	0	; () banked
 10700  00145A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10701  00145C  D003               	goto	l481
 10702                           
 10703                           ; BSR set to: 0
 10704                           ;inc\CANlib.h: 930: RXF2SIDLbits.EID17 = 0x01;
 10705  00145E  010F               	movlb	15	; () banked
 10706  001460  8309               	bsf	9,1,b	;volatile
 10707  001462  D002               	goto	l482
 10708  001464                     l481:
 10709                           
 10710                           ; BSR set to: 0
 10711                           ;inc\CANlib.h: 931: else
 10712                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x00;
 10713  001464  010F               	movlb	15	; () banked
 10714  001466  9309               	bcf	9,1,b	;volatile
 10715  001468                     l482:
 10716                           
 10717                           ; BSR set to: 15
 10718                           ;inc\CANlib.h: 934: if (filter & 0x00040000)
 10719  001468  0100               	movlb	0	; () banked
 10720  00146A  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10721  00146C  D003               	goto	l483
 10722                           
 10723                           ; BSR set to: 0
 10724                           ;inc\CANlib.h: 935: RXF2SIDLbits.SID0 = 0x01;
 10725  00146E  010F               	movlb	15	; () banked
 10726  001470  8B09               	bsf	9,5,b	;volatile
 10727  001472  D002               	goto	l484
 10728  001474                     l483:
 10729                           
 10730                           ; BSR set to: 0
 10731                           ;inc\CANlib.h: 936: else
 10732                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x00;
 10733  001474  010F               	movlb	15	; () banked
 10734  001476  9B09               	bcf	9,5,b	;volatile
 10735  001478                     l484:
 10736                           
 10737                           ; BSR set to: 15
 10738                           ;inc\CANlib.h: 939: if (filter & 0x00080000)
 10739  001478  0100               	movlb	0	; () banked
 10740  00147A  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10741  00147C  D003               	goto	l485
 10742                           
 10743                           ; BSR set to: 0
 10744                           ;inc\CANlib.h: 940: RXF2SIDLbits.SID1 = 0x01;
 10745  00147E  010F               	movlb	15	; () banked
 10746  001480  8D09               	bsf	9,6,b	;volatile
 10747  001482  D002               	goto	l486
 10748  001484                     l485:
 10749                           
 10750                           ; BSR set to: 0
 10751                           ;inc\CANlib.h: 941: else
 10752                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x00;
 10753  001484  010F               	movlb	15	; () banked
 10754  001486  9D09               	bcf	9,6,b	;volatile
 10755  001488                     l486:
 10756                           
 10757                           ; BSR set to: 15
 10758                           ;inc\CANlib.h: 944: if (filter & 0x00100000)
 10759  001488  0100               	movlb	0	; () banked
 10760  00148A  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10761  00148C  D003               	goto	l487
 10762                           
 10763                           ; BSR set to: 0
 10764                           ;inc\CANlib.h: 945: RXF2SIDLbits.SID2 = 0x01 ;
 10765  00148E  010F               	movlb	15	; () banked
 10766  001490  8F09               	bsf	9,7,b	;volatile
 10767  001492  D002               	goto	l4620
 10768  001494                     l487:
 10769                           
 10770                           ; BSR set to: 0
 10771                           ;inc\CANlib.h: 946: else
 10772                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x00 ;
 10773  001494  010F               	movlb	15	; () banked
 10774  001496  9F09               	bcf	9,7,b	;volatile
 10775  001498                     l4620:
 10776                           
 10777                           ; BSR set to: 15
 10778                           ;inc\CANlib.h: 949: tamp = (filter >> 21);
 10779  001498  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10780  00149C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10781  0014A0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10782  0014A4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10783  0014A8  0E16               	movlw	22
 10784  0014AA  D006               	goto	u5580
 10785  0014AC                     u5585:
 10786  0014AC  0100               	movlb	0	; () banked
 10787  0014AE  90D8               	bcf	status,0,c
 10788  0014B0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10789  0014B2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10790  0014B4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10791  0014B6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10792  0014B8                     u5580:
 10793  0014B8  2EE8               	decfsz	wreg,f,c
 10794  0014BA  D7F8               	goto	u5585
 10795  0014BC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10796  0014C0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10797  0014C4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10798  0014C8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10799                           
 10800                           ; BSR set to: 0
 10801                           ;inc\CANlib.h: 950: tamp = tamp & 0x000000FF;
 10802  0014CC  0100               	movlb	0	; () banked
 10803  0014CE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10804  0014D0  0100               	movlb	0	; () banked
 10805  0014D2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10806  0014D4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10807  0014D6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10808  0014D8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10809                           
 10810                           ; BSR set to: 0
 10811                           ;inc\CANlib.h: 951: RXF2SIDH = (unsigned char) tamp;
 10812  0014DA  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 10813  0014DE                     l4626:
 10814                           
 10815                           ; BSR set to: 0
 10816                           ;inc\CANlib.h: 952: }
 10817                           ;inc\CANlib.h: 954: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 10818  0014DE  0E03               	movlw	3
 10819  0014E0  0100               	movlb	0	; () banked
 10820  0014E2  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10821  0014E4  A4D8               	btfss	status,2,c
 10822  0014E6  D089               	goto	l4660
 10823                           
 10824                           ; BSR set to: 0
 10825  0014E8  0EF7               	movlw	247
 10826  0014EA  0100               	movlb	0	; () banked
 10827  0014EC  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 10828  0014EE  A4D8               	btfss	status,2,c
 10829  0014F0  D084               	goto	l4660
 10830                           
 10831                           ; BSR set to: 0
 10832                           ;inc\CANlib.h: 955: {
 10833                           ;inc\CANlib.h: 956: RXF3SIDLbits.EXIDEN = 0x01;
 10834  0014F2  010F               	movlb	15	; () banked
 10835  0014F4  870D               	bsf	13,3,b	;volatile
 10836                           
 10837                           ; BSR set to: 15
 10838                           ;inc\CANlib.h: 958: tamp = filter & 0x000000FF;
 10839  0014F6  0100               	movlb	0	; () banked
 10840  0014F8  5177               	movf	CANSetFilter@filter& (0+255),w,b
 10841  0014FA  0100               	movlb	0	; () banked
 10842  0014FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10843  0014FE  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10844  001500  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10845  001502  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10846                           
 10847                           ; BSR set to: 0
 10848                           ;inc\CANlib.h: 959: RXF3EIDL = (unsigned char) tamp;
 10849  001504  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 10850                           
 10851                           ; BSR set to: 0
 10852                           ;inc\CANlib.h: 961: tamp = filter & 0x0000FF00;
 10853  001508  0E00               	movlw	0
 10854  00150A  0100               	movlb	0	; () banked
 10855  00150C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10856  00150E  0100               	movlb	0	; () banked
 10857  001510  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10858  001512  0EFF               	movlw	255
 10859  001514  0100               	movlb	0	; () banked
 10860  001516  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10861  001518  0100               	movlb	0	; () banked
 10862  00151A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10863  00151C  0E00               	movlw	0
 10864  00151E  0100               	movlb	0	; () banked
 10865  001520  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10866  001522  0100               	movlb	0	; () banked
 10867  001524  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10868  001526  0E00               	movlw	0
 10869  001528  0100               	movlb	0	; () banked
 10870  00152A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10871  00152C  0100               	movlb	0	; () banked
 10872  00152E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10873                           
 10874                           ; BSR set to: 0
 10875                           ;inc\CANlib.h: 962: tamp = tamp >> 8;
 10876  001530  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10877  001534  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10878  001538  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10879  00153C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10880  001540  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 10881  001544  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10882  001548  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10883  00154C  0100               	movlb	0	; () banked
 10884  00154E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 10885  001550  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10886  001554  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10887  001558  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10888  00155C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10889                           
 10890                           ; BSR set to: 0
 10891                           ;inc\CANlib.h: 963: RXF3EIDH = (unsigned char) tamp;
 10892  001560  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 10893                           
 10894                           ; BSR set to: 0
 10895                           ;inc\CANlib.h: 965: if (filter & 0x00010000)
 10896  001564  0100               	movlb	0	; () banked
 10897  001566  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10898  001568  D003               	goto	l490
 10899                           
 10900                           ; BSR set to: 0
 10901                           ;inc\CANlib.h: 966: RXF3SIDLbits.EID16 = 0x01;
 10902  00156A  010F               	movlb	15	; () banked
 10903  00156C  810D               	bsf	13,0,b	;volatile
 10904  00156E  D002               	goto	l491
 10905  001570                     l490:
 10906                           
 10907                           ; BSR set to: 0
 10908                           ;inc\CANlib.h: 967: else
 10909                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x00;
 10910  001570  010F               	movlb	15	; () banked
 10911  001572  910D               	bcf	13,0,b	;volatile
 10912  001574                     l491:
 10913                           
 10914                           ; BSR set to: 15
 10915                           ;inc\CANlib.h: 970: if (filter & 0x00020000)
 10916  001574  0100               	movlb	0	; () banked
 10917  001576  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10918  001578  D003               	goto	l492
 10919                           
 10920                           ; BSR set to: 0
 10921                           ;inc\CANlib.h: 971: RXF3SIDLbits.EID17 = 0x01;
 10922  00157A  010F               	movlb	15	; () banked
 10923  00157C  830D               	bsf	13,1,b	;volatile
 10924  00157E  D002               	goto	l493
 10925  001580                     l492:
 10926                           
 10927                           ; BSR set to: 0
 10928                           ;inc\CANlib.h: 972: else
 10929                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x00;
 10930  001580  010F               	movlb	15	; () banked
 10931  001582  930D               	bcf	13,1,b	;volatile
 10932  001584                     l493:
 10933                           
 10934                           ; BSR set to: 15
 10935                           ;inc\CANlib.h: 975: if (filter & 0x00040000)
 10936  001584  0100               	movlb	0	; () banked
 10937  001586  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10938  001588  D003               	goto	l494
 10939                           
 10940                           ; BSR set to: 0
 10941                           ;inc\CANlib.h: 976: RXF3SIDLbits.SID0 = 0x01;
 10942  00158A  010F               	movlb	15	; () banked
 10943  00158C  8B0D               	bsf	13,5,b	;volatile
 10944  00158E  D002               	goto	l495
 10945  001590                     l494:
 10946                           
 10947                           ; BSR set to: 0
 10948                           ;inc\CANlib.h: 977: else
 10949                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x00;
 10950  001590  010F               	movlb	15	; () banked
 10951  001592  9B0D               	bcf	13,5,b	;volatile
 10952  001594                     l495:
 10953                           
 10954                           ; BSR set to: 15
 10955                           ;inc\CANlib.h: 980: if (filter & 0x00080000)
 10956  001594  0100               	movlb	0	; () banked
 10957  001596  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10958  001598  D003               	goto	l496
 10959                           
 10960                           ; BSR set to: 0
 10961                           ;inc\CANlib.h: 981: RXF3SIDLbits.SID1 = 0x01;
 10962  00159A  010F               	movlb	15	; () banked
 10963  00159C  8D0D               	bsf	13,6,b	;volatile
 10964  00159E  D002               	goto	l497
 10965  0015A0                     l496:
 10966                           
 10967                           ; BSR set to: 0
 10968                           ;inc\CANlib.h: 982: else
 10969                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x00;
 10970  0015A0  010F               	movlb	15	; () banked
 10971  0015A2  9D0D               	bcf	13,6,b	;volatile
 10972  0015A4                     l497:
 10973                           
 10974                           ; BSR set to: 15
 10975                           ;inc\CANlib.h: 985: if (filter & 0x00100000)
 10976  0015A4  0100               	movlb	0	; () banked
 10977  0015A6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10978  0015A8  D003               	goto	l498
 10979                           
 10980                           ; BSR set to: 0
 10981                           ;inc\CANlib.h: 986: RXF3SIDLbits.SID2 = 0x01 ;
 10982  0015AA  010F               	movlb	15	; () banked
 10983  0015AC  8F0D               	bsf	13,7,b	;volatile
 10984  0015AE  D002               	goto	l4654
 10985  0015B0                     l498:
 10986                           
 10987                           ; BSR set to: 0
 10988                           ;inc\CANlib.h: 987: else
 10989                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x00 ;
 10990  0015B0  010F               	movlb	15	; () banked
 10991  0015B2  9F0D               	bcf	13,7,b	;volatile
 10992  0015B4                     l4654:
 10993                           
 10994                           ; BSR set to: 15
 10995                           ;inc\CANlib.h: 990: tamp = (filter >> 21);
 10996  0015B4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10997  0015B8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10998  0015BC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10999  0015C0  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 11000  0015C4  0E16               	movlw	22
 11001  0015C6  D006               	goto	u5660
 11002  0015C8                     u5665:
 11003  0015C8  0100               	movlb	0	; () banked
 11004  0015CA  90D8               	bcf	status,0,c
 11005  0015CC  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 11006  0015CE  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 11007  0015D0  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 11008  0015D2  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 11009  0015D4                     u5660:
 11010  0015D4  2EE8               	decfsz	wreg,f,c
 11011  0015D6  D7F8               	goto	u5665
 11012  0015D8  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11013  0015DC  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11014  0015E0  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11015  0015E4  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11016                           
 11017                           ; BSR set to: 0
 11018                           ;inc\CANlib.h: 991: tamp = tamp & 0x000000FF;
 11019  0015E8  0100               	movlb	0	; () banked
 11020  0015EA  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 11021  0015EC  0100               	movlb	0	; () banked
 11022  0015EE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11023  0015F0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11024  0015F2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11025  0015F4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11026                           
 11027                           ; BSR set to: 0
 11028                           ;inc\CANlib.h: 992: RXF3SIDH = (unsigned char) tamp;
 11029  0015F6  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 11030  0015FA                     l4660:
 11031                           
 11032                           ; BSR set to: 0
 11033                           ;inc\CANlib.h: 993: }
 11034                           ;inc\CANlib.h: 995: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 11035  0015FA  0E04               	movlw	4
 11036  0015FC  0100               	movlb	0	; () banked
 11037  0015FE  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 11038  001600  A4D8               	btfss	status,2,c
 11039  001602  D089               	goto	l4694
 11040                           
 11041                           ; BSR set to: 0
 11042  001604  0EF7               	movlw	247
 11043  001606  0100               	movlb	0	; () banked
 11044  001608  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 11045  00160A  A4D8               	btfss	status,2,c
 11046  00160C  D084               	goto	l4694
 11047                           
 11048                           ; BSR set to: 0
 11049                           ;inc\CANlib.h: 996: {
 11050                           ;inc\CANlib.h: 997: RXF4SIDLbits.EXIDEN = 0x01;
 11051  00160E  010F               	movlb	15	; () banked
 11052  001610  8711               	bsf	17,3,b	;volatile
 11053                           
 11054                           ; BSR set to: 15
 11055                           ;inc\CANlib.h: 999: tamp = filter & 0x000000FF;
 11056  001612  0100               	movlb	0	; () banked
 11057  001614  5177               	movf	CANSetFilter@filter& (0+255),w,b
 11058  001616  0100               	movlb	0	; () banked
 11059  001618  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11060  00161A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11061  00161C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11062  00161E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11063                           
 11064                           ; BSR set to: 0
 11065                           ;inc\CANlib.h: 1000: RXF4EIDL = (unsigned char) tamp;
 11066  001620  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 11067                           
 11068                           ; BSR set to: 0
 11069                           ;inc\CANlib.h: 1002: tamp = filter & 0x0000FF00;
 11070  001624  0E00               	movlw	0
 11071  001626  0100               	movlb	0	; () banked
 11072  001628  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 11073  00162A  0100               	movlb	0	; () banked
 11074  00162C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11075  00162E  0EFF               	movlw	255
 11076  001630  0100               	movlb	0	; () banked
 11077  001632  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 11078  001634  0100               	movlb	0	; () banked
 11079  001636  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 11080  001638  0E00               	movlw	0
 11081  00163A  0100               	movlb	0	; () banked
 11082  00163C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 11083  00163E  0100               	movlb	0	; () banked
 11084  001640  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 11085  001642  0E00               	movlw	0
 11086  001644  0100               	movlb	0	; () banked
 11087  001646  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 11088  001648  0100               	movlb	0	; () banked
 11089  00164A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 11090                           
 11091                           ; BSR set to: 0
 11092                           ;inc\CANlib.h: 1003: tamp = tamp >> 8;
 11093  00164C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 11094  001650  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 11095  001654  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 11096  001658  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 11097  00165C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 11098  001660  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 11099  001664  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 11100  001668  0100               	movlb	0	; () banked
 11101  00166A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 11102  00166C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11103  001670  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11104  001674  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11105  001678  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11106                           
 11107                           ; BSR set to: 0
 11108                           ;inc\CANlib.h: 1004: RXF4EIDH = (unsigned char) tamp;
 11109  00167C  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 11110                           
 11111                           ; BSR set to: 0
 11112                           ;inc\CANlib.h: 1006: if (filter & 0x00010000)
 11113  001680  0100               	movlb	0	; () banked
 11114  001682  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 11115  001684  D003               	goto	l501
 11116                           
 11117                           ; BSR set to: 0
 11118                           ;inc\CANlib.h: 1007: RXF4SIDLbits.EID16 = 0x01;
 11119  001686  010F               	movlb	15	; () banked
 11120  001688  8111               	bsf	17,0,b	;volatile
 11121  00168A  D002               	goto	l502
 11122  00168C                     l501:
 11123                           
 11124                           ; BSR set to: 0
 11125                           ;inc\CANlib.h: 1008: else
 11126                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x00;
 11127  00168C  010F               	movlb	15	; () banked
 11128  00168E  9111               	bcf	17,0,b	;volatile
 11129  001690                     l502:
 11130                           
 11131                           ; BSR set to: 15
 11132                           ;inc\CANlib.h: 1011: if (filter & 0x00020000)
 11133  001690  0100               	movlb	0	; () banked
 11134  001692  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 11135  001694  D003               	goto	l503
 11136                           
 11137                           ; BSR set to: 0
 11138                           ;inc\CANlib.h: 1012: RXF4SIDLbits.EID17 = 0x01;
 11139  001696  010F               	movlb	15	; () banked
 11140  001698  8311               	bsf	17,1,b	;volatile
 11141  00169A  D002               	goto	l504
 11142  00169C                     l503:
 11143                           
 11144                           ; BSR set to: 0
 11145                           ;inc\CANlib.h: 1013: else
 11146                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x00;
 11147  00169C  010F               	movlb	15	; () banked
 11148  00169E  9311               	bcf	17,1,b	;volatile
 11149  0016A0                     l504:
 11150                           
 11151                           ; BSR set to: 15
 11152                           ;inc\CANlib.h: 1016: if (filter & 0x00040000)
 11153  0016A0  0100               	movlb	0	; () banked
 11154  0016A2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 11155  0016A4  D003               	goto	l505
 11156                           
 11157                           ; BSR set to: 0
 11158                           ;inc\CANlib.h: 1017: RXF4SIDLbits.SID0 = 0x01;
 11159  0016A6  010F               	movlb	15	; () banked
 11160  0016A8  8B11               	bsf	17,5,b	;volatile
 11161  0016AA  D002               	goto	l506
 11162  0016AC                     l505:
 11163                           
 11164                           ; BSR set to: 0
 11165                           ;inc\CANlib.h: 1018: else
 11166                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x00;
 11167  0016AC  010F               	movlb	15	; () banked
 11168  0016AE  9B11               	bcf	17,5,b	;volatile
 11169  0016B0                     l506:
 11170                           
 11171                           ; BSR set to: 15
 11172                           ;inc\CANlib.h: 1021: if (filter & 0x00080000)
 11173  0016B0  0100               	movlb	0	; () banked
 11174  0016B2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 11175  0016B4  D003               	goto	l507
 11176                           
 11177                           ; BSR set to: 0
 11178                           ;inc\CANlib.h: 1022: RXF4SIDLbits.SID1 = 0x01;
 11179  0016B6  010F               	movlb	15	; () banked
 11180  0016B8  8D11               	bsf	17,6,b	;volatile
 11181  0016BA  D002               	goto	l508
 11182  0016BC                     l507:
 11183                           
 11184                           ; BSR set to: 0
 11185                           ;inc\CANlib.h: 1023: else
 11186                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x00;
 11187  0016BC  010F               	movlb	15	; () banked
 11188  0016BE  9D11               	bcf	17,6,b	;volatile
 11189  0016C0                     l508:
 11190                           
 11191                           ; BSR set to: 15
 11192                           ;inc\CANlib.h: 1026: if (filter & 0x00100000)
 11193  0016C0  0100               	movlb	0	; () banked
 11194  0016C2  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 11195  0016C4  D003               	goto	l509
 11196                           
 11197                           ; BSR set to: 0
 11198                           ;inc\CANlib.h: 1027: RXF4SIDLbits.SID2 = 0x01 ;
 11199  0016C6  010F               	movlb	15	; () banked
 11200  0016C8  8F11               	bsf	17,7,b	;volatile
 11201  0016CA  D002               	goto	l4688
 11202  0016CC                     l509:
 11203                           
 11204                           ; BSR set to: 0
 11205                           ;inc\CANlib.h: 1028: else
 11206                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x00 ;
 11207  0016CC  010F               	movlb	15	; () banked
 11208  0016CE  9F11               	bcf	17,7,b	;volatile
 11209  0016D0                     l4688:
 11210                           
 11211                           ; BSR set to: 15
 11212                           ;inc\CANlib.h: 1031: tamp = (filter >> 21);
 11213  0016D0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 11214  0016D4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 11215  0016D8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 11216  0016DC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 11217  0016E0  0E16               	movlw	22
 11218  0016E2  D006               	goto	u5740
 11219  0016E4                     u5745:
 11220  0016E4  0100               	movlb	0	; () banked
 11221  0016E6  90D8               	bcf	status,0,c
 11222  0016E8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 11223  0016EA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 11224  0016EC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 11225  0016EE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 11226  0016F0                     u5740:
 11227  0016F0  2EE8               	decfsz	wreg,f,c
 11228  0016F2  D7F8               	goto	u5745
 11229  0016F4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11230  0016F8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11231  0016FC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11232  001700  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11233                           
 11234                           ; BSR set to: 0
 11235                           ;inc\CANlib.h: 1032: tamp = tamp & 0x000000FF;
 11236  001704  0100               	movlb	0	; () banked
 11237  001706  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 11238  001708  0100               	movlb	0	; () banked
 11239  00170A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11240  00170C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11241  00170E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11242  001710  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11243                           
 11244                           ; BSR set to: 0
 11245                           ;inc\CANlib.h: 1033: RXF4SIDH = (unsigned char) tamp;
 11246  001712  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 11247  001716                     l4694:
 11248                           
 11249                           ; BSR set to: 0
 11250                           ;inc\CANlib.h: 1034: }
 11251                           ;inc\CANlib.h: 1036: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 11252  001716  0E05               	movlw	5
 11253  001718  0100               	movlb	0	; () banked
 11254  00171A  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 11255  00171C  A4D8               	btfss	status,2,c
 11256  00171E  0012               	return	
 11257                           
 11258                           ; BSR set to: 0
 11259  001720  0EF7               	movlw	247
 11260  001722  0100               	movlb	0	; () banked
 11261  001724  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 11262  001726  A4D8               	btfss	status,2,c
 11263  001728  0012               	return	
 11264                           
 11265                           ; BSR set to: 0
 11266                           ;inc\CANlib.h: 1037: {
 11267                           ;inc\CANlib.h: 1038: RXF5SIDLbits.EXIDEN = 0x01;
 11268  00172A  010F               	movlb	15	; () banked
 11269  00172C  8715               	bsf	21,3,b	;volatile
 11270                           
 11271                           ; BSR set to: 15
 11272                           ;inc\CANlib.h: 1040: tamp = filter & 0x000000FF;
 11273  00172E  0100               	movlb	0	; () banked
 11274  001730  5177               	movf	CANSetFilter@filter& (0+255),w,b
 11275  001732  0100               	movlb	0	; () banked
 11276  001734  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11277  001736  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11278  001738  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11279  00173A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11280                           
 11281                           ; BSR set to: 0
 11282                           ;inc\CANlib.h: 1041: RXF5EIDL = (unsigned char) tamp;
 11283  00173C  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 11284                           
 11285                           ; BSR set to: 0
 11286                           ;inc\CANlib.h: 1043: tamp = filter & 0x0000FF00;
 11287  001740  0E00               	movlw	0
 11288  001742  0100               	movlb	0	; () banked
 11289  001744  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 11290  001746  0100               	movlb	0	; () banked
 11291  001748  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11292  00174A  0EFF               	movlw	255
 11293  00174C  0100               	movlb	0	; () banked
 11294  00174E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 11295  001750  0100               	movlb	0	; () banked
 11296  001752  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 11297  001754  0E00               	movlw	0
 11298  001756  0100               	movlb	0	; () banked
 11299  001758  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 11300  00175A  0100               	movlb	0	; () banked
 11301  00175C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 11302  00175E  0E00               	movlw	0
 11303  001760  0100               	movlb	0	; () banked
 11304  001762  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 11305  001764  0100               	movlb	0	; () banked
 11306  001766  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 11307                           
 11308                           ; BSR set to: 0
 11309                           ;inc\CANlib.h: 1044: tamp = tamp >> 8;
 11310  001768  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 11311  00176C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 11312  001770  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 11313  001774  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 11314  001778  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 11315  00177C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 11316  001780  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 11317  001784  0100               	movlb	0	; () banked
 11318  001786  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 11319  001788  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11320  00178C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11321  001790  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11322  001794  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11323                           
 11324                           ; BSR set to: 0
 11325                           ;inc\CANlib.h: 1045: RXF5EIDH = (unsigned char) tamp;
 11326  001798  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 11327                           
 11328                           ; BSR set to: 0
 11329                           ;inc\CANlib.h: 1047: if (filter & 0x00010000)
 11330  00179C  0100               	movlb	0	; () banked
 11331  00179E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 11332  0017A0  D003               	goto	l512
 11333                           
 11334                           ; BSR set to: 0
 11335                           ;inc\CANlib.h: 1048: RXF5SIDLbits.EID16 = 0x01;
 11336  0017A2  010F               	movlb	15	; () banked
 11337  0017A4  8115               	bsf	21,0,b	;volatile
 11338  0017A6  D002               	goto	l513
 11339  0017A8                     l512:
 11340                           
 11341                           ; BSR set to: 0
 11342                           ;inc\CANlib.h: 1049: else
 11343                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x00;
 11344  0017A8  010F               	movlb	15	; () banked
 11345  0017AA  9115               	bcf	21,0,b	;volatile
 11346  0017AC                     l513:
 11347                           
 11348                           ; BSR set to: 15
 11349                           ;inc\CANlib.h: 1052: if (filter & 0x00020000)
 11350  0017AC  0100               	movlb	0	; () banked
 11351  0017AE  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 11352  0017B0  D003               	goto	l514
 11353                           
 11354                           ; BSR set to: 0
 11355                           ;inc\CANlib.h: 1053: RXF5SIDLbits.EID17 = 0x01;
 11356  0017B2  010F               	movlb	15	; () banked
 11357  0017B4  8315               	bsf	21,1,b	;volatile
 11358  0017B6  D002               	goto	l515
 11359  0017B8                     l514:
 11360                           
 11361                           ; BSR set to: 0
 11362                           ;inc\CANlib.h: 1054: else
 11363                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x00;
 11364  0017B8  010F               	movlb	15	; () banked
 11365  0017BA  9315               	bcf	21,1,b	;volatile
 11366  0017BC                     l515:
 11367                           
 11368                           ; BSR set to: 15
 11369                           ;inc\CANlib.h: 1057: if (filter & 0x00040000)
 11370  0017BC  0100               	movlb	0	; () banked
 11371  0017BE  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 11372  0017C0  D003               	goto	l516
 11373                           
 11374                           ; BSR set to: 0
 11375                           ;inc\CANlib.h: 1058: RXF5SIDLbits.SID0 = 0x01;
 11376  0017C2  010F               	movlb	15	; () banked
 11377  0017C4  8B15               	bsf	21,5,b	;volatile
 11378  0017C6  D002               	goto	l517
 11379  0017C8                     l516:
 11380                           
 11381                           ; BSR set to: 0
 11382                           ;inc\CANlib.h: 1059: else
 11383                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x00;
 11384  0017C8  010F               	movlb	15	; () banked
 11385  0017CA  9B15               	bcf	21,5,b	;volatile
 11386  0017CC                     l517:
 11387                           
 11388                           ; BSR set to: 15
 11389                           ;inc\CANlib.h: 1062: if (filter & 0x00080000)
 11390  0017CC  0100               	movlb	0	; () banked
 11391  0017CE  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 11392  0017D0  D003               	goto	l518
 11393                           
 11394                           ; BSR set to: 0
 11395                           ;inc\CANlib.h: 1063: RXF5SIDLbits.SID1 = 0x01;
 11396  0017D2  010F               	movlb	15	; () banked
 11397  0017D4  8D15               	bsf	21,6,b	;volatile
 11398  0017D6  D002               	goto	l519
 11399  0017D8                     l518:
 11400                           
 11401                           ; BSR set to: 0
 11402                           ;inc\CANlib.h: 1064: else
 11403                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x00;
 11404  0017D8  010F               	movlb	15	; () banked
 11405  0017DA  9D15               	bcf	21,6,b	;volatile
 11406  0017DC                     l519:
 11407                           
 11408                           ; BSR set to: 15
 11409                           ;inc\CANlib.h: 1067: if (filter & 0x00100000)
 11410  0017DC  0100               	movlb	0	; () banked
 11411  0017DE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 11412  0017E0  D003               	goto	l520
 11413                           
 11414                           ; BSR set to: 0
 11415                           ;inc\CANlib.h: 1068: RXF5SIDLbits.SID2 = 0x01 ;
 11416  0017E2  010F               	movlb	15	; () banked
 11417  0017E4  8F15               	bsf	21,7,b	;volatile
 11418  0017E6  D002               	goto	l4722
 11419  0017E8                     l520:
 11420                           
 11421                           ; BSR set to: 0
 11422                           ;inc\CANlib.h: 1069: else
 11423                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x00 ;
 11424  0017E8  010F               	movlb	15	; () banked
 11425  0017EA  9F15               	bcf	21,7,b	;volatile
 11426  0017EC                     l4722:
 11427                           
 11428                           ; BSR set to: 15
 11429                           ;inc\CANlib.h: 1072: tamp = (filter >> 21);
 11430  0017EC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 11431  0017F0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 11432  0017F4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 11433  0017F8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 11434  0017FC  0E16               	movlw	22
 11435  0017FE  D006               	goto	u5820
 11436  001800                     u5825:
 11437  001800  0100               	movlb	0	; () banked
 11438  001802  90D8               	bcf	status,0,c
 11439  001804  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 11440  001806  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 11441  001808  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 11442  00180A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 11443  00180C                     u5820:
 11444  00180C  2EE8               	decfsz	wreg,f,c
 11445  00180E  D7F8               	goto	u5825
 11446  001810  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11447  001814  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11448  001818  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11449  00181C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11450                           
 11451                           ; BSR set to: 0
 11452                           ;inc\CANlib.h: 1073: tamp = tamp & 0x000000FF;
 11453  001820  0100               	movlb	0	; () banked
 11454  001822  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 11455  001824  0100               	movlb	0	; () banked
 11456  001826  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11457  001828  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11458  00182A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11459  00182C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11460                           
 11461                           ; BSR set to: 0
 11462                           ;inc\CANlib.h: 1074: RXF5SIDH = (unsigned char) tamp;
 11463  00182E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 11464  001832  0012               	return	
 11465  001834                     __end_of_CANSetFilter:
 11466                           	opt stack 0
 11467                           tblptru	equ	0xFF8
 11468                           tblptrh	equ	0xFF7
 11469                           tblptrl	equ	0xFF6
 11470                           tablat	equ	0xFF5
 11471                           prodh	equ	0xFF4
 11472                           prodl	equ	0xFF3
 11473                           intcon	equ	0xFF2
 11474                           intcon2	equ	0xFF1
 11475                           postinc0	equ	0xFEE
 11476                           wreg	equ	0xFE8
 11477                           indf2	equ	0xFDF
 11478                           postinc2	equ	0xFDE
 11479                           postdec2	equ	0xFDD
 11480                           fsr2h	equ	0xFDA
 11481                           fsr2l	equ	0xFD9
 11482                           status	equ	0xFD8
 11483                           
 11484 ;; *************** function _CANOperationMode *****************
 11485 ;; Defined at:
 11486 ;;		line 206 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 11487 ;; Parameters:    Size  Location     Type
 11488 ;;  mode            1    wreg     enum E16307
 11489 ;; Auto vars:     Size  Location     Type
 11490 ;;  mode            1   23[BANK0 ] enum E16307
 11491 ;; Return value:  Size  Location     Type
 11492 ;;		None               void
 11493 ;; Registers used:
 11494 ;;		wreg, status,2, status,0
 11495 ;; Tracked objects:
 11496 ;;		On entry : 0/0
 11497 ;;		On exit  : 0/0
 11498 ;;		Unchanged: 0/0
 11499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11501 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11503 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11504 ;;Total ram usage:        1 bytes
 11505 ;; Hardware stack levels used:    1
 11506 ;; Hardware stack levels required when called:    4
 11507 ;; This function calls:
 11508 ;;		Nothing
 11509 ;; This function is called by:
 11510 ;;		_CANInitialize
 11511 ;; This function uses a non-reentrant model
 11512 ;;
 11513                           
 11514                           	psect	text24
 11515  004E76                     __ptext24:
 11516                           	opt stack 0
 11517  004E76                     _CANOperationMode:
 11518                           	opt stack 24
 11519                           
 11520                           ; BSR set to: 0
 11521                           ;incstack = 0
 11522                           ;CANOperationMode@mode stored from wreg
 11523  004E76  0100               	movlb	0	; () banked
 11524  004E78  6F77               	movwf	CANOperationMode@mode& (0+255),b
 11525                           
 11526                           ;inc\CANlib.h: 208: CANCON = mode;
 11527  004E7A  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 11528  004E7E                     l4318:
 11529  004E7E  506E               	movf	3950,w,c	;volatile
 11530  004E80  0BE0               	andlw	224
 11531  004E82  0100               	movlb	0	; () banked
 11532  004E84  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 11533  004E86  B4D8               	btfsc	status,2,c
 11534  004E88  0012               	return	
 11535  004E8A  D7F9               	goto	l4318
 11536  004E8C                     __end_of_CANOperationMode:
 11537                           	opt stack 0
 11538                           tblptru	equ	0xFF8
 11539                           tblptrh	equ	0xFF7
 11540                           tblptrl	equ	0xFF6
 11541                           tablat	equ	0xFF5
 11542                           prodh	equ	0xFF4
 11543                           prodl	equ	0xFF3
 11544                           intcon	equ	0xFF2
 11545                           intcon2	equ	0xFF1
 11546                           postinc0	equ	0xFEE
 11547                           wreg	equ	0xFE8
 11548                           indf2	equ	0xFDF
 11549                           postinc2	equ	0xFDE
 11550                           postdec2	equ	0xFDD
 11551                           fsr2h	equ	0xFDA
 11552                           fsr2l	equ	0xFD9
 11553                           status	equ	0xFD8
 11554                           
 11555 ;; *************** function _can_interpreter *****************
 11556 ;; Defined at:
 11557 ;;		line 273 in file "parcheggio.c"
 11558 ;; Parameters:    Size  Location     Type
 11559 ;;		None
 11560 ;; Auto vars:     Size  Location     Type
 11561 ;;		None
 11562 ;; Return value:  Size  Location     Type
 11563 ;;		None               void
 11564 ;; Registers used:
 11565 ;;		wreg, status,2, status,0
 11566 ;; Tracked objects:
 11567 ;;		On entry : 0/0
 11568 ;;		On exit  : 0/0
 11569 ;;		Unchanged: 0/0
 11570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11573 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11574 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11575 ;;Total ram usage:        4 bytes
 11576 ;; Hardware stack levels used:    1
 11577 ;; Hardware stack levels required when called:    4
 11578 ;; This function calls:
 11579 ;;		Nothing
 11580 ;; This function is called by:
 11581 ;;		_main
 11582 ;; This function uses a non-reentrant model
 11583 ;;
 11584                           
 11585                           	psect	text25
 11586  004CF2                     __ptext25:
 11587                           	opt stack 0
 11588  004CF2                     _can_interpreter:
 11589                           	opt stack 26
 11590                           
 11591                           ;parcheggio.c: 274: left_speed = data_speed_rx[1];
 11592                           
 11593                           ; BSR set to: 0
 11594                           ;incstack = 0
 11595  004CF2  C109  F03A         	movff	_data_speed_rx+1,_left_speed
 11596  004CF6  6A3B               	clrf	_left_speed+1,c
 11597                           
 11598                           ;parcheggio.c: 275: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 11599  004CF8  503A               	movf	_left_speed,w,c
 11600  004CFA  0100               	movlb	0	; () banked
 11601  004CFC  6F77               	movwf	??_can_interpreter& (0+255),b
 11602  004CFE  0101               	movlb	1	; () banked
 11603  004D00  5108               	movf	_data_speed_rx& (0+255),w,b
 11604  004D02  6E3A               	movwf	_left_speed,c
 11605  004D04  C077  F03B         	movff	??_can_interpreter,_left_speed+1
 11606                           
 11607                           ; BSR set to: 1
 11608                           ;parcheggio.c: 276: right_speed = data_speed_rx[3];
 11609  004D08  C10B  F03E         	movff	_data_speed_rx+3,_right_speed
 11610  004D0C  6A3F               	clrf	_right_speed+1,c
 11611                           
 11612                           ;parcheggio.c: 277: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 11613  004D0E  503E               	movf	_right_speed,w,c
 11614  004D10  0100               	movlb	0	; () banked
 11615  004D12  6F77               	movwf	??_can_interpreter& (0+255),b
 11616  004D14  0101               	movlb	1	; () banked
 11617  004D16  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 11618  004D18  6E3E               	movwf	_right_speed,c
 11619  004D1A  C077  F03F         	movff	??_can_interpreter,_right_speed+1
 11620                           
 11621                           ; BSR set to: 1
 11622                           ;parcheggio.c: 278: actual_speed = (right_speed + left_speed) / 2;
 11623  004D1E  503A               	movf	_left_speed,w,c
 11624  004D20  243E               	addwf	_right_speed,w,c
 11625  004D22  0100               	movlb	0	; () banked
 11626  004D24  6F77               	movwf	??_can_interpreter& (0+255),b
 11627  004D26  503B               	movf	_left_speed+1,w,c
 11628  004D28  203F               	addwfc	_right_speed+1,w,c
 11629  004D2A  0100               	movlb	0	; () banked
 11630  004D2C  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 11631  004D2E  90D8               	bcf	status,0,c
 11632  004D30  0100               	movlb	0	; () banked
 11633  004D32  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 11634  004D34  0100               	movlb	0	; () banked
 11635  004D36  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 11636  004D38  0100               	movlb	0	; () banked
 11637  004D3A  3177               	rrcf	??_can_interpreter& (0+255),w,b
 11638  004D3C  0100               	movlb	0	; () banked
 11639  004D3E  6FE1               	movwf	_actual_speed& (0+255),b
 11640  004D40  C079  F0E2         	movff	??_can_interpreter+2,_actual_speed+1
 11641                           
 11642                           ; BSR set to: 0
 11643  004D44  0012               	return		;funcret
 11644  004D46                     __end_of_can_interpreter:
 11645                           	opt stack 0
 11646                           tblptru	equ	0xFF8
 11647                           tblptrh	equ	0xFF7
 11648                           tblptrl	equ	0xFF6
 11649                           tablat	equ	0xFF5
 11650                           prodh	equ	0xFF4
 11651                           prodl	equ	0xFF3
 11652                           intcon	equ	0xFF2
 11653                           intcon2	equ	0xFF1
 11654                           postinc0	equ	0xFEE
 11655                           wreg	equ	0xFE8
 11656                           indf2	equ	0xFDF
 11657                           postinc2	equ	0xFDE
 11658                           postdec2	equ	0xFDD
 11659                           fsr2h	equ	0xFDA
 11660                           fsr2l	equ	0xFD9
 11661                           status	equ	0xFD8
 11662                           
 11663 ;; *************** function _ISR_Bassa *****************
 11664 ;; Defined at:
 11665 ;;		line 92 in file "parcheggio.c"
 11666 ;; Parameters:    Size  Location     Type
 11667 ;;		None
 11668 ;; Auto vars:     Size  Location     Type
 11669 ;;  i               1   34[COMRAM] unsigned char 
 11670 ;;  gigi            1   33[COMRAM] unsigned char 
 11671 ;; Return value:  Size  Location     Type
 11672 ;;		None               void
 11673 ;; Registers used:
 11674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11675 ;; Tracked objects:
 11676 ;;		On entry : 0/0
 11677 ;;		On exit  : 0/0
 11678 ;;		Unchanged: 0/0
 11679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11681 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11682 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11683 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11684 ;;Total ram usage:       23 bytes
 11685 ;; Hardware stack levels used:    1
 11686 ;; Hardware stack levels required when called:    3
 11687 ;; This function calls:
 11688 ;;		_CANreceiveMessage
 11689 ;; This function is called by:
 11690 ;;		Interrupt level 1
 11691 ;; This function uses a non-reentrant model
 11692 ;;
 11693                           
 11694                           	psect	intcodelo
 11695  000018                     __pintcodelo:
 11696                           	opt stack 0
 11697  000018                     _ISR_Bassa:
 11698                           	opt stack 21
 11699                           
 11700                           ; BSR set to: 0
 11701                           ;incstack = 0
 11702  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 11703  00001A  CFD8 F011          	movff	status,??_ISR_Bassa+4
 11704  00001E  CFE8 F012          	movff	wreg,??_ISR_Bassa+5
 11705  000022  CFE0 F013          	movff	bsr,??_ISR_Bassa+6
 11706  000026  CFFA F014          	movff	pclath,??_ISR_Bassa+7
 11707  00002A  CFFB F015          	movff	pclatu,??_ISR_Bassa+8
 11708  00002E  CFE9 F016          	movff	fsr0l,??_ISR_Bassa+9
 11709  000032  CFEA F017          	movff	fsr0h,??_ISR_Bassa+10
 11710  000036  CFE1 F018          	movff	fsr1l,??_ISR_Bassa+11
 11711  00003A  CFE2 F019          	movff	fsr1h,??_ISR_Bassa+12
 11712  00003E  CFD9 F01A          	movff	fsr2l,??_ISR_Bassa+13
 11713  000042  CFDA F01B          	movff	fsr2h,??_ISR_Bassa+14
 11714  000046  CFF3 F01C          	movff	prodl,??_ISR_Bassa+15
 11715  00004A  CFF4 F01D          	movff	prodh,??_ISR_Bassa+16
 11716  00004E  CFF6 F01E          	movff	tblptrl,??_ISR_Bassa+17
 11717  000052  CFF7 F01F          	movff	tblptrh,??_ISR_Bassa+18
 11718  000056  CFF8 F020          	movff	tblptru,??_ISR_Bassa+19
 11719  00005A  CFF5 F021          	movff	tablat,??_ISR_Bassa+20
 11720                           
 11721                           ;parcheggio.c: 94: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 11722  00005E  A0A4               	btfss	4004,0,c	;volatile
 11723  000060  B2A4               	btfsc	4004,1,c	;volatile
 11724  000062  D001               	goto	i1l5254
 11725  000064  D090               	goto	i1l657
 11726  000066                     i1l5254:
 11727                           
 11728                           ;parcheggio.c: 95: CANreceiveMessage(&msg);
 11729  000066  0E20               	movlw	low _msg
 11730  000068  6E01               	movwf	CANreceiveMessage@msg,c
 11731  00006A  0E01               	movlw	high _msg
 11732  00006C  6E02               	movwf	CANreceiveMessage@msg+1,c
 11733  00006E  ECE0  F00F         	call	_CANreceiveMessage	;wreg free
 11734                           
 11735                           ;parcheggio.c: 97: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 11736  000072  0E07               	movlw	7
 11737  000074  0101               	movlb	1	; () banked
 11738  000076  1920               	xorwf	_msg& (0+255),w,b
 11739  000078  0101               	movlb	1	; () banked
 11740  00007A  1121               	iorwf	(_msg+1)& (0+255),w,b
 11741  00007C  0101               	movlb	1	; () banked
 11742  00007E  1122               	iorwf	(_msg+2)& (0+255),w,b
 11743  000080  0101               	movlb	1	; () banked
 11744  000082  1123               	iorwf	(_msg+3)& (0+255),w,b
 11745  000084  A4D8               	btfss	status,2,c
 11746  000086  D02C               	goto	i1l5270
 11747                           
 11748                           ; BSR set to: 1
 11749  000088  0101               	movlb	1	; () banked
 11750  00008A  052E               	decf	(_msg+14)& (0+255),w,b
 11751  00008C  B4D8               	btfsc	status,2,c
 11752  00008E  D028               	goto	i1l5270
 11753                           
 11754                           ; BSR set to: 1
 11755                           ;parcheggio.c: 98: distance_average = 0;
 11756  000090  0E00               	movlw	0
 11757  000092  0100               	movlb	0	; () banked
 11758  000094  6FE4               	movwf	(_distance_average+1)& (0+255),b	;volatile
 11759  000096  0E00               	movlw	0
 11760  000098  6FE3               	movwf	_distance_average& (0+255),b	;volatile
 11761                           
 11762                           ; BSR set to: 0
 11763                           ;parcheggio.c: 99: distance_dx = msg.data[1];
 11764  00009A  C125  F036         	movff	_msg+5,_distance_dx	;volatile
 11765  00009E  6A37               	clrf	_distance_dx+1,c	;volatile
 11766                           
 11767                           ;parcheggio.c: 100: distance_dx = ((distance_dx << 8) | msg.data[0]);
 11768  0000A0  5036               	movf	_distance_dx,w,c	;volatile
 11769  0000A2  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 11770  0000A4  0101               	movlb	1	; () banked
 11771  0000A6  5124               	movf	(_msg+4)& (0+255),w,b
 11772  0000A8  6E36               	movwf	_distance_dx,c	;volatile
 11773  0000AA  C00D  F037         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 11774                           
 11775                           ; BSR set to: 1
 11776                           ;parcheggio.c: 101: distance_sx = msg.data[3];
 11777  0000AE  C127  F038         	movff	_msg+7,_distance_sx	;volatile
 11778  0000B2  6A39               	clrf	_distance_sx+1,c	;volatile
 11779                           
 11780                           ;parcheggio.c: 102: distance_sx = ((distance_sx << 8) | msg.data[2]);
 11781  0000B4  5038               	movf	_distance_sx,w,c	;volatile
 11782  0000B6  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 11783  0000B8  0101               	movlb	1	; () banked
 11784  0000BA  5126               	movf	(_msg+6)& (0+255),w,b
 11785  0000BC  6E38               	movwf	_distance_sx,c	;volatile
 11786  0000BE  C00D  F039         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 11787                           
 11788                           ; BSR set to: 1
 11789                           ;parcheggio.c: 103: distance_average = (distance_sx + distance_dx) / 2;
 11790  0000C2  5036               	movf	_distance_dx,w,c	;volatile
 11791  0000C4  2438               	addwf	_distance_sx,w,c	;volatile
 11792  0000C6  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 11793  0000C8  5037               	movf	_distance_dx+1,w,c	;volatile
 11794  0000CA  2039               	addwfc	_distance_sx+1,w,c	;volatile
 11795  0000CC  6E0E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 11796  0000CE  90D8               	bcf	status,0,c
 11797  0000D0  300E               	rrcf	??_ISR_Bassa+1,w,c
 11798  0000D2  6E0F               	movwf	(??_ISR_Bassa+2)& (0+255),c
 11799  0000D4  300D               	rrcf	??_ISR_Bassa,w,c
 11800  0000D6  0100               	movlb	0	; () banked
 11801  0000D8  6FE3               	movwf	_distance_average& (0+255),b	;volatile
 11802  0000DA  C00F  F0E4         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 11803                           
 11804                           ; BSR set to: 0
 11805                           ;parcheggio.c: 104: distance_received = 1;
 11806  0000DE  8646               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 11807  0000E0                     i1l5270:
 11808                           
 11809                           ;parcheggio.c: 105: }
 11810                           ;parcheggio.c: 106: if (msg.identifier == 0b00000001010) {
 11811  0000E0  0E0A               	movlw	10
 11812  0000E2  0101               	movlb	1	; () banked
 11813  0000E4  1920               	xorwf	_msg& (0+255),w,b
 11814  0000E6  0101               	movlb	1	; () banked
 11815  0000E8  1121               	iorwf	(_msg+1)& (0+255),w,b
 11816  0000EA  0101               	movlb	1	; () banked
 11817  0000EC  1122               	iorwf	(_msg+2)& (0+255),w,b
 11818  0000EE  0101               	movlb	1	; () banked
 11819  0000F0  1123               	iorwf	(_msg+3)& (0+255),w,b
 11820  0000F2  A4D8               	btfss	status,2,c
 11821  0000F4  D00B               	goto	i1l5276
 11822                           
 11823                           ; BSR set to: 1
 11824                           ;parcheggio.c: 107: if (msg.data[0] == 1) {
 11825  0000F6  0101               	movlb	1	; () banked
 11826  0000F8  0524               	decf	(_msg+4)& (0+255),w,b
 11827  0000FA  A4D8               	btfss	status,2,c
 11828  0000FC  D003               	goto	i1l662
 11829                           
 11830                           ; BSR set to: 1
 11831                           ;parcheggio.c: 108: activation = 1;
 11832  0000FE  8046               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 11833                           
 11834                           ;parcheggio.c: 109: PORTBbits.RB6 = 1;
 11835  000100  8C81               	bsf	3969,6,c	;volatile
 11836                           
 11837                           ;parcheggio.c: 110: } else {
 11838  000102  D004               	goto	i1l5276
 11839  000104                     i1l662:
 11840                           
 11841                           ; BSR set to: 1
 11842                           ;parcheggio.c: 111: activation = 0;
 11843  000104  9046               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 11844                           
 11845                           ;parcheggio.c: 112: PORTBbits.RB4 = 0;
 11846  000106  9881               	bcf	3969,4,c	;volatile
 11847                           
 11848                           ;parcheggio.c: 113: PORTBbits.RB5 = 0;
 11849  000108  9A81               	bcf	3969,5,c	;volatile
 11850                           
 11851                           ;parcheggio.c: 114: PORTBbits.RB6 = 0;
 11852  00010A  9C81               	bcf	3969,6,c	;volatile
 11853  00010C                     i1l5276:
 11854                           
 11855                           ; BSR set to: 1
 11856                           ;parcheggio.c: 115: }
 11857                           ;parcheggio.c: 116: }
 11858                           ;parcheggio.c: 117: if (msg.identifier == 0b00000001100) {
 11859  00010C  0E0C               	movlw	12
 11860  00010E  0101               	movlb	1	; () banked
 11861  000110  1920               	xorwf	_msg& (0+255),w,b
 11862  000112  0101               	movlb	1	; () banked
 11863  000114  1121               	iorwf	(_msg+1)& (0+255),w,b
 11864  000116  0101               	movlb	1	; () banked
 11865  000118  1122               	iorwf	(_msg+2)& (0+255),w,b
 11866  00011A  0101               	movlb	1	; () banked
 11867  00011C  1123               	iorwf	(_msg+3)& (0+255),w,b
 11868  00011E  B4D8               	btfsc	status,2,c
 11869                           
 11870                           ; BSR set to: 1
 11871                           ;parcheggio.c: 118: start_operation = 1;
 11872  000120  8C46               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 11873                           
 11874                           ; BSR set to: 1
 11875                           ;parcheggio.c: 119: }
 11876                           ;parcheggio.c: 120: if (msg.identifier == 0b00000000110) {
 11877                           
 11878                           ; BSR set to: 1
 11879  000122  0E06               	movlw	6
 11880  000124  0101               	movlb	1	; () banked
 11881  000126  1920               	xorwf	_msg& (0+255),w,b
 11882  000128  0101               	movlb	1	; () banked
 11883  00012A  1121               	iorwf	(_msg+1)& (0+255),w,b
 11884  00012C  0101               	movlb	1	; () banked
 11885  00012E  1122               	iorwf	(_msg+2)& (0+255),w,b
 11886  000130  0101               	movlb	1	; () banked
 11887  000132  1123               	iorwf	(_msg+3)& (0+255),w,b
 11888  000134  A4D8               	btfss	status,2,c
 11889  000136  D025               	goto	i1l665
 11890                           
 11891                           ; BSR set to: 1
 11892                           ;parcheggio.c: 121: for (unsigned char i = 0; i < 8; i++) {
 11893  000138  0E00               	movlw	0
 11894  00013A  6E23               	movwf	ISR_Bassa@i,c
 11895  00013C                     i1l5284:
 11896                           
 11897                           ; BSR set to: 1
 11898  00013C  0E07               	movlw	7
 11899  00013E  6423               	cpfsgt	ISR_Bassa@i,c
 11900  000140  D001               	goto	i1l5288
 11901  000142  D014               	goto	i1l5294
 11902  000144                     i1l5288:
 11903                           
 11904                           ;parcheggio.c: 122: data_speed_rx[i] = msg.data[i];
 11905  000144  5023               	movf	ISR_Bassa@i,w,c
 11906  000146  0D01               	mullw	1
 11907  000148  0E24               	movlw	low (_msg+4)
 11908  00014A  24F3               	addwf	prodl,w,c
 11909  00014C  6ED9               	movwf	fsr2l,c
 11910  00014E  0E01               	movlw	high (_msg+4)
 11911  000150  20F4               	addwfc	prodh,w,c
 11912  000152  6EDA               	movwf	fsr2h,c
 11913  000154  5023               	movf	ISR_Bassa@i,w,c
 11914  000156  0D01               	mullw	1
 11915  000158  0E08               	movlw	low _data_speed_rx
 11916  00015A  24F3               	addwf	prodl,w,c
 11917  00015C  6EE1               	movwf	fsr1l,c
 11918  00015E  0E01               	movlw	high _data_speed_rx
 11919  000160  20F4               	addwfc	prodh,w,c
 11920  000162  6EE2               	movwf	fsr1h,c
 11921  000164  CFDF FFE7          	movff	indf2,indf1
 11922  000168  2A23               	incf	ISR_Bassa@i,f,c
 11923  00016A  D7E8               	goto	i1l5284
 11924  00016C                     i1l5294:
 11925                           
 11926                           ;parcheggio.c: 123: }
 11927                           ;parcheggio.c: 124: if (msg.identifier == 0b00000001101) {
 11928  00016C  0E0D               	movlw	13
 11929  00016E  0101               	movlb	1	; () banked
 11930  000170  1920               	xorwf	_msg& (0+255),w,b
 11931  000172  0101               	movlb	1	; () banked
 11932  000174  1121               	iorwf	(_msg+1)& (0+255),w,b
 11933  000176  0101               	movlb	1	; () banked
 11934  000178  1122               	iorwf	(_msg+2)& (0+255),w,b
 11935  00017A  0101               	movlb	1	; () banked
 11936  00017C  1123               	iorwf	(_msg+3)& (0+255),w,b
 11937  00017E  B4D8               	btfsc	status,2,c
 11938                           
 11939                           ; BSR set to: 1
 11940                           ;parcheggio.c: 125: distance_wait = 0;
 11941  000180  9846               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 11942  000182                     i1l665:
 11943                           
 11944                           ; BSR set to: 1
 11945                           ;parcheggio.c: 126: }
 11946                           ;parcheggio.c: 128: }
 11947                           ;parcheggio.c: 130: PIR3bits.RXB0IF = 0;
 11948  000182  90A4               	bcf	4004,0,c	;volatile
 11949                           
 11950                           ;parcheggio.c: 131: PIR3bits.RXB1IF = 0;
 11951  000184  92A4               	bcf	4004,1,c	;volatile
 11952  000186                     i1l657:
 11953                           
 11954                           ;parcheggio.c: 132: }
 11955                           ;parcheggio.c: 134: if (INTCONbits.TMR0IF == 1) {
 11956  000186  A4F2               	btfss	intcon,2,c	;volatile
 11957  000188  D033               	goto	i1l672
 11958                           
 11959                           ;parcheggio.c: 135: INTCONbits.INT0IE = 0;
 11960  00018A  98F2               	bcf	intcon,4,c	;volatile
 11961                           
 11962                           ;parcheggio.c: 136: TMR0H = 0x34;
 11963  00018C  0E34               	movlw	52
 11964  00018E  6ED7               	movwf	4055,c	;volatile
 11965                           
 11966                           ;parcheggio.c: 137: TMR0L = 0xE0;
 11967  000190  0EE0               	movlw	224
 11968  000192  6ED6               	movwf	4054,c	;volatile
 11969                           
 11970                           ;parcheggio.c: 138: if (distance_error == 1) {
 11971  000194  A446               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 11972  000196  D00C               	goto	i1l5306
 11973                           
 11974                           ;parcheggio.c: 139: sensor_distance[MUX_index] = 5000;
 11975  000198  5042               	movf	_MUX_index,w,c	;volatile
 11976  00019A  0D02               	mullw	2
 11977  00019C  0E24               	movlw	low _sensor_distance
 11978  00019E  24F3               	addwf	prodl,w,c
 11979  0001A0  6ED9               	movwf	fsr2l,c
 11980  0001A2  0E00               	movlw	high _sensor_distance
 11981  0001A4  20F4               	addwfc	prodh,w,c
 11982  0001A6  6EDA               	movwf	fsr2h,c
 11983  0001A8  0E88               	movlw	136
 11984  0001AA  6EDE               	movwf	postinc2,c
 11985  0001AC  0E13               	movlw	19
 11986  0001AE  6EDD               	movwf	postdec2,c
 11987  0001B0                     i1l5306:
 11988                           
 11989                           ;parcheggio.c: 140: }
 11990                           ;parcheggio.c: 141: MUX_index++;
 11991  0001B0  2A42               	incf	_MUX_index,f,c	;volatile
 11992                           
 11993                           ;parcheggio.c: 142: if (MUX_index == 8) {
 11994  0001B2  0E08               	movlw	8
 11995  0001B4  1842               	xorwf	_MUX_index,w,c	;volatile
 11996  0001B6  A4D8               	btfss	status,2,c
 11997  0001B8  D002               	goto	i1l671
 11998                           
 11999                           ;parcheggio.c: 143: MUX_index = 0;
 12000  0001BA  0E00               	movlw	0
 12001  0001BC  6E42               	movwf	_MUX_index,c	;volatile
 12002  0001BE                     i1l671:
 12003                           
 12004                           ;parcheggio.c: 144: }
 12005                           ;parcheggio.c: 146: unsigned char gigi = 0;
 12006  0001BE  0E00               	movlw	0
 12007  0001C0  6E22               	movwf	ISR_Bassa@gigi,c
 12008                           
 12009                           ;parcheggio.c: 147: gigi = MUX_select[MUX_index];
 12010  0001C2  5042               	movf	_MUX_index,w,c	;volatile
 12011  0001C4  0D01               	mullw	1
 12012  0001C6  0E00               	movlw	low _MUX_select
 12013  0001C8  24F3               	addwf	prodl,w,c
 12014  0001CA  6ED9               	movwf	fsr2l,c
 12015  0001CC  0E01               	movlw	high _MUX_select
 12016  0001CE  20F4               	addwfc	prodh,w,c
 12017  0001D0  6EDA               	movwf	fsr2h,c
 12018  0001D2  50DF               	movf	indf2,w,c
 12019  0001D4  6E22               	movwf	ISR_Bassa@gigi,c
 12020                           
 12021                           ;parcheggio.c: 148: PORTA = gigi;
 12022  0001D6  C022  FF80         	movff	ISR_Bassa@gigi,3968	;volatile
 12023                           
 12024                           ;parcheggio.c: 149: TRISBbits.RB0 = 0;
 12025  0001DA  9093               	bcf	3987,0,c	;volatile
 12026                           
 12027                           ;parcheggio.c: 150: LATBbits.LATB0 = 1;
 12028  0001DC  808A               	bsf	3978,0,c	;volatile
 12029                           
 12030                           ;parcheggio.c: 151: _delay((unsigned long)((15)*(16000000/4000000.0)));
 12031  0001DE  0E14               	movlw	20
 12032  0001E0                     i1u809_27:
 12033  0001E0  2EE8               	decfsz	wreg,f,c
 12034  0001E2  D7FE               	goto	i1u809_27
 12035                           
 12036                           ;parcheggio.c: 152: distance_error = 1;
 12037  0001E4  8446               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 12038                           
 12039                           ;parcheggio.c: 153: LATBbits.LATB0 = 0;
 12040  0001E6  908A               	bcf	3978,0,c	;volatile
 12041                           
 12042                           ;parcheggio.c: 154: TRISBbits.RB0 = 1;
 12043  0001E8  8093               	bsf	3987,0,c	;volatile
 12044                           
 12045                           ;parcheggio.c: 155: INTCONbits.INT0IF = 0;
 12046  0001EA  92F2               	bcf	intcon,1,c	;volatile
 12047                           
 12048                           ;parcheggio.c: 156: INTCONbits.INT0IE = 1;
 12049  0001EC  88F2               	bsf	intcon,4,c	;volatile
 12050                           
 12051                           ;parcheggio.c: 157: INTCONbits.TMR0IF = 0;
 12052  0001EE  94F2               	bcf	intcon,2,c	;volatile
 12053  0001F0                     i1l672:
 12054  0001F0  C021  FFF5         	movff	??_ISR_Bassa+20,tablat
 12055  0001F4  C020  FFF8         	movff	??_ISR_Bassa+19,tblptru
 12056  0001F8  C01F  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 12057  0001FC  C01E  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 12058  000200  C01D  FFF4         	movff	??_ISR_Bassa+16,prodh
 12059  000204  C01C  FFF3         	movff	??_ISR_Bassa+15,prodl
 12060  000208  C01B  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 12061  00020C  C01A  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 12062  000210  C019  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 12063  000214  C018  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 12064  000218  C017  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 12065  00021C  C016  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 12066  000220  C015  FFFB         	movff	??_ISR_Bassa+8,pclatu
 12067  000224  C014  FFFA         	movff	??_ISR_Bassa+7,pclath
 12068  000228  C013  FFE0         	movff	??_ISR_Bassa+6,bsr
 12069  00022C  C012  FFE8         	movff	??_ISR_Bassa+5,wreg
 12070  000230  C011  FFD8         	movff	??_ISR_Bassa+4,status
 12071  000234  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 12072  000236  0010               	retfie	
 12073  000238                     __end_of_ISR_Bassa:
 12074                           	opt stack 0
 12075                           pclatu	equ	0xFFB
 12076                           pclath	equ	0xFFA
 12077                           tblptru	equ	0xFF8
 12078                           tblptrh	equ	0xFF7
 12079                           tblptrl	equ	0xFF6
 12080                           tablat	equ	0xFF5
 12081                           prodh	equ	0xFF4
 12082                           prodl	equ	0xFF3
 12083                           intcon	equ	0xFF2
 12084                           intcon2	equ	0xFF1
 12085                           postinc0	equ	0xFEE
 12086                           fsr0h	equ	0xFEA
 12087                           fsr0l	equ	0xFE9
 12088                           wreg	equ	0xFE8
 12089                           indf1	equ	0xFE7
 12090                           fsr1h	equ	0xFE2
 12091                           fsr1l	equ	0xFE1
 12092                           bsr	equ	0xFE0
 12093                           indf2	equ	0xFDF
 12094                           postinc2	equ	0xFDE
 12095                           postdec2	equ	0xFDD
 12096                           fsr2h	equ	0xFDA
 12097                           fsr2l	equ	0xFD9
 12098                           status	equ	0xFD8
 12099                           
 12100 ;; *************** function _CANreceiveMessage *****************
 12101 ;; Defined at:
 12102 ;;		line 527 in file "../../Drive/librerie/LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 12103 ;; Parameters:    Size  Location     Type
 12104 ;;  msg             2    0[COMRAM] PTR struct .
 12105 ;;		 -> msg(15), 
 12106 ;; Auto vars:     Size  Location     Type
 12107 ;;  tamp            1   11[COMRAM] unsigned char 
 12108 ;;  error           1   10[COMRAM] unsigned char 
 12109 ;; Return value:  Size  Location     Type
 12110 ;;                  1    wreg      unsigned char 
 12111 ;; Registers used:
 12112 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12113 ;; Tracked objects:
 12114 ;;		On entry : 0/0
 12115 ;;		On exit  : 0/0
 12116 ;;		Unchanged: 0/0
 12117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12119 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12120 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12121 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12122 ;;Total ram usage:       12 bytes
 12123 ;; Hardware stack levels used:    1
 12124 ;; Hardware stack levels required when called:    2
 12125 ;; This function calls:
 12126 ;;		Nothing
 12127 ;; This function is called by:
 12128 ;;		_ISR_Bassa
 12129 ;; This function uses a non-reentrant model
 12130 ;;
 12131                           
 12132                           	psect	text27
 12133  001FC0                     __ptext27:
 12134                           	opt stack 0
 12135  001FC0                     _CANreceiveMessage:
 12136                           	opt stack 21
 12137                           
 12138                           ;inc\CANlib.h: 529: BYTE tamp;
 12139                           ;inc\CANlib.h: 530: BYTE error = 0;
 12140                           
 12141                           ;incstack = 0
 12142  001FC0  0E00               	movlw	0
 12143  001FC2  6E0B               	movwf	CANreceiveMessage@error,c
 12144                           
 12145                           ;inc\CANlib.h: 532: if (COMSTATbits.RXB0OVFL == 0x01)
 12146  001FC4  BE74               	btfsc	3956,7,c	;volatile
 12147                           
 12148                           ;inc\CANlib.h: 533: error |= CAN_RX_BUFFER_1_OVFL;
 12149  001FC6  800B               	bsf	CANreceiveMessage@error,0,c
 12150                           
 12151                           ;inc\CANlib.h: 535: if (COMSTATbits.RXB1OVFL == 0x01)
 12152  001FC8  BC74               	btfsc	3956,6,c	;volatile
 12153                           
 12154                           ;inc\CANlib.h: 536: error |= CAN_RX_BUFFER_2_OVFL;
 12155  001FCA  820B               	bsf	CANreceiveMessage@error,1,c
 12156                           
 12157                           ;inc\CANlib.h: 539: if (RXB1CONbits.RXFUL ==0x01)
 12158  001FCC  010F               	movlb	15	; () banked
 12159  001FCE  AF50               	btfss	80,7,b	;volatile
 12160  001FD0  D143               	goto	i1l404
 12161                           
 12162                           ; BSR set to: 15
 12163                           ;inc\CANlib.h: 540: {
 12164                           ;inc\CANlib.h: 541: msg->identifier = 0;
 12165  001FD2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12166  001FD6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12167  001FDA  6ADE               	clrf	postinc2,c
 12168  001FDC  6ADE               	clrf	postinc2,c
 12169  001FDE  6ADE               	clrf	postinc2,c
 12170  001FE0  6ADD               	clrf	postdec2,c
 12171                           
 12172                           ; BSR set to: 15
 12173                           ;inc\CANlib.h: 542: msg->data[0] =RXB1D0;
 12174  001FE2  EE20 F004          	lfsr	2,4
 12175  001FE6  5001               	movf	CANreceiveMessage@msg,w,c
 12176  001FE8  26D9               	addwf	fsr2l,f,c
 12177  001FEA  5002               	movf	CANreceiveMessage@msg+1,w,c
 12178  001FEC  22DA               	addwfc	fsr2h,f,c
 12179  001FEE  CF56 FFDF          	movff	3926,indf2	;volatile
 12180                           
 12181                           ; BSR set to: 15
 12182                           ;inc\CANlib.h: 543: msg->data[1] =RXB1D1;
 12183  001FF2  EE20 F005          	lfsr	2,5
 12184  001FF6  5001               	movf	CANreceiveMessage@msg,w,c
 12185  001FF8  26D9               	addwf	fsr2l,f,c
 12186  001FFA  5002               	movf	CANreceiveMessage@msg+1,w,c
 12187  001FFC  22DA               	addwfc	fsr2h,f,c
 12188  001FFE  CF57 FFDF          	movff	3927,indf2	;volatile
 12189                           
 12190                           ; BSR set to: 15
 12191                           ;inc\CANlib.h: 544: msg->data[2] =RXB1D2;
 12192  002002  EE20 F006          	lfsr	2,6
 12193  002006  5001               	movf	CANreceiveMessage@msg,w,c
 12194  002008  26D9               	addwf	fsr2l,f,c
 12195  00200A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12196  00200C  22DA               	addwfc	fsr2h,f,c
 12197  00200E  CF58 FFDF          	movff	3928,indf2	;volatile
 12198                           
 12199                           ; BSR set to: 15
 12200                           ;inc\CANlib.h: 545: msg->data[3] =RXB1D3;
 12201  002012  EE20 F007          	lfsr	2,7
 12202  002016  5001               	movf	CANreceiveMessage@msg,w,c
 12203  002018  26D9               	addwf	fsr2l,f,c
 12204  00201A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12205  00201C  22DA               	addwfc	fsr2h,f,c
 12206  00201E  CF59 FFDF          	movff	3929,indf2	;volatile
 12207                           
 12208                           ; BSR set to: 15
 12209                           ;inc\CANlib.h: 546: msg->data[4] =RXB1D4;
 12210  002022  EE20 F008          	lfsr	2,8
 12211  002026  5001               	movf	CANreceiveMessage@msg,w,c
 12212  002028  26D9               	addwf	fsr2l,f,c
 12213  00202A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12214  00202C  22DA               	addwfc	fsr2h,f,c
 12215  00202E  CF5A FFDF          	movff	3930,indf2	;volatile
 12216                           
 12217                           ; BSR set to: 15
 12218                           ;inc\CANlib.h: 547: msg->data[5] =RXB1D5;
 12219  002032  EE20 F009          	lfsr	2,9
 12220  002036  5001               	movf	CANreceiveMessage@msg,w,c
 12221  002038  26D9               	addwf	fsr2l,f,c
 12222  00203A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12223  00203C  22DA               	addwfc	fsr2h,f,c
 12224  00203E  CF5B FFDF          	movff	3931,indf2	;volatile
 12225                           
 12226                           ; BSR set to: 15
 12227                           ;inc\CANlib.h: 548: msg->data[6] =RXB1D6;
 12228  002042  EE20 F00A          	lfsr	2,10
 12229  002046  5001               	movf	CANreceiveMessage@msg,w,c
 12230  002048  26D9               	addwf	fsr2l,f,c
 12231  00204A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12232  00204C  22DA               	addwfc	fsr2h,f,c
 12233  00204E  CF5C FFDF          	movff	3932,indf2	;volatile
 12234                           
 12235                           ; BSR set to: 15
 12236                           ;inc\CANlib.h: 549: msg->data[7] =RXB1D7;
 12237  002052  EE20 F00B          	lfsr	2,11
 12238  002056  5001               	movf	CANreceiveMessage@msg,w,c
 12239  002058  26D9               	addwf	fsr2l,f,c
 12240  00205A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12241  00205C  22DA               	addwfc	fsr2h,f,c
 12242  00205E  CF5D FFDF          	movff	3933,indf2	;volatile
 12243                           
 12244                           ; BSR set to: 15
 12245                           ;inc\CANlib.h: 551: msg->RTR = RXB1DLCbits.RXRTR;
 12246  002062  EE20 F00E          	lfsr	2,14
 12247  002066  5001               	movf	CANreceiveMessage@msg,w,c
 12248  002068  26D9               	addwf	fsr2l,f,c
 12249  00206A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12250  00206C  22DA               	addwfc	fsr2h,f,c
 12251  00206E  010F               	movlb	15	; () banked
 12252  002070  AD55               	btfss	85,6,b	;volatile
 12253  002072  D002               	goto	i1u620_20
 12254  002074  0E01               	movlw	1
 12255  002076  D001               	goto	i1u620_26
 12256  002078                     i1u620_20:
 12257  002078  0E00               	movlw	0
 12258  00207A                     i1u620_26:
 12259  00207A  6EDF               	movwf	indf2,c
 12260                           
 12261                           ; BSR set to: 15
 12262                           ;inc\CANlib.h: 553: msg->length = RXB1DLC & 0x0F;
 12263  00207C  EE20 F00D          	lfsr	2,13
 12264  002080  5001               	movf	CANreceiveMessage@msg,w,c
 12265  002082  26D9               	addwf	fsr2l,f,c
 12266  002084  5002               	movf	CANreceiveMessage@msg+1,w,c
 12267  002086  22DA               	addwfc	fsr2h,f,c
 12268  002088  010F               	movlb	15	; () banked
 12269  00208A  5155               	movf	85,w,b	;volatile
 12270  00208C  0B0F               	andlw	15
 12271  00208E  6EDF               	movwf	indf2,c
 12272                           
 12273                           ; BSR set to: 15
 12274                           ;inc\CANlib.h: 555: msg->type = RXB1SIDLbits.EXID;
 12275  002090  EE20 F00C          	lfsr	2,12
 12276  002094  5001               	movf	CANreceiveMessage@msg,w,c
 12277  002096  26D9               	addwf	fsr2l,f,c
 12278  002098  5002               	movf	CANreceiveMessage@msg+1,w,c
 12279  00209A  22DA               	addwfc	fsr2h,f,c
 12280  00209C  010F               	movlb	15	; () banked
 12281  00209E  A752               	btfss	82,3,b	;volatile
 12282  0020A0  D002               	goto	i1u621_20
 12283  0020A2  0E01               	movlw	1
 12284  0020A4  D001               	goto	i1u621_26
 12285  0020A6                     i1u621_20:
 12286  0020A6  0E00               	movlw	0
 12287  0020A8                     i1u621_26:
 12288  0020A8  6EDF               	movwf	indf2,c
 12289                           
 12290                           ; BSR set to: 15
 12291                           ;inc\CANlib.h: 557: if (RXB1SIDLbits.EXID == 0)
 12292  0020AA  010F               	movlb	15	; () banked
 12293  0020AC  B752               	btfsc	82,3,b	;volatile
 12294  0020AE  D044               	goto	i1l5008
 12295                           
 12296                           ; BSR set to: 15
 12297                           ;inc\CANlib.h: 558: {
 12298                           ;inc\CANlib.h: 559: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 12299  0020B0  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 12300  0020B4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12301  0020B6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12302  0020B8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12303  0020BA  0E03               	movlw	3
 12304  0020BC                     i1u623_25:
 12305  0020BC  90D8               	bcf	status,0,c
 12306  0020BE  3603               	rlcf	??_CANreceiveMessage,f,c
 12307  0020C0  3604               	rlcf	??_CANreceiveMessage+1,f,c
 12308  0020C2  3605               	rlcf	??_CANreceiveMessage+2,f,c
 12309  0020C4  3606               	rlcf	??_CANreceiveMessage+3,f,c
 12310  0020C6  2EE8               	decfsz	wreg,f,c
 12311  0020C8  D7F9               	goto	i1u623_25
 12312  0020CA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12313  0020CE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12314  0020D2  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 12315  0020D6  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 12316  0020DA  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 12317  0020DE  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 12318                           
 12319                           ; BSR set to: 15
 12320                           ;inc\CANlib.h: 560: tamp = (RXB1SIDL >> 5 ) & 0x07;
 12321  0020E2  010F               	movlb	15	; () banked
 12322  0020E4  3952               	swapf	82,w,b	;volatile
 12323  0020E6  42E8               	rrncf	wreg,f,c
 12324  0020E8  0B07               	andlw	7
 12325  0020EA  0B07               	andlw	7
 12326  0020EC  6E0C               	movwf	CANreceiveMessage@tamp,c
 12327                           
 12328                           ; BSR set to: 15
 12329                           ;inc\CANlib.h: 561: msg->identifier = msg->identifier + tamp;
 12330  0020EE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12331  0020F2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12332  0020F6  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 12333  0020FA  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 12334  0020FE  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 12335  002102  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 12336  002106  500C               	movf	CANreceiveMessage@tamp,w,c
 12337  002108  2403               	addwf	??_CANreceiveMessage,w,c
 12338  00210A  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 12339  00210C  0E00               	movlw	0
 12340  00210E  2004               	addwfc	??_CANreceiveMessage+1,w,c
 12341  002110  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 12342  002112  0E00               	movlw	0
 12343  002114  2005               	addwfc	??_CANreceiveMessage+2,w,c
 12344  002116  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 12345  002118  0E00               	movlw	0
 12346  00211A  2006               	addwfc	??_CANreceiveMessage+3,w,c
 12347  00211C  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 12348  00211E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12349  002122  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12350  002126  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 12351  00212A  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 12352  00212E  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 12353  002132  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 12354                           
 12355                           ;inc\CANlib.h: 562: }
 12356  002136  D08D               	goto	i1l5034
 12357  002138                     i1l5008:
 12358                           
 12359                           ; BSR set to: 15
 12360                           ;inc\CANlib.h: 563: else
 12361                           ;inc\CANlib.h: 564: {
 12362                           ;inc\CANlib.h: 565: msg->identifier = (unsigned long) RXB1EIDL;
 12363  002138  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
 12364  00213C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12365  00213E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12366  002140  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12367  002142  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12368  002146  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12369  00214A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 12370  00214E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 12371  002152  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 12372  002156  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 12373                           
 12374                           ; BSR set to: 15
 12375                           ;inc\CANlib.h: 566: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 12376  00215A  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
 12377  00215E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12378  002160  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12379  002162  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12380  002164  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 12381  002168  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 12382  00216C  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 12383  002170  6A03               	clrf	??_CANreceiveMessage,c
 12384  002172  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12385  002176  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12386  00217A  5003               	movf	??_CANreceiveMessage,w,c
 12387  00217C  26DE               	addwf	postinc2,f,c
 12388  00217E  5004               	movf	??_CANreceiveMessage+1,w,c
 12389  002180  22DE               	addwfc	postinc2,f,c
 12390  002182  5005               	movf	??_CANreceiveMessage+2,w,c
 12391  002184  22DE               	addwfc	postinc2,f,c
 12392  002186  5006               	movf	??_CANreceiveMessage+3,w,c
 12393  002188  22DE               	addwfc	postinc2,f,c
 12394                           
 12395                           ; BSR set to: 15
 12396                           ;inc\CANlib.h: 568: if (RXB1SIDLbits.EID16)
 12397  00218A  010F               	movlb	15	; () banked
 12398  00218C  A152               	btfss	82,0,b	;volatile
 12399  00218E  D00C               	goto	i1l5016
 12400                           
 12401                           ; BSR set to: 15
 12402                           ;inc\CANlib.h: 569: msg->identifier |= 0x00010000;
 12403  002190  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12404  002194  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12405  002198  0E00               	movlw	0
 12406  00219A  12DE               	iorwf	postinc2,f,c
 12407  00219C  0E00               	movlw	0
 12408  00219E  12DE               	iorwf	postinc2,f,c
 12409  0021A0  0E01               	movlw	1
 12410  0021A2  12DE               	iorwf	postinc2,f,c
 12411  0021A4  0E00               	movlw	0
 12412  0021A6  12DE               	iorwf	postinc2,f,c
 12413  0021A8                     i1l5016:
 12414                           
 12415                           ; BSR set to: 15
 12416                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID17)
 12417  0021A8  010F               	movlb	15	; () banked
 12418  0021AA  A352               	btfss	82,1,b	;volatile
 12419  0021AC  D00C               	goto	i1l5020
 12420                           
 12421                           ; BSR set to: 15
 12422                           ;inc\CANlib.h: 571: msg->identifier |= 0x00020000;
 12423  0021AE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12424  0021B2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12425  0021B6  0E00               	movlw	0
 12426  0021B8  12DE               	iorwf	postinc2,f,c
 12427  0021BA  0E00               	movlw	0
 12428  0021BC  12DE               	iorwf	postinc2,f,c
 12429  0021BE  0E02               	movlw	2
 12430  0021C0  12DE               	iorwf	postinc2,f,c
 12431  0021C2  0E00               	movlw	0
 12432  0021C4  12DE               	iorwf	postinc2,f,c
 12433  0021C6                     i1l5020:
 12434                           
 12435                           ; BSR set to: 15
 12436                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.SID0)
 12437  0021C6  010F               	movlb	15	; () banked
 12438  0021C8  AB52               	btfss	82,5,b	;volatile
 12439  0021CA  D00C               	goto	i1l5024
 12440                           
 12441                           ; BSR set to: 15
 12442                           ;inc\CANlib.h: 573: msg->identifier |= 0x00040000;
 12443  0021CC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12444  0021D0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12445  0021D4  0E00               	movlw	0
 12446  0021D6  12DE               	iorwf	postinc2,f,c
 12447  0021D8  0E00               	movlw	0
 12448  0021DA  12DE               	iorwf	postinc2,f,c
 12449  0021DC  0E04               	movlw	4
 12450  0021DE  12DE               	iorwf	postinc2,f,c
 12451  0021E0  0E00               	movlw	0
 12452  0021E2  12DE               	iorwf	postinc2,f,c
 12453  0021E4                     i1l5024:
 12454                           
 12455                           ; BSR set to: 15
 12456                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID1)
 12457  0021E4  010F               	movlb	15	; () banked
 12458  0021E6  AD52               	btfss	82,6,b	;volatile
 12459  0021E8  D00C               	goto	i1l5028
 12460                           
 12461                           ; BSR set to: 15
 12462                           ;inc\CANlib.h: 575: msg->identifier |= 0x00080000;
 12463  0021EA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12464  0021EE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12465  0021F2  0E00               	movlw	0
 12466  0021F4  12DE               	iorwf	postinc2,f,c
 12467  0021F6  0E00               	movlw	0
 12468  0021F8  12DE               	iorwf	postinc2,f,c
 12469  0021FA  0E08               	movlw	8
 12470  0021FC  12DE               	iorwf	postinc2,f,c
 12471  0021FE  0E00               	movlw	0
 12472  002200  12DE               	iorwf	postinc2,f,c
 12473  002202                     i1l5028:
 12474                           
 12475                           ; BSR set to: 15
 12476                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID2)
 12477  002202  010F               	movlb	15	; () banked
 12478  002204  AF52               	btfss	82,7,b	;volatile
 12479  002206  D00C               	goto	i1l5032
 12480                           
 12481                           ; BSR set to: 15
 12482                           ;inc\CANlib.h: 577: msg->identifier |= 0x00100000;
 12483  002208  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12484  00220C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12485  002210  0E00               	movlw	0
 12486  002212  12DE               	iorwf	postinc2,f,c
 12487  002214  0E00               	movlw	0
 12488  002216  12DE               	iorwf	postinc2,f,c
 12489  002218  0E10               	movlw	16
 12490  00221A  12DE               	iorwf	postinc2,f,c
 12491  00221C  0E00               	movlw	0
 12492  00221E  12DE               	iorwf	postinc2,f,c
 12493  002220                     i1l5032:
 12494                           
 12495                           ; BSR set to: 15
 12496                           ;inc\CANlib.h: 579: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 12497  002220  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 12498  002224  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12499  002226  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12500  002228  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12501  00222A  0E15               	movlw	21
 12502  00222C                     i1u629_25:
 12503  00222C  90D8               	bcf	status,0,c
 12504  00222E  3603               	rlcf	??_CANreceiveMessage,f,c
 12505  002230  3604               	rlcf	??_CANreceiveMessage+1,f,c
 12506  002232  3605               	rlcf	??_CANreceiveMessage+2,f,c
 12507  002234  3606               	rlcf	??_CANreceiveMessage+3,f,c
 12508  002236  2EE8               	decfsz	wreg,f,c
 12509  002238  D7F9               	goto	i1u629_25
 12510  00223A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12511  00223E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12512  002242  5003               	movf	??_CANreceiveMessage,w,c
 12513  002244  12DE               	iorwf	postinc2,f,c
 12514  002246  5004               	movf	??_CANreceiveMessage+1,w,c
 12515  002248  12DE               	iorwf	postinc2,f,c
 12516  00224A  5005               	movf	??_CANreceiveMessage+2,w,c
 12517  00224C  12DE               	iorwf	postinc2,f,c
 12518  00224E  5006               	movf	??_CANreceiveMessage+3,w,c
 12519  002250  12DE               	iorwf	postinc2,f,c
 12520  002252                     i1l5034:
 12521                           
 12522                           ; BSR set to: 15
 12523                           ;inc\CANlib.h: 580: }
 12524                           ;inc\CANlib.h: 582: RXB1CONbits.RXFUL = 0x00;
 12525  002252  010F               	movlb	15	; () banked
 12526  002254  9F50               	bcf	80,7,b	;volatile
 12527                           
 12528                           ; BSR set to: 15
 12529                           ;inc\CANlib.h: 583: return (error);
 12530                           ;	Return value of _CANreceiveMessage is never used
 12531  002256  0012               	return	
 12532  002258                     i1l404:
 12533                           
 12534                           ; BSR set to: 15
 12535                           ;inc\CANlib.h: 584: }
 12536                           ;inc\CANlib.h: 586: if (RXB0CONbits.RXFUL ==0x01)
 12537  002258  AE60               	btfss	3936,7,c	;volatile
 12538  00225A  0012               	return	
 12539                           
 12540                           ; BSR set to: 15
 12541                           ;inc\CANlib.h: 587: {
 12542                           ;inc\CANlib.h: 588: msg->identifier = 0;
 12543  00225C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12544  002260  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12545  002264  6ADE               	clrf	postinc2,c
 12546  002266  6ADE               	clrf	postinc2,c
 12547  002268  6ADE               	clrf	postinc2,c
 12548  00226A  6ADD               	clrf	postdec2,c
 12549                           
 12550                           ; BSR set to: 15
 12551                           ;inc\CANlib.h: 589: msg->data[0] =RXB0D0;
 12552  00226C  EE20 F004          	lfsr	2,4
 12553  002270  5001               	movf	CANreceiveMessage@msg,w,c
 12554  002272  26D9               	addwf	fsr2l,f,c
 12555  002274  5002               	movf	CANreceiveMessage@msg+1,w,c
 12556  002276  22DA               	addwfc	fsr2h,f,c
 12557  002278  CF66 FFDF          	movff	3942,indf2	;volatile
 12558                           
 12559                           ; BSR set to: 15
 12560                           ;inc\CANlib.h: 590: msg->data[1] =RXB0D1;
 12561  00227C  EE20 F005          	lfsr	2,5
 12562  002280  5001               	movf	CANreceiveMessage@msg,w,c
 12563  002282  26D9               	addwf	fsr2l,f,c
 12564  002284  5002               	movf	CANreceiveMessage@msg+1,w,c
 12565  002286  22DA               	addwfc	fsr2h,f,c
 12566  002288  CF67 FFDF          	movff	3943,indf2	;volatile
 12567                           
 12568                           ; BSR set to: 15
 12569                           ;inc\CANlib.h: 591: msg->data[2] =RXB0D2;
 12570  00228C  EE20 F006          	lfsr	2,6
 12571  002290  5001               	movf	CANreceiveMessage@msg,w,c
 12572  002292  26D9               	addwf	fsr2l,f,c
 12573  002294  5002               	movf	CANreceiveMessage@msg+1,w,c
 12574  002296  22DA               	addwfc	fsr2h,f,c
 12575  002298  CF68 FFDF          	movff	3944,indf2	;volatile
 12576                           
 12577                           ; BSR set to: 15
 12578                           ;inc\CANlib.h: 592: msg->data[3] =RXB0D3;
 12579  00229C  EE20 F007          	lfsr	2,7
 12580  0022A0  5001               	movf	CANreceiveMessage@msg,w,c
 12581  0022A2  26D9               	addwf	fsr2l,f,c
 12582  0022A4  5002               	movf	CANreceiveMessage@msg+1,w,c
 12583  0022A6  22DA               	addwfc	fsr2h,f,c
 12584  0022A8  CF69 FFDF          	movff	3945,indf2	;volatile
 12585                           
 12586                           ; BSR set to: 15
 12587                           ;inc\CANlib.h: 593: msg->data[4] =RXB0D4;
 12588  0022AC  EE20 F008          	lfsr	2,8
 12589  0022B0  5001               	movf	CANreceiveMessage@msg,w,c
 12590  0022B2  26D9               	addwf	fsr2l,f,c
 12591  0022B4  5002               	movf	CANreceiveMessage@msg+1,w,c
 12592  0022B6  22DA               	addwfc	fsr2h,f,c
 12593  0022B8  CF6A FFDF          	movff	3946,indf2	;volatile
 12594                           
 12595                           ; BSR set to: 15
 12596                           ;inc\CANlib.h: 594: msg->data[5] =RXB0D5;
 12597  0022BC  EE20 F009          	lfsr	2,9
 12598  0022C0  5001               	movf	CANreceiveMessage@msg,w,c
 12599  0022C2  26D9               	addwf	fsr2l,f,c
 12600  0022C4  5002               	movf	CANreceiveMessage@msg+1,w,c
 12601  0022C6  22DA               	addwfc	fsr2h,f,c
 12602  0022C8  CF6B FFDF          	movff	3947,indf2	;volatile
 12603                           
 12604                           ; BSR set to: 15
 12605                           ;inc\CANlib.h: 595: msg->data[6] =RXB0D6;
 12606  0022CC  EE20 F00A          	lfsr	2,10
 12607  0022D0  5001               	movf	CANreceiveMessage@msg,w,c
 12608  0022D2  26D9               	addwf	fsr2l,f,c
 12609  0022D4  5002               	movf	CANreceiveMessage@msg+1,w,c
 12610  0022D6  22DA               	addwfc	fsr2h,f,c
 12611  0022D8  CF6C FFDF          	movff	3948,indf2	;volatile
 12612                           
 12613                           ; BSR set to: 15
 12614                           ;inc\CANlib.h: 596: msg->data[7] =RXB0D7;
 12615  0022DC  EE20 F00B          	lfsr	2,11
 12616  0022E0  5001               	movf	CANreceiveMessage@msg,w,c
 12617  0022E2  26D9               	addwf	fsr2l,f,c
 12618  0022E4  5002               	movf	CANreceiveMessage@msg+1,w,c
 12619  0022E6  22DA               	addwfc	fsr2h,f,c
 12620  0022E8  CF6D FFDF          	movff	3949,indf2	;volatile
 12621                           
 12622                           ; BSR set to: 15
 12623                           ;inc\CANlib.h: 598: msg->RTR = RXB0DLCbits.RXRTR;
 12624  0022EC  EE20 F00E          	lfsr	2,14
 12625  0022F0  5001               	movf	CANreceiveMessage@msg,w,c
 12626  0022F2  26D9               	addwf	fsr2l,f,c
 12627  0022F4  5002               	movf	CANreceiveMessage@msg+1,w,c
 12628  0022F6  22DA               	addwfc	fsr2h,f,c
 12629  0022F8  AC65               	btfss	3941,6,c	;volatile
 12630  0022FA  D002               	goto	i1u631_20
 12631  0022FC  0E01               	movlw	1
 12632  0022FE  D001               	goto	i1u631_26
 12633  002300                     i1u631_20:
 12634  002300  0E00               	movlw	0
 12635  002302                     i1u631_26:
 12636  002302  6EDF               	movwf	indf2,c
 12637                           
 12638                           ; BSR set to: 15
 12639                           ;inc\CANlib.h: 600: msg->length = RXB0DLC & 0x0F;
 12640  002304  EE20 F00D          	lfsr	2,13
 12641  002308  5001               	movf	CANreceiveMessage@msg,w,c
 12642  00230A  26D9               	addwf	fsr2l,f,c
 12643  00230C  5002               	movf	CANreceiveMessage@msg+1,w,c
 12644  00230E  22DA               	addwfc	fsr2h,f,c
 12645  002310  5065               	movf	3941,w,c	;volatile
 12646  002312  0B0F               	andlw	15
 12647  002314  6EDF               	movwf	indf2,c
 12648                           
 12649                           ; BSR set to: 15
 12650                           ;inc\CANlib.h: 602: msg->type = RXB0SIDLbits.EXID;
 12651  002316  EE20 F00C          	lfsr	2,12
 12652  00231A  5001               	movf	CANreceiveMessage@msg,w,c
 12653  00231C  26D9               	addwf	fsr2l,f,c
 12654  00231E  5002               	movf	CANreceiveMessage@msg+1,w,c
 12655  002320  22DA               	addwfc	fsr2h,f,c
 12656  002322  A662               	btfss	3938,3,c	;volatile
 12657  002324  D002               	goto	i1u632_20
 12658  002326  0E01               	movlw	1
 12659  002328  D001               	goto	i1u632_26
 12660  00232A                     i1u632_20:
 12661  00232A  0E00               	movlw	0
 12662  00232C                     i1u632_26:
 12663  00232C  6EDF               	movwf	indf2,c
 12664                           
 12665                           ; BSR set to: 15
 12666                           ;inc\CANlib.h: 604: if (RXB0SIDLbits.EXID == 0)
 12667  00232E  B662               	btfsc	3938,3,c	;volatile
 12668  002330  D043               	goto	i1l5070
 12669                           
 12670                           ; BSR set to: 15
 12671                           ;inc\CANlib.h: 605: {
 12672                           ;inc\CANlib.h: 606: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 12673  002332  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 12674  002336  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12675  002338  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12676  00233A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12677  00233C  0E03               	movlw	3
 12678  00233E                     i1u634_25:
 12679  00233E  90D8               	bcf	status,0,c
 12680  002340  3603               	rlcf	??_CANreceiveMessage,f,c
 12681  002342  3604               	rlcf	??_CANreceiveMessage+1,f,c
 12682  002344  3605               	rlcf	??_CANreceiveMessage+2,f,c
 12683  002346  3606               	rlcf	??_CANreceiveMessage+3,f,c
 12684  002348  2EE8               	decfsz	wreg,f,c
 12685  00234A  D7F9               	goto	i1u634_25
 12686  00234C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12687  002350  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12688  002354  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 12689  002358  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 12690  00235C  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 12691  002360  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 12692                           
 12693                           ; BSR set to: 15
 12694                           ;inc\CANlib.h: 607: tamp = (RXB0SIDL >> 5 ) & 0x07;
 12695  002364  3862               	swapf	3938,w,c	;volatile
 12696  002366  42E8               	rrncf	wreg,f,c
 12697  002368  0B07               	andlw	7
 12698  00236A  0B07               	andlw	7
 12699  00236C  6E0C               	movwf	CANreceiveMessage@tamp,c
 12700                           
 12701                           ; BSR set to: 15
 12702                           ;inc\CANlib.h: 608: msg->identifier = msg->identifier + tamp;
 12703  00236E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12704  002372  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12705  002376  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 12706  00237A  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 12707  00237E  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 12708  002382  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 12709  002386  500C               	movf	CANreceiveMessage@tamp,w,c
 12710  002388  2403               	addwf	??_CANreceiveMessage,w,c
 12711  00238A  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 12712  00238C  0E00               	movlw	0
 12713  00238E  2004               	addwfc	??_CANreceiveMessage+1,w,c
 12714  002390  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 12715  002392  0E00               	movlw	0
 12716  002394  2005               	addwfc	??_CANreceiveMessage+2,w,c
 12717  002396  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 12718  002398  0E00               	movlw	0
 12719  00239A  2006               	addwfc	??_CANreceiveMessage+3,w,c
 12720  00239C  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 12721  00239E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12722  0023A2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12723  0023A6  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 12724  0023AA  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 12725  0023AE  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 12726  0023B2  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 12727                           
 12728                           ;inc\CANlib.h: 609: }
 12729  0023B6  D088               	goto	i1l5096
 12730  0023B8                     i1l5070:
 12731                           
 12732                           ; BSR set to: 15
 12733                           ;inc\CANlib.h: 610: else
 12734                           ;inc\CANlib.h: 611: {
 12735                           ;inc\CANlib.h: 612: msg->identifier = (unsigned long) RXB0EIDL;
 12736  0023B8  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
 12737  0023BC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12738  0023BE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12739  0023C0  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12740  0023C2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12741  0023C6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12742  0023CA  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 12743  0023CE  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 12744  0023D2  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 12745  0023D6  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 12746                           
 12747                           ; BSR set to: 15
 12748                           ;inc\CANlib.h: 613: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 12749  0023DA  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
 12750  0023DE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12751  0023E0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12752  0023E2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12753  0023E4  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 12754  0023E8  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 12755  0023EC  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 12756  0023F0  6A03               	clrf	??_CANreceiveMessage,c
 12757  0023F2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12758  0023F6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12759  0023FA  5003               	movf	??_CANreceiveMessage,w,c
 12760  0023FC  26DE               	addwf	postinc2,f,c
 12761  0023FE  5004               	movf	??_CANreceiveMessage+1,w,c
 12762  002400  22DE               	addwfc	postinc2,f,c
 12763  002402  5005               	movf	??_CANreceiveMessage+2,w,c
 12764  002404  22DE               	addwfc	postinc2,f,c
 12765  002406  5006               	movf	??_CANreceiveMessage+3,w,c
 12766  002408  22DE               	addwfc	postinc2,f,c
 12767                           
 12768                           ; BSR set to: 15
 12769                           ;inc\CANlib.h: 615: if (RXB0SIDLbits.EID16)
 12770  00240A  A062               	btfss	3938,0,c	;volatile
 12771  00240C  D00C               	goto	i1l5078
 12772                           
 12773                           ; BSR set to: 15
 12774                           ;inc\CANlib.h: 616: msg->identifier |= 0x00010000;
 12775  00240E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12776  002412  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12777  002416  0E00               	movlw	0
 12778  002418  12DE               	iorwf	postinc2,f,c
 12779  00241A  0E00               	movlw	0
 12780  00241C  12DE               	iorwf	postinc2,f,c
 12781  00241E  0E01               	movlw	1
 12782  002420  12DE               	iorwf	postinc2,f,c
 12783  002422  0E00               	movlw	0
 12784  002424  12DE               	iorwf	postinc2,f,c
 12785  002426                     i1l5078:
 12786                           
 12787                           ; BSR set to: 15
 12788                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID17)
 12789  002426  A262               	btfss	3938,1,c	;volatile
 12790  002428  D00C               	goto	i1l5082
 12791                           
 12792                           ; BSR set to: 15
 12793                           ;inc\CANlib.h: 618: msg->identifier |= 0x00020000;
 12794  00242A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12795  00242E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12796  002432  0E00               	movlw	0
 12797  002434  12DE               	iorwf	postinc2,f,c
 12798  002436  0E00               	movlw	0
 12799  002438  12DE               	iorwf	postinc2,f,c
 12800  00243A  0E02               	movlw	2
 12801  00243C  12DE               	iorwf	postinc2,f,c
 12802  00243E  0E00               	movlw	0
 12803  002440  12DE               	iorwf	postinc2,f,c
 12804  002442                     i1l5082:
 12805                           
 12806                           ; BSR set to: 15
 12807                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.SID0)
 12808  002442  AA62               	btfss	3938,5,c	;volatile
 12809  002444  D00C               	goto	i1l5086
 12810                           
 12811                           ; BSR set to: 15
 12812                           ;inc\CANlib.h: 620: msg->identifier |= 0x00040000;
 12813  002446  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12814  00244A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12815  00244E  0E00               	movlw	0
 12816  002450  12DE               	iorwf	postinc2,f,c
 12817  002452  0E00               	movlw	0
 12818  002454  12DE               	iorwf	postinc2,f,c
 12819  002456  0E04               	movlw	4
 12820  002458  12DE               	iorwf	postinc2,f,c
 12821  00245A  0E00               	movlw	0
 12822  00245C  12DE               	iorwf	postinc2,f,c
 12823  00245E                     i1l5086:
 12824                           
 12825                           ; BSR set to: 15
 12826                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID1)
 12827  00245E  AC62               	btfss	3938,6,c	;volatile
 12828  002460  D00C               	goto	i1l5090
 12829                           
 12830                           ; BSR set to: 15
 12831                           ;inc\CANlib.h: 622: msg->identifier |= 0x00080000;
 12832  002462  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12833  002466  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12834  00246A  0E00               	movlw	0
 12835  00246C  12DE               	iorwf	postinc2,f,c
 12836  00246E  0E00               	movlw	0
 12837  002470  12DE               	iorwf	postinc2,f,c
 12838  002472  0E08               	movlw	8
 12839  002474  12DE               	iorwf	postinc2,f,c
 12840  002476  0E00               	movlw	0
 12841  002478  12DE               	iorwf	postinc2,f,c
 12842  00247A                     i1l5090:
 12843                           
 12844                           ; BSR set to: 15
 12845                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID2)
 12846  00247A  AE62               	btfss	3938,7,c	;volatile
 12847  00247C  D00C               	goto	i1l5094
 12848                           
 12849                           ; BSR set to: 15
 12850                           ;inc\CANlib.h: 624: msg->identifier |= 0x00100000;
 12851  00247E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12852  002482  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12853  002486  0E00               	movlw	0
 12854  002488  12DE               	iorwf	postinc2,f,c
 12855  00248A  0E00               	movlw	0
 12856  00248C  12DE               	iorwf	postinc2,f,c
 12857  00248E  0E10               	movlw	16
 12858  002490  12DE               	iorwf	postinc2,f,c
 12859  002492  0E00               	movlw	0
 12860  002494  12DE               	iorwf	postinc2,f,c
 12861  002496                     i1l5094:
 12862                           
 12863                           ; BSR set to: 15
 12864                           ;inc\CANlib.h: 626: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 12865  002496  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 12866  00249A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12867  00249C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12868  00249E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12869  0024A0  0E15               	movlw	21
 12870  0024A2                     i1u640_25:
 12871  0024A2  90D8               	bcf	status,0,c
 12872  0024A4  3603               	rlcf	??_CANreceiveMessage,f,c
 12873  0024A6  3604               	rlcf	??_CANreceiveMessage+1,f,c
 12874  0024A8  3605               	rlcf	??_CANreceiveMessage+2,f,c
 12875  0024AA  3606               	rlcf	??_CANreceiveMessage+3,f,c
 12876  0024AC  2EE8               	decfsz	wreg,f,c
 12877  0024AE  D7F9               	goto	i1u640_25
 12878  0024B0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12879  0024B4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12880  0024B8  5003               	movf	??_CANreceiveMessage,w,c
 12881  0024BA  12DE               	iorwf	postinc2,f,c
 12882  0024BC  5004               	movf	??_CANreceiveMessage+1,w,c
 12883  0024BE  12DE               	iorwf	postinc2,f,c
 12884  0024C0  5005               	movf	??_CANreceiveMessage+2,w,c
 12885  0024C2  12DE               	iorwf	postinc2,f,c
 12886  0024C4  5006               	movf	??_CANreceiveMessage+3,w,c
 12887  0024C6  12DE               	iorwf	postinc2,f,c
 12888  0024C8                     i1l5096:
 12889                           
 12890                           ; BSR set to: 15
 12891                           ;inc\CANlib.h: 628: }
 12892                           ;inc\CANlib.h: 629: RXB0CONbits.RXFUL = 0x00;
 12893  0024C8  9E60               	bcf	3936,7,c	;volatile
 12894                           
 12895                           ; BSR set to: 15
 12896                           ;inc\CANlib.h: 631: return (error);
 12897                           ;	Return value of _CANreceiveMessage is never used
 12898  0024CA  0012               	return	
 12899  0024CC                     __end_of_CANreceiveMessage:
 12900                           	opt stack 0
 12901                           pclatu	equ	0xFFB
 12902                           pclath	equ	0xFFA
 12903                           tblptru	equ	0xFF8
 12904                           tblptrh	equ	0xFF7
 12905                           tblptrl	equ	0xFF6
 12906                           tablat	equ	0xFF5
 12907                           prodh	equ	0xFF4
 12908                           prodl	equ	0xFF3
 12909                           intcon	equ	0xFF2
 12910                           intcon2	equ	0xFF1
 12911                           postinc0	equ	0xFEE
 12912                           fsr0h	equ	0xFEA
 12913                           fsr0l	equ	0xFE9
 12914                           wreg	equ	0xFE8
 12915                           indf1	equ	0xFE7
 12916                           fsr1h	equ	0xFE2
 12917                           fsr1l	equ	0xFE1
 12918                           bsr	equ	0xFE0
 12919                           indf2	equ	0xFDF
 12920                           postinc2	equ	0xFDE
 12921                           postdec2	equ	0xFDD
 12922                           fsr2h	equ	0xFDA
 12923                           fsr2l	equ	0xFD9
 12924                           status	equ	0xFD8
 12925                           
 12926 ;; *************** function _ISR_Alta *****************
 12927 ;; Defined at:
 12928 ;;		line 73 in file "parcheggio.c"
 12929 ;; Parameters:    Size  Location     Type
 12930 ;;		None
 12931 ;; Auto vars:     Size  Location     Type
 12932 ;;		None
 12933 ;; Return value:  Size  Location     Type
 12934 ;;		None               void
 12935 ;; Registers used:
 12936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12937 ;; Tracked objects:
 12938 ;;		On entry : 0/0
 12939 ;;		On exit  : 0/0
 12940 ;;		Unchanged: 0/0
 12941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12944 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12945 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12946 ;;Total ram usage:       16 bytes
 12947 ;; Hardware stack levels used:    1
 12948 ;; Hardware stack levels required when called:    1
 12949 ;; This function calls:
 12950 ;;		___lwdiv
 12951 ;; This function is called by:
 12952 ;;		Interrupt level 2
 12953 ;; This function uses a non-reentrant model
 12954 ;;
 12955                           
 12956                           	psect	intcode
 12957  000008                     __pintcode:
 12958                           	opt stack 0
 12959  000008                     _ISR_Alta:
 12960                           	opt stack 21
 12961                           
 12962                           ; BSR set to: 15
 12963                           ;incstack = 0
 12964  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 12965  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 12966  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 12967  000012  EF6A  F025         	goto	int_func
 12968                           pclatu	equ	0xFFB
 12969                           pclath	equ	0xFFA
 12970                           tblptru	equ	0xFF8
 12971                           tblptrh	equ	0xFF7
 12972                           tblptrl	equ	0xFF6
 12973                           tablat	equ	0xFF5
 12974                           prodh	equ	0xFF4
 12975                           prodl	equ	0xFF3
 12976                           intcon	equ	0xFF2
 12977                           intcon2	equ	0xFF1
 12978                           postinc0	equ	0xFEE
 12979                           fsr0h	equ	0xFEA
 12980                           fsr0l	equ	0xFE9
 12981                           wreg	equ	0xFE8
 12982                           indf1	equ	0xFE7
 12983                           fsr1h	equ	0xFE2
 12984                           fsr1l	equ	0xFE1
 12985                           bsr	equ	0xFE0
 12986                           indf2	equ	0xFDF
 12987                           postinc2	equ	0xFDE
 12988                           postdec2	equ	0xFDD
 12989                           fsr2h	equ	0xFDA
 12990                           fsr2l	equ	0xFD9
 12991                           status	equ	0xFD8
 12992                           
 12993                           	psect	intcode_body
 12994  004AD4                     __pintcode_body:
 12995                           	opt stack 21
 12996  004AD4                     int_func:
 12997                           	opt stack 21
 12998  004AD4  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 12999  004AD8  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 13000  004ADC  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 13001  004AE0  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 13002  004AE4  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 13003  004AE8  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 13004  004AEC  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 13005  004AF0  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 13006  004AF4  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 13007  004AF8  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 13008  004AFC  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 13009  004B00  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 13010                           
 13011                           ;parcheggio.c: 75: if (INTCON2bits.INTEDG0 == 1) {
 13012  004B04  ACF1               	btfss	intcon2,6,c	;volatile
 13013  004B06  D007               	goto	i2l652
 13014                           
 13015                           ;parcheggio.c: 76: INTCON2bits.INTEDG0 = 0;
 13016  004B08  9CF1               	bcf	intcon2,6,c	;volatile
 13017                           
 13018                           ;parcheggio.c: 77: TMR3H = 0;
 13019  004B0A  0E00               	movlw	0
 13020  004B0C  6EB3               	movwf	4019,c	;volatile
 13021                           
 13022                           ;parcheggio.c: 78: TMR3L = 0;
 13023  004B0E  0E00               	movlw	0
 13024  004B10  6EB2               	movwf	4018,c	;volatile
 13025                           
 13026                           ;parcheggio.c: 79: distance_error = 0;
 13027  004B12  9446               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 13028                           
 13029                           ;parcheggio.c: 80: } else {
 13030  004B14  D030               	goto	i2l6224
 13031  004B16                     i2l652:
 13032                           
 13033                           ;parcheggio.c: 81: gianni = TMR3H;
 13034  004B16  CFB3 F044          	movff	4019,_gianni	;volatile
 13035                           
 13036                           ;parcheggio.c: 82: asus = TMR3L;
 13037  004B1A  CFB2 F043          	movff	4018,_asus	;volatile
 13038                           
 13039                           ;parcheggio.c: 83: timerValue2 = gianni;
 13040  004B1E  C044  F040         	movff	_gianni,_timerValue2	;volatile
 13041  004B22  6A41               	clrf	_timerValue2+1,c	;volatile
 13042                           
 13043                           ;parcheggio.c: 84: timerValue2 = ((timerValue2 << 8) | (asus));
 13044  004B24  5040               	movf	_timerValue2,w,c	;volatile
 13045  004B26  0100               	movlb	0	; () banked
 13046  004B28  6F67               	movwf	??_ISR_Alta& (0+255),b
 13047  004B2A  5043               	movf	_asus,w,c	;volatile
 13048  004B2C  6E40               	movwf	_timerValue2,c	;volatile
 13049  004B2E  C067  F041         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 13050                           
 13051                           ; BSR set to: 0
 13052                           ;parcheggio.c: 85: pulse_time = timerValue2 / 2;
 13053  004B32  90D8               	bcf	status,0,c
 13054  004B34  3041               	rrcf	_timerValue2+1,w,c	;volatile
 13055  004B36  0100               	movlb	0	; () banked
 13056  004B38  6F67               	movwf	??_ISR_Alta& (0+255),b
 13057  004B3A  3040               	rrcf	_timerValue2,w,c	;volatile
 13058  004B3C  6E3C               	movwf	_pulse_time,c	;volatile
 13059  004B3E  C067  F03D         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 13060                           
 13061                           ; BSR set to: 0
 13062                           ;parcheggio.c: 86: sensor_distance[MUX_index] = pulse_time / 58;
 13063  004B42  C03C  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 13064  004B46  C03D  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 13065  004B4A  0E00               	movlw	0
 13066  004B4C  0100               	movlb	0	; () banked
 13067  004B4E  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 13068  004B50  0E3A               	movlw	58
 13069  004B52  6F62               	movwf	___lwdiv@divisor& (0+255),b
 13070  004B54  ECDA  F025         	call	___lwdiv	;wreg free
 13071  004B58  5042               	movf	_MUX_index,w,c	;volatile
 13072  004B5A  0D02               	mullw	2
 13073  004B5C  0E24               	movlw	low _sensor_distance
 13074  004B5E  24F3               	addwf	prodl,w,c
 13075  004B60  6ED9               	movwf	fsr2l,c
 13076  004B62  0E00               	movlw	high _sensor_distance
 13077  004B64  20F4               	addwfc	prodh,w,c
 13078  004B66  6EDA               	movwf	fsr2h,c
 13079  004B68  0100               	movlb	0	; () banked
 13080  004B6A  C060  FFDE         	movff	?___lwdiv,postinc2
 13081  004B6E  0100               	movlb	0	; () banked
 13082  004B70  C061  FFDD         	movff	?___lwdiv+1,postdec2
 13083                           
 13084                           ; BSR set to: 0
 13085                           ;parcheggio.c: 87: INTCON2bits.INTEDG0 = 1;
 13086  004B74  8CF1               	bsf	intcon2,6,c	;volatile
 13087  004B76                     i2l6224:
 13088                           
 13089                           ;parcheggio.c: 88: }
 13090                           ;parcheggio.c: 89: INTCONbits.INT0IF = 0;
 13091  004B76  92F2               	bcf	intcon,1,c	;volatile
 13092  004B78  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 13093  004B7C  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 13094  004B80  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 13095  004B84  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 13096  004B88  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 13097  004B8C  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 13098  004B90  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 13099  004B94  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 13100  004B98  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 13101  004B9C  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 13102  004BA0  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 13103  004BA4  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 13104  004BA8  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 13105  004BAC  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 13106  004BB0  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13107  004BB2  0011               	retfie		f
 13108  004BB4                     __end_of_ISR_Alta:
 13109                           	opt stack 0
 13110                           pclatu	equ	0xFFB
 13111                           pclath	equ	0xFFA
 13112                           tblptru	equ	0xFF8
 13113                           tblptrh	equ	0xFF7
 13114                           tblptrl	equ	0xFF6
 13115                           tablat	equ	0xFF5
 13116                           prodh	equ	0xFF4
 13117                           prodl	equ	0xFF3
 13118                           intcon	equ	0xFF2
 13119                           intcon2	equ	0xFF1
 13120                           postinc0	equ	0xFEE
 13121                           fsr0h	equ	0xFEA
 13122                           fsr0l	equ	0xFE9
 13123                           wreg	equ	0xFE8
 13124                           indf1	equ	0xFE7
 13125                           fsr1h	equ	0xFE2
 13126                           fsr1l	equ	0xFE1
 13127                           bsr	equ	0xFE0
 13128                           indf2	equ	0xFDF
 13129                           postinc2	equ	0xFDE
 13130                           postdec2	equ	0xFDD
 13131                           fsr2h	equ	0xFDA
 13132                           fsr2l	equ	0xFD9
 13133                           status	equ	0xFD8
 13134                           
 13135 ;; *************** function ___lwdiv *****************
 13136 ;; Defined at:
 13137 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 13138 ;; Parameters:    Size  Location     Type
 13139 ;;  dividend        2    0[BANK0 ] unsigned int 
 13140 ;;  divisor         2    2[BANK0 ] unsigned int 
 13141 ;; Auto vars:     Size  Location     Type
 13142 ;;  quotient        2    5[BANK0 ] unsigned int 
 13143 ;;  counter         1    4[BANK0 ] unsigned char 
 13144 ;; Return value:  Size  Location     Type
 13145 ;;                  2    0[BANK0 ] unsigned int 
 13146 ;; Registers used:
 13147 ;;		wreg, status,2, status,0
 13148 ;; Tracked objects:
 13149 ;;		On entry : 0/0
 13150 ;;		On exit  : 0/0
 13151 ;;		Unchanged: 0/0
 13152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13153 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13154 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13156 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13157 ;;Total ram usage:        7 bytes
 13158 ;; Hardware stack levels used:    1
 13159 ;; This function calls:
 13160 ;;		Nothing
 13161 ;; This function is called by:
 13162 ;;		_ISR_Alta
 13163 ;; This function uses a non-reentrant model
 13164 ;;
 13165                           
 13166                           	psect	text29
 13167  004BB4                     __ptext29:
 13168                           	opt stack 0
 13169  004BB4                     ___lwdiv:
 13170                           	opt stack 21
 13171                           
 13172                           ;incstack = 0
 13173  004BB4  0E00               	movlw	0
 13174  004BB6  0100               	movlb	0	; () banked
 13175  004BB8  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 13176  004BBA  0E00               	movlw	0
 13177  004BBC  6F65               	movwf	___lwdiv@quotient& (0+255),b
 13178                           
 13179                           ; BSR set to: 0
 13180  004BBE  0100               	movlb	0	; () banked
 13181  004BC0  5162               	movf	___lwdiv@divisor& (0+255),w,b
 13182  004BC2  0100               	movlb	0	; () banked
 13183  004BC4  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 13184  004BC6  B4D8               	btfsc	status,2,c
 13185  004BC8  D02C               	goto	i2l1187
 13186                           
 13187                           ; BSR set to: 0
 13188  004BCA  0E01               	movlw	1
 13189  004BCC  0100               	movlb	0	; () banked
 13190  004BCE  6F64               	movwf	___lwdiv@counter& (0+255),b
 13191  004BD0  D006               	goto	i2l6194
 13192  004BD2                     i2l6192:
 13193                           
 13194                           ; BSR set to: 0
 13195  004BD2  0100               	movlb	0	; () banked
 13196  004BD4  90D8               	bcf	status,0,c
 13197  004BD6  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 13198  004BD8  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 13199  004BDA  0100               	movlb	0	; () banked
 13200  004BDC  2B64               	incf	___lwdiv@counter& (0+255),f,b
 13201  004BDE                     i2l6194:
 13202                           
 13203                           ; BSR set to: 0
 13204  004BDE  0100               	movlb	0	; () banked
 13205  004BE0  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 13206  004BE2  D7F7               	goto	i2l6192
 13207  004BE4                     i2l6196:
 13208                           
 13209                           ; BSR set to: 0
 13210  004BE4  0100               	movlb	0	; () banked
 13211  004BE6  90D8               	bcf	status,0,c
 13212  004BE8  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 13213  004BEA  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 13214                           
 13215                           ; BSR set to: 0
 13216  004BEC  0100               	movlb	0	; () banked
 13217  004BEE  5162               	movf	___lwdiv@divisor& (0+255),w,b
 13218  004BF0  0100               	movlb	0	; () banked
 13219  004BF2  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 13220  004BF4  0100               	movlb	0	; () banked
 13221  004BF6  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 13222  004BF8  0100               	movlb	0	; () banked
 13223  004BFA  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 13224  004BFC  A0D8               	btfss	status,0,c
 13225  004BFE  D00A               	goto	i2l6204
 13226                           
 13227                           ; BSR set to: 0
 13228  004C00  0100               	movlb	0	; () banked
 13229  004C02  5162               	movf	___lwdiv@divisor& (0+255),w,b
 13230  004C04  0100               	movlb	0	; () banked
 13231  004C06  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 13232  004C08  0100               	movlb	0	; () banked
 13233  004C0A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 13234  004C0C  0100               	movlb	0	; () banked
 13235  004C0E  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 13236                           
 13237                           ; BSR set to: 0
 13238  004C10  0100               	movlb	0	; () banked
 13239  004C12  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 13240  004C14                     i2l6204:
 13241                           
 13242                           ; BSR set to: 0
 13243  004C14  0100               	movlb	0	; () banked
 13244  004C16  90D8               	bcf	status,0,c
 13245  004C18  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 13246  004C1A  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 13247                           
 13248                           ; BSR set to: 0
 13249  004C1C  0100               	movlb	0	; () banked
 13250  004C1E  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 13251  004C20  D7E1               	goto	i2l6196
 13252  004C22                     i2l1187:
 13253                           
 13254                           ; BSR set to: 0
 13255  004C22  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 13256  004C26  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 13257                           
 13258                           ; BSR set to: 0
 13259  004C2A  0012               	return		;funcret
 13260  004C2C                     __end_of___lwdiv:
 13261                           	opt stack 0
 13262                           pclatu	equ	0xFFB
 13263                           pclath	equ	0xFFA
 13264                           tblptru	equ	0xFF8
 13265                           tblptrh	equ	0xFF7
 13266                           tblptrl	equ	0xFF6
 13267                           tablat	equ	0xFF5
 13268                           prodh	equ	0xFF4
 13269                           prodl	equ	0xFF3
 13270                           intcon	equ	0xFF2
 13271                           intcon2	equ	0xFF1
 13272                           postinc0	equ	0xFEE
 13273                           fsr0h	equ	0xFEA
 13274                           fsr0l	equ	0xFE9
 13275                           wreg	equ	0xFE8
 13276                           indf1	equ	0xFE7
 13277                           fsr1h	equ	0xFE2
 13278                           fsr1l	equ	0xFE1
 13279                           bsr	equ	0xFE0
 13280                           indf2	equ	0xFDF
 13281                           postinc2	equ	0xFDE
 13282                           postdec2	equ	0xFDD
 13283                           fsr2h	equ	0xFDA
 13284                           fsr2l	equ	0xFD9
 13285                           status	equ	0xFD8
 13286                           pclatu	equ	0xFFB
 13287                           pclath	equ	0xFFA
 13288                           tblptru	equ	0xFF8
 13289                           tblptrh	equ	0xFF7
 13290                           tblptrl	equ	0xFF6
 13291                           tablat	equ	0xFF5
 13292                           prodh	equ	0xFF4
 13293                           prodl	equ	0xFF3
 13294                           intcon	equ	0xFF2
 13295                           intcon2	equ	0xFF1
 13296                           postinc0	equ	0xFEE
 13297                           fsr0h	equ	0xFEA
 13298                           fsr0l	equ	0xFE9
 13299                           wreg	equ	0xFE8
 13300                           indf1	equ	0xFE7
 13301                           fsr1h	equ	0xFE2
 13302                           fsr1l	equ	0xFE1
 13303                           bsr	equ	0xFE0
 13304                           indf2	equ	0xFDF
 13305                           postinc2	equ	0xFDE
 13306                           postdec2	equ	0xFDD
 13307                           fsr2h	equ	0xFDA
 13308                           fsr2l	equ	0xFD9
 13309                           status	equ	0xFD8
 13310                           
 13311                           	psect	param0
 13312  0000                     pclatu	equ	0xFFB
 13313                           pclath	equ	0xFFA
 13314                           tblptru	equ	0xFF8
 13315                           tblptrh	equ	0xFF7
 13316                           tblptrl	equ	0xFF6
 13317                           tablat	equ	0xFF5
 13318                           prodh	equ	0xFF4
 13319                           prodl	equ	0xFF3
 13320                           intcon	equ	0xFF2
 13321                           intcon2	equ	0xFF1
 13322                           postinc0	equ	0xFEE
 13323                           fsr0h	equ	0xFEA
 13324                           fsr0l	equ	0xFE9
 13325                           wreg	equ	0xFE8
 13326                           indf1	equ	0xFE7
 13327                           fsr1h	equ	0xFE2
 13328                           fsr1l	equ	0xFE1
 13329                           bsr	equ	0xFE0
 13330                           indf2	equ	0xFDF
 13331                           postinc2	equ	0xFDE
 13332                           postdec2	equ	0xFDD
 13333                           fsr2h	equ	0xFDA
 13334                           fsr2l	equ	0xFD9
 13335                           status	equ	0xFD8
 13336                           
 13337                           	psect	temp
 13338  000048                     btemp:
 13339                           	opt stack 0
 13340  000048                     	ds	1
 13341  0000                     int$flags	set	btemp
 13342                           pclatu	equ	0xFFB
 13343                           pclath	equ	0xFFA
 13344                           tblptru	equ	0xFF8
 13345                           tblptrh	equ	0xFF7
 13346                           tblptrl	equ	0xFF6
 13347                           tablat	equ	0xFF5
 13348                           prodh	equ	0xFF4
 13349                           prodl	equ	0xFF3
 13350                           intcon	equ	0xFF2
 13351                           intcon2	equ	0xFF1
 13352                           postinc0	equ	0xFEE
 13353                           fsr0h	equ	0xFEA
 13354                           fsr0l	equ	0xFE9
 13355                           wreg	equ	0xFE8
 13356                           indf1	equ	0xFE7
 13357                           fsr1h	equ	0xFE2
 13358                           fsr1l	equ	0xFE1
 13359                           bsr	equ	0xFE0
 13360                           indf2	equ	0xFDF
 13361                           postinc2	equ	0xFDE
 13362                           postdec2	equ	0xFDD
 13363                           fsr2h	equ	0xFDA
 13364                           fsr2l	equ	0xFD9
 13365                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    44
    Data        3
    BSS         139
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      71
    BANK0           160    117     137
    BANK1           256     49     136
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> data_correction(BANK1[8]), data_speed(BANK1[8]), data_steering(BANK1[8]), data_brake(BANK1[8]), 
		 -> data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _asin->_atan
    _sqrt->___fladd
    _atan->_eval_poly
    _fabs->___flneg
    ___flneg->___flmul
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flneg
    ___flge->_fabs
    _abs->___fltol
    ___xxtofl->_abs
    ___fltol->___fladd
    _can_send->_CANsendMessage
    _configurazione->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_park_search
    _park_search->_parallelo
    _parallelo->_asin
    _asin->_sqrt

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   70623
                    _can_interpreter
                     _configurazione
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   60734
                                             47 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   55891
                                             45 BANK1      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   37298
                                             21 BANK1     24    20      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0      8     4      4
                                              0 BANK1     21    21      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   21923
                                            113 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1082
                                             77 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     758
                                             73 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8    8195
                                             97 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3231
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    4248
                                             77 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     882
                                             81 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2807
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     258
                                            107 BANK0      4     2      2
                            ___fladd (ARG)
                            ___flneg (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     630
                                            111 BANK0      4     0      4
                                              0 BANK1     10    10      0
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     357
                                             97 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (1) _park_routine                                         0     0      0    3955
                           _can_send
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    3955
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    3931
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      24
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    5934
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    1251
                                             12 COMRAM    23    23      0
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_interpreter
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _park_routine
     _can_send
       _CANisTxReady
       _CANsendMessage
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       _abs (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
     _abs
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         _abs (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
       _abs
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     31      88       7       53.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     75      89       5       85.6%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     23      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     158      20        0.0%
DATA                 0      0     158       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Apr 18 18:53:54 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _x 00D9  
                           _z 00DD          __end_of_CANSetFilter 1834                  ___fldiv@sign 0083  
                          bsr 000FE0                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                    _MUX_select 0100                           l501 168C  
                         l502 1690                           l430 37BE                           l503 169C  
                         l431 37C2                           l520 17E8                           l512 17A8  
                         l504 16A0                           l440 38CA                           l432 37CE  
                         l352 43BC                           l360 1946                           l513 17AC  
                         l505 16AC                           l441 38D6                           l433 37D2  
                         l353 43C6                           l361 18D6                           l514 17B8  
                         l506 16B0                           l442 38DA                           l434 37DE  
                         l426 379E                           l362 18E0                           l515 17BC  
                         l507 16BC                           l443 38E6                           l427 37A2  
                         l363 18EA                           l516 17C8                           l508 16C0  
                         l460 1232                           l444 38EA                           l428 37AE  
                         l372 1D3C                           l364 18F4                           l517 17CC  
                         l509 16CC                           l461 123E                           l445 38F6  
                         l437 38B6                           l429 37B2                           l373 1ACE  
                         l357 1AB8                           l518 17D8                           l470 1348  
                         l462 1242                           l438 38BA                           l550 4E50  
                         l390 1DDE                           l382 1C88                           l374 1AD2  
                         l358 184A                           l519 17DC                           l471 134C  
                         l463 124E                           l439 38C6                           l391 1DE8  
                         l383 1C8C                           l375 1BCA                           l367 1A04  
                         l359 184E                           l480 1458                           l472 1358  
                         l464 1252                           l392 1DF2                           l384 1C98  
                         l376 1B5A                           l368 1A08                           l481 1464  
                         l473 135C                           l465 125E                           l457 121E  
                         l393 1DFC                           l377 1B64                           l369 1A14  
                         l490 1570                           l482 1468                           l474 1368  
                         l458 1222                           l378 1B6E                           l491 1574  
                         l483 1474                           l475 136C                           l459 122E  
                         l387 1D52                           l379 1B78                           l492 1580  
                         l484 1478                           l476 1378                           l468 1338  
                         l396 1F0C                           l388 1D56                           l493 1584  
                         l485 1484                           l469 133C                           l397 1F10  
                         l389 1E4E                           l494 1590                           l486 1488  
                         l398 1F1C                           l495 1594                           l487 1494  
                         l479 1454                           l496 15A0                           l497 15A4  
                         l681 47B2                           l498 15B0                           l694 47AE  
                         l786 4E28                           l980 4DBC                           l987 4606  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           _abs 4E06  
                         _dir 0231                           _msg 0120                           prod 000FF3  
                         wreg 000FE8                  ___flmul@aexp 009D                  ___flmul@bexp 00A2  
             ?_configurazione 0001                  ___flmul@sign 009C                  ___flmul@temp 00A7  
                ___flmul@prod 00A3                  __CFG_LVP$OFF 000000                  ___fltol@exp1 00CA  
                __CFG_WDT$OFF 000000                          ?_abs 00CB                          l1310 2A28  
                        l1224 26AC                          l1241 2820                          l1225 26A0  
                        l1250 28B4                          l1226 266C                          l1317 2CC4  
                        l1327 2DD6                          l1319 2D32                          l1352 417C  
                        l1280 3412                          l1291 34B8                          l1283 33BA  
                        l4004 1A18                          l1366 4284                          l1367 429C  
                        l1359 4228                          l1289 344A                          l4130 1E06  
                        l4150 1F00                          l4054 1B82                          l4080 1C9C  
                        l4410 38FA                          l4074 1C7C                          l5202 4E58  
                        l4156 1F20                          l6020 40F4                          l6004 3F2C  
                        l4318 4E7E                          l5206 4E6C                          l4352 3712  
                        l4336 365C                          l6104 42EE                          l6024 410C  
                        l6008 3FA0                          l4506 10D2                          l4434 0DEC  
                        l5402 250E                          l6034 39A0                          l4620 1498  
                        l4524 118C                          l4452 0EA4                          l5420 2558  
                        l6132 3E56                          l4470 0F5E                          l5510 271E  
                        l5430 2586                          l5414 2544                          l5406 2518  
                        l6046 3ACE                          l6134 3E5C                          l6150 466C  
                        l6142 4658                          l4552 1262                          l4384 3828  
                        l4800 48FA                          l6080 41BC                          l6072 418C  
                        l5504 270E                          l6160 46BC                          l4722 17EC  
                        l4626 14DE                          l4378 37E2                          l6090 4266  
                        l6082 41CC                          l5506 2714                          l5514 2730  
                        l5426 257C                          l6058 3BB0                          l6162 4718  
                        l4660 15FA                          l4820 497C                          l6092 4276  
                        l6084 420A                          l5532 2852                          l5524 2800  
                        l5700 2D82                          l5604 29B6                          l6172 4760  
                        l6252 4D82                          l4654 15B4                          l4558 12A8  
                        l4750 4A6A                          l4830 49B2                          l6078 41B4  
                        l5542 2874                          l5550 288E                          l5438 25B0  
                        l5622 2A10                          l5606 29BC                          l4592 13C2  
                        l4488 1018                          l4920 43CA                          l4736 49E4  
                        l4816 4968                          l5480 2680                          l5704 2DA8  
                        l5632 2A50                          l5624 2A16                          l5616 29EC  
                        l5608 29CE                          l6168 4728                          l4586 137C  
                        l4746 4A32                          l4754 4AA4                          l4834 49CE  
                        l4826 4998                          l5810 340E                          l5538 2868  
                        l5482 2686                          l5714 2DF6                          l5706 2DBC  
                        l4924 43D2                          l4828 49A8                          l5804 33C6  
                        l5580 294A                          l5572 291C                          l5548 2888  
                        l5468 25EC                          l5396 24EA                          l5716 2E00  
                        l5628 2A3C                          l4694 1716                          l4926 4416  
                        l4918 43B4                          l5822 345E                          l5742 3226  
                        l5582 294E                          l5558 28AE                          l5486 2690  
                        l5726 4DF4                          l4688 16D0                          l5832 34B2  
                        l5816 3434                          l5736 3202                          l5576 293E  
                        l5568 290A                          l5496 26D0                          l5680 2CD8  
                        l5920 2E96                          l3978 18FE                          l5850 356C  
                        l5842 3508                          l5762 3284                          l5746 3230  
                        l5690 2D2C                          l5674 2CAE                          l5906 2E38  
                        l5756 3260                          l5588 2962                          l3998 19F8  
                        l5846 3536                          l5766 328E                          l5598 2992  
                        l5926 2EB6                          l5918 2E84                          l5856 357C  
                        l5848 354A                          l5858 3580                          l5786 3310  
                        l5778 32E2                          l5890 45B4                          l5882 4514  
                        l5874 4812                          l5962 3038                          l5970 30AE  
                        l5946 2F28                          l5938 2EF8                          l5796 338E  
                        l5876 48B6                          l5964 3072                          l5956 2FAA  
                        l5886 4562                          l5990 31C4                          l5982 318E  
                        l5958 2FB2                          l5896 4652                          _LATA 000F89  
                        _LATB 000F8A                          _LATC 000F8B                          u5100 391A  
                        u5020 3802                          u5105 390E                          u5025 37F6  
                        u5210 0EDA                          u5130 0D68                          u4350 191E  
                        u5215 0ECE                          u5135 0D5C                          u4360 196A  
                        u5305 10AE                          u5225 0F3A                          u5145 0DC8  
                        u4505 1C4E                          u5330 1108                          u5250 0F94  
                        u5170 0E20                          u4610 1E26                          u4355 1912  
                        u5500 139C                          u5420 1282                          u4620 1E72  
                        u4365 195E                          u5335 10FC                          u5255 0F88  
                        u5175 0E14                          u4615 1E1A                          u4375 19CA  
                        u4480 1BA2                          u5505 1390                          u5425 1276  
                        u5345 1168                          u5265 0FF4                          u5185 0E80  
                        u4625 1E66                          u5290 104E                          u4490 1BEE  
                        u4635 1ED2                          u8020 4774                          u4485 1B96  
                        u5295 1042                          u4495 1BE2                          u4905 3638  
                        u4930 368E                          u5820 180C                          u5740 16F0  
                        u5660 15D4                          u5580 14B8                          u7500 351C  
                        u7260 2D96                          u7180 2C50                          u4935 3682  
                        u5920 491A                          u6800 2636                          u5825 1800  
                        u5745 16E4                          u5665 15C8                          u5585 14AC  
                        u4945 36EE                          u7185 2C44                          u4890 35D8  
                        u6810 264E                          u6820 2650                          u5925 490E  
                        u4895 35CC                          u7720 3F5C                          u7730 3F5E  
                        u7911 3CE6                          u7921 3CF2                          u7940 3ECA  
                        u7950 4668           __size_of_CANSetMask 039E                          abs@a 00CB  
                        _fabs 4D90                          _data 012F                          _atan 3EE0  
                        _asin 3942                          _main 4D46                          _asus 0043  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          indf1 000FE7                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          btemp 0048  
                        _sqrt 2E1A                          pclat 000FFA                          prodh 000FF4  
                        prodl 000FF3                          start 0238                 __CFG_IESO$OFF 000000  
             ___fldiv@new_exp 0088                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
            _CANOperationMode 4E76                         ??_abs 00CD    __size_of_CANreceiveMessage 050C  
                       ?_fabs 00AD                 ___fltol@sign1 00C9                         ?_atan 00D1  
                       ?_asin 016C               __end_of___fladd 2974                         ?_main 0001  
             __end_of___fldiv 35A4               __end_of___flneg 4E06               __end_of___flmul 2E1A  
             __end_of___fltol 49E0                         ?_sqrt 00C1                         _T0CON 000FD5  
                       _T3CON 000FB1            __size_of_ISR_Bassa 0220               __end_of___lwdiv 4C2C  
                       i1l404 2258                         i1l662 0104                         i1l671 01BE  
                       i1l672 01F0                         i1l665 0182                         i1l657 0186  
                       i2l652 4B16                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _TMR3H 000FB3                         _TMR3L 000FB2                         _PORTA 000F80  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
               __CFG_PWRT$OFF 000000              __end_of_ISR_Alta 4BB4                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
          CANInitialize@flags 0089                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         fabs@d 00AD                         _errno 011E  
                       atan@f 00D1                         atan@x 015B                         atan@y 0157  
                       asin@x 016C                         asin@y 017C                __pbitbssCOMRAM 0230  
                       tablat 000FF5          __end_of_CANisTxReady 4E56                         sqrt@a 00C1  
                       sqrt@i 0158                         sqrt@p 015D                         status 000FD8  
                ?_park_search 0001               __initialization 4C98                  __end_of_fabs 4DCE  
                __end_of_atan 4132                  __end_of_asin 3C54                  __end_of_main 4D90  
                __end_of_sqrt 31E4                        ??_fabs 00B1                        ??_atan 00D5  
                      ??_asin 00D5                        ??_main 00D5                        ??_sqrt 00C5  
               __activetblptr 000003             _CANisTxReady$2808 0077                        _ADCON1 000FC1  
                      _CANCON 000F6F               __CFG_BBSIZ$1024 000000             _spazio_parcheggio 00E7  
                      i1l5020 21C6                        i1l5032 2220                        i1l5024 21E4  
                      i1l5016 21A8                        i1l5008 2138                        i1l5034 2252  
                      i1l5028 2202                        i1l5070 23B8                        i1l5090 247A  
                      i1l5082 2442                        i1l5306 01B0                        i1l5094 2496  
                      i1l5086 245E                        i1l5078 2426                        i1l5270 00E0  
                      i1l5254 0066                        i1l5096 24C8                        i2l1187 4C22  
                      i1l5284 013C                        i1l5276 010C                        i1l5294 016C  
                      i1l5288 0144                        i2l6204 4C14                        i2l6224 4B76  
                      i2l6192 4BD2                        i2l6194 4BDE                        i2l6196 4BE4  
                      _RXB0D0 000F66                        _RXB0D1 000F67                        _RXB0D2 000F68  
                      _RXB0D3 000F69                        _RXB0D4 000F6A                        _RXB1D0 000F56  
                      _RXB0D5 000F6B                        _RXB1D1 000F57                        _RXB0D6 000F6C  
                      _RXB1D2 000F58                        _RXB0D7 000F6D                        _RXB1D3 000F59  
                      _RXB1D4 000F5A                        _RXB1D5 000F5B                        _RXB1D6 000F5C  
                      _RXB1D7 000F5D                        _TXB0D0 000F46                        _TXB0D1 000F47  
                      _TXB0D2 000F48                        _TXB0D3 000F49                        _TXB1D0 000F36  
                      _TXB0D4 000F4A                        _TXB1D1 000F37                        _TXB0D5 000F4B  
                      _TXB1D2 000F38                        _TXB0D6 000F4C                        _TXB1D3 000F39  
                      _TXB0D7 000F4D                        _TXB2D0 000F26                        _TXB1D4 000F3A  
                      _TXB2D1 000F27                        _TXB1D5 000F3B                        _TXB2D2 000F28  
                      _TXB1D6 000F3C                        _TXB2D3 000F29                        _TXB1D7 000F3D  
                      _TXB2D4 000F2A                        _TXB2D5 000F2B                        _TXB2D6 000F2C  
                      _TXB2D7 000F2D            CANsendMessage@data 007B              __end_of_can_send 4AD4  
          CANsendMessage@tamp 0083              __end_of___xxtofl 4300             __end_of_ISR_Bassa 0238  
       __size_of_CANSetFilter 0B06                __CFG_XINST$OFF 000000                        ___flge 44C6  
             _data_correction 013F                     ??___fladd 00B5                     ??___fldiv 007F  
                   ??___flneg 00AD                __CFG_STVREN$ON 000000                     ??___flmul 0098  
                   ??___fltol 00C5                     ??___lwdiv 0064                  ??_CANSetMask 007C  
                      _gianni 0044                        clear_0 4C9E                        clear_1 4CAA  
                      clear_2 4CB8               __CFG_BOREN$BOHW 000000                  __pdataCOMRAM 0047  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                  _CANSetFilter 0D2E                    ___flge@ff1 00B1  
                  ___flge@ff2 00B5                  ___xxtofl@arg 015D                  ___xxtofl@exp 015C  
                ___xxtofl@val 00CF                    __accesstop 0060       __end_of__initialization 4CE8  
          __end_of_CANSetMask 3942               __CFG_PBADEN$OFF 000000                    ___flneg@f1 00A9  
               ?_park_routine 0001                  eval_poly@res 00CD                 ___rparam_used 000000  
                  ___fltol@f1 00C1                __pcstackCOMRAM 0001                     ?_ISR_Alta 0001  
                __pidataBANK0 4E8C              ??_configurazione 0091         CANSetFilter@numBuffer 0080  
                _actual_speed 00E1         __size_of_CANisTxReady 0024      __end_of_CANOperationMode 4E8C  
                  __pbssBANK0 00D5                    __pbssBANK1 0100               _sensor_distance 0024  
          __size_of_eval_poly 0118                    _data_brake 0137                ??_park_routine 0087  
               ISR_Bassa@gigi 0022       __size_of_CANsendMessage 078C                    _data_speed 0147  
                  _activation 0230      __size_of_can_interpreter 0054            __size_of_parallelo 028C  
        __size_of_park_search 0166             _old_alignment_gap 0118                    ??_ISR_Alta 0067  
                     ?___flge 00B1                       _CANSTAT 000F6E                  _CANisTxReady 4E32  
                     _BRGCON1 000F70                       _BRGCON2 000F71                       _BRGCON3 000F72  
                   ?_can_send 0001                     ?___xxtofl 00CF        __size_of_CANInitialize 01C6  
                     _RXB0DLC 000F65                       _RXB1DLC 000F55                       _RXB0CON 000F60  
                     _RXB1CON 000F50                       _TXB0DLC 000F45                       _TXB1DLC 000F35  
                     _TXB2DLC 000F25           CANsendMessage@flags 007E                       __Hparam 0000  
                  _left_speed 003A                       __Lparam 0000               __size_of___flge 0190  
                     ___fladd 24CC                       ___fldiv 31E4                       ___flneg 4DCE  
                     ___flmul 2974                       ___fltol 48D4                       ___lwdiv 4BB4  
                __psmallconst 0D00          CANInitialize@propSeg 008E                       __pcinit 4C98  
           __end_of_eval_poly 48D4                       __ramtop 0D00                       __ptext0 4D46  
                     __ptext1 4656                       __ptext2 3C54                       __ptext3 3942  
                     __ptext4 2E1A                       __ptext5 3EE0                       __ptext6 4D90  
                     __ptext7 4DCE                       __ptext8 47BC                       __ptext9 2974  
                  ??_can_send 0087                  __size_of_abs 002C               atan@val_squared 0160  
                  ??___xxtofl 0157                       atan@val 0164             __end_of_parallelo 3EE0  
                     asin@sgn 0170        CANreceiveMessage@error 000B               _start_operation 0236  
              __pintcode_body 4AD4          end_of_initialization 4CE8                       int_func 4AD4  
               _CANInitialize 4300                     _ISR_Bassa 0018                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE                       sqrt@grs 015E  
                     sqrt@exp 0162             ??_can_interpreter 0077       _steering_correction_dir 0237  
                   _PORTBbits 000F81                CANSetMask@mask 0077                CANSetMask@tamp 0081  
                _distance_set 0110                CANSetMask@type 007B          __end_of_park_routine 4E76  
                 ___fladd@grs 00C0                 ___xxtofl@sign 015B                     _TRISBbits 000F93  
                 ___fldiv@grs 008A                   ___fldiv@rem 0084                     _MUX_index 0042  
                  _pulse_time 003C       _clock_counter_reference 0034                   ___flmul@grs 009E  
              _CANsendMessage 1834              CANInitialize@BRP 0088              CANInitialize@SJW 0087  
              ?_CANInitialize 0085                    ?_ISR_Bassa 0001                __end_of___flge 4656  
           __size_of_ISR_Alta 4BAC                 __pidataCOMRAM 4E8E           start_initialization 4C98  
                  eval_poly@d 00C5                    eval_poly@n 00C7                    eval_poly@x 00C1  
                 __end_of_abs 4E32           CANSetMask@numBuffer 0080                 _data_speed_rx 0108  
      __end_of_CANsendMessage 1FC0             ?_CANOperationMode 0001                 _data_steering 014F  
          ??_CANOperationMode 0077             _distance_received 0233    CANInitialize@FilterConfig1 008F  
  CANInitialize@FilterConfig2 0090           _steering_correction 0045                      ??___flge 00B9  
                 __pdataBANK0 00E7              __CFG_LPT1OSC$OFF 000000                     ___fladd@a 00B1  
                   ___fladd@b 00AD        CANInitialize@phaseSeg1 0085        CANInitialize@phaseSeg2 0086  
                   ___fldiv@a 007B                     ___fldiv@b 0077                     ___flmul@a 0094  
                   ___flmul@b 0090                   __pbssCOMRAM 0024                 __pcstackBANK0 0060  
               __pcstackBANK1 0157                   _BRGCON2bits 000F71                   _BRGCON3bits 000F72  
           __size_of_can_send 00F4             __size_of___xxtofl 01CE               ?_CANsendMessage 0077  
             ??_CANInitialize 008A                     _asin$3620 0178                     _asin$3621 0174  
                   _asin$3619 0180                 ??_park_search 0186                 _alignment_gap 00D5  
          CANSetFilter@filter 0077              ___lwdiv@dividend 0060                    ISR_Bassa@i 0023  
                 ??_ISR_Bassa 000D                     __pintcode 0008                      ?___fladd 00AD  
                    ?___fldiv 0077                      ?___flneg 00A9                      ?___flmul 0090  
                    ?___fltol 00C1         __size_of_park_routine 0020                      ?___lwdiv 0060  
                 __pintcodelo 0018                   __smallconst 0D00                   _COMSTATbits 000F74  
                   _eval_poly 47BC              ___lwdiv@quotient 0065       __size_of_configurazione 006C  
                   _parallelo 3C54         CANreceiveMessage@tamp 000C                      _LATBbits 000F8A  
             _can_interpreter 4CF2                     atan@recip 015F                  _park_routine 4E56  
_delay_quartz_frequency_value 0047                      _IPR3bits 000FA5                      _PIE3bits 000FA3  
                    i1u620_20 2078                      i1u620_26 207A                      i1u621_20 20A6  
                    i1u621_26 20A8                      i1u631_20 2300                      i1u623_25 20BC  
                    i1u631_26 2302                      i1u632_20 232A                      i1u640_25 24A2  
                    i1u632_26 232C                      i1u634_25 233E                      i1u629_25 222C  
                    i1u809_27 01E0                      _PIR3bits 000FA4                      _RXB0EIDH 000F63  
                    _RXB0EIDL 000F64                      _RXB1EIDH 000F53                      _RXB1EIDL 000F54  
                    _ISR_Alta 0008                     _set_speed 00E5                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                      _RXB0SIDH 000F61                      _RXB0SIDL 000F62  
                    _RXF0EIDH 000F02                      _RXB1SIDH 000F51                      _RXF0EIDL 000F03  
                    _RXB1SIDL 000F52                      _RXF1EIDH 000F06                      _RXF1EIDL 000F07  
                    _RXF2EIDH 000F0A                      _RXF2EIDL 000F0B                      _RXF3EIDH 000F0E  
                    _RXF3EIDL 000F0F                      _RXF4EIDH 000F12                      _RXF4EIDL 000F13  
                    _RXF5EIDH 000F16                      _RXF5EIDL 000F17                      _RXF0SIDH 000F00  
                    _RXF0SIDL 000F01           __end_of_park_search 47BC                      _TXB0EIDH 000F43  
                    _RXF1SIDH 000F04                      _TXB0EIDL 000F44                      _RXF1SIDL 000F05  
                    _TXB1EIDH 000F33                      _RXF2SIDH 000F08                      _TXB1EIDL 000F34  
                    _RXF2SIDL 000F09                      _TXB2EIDH 000F23                      _RXF3SIDH 000F0C  
                    _TXB2EIDL 000F24                      _RXF3SIDL 000F0D                      _RXF4SIDH 000F10  
                    _RXF4SIDL 000F11                      _RXF5SIDH 000F14                      _RXF5SIDL 000F15  
                    _RXM0EIDH 000F1A                      _RXM0EIDL 000F1B                      _TXB0SIDH 000F41  
                    _RXM1EIDH 000F1E                      _TXB0SIDL 000F42                      _RXM1EIDL 000F1F  
                    _TXB1SIDH 000F31                      _TXB1SIDL 000F32                      _TXB2SIDH 000F21  
                    _TXB2SIDL 000F22                      _RXM0SIDH 000F18                      _RXM0SIDL 000F19  
                    _RXM1SIDH 000F1C                      _RXM1SIDL 000F1D                   _distance_dx 0036  
                 _distance_sx 0038                      _RXERRCNT 000F75                      _TXERRCNT 000F76  
                  ?_eval_poly 00C1           __end_ofatan@coeff_a 0D19           __end_ofatan@coeff_b 0D2D  
               ?_CANSetFilter 0077                   _INTCON2bits 000FF1                    _CANCONbits 000F6F  
                  ?_parallelo 0001              _distance_average 00E3                      __Hparam0 0000  
                    __Lparam0 0000                  _RXB0SIDLbits 000F62                  _RXB1SIDLbits 000F52  
            __size_of___fladd 04A8                    _CANSetMask 35A4              __size_of___fldiv 03C0  
            __size_of___flneg 0038              __size_of___flmul 04A6              __size_of___fltol 010C  
            __size_of___lwdiv 0078                      _can_send 49E0                      ___xxtofl 4132  
                _RXF0SIDLbits 000F01               ___lwdiv@divisor 0062                  _RXF1SIDLbits 000F05  
             ___lwdiv@counter 0064                ??_CANSetFilter 007C                      __ptext10 24CC  
                    __ptext11 44C6                      __ptext20 4C2C                      __ptext12 31E4  
                    __ptext21 4300                      __ptext13 4E06                      __ptext22 35A4  
                    __ptext14 4132                      __ptext23 0D2E                      __ptext15 48D4  
                    __ptext24 4E76                      __ptext16 4E56                      __ptext25 4CF2  
                    __ptext17 49E0                      __ptext18 1834                      __ptext27 1FC0  
                    __ptext19 4E32                      __ptext29 4BB4                  _RXF2SIDLbits 000F09  
     __end_of_can_interpreter 4D46                  _RXF3SIDLbits 000F0D                      _distance 011C  
                _RXF4SIDLbits 000F11                  _RXF5SIDLbits 000F15      CANsendMessage@dataLength 007D  
               __size_of_fabs 003E                 __size_of_atan 0252                 __size_of_asin 0312  
               __size_of_main 004A                 __size_of_sqrt 03CA                   _park_search 4656  
        CANreceiveMessage@msg 0001                  _TXB0SIDLbits 000F42                  _TXB1SIDLbits 000F32  
                _TXB2SIDLbits 000F22                      int$flags 0048     __size_of_CANOperationMode 0016  
               ?_CANisTxReady 0001                   atan@coeff_a 0D01                   atan@coeff_b 0D19  
                 _RXB0DLCbits 000F65                   _RXB1DLCbits 000F55                  _RXM0SIDLbits 000F19  
                 _RXB0CONbits 000F60                   _RXB1CONbits 000F50             _CANreceiveMessage 1FC0  
                _RXM1SIDLbits 000F1D                    _INTCONbits 000FF2                   ??_eval_poly 00C9  
            ??_CANsendMessage 007F            ?_CANreceiveMessage 0001                  _request_sent 0235  
                   sqrt@tfrac 0159                _configurazione 4C2C      CANsendMessage@identifier 0077  
                 ??_parallelo 0184                      intlevel1 0000                      intlevel2 0000  
            CANSetFilter@tamp 0081              CANSetFilter@type 007B           ??_CANreceiveMessage 0003  
                 _TXB0DLCbits 000F45                   _right_speed 003E                   _TXB1DLCbits 000F35  
                 _TXB0CONbits 000F40                   _TXB2DLCbits 000F25                   _TXB1CONbits 000F30  
                 _TXB2CONbits 000F20          CANOperationMode@mode 0077                   ?_CANSetMask 0077  
              ??_CANisTxReady 0077                _distance_error 0232     __end_of_CANreceiveMessage 24CC  
                    sqrt@frac 0168                      sqrt@sign 0157                      sqrt@root 0164  
                 _timerValue2 0040        __end_of_configurazione 4C98                 ___fladd@signs 00BD  
               _distance_wait 0234              ?_can_interpreter 0001                  ___fladd@aexp 00BE  
                ___fladd@bexp 00BF         __end_of_CANInitialize 44C6  
