

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu May 05 17:14:32 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    60                           	psect	param0,global,class=BANK0,space=1,delta=1
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62  0000                     
    63                           	psect	idataBANK0
    64  005FE4                     __pidataBANK0:
    65                           	opt stack 0
    66                           
    67                           ;initializer for _delay_quartz_frequency_value
    68  005FE4  10                 	db	16
    69                           
    70                           	psect	idataBANK1
    71  005FDA                     __pidataBANK1:
    72                           	opt stack 0
    73                           
    74                           ;initializer for _larghezza
    75  005FDA  0000               	dw	0
    76  005FDC  4200               	dw	16896
    77                           
    78                           ;initializer for _spazio_parcheggio
    79  005FDE  0064               	dw	100
    80                           
    81                           ;initializer for _raggio
    82  005FE0  0000               	dw	0
    83  005FE2  425C               	dw	16988
    84                           
    85                           	psect	smallconst
    86  000D00                     __psmallconst:
    87                           	opt stack 0
    88  000D00  00                 	db	0
    89  000D01                     atan@coeff_a:
    90                           	opt stack 0
    91  000D01  3C06               	dw	15366
    92  000D03  4204               	dw	16900
    93  000D05  9F7D               	dw	40829
    94  000D07  426A               	dw	17002
    95  000D09  905C               	dw	36956
    96  000D0B  4201               	dw	16897
    97  000D0D  4D60               	dw	19808
    98  000D0F  40BB               	dw	16571
    99  000D11  EC51               	dw	60497
   100  000D13  3E47               	dw	15943
   101  000D15  8DDE               	dw	36318
   102  000D17  BB1F               	dw	47903
   103  000D19                     __end_ofatan@coeff_a:
   104                           	opt stack 0
   105  000D19                     atan@coeff_b:
   106                           	opt stack 0
   107  000D19  3C06               	dw	15366
   108  000D1B  4204               	dw	16900
   109  000D1D  59C0               	dw	22976
   110  000D1F  428B               	dw	17035
   111  000D21  0474               	dw	1140
   112  000D23  4244               	dw	16964
   113  000D25  9BF9               	dw	39929
   114  000D27  414F               	dw	16719
   115  000D29  0000               	dw	0
   116  000D2B  3F80               	dw	16256
   117  000D2D                     __end_ofatan@coeff_b:
   118                           	opt stack 0
   119  000D2D                     sin@coeff_a:
   120                           	opt stack 0
   121  000D2D  F3EC               	dw	62444
   122  000D2F  484A               	dw	18506
   123  000D31  9535               	dw	38197
   124  000D33  C795               	dw	51093
   125  000D35  C117               	dw	49431
   126  000D37  45DC               	dw	17884
   127  000D39  DBFD               	dw	56317
   128  000D3B  C36D               	dw	50029
   129  000D3D  B372               	dw	45938
   130  000D3F  4033               	dw	16435
   131  000D41                     __end_ofsin@coeff_a:
   132                           	opt stack 0
   133  000D41                     sin@coeff_b:
   134                           	opt stack 0
   135  000D41  342B               	dw	13355
   136  000D43  4801               	dw	18433
   137  000D45  9D7F               	dw	40319
   138  000D47  45B0               	dw	17840
   139  000D49  FFE7               	dw	65511
   140  000D4B  42D9               	dw	17113
   141  000D4D  0000               	dw	0
   142  000D4F  3F80               	dw	16256
   143  000D51                     __end_ofsin@coeff_b:
   144                           	opt stack 0
   145  0000                     _RXB1CON	set	3920
   146  0000                     _RXB1CONbits	set	3920
   147  0000                     _RXB1D0	set	3926
   148  0000                     _RXB1D1	set	3927
   149  0000                     _RXB1D2	set	3928
   150  0000                     _RXB1D3	set	3929
   151  0000                     _RXB1D4	set	3930
   152  0000                     _RXB1D5	set	3931
   153  0000                     _RXB1D6	set	3932
   154  0000                     _RXB1D7	set	3933
   155  0000                     _RXB1DLC	set	3925
   156  0000                     _RXB1DLCbits	set	3925
   157  0000                     _RXB1EIDH	set	3923
   158  0000                     _RXB1EIDL	set	3924
   159  0000                     _RXB1SIDH	set	3921
   160  0000                     _RXB1SIDL	set	3922
   161  0000                     _RXB1SIDLbits	set	3922
   162  0000                     _RXF0EIDH	set	3842
   163  0000                     _RXF0EIDL	set	3843
   164  0000                     _RXF0SIDH	set	3840
   165  0000                     _RXF0SIDL	set	3841
   166  0000                     _RXF0SIDLbits	set	3841
   167  0000                     _RXF1EIDH	set	3846
   168  0000                     _RXF1EIDL	set	3847
   169  0000                     _RXF1SIDH	set	3844
   170  0000                     _RXF1SIDL	set	3845
   171  0000                     _RXF1SIDLbits	set	3845
   172  0000                     _RXF2EIDH	set	3850
   173  0000                     _RXF2EIDL	set	3851
   174  0000                     _RXF2SIDH	set	3848
   175  0000                     _RXF2SIDL	set	3849
   176  0000                     _RXF2SIDLbits	set	3849
   177  0000                     _RXF3EIDH	set	3854
   178  0000                     _RXF3EIDL	set	3855
   179  0000                     _RXF3SIDH	set	3852
   180  0000                     _RXF3SIDL	set	3853
   181  0000                     _RXF3SIDLbits	set	3853
   182  0000                     _RXF4EIDH	set	3858
   183  0000                     _RXF4EIDL	set	3859
   184  0000                     _RXF4SIDH	set	3856
   185  0000                     _RXF4SIDL	set	3857
   186  0000                     _RXF4SIDLbits	set	3857
   187  0000                     _RXF5EIDH	set	3862
   188  0000                     _RXF5EIDL	set	3863
   189  0000                     _RXF5SIDH	set	3860
   190  0000                     _RXF5SIDL	set	3861
   191  0000                     _RXF5SIDLbits	set	3861
   192  0000                     _RXM0EIDH	set	3866
   193  0000                     _RXM0EIDL	set	3867
   194  0000                     _RXM0SIDH	set	3864
   195  0000                     _RXM0SIDL	set	3865
   196  0000                     _RXM0SIDLbits	set	3865
   197  0000                     _RXM1EIDH	set	3870
   198  0000                     _RXM1EIDL	set	3871
   199  0000                     _RXM1SIDH	set	3868
   200  0000                     _RXM1SIDL	set	3869
   201  0000                     _RXM1SIDLbits	set	3869
   202  0000                     _TXB0CONbits	set	3904
   203  0000                     _TXB0D0	set	3910
   204  0000                     _TXB0D1	set	3911
   205  0000                     _TXB0D2	set	3912
   206  0000                     _TXB0D3	set	3913
   207  0000                     _TXB0D4	set	3914
   208  0000                     _TXB0D5	set	3915
   209  0000                     _TXB0D6	set	3916
   210  0000                     _TXB0D7	set	3917
   211  0000                     _TXB0DLC	set	3909
   212  0000                     _TXB0DLCbits	set	3909
   213  0000                     _TXB0EIDH	set	3907
   214  0000                     _TXB0EIDL	set	3908
   215  0000                     _TXB0SIDH	set	3905
   216  0000                     _TXB0SIDL	set	3906
   217  0000                     _TXB0SIDLbits	set	3906
   218  0000                     _TXB1CONbits	set	3888
   219  0000                     _TXB1D0	set	3894
   220  0000                     _TXB1D1	set	3895
   221  0000                     _TXB1D2	set	3896
   222  0000                     _TXB1D3	set	3897
   223  0000                     _TXB1D4	set	3898
   224  0000                     _TXB1D5	set	3899
   225  0000                     _TXB1D6	set	3900
   226  0000                     _TXB1D7	set	3901
   227  0000                     _TXB1DLC	set	3893
   228  0000                     _TXB1DLCbits	set	3893
   229  0000                     _TXB1EIDH	set	3891
   230  0000                     _TXB1EIDL	set	3892
   231  0000                     _TXB1SIDH	set	3889
   232  0000                     _TXB1SIDL	set	3890
   233  0000                     _TXB1SIDLbits	set	3890
   234  0000                     _TXB2CONbits	set	3872
   235  0000                     _TXB2D0	set	3878
   236  0000                     _TXB2D1	set	3879
   237  0000                     _TXB2D2	set	3880
   238  0000                     _TXB2D3	set	3881
   239  0000                     _TXB2D4	set	3882
   240  0000                     _TXB2D5	set	3883
   241  0000                     _TXB2D6	set	3884
   242  0000                     _TXB2D7	set	3885
   243  0000                     _TXB2DLC	set	3877
   244  0000                     _TXB2DLCbits	set	3877
   245  0000                     _TXB2EIDH	set	3875
   246  0000                     _TXB2EIDL	set	3876
   247  0000                     _TXB2SIDH	set	3873
   248  0000                     _TXB2SIDL	set	3874
   249  0000                     _TXB2SIDLbits	set	3874
   250  0000                     _ADCON1	set	4033
   251  0000                     _BRGCON1	set	3952
   252  0000                     _BRGCON2	set	3953
   253  0000                     _BRGCON2bits	set	3953
   254  0000                     _BRGCON3	set	3954
   255  0000                     _BRGCON3bits	set	3954
   256  0000                     _CANCON	set	3951
   257  0000                     _CANCONbits	set	3951
   258  0000                     _CANSTAT	set	3950
   259  0000                     _COMSTATbits	set	3956
   260  0000                     _INTCON2bits	set	4081
   261  0000                     _INTCONbits	set	4082
   262  0000                     _IPR3bits	set	4005
   263  0000                     _LATA	set	3977
   264  0000                     _LATB	set	3978
   265  0000                     _LATBbits	set	3978
   266  0000                     _LATC	set	3979
   267  0000                     _PIE3bits	set	4003
   268  0000                     _PIR3bits	set	4004
   269  0000                     _PORTA	set	3968
   270  0000                     _PORTBbits	set	3969
   271  0000                     _RCONbits	set	4048
   272  0000                     _RXB0CON	set	3936
   273  0000                     _RXB0CONbits	set	3936
   274  0000                     _RXB0D0	set	3942
   275  0000                     _RXB0D1	set	3943
   276  0000                     _RXB0D2	set	3944
   277  0000                     _RXB0D3	set	3945
   278  0000                     _RXB0D4	set	3946
   279  0000                     _RXB0D5	set	3947
   280  0000                     _RXB0D6	set	3948
   281  0000                     _RXB0D7	set	3949
   282  0000                     _RXB0DLC	set	3941
   283  0000                     _RXB0DLCbits	set	3941
   284  0000                     _RXB0EIDH	set	3939
   285  0000                     _RXB0EIDL	set	3940
   286  0000                     _RXB0SIDH	set	3937
   287  0000                     _RXB0SIDL	set	3938
   288  0000                     _RXB0SIDLbits	set	3938
   289  0000                     _RXERRCNT	set	3957
   290  0000                     _T0CON	set	4053
   291  0000                     _T0CONbits	set	4053
   292  0000                     _T3CON	set	4017
   293  0000                     _TMR0H	set	4055
   294  0000                     _TMR0L	set	4054
   295  0000                     _TMR3H	set	4019
   296  0000                     _TMR3L	set	4018
   297  0000                     _TRISA	set	3986
   298  0000                     _TRISB	set	3987
   299  0000                     _TRISBbits	set	3987
   300  0000                     _TRISC	set	3988
   301  0000                     _TXERRCNT	set	3958
   302                           
   303                           ; #config settings
   304  000D51  00                 	db	0	; dummy byte at the end
   305  0000                     
   306                           	psect	cinit
   307  005D1E                     __pcinit:
   308                           	opt stack 0
   309  005D1E                     start_initialization:
   310                           	opt stack 0
   311  005D1E                     __initialization:
   312                           	opt stack 0
   313                           
   314                           ; Clear objects allocated to BANK1 (141 bytes)
   315  005D1E  EE01  F000         	lfsr	0,__pbssBANK1
   316  005D22  0E8D               	movlw	141
   317  005D24                     clear_0:
   318  005D24  6AEE               	clrf	postinc0,c
   319  005D26  06E8               	decf	wreg,f,c
   320  005D28  E1FD               	bnz	clear_0
   321                           
   322                           ; Clear objects allocated to BANK0 (4 bytes)
   323  005D2A  0100               	movlb	0
   324  005D2C  6BE7               	clrf	(__pbssBANK0+3)& (0+255),b
   325  005D2E  6BE6               	clrf	(__pbssBANK0+2)& (0+255),b
   326  005D30  6BE5               	clrf	(__pbssBANK0+1)& (0+255),b
   327  005D32  6BE4               	clrf	__pbssBANK0& (0+255),b
   328                           
   329                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   330  005D34  6A47               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   331  005D36  6A46               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   332                           
   333                           ; Clear objects allocated to COMRAM (34 bytes)
   334  005D38  EE00  F024         	lfsr	0,__pbssCOMRAM
   335  005D3C  0E22               	movlw	34
   336  005D3E                     clear_1:
   337  005D3E  6AEE               	clrf	postinc0,c
   338  005D40  06E8               	decf	wreg,f,c
   339  005D42  E1FD               	bnz	clear_1
   340                           
   341                           ; Initialize objects allocated to BANK1 (10 bytes)
   342                           ; load TBLPTR registers with __pidataBANK1
   343  005D44  0EDA               	movlw	low __pidataBANK1
   344  005D46  6EF6               	movwf	tblptrl,c
   345  005D48  0E5F               	movlw	high __pidataBANK1
   346  005D4A  6EF7               	movwf	tblptrh,c
   347  005D4C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   348  005D4E  6EF8               	movwf	tblptru,c
   349  005D50  EE01  F0E2         	lfsr	0,__pdataBANK1
   350  005D54  EE10 F00A          	lfsr	1,10
   351  005D58                     copy_data0:
   352  005D58  0009               	tblrd		*+
   353  005D5A  CFF5 FFEE          	movff	tablat,postinc0
   354  005D5E  50E5               	movf	postdec1,w,c
   355  005D60  50E1               	movf	fsr1l,w,c
   356  005D62  E1FA               	bnz	copy_data0
   357                           
   358                           ; Initialize objects allocated to BANK0 (1 bytes)
   359                           ; load TBLPTR registers with __pidataBANK0
   360  005D64  0EE4               	movlw	low __pidataBANK0
   361  005D66  6EF6               	movwf	tblptrl,c
   362  005D68  0E5F               	movlw	high __pidataBANK0
   363  005D6A  6EF7               	movwf	tblptrh,c
   364  005D6C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   365  005D6E  6EF8               	movwf	tblptru,c
   366  005D70  0009               	tblrd		*+	;fetch initializer
   367  005D72  CFF5 F0E8          	movff	tablat,__pdataBANK0
   368  005D76                     end_of_initialization:
   369                           	opt stack 0
   370  005D76                     __end_of__initialization:
   371                           	opt stack 0
   372  005D76  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   373  005D78  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   374  005D7A  0100               	movlb	0
   375  005D7C  EFEA  F02E         	goto	_main	;jump to C main() function
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           postdec1	equ	0xFE5
   383                           fsr1l	equ	0xFE1
   384                           
   385                           	psect	bitbssCOMRAM
   386  000230                     __pbitbssCOMRAM:
   387                           	opt stack 0
   388  000230                     _activation:
   389                           	opt stack 0
   390  000230                     	ds	1
   391  000231                     _asd:
   392                           	opt stack 0
   393  000231                     	ds	1
   394  000232                     _dir:
   395                           	opt stack 0
   396  000232                     	ds	1
   397  000233                     _distance_error:
   398                           	opt stack 0
   399  000233                     	ds	1
   400  000234                     _distance_received:
   401                           	opt stack 0
   402  000234                     	ds	1
   403  000235                     _distance_received1:
   404                           	opt stack 0
   405  000235                     	ds	1
   406  000236                     _distance_wait:
   407                           	opt stack 0
   408  000236                     	ds	1
   409  000237                     _old_data_correction:
   410                           	opt stack 0
   411  000237                     	ds	1
   412  000238                     _request_sent:
   413                           	opt stack 0
   414  000238                     	ds	1
   415  000239                     _request_sent1:
   416                           	opt stack 0
   417  000239                     	ds	1
   418  00023A                     _start_operation:
   419                           	opt stack 0
   420  00023A                     	ds	1
   421  00023B                     _steering_correction_dir:
   422                           	opt stack 0
   423  00023B                     	ds	1
   424                           tblptru	equ	0xFF8
   425                           tblptrh	equ	0xFF7
   426                           tblptrl	equ	0xFF6
   427                           tablat	equ	0xFF5
   428                           postinc0	equ	0xFEE
   429                           wreg	equ	0xFE8
   430                           postdec1	equ	0xFE5
   431                           fsr1l	equ	0xFE1
   432                           
   433                           	psect	bssCOMRAM
   434  000024                     __pbssCOMRAM:
   435                           	opt stack 0
   436  000024                     _sensor_distance:
   437                           	opt stack 0
   438  000024                     	ds	16
   439  000034                     _clock_counter_reference:
   440                           	opt stack 0
   441  000034                     	ds	2
   442  000036                     _distance_average:
   443                           	opt stack 0
   444  000036                     	ds	2
   445  000038                     _distance_dx:
   446                           	opt stack 0
   447  000038                     	ds	2
   448  00003A                     _distance_sx:
   449                           	opt stack 0
   450  00003A                     	ds	2
   451  00003C                     _left_speed:
   452                           	opt stack 0
   453  00003C                     	ds	2
   454  00003E                     _right_speed:
   455                           	opt stack 0
   456  00003E                     	ds	2
   457  000040                     _timerValue2:
   458                           	opt stack 0
   459  000040                     	ds	2
   460  000042                     _MUX_index:
   461                           	opt stack 0
   462  000042                     	ds	1
   463  000043                     _asus:
   464                           	opt stack 0
   465  000043                     	ds	1
   466  000044                     _gianni:
   467                           	opt stack 0
   468  000044                     	ds	1
   469  000045                     _steering_correction:
   470                           	opt stack 0
   471  000045                     	ds	1
   472                           tblptru	equ	0xFF8
   473                           tblptrh	equ	0xFF7
   474                           tblptrl	equ	0xFF6
   475                           tablat	equ	0xFF5
   476                           postinc0	equ	0xFEE
   477                           wreg	equ	0xFE8
   478                           postdec1	equ	0xFE5
   479                           fsr1l	equ	0xFE1
   480                           
   481                           	psect	bssBANK0
   482  0000E4                     __pbssBANK0:
   483                           	opt stack 0
   484  0000E4                     _alignment_gap:
   485                           	opt stack 0
   486  0000E4                     	ds	4
   487                           tblptru	equ	0xFF8
   488                           tblptrh	equ	0xFF7
   489                           tblptrl	equ	0xFF6
   490                           tablat	equ	0xFF5
   491                           postinc0	equ	0xFEE
   492                           wreg	equ	0xFE8
   493                           postdec1	equ	0xFE5
   494                           fsr1l	equ	0xFE1
   495                           
   496                           	psect	dataBANK0
   497  0000E8                     __pdataBANK0:
   498                           	opt stack 0
   499  0000E8                     _delay_quartz_frequency_value:
   500                           	opt stack 0
   501  0000E8                     	ds	1
   502                           tblptru	equ	0xFF8
   503                           tblptrh	equ	0xFF7
   504                           tblptrl	equ	0xFF6
   505                           tablat	equ	0xFF5
   506                           postinc0	equ	0xFEE
   507                           wreg	equ	0xFE8
   508                           postdec1	equ	0xFE5
   509                           fsr1l	equ	0xFE1
   510                           
   511                           	psect	bssBANK1
   512  000100                     __pbssBANK1:
   513                           	opt stack 0
   514  000100                     _MUX_select:
   515                           	opt stack 0
   516  000100                     	ds	8
   517  000108                     _data_speed_rx:
   518                           	opt stack 0
   519  000108                     	ds	8
   520  000110                     _distance_set:
   521                           	opt stack 0
   522  000110                     	ds	8
   523  000118                     _Pminimo:
   524                           	opt stack 0
   525  000118                     	ds	4
   526  00011C                     _alfa:
   527                           	opt stack 0
   528  00011C                     	ds	4
   529  000120                     _beta:
   530                           	opt stack 0
   531  000120                     	ds	4
   532  000124                     _bordo:
   533                           	opt stack 0
   534  000124                     	ds	4
   535  000128                     _jjj:
   536                           	opt stack 0
   537  000128                     	ds	4
   538  00012C                     _kkk:
   539                           	opt stack 0
   540  00012C                     	ds	4
   541  000130                     _n:
   542                           	opt stack 0
   543  000130                     	ds	4
   544  000134                     _old_alignment_gap:
   545                           	opt stack 0
   546  000134                     	ds	4
   547  000138                     _prima_sterzata:
   548                           	opt stack 0
   549  000138                     	ds	4
   550  00013C                     _x:
   551                           	opt stack 0
   552  00013C                     	ds	4
   553  000140                     _z:
   554                           	opt stack 0
   555  000140                     	ds	4
   556  000144                     _actual_speed:
   557                           	opt stack 0
   558  000144                     	ds	2
   559  000146                     _distance:
   560                           	opt stack 0
   561  000146                     	ds	2
   562  000148                     _errno:
   563                           	opt stack 0
   564  000148                     	ds	2
   565  00014A                     _pulse_time:
   566                           	opt stack 0
   567  00014A                     	ds	2
   568  00014C                     _set_speed:
   569                           	opt stack 0
   570  00014C                     	ds	2
   571  00014E                     _msg:
   572                           	opt stack 0
   573  00014E                     	ds	15
   574  00015D                     _data:
   575                           	opt stack 0
   576  00015D                     	ds	8
   577  000165                     _data_brake:
   578                           	opt stack 0
   579  000165                     	ds	8
   580  00016D                     _data_correction:
   581                           	opt stack 0
   582  00016D                     	ds	8
   583  000175                     _data_speed:
   584                           	opt stack 0
   585  000175                     	ds	8
   586  00017D                     _data_steering:
   587                           	opt stack 0
   588  00017D                     	ds	8
   589  000185                     _data_test:
   590                           	opt stack 0
   591  000185                     	ds	8
   592                           tblptru	equ	0xFF8
   593                           tblptrh	equ	0xFF7
   594                           tblptrl	equ	0xFF6
   595                           tablat	equ	0xFF5
   596                           postinc0	equ	0xFEE
   597                           wreg	equ	0xFE8
   598                           postdec1	equ	0xFE5
   599                           fsr1l	equ	0xFE1
   600                           
   601                           	psect	dataBANK1
   602  0001E2                     __pdataBANK1:
   603                           	opt stack 0
   604  0001E2                     _larghezza:
   605                           	opt stack 0
   606  0001E2                     	ds	4
   607  0001E6                     _spazio_parcheggio:
   608                           	opt stack 0
   609  0001E6                     	ds	2
   610  0001E8                     _raggio:
   611                           	opt stack 0
   612  0001E8                     	ds	4
   613                           tblptru	equ	0xFF8
   614                           tblptrh	equ	0xFF7
   615                           tblptrl	equ	0xFF6
   616                           tablat	equ	0xFF5
   617                           postinc0	equ	0xFEE
   618                           wreg	equ	0xFE8
   619                           postdec1	equ	0xFE5
   620                           fsr1l	equ	0xFE1
   621                           
   622                           	psect	cstackBANK1
   623  00018D                     __pcstackBANK1:
   624                           	opt stack 0
   625  00018D                     ?___flsub:
   626                           	opt stack 0
   627  00018D                     atan@y:
   628                           	opt stack 0
   629  00018D                     ___flsub@b:
   630                           	opt stack 0
   631                           
   632                           ; 4 bytes @ 0x0
   633  00018D                     	ds	4
   634  000191                     atan@x:
   635                           	opt stack 0
   636  000191                     ___flsub@a:
   637                           	opt stack 0
   638                           
   639                           ; 4 bytes @ 0x4
   640  000191                     	ds	4
   641  000195                     ?_sin:
   642                           	opt stack 0
   643  000195                     atan@recip:
   644                           	opt stack 0
   645  000195                     sin@f:
   646                           	opt stack 0
   647                           
   648                           ; 4 bytes @ 0x8
   649  000195                     	ds	1
   650  000196                     atan@val_squared:
   651                           	opt stack 0
   652                           
   653                           ; 4 bytes @ 0x9
   654  000196                     	ds	3
   655  000199                     sin@y:
   656                           	opt stack 0
   657                           
   658                           ; 4 bytes @ 0xC
   659  000199                     	ds	1
   660  00019A                     atan@val:
   661                           	opt stack 0
   662                           
   663                           ; 4 bytes @ 0xD
   664  00019A                     	ds	3
   665  00019D                     _sin$3751:
   666                           	opt stack 0
   667                           
   668                           ; 4 bytes @ 0x10
   669  00019D                     	ds	1
   670  00019E                     asin@sgn:
   671                           	opt stack 0
   672                           
   673                           ; 4 bytes @ 0x11
   674  00019E                     	ds	3
   675  0001A1                     sin@x2:
   676                           	opt stack 0
   677                           
   678                           ; 4 bytes @ 0x14
   679  0001A1                     	ds	1
   680  0001A2                     _asin$3749:
   681                           	opt stack 0
   682                           
   683                           ; 4 bytes @ 0x15
   684  0001A2                     	ds	3
   685  0001A5                     sin@sgn:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0x18
   689  0001A5                     	ds	1
   690  0001A6                     _asin$3748:
   691                           	opt stack 0
   692                           
   693                           ; 4 bytes @ 0x19
   694  0001A6                     	ds	4
   695  0001AA                     asin@y:
   696                           	opt stack 0
   697                           
   698                           ; 4 bytes @ 0x1D
   699  0001AA                     	ds	4
   700  0001AE                     _asin$3747:
   701                           	opt stack 0
   702                           
   703                           ; 4 bytes @ 0x21
   704  0001AE                     	ds	4
   705  0001B2                     ??_park_search:
   706  0001B2                     ?_cos:
   707                           	opt stack 0
   708  0001B2                     cos@f:
   709                           	opt stack 0
   710                           
   711                           ; 4 bytes @ 0x25
   712  0001B2                     	ds	4
   713  0001B6                     _cos$3750:
   714                           	opt stack 0
   715                           
   716                           ; 4 bytes @ 0x29
   717  0001B6                     	ds	4
   718  0001BA                     _matematica$3740:
   719                           	opt stack 0
   720                           
   721                           ; 4 bytes @ 0x2D
   722  0001BA                     	ds	4
   723  0001BE                     _matematica$3741:
   724                           	opt stack 0
   725                           
   726                           ; 4 bytes @ 0x31
   727  0001BE                     	ds	4
   728  0001C2                     _matematica$3742:
   729                           	opt stack 0
   730                           
   731                           ; 4 bytes @ 0x35
   732  0001C2                     	ds	4
   733  0001C6                     _matematica$3743:
   734                           	opt stack 0
   735                           
   736                           ; 4 bytes @ 0x39
   737  0001C6                     	ds	4
   738  0001CA                     _matematica$3745:
   739                           	opt stack 0
   740                           
   741                           ; 4 bytes @ 0x3D
   742  0001CA                     	ds	4
   743  0001CE                     _matematica$3746:
   744                           	opt stack 0
   745                           
   746                           ; 4 bytes @ 0x41
   747  0001CE                     	ds	4
   748  0001D2                     _matematica$3744:
   749                           	opt stack 0
   750                           
   751                           ; 4 bytes @ 0x45
   752  0001D2                     	ds	4
   753  0001D6                     ??_park_routine:
   754                           
   755                           ; 0 bytes @ 0x49
   756  0001D6                     	ds	4
   757  0001DA                     _park_routine$3738:
   758                           	opt stack 0
   759                           
   760                           ; 4 bytes @ 0x4D
   761  0001DA                     	ds	4
   762  0001DE                     _park_routine$3739:
   763                           	opt stack 0
   764                           
   765                           ; 4 bytes @ 0x51
   766  0001DE                     	ds	4
   767                           tblptru	equ	0xFF8
   768                           tblptrh	equ	0xFF7
   769                           tblptrl	equ	0xFF6
   770                           tablat	equ	0xFF5
   771                           postinc0	equ	0xFEE
   772                           wreg	equ	0xFE8
   773                           postdec1	equ	0xFE5
   774                           fsr1l	equ	0xFE1
   775                           
   776                           	psect	cstackBANK0
   777  000060                     __pcstackBANK0:
   778                           	opt stack 0
   779  000060                     ?___lwdiv:
   780                           	opt stack 0
   781  000060                     ___lwdiv@dividend:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x0
   785  000060                     	ds	2
   786  000062                     ___lwdiv@divisor:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0x2
   790  000062                     	ds	2
   791  000064                     ___lwdiv@counter:
   792                           	opt stack 0
   793                           
   794                           ; 1 bytes @ 0x4
   795  000064                     	ds	1
   796  000065                     ___lwdiv@quotient:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0x5
   800  000065                     	ds	2
   801  000067                     ??_ISR_Alta:
   802                           
   803                           ; 0 bytes @ 0x7
   804  000067                     	ds	16
   805  000077                     ??_can_interpreter:
   806  000077                     ?_abs:
   807                           	opt stack 0
   808  000077                     ?___wmul:
   809                           	opt stack 0
   810  000077                     ?___awdiv:
   811                           	opt stack 0
   812  000077                     ?___fldiv:
   813                           	opt stack 0
   814  000077                     CANOperationMode@mode:
   815                           	opt stack 0
   816  000077                     _CANisTxReady$2845:
   817                           	opt stack 0
   818  000077                     ___wmul@multiplier:
   819                           	opt stack 0
   820  000077                     abs@a:
   821                           	opt stack 0
   822  000077                     ___awdiv@dividend:
   823                           	opt stack 0
   824  000077                     CANsendMessage@identifier:
   825                           	opt stack 0
   826  000077                     CANSetMask@mask:
   827                           	opt stack 0
   828  000077                     CANSetFilter@filter:
   829                           	opt stack 0
   830  000077                     ___fldiv@b:
   831                           	opt stack 0
   832  000077                     frexp@value:
   833                           	opt stack 0
   834                           
   835                           ; 4 bytes @ 0x17
   836  000077                     	ds	2
   837  000079                     ??_abs:
   838  000079                     ___wmul@multiplicand:
   839                           	opt stack 0
   840  000079                     ___awdiv@divisor:
   841                           	opt stack 0
   842                           
   843                           ; 2 bytes @ 0x19
   844  000079                     	ds	2
   845  00007B                     CANSetMask@type:
   846                           	opt stack 0
   847  00007B                     CANSetFilter@type:
   848                           	opt stack 0
   849  00007B                     ___awdiv@counter:
   850                           	opt stack 0
   851  00007B                     CANsendMessage@data:
   852                           	opt stack 0
   853  00007B                     ___wmul@product:
   854                           	opt stack 0
   855  00007B                     frexp@eptr:
   856                           	opt stack 0
   857  00007B                     ___fldiv@a:
   858                           	opt stack 0
   859                           
   860                           ; 4 bytes @ 0x1B
   861  00007B                     	ds	1
   862  00007C                     ??_CANSetMask:
   863  00007C                     ??_CANSetFilter:
   864  00007C                     ___awdiv@sign:
   865                           	opt stack 0
   866                           
   867                           ; 1 bytes @ 0x1C
   868  00007C                     	ds	1
   869  00007D                     ??_frexp:
   870  00007D                     CANsendMessage@dataLength:
   871                           	opt stack 0
   872  00007D                     delay_ms@value_ms:
   873                           	opt stack 0
   874  00007D                     ___awdiv@quotient:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x1D
   878  00007D                     	ds	1
   879  00007E                     CANsendMessage@flags:
   880                           	opt stack 0
   881                           
   882                           ; 1 bytes @ 0x1E
   883  00007E                     	ds	1
   884  00007F                     ??___fldiv:
   885  00007F                     ??_CANsendMessage:
   886  00007F                     delay_s@value_s:
   887                           	opt stack 0
   888                           
   889                           ; 1 bytes @ 0x1F
   890  00007F                     	ds	1
   891  000080                     CANSetMask@numBuffer:
   892                           	opt stack 0
   893  000080                     CANSetFilter@numBuffer:
   894                           	opt stack 0
   895  000080                     delay_s@repeat_loop:
   896                           	opt stack 0
   897                           
   898                           ; 1 bytes @ 0x20
   899  000080                     	ds	1
   900  000081                     CANSetMask@tamp:
   901                           	opt stack 0
   902  000081                     CANSetFilter@tamp:
   903                           	opt stack 0
   904                           
   905                           ; 4 bytes @ 0x21
   906  000081                     	ds	2
   907  000083                     ___fldiv@sign:
   908                           	opt stack 0
   909  000083                     CANsendMessage@tamp:
   910                           	opt stack 0
   911                           
   912                           ; 4 bytes @ 0x23
   913  000083                     	ds	1
   914  000084                     ___fldiv@rem:
   915                           	opt stack 0
   916                           
   917                           ; 4 bytes @ 0x24
   918  000084                     	ds	1
   919  000085                     CANInitialize@phaseSeg1:
   920                           	opt stack 0
   921                           
   922                           ; 1 bytes @ 0x25
   923  000085                     	ds	1
   924  000086                     CANInitialize@phaseSeg2:
   925                           	opt stack 0
   926                           
   927                           ; 1 bytes @ 0x26
   928  000086                     	ds	1
   929  000087                     can_send@data_correction1:
   930                           	opt stack 0
   931  000087                     CANInitialize@SJW:
   932                           	opt stack 0
   933                           
   934                           ; 1 bytes @ 0x27
   935  000087                     	ds	1
   936  000088                     CANInitialize@BRP:
   937                           	opt stack 0
   938  000088                     ___fldiv@new_exp:
   939                           	opt stack 0
   940                           
   941                           ; 2 bytes @ 0x28
   942  000088                     	ds	1
   943  000089                     CANInitialize@flags:
   944                           	opt stack 0
   945                           
   946                           ; 1 bytes @ 0x29
   947  000089                     	ds	1
   948  00008A                     ??_CANInitialize:
   949  00008A                     ___fldiv@grs:
   950                           	opt stack 0
   951                           
   952                           ; 4 bytes @ 0x2A
   953  00008A                     	ds	4
   954  00008E                     CANInitialize@propSeg:
   955                           	opt stack 0
   956  00008E                     ___fldiv@bexp:
   957                           	opt stack 0
   958                           
   959                           ; 1 bytes @ 0x2E
   960  00008E                     	ds	1
   961  00008F                     CANInitialize@FilterConfig1:
   962                           	opt stack 0
   963  00008F                     ___fldiv@aexp:
   964                           	opt stack 0
   965                           
   966                           ; 1 bytes @ 0x2F
   967  00008F                     	ds	1
   968  000090                     ?___flmul:
   969                           	opt stack 0
   970  000090                     CANInitialize@FilterConfig2:
   971                           	opt stack 0
   972  000090                     ___flmul@b:
   973                           	opt stack 0
   974                           
   975                           ; 4 bytes @ 0x30
   976  000090                     	ds	1
   977  000091                     
   978                           ; 0 bytes @ 0x31
   979  000091                     	ds	3
   980  000094                     ___flmul@a:
   981                           	opt stack 0
   982                           
   983                           ; 4 bytes @ 0x34
   984  000094                     	ds	4
   985  000098                     ??___flmul:
   986                           
   987                           ; 0 bytes @ 0x38
   988  000098                     	ds	4
   989  00009C                     ___flmul@sign:
   990                           	opt stack 0
   991                           
   992                           ; 1 bytes @ 0x3C
   993  00009C                     	ds	1
   994  00009D                     ___flmul@aexp:
   995                           	opt stack 0
   996                           
   997                           ; 1 bytes @ 0x3D
   998  00009D                     	ds	1
   999  00009E                     ___flmul@grs:
  1000                           	opt stack 0
  1001                           
  1002                           ; 4 bytes @ 0x3E
  1003  00009E                     	ds	4
  1004  0000A2                     ___flmul@bexp:
  1005                           	opt stack 0
  1006                           
  1007                           ; 1 bytes @ 0x42
  1008  0000A2                     	ds	1
  1009  0000A3                     ___flmul@prod:
  1010                           	opt stack 0
  1011                           
  1012                           ; 4 bytes @ 0x43
  1013  0000A3                     	ds	4
  1014  0000A7                     ___flmul@temp:
  1015                           	opt stack 0
  1016                           
  1017                           ; 2 bytes @ 0x47
  1018  0000A7                     	ds	2
  1019  0000A9                     ?___fladd:
  1020                           	opt stack 0
  1021  0000A9                     ___fladd@b:
  1022                           	opt stack 0
  1023                           
  1024                           ; 4 bytes @ 0x49
  1025  0000A9                     	ds	4
  1026  0000AD                     ___fladd@a:
  1027                           	opt stack 0
  1028                           
  1029                           ; 4 bytes @ 0x4D
  1030  0000AD                     	ds	4
  1031  0000B1                     ??___fladd:
  1032                           
  1033                           ; 0 bytes @ 0x51
  1034  0000B1                     	ds	8
  1035  0000B9                     ___fladd@signs:
  1036                           	opt stack 0
  1037                           
  1038                           ; 1 bytes @ 0x59
  1039  0000B9                     	ds	1
  1040  0000BA                     ___fladd@aexp:
  1041                           	opt stack 0
  1042                           
  1043                           ; 1 bytes @ 0x5A
  1044  0000BA                     	ds	1
  1045  0000BB                     ___fladd@bexp:
  1046                           	opt stack 0
  1047                           
  1048                           ; 1 bytes @ 0x5B
  1049  0000BB                     	ds	1
  1050  0000BC                     ___fladd@grs:
  1051                           	opt stack 0
  1052                           
  1053                           ; 1 bytes @ 0x5C
  1054  0000BC                     	ds	1
  1055  0000BD                     ?_eval_poly:
  1056                           	opt stack 0
  1057  0000BD                     ?___flneg:
  1058                           	opt stack 0
  1059  0000BD                     eval_poly@x:
  1060                           	opt stack 0
  1061  0000BD                     ___flneg@f1:
  1062                           	opt stack 0
  1063                           
  1064                           ; 4 bytes @ 0x5D
  1065  0000BD                     	ds	4
  1066  0000C1                     ?_sqrt:
  1067                           	opt stack 0
  1068  0000C1                     ?_fabs:
  1069                           	opt stack 0
  1070  0000C1                     ?___fltol:
  1071                           	opt stack 0
  1072  0000C1                     eval_poly@d:
  1073                           	opt stack 0
  1074  0000C1                     fabs@d:
  1075                           	opt stack 0
  1076  0000C1                     ___fltol@f1:
  1077                           	opt stack 0
  1078  0000C1                     sqrt@a:
  1079                           	opt stack 0
  1080                           
  1081                           ; 4 bytes @ 0x61
  1082  0000C1                     	ds	2
  1083  0000C3                     eval_poly@n:
  1084                           	opt stack 0
  1085                           
  1086                           ; 2 bytes @ 0x63
  1087  0000C3                     	ds	2
  1088  0000C5                     ??_sqrt:
  1089  0000C5                     ??_eval_poly:
  1090  0000C5                     ??___fltol:
  1091  0000C5                     ___flge@ff1:
  1092                           	opt stack 0
  1093                           
  1094                           ; 4 bytes @ 0x65
  1095  0000C5                     	ds	4
  1096  0000C9                     ___fltol@sign1:
  1097                           	opt stack 0
  1098  0000C9                     sqrt@sign:
  1099                           	opt stack 0
  1100  0000C9                     eval_poly@res:
  1101                           	opt stack 0
  1102  0000C9                     ___flge@ff2:
  1103                           	opt stack 0
  1104                           
  1105                           ; 4 bytes @ 0x69
  1106  0000C9                     	ds	1
  1107  0000CA                     ___fltol@exp1:
  1108                           	opt stack 0
  1109  0000CA                     sqrt@i:
  1110                           	opt stack 0
  1111                           
  1112                           ; 1 bytes @ 0x6A
  1113  0000CA                     	ds	1
  1114  0000CB                     ?___xxtofl:
  1115                           	opt stack 0
  1116  0000CB                     sqrt@tfrac:
  1117                           	opt stack 0
  1118  0000CB                     ___xxtofl@val:
  1119                           	opt stack 0
  1120                           
  1121                           ; 4 bytes @ 0x6B
  1122  0000CB                     	ds	2
  1123  0000CD                     ??___flge:
  1124                           
  1125                           ; 0 bytes @ 0x6D
  1126  0000CD                     	ds	2
  1127  0000CF                     ??___xxtofl:
  1128  0000CF                     sqrt@p:
  1129                           	opt stack 0
  1130                           
  1131                           ; 1 bytes @ 0x6F
  1132  0000CF                     	ds	1
  1133  0000D0                     sqrt@grs:
  1134                           	opt stack 0
  1135                           
  1136                           ; 4 bytes @ 0x70
  1137  0000D0                     	ds	1
  1138  0000D1                     ?_atan:
  1139                           	opt stack 0
  1140  0000D1                     atan@f:
  1141                           	opt stack 0
  1142                           
  1143                           ; 4 bytes @ 0x71
  1144  0000D1                     	ds	2
  1145  0000D3                     ___xxtofl@sign:
  1146                           	opt stack 0
  1147                           
  1148                           ; 1 bytes @ 0x73
  1149  0000D3                     	ds	1
  1150  0000D4                     ___xxtofl@exp:
  1151                           	opt stack 0
  1152  0000D4                     sqrt@exp:
  1153                           	opt stack 0
  1154                           
  1155                           ; 2 bytes @ 0x74
  1156  0000D4                     	ds	1
  1157  0000D5                     ___xxtofl@arg:
  1158                           	opt stack 0
  1159                           
  1160                           ; 4 bytes @ 0x75
  1161  0000D5                     	ds	1
  1162  0000D6                     sqrt@root:
  1163                           	opt stack 0
  1164                           
  1165                           ; 4 bytes @ 0x76
  1166  0000D6                     	ds	3
  1167  0000D9                     ?_floor:
  1168                           	opt stack 0
  1169  0000D9                     floor@x:
  1170                           	opt stack 0
  1171                           
  1172                           ; 4 bytes @ 0x79
  1173  0000D9                     	ds	1
  1174  0000DA                     sqrt@frac:
  1175                           	opt stack 0
  1176                           
  1177                           ; 4 bytes @ 0x7A
  1178  0000DA                     	ds	3
  1179  0000DD                     floor@i:
  1180                           	opt stack 0
  1181                           
  1182                           ; 4 bytes @ 0x7D
  1183  0000DD                     	ds	1
  1184  0000DE                     ?_asin:
  1185                           	opt stack 0
  1186  0000DE                     asin@x:
  1187                           	opt stack 0
  1188                           
  1189                           ; 4 bytes @ 0x7E
  1190  0000DE                     	ds	3
  1191  0000E1                     floor@expon:
  1192                           	opt stack 0
  1193                           
  1194                           ; 2 bytes @ 0x81
  1195  0000E1                     	ds	1
  1196  0000E2                     ??_parallelo:
  1197  0000E2                     
  1198                           ; 0 bytes @ 0x82
  1199  0000E2                     	ds	1
  1200  0000E3                     
  1201                           ; 0 bytes @ 0x83
  1202  0000E3                     	ds	1
  1203  0000E4                     tblptru	equ	0xFF8
  1204                           tblptrh	equ	0xFF7
  1205                           tblptrl	equ	0xFF6
  1206                           tablat	equ	0xFF5
  1207                           postinc0	equ	0xFEE
  1208                           wreg	equ	0xFE8
  1209                           postdec1	equ	0xFE5
  1210                           fsr1l	equ	0xFE1
  1211                           
  1212                           ; 0 bytes @ 0x84
  1213                           
  1214                           	psect	cstackCOMRAM
  1215  000001                     __pcstackCOMRAM:
  1216                           	opt stack 0
  1217  000001                     CANreceiveMessage@msg:
  1218                           	opt stack 0
  1219                           
  1220                           ; 2 bytes @ 0x0
  1221  000001                     	ds	2
  1222  000003                     ??_CANreceiveMessage:
  1223                           
  1224                           ; 0 bytes @ 0x2
  1225  000003                     	ds	8
  1226  00000B                     CANreceiveMessage@error:
  1227                           	opt stack 0
  1228                           
  1229                           ; 1 bytes @ 0xA
  1230  00000B                     	ds	1
  1231  00000C                     CANreceiveMessage@tamp:
  1232                           	opt stack 0
  1233                           
  1234                           ; 1 bytes @ 0xB
  1235  00000C                     	ds	1
  1236  00000D                     ??_ISR_Bassa:
  1237                           
  1238                           ; 0 bytes @ 0xC
  1239  00000D                     	ds	21
  1240  000022                     ISR_Bassa@gigi:
  1241                           	opt stack 0
  1242                           
  1243                           ; 1 bytes @ 0x21
  1244  000022                     	ds	1
  1245  000023                     ISR_Bassa@i:
  1246                           	opt stack 0
  1247                           
  1248                           ; 1 bytes @ 0x22
  1249  000023                     	ds	1
  1250                           tblptru	equ	0xFF8
  1251                           tblptrh	equ	0xFF7
  1252                           tblptrl	equ	0xFF6
  1253                           tablat	equ	0xFF5
  1254                           postinc0	equ	0xFEE
  1255                           wreg	equ	0xFE8
  1256                           postdec1	equ	0xFE5
  1257                           fsr1l	equ	0xFE1
  1258                           
  1259 ;;
  1260 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1261 ;;
  1262 ;; *************** function _main *****************
  1263 ;; Defined at:
  1264 ;;		line 187 in file "parcheggio.c"
  1265 ;; Parameters:    Size  Location     Type
  1266 ;;		None
  1267 ;; Auto vars:     Size  Location     Type
  1268 ;;		None
  1269 ;; Return value:  Size  Location     Type
  1270 ;;		None               void
  1271 ;; Registers used:
  1272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1282 ;;Total ram usage:        0 bytes
  1283 ;; Hardware stack levels required when called:   10
  1284 ;; This function calls:
  1285 ;;		_can_interpreter
  1286 ;;		_configurazione
  1287 ;;		_park_routine
  1288 ;;		_park_search
  1289 ;; This function is called by:
  1290 ;;		Startup code after reset
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text0
  1295  005DD4                     __ptext0:
  1296                           	opt stack 0
  1297  005DD4                     _main:
  1298                           	opt stack 21
  1299                           
  1300                           ;parcheggio.c: 188: MUX_select[0] = 0b00000000;
  1301                           
  1302                           ; BSR set to: 15
  1303                           ;incstack = 0
  1304  005DD4  0E00               	movlw	0
  1305  005DD6  0101               	movlb	1	; () banked
  1306  005DD8  6F00               	movwf	_MUX_select& (0+255),b
  1307                           
  1308                           ;parcheggio.c: 189: MUX_select[1] = 0b00000001;
  1309  005DDA  0E01               	movlw	1
  1310  005DDC  0101               	movlb	1	; () banked
  1311  005DDE  6F01               	movwf	(_MUX_select+1)& (0+255),b
  1312                           
  1313                           ;parcheggio.c: 190: MUX_select[2] = 0b00000010;
  1314  005DE0  0E02               	movlw	2
  1315  005DE2  0101               	movlb	1	; () banked
  1316  005DE4  6F02               	movwf	(_MUX_select+2)& (0+255),b
  1317                           
  1318                           ;parcheggio.c: 191: MUX_select[3] = 0b00000011;
  1319  005DE6  0E03               	movlw	3
  1320  005DE8  0101               	movlb	1	; () banked
  1321  005DEA  6F03               	movwf	(_MUX_select+3)& (0+255),b
  1322                           
  1323                           ;parcheggio.c: 192: MUX_select[4] = 0b00000100;
  1324  005DEC  0E04               	movlw	4
  1325  005DEE  0101               	movlb	1	; () banked
  1326  005DF0  6F04               	movwf	(_MUX_select+4)& (0+255),b
  1327                           
  1328                           ;parcheggio.c: 193: MUX_select[5] = 0b00000101;
  1329  005DF2  0E05               	movlw	5
  1330  005DF4  0101               	movlb	1	; () banked
  1331  005DF6  6F05               	movwf	(_MUX_select+5)& (0+255),b
  1332                           
  1333                           ;parcheggio.c: 194: MUX_select[6] = 0b00000110;
  1334  005DF8  0E06               	movlw	6
  1335  005DFA  0101               	movlb	1	; () banked
  1336  005DFC  6F06               	movwf	(_MUX_select+6)& (0+255),b
  1337                           
  1338                           ;parcheggio.c: 195: MUX_select[7] = 0b00000111;
  1339  005DFE  0E07               	movlw	7
  1340  005E00  0101               	movlb	1	; () banked
  1341  005E02  6F07               	movwf	(_MUX_select+7)& (0+255),b
  1342                           
  1343                           ; BSR set to: 1
  1344                           ;parcheggio.c: 196: configurazione();
  1345  005E04  EC59  F02E         	call	_configurazione	;wreg free
  1346                           
  1347                           ;parcheggio.c: 197: PORTBbits.RB4 = 0;
  1348  005E08  9881               	bcf	3969,4,c	;volatile
  1349                           
  1350                           ;parcheggio.c: 198: PORTBbits.RB5 = 0;
  1351  005E0A  9A81               	bcf	3969,5,c	;volatile
  1352                           
  1353                           ;parcheggio.c: 199: PORTBbits.RB6 = 0;
  1354  005E0C  9C81               	bcf	3969,6,c	;volatile
  1355                           
  1356                           ;parcheggio.c: 200: request_sent = 0;
  1357  005E0E  9047               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1358                           
  1359                           ;parcheggio.c: 201: start_operation = 0;
  1360  005E10  9447               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1361  005E12                     l7738:
  1362                           
  1363                           ;parcheggio.c: 217: park_search();
  1364  005E12  ECB4  F028         	call	_park_search	;wreg free
  1365                           
  1366                           ;parcheggio.c: 218: can_interpreter();
  1367  005E16  ECC0  F02E         	call	_can_interpreter	;wreg free
  1368                           
  1369                           ;parcheggio.c: 219: park_routine();
  1370  005E1A  ECE4  F019         	call	_park_routine	;wreg free
  1371  005E1E  D7F9               	goto	l7738
  1372  005E20                     __end_of_main:
  1373                           	opt stack 0
  1374                           tblptru	equ	0xFF8
  1375                           tblptrh	equ	0xFF7
  1376                           tblptrl	equ	0xFF6
  1377                           tablat	equ	0xFF5
  1378                           postinc0	equ	0xFEE
  1379                           wreg	equ	0xFE8
  1380                           postdec1	equ	0xFE5
  1381                           fsr1l	equ	0xFE1
  1382                           
  1383 ;; *************** function _park_search *****************
  1384 ;; Defined at:
  1385 ;;		line 223 in file "parcheggio.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;		None               void
  1392 ;; Registers used:
  1393 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : 0/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1401 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1402 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1403 ;;Total ram usage:        2 bytes
  1404 ;; Hardware stack levels used:    1
  1405 ;; Hardware stack levels required when called:    9
  1406 ;; This function calls:
  1407 ;;		_CANisTxReady
  1408 ;;		_CANsendMessage
  1409 ;;		___xxtofl
  1410 ;;		_abs
  1411 ;;		_parallelo
  1412 ;; This function is called by:
  1413 ;;		_main
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text1
  1418  005168                     __ptext1:
  1419                           	opt stack 0
  1420  005168                     _park_search:
  1421                           	opt stack 21
  1422                           
  1423                           ;parcheggio.c: 224: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1424                           
  1425                           ;incstack = 0
  1426  005168  D0D0               	goto	l718
  1427  00516A                     l7490:
  1428                           
  1429                           ;parcheggio.c: 225: parallelo();
  1430  00516A  EC7B  F024         	call	_parallelo	;wreg free
  1431                           
  1432                           ;parcheggio.c: 226: if (sensor_distance[0] > 50) {
  1433  00516E  5025               	movf	_sensor_distance+1,w,c	;volatile
  1434  005170  E104               	bnz	u9530
  1435  005172  0E33               	movlw	51
  1436  005174  5C24               	subwf	_sensor_distance,w,c	;volatile
  1437  005176  A0D8               	btfss	status,0,c
  1438  005178  D02A               	goto	l720
  1439  00517A                     u9530:
  1440                           
  1441                           ;parcheggio.c: 227: if (request_sent == 0) {
  1442  00517A  B047               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1443  00517C  D057               	goto	l7510
  1444  00517E                     l7498:
  1445  00517E  ECD0  F02F         	call	_CANisTxReady	;wreg free
  1446  005182  0900               	iorlw	0
  1447  005184  B4D8               	btfsc	status,2,c
  1448  005186  D7FB               	goto	l7498
  1449                           
  1450                           ;parcheggio.c: 229: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1451  005188  0E08               	movlw	8
  1452  00518A  0100               	movlb	0	; () banked
  1453  00518C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1454  00518E  0E00               	movlw	0
  1455  005190  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1456  005192  0E00               	movlw	0
  1457  005194  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1458  005196  0E00               	movlw	0
  1459  005198  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1460  00519A  0E5D               	movlw	low _data
  1461  00519C  0100               	movlb	0	; () banked
  1462  00519E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1463  0051A0  0E01               	movlw	high _data
  1464  0051A2  0100               	movlb	0	; () banked
  1465  0051A4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1466  0051A6  0E08               	movlw	8
  1467  0051A8  0100               	movlb	0	; () banked
  1468  0051AA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1469  0051AC  0EFC               	movlw	252
  1470  0051AE  0100               	movlb	0	; () banked
  1471  0051B0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1472  0051B2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1473                           
  1474                           ;parcheggio.c: 230: request_sent = 1;
  1475  0051B6  8047               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1476                           
  1477                           ;parcheggio.c: 231: alignment_gap = 0;
  1478  0051B8  0E00               	movlw	0
  1479  0051BA  0100               	movlb	0	; () banked
  1480  0051BC  6FE4               	movwf	_alignment_gap& (0+255),b
  1481  0051BE  0E00               	movlw	0
  1482  0051C0  6FE5               	movwf	(_alignment_gap+1)& (0+255),b
  1483  0051C2  0E00               	movlw	0
  1484  0051C4  6FE6               	movwf	(_alignment_gap+2)& (0+255),b
  1485  0051C6  0E00               	movlw	0
  1486  0051C8  6FE7               	movwf	(_alignment_gap+3)& (0+255),b
  1487                           
  1488                           ; BSR set to: 0
  1489                           ;parcheggio.c: 232: LATBbits.LATB4 = 1;
  1490  0051CA  888A               	bsf	3978,4,c	;volatile
  1491                           
  1492                           ; BSR set to: 0
  1493                           ;parcheggio.c: 233: }
  1494                           ;parcheggio.c: 234: } else {
  1495  0051CC  D02F               	goto	l7510
  1496  0051CE                     l720:
  1497                           
  1498                           ;parcheggio.c: 235: LATBbits.LATB4 = 0;
  1499  0051CE  988A               	bcf	3978,4,c	;volatile
  1500                           
  1501                           ;parcheggio.c: 236: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1502  0051D0  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1503  0051D4  CFDE F1B2          	movff	postinc2,??_park_search
  1504  0051D8  CFDD F1B3          	movff	postdec2,??_park_search+1
  1505  0051DC  0101               	movlb	1	; () banked
  1506  0051DE  1FB2               	comf	??_park_search& (0+255),f,b
  1507  0051E0  1FB3               	comf	(??_park_search+1)& (0+255),f,b
  1508  0051E2  4BB2               	infsnz	??_park_search& (0+255),f,b
  1509  0051E4  2BB3               	incf	(??_park_search+1)& (0+255),f,b
  1510  0051E6  5024               	movf	_sensor_distance,w,c	;volatile
  1511  0051E8  0101               	movlb	1	; () banked
  1512  0051EA  25B2               	addwf	??_park_search& (0+255),w,b
  1513  0051EC  0100               	movlb	0	; () banked
  1514  0051EE  6F77               	movwf	abs@a& (0+255),b
  1515  0051F0  5025               	movf	_sensor_distance+1,w,c	;volatile
  1516  0051F2  0101               	movlb	1	; () banked
  1517  0051F4  21B3               	addwfc	(??_park_search+1)& (0+255),w,b
  1518  0051F6  0100               	movlb	0	; () banked
  1519  0051F8  6F78               	movwf	(abs@a+1)& (0+255),b
  1520  0051FA  ECA4  F02F         	call	_abs	;wreg free
  1521  0051FE  0100               	movlb	0	; () banked
  1522  005200  C077  F0CB         	movff	?_abs,___xxtofl@val
  1523  005204  0100               	movlb	0	; () banked
  1524  005206  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  1525  00520A  0100               	movlb	0	; () banked
  1526  00520C  0E00               	movlw	0
  1527  00520E  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1528  005210  0EFF               	movlw	-1
  1529  005212  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  1530  005214  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  1531  005216  0E01               	movlw	1
  1532  005218  ECEA  F026         	call	___xxtofl
  1533  00521C  C0CB  F0E4         	movff	?___xxtofl,_alignment_gap
  1534  005220  C0CC  F0E5         	movff	?___xxtofl+1,_alignment_gap+1
  1535  005224  C0CD  F0E6         	movff	?___xxtofl+2,_alignment_gap+2
  1536  005228  C0CE  F0E7         	movff	?___xxtofl+3,_alignment_gap+3
  1537  00522C                     l7510:
  1538                           
  1539                           ;parcheggio.c: 237: }
  1540                           ;parcheggio.c: 238: if ((sensor_distance[0] < 50) && (request_sent == 1)) {
  1541  00522C  5025               	movf	_sensor_distance+1,w,c	;volatile
  1542  00522E  E122               	bnz	l7520
  1543  005230  0E32               	movlw	50
  1544  005232  5C24               	subwf	_sensor_distance,w,c	;volatile
  1545  005234  A0D8               	btfss	status,0,c
  1546  005236  A047               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1547  005238  D01D               	goto	l7520
  1548                           
  1549                           ;parcheggio.c: 239: request_sent = 0;
  1550  00523A  9047               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1551  00523C                     l7516:
  1552  00523C  ECD0  F02F         	call	_CANisTxReady	;wreg free
  1553  005240  0900               	iorlw	0
  1554  005242  B4D8               	btfsc	status,2,c
  1555  005244  D7FB               	goto	l7516
  1556                           
  1557                           ;parcheggio.c: 241: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1558  005246  0E07               	movlw	7
  1559  005248  0100               	movlb	0	; () banked
  1560  00524A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1561  00524C  0E00               	movlw	0
  1562  00524E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1563  005250  0E00               	movlw	0
  1564  005252  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1565  005254  0E00               	movlw	0
  1566  005256  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1567  005258  0E5D               	movlw	low _data
  1568  00525A  0100               	movlb	0	; () banked
  1569  00525C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1570  00525E  0E01               	movlw	high _data
  1571  005260  0100               	movlb	0	; () banked
  1572  005262  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1573  005264  0E08               	movlw	8
  1574  005266  0100               	movlb	0	; () banked
  1575  005268  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1576  00526A  0EFC               	movlw	252
  1577  00526C  0100               	movlb	0	; () banked
  1578  00526E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1579  005270  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1580  005274                     l7520:
  1581                           
  1582                           ;parcheggio.c: 242: }
  1583                           ;parcheggio.c: 243: if (distance_received == 1) {
  1584  005274  A846               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1585  005276  D049               	goto	l718
  1586                           
  1587                           ;parcheggio.c: 244: if (distance_average > 55) {
  1588  005278  5037               	movf	_distance_average+1,w,c	;volatile
  1589  00527A  E104               	bnz	u9600
  1590  00527C  0E38               	movlw	56
  1591  00527E  5C36               	subwf	_distance_average,w,c	;volatile
  1592  005280  A0D8               	btfss	status,0,c
  1593  005282  D041               	goto	l731
  1594  005284                     u9600:
  1595                           
  1596                           ;parcheggio.c: 245: PORTBbits.RB5 = 1;
  1597  005284  8A81               	bsf	3969,5,c	;volatile
  1598                           
  1599                           ;parcheggio.c: 246: data[0] = 1;
  1600  005286  0E01               	movlw	1
  1601  005288  0101               	movlb	1	; () banked
  1602  00528A  6F5D               	movwf	_data& (0+255),b
  1603                           
  1604                           ; BSR set to: 1
  1605                           ;parcheggio.c: 247: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1606  00528C  0E0B               	movlw	11
  1607  00528E  0100               	movlb	0	; () banked
  1608  005290  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1609  005292  0E00               	movlw	0
  1610  005294  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1611  005296  0E00               	movlw	0
  1612  005298  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1613  00529A  0E00               	movlw	0
  1614  00529C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1615  00529E  0E5D               	movlw	low _data
  1616  0052A0  0100               	movlb	0	; () banked
  1617  0052A2  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1618  0052A4  0E01               	movlw	high _data
  1619  0052A6  0100               	movlb	0	; () banked
  1620  0052A8  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1621  0052AA  0E01               	movlw	1
  1622  0052AC  0100               	movlb	0	; () banked
  1623  0052AE  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1624  0052B0  0EBC               	movlw	188
  1625  0052B2  0100               	movlb	0	; () banked
  1626  0052B4  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1627  0052B6  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1628                           
  1629                           ;parcheggio.c: 248: if ((request_sent1 == 0)&&(sensor_distance[0] < 40)) {
  1630  0052BA  B247               	btfsc	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1631  0052BC  D026               	goto	l718
  1632  0052BE  5025               	movf	_sensor_distance+1,w,c	;volatile
  1633  0052C0  E124               	bnz	l718
  1634  0052C2  0E28               	movlw	40
  1635  0052C4  5C24               	subwf	_sensor_distance,w,c	;volatile
  1636  0052C6  B0D8               	btfsc	status,0,c
  1637  0052C8  D020               	goto	l718
  1638                           
  1639                           ;parcheggio.c: 249: data_test[0] = 130;
  1640  0052CA  0E82               	movlw	130
  1641  0052CC  0101               	movlb	1	; () banked
  1642  0052CE  6F85               	movwf	_data_test& (0+255),b
  1643                           
  1644                           ; BSR set to: 1
  1645                           ;parcheggio.c: 250: asd = 1;
  1646  0052D0  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  1647                           
  1648                           ; BSR set to: 1
  1649                           ;parcheggio.c: 251: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1650  0052D2  0E0D               	movlw	13
  1651  0052D4  0100               	movlb	0	; () banked
  1652  0052D6  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1653  0052D8  0E00               	movlw	0
  1654  0052DA  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1655  0052DC  0E00               	movlw	0
  1656  0052DE  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1657  0052E0  0E00               	movlw	0
  1658  0052E2  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1659  0052E4  0E85               	movlw	low _data_test
  1660  0052E6  0100               	movlb	0	; () banked
  1661  0052E8  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1662  0052EA  0E01               	movlw	high _data_test
  1663  0052EC  0100               	movlb	0	; () banked
  1664  0052EE  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1665  0052F0  0E08               	movlw	8
  1666  0052F2  0100               	movlb	0	; () banked
  1667  0052F4  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1668  0052F6  0EBC               	movlw	188
  1669  0052F8  0100               	movlb	0	; () banked
  1670  0052FA  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1671  0052FC  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1672                           
  1673                           ;parcheggio.c: 253: distance_received1 = 0;
  1674  005300  9A46               	bcf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  1675                           
  1676                           ;parcheggio.c: 254: request_sent1 = 1;
  1677  005302  8247               	bsf	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1678                           
  1679                           ;parcheggio.c: 255: }
  1680                           ;parcheggio.c: 256: } else {
  1681  005304  D002               	goto	l718
  1682  005306                     l731:
  1683                           
  1684                           ;parcheggio.c: 257: distance_received = 0;
  1685  005306  9846               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1686                           
  1687                           ;parcheggio.c: 258: PORTBbits.RB5 = 0;
  1688  005308  9A81               	bcf	3969,5,c	;volatile
  1689  00530A                     l718:
  1690  00530A  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1691  00530C  0012               	return	
  1692  00530E  BA81               	btfsc	3969,5,c	;volatile
  1693  005310  0012               	return	
  1694  005312  D72B               	goto	l7490
  1695  005314                     __end_of_park_search:
  1696                           	opt stack 0
  1697                           tblptru	equ	0xFF8
  1698                           tblptrh	equ	0xFF7
  1699                           tblptrl	equ	0xFF6
  1700                           tablat	equ	0xFF5
  1701                           postinc0	equ	0xFEE
  1702                           wreg	equ	0xFE8
  1703                           postdec1	equ	0xFE5
  1704                           fsr1l	equ	0xFE1
  1705                           postinc2	equ	0xFDE
  1706                           postdec2	equ	0xFDD
  1707                           status	equ	0xFD8
  1708                           
  1709 ;; *************** function _park_routine *****************
  1710 ;; Defined at:
  1711 ;;		line 264 in file "parcheggio.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;		None
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;		None
  1716 ;; Return value:  Size  Location     Type
  1717 ;;		None               void
  1718 ;; Registers used:
  1719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1726 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1727 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1728 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  1729 ;;Total ram usage:       12 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    9
  1732 ;; This function calls:
  1733 ;;		_CANsendMessage
  1734 ;;		___awdiv
  1735 ;;		___fladd
  1736 ;;		___flneg
  1737 ;;		___fltol
  1738 ;;		___xxtofl
  1739 ;;		_can_send
  1740 ;;		_delay_ms
  1741 ;;		_delay_s
  1742 ;;		_matematica
  1743 ;;		_parallelo
  1744 ;; This function is called by:
  1745 ;;		_main
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text2
  1750  0033C8                     __ptext2:
  1751                           	opt stack 0
  1752  0033C8                     _park_routine:
  1753                           	opt stack 21
  1754                           
  1755                           ;parcheggio.c: 265: while ((asd == 1)&&(PORTBbits.RB5 == 1) && (activation == 1)&&(start
      +                          _operation == 1)) {
  1756                           
  1757                           ;incstack = 0
  1758  0033C8  D02D               	goto	l7568
  1759  0033CA                     l7548:
  1760                           
  1761                           ;parcheggio.c: 266: data_brake [0] = 3;
  1762  0033CA  0E03               	movlw	3
  1763  0033CC  0101               	movlb	1	; () banked
  1764  0033CE  6F65               	movwf	_data_brake& (0+255),b
  1765                           
  1766                           ;parcheggio.c: 267: data_brake [1] = 1;
  1767  0033D0  0E01               	movlw	1
  1768  0033D2  0101               	movlb	1	; () banked
  1769  0033D4  6F66               	movwf	(_data_brake+1)& (0+255),b
  1770                           
  1771                           ; BSR set to: 1
  1772                           ;parcheggio.c: 268: parallelo();
  1773  0033D6  EC7B  F024         	call	_parallelo	;wreg free
  1774                           
  1775                           ;parcheggio.c: 269: data_correction[0] = data_correction[0]/2;
  1776  0033DA  C16D  F077         	movff	_data_correction,___awdiv@dividend
  1777  0033DE  0100               	movlb	0	; () banked
  1778  0033E0  6B78               	clrf	(___awdiv@dividend+1)& (0+255),b
  1779  0033E2  0E00               	movlw	0
  1780  0033E4  0100               	movlb	0	; () banked
  1781  0033E6  6F7A               	movwf	(___awdiv@divisor+1)& (0+255),b
  1782  0033E8  0E02               	movlw	2
  1783  0033EA  6F79               	movwf	___awdiv@divisor& (0+255),b
  1784  0033EC  EC74  F02D         	call	___awdiv	;wreg free
  1785  0033F0  0100               	movlb	0	; () banked
  1786  0033F2  5177               	movf	?___awdiv& (0+255),w,b
  1787  0033F4  0101               	movlb	1	; () banked
  1788  0033F6  6F6D               	movwf	_data_correction& (0+255),b
  1789                           
  1790                           ; BSR set to: 1
  1791                           ;parcheggio.c: 270: if (data_correction[1] == 0)
  1792  0033F8  0101               	movlb	1	; () banked
  1793  0033FA  516E               	movf	(_data_correction+1)& (0+255),w,b
  1794                           
  1795                           ; BSR set to: 1
  1796                           ;parcheggio.c: 272: else {
  1797                           ;parcheggio.c: 273: data_steering[0] = (90 + data_correction[0]);
  1798                           
  1799                           ; BSR set to: 1
  1800                           
  1801                           ; BSR set to: 1
  1802                           ;parcheggio.c: 271: data_steering[0] = (90 + data_correction[0]);
  1803  0033FC  0101               	movlb	1	; () banked
  1804  0033FE  516D               	movf	_data_correction& (0+255),w,b
  1805  003400  0F5A               	addlw	90
  1806  003402  0101               	movlb	1	; () banked
  1807  003404  6F7D               	movwf	_data_steering& (0+255),b
  1808                           
  1809                           ; BSR set to: 1
  1810                           ;parcheggio.c: 274: }
  1811                           ;parcheggio.c: 275: set_speed = 1000;
  1812                           
  1813                           ; BSR set to: 1
  1814  003406  0E03               	movlw	3
  1815  003408  0101               	movlb	1	; () banked
  1816  00340A  6F4D               	movwf	(_set_speed+1)& (0+255),b
  1817  00340C  0EE8               	movlw	232
  1818  00340E  6F4C               	movwf	_set_speed& (0+255),b
  1819                           
  1820                           ; BSR set to: 1
  1821                           ;parcheggio.c: 276: dir = 1;
  1822  003410  8446               	bsf	_dir/(0+8),_dir& (0+7),c
  1823                           
  1824                           ; BSR set to: 1
  1825                           ;parcheggio.c: 277: can_send();
  1826  003412  EC52  F02A         	call	_can_send	;wreg free
  1827                           
  1828                           ;parcheggio.c: 278: delay_ms(50);
  1829  003416  0E00               	movlw	0
  1830  003418  0100               	movlb	0	; () banked
  1831  00341A  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1832  00341C  0E32               	movlw	50
  1833  00341E  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1834  003420  EC8A  F02F         	call	_delay_ms	;wreg free
  1835  003424                     l7568:
  1836  003424  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  1837  003426  AA81               	btfss	3969,5,c	;volatile
  1838  003428  D1B6               	goto	l7678
  1839  00342A  B046               	btfsc	_activation/(0+8),_activation& (0+7),c	;volatile
  1840  00342C  A447               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1841  00342E  D1B3               	goto	l7678
  1842  003430  D7CC               	goto	l7548
  1843  003432                     l7576:
  1844                           
  1845                           ;parcheggio.c: 283: bordo = (sensor_distance[0]+sensor_distance[1])/2;
  1846  003432  5024               	movf	_sensor_distance,w,c	;volatile
  1847  003434  2426               	addwf	_sensor_distance+2,w,c	;volatile
  1848  003436  0101               	movlb	1	; () banked
  1849  003438  6FD6               	movwf	??_park_routine& (0+255),b
  1850  00343A  5025               	movf	_sensor_distance+1,w,c	;volatile
  1851  00343C  2027               	addwfc	_sensor_distance+3,w,c	;volatile
  1852  00343E  0101               	movlb	1	; () banked
  1853  003440  6FD7               	movwf	(??_park_routine+1)& (0+255),b
  1854  003442  90D8               	bcf	status,0,c
  1855  003444  0101               	movlb	1	; () banked
  1856  003446  31D7               	rrcf	(??_park_routine+1)& (0+255),w,b
  1857  003448  0101               	movlb	1	; () banked
  1858  00344A  6FD9               	movwf	(??_park_routine+3)& (0+255),b
  1859  00344C  0101               	movlb	1	; () banked
  1860  00344E  31D6               	rrcf	??_park_routine& (0+255),w,b
  1861  003450  0101               	movlb	1	; () banked
  1862  003452  6FD8               	movwf	(??_park_routine+2)& (0+255),b
  1863  003454  C1D8  F0CB         	movff	??_park_routine+2,___xxtofl@val
  1864  003458  C1D9  F0CC         	movff	??_park_routine+3,___xxtofl@val+1
  1865  00345C  0100               	movlb	0	; () banked
  1866  00345E  6BCD               	clrf	(___xxtofl@val+2)& (0+255),b
  1867  003460  6BCE               	clrf	(___xxtofl@val+3)& (0+255),b
  1868  003462  0E00               	movlw	0
  1869  003464  ECEA  F026         	call	___xxtofl
  1870  003468  C0CB  F124         	movff	?___xxtofl,_bordo	;volatile
  1871  00346C  C0CC  F125         	movff	?___xxtofl+1,_bordo+1	;volatile
  1872  003470  C0CD  F126         	movff	?___xxtofl+2,_bordo+2	;volatile
  1873  003474  C0CE  F127         	movff	?___xxtofl+3,_bordo+3	;volatile
  1874                           
  1875                           ;parcheggio.c: 284: matematica();
  1876  003478  ECF2  F00F         	call	_matematica	;wreg free
  1877                           
  1878                           ;parcheggio.c: 285: set_speed = 0;
  1879  00347C  0E00               	movlw	0
  1880  00347E  0101               	movlb	1	; () banked
  1881  003480  6F4D               	movwf	(_set_speed+1)& (0+255),b
  1882  003482  0E00               	movlw	0
  1883  003484  6F4C               	movwf	_set_speed& (0+255),b
  1884                           
  1885                           ; BSR set to: 1
  1886                           ;parcheggio.c: 286: data_steering[0] = 90;
  1887  003486  0E5A               	movlw	90
  1888  003488  0101               	movlb	1	; () banked
  1889  00348A  6F7D               	movwf	_data_steering& (0+255),b
  1890                           
  1891                           ; BSR set to: 1
  1892                           ;parcheggio.c: 287: data_brake [0] = 0;
  1893  00348C  0E00               	movlw	0
  1894  00348E  0101               	movlb	1	; () banked
  1895  003490  6F65               	movwf	_data_brake& (0+255),b
  1896                           
  1897                           ; BSR set to: 1
  1898                           ;parcheggio.c: 288: data_brake [1] = 1;
  1899  003492  0E01               	movlw	1
  1900  003494  0101               	movlb	1	; () banked
  1901  003496  6F66               	movwf	(_data_brake+1)& (0+255),b
  1902                           
  1903                           ; BSR set to: 1
  1904                           ;parcheggio.c: 289: can_send();
  1905  003498  EC52  F02A         	call	_can_send	;wreg free
  1906                           
  1907                           ;parcheggio.c: 290: delay_s(1);
  1908  00349C  0E01               	movlw	1
  1909  00349E  ECBA  F02F         	call	_delay_s
  1910                           
  1911                           ;parcheggio.c: 292: data_brake [0] = 3;
  1912  0034A2  0E03               	movlw	3
  1913  0034A4  0101               	movlb	1	; () banked
  1914  0034A6  6F65               	movwf	_data_brake& (0+255),b
  1915                           
  1916                           ; BSR set to: 1
  1917                           ;parcheggio.c: 293: data_brake [1] = 1;
  1918  0034A8  0E01               	movlw	1
  1919  0034AA  0101               	movlb	1	; () banked
  1920  0034AC  6F66               	movwf	(_data_brake+1)& (0+255),b
  1921                           
  1922                           ; BSR set to: 1
  1923                           ;parcheggio.c: 295: set_speed = 1000;
  1924  0034AE  0E03               	movlw	3
  1925  0034B0  0101               	movlb	1	; () banked
  1926  0034B2  6F4D               	movwf	(_set_speed+1)& (0+255),b
  1927  0034B4  0EE8               	movlw	232
  1928  0034B6  6F4C               	movwf	_set_speed& (0+255),b
  1929                           
  1930                           ; BSR set to: 1
  1931                           ;parcheggio.c: 296: dir = 0;
  1932  0034B8  9446               	bcf	_dir/(0+8),_dir& (0+7),c
  1933                           
  1934                           ; BSR set to: 1
  1935                           ;parcheggio.c: 297: data_steering[0] = 90;
  1936  0034BA  0E5A               	movlw	90
  1937  0034BC  0101               	movlb	1	; () banked
  1938  0034BE  6F7D               	movwf	_data_steering& (0+255),b
  1939                           
  1940                           ; BSR set to: 1
  1941                           ;parcheggio.c: 298: data_test[0] = ((130 + Pminimo)-(n + 0 + 50));
  1942  0034C0  0E00               	movlw	0
  1943  0034C2  0100               	movlb	0	; () banked
  1944  0034C4  6FAD               	movwf	___fladd@a& (0+255),b
  1945  0034C6  0E00               	movlw	0
  1946  0034C8  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  1947  0034CA  0E48               	movlw	72
  1948  0034CC  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  1949  0034CE  0E42               	movlw	66
  1950  0034D0  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  1951  0034D2  C130  F0A9         	movff	_n,___fladd@b
  1952  0034D6  C131  F0AA         	movff	_n+1,___fladd@b+1
  1953  0034DA  C132  F0AB         	movff	_n+2,___fladd@b+2
  1954  0034DE  C133  F0AC         	movff	_n+3,___fladd@b+3
  1955  0034E2  EC3D  F015         	call	___fladd	;wreg free
  1956  0034E6  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  1957  0034EA  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  1958  0034EE  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  1959  0034F2  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  1960  0034F6  EC53  F02F         	call	___flneg	;wreg free
  1961  0034FA  C0BD  F1DA         	movff	?___flneg,_park_routine$3738
  1962  0034FE  C0BE  F1DB         	movff	?___flneg+1,_park_routine$3738+1
  1963  003502  C0BF  F1DC         	movff	?___flneg+2,_park_routine$3738+2
  1964  003506  C0C0  F1DD         	movff	?___flneg+3,_park_routine$3738+3
  1965                           
  1966                           ;parcheggio.c: 298: data_test[0] = ((130 + Pminimo)-(n + 0 + 50));
  1967  00350A  C118  F0AD         	movff	_Pminimo,___fladd@a
  1968  00350E  C119  F0AE         	movff	_Pminimo+1,___fladd@a+1
  1969  003512  C11A  F0AF         	movff	_Pminimo+2,___fladd@a+2
  1970  003516  C11B  F0B0         	movff	_Pminimo+3,___fladd@a+3
  1971  00351A  C1DA  F0A9         	movff	_park_routine$3738,___fladd@b
  1972  00351E  C1DB  F0AA         	movff	_park_routine$3738+1,___fladd@b+1
  1973  003522  C1DC  F0AB         	movff	_park_routine$3738+2,___fladd@b+2
  1974  003526  C1DD  F0AC         	movff	_park_routine$3738+3,___fladd@b+3
  1975  00352A  EC3D  F015         	call	___fladd	;wreg free
  1976  00352E  C0A9  F1DE         	movff	?___fladd,_park_routine$3739
  1977  003532  C0AA  F1DF         	movff	?___fladd+1,_park_routine$3739+1
  1978  003536  C0AB  F1E0         	movff	?___fladd+2,_park_routine$3739+2
  1979  00353A  C0AC  F1E1         	movff	?___fladd+3,_park_routine$3739+3
  1980                           
  1981                           ;parcheggio.c: 298: data_test[0] = ((130 + Pminimo)-(n + 0 + 50));
  1982  00353E  0E00               	movlw	0
  1983  003540  0100               	movlb	0	; () banked
  1984  003542  6FAD               	movwf	___fladd@a& (0+255),b
  1985  003544  0E00               	movlw	0
  1986  003546  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  1987  003548  0E02               	movlw	2
  1988  00354A  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  1989  00354C  0E43               	movlw	67
  1990  00354E  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  1991  003550  C1DE  F0A9         	movff	_park_routine$3739,___fladd@b
  1992  003554  C1DF  F0AA         	movff	_park_routine$3739+1,___fladd@b+1
  1993  003558  C1E0  F0AB         	movff	_park_routine$3739+2,___fladd@b+2
  1994  00355C  C1E1  F0AC         	movff	_park_routine$3739+3,___fladd@b+3
  1995  003560  EC3D  F015         	call	___fladd	;wreg free
  1996  003564  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  1997  003568  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  1998  00356C  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  1999  003570  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2000  003574  EC0B  F02C         	call	___fltol	;wreg free
  2001  003578  0100               	movlb	0	; () banked
  2002  00357A  51C1               	movf	?___fltol& (0+255),w,b
  2003  00357C  0101               	movlb	1	; () banked
  2004  00357E  6F85               	movwf	_data_test& (0+255),b
  2005                           
  2006                           ; BSR set to: 1
  2007                           ;parcheggio.c: 299: asd = 1;
  2008  003580  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2009                           
  2010                           ; BSR set to: 1
  2011                           ;parcheggio.c: 300: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2012  003582  0E0D               	movlw	13
  2013  003584  0100               	movlb	0	; () banked
  2014  003586  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2015  003588  0E00               	movlw	0
  2016  00358A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2017  00358C  0E00               	movlw	0
  2018  00358E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2019  003590  0E00               	movlw	0
  2020  003592  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2021  003594  0E85               	movlw	low _data_test
  2022  003596  0100               	movlb	0	; () banked
  2023  003598  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2024  00359A  0E01               	movlw	high _data_test
  2025  00359C  0100               	movlb	0	; () banked
  2026  00359E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2027  0035A0  0E08               	movlw	8
  2028  0035A2  0100               	movlb	0	; () banked
  2029  0035A4  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2030  0035A6  0EBC               	movlw	188
  2031  0035A8  0100               	movlb	0	; () banked
  2032  0035AA  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2033  0035AC  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2034                           
  2035                           ;parcheggio.c: 301: can_send();
  2036  0035B0  EC52  F02A         	call	_can_send	;wreg free
  2037  0035B4                     l749:
  2038  0035B4  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2039  0035B6  D7FE               	goto	l749
  2040                           
  2041                           ;parcheggio.c: 304: set_speed = 0;
  2042  0035B8  0E00               	movlw	0
  2043  0035BA  0101               	movlb	1	; () banked
  2044  0035BC  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2045  0035BE  0E00               	movlw	0
  2046  0035C0  6F4C               	movwf	_set_speed& (0+255),b
  2047                           
  2048                           ;parcheggio.c: 305: data_steering[0] = 90;
  2049  0035C2  0E5A               	movlw	90
  2050  0035C4  0101               	movlb	1	; () banked
  2051  0035C6  6F7D               	movwf	_data_steering& (0+255),b
  2052                           
  2053                           ;parcheggio.c: 306: data_brake [0] = 0;
  2054  0035C8  0E00               	movlw	0
  2055  0035CA  0101               	movlb	1	; () banked
  2056  0035CC  6F65               	movwf	_data_brake& (0+255),b
  2057                           
  2058                           ;parcheggio.c: 307: data_brake [1] = 1;
  2059  0035CE  0E01               	movlw	1
  2060  0035D0  0101               	movlb	1	; () banked
  2061  0035D2  6F66               	movwf	(_data_brake+1)& (0+255),b
  2062                           
  2063                           ; BSR set to: 1
  2064                           ;parcheggio.c: 308: can_send();
  2065  0035D4  EC52  F02A         	call	_can_send	;wreg free
  2066                           
  2067                           ;parcheggio.c: 309: delay_s(1);
  2068  0035D8  0E01               	movlw	1
  2069  0035DA  ECBA  F02F         	call	_delay_s
  2070                           
  2071                           ;parcheggio.c: 311: data_brake [0] = 3;
  2072  0035DE  0E03               	movlw	3
  2073  0035E0  0101               	movlb	1	; () banked
  2074  0035E2  6F65               	movwf	_data_brake& (0+255),b
  2075                           
  2076                           ; BSR set to: 1
  2077                           ;parcheggio.c: 312: data_brake [1] = 1;
  2078  0035E4  0E01               	movlw	1
  2079  0035E6  0101               	movlb	1	; () banked
  2080  0035E8  6F66               	movwf	(_data_brake+1)& (0+255),b
  2081                           
  2082                           ; BSR set to: 1
  2083                           ;parcheggio.c: 313: set_speed = 1000;
  2084  0035EA  0E03               	movlw	3
  2085  0035EC  0101               	movlb	1	; () banked
  2086  0035EE  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2087  0035F0  0EE8               	movlw	232
  2088  0035F2  6F4C               	movwf	_set_speed& (0+255),b
  2089                           
  2090                           ; BSR set to: 1
  2091                           ;parcheggio.c: 314: dir = 0;
  2092  0035F4  9446               	bcf	_dir/(0+8),_dir& (0+7),c
  2093                           
  2094                           ; BSR set to: 1
  2095                           ;parcheggio.c: 315: data_steering[0] = 180;
  2096  0035F6  0EB4               	movlw	180
  2097  0035F8  0101               	movlb	1	; () banked
  2098  0035FA  6F7D               	movwf	_data_steering& (0+255),b
  2099                           
  2100                           ; BSR set to: 1
  2101                           ;parcheggio.c: 316: data_test[0] = prima_sterzata;
  2102  0035FC  C138  F0C1         	movff	_prima_sterzata,___fltol@f1
  2103  003600  C139  F0C2         	movff	_prima_sterzata+1,___fltol@f1+1
  2104  003604  C13A  F0C3         	movff	_prima_sterzata+2,___fltol@f1+2
  2105  003608  C13B  F0C4         	movff	_prima_sterzata+3,___fltol@f1+3
  2106  00360C  EC0B  F02C         	call	___fltol	;wreg free
  2107  003610  0100               	movlb	0	; () banked
  2108  003612  51C1               	movf	?___fltol& (0+255),w,b
  2109  003614  0101               	movlb	1	; () banked
  2110  003616  6F85               	movwf	_data_test& (0+255),b
  2111                           
  2112                           ; BSR set to: 1
  2113                           ;parcheggio.c: 317: asd = 1;
  2114  003618  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2115                           
  2116                           ; BSR set to: 1
  2117                           ;parcheggio.c: 318: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2118  00361A  0E0D               	movlw	13
  2119  00361C  0100               	movlb	0	; () banked
  2120  00361E  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2121  003620  0E00               	movlw	0
  2122  003622  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2123  003624  0E00               	movlw	0
  2124  003626  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2125  003628  0E00               	movlw	0
  2126  00362A  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2127  00362C  0E85               	movlw	low _data_test
  2128  00362E  0100               	movlb	0	; () banked
  2129  003630  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2130  003632  0E01               	movlw	high _data_test
  2131  003634  0100               	movlb	0	; () banked
  2132  003636  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2133  003638  0E08               	movlw	8
  2134  00363A  0100               	movlb	0	; () banked
  2135  00363C  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2136  00363E  0EBC               	movlw	188
  2137  003640  0100               	movlb	0	; () banked
  2138  003642  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2139  003644  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2140                           
  2141                           ;parcheggio.c: 319: can_send();
  2142  003648  EC52  F02A         	call	_can_send	;wreg free
  2143  00364C                     l752:
  2144  00364C  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2145  00364E  D7FE               	goto	l752
  2146                           
  2147                           ;parcheggio.c: 321: set_speed = 1000;
  2148  003650  0E03               	movlw	3
  2149  003652  0101               	movlb	1	; () banked
  2150  003654  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2151  003656  0EE8               	movlw	232
  2152  003658  6F4C               	movwf	_set_speed& (0+255),b
  2153                           
  2154                           ;parcheggio.c: 322: data_steering[0] = 0;
  2155  00365A  0E00               	movlw	0
  2156  00365C  0101               	movlb	1	; () banked
  2157  00365E  6F7D               	movwf	_data_steering& (0+255),b
  2158                           
  2159                           ; BSR set to: 1
  2160                           ;parcheggio.c: 323: asd = 1;
  2161  003660  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2162                           
  2163                           ; BSR set to: 1
  2164                           ;parcheggio.c: 324: data_test[0] = prima_sterzata + 10;
  2165  003662  0E00               	movlw	0
  2166  003664  0100               	movlb	0	; () banked
  2167  003666  6FAD               	movwf	___fladd@a& (0+255),b
  2168  003668  0E00               	movlw	0
  2169  00366A  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2170  00366C  0E20               	movlw	32
  2171  00366E  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2172  003670  0E41               	movlw	65
  2173  003672  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2174  003674  C138  F0A9         	movff	_prima_sterzata,___fladd@b
  2175  003678  C139  F0AA         	movff	_prima_sterzata+1,___fladd@b+1
  2176  00367C  C13A  F0AB         	movff	_prima_sterzata+2,___fladd@b+2
  2177  003680  C13B  F0AC         	movff	_prima_sterzata+3,___fladd@b+3
  2178  003684  EC3D  F015         	call	___fladd	;wreg free
  2179  003688  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2180  00368C  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2181  003690  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2182  003694  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2183  003698  EC0B  F02C         	call	___fltol	;wreg free
  2184  00369C  0100               	movlb	0	; () banked
  2185  00369E  51C1               	movf	?___fltol& (0+255),w,b
  2186  0036A0  0101               	movlb	1	; () banked
  2187  0036A2  6F85               	movwf	_data_test& (0+255),b
  2188                           
  2189                           ; BSR set to: 1
  2190                           ;parcheggio.c: 325: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2191  0036A4  0E0D               	movlw	13
  2192  0036A6  0100               	movlb	0	; () banked
  2193  0036A8  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2194  0036AA  0E00               	movlw	0
  2195  0036AC  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2196  0036AE  0E00               	movlw	0
  2197  0036B0  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2198  0036B2  0E00               	movlw	0
  2199  0036B4  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2200  0036B6  0E85               	movlw	low _data_test
  2201  0036B8  0100               	movlb	0	; () banked
  2202  0036BA  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2203  0036BC  0E01               	movlw	high _data_test
  2204  0036BE  0100               	movlb	0	; () banked
  2205  0036C0  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2206  0036C2  0E08               	movlw	8
  2207  0036C4  0100               	movlb	0	; () banked
  2208  0036C6  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2209  0036C8  0EBC               	movlw	188
  2210  0036CA  0100               	movlb	0	; () banked
  2211  0036CC  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2212  0036CE  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2213                           
  2214                           ;parcheggio.c: 326: can_send();
  2215  0036D2  EC52  F02A         	call	_can_send	;wreg free
  2216  0036D6                     l755:
  2217  0036D6  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2218  0036D8  D7FE               	goto	l755
  2219                           
  2220                           ;parcheggio.c: 328: data_brake [0] = 0;
  2221  0036DA  0E00               	movlw	0
  2222  0036DC  0101               	movlb	1	; () banked
  2223  0036DE  6F65               	movwf	_data_brake& (0+255),b
  2224                           
  2225                           ;parcheggio.c: 329: data_brake [1] = 1;
  2226  0036E0  0E01               	movlw	1
  2227  0036E2  0101               	movlb	1	; () banked
  2228  0036E4  6F66               	movwf	(_data_brake+1)& (0+255),b
  2229                           
  2230                           ;parcheggio.c: 330: set_speed = 0;
  2231  0036E6  0E00               	movlw	0
  2232  0036E8  0101               	movlb	1	; () banked
  2233  0036EA  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2234  0036EC  0E00               	movlw	0
  2235  0036EE  6F4C               	movwf	_set_speed& (0+255),b
  2236                           
  2237                           ;parcheggio.c: 331: data_steering[0] = 90;
  2238  0036F0  0E5A               	movlw	90
  2239  0036F2  0101               	movlb	1	; () banked
  2240  0036F4  6F7D               	movwf	_data_steering& (0+255),b
  2241                           
  2242                           ; BSR set to: 1
  2243                           ;parcheggio.c: 332: can_send();
  2244  0036F6  EC52  F02A         	call	_can_send	;wreg free
  2245                           
  2246                           ;parcheggio.c: 333: delay_s(1);
  2247  0036FA  0E01               	movlw	1
  2248  0036FC  ECBA  F02F         	call	_delay_s
  2249                           
  2250                           ;parcheggio.c: 334: if (sensor_distance [2] > 20) {
  2251  003700  5029               	movf	_sensor_distance+5,w,c	;volatile
  2252  003702  E104               	bnz	u9730
  2253  003704  0E15               	movlw	21
  2254  003706  5C28               	subwf	_sensor_distance+4,w,c	;volatile
  2255  003708  A0D8               	btfss	status,0,c
  2256  00370A  D017               	goto	l7664
  2257  00370C                     u9730:
  2258                           
  2259                           ;parcheggio.c: 335: data_brake [0] = 3;
  2260  00370C  0E03               	movlw	3
  2261  00370E  0101               	movlb	1	; () banked
  2262  003710  6F65               	movwf	_data_brake& (0+255),b
  2263                           
  2264                           ;parcheggio.c: 336: data_brake [1] = 1;
  2265  003712  0E01               	movlw	1
  2266  003714  0101               	movlb	1	; () banked
  2267  003716  6F66               	movwf	(_data_brake+1)& (0+255),b
  2268                           
  2269                           ;parcheggio.c: 337: set_speed = 1000;
  2270  003718  0E03               	movlw	3
  2271  00371A  0101               	movlb	1	; () banked
  2272  00371C  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2273  00371E  0EE8               	movlw	232
  2274  003720  6F4C               	movwf	_set_speed& (0+255),b
  2275                           
  2276                           ;parcheggio.c: 338: data_steering[0] = 90;
  2277  003722  0E5A               	movlw	90
  2278  003724  0101               	movlb	1	; () banked
  2279  003726  6F7D               	movwf	_data_steering& (0+255),b
  2280                           
  2281                           ; BSR set to: 1
  2282                           ;parcheggio.c: 339: dir = 1;
  2283  003728  8446               	bsf	_dir/(0+8),_dir& (0+7),c
  2284                           
  2285                           ; BSR set to: 1
  2286                           ;parcheggio.c: 340: can_send();
  2287  00372A  EC52  F02A         	call	_can_send	;wreg free
  2288  00372E                     l7662:
  2289  00372E  5029               	movf	_sensor_distance+5,w,c	;volatile
  2290  003730  E1FE               	bnz	l7662
  2291  003732  0E15               	movlw	21
  2292  003734  5C28               	subwf	_sensor_distance+4,w,c	;volatile
  2293  003736  B0D8               	btfsc	status,0,c
  2294  003738  D7FA               	goto	l7662
  2295  00373A                     l7664:
  2296                           
  2297                           ;parcheggio.c: 342: }
  2298                           ;parcheggio.c: 343: data_brake [0] = 0;
  2299  00373A  0E00               	movlw	0
  2300  00373C  0101               	movlb	1	; () banked
  2301  00373E  6F65               	movwf	_data_brake& (0+255),b
  2302                           
  2303                           ;parcheggio.c: 344: data_brake [1] = 1;
  2304  003740  0E01               	movlw	1
  2305  003742  0101               	movlb	1	; () banked
  2306  003744  6F66               	movwf	(_data_brake+1)& (0+255),b
  2307                           
  2308                           ;parcheggio.c: 345: set_speed = 0;
  2309  003746  0E00               	movlw	0
  2310  003748  0101               	movlb	1	; () banked
  2311  00374A  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2312  00374C  0E00               	movlw	0
  2313  00374E  6F4C               	movwf	_set_speed& (0+255),b
  2314                           
  2315                           ;parcheggio.c: 346: data_steering[0] = 90;
  2316  003750  0E5A               	movlw	90
  2317  003752  0101               	movlb	1	; () banked
  2318  003754  6F7D               	movwf	_data_steering& (0+255),b
  2319                           
  2320                           ; BSR set to: 1
  2321                           ;parcheggio.c: 347: dir = 0;
  2322  003756  9446               	bcf	_dir/(0+8),_dir& (0+7),c
  2323                           
  2324                           ; BSR set to: 1
  2325                           ;parcheggio.c: 349: can_send();
  2326  003758  EC52  F02A         	call	_can_send	;wreg free
  2327                           
  2328                           ;parcheggio.c: 350: activation = 0;
  2329  00375C  9046               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
  2330                           
  2331                           ;parcheggio.c: 351: PORTBbits.RB5 = 0;
  2332  00375E  9A81               	bcf	3969,5,c	;volatile
  2333                           
  2334                           ;parcheggio.c: 352: start_operation = 0;
  2335  003760  9447               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2336                           
  2337                           ;parcheggio.c: 353: data[0] = 3;
  2338  003762  0E03               	movlw	3
  2339  003764  0101               	movlb	1	; () banked
  2340  003766  6F5D               	movwf	_data& (0+255),b
  2341                           
  2342                           ;parcheggio.c: 354: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2343  003768  0E0B               	movlw	11
  2344  00376A  0100               	movlb	0	; () banked
  2345  00376C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2346  00376E  0E00               	movlw	0
  2347  003770  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2348  003772  0E00               	movlw	0
  2349  003774  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2350  003776  0E00               	movlw	0
  2351  003778  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2352  00377A  0E5D               	movlw	low _data
  2353  00377C  0100               	movlb	0	; () banked
  2354  00377E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2355  003780  0E01               	movlw	high _data
  2356  003782  0100               	movlb	0	; () banked
  2357  003784  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2358  003786  0E01               	movlw	1
  2359  003788  0100               	movlb	0	; () banked
  2360  00378A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2361  00378C  0EBC               	movlw	188
  2362  00378E  0100               	movlb	0	; () banked
  2363  003790  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2364  003792  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2365  003796                     l7678:
  2366  003796  AA81               	btfss	3969,5,c	;volatile
  2367  003798  0012               	return	
  2368  00379A  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2369  00379C  0012               	return	
  2370  00379E  A447               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2371  0037A0  0012               	return	
  2372  0037A2  D647               	goto	l7576
  2373  0037A4                     __end_of_park_routine:
  2374                           	opt stack 0
  2375                           tblptru	equ	0xFF8
  2376                           tblptrh	equ	0xFF7
  2377                           tblptrl	equ	0xFF6
  2378                           tablat	equ	0xFF5
  2379                           postinc0	equ	0xFEE
  2380                           wreg	equ	0xFE8
  2381                           postdec1	equ	0xFE5
  2382                           fsr1l	equ	0xFE1
  2383                           postinc2	equ	0xFDE
  2384                           postdec2	equ	0xFDD
  2385                           status	equ	0xFD8
  2386                           
  2387 ;; *************** function _parallelo *****************
  2388 ;; Defined at:
  2389 ;;		line 380 in file "parcheggio.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;		None
  2392 ;; Auto vars:     Size  Location     Type
  2393 ;;		None
  2394 ;; Return value:  Size  Location     Type
  2395 ;;		None               void
  2396 ;; Registers used:
  2397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2405 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2406 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2407 ;;Total ram usage:        2 bytes
  2408 ;; Hardware stack levels used:    1
  2409 ;; Hardware stack levels required when called:    8
  2410 ;; This function calls:
  2411 ;;		___fladd
  2412 ;;		___fldiv
  2413 ;;		___flge
  2414 ;;		___flmul
  2415 ;;		___fltol
  2416 ;;		___xxtofl
  2417 ;;		_abs
  2418 ;;		_asin
  2419 ;;		_can_send
  2420 ;;		_sqrt
  2421 ;; This function is called by:
  2422 ;;		_park_search
  2423 ;;		_park_routine
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text3
  2428  0048F6                     __ptext3:
  2429                           	opt stack 0
  2430  0048F6                     _parallelo:
  2431                           	opt stack 21
  2432                           
  2433                           ;parcheggio.c: 381: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  2434                           
  2435                           ;incstack = 0
  2436  0048F6  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  2437  0048FA  CFDE F0E2          	movff	postinc2,??_parallelo
  2438  0048FE  CFDD F0E3          	movff	postdec2,??_parallelo+1
  2439  004902  0100               	movlb	0	; () banked
  2440  004904  1FE2               	comf	??_parallelo& (0+255),f,b
  2441  004906  1FE3               	comf	(??_parallelo+1)& (0+255),f,b
  2442  004908  4BE2               	infsnz	??_parallelo& (0+255),f,b
  2443  00490A  2BE3               	incf	(??_parallelo+1)& (0+255),f,b
  2444  00490C  5024               	movf	_sensor_distance,w,c	;volatile
  2445  00490E  0100               	movlb	0	; () banked
  2446  004910  25E2               	addwf	??_parallelo& (0+255),w,b
  2447  004912  0100               	movlb	0	; () banked
  2448  004914  6F77               	movwf	abs@a& (0+255),b
  2449  004916  5025               	movf	_sensor_distance+1,w,c	;volatile
  2450  004918  0100               	movlb	0	; () banked
  2451  00491A  21E3               	addwfc	(??_parallelo+1)& (0+255),w,b
  2452  00491C  0100               	movlb	0	; () banked
  2453  00491E  6F78               	movwf	(abs@a+1)& (0+255),b
  2454  004920  ECA4  F02F         	call	_abs	;wreg free
  2455  004924  0100               	movlb	0	; () banked
  2456  004926  C077  F0CB         	movff	?_abs,___xxtofl@val
  2457  00492A  0100               	movlb	0	; () banked
  2458  00492C  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  2459  004930  0100               	movlb	0	; () banked
  2460  004932  0E00               	movlw	0
  2461  004934  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2462  004936  0EFF               	movlw	-1
  2463  004938  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  2464  00493A  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  2465  00493C  0E01               	movlw	1
  2466  00493E  ECEA  F026         	call	___xxtofl
  2467  004942  C0CB  F0E4         	movff	?___xxtofl,_alignment_gap
  2468  004946  C0CC  F0E5         	movff	?___xxtofl+1,_alignment_gap+1
  2469  00494A  C0CD  F0E6         	movff	?___xxtofl+2,_alignment_gap+2
  2470  00494E  C0CE  F0E7         	movff	?___xxtofl+3,_alignment_gap+3
  2471                           
  2472                           ;parcheggio.c: 382: if (alignment_gap < 30) {
  2473  004952  C0E4  F0C5         	movff	_alignment_gap,___flge@ff1
  2474  004956  C0E5  F0C6         	movff	_alignment_gap+1,___flge@ff1+1
  2475  00495A  C0E6  F0C7         	movff	_alignment_gap+2,___flge@ff1+2
  2476  00495E  C0E7  F0C8         	movff	_alignment_gap+3,___flge@ff1+3
  2477  004962  0E00               	movlw	0
  2478  004964  0100               	movlb	0	; () banked
  2479  004966  6FC9               	movwf	___flge@ff2& (0+255),b
  2480  004968  0E00               	movlw	0
  2481  00496A  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  2482  00496C  0EF0               	movlw	240
  2483  00496E  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  2484  004970  0E41               	movlw	65
  2485  004972  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  2486  004974  EC8A  F029         	call	___flge	;wreg free
  2487  004978  0100               	movlb	0	; () banked
  2488  00497A  B0D8               	btfsc	status,0,c
  2489  00497C  D0F9               	goto	l782
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;parcheggio.c: 383: if ((sensor_distance[0] < 40) && (sensor_distance[1] < 40)) {
  2493  00497E  5025               	movf	_sensor_distance+1,w,c	;volatile
  2494  004980  E103               	bnz	u9381
  2495  004982  0E28               	movlw	40
  2496  004984  5C24               	subwf	_sensor_distance,w,c	;volatile
  2497  004986  B0D8               	btfsc	status,0,c
  2498  004988                     u9381:
  2499  004988  D0E5               	goto	l7396
  2500                           
  2501                           ; BSR set to: 0
  2502  00498A  5027               	movf	_sensor_distance+3,w,c	;volatile
  2503  00498C  E103               	bnz	u9391
  2504  00498E  0E28               	movlw	40
  2505  004990  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  2506  004992  B0D8               	btfsc	status,0,c
  2507  004994                     u9391:
  2508  004994  D0DF               	goto	l7396
  2509                           
  2510                           ; BSR set to: 0
  2511                           ;parcheggio.c: 387: x = ((100) + (alignment_gap * alignment_gap));
  2512  004996  C0E4  F094         	movff	_alignment_gap,___flmul@a
  2513  00499A  C0E5  F095         	movff	_alignment_gap+1,___flmul@a+1
  2514  00499E  C0E6  F096         	movff	_alignment_gap+2,___flmul@a+2
  2515  0049A2  C0E7  F097         	movff	_alignment_gap+3,___flmul@a+3
  2516  0049A6  C0E4  F090         	movff	_alignment_gap,___flmul@b
  2517  0049AA  C0E5  F091         	movff	_alignment_gap+1,___flmul@b+1
  2518  0049AE  C0E6  F092         	movff	_alignment_gap+2,___flmul@b+2
  2519  0049B2  C0E7  F093         	movff	_alignment_gap+3,___flmul@b+3
  2520  0049B6  EC91  F017         	call	___flmul	;wreg free
  2521  0049BA  C090  F0A9         	movff	?___flmul,___fladd@b
  2522  0049BE  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  2523  0049C2  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  2524  0049C6  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  2525  0049CA  0E00               	movlw	0
  2526  0049CC  0100               	movlb	0	; () banked
  2527  0049CE  6FAD               	movwf	___fladd@a& (0+255),b
  2528  0049D0  0E00               	movlw	0
  2529  0049D2  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2530  0049D4  0EC8               	movlw	200
  2531  0049D6  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2532  0049D8  0E42               	movlw	66
  2533  0049DA  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2534  0049DC  EC3D  F015         	call	___fladd	;wreg free
  2535  0049E0  C0A9  F13C         	movff	?___fladd,_x
  2536  0049E4  C0AA  F13D         	movff	?___fladd+1,_x+1
  2537  0049E8  C0AB  F13E         	movff	?___fladd+2,_x+2
  2538  0049EC  C0AC  F13F         	movff	?___fladd+3,_x+3
  2539                           
  2540                           ;parcheggio.c: 388: x = sqrt(x);
  2541  0049F0  C13C  F0C1         	movff	_x,sqrt@a
  2542  0049F4  C13D  F0C2         	movff	_x+1,sqrt@a+1
  2543  0049F8  C13E  F0C3         	movff	_x+2,sqrt@a+2
  2544  0049FC  C13F  F0C4         	movff	_x+3,sqrt@a+3
  2545  004A00  ECD2  F01B         	call	_sqrt	;wreg free
  2546  004A04  C0C1  F13C         	movff	?_sqrt,_x
  2547  004A08  C0C2  F13D         	movff	?_sqrt+1,_x+1
  2548  004A0C  C0C3  F13E         	movff	?_sqrt+2,_x+2
  2549  004A10  C0C4  F13F         	movff	?_sqrt+3,_x+3
  2550                           
  2551                           ;parcheggio.c: 389: z = alignment_gap / x;
  2552  004A14  C0E4  F077         	movff	_alignment_gap,___fldiv@b
  2553  004A18  C0E5  F078         	movff	_alignment_gap+1,___fldiv@b+1
  2554  004A1C  C0E6  F079         	movff	_alignment_gap+2,___fldiv@b+2
  2555  004A20  C0E7  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  2556  004A24  C13C  F07B         	movff	_x,___fldiv@a
  2557  004A28  C13D  F07C         	movff	_x+1,___fldiv@a+1
  2558  004A2C  C13E  F07D         	movff	_x+2,___fldiv@a+2
  2559  004A30  C13F  F07E         	movff	_x+3,___fldiv@a+3
  2560  004A34  ECB7  F01D         	call	___fldiv	;wreg free
  2561  004A38  C077  F140         	movff	?___fldiv,_z
  2562  004A3C  C078  F141         	movff	?___fldiv+1,_z+1
  2563  004A40  C079  F142         	movff	?___fldiv+2,_z+2
  2564  004A44  C07A  F143         	movff	?___fldiv+3,_z+3
  2565                           
  2566                           ;parcheggio.c: 390: z = asin(z);
  2567  004A48  C140  F0DE         	movff	_z,asin@x
  2568  004A4C  C141  F0DF         	movff	_z+1,asin@x+1
  2569  004A50  C142  F0E0         	movff	_z+2,asin@x+2
  2570  004A54  C143  F0E1         	movff	_z+3,asin@x+3
  2571  004A58  ECF2  F022         	call	_asin	;wreg free
  2572  004A5C  C0DE  F140         	movff	?_asin,_z
  2573  004A60  C0DF  F141         	movff	?_asin+1,_z+1
  2574  004A64  C0E0  F142         	movff	?_asin+2,_z+2
  2575  004A68  C0E1  F143         	movff	?_asin+3,_z+3
  2576                           
  2577                           ;parcheggio.c: 391: z = z / 3.14159265358979323846 * 180;
  2578  004A6C  0EDB               	movlw	219
  2579  004A6E  0100               	movlb	0	; () banked
  2580  004A70  6F7B               	movwf	___fldiv@a& (0+255),b
  2581  004A72  0E0F               	movlw	15
  2582  004A74  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2583  004A76  0E49               	movlw	73
  2584  004A78  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2585  004A7A  0E40               	movlw	64
  2586  004A7C  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2587  004A7E  C140  F077         	movff	_z,___fldiv@b
  2588  004A82  C141  F078         	movff	_z+1,___fldiv@b+1
  2589  004A86  C142  F079         	movff	_z+2,___fldiv@b+2
  2590  004A8A  C143  F07A         	movff	_z+3,___fldiv@b+3
  2591  004A8E  ECB7  F01D         	call	___fldiv	;wreg free
  2592  004A92  C077  F090         	movff	?___fldiv,___flmul@b
  2593  004A96  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  2594  004A9A  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  2595  004A9E  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  2596  004AA2  0E00               	movlw	0
  2597  004AA4  0100               	movlb	0	; () banked
  2598  004AA6  6F94               	movwf	___flmul@a& (0+255),b
  2599  004AA8  0E00               	movlw	0
  2600  004AAA  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2601  004AAC  0E34               	movlw	52
  2602  004AAE  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2603  004AB0  0E43               	movlw	67
  2604  004AB2  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2605  004AB4  EC91  F017         	call	___flmul	;wreg free
  2606  004AB8  C090  F140         	movff	?___flmul,_z
  2607  004ABC  C091  F141         	movff	?___flmul+1,_z+1
  2608  004AC0  C092  F142         	movff	?___flmul+2,_z+2
  2609  004AC4  C093  F143         	movff	?___flmul+3,_z+3
  2610                           
  2611                           ;parcheggio.c: 392: data_correction[0] = z;
  2612  004AC8  C140  F0C1         	movff	_z,___fltol@f1
  2613  004ACC  C141  F0C2         	movff	_z+1,___fltol@f1+1
  2614  004AD0  C142  F0C3         	movff	_z+2,___fltol@f1+2
  2615  004AD4  C143  F0C4         	movff	_z+3,___fltol@f1+3
  2616  004AD8  EC0B  F02C         	call	___fltol	;wreg free
  2617  004ADC  0100               	movlb	0	; () banked
  2618  004ADE  51C1               	movf	?___fltol& (0+255),w,b
  2619  004AE0  0101               	movlb	1	; () banked
  2620  004AE2  6F6D               	movwf	_data_correction& (0+255),b
  2621                           
  2622                           ; BSR set to: 1
  2623                           ;parcheggio.c: 394: if (sensor_distance[0] < sensor_distance[1]) {
  2624  004AE4  5026               	movf	_sensor_distance+2,w,c	;volatile
  2625  004AE6  5C24               	subwf	_sensor_distance,w,c	;volatile
  2626  004AE8  5027               	movf	_sensor_distance+3,w,c	;volatile
  2627  004AEA  5825               	subwfb	_sensor_distance+1,w,c	;volatile
  2628  004AEC  B0D8               	btfsc	status,0,c
  2629  004AEE  D002               	goto	l7388
  2630                           
  2631                           ; BSR set to: 1
  2632                           ;parcheggio.c: 395: data_correction[1] = 0;
  2633  004AF0  0E00               	movlw	0
  2634  004AF2  D001               	goto	L1
  2635  004AF4                     l7388:
  2636                           
  2637                           ; BSR set to: 1
  2638                           ;parcheggio.c: 397: data_correction[1] = 1;
  2639  004AF4  0E01               	movlw	1
  2640  004AF6                     L1:
  2641  004AF6  0101               	movlb	1	; () banked
  2642  004AF8  6F6E               	movwf	(_data_correction+1)& (0+255),b
  2643                           
  2644                           ; BSR set to: 1
  2645                           ;parcheggio.c: 398: }
  2646                           ;parcheggio.c: 399: if ((old_alignment_gap != alignment_gap) || (old_data_correction != 
      +                          data_correction[1])) {
  2647                           
  2648                           ; BSR set to: 1
  2649  004AFA  0100               	movlb	0	; () banked
  2650  004AFC  51E4               	movf	_alignment_gap& (0+255),w,b
  2651  004AFE  0101               	movlb	1	; () banked
  2652  004B00  1934               	xorwf	_old_alignment_gap& (0+255),w,b
  2653  004B02  E117               	bnz	l788
  2654  004B04  0100               	movlb	0	; () banked
  2655  004B06  51E5               	movf	(_alignment_gap+1)& (0+255),w,b
  2656  004B08  0101               	movlb	1	; () banked
  2657  004B0A  1935               	xorwf	(_old_alignment_gap+1)& (0+255),w,b
  2658  004B0C  E112               	bnz	l788
  2659  004B0E  0100               	movlb	0	; () banked
  2660  004B10  51E6               	movf	(_alignment_gap+2)& (0+255),w,b
  2661  004B12  0101               	movlb	1	; () banked
  2662  004B14  1936               	xorwf	(_old_alignment_gap+2)& (0+255),w,b
  2663  004B16  E10D               	bnz	l788
  2664  004B18  0100               	movlb	0	; () banked
  2665  004B1A  51E7               	movf	(_alignment_gap+3)& (0+255),w,b
  2666  004B1C  0101               	movlb	1	; () banked
  2667  004B1E  1937               	xorwf	(_old_alignment_gap+3)& (0+255),w,b
  2668  004B20  A4D8               	btfss	status,2,c
  2669  004B22  D007               	goto	l788
  2670                           
  2671                           ; BSR set to: 1
  2672  004B24  0E00               	movlw	0
  2673  004B26  BE46               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2674  004B28  0E01               	movlw	1
  2675  004B2A  0101               	movlb	1	; () banked
  2676  004B2C  196E               	xorwf	(_data_correction+1)& (0+255),w,b
  2677  004B2E  B4D8               	btfsc	status,2,c
  2678  004B30  0012               	return	
  2679  004B32                     l788:
  2680                           
  2681                           ; BSR set to: 1
  2682                           ;parcheggio.c: 400: old_alignment_gap = alignment_gap;
  2683  004B32  C0E4  F134         	movff	_alignment_gap,_old_alignment_gap
  2684  004B36  C0E5  F135         	movff	_alignment_gap+1,_old_alignment_gap+1
  2685  004B3A  C0E6  F136         	movff	_alignment_gap+2,_old_alignment_gap+2
  2686  004B3E  C0E7  F137         	movff	_alignment_gap+3,_old_alignment_gap+3
  2687                           
  2688                           ;parcheggio.c: 401: old_data_correction = data_correction[1];
  2689  004B42  0101               	movlb	1	; () banked
  2690  004B44  A16E               	btfss	(_data_correction+1)& (0+255),0,b
  2691  004B46  D002               	goto	u9430
  2692  004B48  8E46               	bsf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2693  004B4A  D001               	goto	l7394
  2694  004B4C                     u9430:
  2695  004B4C  9E46               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2696  004B4E                     l7394:
  2697                           
  2698                           ;parcheggio.c: 402: can_send();
  2699  004B4E  EC52  F02A         	call	_can_send	;wreg free
  2700                           
  2701                           ;parcheggio.c: 403: }
  2702                           ;parcheggio.c: 404: } else if (data_correction[0] != old_data_correction) {
  2703  004B52  0012               	return	
  2704  004B54                     l7396:
  2705  004B54  0E00               	movlw	0
  2706  004B56  BE46               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2707  004B58  0E01               	movlw	1
  2708  004B5A  0101               	movlb	1	; () banked
  2709  004B5C  196D               	xorwf	_data_correction& (0+255),w,b
  2710  004B5E  B4D8               	btfsc	status,2,c
  2711  004B60  0012               	return	
  2712                           
  2713                           ; BSR set to: 1
  2714                           ;parcheggio.c: 405: data_correction[0] = 0;
  2715  004B62  0E00               	movlw	0
  2716  004B64  0101               	movlb	1	; () banked
  2717  004B66  6F6D               	movwf	_data_correction& (0+255),b
  2718                           
  2719                           ; BSR set to: 1
  2720                           ;parcheggio.c: 406: old_data_correction = 0;
  2721  004B68  9E46               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2722                           
  2723                           ; BSR set to: 1
  2724                           ;parcheggio.c: 407: can_send();
  2725  004B6A  EC52  F02A         	call	_can_send	;wreg free
  2726                           
  2727                           ;parcheggio.c: 408: }
  2728                           ;parcheggio.c: 409: } else {
  2729  004B6E  0012               	return	
  2730  004B70                     l782:
  2731                           
  2732                           ; BSR set to: 0
  2733                           ;parcheggio.c: 410: if (old_data_correction != 0) {
  2734  004B70  AE46               	btfss	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2735  004B72  0012               	return	
  2736                           
  2737                           ; BSR set to: 0
  2738                           ;parcheggio.c: 411: data_correction[0] = 0;
  2739  004B74  0E00               	movlw	0
  2740  004B76  0101               	movlb	1	; () banked
  2741  004B78  6F6D               	movwf	_data_correction& (0+255),b
  2742                           
  2743                           ; BSR set to: 1
  2744                           ;parcheggio.c: 412: old_data_correction = 0;
  2745  004B7A  9E46               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2746                           
  2747                           ; BSR set to: 1
  2748                           ;parcheggio.c: 413: can_send();
  2749  004B7C  EC52  F02A         	call	_can_send	;wreg free
  2750  004B80  0012               	return	
  2751  004B82                     __end_of_parallelo:
  2752                           	opt stack 0
  2753                           tblptru	equ	0xFF8
  2754                           tblptrh	equ	0xFF7
  2755                           tblptrl	equ	0xFF6
  2756                           tablat	equ	0xFF5
  2757                           postinc0	equ	0xFEE
  2758                           wreg	equ	0xFE8
  2759                           postdec1	equ	0xFE5
  2760                           fsr1l	equ	0xFE1
  2761                           postinc2	equ	0xFDE
  2762                           postdec2	equ	0xFDD
  2763                           status	equ	0xFD8
  2764                           
  2765 ;; *************** function _can_send *****************
  2766 ;; Defined at:
  2767 ;;		line 359 in file "parcheggio.c"
  2768 ;; Parameters:    Size  Location     Type
  2769 ;;		None
  2770 ;; Auto vars:     Size  Location     Type
  2771 ;;  data_correct    0   39[BANK0 ] unsigned char [0]
  2772 ;; Return value:  Size  Location     Type
  2773 ;;		None               void
  2774 ;; Registers used:
  2775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2776 ;; Tracked objects:
  2777 ;;		On entry : 0/0
  2778 ;;		On exit  : 0/0
  2779 ;;		Unchanged: 0/0
  2780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2785 ;;Total ram usage:        0 bytes
  2786 ;; Hardware stack levels used:    1
  2787 ;; Hardware stack levels required when called:    5
  2788 ;; This function calls:
  2789 ;;		_CANisTxReady
  2790 ;;		_CANsendMessage
  2791 ;; This function is called by:
  2792 ;;		_park_routine
  2793 ;;		_parallelo
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           	psect	text4
  2798  0054A4                     __ptext4:
  2799                           	opt stack 0
  2800  0054A4                     _can_send:
  2801                           	opt stack 23
  2802                           
  2803                           ;parcheggio.c: 360: if (PORTBbits.RB5 == 1) {
  2804                           
  2805                           ;incstack = 0
  2806  0054A4  AA81               	btfss	3969,5,c	;volatile
  2807  0054A6  D063               	goto	l7296
  2808  0054A8                     l7276:
  2809  0054A8  ECD0  F02F         	call	_CANisTxReady	;wreg free
  2810  0054AC  06E8               	decf	wreg,f,c
  2811  0054AE  A4D8               	btfss	status,2,c
  2812  0054B0  D7FB               	goto	l7276
  2813                           
  2814                           ;parcheggio.c: 362: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2815  0054B2  0E05               	movlw	5
  2816  0054B4  0100               	movlb	0	; () banked
  2817  0054B6  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2818  0054B8  0E00               	movlw	0
  2819  0054BA  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2820  0054BC  0E00               	movlw	0
  2821  0054BE  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2822  0054C0  0E00               	movlw	0
  2823  0054C2  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2824  0054C4  0E7D               	movlw	low _data_steering
  2825  0054C6  0100               	movlb	0	; () banked
  2826  0054C8  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2827  0054CA  0E01               	movlw	high _data_steering
  2828  0054CC  0100               	movlb	0	; () banked
  2829  0054CE  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2830  0054D0  0E08               	movlw	8
  2831  0054D2  0100               	movlb	0	; () banked
  2832  0054D4  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2833  0054D6  0EBC               	movlw	188
  2834  0054D8  0100               	movlb	0	; () banked
  2835  0054DA  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2836  0054DC  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2837                           
  2838                           ;parcheggio.c: 363: data_speed[0] = set_speed;
  2839  0054E0  C14C  F175         	movff	_set_speed,_data_speed
  2840                           
  2841                           ;parcheggio.c: 364: data_speed[1] = (set_speed >> 8);
  2842  0054E4  0101               	movlb	1	; () banked
  2843  0054E6  514D               	movf	(_set_speed+1)& (0+255),w,b
  2844  0054E8  0101               	movlb	1	; () banked
  2845  0054EA  6F76               	movwf	(_data_speed+1)& (0+255),b
  2846                           
  2847                           ; BSR set to: 1
  2848                           ;parcheggio.c: 365: data_speed[2] = dir;
  2849  0054EC  0E00               	movlw	0
  2850  0054EE  B446               	btfsc	_dir/(0+8),_dir& (0+7),c
  2851  0054F0  0E01               	movlw	1
  2852  0054F2  0101               	movlb	1	; () banked
  2853  0054F4  6F77               	movwf	(_data_speed+2)& (0+255),b
  2854  0054F6                     l7286:
  2855  0054F6  ECD0  F02F         	call	_CANisTxReady	;wreg free
  2856  0054FA  06E8               	decf	wreg,f,c
  2857  0054FC  A4D8               	btfss	status,2,c
  2858  0054FE  D7FB               	goto	l7286
  2859                           
  2860                           ;parcheggio.c: 367: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2861  005500  0E03               	movlw	3
  2862  005502  0100               	movlb	0	; () banked
  2863  005504  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2864  005506  0E00               	movlw	0
  2865  005508  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2866  00550A  0E00               	movlw	0
  2867  00550C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2868  00550E  0E00               	movlw	0
  2869  005510  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2870  005512  0E75               	movlw	low _data_speed
  2871  005514  0100               	movlb	0	; () banked
  2872  005516  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2873  005518  0E01               	movlw	high _data_speed
  2874  00551A  0100               	movlb	0	; () banked
  2875  00551C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2876  00551E  0E08               	movlw	8
  2877  005520  0100               	movlb	0	; () banked
  2878  005522  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2879  005524  0EBC               	movlw	188
  2880  005526  0100               	movlb	0	; () banked
  2881  005528  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2882  00552A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2883  00552E                     l7290:
  2884  00552E  ECD0  F02F         	call	_CANisTxReady	;wreg free
  2885  005532  06E8               	decf	wreg,f,c
  2886  005534  A4D8               	btfss	status,2,c
  2887  005536  D7FB               	goto	l7290
  2888                           
  2889                           ;parcheggio.c: 369: data_brake[1] = 0;
  2890  005538  0E00               	movlw	0
  2891  00553A  0101               	movlb	1	; () banked
  2892  00553C  6F66               	movwf	(_data_brake+1)& (0+255),b
  2893                           
  2894                           ; BSR set to: 1
  2895                           ;parcheggio.c: 370: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2896  00553E  0E04               	movlw	4
  2897  005540  0100               	movlb	0	; () banked
  2898  005542  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2899  005544  0E00               	movlw	0
  2900  005546  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2901  005548  0E00               	movlw	0
  2902  00554A  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2903  00554C  0E00               	movlw	0
  2904  00554E  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2905  005550  0E65               	movlw	low _data_brake
  2906  005552  0100               	movlb	0	; () banked
  2907  005554  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2908  005556  0E01               	movlw	high _data_brake
  2909  005558  0100               	movlb	0	; () banked
  2910  00555A  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2911  00555C  0E08               	movlw	8
  2912  00555E  0100               	movlb	0	; () banked
  2913  005560  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2914  005562  0EBC               	movlw	188
  2915  005564  0100               	movlb	0	; () banked
  2916  005566  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2917  005568  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2918                           
  2919                           ;parcheggio.c: 371: } else {
  2920  00556C  0012               	return	
  2921  00556E                     l7296:
  2922                           
  2923                           ;parcheggio.c: 372: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2924  00556E  0E0E               	movlw	14
  2925  005570  0100               	movlb	0	; () banked
  2926  005572  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2927  005574  0E00               	movlw	0
  2928  005576  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2929  005578  0E00               	movlw	0
  2930  00557A  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2931  00557C  0E00               	movlw	0
  2932  00557E  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2933  005580  0E6D               	movlw	low _data_correction
  2934  005582  0100               	movlb	0	; () banked
  2935  005584  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2936  005586  0E01               	movlw	high _data_correction
  2937  005588  0100               	movlb	0	; () banked
  2938  00558A  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2939  00558C  0E08               	movlw	8
  2940  00558E  0100               	movlb	0	; () banked
  2941  005590  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2942  005592  0EBC               	movlw	188
  2943  005594  0100               	movlb	0	; () banked
  2944  005596  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2945  005598  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2946                           
  2947                           ;parcheggio.c: 373: unsigned char data_correction1[];
  2948                           ;parcheggio.c: 374: data_correction1[0] = data_correction[0];
  2949  00559C  EE20  F087         	lfsr	2,can_send@data_correction1
  2950  0055A0  C16D  FFDF         	movff	_data_correction,indf2
  2951                           
  2952                           ;parcheggio.c: 375: data_correction1[1] = 0;
  2953  0055A4  0E00               	movlw	0
  2954  0055A6  CFE8 F088          	movff	wreg,can_send@data_correction1+1
  2955                           
  2956                           ;parcheggio.c: 376: CANsendMessage(0xAA, data_correction1, 8, CAN_CONFIG_STD_MSG & CAN_N
      +                          ORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2957  0055AA  0EAA               	movlw	170
  2958  0055AC  0100               	movlb	0	; () banked
  2959  0055AE  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2960  0055B0  0E00               	movlw	0
  2961  0055B2  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2962  0055B4  0E00               	movlw	0
  2963  0055B6  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2964  0055B8  0E00               	movlw	0
  2965  0055BA  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2966  0055BC  0E87               	movlw	low can_send@data_correction1
  2967  0055BE  0100               	movlb	0	; () banked
  2968  0055C0  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2969  0055C2  0E00               	movlw	high can_send@data_correction1
  2970  0055C4  0100               	movlb	0	; () banked
  2971  0055C6  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2972  0055C8  0E08               	movlw	8
  2973  0055CA  0100               	movlb	0	; () banked
  2974  0055CC  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2975  0055CE  0EBC               	movlw	188
  2976  0055D0  0100               	movlb	0	; () banked
  2977  0055D2  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2978  0055D4  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2979  0055D8  0012               	return	
  2980  0055DA                     __end_of_can_send:
  2981                           	opt stack 0
  2982                           tblptru	equ	0xFF8
  2983                           tblptrh	equ	0xFF7
  2984                           tblptrl	equ	0xFF6
  2985                           tablat	equ	0xFF5
  2986                           postinc0	equ	0xFEE
  2987                           wreg	equ	0xFE8
  2988                           postdec1	equ	0xFE5
  2989                           fsr1l	equ	0xFE1
  2990                           indf2	equ	0xFDF
  2991                           postinc2	equ	0xFDE
  2992                           postdec2	equ	0xFDD
  2993                           status	equ	0xFD8
  2994                           
  2995 ;; *************** function _CANsendMessage *****************
  2996 ;; Defined at:
  2997 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  identifier      4   23[BANK0 ] unsigned long 
  3000 ;;  data            2   27[BANK0 ] PTR unsigned char 
  3001 ;;		 -> can_send@data_correction1(0), data_speed(8), data_steering(8), data_correction(8), 
  3002 ;;		 -> data_brake(8), data_test(8), data(8), 
  3003 ;;  dataLength      1   29[BANK0 ] unsigned char 
  3004 ;;  flags           1   30[BANK0 ] enum E16335
  3005 ;; Auto vars:     Size  Location     Type
  3006 ;;  tamp            4   35[BANK0 ] unsigned long 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;		None               void
  3009 ;; Registers used:
  3010 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3016 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3017 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3018 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3019 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3020 ;;Total ram usage:       16 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; Hardware stack levels required when called:    4
  3023 ;; This function calls:
  3024 ;;		Nothing
  3025 ;; This function is called by:
  3026 ;;		_park_search
  3027 ;;		_park_routine
  3028 ;;		_can_send
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text5
  3033  001858                     __ptext5:
  3034                           	opt stack 0
  3035  001858                     _CANsendMessage:
  3036                           	opt stack 23
  3037                           
  3038                           ;inc\CANlib.h: 297: unsigned long tamp;
  3039                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
  3040                           
  3041                           ;incstack = 0
  3042  001858  010F               	movlb	15	; () banked
  3043  00185A  B740               	btfsc	64,3,b	;volatile
  3044  00185C  D13F               	goto	l363
  3045                           
  3046                           ; BSR set to: 15
  3047                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
  3048  00185E  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  3049                           
  3050                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
  3051  001862  0100               	movlb	0	; () banked
  3052  001864  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3053  001866  D003               	goto	l364
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
  3057  001868  010F               	movlb	15	; () banked
  3058  00186A  8D45               	bsf	69,6,b	;volatile
  3059  00186C  D002               	goto	l365
  3060  00186E                     l364:
  3061                           
  3062                           ; BSR set to: 0
  3063                           ;inc\CANlib.h: 303: else
  3064                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
  3065  00186E  010F               	movlb	15	; () banked
  3066  001870  9D45               	bcf	69,6,b	;volatile
  3067  001872                     l365:
  3068                           
  3069                           ; BSR set to: 15
  3070                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
  3071  001872  0100               	movlb	0	; () banked
  3072  001874  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3073  001876  D079               	goto	l366
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;inc\CANlib.h: 307: {
  3077                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
  3078  001878  0100               	movlb	0	; () banked
  3079  00187A  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3080  00187C  0100               	movlb	0	; () banked
  3081  00187E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3082  001880  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3083  001882  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3084  001884  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
  3088  001886  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
  3092  00188A  0E00               	movlw	0
  3093  00188C  0100               	movlb	0	; () banked
  3094  00188E  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3095  001890  0100               	movlb	0	; () banked
  3096  001892  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3097  001894  0EFF               	movlw	255
  3098  001896  0100               	movlb	0	; () banked
  3099  001898  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3100  00189A  0100               	movlb	0	; () banked
  3101  00189C  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3102  00189E  0E00               	movlw	0
  3103  0018A0  0100               	movlb	0	; () banked
  3104  0018A2  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3105  0018A4  0100               	movlb	0	; () banked
  3106  0018A6  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3107  0018A8  0E00               	movlw	0
  3108  0018AA  0100               	movlb	0	; () banked
  3109  0018AC  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3110  0018AE  0100               	movlb	0	; () banked
  3111  0018B0  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3112                           
  3113                           ; BSR set to: 0
  3114                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
  3115  0018B2  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3116  0018B6  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3117  0018BA  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3118  0018BE  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3119  0018C2  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3120  0018C6  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3121  0018CA  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3122  0018CE  0100               	movlb	0	; () banked
  3123  0018D0  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3124  0018D2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3125  0018D6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3126  0018DA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3127  0018DE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3128                           
  3129                           ; BSR set to: 0
  3130                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
  3131  0018E2  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
  3135  0018E6  0E00               	movlw	0
  3136  0018E8  010F               	movlb	15	; () banked
  3137  0018EA  6F42               	movwf	66,b	;volatile
  3138                           
  3139                           ; BSR set to: 15
  3140                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
  3141  0018EC  010F               	movlb	15	; () banked
  3142  0018EE  8742               	bsf	66,3,b	;volatile
  3143                           
  3144                           ; BSR set to: 15
  3145                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
  3146  0018F0  0100               	movlb	0	; () banked
  3147  0018F2  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3148  0018F4  D002               	goto	l367
  3149                           
  3150                           ; BSR set to: 0
  3151                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
  3152  0018F6  010F               	movlb	15	; () banked
  3153  0018F8  8142               	bsf	66,0,b	;volatile
  3154  0018FA                     l367:
  3155                           
  3156                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
  3157  0018FA  0100               	movlb	0	; () banked
  3158  0018FC  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3159  0018FE  D002               	goto	l368
  3160                           
  3161                           ; BSR set to: 0
  3162                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
  3163  001900  010F               	movlb	15	; () banked
  3164  001902  8342               	bsf	66,1,b	;volatile
  3165  001904                     l368:
  3166                           
  3167                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
  3168  001904  0100               	movlb	0	; () banked
  3169  001906  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3170  001908  D002               	goto	l369
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
  3174  00190A  010F               	movlb	15	; () banked
  3175  00190C  8B42               	bsf	66,5,b	;volatile
  3176  00190E                     l369:
  3177                           
  3178                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
  3179  00190E  0100               	movlb	0	; () banked
  3180  001910  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3181  001912  D002               	goto	l370
  3182                           
  3183                           ; BSR set to: 0
  3184                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
  3185  001914  010F               	movlb	15	; () banked
  3186  001916  8D42               	bsf	66,6,b	;volatile
  3187  001918                     l370:
  3188                           
  3189                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
  3190  001918  0100               	movlb	0	; () banked
  3191  00191A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3192  00191C  D002               	goto	l6880
  3193                           
  3194                           ; BSR set to: 0
  3195                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
  3196  00191E  010F               	movlb	15	; () banked
  3197  001920  8F42               	bsf	66,7,b	;volatile
  3198  001922                     l6880:
  3199                           
  3200                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
  3201  001922  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3202  001926  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3203  00192A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3204  00192E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3205  001932  0E16               	movlw	22
  3206  001934  D006               	goto	u8690
  3207  001936                     u8695:
  3208  001936  0100               	movlb	0	; () banked
  3209  001938  90D8               	bcf	status,0,c
  3210  00193A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3211  00193C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3212  00193E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3213  001940  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3214  001942                     u8690:
  3215  001942  2EE8               	decfsz	wreg,f,c
  3216  001944  D7F8               	goto	u8695
  3217  001946  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3218  00194A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3219  00194E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3220  001952  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
  3224  001956  0100               	movlb	0	; () banked
  3225  001958  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3226  00195A  0100               	movlb	0	; () banked
  3227  00195C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3228  00195E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3229  001960  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3230  001962  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3231                           
  3232                           ; BSR set to: 0
  3233                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
  3234  001964  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3235                           
  3236                           ;inc\CANlib.h: 333: }
  3237  001968  D059               	goto	l6900
  3238  00196A                     l366:
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;inc\CANlib.h: 335: else
  3242                           ;inc\CANlib.h: 337: {
  3243                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
  3244  00196A  010F               	movlb	15	; () banked
  3245  00196C  9742               	bcf	66,3,b	;volatile
  3246                           
  3247                           ; BSR set to: 15
  3248                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
  3249  00196E  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3250  001972  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3251  001976  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3252  00197A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3253  00197E  0E04               	movlw	4
  3254  001980  D006               	goto	u8700
  3255  001982                     u8705:
  3256  001982  0100               	movlb	0	; () banked
  3257  001984  90D8               	bcf	status,0,c
  3258  001986  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3259  001988  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3260  00198A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3261  00198C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3262  00198E                     u8700:
  3263  00198E  2EE8               	decfsz	wreg,f,c
  3264  001990  D7F8               	goto	u8705
  3265  001992  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3266  001996  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3267  00199A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3268  00199E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3269                           
  3270                           ; BSR set to: 0
  3271                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
  3272  0019A2  0100               	movlb	0	; () banked
  3273  0019A4  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3274  0019A6  0100               	movlb	0	; () banked
  3275  0019A8  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3276  0019AA  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3277  0019AC  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3278  0019AE  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
  3282  0019B0  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
  3286  0019B4  0E07               	movlw	7
  3287  0019B6  0100               	movlb	0	; () banked
  3288  0019B8  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3289  0019BA  0100               	movlb	0	; () banked
  3290  0019BC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3291  0019BE  0E00               	movlw	0
  3292  0019C0  0100               	movlb	0	; () banked
  3293  0019C2  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3294  0019C4  0100               	movlb	0	; () banked
  3295  0019C6  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3296  0019C8  0E00               	movlw	0
  3297  0019CA  0100               	movlb	0	; () banked
  3298  0019CC  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3299  0019CE  0100               	movlb	0	; () banked
  3300  0019D0  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3301  0019D2  0E00               	movlw	0
  3302  0019D4  0100               	movlb	0	; () banked
  3303  0019D6  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3304  0019D8  0100               	movlb	0	; () banked
  3305  0019DA  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;inc\CANlib.h: 345: tamp = tamp << 5;
  3309  0019DC  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3310  0019E0  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3311  0019E4  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3312  0019E8  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3313  0019EC  0E05               	movlw	5
  3314  0019EE                     u8715:
  3315  0019EE  90D8               	bcf	status,0,c
  3316  0019F0  0100               	movlb	0	; () banked
  3317  0019F2  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3318  0019F4  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3319  0019F6  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3320  0019F8  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3321  0019FA  2EE8               	decfsz	wreg,f,c
  3322  0019FC  D7F8               	goto	u8715
  3323  0019FE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3324  001A02  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3325  001A06  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3326  001A0A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3327                           
  3328                           ; BSR set to: 0
  3329                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
  3330  001A0E  010F               	movlb	15	; () banked
  3331  001A10  5142               	movf	66,w,b	;volatile
  3332  001A12  0B1F               	andlw	31
  3333  001A14  010F               	movlb	15	; () banked
  3334  001A16  6F42               	movwf	66,b	;volatile
  3335                           
  3336                           ; BSR set to: 15
  3337                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
  3338  001A18  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  3339  001A1C                     l6900:
  3340                           
  3341                           ;inc\CANlib.h: 348: }
  3342                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
  3343  001A1C  0100               	movlb	0	; () banked
  3344  001A1E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3345  001A20  D003               	goto	l373
  3346                           
  3347                           ; BSR set to: 0
  3348                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
  3349  001A22  010F               	movlb	15	; () banked
  3350  001A24  8140               	bsf	64,0,b	;volatile
  3351  001A26  D002               	goto	l374
  3352  001A28                     l373:
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;inc\CANlib.h: 352: else
  3356                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
  3357  001A28  010F               	movlb	15	; () banked
  3358  001A2A  9140               	bcf	64,0,b	;volatile
  3359  001A2C                     l374:
  3360                           
  3361                           ; BSR set to: 15
  3362                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
  3363  001A2C  0100               	movlb	0	; () banked
  3364  001A2E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  3365  001A30  D003               	goto	l375
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
  3369  001A32  010F               	movlb	15	; () banked
  3370  001A34  8340               	bsf	64,1,b	;volatile
  3371  001A36  D002               	goto	l6906
  3372  001A38                     l375:
  3373                           
  3374                           ; BSR set to: 0
  3375                           ;inc\CANlib.h: 356: else
  3376                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
  3377  001A38  010F               	movlb	15	; () banked
  3378  001A3A  9340               	bcf	64,1,b	;volatile
  3379  001A3C                     l6906:
  3380                           
  3381                           ; BSR set to: 15
  3382                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
  3383  001A3C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  3384  001A40  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3385  001A44  50DF               	movf	indf2,w,c
  3386  001A46  010F               	movlb	15	; () banked
  3387  001A48  6F46               	movwf	70,b	;volatile
  3388                           
  3389                           ; BSR set to: 15
  3390                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
  3391  001A4A  0100               	movlb	0	; () banked
  3392  001A4C  EE20 F001          	lfsr	2,1
  3393  001A50  517B               	movf	CANsendMessage@data& (0+255),w,b
  3394  001A52  26D9               	addwf	fsr2l,f,c
  3395  001A54  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3396  001A56  22DA               	addwfc	fsr2h,f,c
  3397  001A58  50DF               	movf	indf2,w,c
  3398  001A5A  010F               	movlb	15	; () banked
  3399  001A5C  6F47               	movwf	71,b	;volatile
  3400                           
  3401                           ; BSR set to: 15
  3402                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
  3403  001A5E  0100               	movlb	0	; () banked
  3404  001A60  EE20 F002          	lfsr	2,2
  3405  001A64  517B               	movf	CANsendMessage@data& (0+255),w,b
  3406  001A66  26D9               	addwf	fsr2l,f,c
  3407  001A68  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3408  001A6A  22DA               	addwfc	fsr2h,f,c
  3409  001A6C  50DF               	movf	indf2,w,c
  3410  001A6E  010F               	movlb	15	; () banked
  3411  001A70  6F48               	movwf	72,b	;volatile
  3412                           
  3413                           ; BSR set to: 15
  3414                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
  3415  001A72  0100               	movlb	0	; () banked
  3416  001A74  EE20 F003          	lfsr	2,3
  3417  001A78  517B               	movf	CANsendMessage@data& (0+255),w,b
  3418  001A7A  26D9               	addwf	fsr2l,f,c
  3419  001A7C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3420  001A7E  22DA               	addwfc	fsr2h,f,c
  3421  001A80  50DF               	movf	indf2,w,c
  3422  001A82  010F               	movlb	15	; () banked
  3423  001A84  6F49               	movwf	73,b	;volatile
  3424                           
  3425                           ; BSR set to: 15
  3426                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
  3427  001A86  0100               	movlb	0	; () banked
  3428  001A88  EE20 F004          	lfsr	2,4
  3429  001A8C  517B               	movf	CANsendMessage@data& (0+255),w,b
  3430  001A8E  26D9               	addwf	fsr2l,f,c
  3431  001A90  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3432  001A92  22DA               	addwfc	fsr2h,f,c
  3433  001A94  50DF               	movf	indf2,w,c
  3434  001A96  010F               	movlb	15	; () banked
  3435  001A98  6F4A               	movwf	74,b	;volatile
  3436                           
  3437                           ; BSR set to: 15
  3438                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
  3439  001A9A  0100               	movlb	0	; () banked
  3440  001A9C  EE20 F005          	lfsr	2,5
  3441  001AA0  517B               	movf	CANsendMessage@data& (0+255),w,b
  3442  001AA2  26D9               	addwf	fsr2l,f,c
  3443  001AA4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3444  001AA6  22DA               	addwfc	fsr2h,f,c
  3445  001AA8  50DF               	movf	indf2,w,c
  3446  001AAA  010F               	movlb	15	; () banked
  3447  001AAC  6F4B               	movwf	75,b	;volatile
  3448                           
  3449                           ; BSR set to: 15
  3450                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
  3451  001AAE  0100               	movlb	0	; () banked
  3452  001AB0  EE20 F006          	lfsr	2,6
  3453  001AB4  517B               	movf	CANsendMessage@data& (0+255),w,b
  3454  001AB6  26D9               	addwf	fsr2l,f,c
  3455  001AB8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3456  001ABA  22DA               	addwfc	fsr2h,f,c
  3457  001ABC  50DF               	movf	indf2,w,c
  3458  001ABE  010F               	movlb	15	; () banked
  3459  001AC0  6F4C               	movwf	76,b	;volatile
  3460                           
  3461                           ; BSR set to: 15
  3462                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
  3463  001AC2  0100               	movlb	0	; () banked
  3464  001AC4  EE20 F007          	lfsr	2,7
  3465  001AC8  517B               	movf	CANsendMessage@data& (0+255),w,b
  3466  001ACA  26D9               	addwf	fsr2l,f,c
  3467  001ACC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3468  001ACE  22DA               	addwfc	fsr2h,f,c
  3469  001AD0  50DF               	movf	indf2,w,c
  3470  001AD2  010F               	movlb	15	; () banked
  3471  001AD4  6F4D               	movwf	77,b	;volatile
  3472                           
  3473                           ; BSR set to: 15
  3474                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
  3475  001AD6  010F               	movlb	15	; () banked
  3476  001AD8  8740               	bsf	64,3,b	;volatile
  3477                           
  3478                           ; BSR set to: 15
  3479                           ;inc\CANlib.h: 369: return;
  3480  001ADA  0012               	return	
  3481  001ADC                     l363:
  3482                           
  3483                           ; BSR set to: 15
  3484                           ;inc\CANlib.h: 370: }
  3485                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
  3486  001ADC  010F               	movlb	15	; () banked
  3487  001ADE  B730               	btfsc	48,3,b	;volatile
  3488  001AE0  D13F               	goto	l378
  3489                           
  3490                           ; BSR set to: 15
  3491                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
  3492  001AE2  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  3493                           
  3494                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
  3495  001AE6  0100               	movlb	0	; () banked
  3496  001AE8  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3497  001AEA  D003               	goto	l379
  3498                           
  3499                           ; BSR set to: 0
  3500                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
  3501  001AEC  010F               	movlb	15	; () banked
  3502  001AEE  8D35               	bsf	53,6,b	;volatile
  3503  001AF0  D002               	goto	l380
  3504  001AF2                     l379:
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;inc\CANlib.h: 379: else
  3508                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
  3509  001AF2  010F               	movlb	15	; () banked
  3510  001AF4  9D35               	bcf	53,6,b	;volatile
  3511  001AF6                     l380:
  3512                           
  3513                           ; BSR set to: 15
  3514                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
  3515  001AF6  0100               	movlb	0	; () banked
  3516  001AF8  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3517  001AFA  D079               	goto	l381
  3518                           
  3519                           ; BSR set to: 0
  3520                           ;inc\CANlib.h: 383: {
  3521                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
  3522  001AFC  0100               	movlb	0	; () banked
  3523  001AFE  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3524  001B00  0100               	movlb	0	; () banked
  3525  001B02  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3526  001B04  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3527  001B06  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3528  001B08  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
  3532  001B0A  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  3533                           
  3534                           ; BSR set to: 0
  3535                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
  3536  001B0E  0E00               	movlw	0
  3537  001B10  0100               	movlb	0	; () banked
  3538  001B12  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3539  001B14  0100               	movlb	0	; () banked
  3540  001B16  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3541  001B18  0EFF               	movlw	255
  3542  001B1A  0100               	movlb	0	; () banked
  3543  001B1C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3544  001B1E  0100               	movlb	0	; () banked
  3545  001B20  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3546  001B22  0E00               	movlw	0
  3547  001B24  0100               	movlb	0	; () banked
  3548  001B26  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3549  001B28  0100               	movlb	0	; () banked
  3550  001B2A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3551  001B2C  0E00               	movlw	0
  3552  001B2E  0100               	movlb	0	; () banked
  3553  001B30  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3554  001B32  0100               	movlb	0	; () banked
  3555  001B34  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3556                           
  3557                           ; BSR set to: 0
  3558                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
  3559  001B36  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3560  001B3A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3561  001B3E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3562  001B42  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3563  001B46  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3564  001B4A  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3565  001B4E  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3566  001B52  0100               	movlb	0	; () banked
  3567  001B54  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3568  001B56  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3569  001B5A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3570  001B5E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3571  001B62  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3572                           
  3573                           ; BSR set to: 0
  3574                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
  3575  001B66  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
  3579  001B6A  0E00               	movlw	0
  3580  001B6C  010F               	movlb	15	; () banked
  3581  001B6E  6F32               	movwf	50,b	;volatile
  3582                           
  3583                           ; BSR set to: 15
  3584                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
  3585  001B70  010F               	movlb	15	; () banked
  3586  001B72  8732               	bsf	50,3,b	;volatile
  3587                           
  3588                           ; BSR set to: 15
  3589                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
  3590  001B74  0100               	movlb	0	; () banked
  3591  001B76  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3592  001B78  D002               	goto	l382
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
  3596  001B7A  010F               	movlb	15	; () banked
  3597  001B7C  8132               	bsf	50,0,b	;volatile
  3598  001B7E                     l382:
  3599                           
  3600                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
  3601  001B7E  0100               	movlb	0	; () banked
  3602  001B80  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3603  001B82  D002               	goto	l383
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
  3607  001B84  010F               	movlb	15	; () banked
  3608  001B86  8332               	bsf	50,1,b	;volatile
  3609  001B88                     l383:
  3610                           
  3611                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
  3612  001B88  0100               	movlb	0	; () banked
  3613  001B8A  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3614  001B8C  D002               	goto	l384
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
  3618  001B8E  010F               	movlb	15	; () banked
  3619  001B90  8B32               	bsf	50,5,b	;volatile
  3620  001B92                     l384:
  3621                           
  3622                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
  3623  001B92  0100               	movlb	0	; () banked
  3624  001B94  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3625  001B96  D002               	goto	l385
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
  3629  001B98  010F               	movlb	15	; () banked
  3630  001B9A  8D32               	bsf	50,6,b	;volatile
  3631  001B9C                     l385:
  3632                           
  3633                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
  3634  001B9C  0100               	movlb	0	; () banked
  3635  001B9E  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3636  001BA0  D002               	goto	l6956
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
  3640  001BA2  010F               	movlb	15	; () banked
  3641  001BA4  8F32               	bsf	50,7,b	;volatile
  3642  001BA6                     l6956:
  3643                           
  3644                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
  3645  001BA6  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3646  001BAA  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3647  001BAE  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3648  001BB2  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3649  001BB6  0E16               	movlw	22
  3650  001BB8  D006               	goto	u8820
  3651  001BBA                     u8825:
  3652  001BBA  0100               	movlb	0	; () banked
  3653  001BBC  90D8               	bcf	status,0,c
  3654  001BBE  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3655  001BC0  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3656  001BC2  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3657  001BC4  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3658  001BC6                     u8820:
  3659  001BC6  2EE8               	decfsz	wreg,f,c
  3660  001BC8  D7F8               	goto	u8825
  3661  001BCA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3662  001BCE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3663  001BD2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3664  001BD6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3665                           
  3666                           ; BSR set to: 0
  3667                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
  3668  001BDA  0100               	movlb	0	; () banked
  3669  001BDC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3670  001BDE  0100               	movlb	0	; () banked
  3671  001BE0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3672  001BE2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3673  001BE4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3674  001BE6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
  3678  001BE8  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3679                           
  3680                           ;inc\CANlib.h: 408: }
  3681  001BEC  D059               	goto	l6976
  3682  001BEE                     l381:
  3683                           
  3684                           ; BSR set to: 0
  3685                           ;inc\CANlib.h: 410: else
  3686                           ;inc\CANlib.h: 412: {
  3687                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
  3688  001BEE  010F               	movlb	15	; () banked
  3689  001BF0  9732               	bcf	50,3,b	;volatile
  3690                           
  3691                           ; BSR set to: 15
  3692                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
  3693  001BF2  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3694  001BF6  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3695  001BFA  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3696  001BFE  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3697  001C02  0E04               	movlw	4
  3698  001C04  D006               	goto	u8830
  3699  001C06                     u8835:
  3700  001C06  0100               	movlb	0	; () banked
  3701  001C08  90D8               	bcf	status,0,c
  3702  001C0A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3703  001C0C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3704  001C0E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3705  001C10  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3706  001C12                     u8830:
  3707  001C12  2EE8               	decfsz	wreg,f,c
  3708  001C14  D7F8               	goto	u8835
  3709  001C16  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3710  001C1A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3711  001C1E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3712  001C22  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
  3716  001C26  0100               	movlb	0	; () banked
  3717  001C28  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3718  001C2A  0100               	movlb	0	; () banked
  3719  001C2C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3720  001C2E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3721  001C30  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3722  001C32  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3723                           
  3724                           ; BSR set to: 0
  3725                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
  3726  001C34  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
  3730  001C38  0E07               	movlw	7
  3731  001C3A  0100               	movlb	0	; () banked
  3732  001C3C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3733  001C3E  0100               	movlb	0	; () banked
  3734  001C40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3735  001C42  0E00               	movlw	0
  3736  001C44  0100               	movlb	0	; () banked
  3737  001C46  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3738  001C48  0100               	movlb	0	; () banked
  3739  001C4A  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3740  001C4C  0E00               	movlw	0
  3741  001C4E  0100               	movlb	0	; () banked
  3742  001C50  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3743  001C52  0100               	movlb	0	; () banked
  3744  001C54  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3745  001C56  0E00               	movlw	0
  3746  001C58  0100               	movlb	0	; () banked
  3747  001C5A  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3748  001C5C  0100               	movlb	0	; () banked
  3749  001C5E  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3750                           
  3751                           ; BSR set to: 0
  3752                           ;inc\CANlib.h: 420: tamp = tamp << 5;
  3753  001C60  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3754  001C64  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3755  001C68  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3756  001C6C  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3757  001C70  0E05               	movlw	5
  3758  001C72                     u8845:
  3759  001C72  90D8               	bcf	status,0,c
  3760  001C74  0100               	movlb	0	; () banked
  3761  001C76  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3762  001C78  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3763  001C7A  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3764  001C7C  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3765  001C7E  2EE8               	decfsz	wreg,f,c
  3766  001C80  D7F8               	goto	u8845
  3767  001C82  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3768  001C86  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3769  001C8A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3770  001C8E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3771                           
  3772                           ; BSR set to: 0
  3773                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
  3774  001C92  010F               	movlb	15	; () banked
  3775  001C94  5132               	movf	50,w,b	;volatile
  3776  001C96  0B1F               	andlw	31
  3777  001C98  010F               	movlb	15	; () banked
  3778  001C9A  6F32               	movwf	50,b	;volatile
  3779                           
  3780                           ; BSR set to: 15
  3781                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
  3782  001C9C  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  3783  001CA0                     l6976:
  3784                           
  3785                           ;inc\CANlib.h: 423: }
  3786                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
  3787  001CA0  0100               	movlb	0	; () banked
  3788  001CA2  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3789  001CA4  D003               	goto	l388
  3790                           
  3791                           ; BSR set to: 0
  3792                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
  3793  001CA6  010F               	movlb	15	; () banked
  3794  001CA8  8130               	bsf	48,0,b	;volatile
  3795  001CAA  D002               	goto	l389
  3796  001CAC                     l388:
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;inc\CANlib.h: 427: else
  3800                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
  3801  001CAC  010F               	movlb	15	; () banked
  3802  001CAE  9130               	bcf	48,0,b	;volatile
  3803  001CB0                     l389:
  3804                           
  3805                           ; BSR set to: 15
  3806                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
  3807  001CB0  0100               	movlb	0	; () banked
  3808  001CB2  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  3809  001CB4  D003               	goto	l390
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
  3813  001CB6  010F               	movlb	15	; () banked
  3814  001CB8  8330               	bsf	48,1,b	;volatile
  3815  001CBA  D002               	goto	l6982
  3816  001CBC                     l390:
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;inc\CANlib.h: 431: else
  3820                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
  3821  001CBC  010F               	movlb	15	; () banked
  3822  001CBE  9330               	bcf	48,1,b	;volatile
  3823  001CC0                     l6982:
  3824                           
  3825                           ; BSR set to: 15
  3826                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
  3827  001CC0  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  3828  001CC4  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3829  001CC8  50DF               	movf	indf2,w,c
  3830  001CCA  010F               	movlb	15	; () banked
  3831  001CCC  6F36               	movwf	54,b	;volatile
  3832                           
  3833                           ; BSR set to: 15
  3834                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
  3835  001CCE  0100               	movlb	0	; () banked
  3836  001CD0  EE20 F001          	lfsr	2,1
  3837  001CD4  517B               	movf	CANsendMessage@data& (0+255),w,b
  3838  001CD6  26D9               	addwf	fsr2l,f,c
  3839  001CD8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3840  001CDA  22DA               	addwfc	fsr2h,f,c
  3841  001CDC  50DF               	movf	indf2,w,c
  3842  001CDE  010F               	movlb	15	; () banked
  3843  001CE0  6F37               	movwf	55,b	;volatile
  3844                           
  3845                           ; BSR set to: 15
  3846                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
  3847  001CE2  0100               	movlb	0	; () banked
  3848  001CE4  EE20 F002          	lfsr	2,2
  3849  001CE8  517B               	movf	CANsendMessage@data& (0+255),w,b
  3850  001CEA  26D9               	addwf	fsr2l,f,c
  3851  001CEC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3852  001CEE  22DA               	addwfc	fsr2h,f,c
  3853  001CF0  50DF               	movf	indf2,w,c
  3854  001CF2  010F               	movlb	15	; () banked
  3855  001CF4  6F38               	movwf	56,b	;volatile
  3856                           
  3857                           ; BSR set to: 15
  3858                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
  3859  001CF6  0100               	movlb	0	; () banked
  3860  001CF8  EE20 F003          	lfsr	2,3
  3861  001CFC  517B               	movf	CANsendMessage@data& (0+255),w,b
  3862  001CFE  26D9               	addwf	fsr2l,f,c
  3863  001D00  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3864  001D02  22DA               	addwfc	fsr2h,f,c
  3865  001D04  50DF               	movf	indf2,w,c
  3866  001D06  010F               	movlb	15	; () banked
  3867  001D08  6F39               	movwf	57,b	;volatile
  3868                           
  3869                           ; BSR set to: 15
  3870                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
  3871  001D0A  0100               	movlb	0	; () banked
  3872  001D0C  EE20 F004          	lfsr	2,4
  3873  001D10  517B               	movf	CANsendMessage@data& (0+255),w,b
  3874  001D12  26D9               	addwf	fsr2l,f,c
  3875  001D14  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3876  001D16  22DA               	addwfc	fsr2h,f,c
  3877  001D18  50DF               	movf	indf2,w,c
  3878  001D1A  010F               	movlb	15	; () banked
  3879  001D1C  6F3A               	movwf	58,b	;volatile
  3880                           
  3881                           ; BSR set to: 15
  3882                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
  3883  001D1E  0100               	movlb	0	; () banked
  3884  001D20  EE20 F005          	lfsr	2,5
  3885  001D24  517B               	movf	CANsendMessage@data& (0+255),w,b
  3886  001D26  26D9               	addwf	fsr2l,f,c
  3887  001D28  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3888  001D2A  22DA               	addwfc	fsr2h,f,c
  3889  001D2C  50DF               	movf	indf2,w,c
  3890  001D2E  010F               	movlb	15	; () banked
  3891  001D30  6F3B               	movwf	59,b	;volatile
  3892                           
  3893                           ; BSR set to: 15
  3894                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
  3895  001D32  0100               	movlb	0	; () banked
  3896  001D34  EE20 F006          	lfsr	2,6
  3897  001D38  517B               	movf	CANsendMessage@data& (0+255),w,b
  3898  001D3A  26D9               	addwf	fsr2l,f,c
  3899  001D3C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3900  001D3E  22DA               	addwfc	fsr2h,f,c
  3901  001D40  50DF               	movf	indf2,w,c
  3902  001D42  010F               	movlb	15	; () banked
  3903  001D44  6F3C               	movwf	60,b	;volatile
  3904                           
  3905                           ; BSR set to: 15
  3906                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
  3907  001D46  0100               	movlb	0	; () banked
  3908  001D48  EE20 F007          	lfsr	2,7
  3909  001D4C  517B               	movf	CANsendMessage@data& (0+255),w,b
  3910  001D4E  26D9               	addwf	fsr2l,f,c
  3911  001D50  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3912  001D52  22DA               	addwfc	fsr2h,f,c
  3913  001D54  50DF               	movf	indf2,w,c
  3914  001D56  010F               	movlb	15	; () banked
  3915  001D58  6F3D               	movwf	61,b	;volatile
  3916                           
  3917                           ; BSR set to: 15
  3918                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
  3919  001D5A  010F               	movlb	15	; () banked
  3920  001D5C  8730               	bsf	48,3,b	;volatile
  3921                           
  3922                           ; BSR set to: 15
  3923                           ;inc\CANlib.h: 445: return;
  3924  001D5E  0012               	return	
  3925  001D60                     l378:
  3926                           
  3927                           ; BSR set to: 15
  3928                           ;inc\CANlib.h: 446: }
  3929                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
  3930  001D60  010F               	movlb	15	; () banked
  3931  001D62  B720               	btfsc	32,3,b	;volatile
  3932  001D64  0012               	return	
  3933                           
  3934                           ; BSR set to: 15
  3935                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
  3936  001D66  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  3937                           
  3938                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
  3939  001D6A  0100               	movlb	0	; () banked
  3940  001D6C  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3941  001D6E  D003               	goto	l393
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
  3945  001D70  010F               	movlb	15	; () banked
  3946  001D72  8D25               	bsf	37,6,b	;volatile
  3947  001D74  D002               	goto	l394
  3948  001D76                     l393:
  3949                           
  3950                           ; BSR set to: 0
  3951                           ;inc\CANlib.h: 455: else
  3952                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
  3953  001D76  010F               	movlb	15	; () banked
  3954  001D78  9D25               	bcf	37,6,b	;volatile
  3955  001D7A                     l394:
  3956                           
  3957                           ; BSR set to: 15
  3958                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
  3959  001D7A  0100               	movlb	0	; () banked
  3960  001D7C  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3961  001D7E  D079               	goto	l395
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;inc\CANlib.h: 459: {
  3965                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
  3966  001D80  0100               	movlb	0	; () banked
  3967  001D82  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3968  001D84  0100               	movlb	0	; () banked
  3969  001D86  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3970  001D88  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3971  001D8A  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3972  001D8C  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
  3976  001D8E  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  3977                           
  3978                           ; BSR set to: 0
  3979                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
  3980  001D92  0E00               	movlw	0
  3981  001D94  0100               	movlb	0	; () banked
  3982  001D96  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3983  001D98  0100               	movlb	0	; () banked
  3984  001D9A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3985  001D9C  0EFF               	movlw	255
  3986  001D9E  0100               	movlb	0	; () banked
  3987  001DA0  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3988  001DA2  0100               	movlb	0	; () banked
  3989  001DA4  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3990  001DA6  0E00               	movlw	0
  3991  001DA8  0100               	movlb	0	; () banked
  3992  001DAA  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3993  001DAC  0100               	movlb	0	; () banked
  3994  001DAE  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3995  001DB0  0E00               	movlw	0
  3996  001DB2  0100               	movlb	0	; () banked
  3997  001DB4  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3998  001DB6  0100               	movlb	0	; () banked
  3999  001DB8  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
  4003  001DBA  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4004  001DBE  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4005  001DC2  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4006  001DC6  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4007  001DCA  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  4008  001DCE  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  4009  001DD2  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  4010  001DD6  0100               	movlb	0	; () banked
  4011  001DD8  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  4012  001DDA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4013  001DDE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4014  001DE2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4015  001DE6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
  4019  001DEA  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
  4023  001DEE  0E00               	movlw	0
  4024  001DF0  010F               	movlb	15	; () banked
  4025  001DF2  6F22               	movwf	34,b	;volatile
  4026                           
  4027                           ; BSR set to: 15
  4028                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
  4029  001DF4  010F               	movlb	15	; () banked
  4030  001DF6  8722               	bsf	34,3,b	;volatile
  4031                           
  4032                           ; BSR set to: 15
  4033                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
  4034  001DF8  0100               	movlb	0	; () banked
  4035  001DFA  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  4036  001DFC  D002               	goto	l396
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
  4040  001DFE  010F               	movlb	15	; () banked
  4041  001E00  8122               	bsf	34,0,b	;volatile
  4042  001E02                     l396:
  4043                           
  4044                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
  4045  001E02  0100               	movlb	0	; () banked
  4046  001E04  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  4047  001E06  D002               	goto	l397
  4048                           
  4049                           ; BSR set to: 0
  4050                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
  4051  001E08  010F               	movlb	15	; () banked
  4052  001E0A  8322               	bsf	34,1,b	;volatile
  4053  001E0C                     l397:
  4054                           
  4055                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
  4056  001E0C  0100               	movlb	0	; () banked
  4057  001E0E  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  4058  001E10  D002               	goto	l398
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
  4062  001E12  010F               	movlb	15	; () banked
  4063  001E14  8B22               	bsf	34,5,b	;volatile
  4064  001E16                     l398:
  4065                           
  4066                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
  4067  001E16  0100               	movlb	0	; () banked
  4068  001E18  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  4069  001E1A  D002               	goto	l399
  4070                           
  4071                           ; BSR set to: 0
  4072                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
  4073  001E1C  010F               	movlb	15	; () banked
  4074  001E1E  8D22               	bsf	34,6,b	;volatile
  4075  001E20                     l399:
  4076                           
  4077                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
  4078  001E20  0100               	movlb	0	; () banked
  4079  001E22  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  4080  001E24  D002               	goto	l7032
  4081                           
  4082                           ; BSR set to: 0
  4083                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
  4084  001E26  010F               	movlb	15	; () banked
  4085  001E28  8F22               	bsf	34,7,b	;volatile
  4086  001E2A                     l7032:
  4087                           
  4088                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
  4089  001E2A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4090  001E2E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4091  001E32  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4092  001E36  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4093  001E3A  0E16               	movlw	22
  4094  001E3C  D006               	goto	u8950
  4095  001E3E                     u8955:
  4096  001E3E  0100               	movlb	0	; () banked
  4097  001E40  90D8               	bcf	status,0,c
  4098  001E42  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4099  001E44  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4100  001E46  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4101  001E48  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4102  001E4A                     u8950:
  4103  001E4A  2EE8               	decfsz	wreg,f,c
  4104  001E4C  D7F8               	goto	u8955
  4105  001E4E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4106  001E52  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4107  001E56  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4108  001E5A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4109                           
  4110                           ; BSR set to: 0
  4111                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
  4112  001E5E  0100               	movlb	0	; () banked
  4113  001E60  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4114  001E62  0100               	movlb	0	; () banked
  4115  001E64  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4116  001E66  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4117  001E68  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4118  001E6A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
  4122  001E6C  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4123                           
  4124                           ;inc\CANlib.h: 484: }
  4125  001E70  D059               	goto	l7052
  4126  001E72                     l395:
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;inc\CANlib.h: 486: else
  4130                           ;inc\CANlib.h: 488: {
  4131                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
  4132  001E72  010F               	movlb	15	; () banked
  4133  001E74  9722               	bcf	34,3,b	;volatile
  4134                           
  4135                           ; BSR set to: 15
  4136                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
  4137  001E76  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4138  001E7A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4139  001E7E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4140  001E82  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4141  001E86  0E04               	movlw	4
  4142  001E88  D006               	goto	u8960
  4143  001E8A                     u8965:
  4144  001E8A  0100               	movlb	0	; () banked
  4145  001E8C  90D8               	bcf	status,0,c
  4146  001E8E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4147  001E90  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4148  001E92  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4149  001E94  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4150  001E96                     u8960:
  4151  001E96  2EE8               	decfsz	wreg,f,c
  4152  001E98  D7F8               	goto	u8965
  4153  001E9A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4154  001E9E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4155  001EA2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4156  001EA6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4157                           
  4158                           ; BSR set to: 0
  4159                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
  4160  001EAA  0100               	movlb	0	; () banked
  4161  001EAC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4162  001EAE  0100               	movlb	0	; () banked
  4163  001EB0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4164  001EB2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4165  001EB4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4166  001EB6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4167                           
  4168                           ; BSR set to: 0
  4169                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
  4170  001EB8  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
  4174  001EBC  0E07               	movlw	7
  4175  001EBE  0100               	movlb	0	; () banked
  4176  001EC0  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4177  001EC2  0100               	movlb	0	; () banked
  4178  001EC4  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4179  001EC6  0E00               	movlw	0
  4180  001EC8  0100               	movlb	0	; () banked
  4181  001ECA  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4182  001ECC  0100               	movlb	0	; () banked
  4183  001ECE  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4184  001ED0  0E00               	movlw	0
  4185  001ED2  0100               	movlb	0	; () banked
  4186  001ED4  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4187  001ED6  0100               	movlb	0	; () banked
  4188  001ED8  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4189  001EDA  0E00               	movlw	0
  4190  001EDC  0100               	movlb	0	; () banked
  4191  001EDE  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4192  001EE0  0100               	movlb	0	; () banked
  4193  001EE2  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;inc\CANlib.h: 496: tamp = tamp << 5;
  4197  001EE4  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4198  001EE8  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4199  001EEC  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4200  001EF0  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4201  001EF4  0E05               	movlw	5
  4202  001EF6                     u8975:
  4203  001EF6  90D8               	bcf	status,0,c
  4204  001EF8  0100               	movlb	0	; () banked
  4205  001EFA  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  4206  001EFC  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  4207  001EFE  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  4208  001F00  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  4209  001F02  2EE8               	decfsz	wreg,f,c
  4210  001F04  D7F8               	goto	u8975
  4211  001F06  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4212  001F0A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4213  001F0E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4214  001F12  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
  4218  001F16  010F               	movlb	15	; () banked
  4219  001F18  5122               	movf	34,w,b	;volatile
  4220  001F1A  0B1F               	andlw	31
  4221  001F1C  010F               	movlb	15	; () banked
  4222  001F1E  6F22               	movwf	34,b	;volatile
  4223                           
  4224                           ; BSR set to: 15
  4225                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
  4226  001F20  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  4227  001F24                     l7052:
  4228                           
  4229                           ;inc\CANlib.h: 499: }
  4230                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
  4231  001F24  0100               	movlb	0	; () banked
  4232  001F26  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  4233  001F28  D003               	goto	l402
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
  4237  001F2A  010F               	movlb	15	; () banked
  4238  001F2C  8120               	bsf	32,0,b	;volatile
  4239  001F2E  D002               	goto	l403
  4240  001F30                     l402:
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;inc\CANlib.h: 503: else
  4244                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
  4245  001F30  010F               	movlb	15	; () banked
  4246  001F32  9120               	bcf	32,0,b	;volatile
  4247  001F34                     l403:
  4248                           
  4249                           ; BSR set to: 15
  4250                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
  4251  001F34  0100               	movlb	0	; () banked
  4252  001F36  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  4253  001F38  D003               	goto	l404
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
  4257  001F3A  010F               	movlb	15	; () banked
  4258  001F3C  8320               	bsf	32,1,b	;volatile
  4259  001F3E  D002               	goto	l7058
  4260  001F40                     l404:
  4261                           
  4262                           ; BSR set to: 0
  4263                           ;inc\CANlib.h: 507: else
  4264                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
  4265  001F40  010F               	movlb	15	; () banked
  4266  001F42  9320               	bcf	32,1,b	;volatile
  4267  001F44                     l7058:
  4268                           
  4269                           ; BSR set to: 15
  4270                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
  4271  001F44  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  4272  001F48  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4273  001F4C  50DF               	movf	indf2,w,c
  4274  001F4E  010F               	movlb	15	; () banked
  4275  001F50  6F26               	movwf	38,b	;volatile
  4276                           
  4277                           ; BSR set to: 15
  4278                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
  4279  001F52  0100               	movlb	0	; () banked
  4280  001F54  EE20 F001          	lfsr	2,1
  4281  001F58  517B               	movf	CANsendMessage@data& (0+255),w,b
  4282  001F5A  26D9               	addwf	fsr2l,f,c
  4283  001F5C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4284  001F5E  22DA               	addwfc	fsr2h,f,c
  4285  001F60  50DF               	movf	indf2,w,c
  4286  001F62  010F               	movlb	15	; () banked
  4287  001F64  6F27               	movwf	39,b	;volatile
  4288                           
  4289                           ; BSR set to: 15
  4290                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
  4291  001F66  0100               	movlb	0	; () banked
  4292  001F68  EE20 F002          	lfsr	2,2
  4293  001F6C  517B               	movf	CANsendMessage@data& (0+255),w,b
  4294  001F6E  26D9               	addwf	fsr2l,f,c
  4295  001F70  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4296  001F72  22DA               	addwfc	fsr2h,f,c
  4297  001F74  50DF               	movf	indf2,w,c
  4298  001F76  010F               	movlb	15	; () banked
  4299  001F78  6F28               	movwf	40,b	;volatile
  4300                           
  4301                           ; BSR set to: 15
  4302                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
  4303  001F7A  0100               	movlb	0	; () banked
  4304  001F7C  EE20 F003          	lfsr	2,3
  4305  001F80  517B               	movf	CANsendMessage@data& (0+255),w,b
  4306  001F82  26D9               	addwf	fsr2l,f,c
  4307  001F84  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4308  001F86  22DA               	addwfc	fsr2h,f,c
  4309  001F88  50DF               	movf	indf2,w,c
  4310  001F8A  010F               	movlb	15	; () banked
  4311  001F8C  6F29               	movwf	41,b	;volatile
  4312                           
  4313                           ; BSR set to: 15
  4314                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
  4315  001F8E  0100               	movlb	0	; () banked
  4316  001F90  EE20 F004          	lfsr	2,4
  4317  001F94  517B               	movf	CANsendMessage@data& (0+255),w,b
  4318  001F96  26D9               	addwf	fsr2l,f,c
  4319  001F98  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4320  001F9A  22DA               	addwfc	fsr2h,f,c
  4321  001F9C  50DF               	movf	indf2,w,c
  4322  001F9E  010F               	movlb	15	; () banked
  4323  001FA0  6F2A               	movwf	42,b	;volatile
  4324                           
  4325                           ; BSR set to: 15
  4326                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
  4327  001FA2  0100               	movlb	0	; () banked
  4328  001FA4  EE20 F005          	lfsr	2,5
  4329  001FA8  517B               	movf	CANsendMessage@data& (0+255),w,b
  4330  001FAA  26D9               	addwf	fsr2l,f,c
  4331  001FAC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4332  001FAE  22DA               	addwfc	fsr2h,f,c
  4333  001FB0  50DF               	movf	indf2,w,c
  4334  001FB2  010F               	movlb	15	; () banked
  4335  001FB4  6F2B               	movwf	43,b	;volatile
  4336                           
  4337                           ; BSR set to: 15
  4338                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
  4339  001FB6  0100               	movlb	0	; () banked
  4340  001FB8  EE20 F006          	lfsr	2,6
  4341  001FBC  517B               	movf	CANsendMessage@data& (0+255),w,b
  4342  001FBE  26D9               	addwf	fsr2l,f,c
  4343  001FC0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4344  001FC2  22DA               	addwfc	fsr2h,f,c
  4345  001FC4  50DF               	movf	indf2,w,c
  4346  001FC6  010F               	movlb	15	; () banked
  4347  001FC8  6F2C               	movwf	44,b	;volatile
  4348                           
  4349                           ; BSR set to: 15
  4350                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
  4351  001FCA  0100               	movlb	0	; () banked
  4352  001FCC  EE20 F007          	lfsr	2,7
  4353  001FD0  517B               	movf	CANsendMessage@data& (0+255),w,b
  4354  001FD2  26D9               	addwf	fsr2l,f,c
  4355  001FD4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4356  001FD6  22DA               	addwfc	fsr2h,f,c
  4357  001FD8  50DF               	movf	indf2,w,c
  4358  001FDA  010F               	movlb	15	; () banked
  4359  001FDC  6F2D               	movwf	45,b	;volatile
  4360                           
  4361                           ; BSR set to: 15
  4362                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
  4363  001FDE  010F               	movlb	15	; () banked
  4364  001FE0  8720               	bsf	32,3,b	;volatile
  4365                           
  4366                           ; BSR set to: 15
  4367                           ;inc\CANlib.h: 521: return;
  4368  001FE2  0012               	return	
  4369  001FE4                     __end_of_CANsendMessage:
  4370                           	opt stack 0
  4371                           tblptru	equ	0xFF8
  4372                           tblptrh	equ	0xFF7
  4373                           tblptrl	equ	0xFF6
  4374                           tablat	equ	0xFF5
  4375                           postinc0	equ	0xFEE
  4376                           wreg	equ	0xFE8
  4377                           postdec1	equ	0xFE5
  4378                           fsr1l	equ	0xFE1
  4379                           indf2	equ	0xFDF
  4380                           postinc2	equ	0xFDE
  4381                           postdec2	equ	0xFDD
  4382                           fsr2h	equ	0xFDA
  4383                           fsr2l	equ	0xFD9
  4384                           status	equ	0xFD8
  4385                           
  4386 ;; *************** function _CANisTxReady *****************
  4387 ;; Defined at:
  4388 ;;		line 1155 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;		None
  4391 ;; Auto vars:     Size  Location     Type
  4392 ;;		None
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  1    wreg      unsigned char 
  4395 ;; Registers used:
  4396 ;;		wreg, status,2
  4397 ;; Tracked objects:
  4398 ;;		On entry : 0/0
  4399 ;;		On exit  : 0/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4403 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4405 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4406 ;;Total ram usage:        1 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; Hardware stack levels required when called:    4
  4409 ;; This function calls:
  4410 ;;		Nothing
  4411 ;; This function is called by:
  4412 ;;		_park_search
  4413 ;;		_can_send
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text6
  4418  005FA0                     __ptext6:
  4419                           	opt stack 0
  4420  005FA0                     _CANisTxReady:
  4421                           	opt stack 23
  4422                           
  4423                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  4424                           
  4425                           ; BSR set to: 15
  4426                           ;incstack = 0
  4427  005FA0  0E01               	movlw	1
  4428  005FA2  0100               	movlb	0	; () banked
  4429  005FA4  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4430                           
  4431                           ; BSR set to: 0
  4432  005FA6  010F               	movlb	15	; () banked
  4433  005FA8  A740               	btfss	64,3,b	;volatile
  4434  005FAA  D009               	goto	l556
  4435                           
  4436                           ; BSR set to: 15
  4437  005FAC  010F               	movlb	15	; () banked
  4438  005FAE  A730               	btfss	48,3,b	;volatile
  4439  005FB0  D006               	goto	l556
  4440                           
  4441                           ; BSR set to: 15
  4442  005FB2  010F               	movlb	15	; () banked
  4443  005FB4  A720               	btfss	32,3,b	;volatile
  4444  005FB6  D003               	goto	l556
  4445                           
  4446                           ; BSR set to: 15
  4447  005FB8  0E00               	movlw	0
  4448  005FBA  0100               	movlb	0	; () banked
  4449  005FBC  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4450  005FBE                     l556:
  4451  005FBE  0100               	movlb	0	; () banked
  4452  005FC0  5177               	movf	_CANisTxReady$2845& (0+255),w,b
  4453  005FC2  0012               	return	
  4454  005FC4                     __end_of_CANisTxReady:
  4455                           	opt stack 0
  4456                           tblptru	equ	0xFF8
  4457                           tblptrh	equ	0xFF7
  4458                           tblptrl	equ	0xFF6
  4459                           tablat	equ	0xFF5
  4460                           postinc0	equ	0xFEE
  4461                           wreg	equ	0xFE8
  4462                           postdec1	equ	0xFE5
  4463                           fsr1l	equ	0xFE1
  4464                           indf2	equ	0xFDF
  4465                           postinc2	equ	0xFDE
  4466                           postdec2	equ	0xFDD
  4467                           fsr2h	equ	0xFDA
  4468                           fsr2l	equ	0xFD9
  4469                           status	equ	0xFD8
  4470                           
  4471 ;; *************** function _abs *****************
  4472 ;; Defined at:
  4473 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  4474 ;; Parameters:    Size  Location     Type
  4475 ;;  a               2   23[BANK0 ] int 
  4476 ;; Auto vars:     Size  Location     Type
  4477 ;;		None
  4478 ;; Return value:  Size  Location     Type
  4479 ;;                  2   23[BANK0 ] int 
  4480 ;; Registers used:
  4481 ;;		wreg, status,2, status,0
  4482 ;; Tracked objects:
  4483 ;;		On entry : 0/0
  4484 ;;		On exit  : 0/0
  4485 ;;		Unchanged: 0/0
  4486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4487 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4489 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4490 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4491 ;;Total ram usage:        4 bytes
  4492 ;; Hardware stack levels used:    1
  4493 ;; Hardware stack levels required when called:    4
  4494 ;; This function calls:
  4495 ;;		Nothing
  4496 ;; This function is called by:
  4497 ;;		_park_search
  4498 ;;		_parallelo
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502                           	psect	text7
  4503  005F48                     __ptext7:
  4504                           	opt stack 0
  4505  005F48                     _abs:
  4506                           	opt stack 24
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;incstack = 0
  4510  005F48  0100               	movlb	0	; () banked
  4511  005F4A  AF78               	btfss	(abs@a+1)& (0+255),7,b
  4512  005F4C  D00E               	goto	l852
  4513                           
  4514                           ; BSR set to: 0
  4515  005F4E  C077  F079         	movff	abs@a,??_abs
  4516  005F52  C078  F07A         	movff	abs@a+1,??_abs+1
  4517  005F56  0100               	movlb	0	; () banked
  4518  005F58  1F79               	comf	??_abs& (0+255),f,b
  4519  005F5A  1F7A               	comf	(??_abs+1)& (0+255),f,b
  4520  005F5C  4B79               	infsnz	??_abs& (0+255),f,b
  4521  005F5E  2B7A               	incf	(??_abs+1)& (0+255),f,b
  4522  005F60  C079  F077         	movff	??_abs,?_abs
  4523  005F64  C07A  F078         	movff	??_abs+1,?_abs+1
  4524  005F68  0012               	return	
  4525  005F6A                     l852:
  4526                           
  4527                           ; BSR set to: 0
  4528  005F6A  C077  F077         	movff	abs@a,?_abs
  4529  005F6E  C078  F078         	movff	abs@a+1,?_abs+1
  4530                           
  4531                           ; BSR set to: 0
  4532  005F72  0012               	return		;funcret
  4533  005F74                     __end_of_abs:
  4534                           	opt stack 0
  4535                           tblptru	equ	0xFF8
  4536                           tblptrh	equ	0xFF7
  4537                           tblptrl	equ	0xFF6
  4538                           tablat	equ	0xFF5
  4539                           postinc0	equ	0xFEE
  4540                           wreg	equ	0xFE8
  4541                           postdec1	equ	0xFE5
  4542                           fsr1l	equ	0xFE1
  4543                           indf2	equ	0xFDF
  4544                           postinc2	equ	0xFDE
  4545                           postdec2	equ	0xFDD
  4546                           fsr2h	equ	0xFDA
  4547                           fsr2l	equ	0xFD9
  4548                           status	equ	0xFD8
  4549                           
  4550 ;; *************** function _matematica *****************
  4551 ;; Defined at:
  4552 ;;		line 419 in file "parcheggio.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;		None
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;		None
  4557 ;; Return value:  Size  Location     Type
  4558 ;;		None               void
  4559 ;; Registers used:
  4560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4567 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4569 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4570 ;;Total ram usage:       28 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; Hardware stack levels required when called:    8
  4573 ;; This function calls:
  4574 ;;		___fladd
  4575 ;;		___fldiv
  4576 ;;		___flmul
  4577 ;;		___flneg
  4578 ;;		_asin
  4579 ;;		_cos
  4580 ;; This function is called by:
  4581 ;;		_park_routine
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           	psect	text8
  4586  001FE4                     __ptext8:
  4587                           	opt stack 0
  4588  001FE4                     _matematica:
  4589                           	opt stack 21
  4590                           
  4591                           ;parcheggio.c: 420: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4592                           
  4593                           ; BSR set to: 0
  4594                           ;incstack = 0
  4595  001FE4  C124  F0AD         	movff	_bordo,___fladd@a	;volatile
  4596  001FE8  C125  F0AE         	movff	_bordo+1,___fladd@a+1	;volatile
  4597  001FEC  C126  F0AF         	movff	_bordo+2,___fladd@a+2	;volatile
  4598  001FF0  C127  F0B0         	movff	_bordo+3,___fladd@a+3	;volatile
  4599  001FF4  0E00               	movlw	0
  4600  001FF6  0100               	movlb	0	; () banked
  4601  001FF8  6F7B               	movwf	___fldiv@a& (0+255),b
  4602  001FFA  0E00               	movlw	0
  4603  001FFC  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4604  001FFE  0E00               	movlw	0
  4605  002000  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4606  002002  0E40               	movlw	64
  4607  002004  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4608  002006  C1E2  F077         	movff	_larghezza,___fldiv@b
  4609  00200A  C1E3  F078         	movff	_larghezza+1,___fldiv@b+1
  4610  00200E  C1E4  F079         	movff	_larghezza+2,___fldiv@b+2
  4611  002012  C1E5  F07A         	movff	_larghezza+3,___fldiv@b+3
  4612  002016  ECB7  F01D         	call	___fldiv	;wreg free
  4613  00201A  C077  F0A9         	movff	?___fldiv,___fladd@b
  4614  00201E  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  4615  002022  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  4616  002026  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  4617  00202A  EC3D  F015         	call	___fladd	;wreg free
  4618  00202E  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  4619  002032  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  4620  002036  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  4621  00203A  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  4622  00203E  EC53  F02F         	call	___flneg	;wreg free
  4623  002042  C0BD  F1BA         	movff	?___flneg,_matematica$3740
  4624  002046  C0BE  F1BB         	movff	?___flneg+1,_matematica$3740+1
  4625  00204A  C0BF  F1BC         	movff	?___flneg+2,_matematica$3740+2
  4626  00204E  C0C0  F1BD         	movff	?___flneg+3,_matematica$3740+3
  4627                           
  4628                           ;parcheggio.c: 420: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4629  002052  C1BA  F0AD         	movff	_matematica$3740,___fladd@a
  4630  002056  C1BB  F0AE         	movff	_matematica$3740+1,___fladd@a+1
  4631  00205A  C1BC  F0AF         	movff	_matematica$3740+2,___fladd@a+2
  4632  00205E  C1BD  F0B0         	movff	_matematica$3740+3,___fladd@a+3
  4633  002062  0E00               	movlw	0
  4634  002064  0100               	movlb	0	; () banked
  4635  002066  6F94               	movwf	___flmul@a& (0+255),b
  4636  002068  0E00               	movlw	0
  4637  00206A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4638  00206C  0E00               	movlw	0
  4639  00206E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4640  002070  0E40               	movlw	64
  4641  002072  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4642  002074  C1E8  F090         	movff	_raggio,___flmul@b
  4643  002078  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4644  00207C  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4645  002080  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4646  002084  EC91  F017         	call	___flmul	;wreg free
  4647  002088  C090  F0A9         	movff	?___flmul,___fladd@b
  4648  00208C  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  4649  002090  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  4650  002094  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  4651  002098  EC3D  F015         	call	___fladd	;wreg free
  4652  00209C  C0A9  F1BE         	movff	?___fladd,_matematica$3741
  4653  0020A0  C0AA  F1BF         	movff	?___fladd+1,_matematica$3741+1
  4654  0020A4  C0AB  F1C0         	movff	?___fladd+2,_matematica$3741+2
  4655  0020A8  C0AC  F1C1         	movff	?___fladd+3,_matematica$3741+3
  4656                           
  4657                           ;parcheggio.c: 420: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4658  0020AC  0E00               	movlw	0
  4659  0020AE  0100               	movlb	0	; () banked
  4660  0020B0  6F7B               	movwf	___fldiv@a& (0+255),b
  4661  0020B2  0E00               	movlw	0
  4662  0020B4  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4663  0020B6  0E00               	movlw	0
  4664  0020B8  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4665  0020BA  0E40               	movlw	64
  4666  0020BC  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4667  0020BE  C1E2  F077         	movff	_larghezza,___fldiv@b
  4668  0020C2  C1E3  F078         	movff	_larghezza+1,___fldiv@b+1
  4669  0020C6  C1E4  F079         	movff	_larghezza+2,___fldiv@b+2
  4670  0020CA  C1E5  F07A         	movff	_larghezza+3,___fldiv@b+3
  4671  0020CE  ECB7  F01D         	call	___fldiv	;wreg free
  4672  0020D2  C077  F0BD         	movff	?___fldiv,___flneg@f1
  4673  0020D6  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  4674  0020DA  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  4675  0020DE  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  4676  0020E2  EC53  F02F         	call	___flneg	;wreg free
  4677  0020E6  C0BD  F0AD         	movff	?___flneg,___fladd@a
  4678  0020EA  C0BE  F0AE         	movff	?___flneg+1,___fladd@a+1
  4679  0020EE  C0BF  F0AF         	movff	?___flneg+2,___fladd@a+2
  4680  0020F2  C0C0  F0B0         	movff	?___flneg+3,___fladd@a+3
  4681  0020F6  C1BE  F0A9         	movff	_matematica$3741,___fladd@b
  4682  0020FA  C1BF  F0AA         	movff	_matematica$3741+1,___fladd@b+1
  4683  0020FE  C1C0  F0AB         	movff	_matematica$3741+2,___fladd@b+2
  4684  002102  C1C1  F0AC         	movff	_matematica$3741+3,___fladd@b+3
  4685  002106  EC3D  F015         	call	___fladd	;wreg free
  4686  00210A  C0A9  F1C2         	movff	?___fladd,_matematica$3742
  4687  00210E  C0AA  F1C3         	movff	?___fladd+1,_matematica$3742+1
  4688  002112  C0AB  F1C4         	movff	?___fladd+2,_matematica$3742+2
  4689  002116  C0AC  F1C5         	movff	?___fladd+3,_matematica$3742+3
  4690                           
  4691                           ;parcheggio.c: 420: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4692  00211A  C1C2  F077         	movff	_matematica$3742,___fldiv@b
  4693  00211E  C1C3  F078         	movff	_matematica$3742+1,___fldiv@b+1
  4694  002122  C1C4  F079         	movff	_matematica$3742+2,___fldiv@b+2
  4695  002126  C1C5  F07A         	movff	_matematica$3742+3,___fldiv@b+3
  4696  00212A  0E00               	movlw	0
  4697  00212C  0100               	movlb	0	; () banked
  4698  00212E  6F94               	movwf	___flmul@a& (0+255),b
  4699  002130  0E00               	movlw	0
  4700  002132  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4701  002134  0E00               	movlw	0
  4702  002136  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4703  002138  0E40               	movlw	64
  4704  00213A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4705  00213C  C1E8  F090         	movff	_raggio,___flmul@b
  4706  002140  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4707  002144  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4708  002148  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4709  00214C  EC91  F017         	call	___flmul	;wreg free
  4710  002150  C090  F07B         	movff	?___flmul,___fldiv@a
  4711  002154  C091  F07C         	movff	?___flmul+1,___fldiv@a+1
  4712  002158  C092  F07D         	movff	?___flmul+2,___fldiv@a+2
  4713  00215C  C093  F07E         	movff	?___flmul+3,___fldiv@a+3
  4714  002160  ECB7  F01D         	call	___fldiv	;wreg free
  4715  002164  C077  F1C6         	movff	?___fldiv,_matematica$3743
  4716  002168  C078  F1C7         	movff	?___fldiv+1,_matematica$3743+1
  4717  00216C  C079  F1C8         	movff	?___fldiv+2,_matematica$3743+2
  4718  002170  C07A  F1C9         	movff	?___fldiv+3,_matematica$3743+3
  4719                           
  4720                           ;parcheggio.c: 420: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4721  002174  C1C6  F0DE         	movff	_matematica$3743,asin@x
  4722  002178  C1C7  F0DF         	movff	_matematica$3743+1,asin@x+1
  4723  00217C  C1C8  F0E0         	movff	_matematica$3743+2,asin@x+2
  4724  002180  C1C9  F0E1         	movff	_matematica$3743+3,asin@x+3
  4725  002184  ECF2  F022         	call	_asin	;wreg free
  4726  002188  C0DE  F11C         	movff	?_asin,_alfa
  4727  00218C  C0DF  F11D         	movff	?_asin+1,_alfa+1
  4728  002190  C0E0  F11E         	movff	?_asin+2,_alfa+2
  4729  002194  C0E1  F11F         	movff	?_asin+3,_alfa+3
  4730                           
  4731                           ;parcheggio.c: 421: alfa = alfa / 3.14159265358979323846 * 180;
  4732  002198  0EDB               	movlw	219
  4733  00219A  0100               	movlb	0	; () banked
  4734  00219C  6F7B               	movwf	___fldiv@a& (0+255),b
  4735  00219E  0E0F               	movlw	15
  4736  0021A0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4737  0021A2  0E49               	movlw	73
  4738  0021A4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4739  0021A6  0E40               	movlw	64
  4740  0021A8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4741  0021AA  C11C  F077         	movff	_alfa,___fldiv@b
  4742  0021AE  C11D  F078         	movff	_alfa+1,___fldiv@b+1
  4743  0021B2  C11E  F079         	movff	_alfa+2,___fldiv@b+2
  4744  0021B6  C11F  F07A         	movff	_alfa+3,___fldiv@b+3
  4745  0021BA  ECB7  F01D         	call	___fldiv	;wreg free
  4746  0021BE  C077  F090         	movff	?___fldiv,___flmul@b
  4747  0021C2  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  4748  0021C6  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  4749  0021CA  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  4750  0021CE  0E00               	movlw	0
  4751  0021D0  0100               	movlb	0	; () banked
  4752  0021D2  6F94               	movwf	___flmul@a& (0+255),b
  4753  0021D4  0E00               	movlw	0
  4754  0021D6  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4755  0021D8  0E34               	movlw	52
  4756  0021DA  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4757  0021DC  0E43               	movlw	67
  4758  0021DE  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4759  0021E0  EC91  F017         	call	___flmul	;wreg free
  4760  0021E4  C090  F11C         	movff	?___flmul,_alfa
  4761  0021E8  C091  F11D         	movff	?___flmul+1,_alfa+1
  4762  0021EC  C092  F11E         	movff	?___flmul+2,_alfa+2
  4763  0021F0  C093  F11F         	movff	?___flmul+3,_alfa+3
  4764                           
  4765                           ;parcheggio.c: 422: beta = 90 - alfa;
  4766  0021F4  C11C  F0BD         	movff	_alfa,___flneg@f1
  4767  0021F8  C11D  F0BE         	movff	_alfa+1,___flneg@f1+1
  4768  0021FC  C11E  F0BF         	movff	_alfa+2,___flneg@f1+2
  4769  002200  C11F  F0C0         	movff	_alfa+3,___flneg@f1+3
  4770  002204  EC53  F02F         	call	___flneg	;wreg free
  4771  002208  C0BD  F0A9         	movff	?___flneg,___fladd@b
  4772  00220C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  4773  002210  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  4774  002214  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  4775  002218  0E00               	movlw	0
  4776  00221A  0100               	movlb	0	; () banked
  4777  00221C  6FAD               	movwf	___fladd@a& (0+255),b
  4778  00221E  0E00               	movlw	0
  4779  002220  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  4780  002222  0EB4               	movlw	180
  4781  002224  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  4782  002226  0E42               	movlw	66
  4783  002228  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  4784  00222A  EC3D  F015         	call	___fladd	;wreg free
  4785  00222E  C0A9  F120         	movff	?___fladd,_beta
  4786  002232  C0AA  F121         	movff	?___fladd+1,_beta+1
  4787  002236  C0AB  F122         	movff	?___fladd+2,_beta+2
  4788  00223A  C0AC  F123         	movff	?___fladd+3,_beta+3
  4789                           
  4790                           ;parcheggio.c: 423: alfa = (alfa*3.14159265358979323846)/180;
  4791  00223E  0EDB               	movlw	219
  4792  002240  0100               	movlb	0	; () banked
  4793  002242  6F94               	movwf	___flmul@a& (0+255),b
  4794  002244  0E0F               	movlw	15
  4795  002246  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4796  002248  0E49               	movlw	73
  4797  00224A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4798  00224C  0E40               	movlw	64
  4799  00224E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4800  002250  C11C  F090         	movff	_alfa,___flmul@b
  4801  002254  C11D  F091         	movff	_alfa+1,___flmul@b+1
  4802  002258  C11E  F092         	movff	_alfa+2,___flmul@b+2
  4803  00225C  C11F  F093         	movff	_alfa+3,___flmul@b+3
  4804  002260  EC91  F017         	call	___flmul	;wreg free
  4805  002264  C090  F077         	movff	?___flmul,___fldiv@b
  4806  002268  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  4807  00226C  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  4808  002270  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  4809  002274  0E00               	movlw	0
  4810  002276  0100               	movlb	0	; () banked
  4811  002278  6F7B               	movwf	___fldiv@a& (0+255),b
  4812  00227A  0E00               	movlw	0
  4813  00227C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4814  00227E  0E34               	movlw	52
  4815  002280  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4816  002282  0E43               	movlw	67
  4817  002284  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4818  002286  ECB7  F01D         	call	___fldiv	;wreg free
  4819  00228A  C077  F11C         	movff	?___fldiv,_alfa
  4820  00228E  C078  F11D         	movff	?___fldiv+1,_alfa+1
  4821  002292  C079  F11E         	movff	?___fldiv+2,_alfa+2
  4822  002296  C07A  F11F         	movff	?___fldiv+3,_alfa+3
  4823                           
  4824                           ;parcheggio.c: 424: n = cos(alfa);
  4825  00229A  C11C  F1B2         	movff	_alfa,cos@f
  4826  00229E  C11D  F1B3         	movff	_alfa+1,cos@f+1
  4827  0022A2  C11E  F1B4         	movff	_alfa+2,cos@f+2
  4828  0022A6  C11F  F1B5         	movff	_alfa+3,cos@f+3
  4829  0022AA  EC91  F02C         	call	_cos	;wreg free
  4830  0022AE  C1B2  F130         	movff	?_cos,_n
  4831  0022B2  C1B3  F131         	movff	?_cos+1,_n+1
  4832  0022B6  C1B4  F132         	movff	?_cos+2,_n+2
  4833  0022BA  C1B5  F133         	movff	?_cos+3,_n+3
  4834                           
  4835                           ;parcheggio.c: 425: n = 2 * raggio *n;
  4836  0022BE  C130  F094         	movff	_n,___flmul@a
  4837  0022C2  C131  F095         	movff	_n+1,___flmul@a+1
  4838  0022C6  C132  F096         	movff	_n+2,___flmul@a+2
  4839  0022CA  C133  F097         	movff	_n+3,___flmul@a+3
  4840  0022CE  C1E8  F090         	movff	_raggio,___flmul@b
  4841  0022D2  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4842  0022D6  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4843  0022DA  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4844  0022DE  EC91  F017         	call	___flmul	;wreg free
  4845  0022E2  C090  F1D2         	movff	?___flmul,_matematica$3744
  4846  0022E6  C091  F1D3         	movff	?___flmul+1,_matematica$3744+1
  4847  0022EA  C092  F1D4         	movff	?___flmul+2,_matematica$3744+2
  4848  0022EE  C093  F1D5         	movff	?___flmul+3,_matematica$3744+3
  4849                           
  4850                           ;parcheggio.c: 425: n = 2 * raggio *n;
  4851  0022F2  C1D2  F090         	movff	_matematica$3744,___flmul@b
  4852  0022F6  C1D3  F091         	movff	_matematica$3744+1,___flmul@b+1
  4853  0022FA  C1D4  F092         	movff	_matematica$3744+2,___flmul@b+2
  4854  0022FE  C1D5  F093         	movff	_matematica$3744+3,___flmul@b+3
  4855  002302  0E00               	movlw	0
  4856  002304  0100               	movlb	0	; () banked
  4857  002306  6F94               	movwf	___flmul@a& (0+255),b
  4858  002308  0E00               	movlw	0
  4859  00230A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4860  00230C  0E00               	movlw	0
  4861  00230E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4862  002310  0E40               	movlw	64
  4863  002312  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4864  002314  EC91  F017         	call	___flmul	;wreg free
  4865  002318  C090  F130         	movff	?___flmul,_n
  4866  00231C  C091  F131         	movff	?___flmul+1,_n+1
  4867  002320  C092  F132         	movff	?___flmul+2,_n+2
  4868  002324  C093  F133         	movff	?___flmul+3,_n+3
  4869                           
  4870                           ;parcheggio.c: 426: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  4871  002328  C120  F094         	movff	_beta,___flmul@a
  4872  00232C  C121  F095         	movff	_beta+1,___flmul@a+1
  4873  002330  C122  F096         	movff	_beta+2,___flmul@a+2
  4874  002334  C123  F097         	movff	_beta+3,___flmul@a+3
  4875  002338  C1E8  F090         	movff	_raggio,___flmul@b
  4876  00233C  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4877  002340  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4878  002344  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4879  002348  EC91  F017         	call	___flmul	;wreg free
  4880  00234C  C090  F1D2         	movff	?___flmul,_matematica$3744
  4881  002350  C091  F1D3         	movff	?___flmul+1,_matematica$3744+1
  4882  002354  C092  F1D4         	movff	?___flmul+2,_matematica$3744+2
  4883  002358  C093  F1D5         	movff	?___flmul+3,_matematica$3744+3
  4884                           
  4885                           ;parcheggio.c: 426: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  4886  00235C  0EDB               	movlw	219
  4887  00235E  0100               	movlb	0	; () banked
  4888  002360  6F94               	movwf	___flmul@a& (0+255),b
  4889  002362  0E0F               	movlw	15
  4890  002364  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4891  002366  0EC9               	movlw	201
  4892  002368  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4893  00236A  0E40               	movlw	64
  4894  00236C  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4895  00236E  C1D2  F090         	movff	_matematica$3744,___flmul@b
  4896  002372  C1D3  F091         	movff	_matematica$3744+1,___flmul@b+1
  4897  002376  C1D4  F092         	movff	_matematica$3744+2,___flmul@b+2
  4898  00237A  C1D5  F093         	movff	_matematica$3744+3,___flmul@b+3
  4899  00237E  EC91  F017         	call	___flmul	;wreg free
  4900  002382  C090  F077         	movff	?___flmul,___fldiv@b
  4901  002386  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  4902  00238A  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  4903  00238E  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  4904  002392  0E00               	movlw	0
  4905  002394  0100               	movlb	0	; () banked
  4906  002396  6F7B               	movwf	___fldiv@a& (0+255),b
  4907  002398  0E00               	movlw	0
  4908  00239A  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4909  00239C  0EB4               	movlw	180
  4910  00239E  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4911  0023A0  0E43               	movlw	67
  4912  0023A2  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4913  0023A4  ECB7  F01D         	call	___fldiv	;wreg free
  4914  0023A8  C077  F138         	movff	?___fldiv,_prima_sterzata
  4915  0023AC  C078  F139         	movff	?___fldiv+1,_prima_sterzata+1
  4916  0023B0  C079  F13A         	movff	?___fldiv+2,_prima_sterzata+2
  4917  0023B4  C07A  F13B         	movff	?___fldiv+3,_prima_sterzata+3
  4918                           
  4919                           ;parcheggio.c: 427: kkk = raggio + (2 * larghezza / 3);
  4920  0023B8  0E00               	movlw	0
  4921  0023BA  0100               	movlb	0	; () banked
  4922  0023BC  6F7B               	movwf	___fldiv@a& (0+255),b
  4923  0023BE  0E00               	movlw	0
  4924  0023C0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4925  0023C2  0E40               	movlw	64
  4926  0023C4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4927  0023C6  0E40               	movlw	64
  4928  0023C8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4929  0023CA  0E00               	movlw	0
  4930  0023CC  0100               	movlb	0	; () banked
  4931  0023CE  6F94               	movwf	___flmul@a& (0+255),b
  4932  0023D0  0E00               	movlw	0
  4933  0023D2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4934  0023D4  0E00               	movlw	0
  4935  0023D6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4936  0023D8  0E40               	movlw	64
  4937  0023DA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4938  0023DC  C1E2  F090         	movff	_larghezza,___flmul@b
  4939  0023E0  C1E3  F091         	movff	_larghezza+1,___flmul@b+1
  4940  0023E4  C1E4  F092         	movff	_larghezza+2,___flmul@b+2
  4941  0023E8  C1E5  F093         	movff	_larghezza+3,___flmul@b+3
  4942  0023EC  EC91  F017         	call	___flmul	;wreg free
  4943  0023F0  C090  F077         	movff	?___flmul,___fldiv@b
  4944  0023F4  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  4945  0023F8  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  4946  0023FC  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  4947  002400  ECB7  F01D         	call	___fldiv	;wreg free
  4948  002404  C077  F0A9         	movff	?___fldiv,___fladd@b
  4949  002408  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  4950  00240C  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  4951  002410  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  4952  002414  C1E8  F0AD         	movff	_raggio,___fladd@a
  4953  002418  C1E9  F0AE         	movff	_raggio+1,___fladd@a+1
  4954  00241C  C1EA  F0AF         	movff	_raggio+2,___fladd@a+2
  4955  002420  C1EB  F0B0         	movff	_raggio+3,___fladd@a+3
  4956  002424  EC3D  F015         	call	___fladd	;wreg free
  4957  002428  C0A9  F12C         	movff	?___fladd,_kkk
  4958  00242C  C0AA  F12D         	movff	?___fladd+1,_kkk+1
  4959  002430  C0AB  F12E         	movff	?___fladd+2,_kkk+2
  4960  002434  C0AC  F12F         	movff	?___fladd+3,_kkk+3
  4961                           
  4962                           ;parcheggio.c: 428: jjj = raggio - (2 * larghezza / 3);
  4963  002438  0E00               	movlw	0
  4964  00243A  0100               	movlb	0	; () banked
  4965  00243C  6F7B               	movwf	___fldiv@a& (0+255),b
  4966  00243E  0E00               	movlw	0
  4967  002440  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4968  002442  0E40               	movlw	64
  4969  002444  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4970  002446  0E40               	movlw	64
  4971  002448  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4972  00244A  0E00               	movlw	0
  4973  00244C  0100               	movlb	0	; () banked
  4974  00244E  6F94               	movwf	___flmul@a& (0+255),b
  4975  002450  0E00               	movlw	0
  4976  002452  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4977  002454  0E00               	movlw	0
  4978  002456  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4979  002458  0E40               	movlw	64
  4980  00245A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4981  00245C  C1E2  F090         	movff	_larghezza,___flmul@b
  4982  002460  C1E3  F091         	movff	_larghezza+1,___flmul@b+1
  4983  002464  C1E4  F092         	movff	_larghezza+2,___flmul@b+2
  4984  002468  C1E5  F093         	movff	_larghezza+3,___flmul@b+3
  4985  00246C  EC91  F017         	call	___flmul	;wreg free
  4986  002470  C090  F077         	movff	?___flmul,___fldiv@b
  4987  002474  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  4988  002478  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  4989  00247C  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  4990  002480  ECB7  F01D         	call	___fldiv	;wreg free
  4991  002484  C077  F0BD         	movff	?___fldiv,___flneg@f1
  4992  002488  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  4993  00248C  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  4994  002490  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  4995  002494  EC53  F02F         	call	___flneg	;wreg free
  4996  002498  C0BD  F0A9         	movff	?___flneg,___fladd@b
  4997  00249C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  4998  0024A0  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  4999  0024A4  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5000  0024A8  C1E8  F0AD         	movff	_raggio,___fladd@a
  5001  0024AC  C1E9  F0AE         	movff	_raggio+1,___fladd@a+1
  5002  0024B0  C1EA  F0AF         	movff	_raggio+2,___fladd@a+2
  5003  0024B4  C1EB  F0B0         	movff	_raggio+3,___fladd@a+3
  5004  0024B8  EC3D  F015         	call	___fladd	;wreg free
  5005  0024BC  C0A9  F128         	movff	?___fladd,_jjj
  5006  0024C0  C0AA  F129         	movff	?___fladd+1,_jjj+1
  5007  0024C4  C0AB  F12A         	movff	?___fladd+2,_jjj+2
  5008  0024C8  C0AC  F12B         	movff	?___fladd+3,_jjj+3
  5009                           
  5010                           ;parcheggio.c: 429: Pminimo = kkk * cos(asin((jjj / kkk)));
  5011  0024CC  C12C  F07B         	movff	_kkk,___fldiv@a
  5012  0024D0  C12D  F07C         	movff	_kkk+1,___fldiv@a+1
  5013  0024D4  C12E  F07D         	movff	_kkk+2,___fldiv@a+2
  5014  0024D8  C12F  F07E         	movff	_kkk+3,___fldiv@a+3
  5015  0024DC  C128  F077         	movff	_jjj,___fldiv@b
  5016  0024E0  C129  F078         	movff	_jjj+1,___fldiv@b+1
  5017  0024E4  C12A  F079         	movff	_jjj+2,___fldiv@b+2
  5018  0024E8  C12B  F07A         	movff	_jjj+3,___fldiv@b+3
  5019  0024EC  ECB7  F01D         	call	___fldiv	;wreg free
  5020  0024F0  C077  F1CA         	movff	?___fldiv,_matematica$3745
  5021  0024F4  C078  F1CB         	movff	?___fldiv+1,_matematica$3745+1
  5022  0024F8  C079  F1CC         	movff	?___fldiv+2,_matematica$3745+2
  5023  0024FC  C07A  F1CD         	movff	?___fldiv+3,_matematica$3745+3
  5024                           
  5025                           ;parcheggio.c: 429: Pminimo = kkk * cos(asin((jjj / kkk)));
  5026  002500  C1CA  F0DE         	movff	_matematica$3745,asin@x
  5027  002504  C1CB  F0DF         	movff	_matematica$3745+1,asin@x+1
  5028  002508  C1CC  F0E0         	movff	_matematica$3745+2,asin@x+2
  5029  00250C  C1CD  F0E1         	movff	_matematica$3745+3,asin@x+3
  5030  002510  ECF2  F022         	call	_asin	;wreg free
  5031  002514  C0DE  F1B2         	movff	?_asin,cos@f
  5032  002518  C0DF  F1B3         	movff	?_asin+1,cos@f+1
  5033  00251C  C0E0  F1B4         	movff	?_asin+2,cos@f+2
  5034  002520  C0E1  F1B5         	movff	?_asin+3,cos@f+3
  5035  002524  EC91  F02C         	call	_cos	;wreg free
  5036  002528  C1B2  F1CE         	movff	?_cos,_matematica$3746
  5037  00252C  C1B3  F1CF         	movff	?_cos+1,_matematica$3746+1
  5038  002530  C1B4  F1D0         	movff	?_cos+2,_matematica$3746+2
  5039  002534  C1B5  F1D1         	movff	?_cos+3,_matematica$3746+3
  5040                           
  5041                           ;parcheggio.c: 429: Pminimo = kkk * cos(asin((jjj / kkk)));
  5042  002538  C1CE  F090         	movff	_matematica$3746,___flmul@b
  5043  00253C  C1CF  F091         	movff	_matematica$3746+1,___flmul@b+1
  5044  002540  C1D0  F092         	movff	_matematica$3746+2,___flmul@b+2
  5045  002544  C1D1  F093         	movff	_matematica$3746+3,___flmul@b+3
  5046  002548  C12C  F094         	movff	_kkk,___flmul@a
  5047  00254C  C12D  F095         	movff	_kkk+1,___flmul@a+1
  5048  002550  C12E  F096         	movff	_kkk+2,___flmul@a+2
  5049  002554  C12F  F097         	movff	_kkk+3,___flmul@a+3
  5050  002558  EC91  F017         	call	___flmul	;wreg free
  5051  00255C  C090  F118         	movff	?___flmul,_Pminimo
  5052  002560  C091  F119         	movff	?___flmul+1,_Pminimo+1
  5053  002564  C092  F11A         	movff	?___flmul+2,_Pminimo+2
  5054  002568  C093  F11B         	movff	?___flmul+3,_Pminimo+3
  5055  00256C  0012               	return		;funcret
  5056  00256E                     __end_of_matematica:
  5057                           	opt stack 0
  5058                           tblptru	equ	0xFF8
  5059                           tblptrh	equ	0xFF7
  5060                           tblptrl	equ	0xFF6
  5061                           tablat	equ	0xFF5
  5062                           postinc0	equ	0xFEE
  5063                           wreg	equ	0xFE8
  5064                           postdec1	equ	0xFE5
  5065                           fsr1l	equ	0xFE1
  5066                           indf2	equ	0xFDF
  5067                           postinc2	equ	0xFDE
  5068                           postdec2	equ	0xFDD
  5069                           fsr2h	equ	0xFDA
  5070                           fsr2l	equ	0xFD9
  5071                           status	equ	0xFD8
  5072                           
  5073 ;; *************** function _cos *****************
  5074 ;; Defined at:
  5075 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\cos.c"
  5076 ;; Parameters:    Size  Location     Type
  5077 ;;  f               4   37[BANK1 ] int 
  5078 ;; Auto vars:     Size  Location     Type
  5079 ;;		None
  5080 ;; Return value:  Size  Location     Type
  5081 ;;                  4   37[BANK1 ] int 
  5082 ;; Registers used:
  5083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5084 ;; Tracked objects:
  5085 ;;		On entry : 0/0
  5086 ;;		On exit  : 0/0
  5087 ;;		Unchanged: 0/0
  5088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5089 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5090 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5092 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5093 ;;Total ram usage:        8 bytes
  5094 ;; Hardware stack levels used:    1
  5095 ;; Hardware stack levels required when called:    7
  5096 ;; This function calls:
  5097 ;;		___fladd
  5098 ;;		___flge
  5099 ;;		_sin
  5100 ;; This function is called by:
  5101 ;;		_matematica
  5102 ;; This function uses a non-reentrant model
  5103 ;;
  5104                           
  5105                           	psect	text9
  5106  005922                     __ptext9:
  5107                           	opt stack 0
  5108  005922                     _cos:
  5109                           	opt stack 21
  5110                           
  5111                           ;incstack = 0
  5112  005922  0EDB               	movlw	219
  5113  005924  0100               	movlb	0	; () banked
  5114  005926  6FC5               	movwf	___flge@ff1& (0+255),b
  5115  005928  0E0F               	movlw	15
  5116  00592A  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5117  00592C  0E49               	movlw	73
  5118  00592E  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5119  005930  0E40               	movlw	64
  5120  005932  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5121  005934  C1B2  F0C9         	movff	cos@f,___flge@ff2
  5122  005938  C1B3  F0CA         	movff	cos@f+1,___flge@ff2+1
  5123  00593C  C1B4  F0CB         	movff	cos@f+2,___flge@ff2+2
  5124  005940  C1B5  F0CC         	movff	cos@f+3,___flge@ff2+3
  5125  005944  EC8A  F029         	call	___flge	;wreg free
  5126  005948  0100               	movlb	0	; () banked
  5127  00594A  B0D8               	btfsc	status,0,c
  5128  00594C  D02E               	goto	l7350
  5129                           
  5130                           ; BSR set to: 0
  5131  00594E  C1B2  F0A9         	movff	cos@f,___fladd@b
  5132  005952  C1B3  F0AA         	movff	cos@f+1,___fladd@b+1
  5133  005956  C1B4  F0AB         	movff	cos@f+2,___fladd@b+2
  5134  00595A  C1B5  F0AC         	movff	cos@f+3,___fladd@b+3
  5135  00595E  0EE4               	movlw	228
  5136  005960  0100               	movlb	0	; () banked
  5137  005962  6FAD               	movwf	___fladd@a& (0+255),b
  5138  005964  0ECB               	movlw	203
  5139  005966  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5140  005968  0E96               	movlw	150
  5141  00596A  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5142  00596C  0EC0               	movlw	192
  5143  00596E  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5144  005970  EC3D  F015         	call	___fladd	;wreg free
  5145  005974  C0A9  F1B6         	movff	?___fladd,_cos$3750
  5146  005978  C0AA  F1B7         	movff	?___fladd+1,_cos$3750+1
  5147  00597C  C0AB  F1B8         	movff	?___fladd+2,_cos$3750+2
  5148  005980  C0AC  F1B9         	movff	?___fladd+3,_cos$3750+3
  5149  005984  C1B6  F195         	movff	_cos$3750,sin@f
  5150  005988  C1B7  F196         	movff	_cos$3750+1,sin@f+1
  5151  00598C  C1B8  F197         	movff	_cos$3750+2,sin@f+2
  5152  005990  C1B9  F198         	movff	_cos$3750+3,sin@f+3
  5153  005994  EC66  F021         	call	_sin	;wreg free
  5154  005998  C195  F1B2         	movff	?_sin,?_cos
  5155  00599C  C196  F1B3         	movff	?_sin+1,?_cos+1
  5156  0059A0  C197  F1B4         	movff	?_sin+2,?_cos+2
  5157  0059A4  C198  F1B5         	movff	?_sin+3,?_cos+3
  5158  0059A8  0012               	return	
  5159  0059AA                     l7350:
  5160  0059AA  C1B2  F0A9         	movff	cos@f,___fladd@b
  5161  0059AE  C1B3  F0AA         	movff	cos@f+1,___fladd@b+1
  5162  0059B2  C1B4  F0AB         	movff	cos@f+2,___fladd@b+2
  5163  0059B6  C1B5  F0AC         	movff	cos@f+3,___fladd@b+3
  5164  0059BA  0EDB               	movlw	219
  5165  0059BC  0100               	movlb	0	; () banked
  5166  0059BE  6FAD               	movwf	___fladd@a& (0+255),b
  5167  0059C0  0E0F               	movlw	15
  5168  0059C2  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5169  0059C4  0EC9               	movlw	201
  5170  0059C6  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5171  0059C8  0E3F               	movlw	63
  5172  0059CA  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5173  0059CC  EC3D  F015         	call	___fladd	;wreg free
  5174  0059D0  C0A9  F1B6         	movff	?___fladd,_cos$3750
  5175  0059D4  C0AA  F1B7         	movff	?___fladd+1,_cos$3750+1
  5176  0059D8  C0AB  F1B8         	movff	?___fladd+2,_cos$3750+2
  5177  0059DC  C0AC  F1B9         	movff	?___fladd+3,_cos$3750+3
  5178  0059E0  C1B6  F195         	movff	_cos$3750,sin@f
  5179  0059E4  C1B7  F196         	movff	_cos$3750+1,sin@f+1
  5180  0059E8  C1B8  F197         	movff	_cos$3750+2,sin@f+2
  5181  0059EC  C1B9  F198         	movff	_cos$3750+3,sin@f+3
  5182  0059F0  EC66  F021         	call	_sin	;wreg free
  5183  0059F4  C195  F1B2         	movff	?_sin,?_cos
  5184  0059F8  C196  F1B3         	movff	?_sin+1,?_cos+1
  5185  0059FC  C197  F1B4         	movff	?_sin+2,?_cos+2
  5186  005A00  C198  F1B5         	movff	?_sin+3,?_cos+3
  5187  005A04  0012               	return	
  5188  005A06                     __end_of_cos:
  5189                           	opt stack 0
  5190                           tblptru	equ	0xFF8
  5191                           tblptrh	equ	0xFF7
  5192                           tblptrl	equ	0xFF6
  5193                           tablat	equ	0xFF5
  5194                           postinc0	equ	0xFEE
  5195                           wreg	equ	0xFE8
  5196                           postdec1	equ	0xFE5
  5197                           fsr1l	equ	0xFE1
  5198                           indf2	equ	0xFDF
  5199                           postinc2	equ	0xFDE
  5200                           postdec2	equ	0xFDD
  5201                           fsr2h	equ	0xFDA
  5202                           fsr2l	equ	0xFD9
  5203                           status	equ	0xFD8
  5204                           
  5205 ;; *************** function _sin *****************
  5206 ;; Defined at:
  5207 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sin.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  f               4    8[BANK1 ] int 
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;  x2              4   20[BANK1 ] int 
  5212 ;;  y               4   12[BANK1 ] int 
  5213 ;;  sgn             1   24[BANK1 ] unsigned char 
  5214 ;; Return value:  Size  Location     Type
  5215 ;;                  4    8[BANK1 ] unsigned char 
  5216 ;; Registers used:
  5217 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5223 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5224 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5226 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5227 ;;Total ram usage:       17 bytes
  5228 ;; Hardware stack levels used:    1
  5229 ;; Hardware stack levels required when called:    6
  5230 ;; This function calls:
  5231 ;;		___fladd
  5232 ;;		___fldiv
  5233 ;;		___flge
  5234 ;;		___flmul
  5235 ;;		___flneg
  5236 ;;		___flsub
  5237 ;;		_eval_poly
  5238 ;;		_floor
  5239 ;; This function is called by:
  5240 ;;		_cos
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text10
  5245  0042CC                     __ptext10:
  5246                           	opt stack 0
  5247  0042CC                     _sin:
  5248                           	opt stack 21
  5249                           
  5250                           ;incstack = 0
  5251  0042CC  0E00               	movlw	0
  5252  0042CE  0101               	movlb	1	; () banked
  5253  0042D0  6FA5               	movwf	sin@sgn& (0+255),b
  5254                           
  5255                           ; BSR set to: 1
  5256  0042D2  0101               	movlb	1	; () banked
  5257  0042D4  AF98               	btfss	(sin@f+3)& (0+255),7,b
  5258  0042D6  D015               	goto	l7232
  5259                           
  5260                           ; BSR set to: 1
  5261  0042D8  C195  F0BD         	movff	sin@f,___flneg@f1
  5262  0042DC  C196  F0BE         	movff	sin@f+1,___flneg@f1+1
  5263  0042E0  C197  F0BF         	movff	sin@f+2,___flneg@f1+2
  5264  0042E4  C198  F0C0         	movff	sin@f+3,___flneg@f1+3
  5265  0042E8  EC53  F02F         	call	___flneg	;wreg free
  5266  0042EC  C0BD  F195         	movff	?___flneg,sin@f
  5267  0042F0  C0BE  F196         	movff	?___flneg+1,sin@f+1
  5268  0042F4  C0BF  F197         	movff	?___flneg+2,sin@f+2
  5269  0042F8  C0C0  F198         	movff	?___flneg+3,sin@f+3
  5270  0042FC  0E01               	movlw	1
  5271  0042FE  0101               	movlb	1	; () banked
  5272  004300  6FA5               	movwf	sin@sgn& (0+255),b
  5273  004302                     l7232:
  5274                           
  5275                           ; BSR set to: 1
  5276  004302  C195  F090         	movff	sin@f,___flmul@b
  5277  004306  C196  F091         	movff	sin@f+1,___flmul@b+1
  5278  00430A  C197  F092         	movff	sin@f+2,___flmul@b+2
  5279  00430E  C198  F093         	movff	sin@f+3,___flmul@b+3
  5280  004312  0E83               	movlw	131
  5281  004314  0100               	movlb	0	; () banked
  5282  004316  6F94               	movwf	___flmul@a& (0+255),b
  5283  004318  0EF9               	movlw	249
  5284  00431A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5285  00431C  0E22               	movlw	34
  5286  00431E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5287  004320  0E3E               	movlw	62
  5288  004322  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5289  004324  EC91  F017         	call	___flmul	;wreg free
  5290  004328  C090  F195         	movff	?___flmul,sin@f
  5291  00432C  C091  F196         	movff	?___flmul+1,sin@f+1
  5292  004330  C092  F197         	movff	?___flmul+2,sin@f+2
  5293  004334  C093  F198         	movff	?___flmul+3,sin@f+3
  5294  004338  C195  F18D         	movff	sin@f,___flsub@b
  5295  00433C  C196  F18E         	movff	sin@f+1,___flsub@b+1
  5296  004340  C197  F18F         	movff	sin@f+2,___flsub@b+2
  5297  004344  C198  F190         	movff	sin@f+3,___flsub@b+3
  5298  004348  C195  F0D9         	movff	sin@f,floor@x
  5299  00434C  C196  F0DA         	movff	sin@f+1,floor@x+1
  5300  004350  C197  F0DB         	movff	sin@f+2,floor@x+2
  5301  004354  C198  F0DC         	movff	sin@f+3,floor@x+3
  5302  004358  ECED  F02A         	call	_floor	;wreg free
  5303  00435C  C0D9  F191         	movff	?_floor,___flsub@a
  5304  004360  C0DA  F192         	movff	?_floor+1,___flsub@a+1
  5305  004364  C0DB  F193         	movff	?_floor+2,___flsub@a+2
  5306  004368  C0DC  F194         	movff	?_floor+3,___flsub@a+3
  5307  00436C  EC10  F02F         	call	___flsub	;wreg free
  5308  004370  C18D  F195         	movff	?___flsub,sin@f
  5309  004374  C18E  F196         	movff	?___flsub+1,sin@f+1
  5310  004378  C18F  F197         	movff	?___flsub+2,sin@f+2
  5311  00437C  C190  F198         	movff	?___flsub+3,sin@f+3
  5312  004380  C195  F090         	movff	sin@f,___flmul@b
  5313  004384  C196  F091         	movff	sin@f+1,___flmul@b+1
  5314  004388  C197  F092         	movff	sin@f+2,___flmul@b+2
  5315  00438C  C198  F093         	movff	sin@f+3,___flmul@b+3
  5316  004390  0E00               	movlw	0
  5317  004392  0100               	movlb	0	; () banked
  5318  004394  6F94               	movwf	___flmul@a& (0+255),b
  5319  004396  0E00               	movlw	0
  5320  004398  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5321  00439A  0E80               	movlw	128
  5322  00439C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5323  00439E  0E40               	movlw	64
  5324  0043A0  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5325  0043A2  EC91  F017         	call	___flmul	;wreg free
  5326  0043A6  C090  F195         	movff	?___flmul,sin@f
  5327  0043AA  C091  F196         	movff	?___flmul+1,sin@f+1
  5328  0043AE  C092  F197         	movff	?___flmul+2,sin@f+2
  5329  0043B2  C093  F198         	movff	?___flmul+3,sin@f+3
  5330  0043B6  0E00               	movlw	0
  5331  0043B8  0100               	movlb	0	; () banked
  5332  0043BA  6FC5               	movwf	___flge@ff1& (0+255),b
  5333  0043BC  0E00               	movlw	0
  5334  0043BE  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5335  0043C0  0E00               	movlw	0
  5336  0043C2  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5337  0043C4  0E40               	movlw	64
  5338  0043C6  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5339  0043C8  C195  F0C9         	movff	sin@f,___flge@ff2
  5340  0043CC  C196  F0CA         	movff	sin@f+1,___flge@ff2+1
  5341  0043D0  C197  F0CB         	movff	sin@f+2,___flge@ff2+2
  5342  0043D4  C198  F0CC         	movff	sin@f+3,___flge@ff2+3
  5343  0043D8  EC8A  F029         	call	___flge	;wreg free
  5344  0043DC  0100               	movlb	0	; () banked
  5345  0043DE  B0D8               	btfsc	status,0,c
  5346  0043E0  D025               	goto	l7244
  5347                           
  5348                           ; BSR set to: 0
  5349  0043E2  C195  F18D         	movff	sin@f,___flsub@b
  5350  0043E6  C196  F18E         	movff	sin@f+1,___flsub@b+1
  5351  0043EA  C197  F18F         	movff	sin@f+2,___flsub@b+2
  5352  0043EE  C198  F190         	movff	sin@f+3,___flsub@b+3
  5353  0043F2  0E00               	movlw	0
  5354  0043F4  0101               	movlb	1	; () banked
  5355  0043F6  6F91               	movwf	___flsub@a& (0+255),b
  5356  0043F8  0E00               	movlw	0
  5357  0043FA  6F92               	movwf	(___flsub@a+1)& (0+255),b
  5358  0043FC  0E00               	movlw	0
  5359  0043FE  6F93               	movwf	(___flsub@a+2)& (0+255),b
  5360  004400  0E40               	movlw	64
  5361  004402  6F94               	movwf	(___flsub@a+3)& (0+255),b
  5362  004404  EC10  F02F         	call	___flsub	;wreg free
  5363  004408  C18D  F195         	movff	?___flsub,sin@f
  5364  00440C  C18E  F196         	movff	?___flsub+1,sin@f+1
  5365  004410  C18F  F197         	movff	?___flsub+2,sin@f+2
  5366  004414  C190  F198         	movff	?___flsub+3,sin@f+3
  5367  004418  0101               	movlb	1	; () banked
  5368  00441A  51A5               	movf	sin@sgn& (0+255),w,b
  5369  00441C  0101               	movlb	1	; () banked
  5370  00441E  A4D8               	btfss	status,2,c
  5371  004420  D002               	goto	u9220
  5372  004422  0E01               	movlw	1
  5373  004424  D001               	goto	u9230
  5374  004426                     u9220:
  5375  004426  0E00               	movlw	0
  5376  004428                     u9230:
  5377  004428  0101               	movlb	1	; () banked
  5378  00442A  6FA5               	movwf	sin@sgn& (0+255),b
  5379  00442C                     l7244:
  5380  00442C  0E00               	movlw	0
  5381  00442E  0100               	movlb	0	; () banked
  5382  004430  6FC5               	movwf	___flge@ff1& (0+255),b
  5383  004432  0E00               	movlw	0
  5384  004434  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5385  004436  0E80               	movlw	128
  5386  004438  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5387  00443A  0E3F               	movlw	63
  5388  00443C  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5389  00443E  C195  F0C9         	movff	sin@f,___flge@ff2
  5390  004442  C196  F0CA         	movff	sin@f+1,___flge@ff2+1
  5391  004446  C197  F0CB         	movff	sin@f+2,___flge@ff2+2
  5392  00444A  C198  F0CC         	movff	sin@f+3,___flge@ff2+3
  5393  00444E  EC8A  F029         	call	___flge	;wreg free
  5394  004452  0100               	movlb	0	; () banked
  5395  004454  B0D8               	btfsc	status,0,c
  5396  004456  D025               	goto	l7248
  5397                           
  5398                           ; BSR set to: 0
  5399  004458  C195  F0BD         	movff	sin@f,___flneg@f1
  5400  00445C  C196  F0BE         	movff	sin@f+1,___flneg@f1+1
  5401  004460  C197  F0BF         	movff	sin@f+2,___flneg@f1+2
  5402  004464  C198  F0C0         	movff	sin@f+3,___flneg@f1+3
  5403  004468  EC53  F02F         	call	___flneg	;wreg free
  5404  00446C  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5405  004470  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5406  004474  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5407  004478  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5408  00447C  0E00               	movlw	0
  5409  00447E  0100               	movlb	0	; () banked
  5410  004480  6FAD               	movwf	___fladd@a& (0+255),b
  5411  004482  0E00               	movlw	0
  5412  004484  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5413  004486  0E00               	movlw	0
  5414  004488  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5415  00448A  0E40               	movlw	64
  5416  00448C  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5417  00448E  EC3D  F015         	call	___fladd	;wreg free
  5418  004492  C0A9  F195         	movff	?___fladd,sin@f
  5419  004496  C0AA  F196         	movff	?___fladd+1,sin@f+1
  5420  00449A  C0AB  F197         	movff	?___fladd+2,sin@f+2
  5421  00449E  C0AC  F198         	movff	?___fladd+3,sin@f+3
  5422  0044A2                     l7248:
  5423  0044A2  C195  F090         	movff	sin@f,___flmul@b
  5424  0044A6  C196  F091         	movff	sin@f+1,___flmul@b+1
  5425  0044AA  C197  F092         	movff	sin@f+2,___flmul@b+2
  5426  0044AE  C198  F093         	movff	sin@f+3,___flmul@b+3
  5427  0044B2  C195  F094         	movff	sin@f,___flmul@a
  5428  0044B6  C196  F095         	movff	sin@f+1,___flmul@a+1
  5429  0044BA  C197  F096         	movff	sin@f+2,___flmul@a+2
  5430  0044BE  C198  F097         	movff	sin@f+3,___flmul@a+3
  5431  0044C2  EC91  F017         	call	___flmul	;wreg free
  5432  0044C6  C090  F1A1         	movff	?___flmul,sin@x2
  5433  0044CA  C091  F1A2         	movff	?___flmul+1,sin@x2+1
  5434  0044CE  C092  F1A3         	movff	?___flmul+2,sin@x2+2
  5435  0044D2  C093  F1A4         	movff	?___flmul+3,sin@x2+3
  5436  0044D6  C1A1  F0BD         	movff	sin@x2,eval_poly@x
  5437  0044DA  C1A2  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5438  0044DE  C1A3  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5439  0044E2  C1A4  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5440  0044E6  0E41               	movlw	low sin@coeff_b
  5441  0044E8  0100               	movlb	0	; () banked
  5442  0044EA  6FC1               	movwf	eval_poly@d& (0+255),b
  5443  0044EC  0E0D               	movlw	high sin@coeff_b
  5444  0044EE  0100               	movlb	0	; () banked
  5445  0044F0  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5446  0044F2  0E00               	movlw	0
  5447  0044F4  0100               	movlb	0	; () banked
  5448  0044F6  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5449  0044F8  0E03               	movlw	3
  5450  0044FA  6FC3               	movwf	eval_poly@n& (0+255),b
  5451  0044FC  EC7F  F02B         	call	_eval_poly	;wreg free
  5452  004500  C0BD  F199         	movff	?_eval_poly,sin@y
  5453  004504  C0BE  F19A         	movff	?_eval_poly+1,sin@y+1
  5454  004508  C0BF  F19B         	movff	?_eval_poly+2,sin@y+2
  5455  00450C  C0C0  F19C         	movff	?_eval_poly+3,sin@y+3
  5456  004510  C199  F07B         	movff	sin@y,___fldiv@a
  5457  004514  C19A  F07C         	movff	sin@y+1,___fldiv@a+1
  5458  004518  C19B  F07D         	movff	sin@y+2,___fldiv@a+2
  5459  00451C  C19C  F07E         	movff	sin@y+3,___fldiv@a+3
  5460  004520  0E00               	movlw	0
  5461  004522  0100               	movlb	0	; () banked
  5462  004524  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5463  004526  0E04               	movlw	4
  5464  004528  6FC3               	movwf	eval_poly@n& (0+255),b
  5465  00452A  0E2D               	movlw	low sin@coeff_a
  5466  00452C  0100               	movlb	0	; () banked
  5467  00452E  6FC1               	movwf	eval_poly@d& (0+255),b
  5468  004530  0E0D               	movlw	high sin@coeff_a
  5469  004532  0100               	movlb	0	; () banked
  5470  004534  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5471  004536  C1A1  F0BD         	movff	sin@x2,eval_poly@x
  5472  00453A  C1A2  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5473  00453E  C1A3  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5474  004542  C1A4  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5475  004546  EC7F  F02B         	call	_eval_poly	;wreg free
  5476  00454A  C0BD  F077         	movff	?_eval_poly,___fldiv@b
  5477  00454E  C0BE  F078         	movff	?_eval_poly+1,___fldiv@b+1
  5478  004552  C0BF  F079         	movff	?_eval_poly+2,___fldiv@b+2
  5479  004556  C0C0  F07A         	movff	?_eval_poly+3,___fldiv@b+3
  5480  00455A  ECB7  F01D         	call	___fldiv	;wreg free
  5481  00455E  C077  F19D         	movff	?___fldiv,_sin$3751
  5482  004562  C078  F19E         	movff	?___fldiv+1,_sin$3751+1
  5483  004566  C079  F19F         	movff	?___fldiv+2,_sin$3751+2
  5484  00456A  C07A  F1A0         	movff	?___fldiv+3,_sin$3751+3
  5485  00456E  C195  F090         	movff	sin@f,___flmul@b
  5486  004572  C196  F091         	movff	sin@f+1,___flmul@b+1
  5487  004576  C197  F092         	movff	sin@f+2,___flmul@b+2
  5488  00457A  C198  F093         	movff	sin@f+3,___flmul@b+3
  5489  00457E  C19D  F094         	movff	_sin$3751,___flmul@a
  5490  004582  C19E  F095         	movff	_sin$3751+1,___flmul@a+1
  5491  004586  C19F  F096         	movff	_sin$3751+2,___flmul@a+2
  5492  00458A  C1A0  F097         	movff	_sin$3751+3,___flmul@a+3
  5493  00458E  EC91  F017         	call	___flmul	;wreg free
  5494  004592  C090  F195         	movff	?___flmul,sin@f
  5495  004596  C091  F196         	movff	?___flmul+1,sin@f+1
  5496  00459A  C092  F197         	movff	?___flmul+2,sin@f+2
  5497  00459E  C093  F198         	movff	?___flmul+3,sin@f+3
  5498  0045A2  0101               	movlb	1	; () banked
  5499  0045A4  51A5               	movf	sin@sgn& (0+255),w,b
  5500  0045A6  0101               	movlb	1	; () banked
  5501  0045A8  B4D8               	btfsc	status,2,c
  5502  0045AA  D013               	goto	l1295
  5503                           
  5504                           ; BSR set to: 1
  5505  0045AC  C195  F0BD         	movff	sin@f,___flneg@f1
  5506  0045B0  C196  F0BE         	movff	sin@f+1,___flneg@f1+1
  5507  0045B4  C197  F0BF         	movff	sin@f+2,___flneg@f1+2
  5508  0045B8  C198  F0C0         	movff	sin@f+3,___flneg@f1+3
  5509  0045BC  EC53  F02F         	call	___flneg	;wreg free
  5510  0045C0  C0BD  F195         	movff	?___flneg,?_sin
  5511  0045C4  C0BE  F196         	movff	?___flneg+1,?_sin+1
  5512  0045C8  C0BF  F197         	movff	?___flneg+2,?_sin+2
  5513  0045CC  C0C0  F198         	movff	?___flneg+3,?_sin+3
  5514  0045D0  0012               	return	
  5515  0045D2                     l1295:
  5516                           
  5517                           ; BSR set to: 1
  5518  0045D2  C195  F195         	movff	sin@f,?_sin
  5519  0045D6  C196  F196         	movff	sin@f+1,?_sin+1
  5520  0045DA  C197  F197         	movff	sin@f+2,?_sin+2
  5521  0045DE  C198  F198         	movff	sin@f+3,?_sin+3
  5522  0045E2  0012               	return		;funcret
  5523  0045E4                     __end_of_sin:
  5524                           	opt stack 0
  5525                           tblptru	equ	0xFF8
  5526                           tblptrh	equ	0xFF7
  5527                           tblptrl	equ	0xFF6
  5528                           tablat	equ	0xFF5
  5529                           postinc0	equ	0xFEE
  5530                           wreg	equ	0xFE8
  5531                           postdec1	equ	0xFE5
  5532                           fsr1l	equ	0xFE1
  5533                           indf2	equ	0xFDF
  5534                           postinc2	equ	0xFDE
  5535                           postdec2	equ	0xFDD
  5536                           fsr2h	equ	0xFDA
  5537                           fsr2l	equ	0xFD9
  5538                           status	equ	0xFD8
  5539                           
  5540 ;; *************** function _floor *****************
  5541 ;; Defined at:
  5542 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  x               4  121[BANK0 ] unsigned char 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;  i               4  125[BANK0 ] unsigned char 
  5547 ;;  expon           2  129[BANK0 ] int 
  5548 ;; Return value:  Size  Location     Type
  5549 ;;                  4  121[BANK0 ] int 
  5550 ;; Registers used:
  5551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5552 ;; Tracked objects:
  5553 ;;		On entry : 0/0
  5554 ;;		On exit  : 0/0
  5555 ;;		Unchanged: 0/0
  5556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5557 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5558 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5560 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5561 ;;Total ram usage:       10 bytes
  5562 ;; Hardware stack levels used:    1
  5563 ;; Hardware stack levels required when called:    5
  5564 ;; This function calls:
  5565 ;;		___fladd
  5566 ;;		___flge
  5567 ;;		___fltol
  5568 ;;		___xxtofl
  5569 ;;		_frexp
  5570 ;; This function is called by:
  5571 ;;		_sin
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           	psect	text11
  5576  0055DA                     __ptext11:
  5577                           	opt stack 0
  5578  0055DA                     _floor:
  5579                           	opt stack 21
  5580                           
  5581                           ;incstack = 0
  5582  0055DA  C0D9  F077         	movff	floor@x,frexp@value
  5583  0055DE  C0DA  F078         	movff	floor@x+1,frexp@value+1
  5584  0055E2  C0DB  F079         	movff	floor@x+2,frexp@value+2
  5585  0055E6  C0DC  F07A         	movff	floor@x+3,frexp@value+3
  5586  0055EA  0EE1               	movlw	low floor@expon
  5587  0055EC  0100               	movlb	0	; () banked
  5588  0055EE  6F7B               	movwf	frexp@eptr& (0+255),b
  5589  0055F0  0E00               	movlw	high floor@expon
  5590  0055F2  0100               	movlb	0	; () banked
  5591  0055F4  6F7C               	movwf	(frexp@eptr+1)& (0+255),b
  5592  0055F6  ECD3  F02D         	call	_frexp	;wreg free
  5593  0055FA  0100               	movlb	0	; () banked
  5594  0055FC  AFE2               	btfss	(floor@expon+1)& (0+255),7,b
  5595  0055FE  D017               	goto	l6838
  5596                           
  5597                           ; BSR set to: 0
  5598  005600  0100               	movlb	0	; () banked
  5599  005602  AFDC               	btfss	(floor@x+3)& (0+255),7,b
  5600  005604  D00A               	goto	l6834
  5601                           
  5602                           ; BSR set to: 0
  5603  005606  0E00               	movlw	0
  5604  005608  0100               	movlb	0	; () banked
  5605  00560A  6FD9               	movwf	?_floor& (0+255),b
  5606  00560C  0E00               	movlw	0
  5607  00560E  6FDA               	movwf	(?_floor+1)& (0+255),b
  5608  005610  0E80               	movlw	128
  5609  005612  6FDB               	movwf	(?_floor+2)& (0+255),b
  5610  005614  0EBF               	movlw	191
  5611  005616  6FDC               	movwf	(?_floor+3)& (0+255),b
  5612                           
  5613                           ; BSR set to: 0
  5614  005618  0012               	return	
  5615  00561A                     l6834:
  5616                           
  5617                           ; BSR set to: 0
  5618  00561A  0E00               	movlw	0
  5619  00561C  0100               	movlb	0	; () banked
  5620  00561E  6FD9               	movwf	?_floor& (0+255),b
  5621  005620  0E00               	movlw	0
  5622  005622  6FDA               	movwf	(?_floor+1)& (0+255),b
  5623  005624  0E00               	movlw	0
  5624  005626  6FDB               	movwf	(?_floor+2)& (0+255),b
  5625  005628  0E00               	movlw	0
  5626  00562A  6FDC               	movwf	(?_floor+3)& (0+255),b
  5627                           
  5628                           ; BSR set to: 0
  5629  00562C  0012               	return	
  5630  00562E                     l6838:
  5631                           
  5632                           ; BSR set to: 0
  5633  00562E  0100               	movlb	0	; () banked
  5634  005630  51E2               	movf	(floor@expon+1)& (0+255),w,b
  5635  005632  E105               	bnz	u8590
  5636  005634  0E1D               	movlw	29
  5637  005636  0100               	movlb	0	; () banked
  5638  005638  5DE1               	subwf	floor@expon& (0+255),w,b
  5639  00563A  A0D8               	btfss	status,0,c
  5640  00563C  D009               	goto	l6842
  5641  00563E                     u8590:
  5642                           
  5643                           ; BSR set to: 0
  5644  00563E  C0D9  F0D9         	movff	floor@x,?_floor
  5645  005642  C0DA  F0DA         	movff	floor@x+1,?_floor+1
  5646  005646  C0DB  F0DB         	movff	floor@x+2,?_floor+2
  5647  00564A  C0DC  F0DC         	movff	floor@x+3,?_floor+3
  5648  00564E  0012               	return	
  5649  005650                     l6842:
  5650                           
  5651                           ; BSR set to: 0
  5652  005650  C0D9  F0C1         	movff	floor@x,___fltol@f1
  5653  005654  C0DA  F0C2         	movff	floor@x+1,___fltol@f1+1
  5654  005658  C0DB  F0C3         	movff	floor@x+2,___fltol@f1+2
  5655  00565C  C0DC  F0C4         	movff	floor@x+3,___fltol@f1+3
  5656  005660  EC0B  F02C         	call	___fltol	;wreg free
  5657  005664  C0C1  F0CB         	movff	?___fltol,___xxtofl@val
  5658  005668  C0C2  F0CC         	movff	?___fltol+1,___xxtofl@val+1
  5659  00566C  C0C3  F0CD         	movff	?___fltol+2,___xxtofl@val+2
  5660  005670  C0C4  F0CE         	movff	?___fltol+3,___xxtofl@val+3
  5661  005674  0E01               	movlw	1
  5662  005676  ECEA  F026         	call	___xxtofl
  5663  00567A  C0CB  F0DD         	movff	?___xxtofl,floor@i
  5664  00567E  C0CC  F0DE         	movff	?___xxtofl+1,floor@i+1
  5665  005682  C0CD  F0DF         	movff	?___xxtofl+2,floor@i+2
  5666  005686  C0CE  F0E0         	movff	?___xxtofl+3,floor@i+3
  5667  00568A  C0D9  F0C5         	movff	floor@x,___flge@ff1
  5668  00568E  C0DA  F0C6         	movff	floor@x+1,___flge@ff1+1
  5669  005692  C0DB  F0C7         	movff	floor@x+2,___flge@ff1+2
  5670  005696  C0DC  F0C8         	movff	floor@x+3,___flge@ff1+3
  5671  00569A  C0DD  F0C9         	movff	floor@i,___flge@ff2
  5672  00569E  C0DE  F0CA         	movff	floor@i+1,___flge@ff2+1
  5673  0056A2  C0DF  F0CB         	movff	floor@i+2,___flge@ff2+2
  5674  0056A6  C0E0  F0CC         	movff	floor@i+3,___flge@ff2+3
  5675  0056AA  EC8A  F029         	call	___flge	;wreg free
  5676  0056AE  0100               	movlb	0	; () banked
  5677  0056B0  B0D8               	btfsc	status,0,c
  5678  0056B2  D01C               	goto	l1464
  5679                           
  5680                           ; BSR set to: 0
  5681  0056B4  C0DD  F0A9         	movff	floor@i,___fladd@b
  5682  0056B8  C0DE  F0AA         	movff	floor@i+1,___fladd@b+1
  5683  0056BC  C0DF  F0AB         	movff	floor@i+2,___fladd@b+2
  5684  0056C0  C0E0  F0AC         	movff	floor@i+3,___fladd@b+3
  5685  0056C4  0E00               	movlw	0
  5686  0056C6  0100               	movlb	0	; () banked
  5687  0056C8  6FAD               	movwf	___fladd@a& (0+255),b
  5688  0056CA  0E00               	movlw	0
  5689  0056CC  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5690  0056CE  0E80               	movlw	128
  5691  0056D0  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5692  0056D2  0EBF               	movlw	191
  5693  0056D4  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5694  0056D6  EC3D  F015         	call	___fladd	;wreg free
  5695  0056DA  C0A9  F0D9         	movff	?___fladd,?_floor
  5696  0056DE  C0AA  F0DA         	movff	?___fladd+1,?_floor+1
  5697  0056E2  C0AB  F0DB         	movff	?___fladd+2,?_floor+2
  5698  0056E6  C0AC  F0DC         	movff	?___fladd+3,?_floor+3
  5699  0056EA  0012               	return	
  5700  0056EC                     l1464:
  5701                           
  5702                           ; BSR set to: 0
  5703  0056EC  C0DD  F0D9         	movff	floor@i,?_floor
  5704  0056F0  C0DE  F0DA         	movff	floor@i+1,?_floor+1
  5705  0056F4  C0DF  F0DB         	movff	floor@i+2,?_floor+2
  5706  0056F8  C0E0  F0DC         	movff	floor@i+3,?_floor+3
  5707  0056FC  0012               	return		;funcret
  5708  0056FE                     __end_of_floor:
  5709                           	opt stack 0
  5710                           tblptru	equ	0xFF8
  5711                           tblptrh	equ	0xFF7
  5712                           tblptrl	equ	0xFF6
  5713                           tablat	equ	0xFF5
  5714                           postinc0	equ	0xFEE
  5715                           wreg	equ	0xFE8
  5716                           postdec1	equ	0xFE5
  5717                           fsr1l	equ	0xFE1
  5718                           indf2	equ	0xFDF
  5719                           postinc2	equ	0xFDE
  5720                           postdec2	equ	0xFDD
  5721                           fsr2h	equ	0xFDA
  5722                           fsr2l	equ	0xFD9
  5723                           status	equ	0xFD8
  5724                           
  5725 ;; *************** function _frexp *****************
  5726 ;; Defined at:
  5727 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  5728 ;; Parameters:    Size  Location     Type
  5729 ;;  value           4   23[BANK0 ] int 
  5730 ;;  eptr            2   27[BANK0 ] PTR int 
  5731 ;;		 -> floor@expon(2), 
  5732 ;; Auto vars:     Size  Location     Type
  5733 ;;		None
  5734 ;; Return value:  Size  Location     Type
  5735 ;;                  4   23[BANK0 ] PTR int 
  5736 ;; Registers used:
  5737 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5738 ;; Tracked objects:
  5739 ;;		On entry : 0/0
  5740 ;;		On exit  : 0/0
  5741 ;;		Unchanged: 0/0
  5742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5743 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5745 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5746 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5747 ;;Total ram usage:        8 bytes
  5748 ;; Hardware stack levels used:    1
  5749 ;; Hardware stack levels required when called:    4
  5750 ;; This function calls:
  5751 ;;		Nothing
  5752 ;; This function is called by:
  5753 ;;		_floor
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           	psect	text12
  5758  005BA6                     __ptext12:
  5759                           	opt stack 0
  5760  005BA6                     _frexp:
  5761                           	opt stack 21
  5762                           
  5763                           ;incstack = 0
  5764  005BA6  0100               	movlb	0	; () banked
  5765  005BA8  5177               	movf	frexp@value& (0+255),w,b
  5766  005BAA  0100               	movlb	0	; () banked
  5767  005BAC  1178               	iorwf	(frexp@value+1)& (0+255),w,b
  5768  005BAE  0100               	movlb	0	; () banked
  5769  005BB0  1179               	iorwf	(frexp@value+2)& (0+255),w,b
  5770  005BB2  0100               	movlb	0	; () banked
  5771  005BB4  117A               	iorwf	(frexp@value+3)& (0+255),w,b
  5772  005BB6  A4D8               	btfss	status,2,c
  5773  005BB8  D009               	goto	l6660
  5774                           
  5775                           ; BSR set to: 0
  5776  005BBA  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5777  005BBE  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5778  005BC2  0E00               	movlw	0
  5779  005BC4  6EDE               	movwf	postinc2,c
  5780  005BC6  0E00               	movlw	0
  5781  005BC8  6EDD               	movwf	postdec2,c
  5782                           
  5783                           ; BSR set to: 0
  5784                           ;	Return value of _frexp is never used
  5785  005BCA  0012               	return	
  5786  005BCC                     l6660:
  5787                           
  5788                           ; BSR set to: 0
  5789  005BCC  0100               	movlb	0	; () banked
  5790  005BCE  517A               	movf	(frexp@value+3)& (0+255),w,b
  5791  005BD0  0B7F               	andlw	127
  5792  005BD2  0100               	movlb	0	; () banked
  5793  005BD4  6F7D               	movwf	??_frexp& (0+255),b
  5794  005BD6  6B7E               	clrf	(??_frexp+1)& (0+255),b
  5795  005BD8  90D8               	bcf	status,0,c
  5796  005BDA  0100               	movlb	0	; () banked
  5797  005BDC  377D               	rlcf	??_frexp& (0+255),f,b
  5798  005BDE  377E               	rlcf	(??_frexp+1)& (0+255),f,b
  5799  005BE0  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5800  005BE4  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5801  005BE8  C07D  FFDE         	movff	??_frexp,postinc2
  5802  005BEC  C07E  FFDD         	movff	??_frexp+1,postdec2
  5803  005BF0  0100               	movlb	0	; () banked
  5804  005BF2  AF79               	btfss	(frexp@value+2)& (0+255),7,b
  5805  005BF4  D004               	goto	u8310
  5806  005BF6  0100               	movlb	0	; () banked
  5807  005BF8  6B7D               	clrf	??_frexp& (0+255),b
  5808  005BFA  2B7D               	incf	??_frexp& (0+255),f,b
  5809  005BFC  D002               	goto	u8318
  5810  005BFE                     u8310:
  5811  005BFE  0100               	movlb	0	; () banked
  5812  005C00  6B7D               	clrf	??_frexp& (0+255),b
  5813  005C02                     u8318:
  5814  005C02  0100               	movlb	0	; () banked
  5815  005C04  517D               	movf	??_frexp& (0+255),w,b
  5816  005C06  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5817  005C0A  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5818  005C0E  12DE               	iorwf	postinc2,f,c
  5819  005C10  0E00               	movlw	0
  5820  005C12  12DD               	iorwf	postdec2,f,c
  5821                           
  5822                           ; BSR set to: 0
  5823  005C14  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5824  005C18  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5825  005C1C  0E82               	movlw	130
  5826  005C1E  26DE               	addwf	postinc2,f,c
  5827  005C20  0EFF               	movlw	255
  5828  005C22  22DD               	addwfc	postdec2,f,c
  5829                           
  5830                           ; BSR set to: 0
  5831  005C24  0100               	movlb	0	; () banked
  5832  005C26  817A               	bsf	(frexp@value+3)& (0+255),0,b
  5833  005C28  837A               	bsf	(frexp@value+3)& (0+255),1,b
  5834  005C2A  857A               	bsf	(frexp@value+3)& (0+255),2,b
  5835  005C2C  877A               	bsf	(frexp@value+3)& (0+255),3,b
  5836  005C2E  897A               	bsf	(frexp@value+3)& (0+255),4,b
  5837  005C30  8B7A               	bsf	(frexp@value+3)& (0+255),5,b
  5838  005C32  9D7A               	bcf	(frexp@value+3)& (0+255),6,b
  5839                           
  5840                           ; BSR set to: 0
  5841  005C34  0100               	movlb	0	; () banked
  5842  005C36  9F79               	bcf	(frexp@value+2)& (0+255),7,b
  5843  005C38  0012               	return	
  5844  005C3A                     __end_of_frexp:
  5845                           	opt stack 0
  5846                           tblptru	equ	0xFF8
  5847                           tblptrh	equ	0xFF7
  5848                           tblptrl	equ	0xFF6
  5849                           tablat	equ	0xFF5
  5850                           postinc0	equ	0xFEE
  5851                           wreg	equ	0xFE8
  5852                           postdec1	equ	0xFE5
  5853                           fsr1l	equ	0xFE1
  5854                           indf2	equ	0xFDF
  5855                           postinc2	equ	0xFDE
  5856                           postdec2	equ	0xFDD
  5857                           fsr2h	equ	0xFDA
  5858                           fsr2l	equ	0xFD9
  5859                           status	equ	0xFD8
  5860                           
  5861 ;; *************** function ___xxtofl *****************
  5862 ;; Defined at:
  5863 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  5864 ;; Parameters:    Size  Location     Type
  5865 ;;  sign            1    wreg     unsigned char 
  5866 ;;  val             4  107[BANK0 ] long 
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;  sign            1  115[BANK0 ] unsigned char 
  5869 ;;  arg             4  117[BANK0 ] unsigned long 
  5870 ;;  exp             1  116[BANK0 ] unsigned char 
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  4  107[BANK0 ] unsigned char 
  5873 ;; Registers used:
  5874 ;;		wreg, status,2, status,0
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5880 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5881 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5882 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5883 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5884 ;;Total ram usage:       14 bytes
  5885 ;; Hardware stack levels used:    1
  5886 ;; Hardware stack levels required when called:    4
  5887 ;; This function calls:
  5888 ;;		Nothing
  5889 ;; This function is called by:
  5890 ;;		_park_search
  5891 ;;		_park_routine
  5892 ;;		_parallelo
  5893 ;;		_floor
  5894 ;; This function uses a non-reentrant model
  5895 ;;
  5896                           
  5897                           	psect	text13
  5898  004DD4                     __ptext13:
  5899                           	opt stack 0
  5900  004DD4                     ___xxtofl:
  5901                           	opt stack 24
  5902                           
  5903                           ; BSR set to: 0
  5904                           ;incstack = 0
  5905                           ;___xxtofl@sign stored from wreg
  5906  004DD4  0100               	movlb	0	; () banked
  5907  004DD6  6FD3               	movwf	___xxtofl@sign& (0+255),b
  5908  004DD8  0100               	movlb	0	; () banked
  5909  004DDA  51D3               	movf	___xxtofl@sign& (0+255),w,b
  5910  004DDC  0100               	movlb	0	; () banked
  5911  004DDE  B4D8               	btfsc	status,2,c
  5912  004DE0  D01E               	goto	l1439
  5913                           
  5914                           ; BSR set to: 0
  5915  004DE2  0100               	movlb	0	; () banked
  5916  004DE4  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  5917  004DE6  D01B               	goto	l1439
  5918                           
  5919                           ; BSR set to: 0
  5920  004DE8  C0CB  F0CF         	movff	___xxtofl@val,??___xxtofl
  5921  004DEC  C0CC  F0D0         	movff	___xxtofl@val+1,??___xxtofl+1
  5922  004DF0  C0CD  F0D1         	movff	___xxtofl@val+2,??___xxtofl+2
  5923  004DF4  C0CE  F0D2         	movff	___xxtofl@val+3,??___xxtofl+3
  5924  004DF8  0100               	movlb	0	; () banked
  5925  004DFA  1FCF               	comf	??___xxtofl& (0+255),f,b
  5926  004DFC  1FD0               	comf	(??___xxtofl+1)& (0+255),f,b
  5927  004DFE  1FD1               	comf	(??___xxtofl+2)& (0+255),f,b
  5928  004E00  1FD2               	comf	(??___xxtofl+3)& (0+255),f,b
  5929  004E02  2BCF               	incf	??___xxtofl& (0+255),f,b
  5930  004E04  0E00               	movlw	0
  5931  004E06  23D0               	addwfc	(??___xxtofl+1)& (0+255),f,b
  5932  004E08  23D1               	addwfc	(??___xxtofl+2)& (0+255),f,b
  5933  004E0A  23D2               	addwfc	(??___xxtofl+3)& (0+255),f,b
  5934  004E0C  C0CF  F0D5         	movff	??___xxtofl,___xxtofl@arg
  5935  004E10  C0D0  F0D6         	movff	??___xxtofl+1,___xxtofl@arg+1
  5936  004E14  C0D1  F0D7         	movff	??___xxtofl+2,___xxtofl@arg+2
  5937  004E18  C0D2  F0D8         	movff	??___xxtofl+3,___xxtofl@arg+3
  5938  004E1C  D008               	goto	l6618
  5939  004E1E                     l1439:
  5940                           
  5941                           ; BSR set to: 0
  5942  004E1E  C0CB  F0D5         	movff	___xxtofl@val,___xxtofl@arg
  5943  004E22  C0CC  F0D6         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5944  004E26  C0CD  F0D7         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5945  004E2A  C0CE  F0D8         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5946  004E2E                     l6618:
  5947                           
  5948                           ; BSR set to: 0
  5949  004E2E  0100               	movlb	0	; () banked
  5950  004E30  51CB               	movf	___xxtofl@val& (0+255),w,b
  5951  004E32  0100               	movlb	0	; () banked
  5952  004E34  11CC               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  5953  004E36  0100               	movlb	0	; () banked
  5954  004E38  11CD               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  5955  004E3A  0100               	movlb	0	; () banked
  5956  004E3C  11CE               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  5957  004E3E  A4D8               	btfss	status,2,c
  5958  004E40  D00A               	goto	l6624
  5959                           
  5960                           ; BSR set to: 0
  5961  004E42  0E00               	movlw	0
  5962  004E44  0100               	movlb	0	; () banked
  5963  004E46  6FCB               	movwf	?___xxtofl& (0+255),b
  5964  004E48  0E00               	movlw	0
  5965  004E4A  6FCC               	movwf	(?___xxtofl+1)& (0+255),b
  5966  004E4C  0E00               	movlw	0
  5967  004E4E  6FCD               	movwf	(?___xxtofl+2)& (0+255),b
  5968  004E50  0E00               	movlw	0
  5969  004E52  6FCE               	movwf	(?___xxtofl+3)& (0+255),b
  5970                           
  5971                           ; BSR set to: 0
  5972  004E54  0012               	return	
  5973  004E56                     l6624:
  5974                           
  5975                           ; BSR set to: 0
  5976  004E56  0E96               	movlw	150
  5977  004E58  0100               	movlb	0	; () banked
  5978  004E5A  6FD4               	movwf	___xxtofl@exp& (0+255),b
  5979  004E5C  D008               	goto	l6628
  5980  004E5E                     l6626:
  5981                           
  5982                           ; BSR set to: 0
  5983  004E5E  0100               	movlb	0	; () banked
  5984  004E60  2BD4               	incf	___xxtofl@exp& (0+255),f,b
  5985  004E62  0100               	movlb	0	; () banked
  5986  004E64  90D8               	bcf	status,0,c
  5987  004E66  33D8               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  5988  004E68  33D7               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  5989  004E6A  33D6               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  5990  004E6C  33D5               	rrcf	___xxtofl@arg& (0+255),f,b
  5991  004E6E                     l6628:
  5992                           
  5993                           ; BSR set to: 0
  5994  004E6E  0E00               	movlw	0
  5995  004E70  0100               	movlb	0	; () banked
  5996  004E72  15D5               	andwf	___xxtofl@arg& (0+255),w,b
  5997  004E74  0100               	movlb	0	; () banked
  5998  004E76  6FCF               	movwf	??___xxtofl& (0+255),b
  5999  004E78  0E00               	movlw	0
  6000  004E7A  0100               	movlb	0	; () banked
  6001  004E7C  15D6               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6002  004E7E  0100               	movlb	0	; () banked
  6003  004E80  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6004  004E82  0E00               	movlw	0
  6005  004E84  0100               	movlb	0	; () banked
  6006  004E86  15D7               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6007  004E88  0100               	movlb	0	; () banked
  6008  004E8A  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6009  004E8C  0EFE               	movlw	254
  6010  004E8E  0100               	movlb	0	; () banked
  6011  004E90  15D8               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6012  004E92  0100               	movlb	0	; () banked
  6013  004E94  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6014  004E96  0100               	movlb	0	; () banked
  6015  004E98  51CF               	movf	??___xxtofl& (0+255),w,b
  6016  004E9A  0100               	movlb	0	; () banked
  6017  004E9C  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6018  004E9E  0100               	movlb	0	; () banked
  6019  004EA0  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6020  004EA2  0100               	movlb	0	; () banked
  6021  004EA4  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6022  004EA6  B4D8               	btfsc	status,2,c
  6023  004EA8  D010               	goto	l1446
  6024  004EAA  D7D9               	goto	l6626
  6025  004EAC                     l6630:
  6026                           
  6027                           ; BSR set to: 0
  6028  004EAC  0100               	movlb	0	; () banked
  6029  004EAE  2BD4               	incf	___xxtofl@exp& (0+255),f,b
  6030                           
  6031                           ; BSR set to: 0
  6032  004EB0  0E01               	movlw	1
  6033  004EB2  0100               	movlb	0	; () banked
  6034  004EB4  27D5               	addwf	___xxtofl@arg& (0+255),f,b
  6035  004EB6  0E00               	movlw	0
  6036  004EB8  23D6               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6037  004EBA  23D7               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6038  004EBC  23D8               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6039                           
  6040                           ; BSR set to: 0
  6041  004EBE  0100               	movlb	0	; () banked
  6042  004EC0  90D8               	bcf	status,0,c
  6043  004EC2  33D8               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6044  004EC4  33D7               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6045  004EC6  33D6               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6046  004EC8  33D5               	rrcf	___xxtofl@arg& (0+255),f,b
  6047  004ECA                     l1446:
  6048                           
  6049                           ; BSR set to: 0
  6050  004ECA  0E00               	movlw	0
  6051  004ECC  0100               	movlb	0	; () banked
  6052  004ECE  15D5               	andwf	___xxtofl@arg& (0+255),w,b
  6053  004ED0  0100               	movlb	0	; () banked
  6054  004ED2  6FCF               	movwf	??___xxtofl& (0+255),b
  6055  004ED4  0E00               	movlw	0
  6056  004ED6  0100               	movlb	0	; () banked
  6057  004ED8  15D6               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6058  004EDA  0100               	movlb	0	; () banked
  6059  004EDC  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6060  004EDE  0E00               	movlw	0
  6061  004EE0  0100               	movlb	0	; () banked
  6062  004EE2  15D7               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6063  004EE4  0100               	movlb	0	; () banked
  6064  004EE6  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6065  004EE8  0EFF               	movlw	255
  6066  004EEA  0100               	movlb	0	; () banked
  6067  004EEC  15D8               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6068  004EEE  0100               	movlb	0	; () banked
  6069  004EF0  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6070  004EF2  0100               	movlb	0	; () banked
  6071  004EF4  51CF               	movf	??___xxtofl& (0+255),w,b
  6072  004EF6  0100               	movlb	0	; () banked
  6073  004EF8  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6074  004EFA  0100               	movlb	0	; () banked
  6075  004EFC  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6076  004EFE  0100               	movlb	0	; () banked
  6077  004F00  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6078  004F02  B4D8               	btfsc	status,2,c
  6079  004F04  D009               	goto	l6638
  6080  004F06  D7D2               	goto	l6630
  6081  004F08                     l6636:
  6082                           
  6083                           ; BSR set to: 0
  6084  004F08  0100               	movlb	0	; () banked
  6085  004F0A  07D4               	decf	___xxtofl@exp& (0+255),f,b
  6086  004F0C  0100               	movlb	0	; () banked
  6087  004F0E  90D8               	bcf	status,0,c
  6088  004F10  37D5               	rlcf	___xxtofl@arg& (0+255),f,b
  6089  004F12  37D6               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6090  004F14  37D7               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6091  004F16  37D8               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6092  004F18                     l6638:
  6093                           
  6094                           ; BSR set to: 0
  6095  004F18  0100               	movlb	0	; () banked
  6096  004F1A  BFD7               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6097  004F1C  D004               	goto	l1453
  6098                           
  6099                           ; BSR set to: 0
  6100  004F1E  0E02               	movlw	2
  6101  004F20  0100               	movlb	0	; () banked
  6102  004F22  61D4               	cpfslt	___xxtofl@exp& (0+255),b
  6103  004F24  D7F1               	goto	l6636
  6104  004F26                     l1453:
  6105                           
  6106                           ; BSR set to: 0
  6107  004F26  0100               	movlb	0	; () banked
  6108  004F28  B1D4               	btfsc	___xxtofl@exp& (0+255),0,b
  6109  004F2A  D009               	goto	l1454
  6110                           
  6111                           ; BSR set to: 0
  6112  004F2C  0EFF               	movlw	255
  6113  004F2E  0100               	movlb	0	; () banked
  6114  004F30  17D5               	andwf	___xxtofl@arg& (0+255),f,b
  6115  004F32  0EFF               	movlw	255
  6116  004F34  17D6               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  6117  004F36  0E7F               	movlw	127
  6118  004F38  17D7               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  6119  004F3A  0EFF               	movlw	255
  6120  004F3C  17D8               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  6121  004F3E                     l1454:
  6122                           
  6123                           ; BSR set to: 0
  6124  004F3E  0100               	movlb	0	; () banked
  6125  004F40  90D8               	bcf	status,0,c
  6126  004F42  33D4               	rrcf	___xxtofl@exp& (0+255),f,b
  6127  004F44  C0D4  F0CF         	movff	___xxtofl@exp,??___xxtofl
  6128  004F48  0100               	movlb	0	; () banked
  6129  004F4A  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6130  004F4C  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6131  004F4E  6BD2               	clrf	(??___xxtofl+3)& (0+255),b
  6132  004F50  C0CF  F0D2         	movff	??___xxtofl,??___xxtofl+3
  6133  004F54  0100               	movlb	0	; () banked
  6134  004F56  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6135  004F58  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6136  004F5A  6BCF               	clrf	??___xxtofl& (0+255),b
  6137  004F5C  0100               	movlb	0	; () banked
  6138  004F5E  51CF               	movf	??___xxtofl& (0+255),w,b
  6139  004F60  0100               	movlb	0	; () banked
  6140  004F62  13D5               	iorwf	___xxtofl@arg& (0+255),f,b
  6141  004F64  0100               	movlb	0	; () banked
  6142  004F66  51D0               	movf	(??___xxtofl+1)& (0+255),w,b
  6143  004F68  0100               	movlb	0	; () banked
  6144  004F6A  13D6               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6145  004F6C  0100               	movlb	0	; () banked
  6146  004F6E  51D1               	movf	(??___xxtofl+2)& (0+255),w,b
  6147  004F70  0100               	movlb	0	; () banked
  6148  004F72  13D7               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6149  004F74  0100               	movlb	0	; () banked
  6150  004F76  51D2               	movf	(??___xxtofl+3)& (0+255),w,b
  6151  004F78  0100               	movlb	0	; () banked
  6152  004F7A  13D8               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6153                           
  6154                           ; BSR set to: 0
  6155  004F7C  0100               	movlb	0	; () banked
  6156  004F7E  51D3               	movf	___xxtofl@sign& (0+255),w,b
  6157  004F80  0100               	movlb	0	; () banked
  6158  004F82  B4D8               	btfsc	status,2,c
  6159  004F84  D005               	goto	l6650
  6160                           
  6161                           ; BSR set to: 0
  6162  004F86  0100               	movlb	0	; () banked
  6163  004F88  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6164  004F8A  D002               	goto	l6650
  6165                           
  6166                           ; BSR set to: 0
  6167  004F8C  0100               	movlb	0	; () banked
  6168  004F8E  8FD8               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6169  004F90                     l6650:
  6170                           
  6171                           ; BSR set to: 0
  6172  004F90  C0D5  F0CB         	movff	___xxtofl@arg,?___xxtofl
  6173  004F94  C0D6  F0CC         	movff	___xxtofl@arg+1,?___xxtofl+1
  6174  004F98  C0D7  F0CD         	movff	___xxtofl@arg+2,?___xxtofl+2
  6175  004F9C  C0D8  F0CE         	movff	___xxtofl@arg+3,?___xxtofl+3
  6176  004FA0  0012               	return	
  6177  004FA2                     __end_of___xxtofl:
  6178                           	opt stack 0
  6179                           tblptru	equ	0xFF8
  6180                           tblptrh	equ	0xFF7
  6181                           tblptrl	equ	0xFF6
  6182                           tablat	equ	0xFF5
  6183                           postinc0	equ	0xFEE
  6184                           wreg	equ	0xFE8
  6185                           postdec1	equ	0xFE5
  6186                           fsr1l	equ	0xFE1
  6187                           indf2	equ	0xFDF
  6188                           postinc2	equ	0xFDE
  6189                           postdec2	equ	0xFDD
  6190                           fsr2h	equ	0xFDA
  6191                           fsr2l	equ	0xFD9
  6192                           status	equ	0xFD8
  6193                           
  6194 ;; *************** function ___fltol *****************
  6195 ;; Defined at:
  6196 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;  f1              4   97[BANK0 ] unsigned char 
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;  exp1            1  106[BANK0 ] unsigned char 
  6201 ;;  sign1           1  105[BANK0 ] unsigned char 
  6202 ;; Return value:  Size  Location     Type
  6203 ;;                  4   97[BANK0 ] long 
  6204 ;; Registers used:
  6205 ;;		wreg, status,2, status,0
  6206 ;; Tracked objects:
  6207 ;;		On entry : 0/0
  6208 ;;		On exit  : 0/0
  6209 ;;		Unchanged: 0/0
  6210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6211 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6212 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6213 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6214 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6215 ;;Total ram usage:       10 bytes
  6216 ;; Hardware stack levels used:    1
  6217 ;; Hardware stack levels required when called:    4
  6218 ;; This function calls:
  6219 ;;		Nothing
  6220 ;; This function is called by:
  6221 ;;		_park_routine
  6222 ;;		_parallelo
  6223 ;;		_floor
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           	psect	text14
  6228  005816                     __ptext14:
  6229                           	opt stack 0
  6230  005816                     ___fltol:
  6231                           	opt stack 24
  6232                           
  6233                           ; BSR set to: 0
  6234                           ;incstack = 0
  6235  005816  0100               	movlb	0	; () banked
  6236  005818  35C3               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6237  00581A  35C4               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6238  00581C  0100               	movlb	0	; () banked
  6239  00581E  6FCA               	movwf	___fltol@exp1& (0+255),b
  6240  005820  0100               	movlb	0	; () banked
  6241  005822  51CA               	movf	___fltol@exp1& (0+255),w,b
  6242  005824  A4D8               	btfss	status,2,c
  6243  005826  D00A               	goto	l6574
  6244                           
  6245                           ; BSR set to: 0
  6246  005828  0E00               	movlw	0
  6247  00582A  0100               	movlb	0	; () banked
  6248  00582C  6FC1               	movwf	?___fltol& (0+255),b
  6249  00582E  0E00               	movlw	0
  6250  005830  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6251  005832  0E00               	movlw	0
  6252  005834  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6253  005836  0E00               	movlw	0
  6254  005838  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6255                           
  6256                           ; BSR set to: 0
  6257  00583A  0012               	return	
  6258  00583C                     l6574:
  6259                           
  6260                           ; BSR set to: 0
  6261  00583C  C0C1  F0C5         	movff	___fltol@f1,??___fltol
  6262  005840  C0C2  F0C6         	movff	___fltol@f1+1,??___fltol+1
  6263  005844  C0C3  F0C7         	movff	___fltol@f1+2,??___fltol+2
  6264  005848  C0C4  F0C8         	movff	___fltol@f1+3,??___fltol+3
  6265  00584C  0E20               	movlw	32
  6266  00584E  D006               	goto	u8140
  6267  005850                     u8145:
  6268  005850  0100               	movlb	0	; () banked
  6269  005852  90D8               	bcf	status,0,c
  6270  005854  33C8               	rrcf	(??___fltol+3)& (0+255),f,b
  6271  005856  33C7               	rrcf	(??___fltol+2)& (0+255),f,b
  6272  005858  33C6               	rrcf	(??___fltol+1)& (0+255),f,b
  6273  00585A  33C5               	rrcf	??___fltol& (0+255),f,b
  6274  00585C                     u8140:
  6275  00585C  2EE8               	decfsz	wreg,f,c
  6276  00585E  D7F8               	goto	u8145
  6277  005860  0100               	movlb	0	; () banked
  6278  005862  51C5               	movf	??___fltol& (0+255),w,b
  6279  005864  0100               	movlb	0	; () banked
  6280  005866  6FC9               	movwf	___fltol@sign1& (0+255),b
  6281                           
  6282                           ; BSR set to: 0
  6283  005868  0100               	movlb	0	; () banked
  6284  00586A  8FC3               	bsf	(___fltol@f1+2)& (0+255),7,b
  6285                           
  6286                           ; BSR set to: 0
  6287  00586C  0EFF               	movlw	255
  6288  00586E  0100               	movlb	0	; () banked
  6289  005870  17C1               	andwf	___fltol@f1& (0+255),f,b
  6290  005872  0EFF               	movlw	255
  6291  005874  17C2               	andwf	(___fltol@f1+1)& (0+255),f,b
  6292  005876  0EFF               	movlw	255
  6293  005878  17C3               	andwf	(___fltol@f1+2)& (0+255),f,b
  6294  00587A  0E00               	movlw	0
  6295  00587C  17C4               	andwf	(___fltol@f1+3)& (0+255),f,b
  6296                           
  6297                           ; BSR set to: 0
  6298  00587E  0E96               	movlw	150
  6299  005880  0100               	movlb	0	; () banked
  6300  005882  5FCA               	subwf	___fltol@exp1& (0+255),f,b
  6301                           
  6302                           ; BSR set to: 0
  6303  005884  0100               	movlb	0	; () banked
  6304  005886  AFCA               	btfss	___fltol@exp1& (0+255),7,b
  6305  005888  D01A               	goto	l6594
  6306                           
  6307                           ; BSR set to: 0
  6308  00588A  0100               	movlb	0	; () banked
  6309  00588C  51CA               	movf	___fltol@exp1& (0+255),w,b
  6310  00588E  0A80               	xorlw	128
  6311  005890  0F97               	addlw	151
  6312  005892  B0D8               	btfsc	status,0,c
  6313  005894  D00A               	goto	l6590
  6314                           
  6315                           ; BSR set to: 0
  6316  005896  0E00               	movlw	0
  6317  005898  0100               	movlb	0	; () banked
  6318  00589A  6FC1               	movwf	?___fltol& (0+255),b
  6319  00589C  0E00               	movlw	0
  6320  00589E  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6321  0058A0  0E00               	movlw	0
  6322  0058A2  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6323  0058A4  0E00               	movlw	0
  6324  0058A6  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6325                           
  6326                           ; BSR set to: 0
  6327  0058A8  0012               	return	
  6328  0058AA                     l6590:
  6329                           
  6330                           ; BSR set to: 0
  6331  0058AA  0100               	movlb	0	; () banked
  6332  0058AC  90D8               	bcf	status,0,c
  6333  0058AE  33C4               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6334  0058B0  33C3               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6335  0058B2  33C2               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6336  0058B4  33C1               	rrcf	___fltol@f1& (0+255),f,b
  6337                           
  6338                           ; BSR set to: 0
  6339  0058B6  0100               	movlb	0	; () banked
  6340  0058B8  3FCA               	incfsz	___fltol@exp1& (0+255),f,b
  6341  0058BA  D7F7               	goto	l6590
  6342                           
  6343                           ; BSR set to: 0
  6344  0058BC  D01B               	goto	l6604
  6345  0058BE                     l6594:
  6346                           
  6347                           ; BSR set to: 0
  6348  0058BE  0E1F               	movlw	31
  6349  0058C0  0100               	movlb	0	; () banked
  6350  0058C2  65CA               	cpfsgt	___fltol@exp1& (0+255),b
  6351  0058C4  D012               	goto	l6602
  6352                           
  6353                           ; BSR set to: 0
  6354  0058C6  0E00               	movlw	0
  6355  0058C8  0100               	movlb	0	; () banked
  6356  0058CA  6FC1               	movwf	?___fltol& (0+255),b
  6357  0058CC  0E00               	movlw	0
  6358  0058CE  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6359  0058D0  0E00               	movlw	0
  6360  0058D2  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6361  0058D4  0E00               	movlw	0
  6362  0058D6  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6363                           
  6364                           ; BSR set to: 0
  6365  0058D8  0012               	return	
  6366  0058DA                     l6600:
  6367                           
  6368                           ; BSR set to: 0
  6369  0058DA  0100               	movlb	0	; () banked
  6370  0058DC  90D8               	bcf	status,0,c
  6371  0058DE  37C1               	rlcf	___fltol@f1& (0+255),f,b
  6372  0058E0  37C2               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6373  0058E2  37C3               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6374  0058E4  37C4               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6375  0058E6  0100               	movlb	0	; () banked
  6376  0058E8  07CA               	decf	___fltol@exp1& (0+255),f,b
  6377  0058EA                     l6602:
  6378                           
  6379                           ; BSR set to: 0
  6380  0058EA  0100               	movlb	0	; () banked
  6381  0058EC  51CA               	movf	___fltol@exp1& (0+255),w,b
  6382  0058EE  0100               	movlb	0	; () banked
  6383  0058F0  A4D8               	btfss	status,2,c
  6384  0058F2  D7F3               	goto	l6600
  6385  0058F4                     l6604:
  6386                           
  6387                           ; BSR set to: 0
  6388  0058F4  0100               	movlb	0	; () banked
  6389  0058F6  51C9               	movf	___fltol@sign1& (0+255),w,b
  6390  0058F8  0100               	movlb	0	; () banked
  6391  0058FA  B4D8               	btfsc	status,2,c
  6392  0058FC  D009               	goto	l6608
  6393                           
  6394                           ; BSR set to: 0
  6395  0058FE  0100               	movlb	0	; () banked
  6396  005900  1FC4               	comf	(___fltol@f1+3)& (0+255),f,b
  6397  005902  1FC3               	comf	(___fltol@f1+2)& (0+255),f,b
  6398  005904  1FC2               	comf	(___fltol@f1+1)& (0+255),f,b
  6399  005906  6DC1               	negf	___fltol@f1& (0+255),b
  6400  005908  0E00               	movlw	0
  6401  00590A  23C2               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6402  00590C  23C3               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6403  00590E  23C4               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6404  005910                     l6608:
  6405                           
  6406                           ; BSR set to: 0
  6407  005910  C0C1  F0C1         	movff	___fltol@f1,?___fltol
  6408  005914  C0C2  F0C2         	movff	___fltol@f1+1,?___fltol+1
  6409  005918  C0C3  F0C3         	movff	___fltol@f1+2,?___fltol+2
  6410  00591C  C0C4  F0C4         	movff	___fltol@f1+3,?___fltol+3
  6411  005920  0012               	return	
  6412  005922                     __end_of___fltol:
  6413                           	opt stack 0
  6414                           tblptru	equ	0xFF8
  6415                           tblptrh	equ	0xFF7
  6416                           tblptrl	equ	0xFF6
  6417                           tablat	equ	0xFF5
  6418                           postinc0	equ	0xFEE
  6419                           wreg	equ	0xFE8
  6420                           postdec1	equ	0xFE5
  6421                           fsr1l	equ	0xFE1
  6422                           indf2	equ	0xFDF
  6423                           postinc2	equ	0xFDE
  6424                           postdec2	equ	0xFDD
  6425                           fsr2h	equ	0xFDA
  6426                           fsr2l	equ	0xFD9
  6427                           status	equ	0xFD8
  6428                           
  6429 ;; *************** function ___flsub *****************
  6430 ;; Defined at:
  6431 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  b               4    0[BANK1 ] long 
  6434 ;;  a               4    4[BANK1 ] long 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;		None
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  4    0[BANK1 ] long 
  6439 ;; Registers used:
  6440 ;;		wreg, status,2, status,0, cstack
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6446 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6448 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6449 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6450 ;;Total ram usage:        8 bytes
  6451 ;; Hardware stack levels used:    1
  6452 ;; Hardware stack levels required when called:    5
  6453 ;; This function calls:
  6454 ;;		___fladd
  6455 ;; This function is called by:
  6456 ;;		_sin
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text15
  6461  005E20                     __ptext15:
  6462                           	opt stack 0
  6463  005E20                     ___flsub:
  6464                           	opt stack 21
  6465                           
  6466                           ; BSR set to: 0
  6467                           ;incstack = 0
  6468  005E20  0E00               	movlw	0
  6469  005E22  0101               	movlb	1	; () banked
  6470  005E24  1B91               	xorwf	___flsub@a& (0+255),f,b
  6471  005E26  0E00               	movlw	0
  6472  005E28  1B92               	xorwf	(___flsub@a+1)& (0+255),f,b
  6473  005E2A  0E00               	movlw	0
  6474  005E2C  1B93               	xorwf	(___flsub@a+2)& (0+255),f,b
  6475  005E2E  0E80               	movlw	128
  6476  005E30  1B94               	xorwf	(___flsub@a+3)& (0+255),f,b
  6477                           
  6478                           ; BSR set to: 1
  6479  005E32  C18D  F0A9         	movff	___flsub@b,___fladd@b
  6480  005E36  C18E  F0AA         	movff	___flsub@b+1,___fladd@b+1
  6481  005E3A  C18F  F0AB         	movff	___flsub@b+2,___fladd@b+2
  6482  005E3E  C190  F0AC         	movff	___flsub@b+3,___fladd@b+3
  6483  005E42  C191  F0AD         	movff	___flsub@a,___fladd@a
  6484  005E46  C192  F0AE         	movff	___flsub@a+1,___fladd@a+1
  6485  005E4A  C193  F0AF         	movff	___flsub@a+2,___fladd@a+2
  6486  005E4E  C194  F0B0         	movff	___flsub@a+3,___fladd@a+3
  6487  005E52  EC3D  F015         	call	___fladd	;wreg free
  6488  005E56  C0A9  F18D         	movff	?___fladd,?___flsub
  6489  005E5A  C0AA  F18E         	movff	?___fladd+1,?___flsub+1
  6490  005E5E  C0AB  F18F         	movff	?___fladd+2,?___flsub+2
  6491  005E62  C0AC  F190         	movff	?___fladd+3,?___flsub+3
  6492  005E66  0012               	return	
  6493  005E68                     __end_of___flsub:
  6494                           	opt stack 0
  6495                           tblptru	equ	0xFF8
  6496                           tblptrh	equ	0xFF7
  6497                           tblptrl	equ	0xFF6
  6498                           tablat	equ	0xFF5
  6499                           postinc0	equ	0xFEE
  6500                           wreg	equ	0xFE8
  6501                           postdec1	equ	0xFE5
  6502                           fsr1l	equ	0xFE1
  6503                           indf2	equ	0xFDF
  6504                           postinc2	equ	0xFDE
  6505                           postdec2	equ	0xFDD
  6506                           fsr2h	equ	0xFDA
  6507                           fsr2l	equ	0xFD9
  6508                           status	equ	0xFD8
  6509                           
  6510 ;; *************** function _asin *****************
  6511 ;; Defined at:
  6512 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\asin.c"
  6513 ;; Parameters:    Size  Location     Type
  6514 ;;  x               4  126[BANK0 ] long 
  6515 ;; Auto vars:     Size  Location     Type
  6516 ;;  y               4   29[BANK1 ] long 
  6517 ;;  sgn             4   17[BANK1 ] long 
  6518 ;; Return value:  Size  Location     Type
  6519 ;;                  4  126[BANK0 ] long 
  6520 ;; Registers used:
  6521 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6527 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6528 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6530 ;;      Totals:         0       4      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6531 ;;Total ram usage:       24 bytes
  6532 ;; Hardware stack levels used:    1
  6533 ;; Hardware stack levels required when called:    7
  6534 ;; This function calls:
  6535 ;;		___fladd
  6536 ;;		___fldiv
  6537 ;;		___flge
  6538 ;;		___flmul
  6539 ;;		___flneg
  6540 ;;		_atan
  6541 ;;		_fabs
  6542 ;;		_sqrt
  6543 ;; This function is called by:
  6544 ;;		_parallelo
  6545 ;;		_matematica
  6546 ;; This function uses a non-reentrant model
  6547 ;;
  6548                           
  6549                           	psect	text16
  6550  0045E4                     __ptext16:
  6551                           	opt stack 0
  6552  0045E4                     _asin:
  6553                           	opt stack 21
  6554                           
  6555                           ;incstack = 0
  6556  0045E4  0E00               	movlw	0
  6557  0045E6  0100               	movlb	0	; () banked
  6558  0045E8  6FC5               	movwf	___flge@ff1& (0+255),b
  6559  0045EA  0E00               	movlw	0
  6560  0045EC  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  6561  0045EE  0E80               	movlw	128
  6562  0045F0  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  6563  0045F2  0E3F               	movlw	63
  6564  0045F4  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  6565  0045F6  C0DE  F0C1         	movff	asin@x,fabs@d
  6566  0045FA  C0DF  F0C2         	movff	asin@x+1,fabs@d+1
  6567  0045FE  C0E0  F0C3         	movff	asin@x+2,fabs@d+2
  6568  004602  C0E1  F0C4         	movff	asin@x+3,fabs@d+3
  6569  004606  EC34  F02F         	call	_fabs	;wreg free
  6570  00460A  C0C1  F0C9         	movff	?_fabs,___flge@ff2
  6571  00460E  C0C2  F0CA         	movff	?_fabs+1,___flge@ff2+1
  6572  004612  C0C3  F0CB         	movff	?_fabs+2,___flge@ff2+2
  6573  004616  C0C4  F0CC         	movff	?_fabs+3,___flge@ff2+3
  6574  00461A  EC8A  F029         	call	___flge	;wreg free
  6575  00461E  0100               	movlb	0	; () banked
  6576  004620  B0D8               	btfsc	status,0,c
  6577  004622  D00F               	goto	l7310
  6578                           
  6579                           ; BSR set to: 0
  6580  004624  0E00               	movlw	0
  6581  004626  0101               	movlb	1	; () banked
  6582  004628  6F49               	movwf	(_errno+1)& (0+255),b
  6583  00462A  0E21               	movlw	33
  6584  00462C  6F48               	movwf	_errno& (0+255),b
  6585  00462E  0E00               	movlw	0
  6586  004630  0100               	movlb	0	; () banked
  6587  004632  6FDE               	movwf	?_asin& (0+255),b
  6588  004634  0E00               	movlw	0
  6589  004636  6FDF               	movwf	(?_asin+1)& (0+255),b
  6590  004638  0E00               	movlw	0
  6591  00463A  6FE0               	movwf	(?_asin+2)& (0+255),b
  6592  00463C  0E00               	movlw	0
  6593  00463E  6FE1               	movwf	(?_asin+3)& (0+255),b
  6594                           
  6595                           ; BSR set to: 0
  6596  004640  0012               	return	
  6597  004642                     l7310:
  6598                           
  6599                           ; BSR set to: 0
  6600  004642  0E00               	movlw	0
  6601  004644  0101               	movlb	1	; () banked
  6602  004646  6F9E               	movwf	asin@sgn& (0+255),b
  6603  004648  0E00               	movlw	0
  6604  00464A  6F9F               	movwf	(asin@sgn+1)& (0+255),b
  6605  00464C  0E80               	movlw	128
  6606  00464E  6FA0               	movwf	(asin@sgn+2)& (0+255),b
  6607  004650  0E3F               	movlw	63
  6608  004652  6FA1               	movwf	(asin@sgn+3)& (0+255),b
  6609                           
  6610                           ; BSR set to: 1
  6611  004654  C0DE  F094         	movff	asin@x,___flmul@a
  6612  004658  C0DF  F095         	movff	asin@x+1,___flmul@a+1
  6613  00465C  C0E0  F096         	movff	asin@x+2,___flmul@a+2
  6614  004660  C0E1  F097         	movff	asin@x+3,___flmul@a+3
  6615  004664  C0DE  F090         	movff	asin@x,___flmul@b
  6616  004668  C0DF  F091         	movff	asin@x+1,___flmul@b+1
  6617  00466C  C0E0  F092         	movff	asin@x+2,___flmul@b+2
  6618  004670  C0E1  F093         	movff	asin@x+3,___flmul@b+3
  6619  004674  EC91  F017         	call	___flmul	;wreg free
  6620  004678  C090  F0BD         	movff	?___flmul,___flneg@f1
  6621  00467C  C091  F0BE         	movff	?___flmul+1,___flneg@f1+1
  6622  004680  C092  F0BF         	movff	?___flmul+2,___flneg@f1+2
  6623  004684  C093  F0C0         	movff	?___flmul+3,___flneg@f1+3
  6624  004688  EC53  F02F         	call	___flneg	;wreg free
  6625  00468C  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6626  004690  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6627  004694  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6628  004698  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6629  00469C  0E00               	movlw	0
  6630  00469E  0100               	movlb	0	; () banked
  6631  0046A0  6FAD               	movwf	___fladd@a& (0+255),b
  6632  0046A2  0E00               	movlw	0
  6633  0046A4  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6634  0046A6  0E80               	movlw	128
  6635  0046A8  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6636  0046AA  0E3F               	movlw	63
  6637  0046AC  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6638  0046AE  EC3D  F015         	call	___fladd	;wreg free
  6639  0046B2  C0A9  F0C1         	movff	?___fladd,sqrt@a
  6640  0046B6  C0AA  F0C2         	movff	?___fladd+1,sqrt@a+1
  6641  0046BA  C0AB  F0C3         	movff	?___fladd+2,sqrt@a+2
  6642  0046BE  C0AC  F0C4         	movff	?___fladd+3,sqrt@a+3
  6643  0046C2  ECD2  F01B         	call	_sqrt	;wreg free
  6644  0046C6  C0C1  F1AA         	movff	?_sqrt,asin@y
  6645  0046CA  C0C2  F1AB         	movff	?_sqrt+1,asin@y+1
  6646  0046CE  C0C3  F1AC         	movff	?_sqrt+2,asin@y+2
  6647  0046D2  C0C4  F1AD         	movff	?_sqrt+3,asin@y+3
  6648  0046D6  C0DE  F0C1         	movff	asin@x,fabs@d
  6649  0046DA  C0DF  F0C2         	movff	asin@x+1,fabs@d+1
  6650  0046DE  C0E0  F0C3         	movff	asin@x+2,fabs@d+2
  6651  0046E2  C0E1  F0C4         	movff	asin@x+3,fabs@d+3
  6652  0046E6  EC34  F02F         	call	_fabs	;wreg free
  6653  0046EA  C0C1  F0C5         	movff	?_fabs,___flge@ff1
  6654  0046EE  C0C2  F0C6         	movff	?_fabs+1,___flge@ff1+1
  6655  0046F2  C0C3  F0C7         	movff	?_fabs+2,___flge@ff1+2
  6656  0046F6  C0C4  F0C8         	movff	?_fabs+3,___flge@ff1+3
  6657  0046FA  0E8F               	movlw	143
  6658  0046FC  0100               	movlb	0	; () banked
  6659  0046FE  6FC9               	movwf	___flge@ff2& (0+255),b
  6660  004700  0EC2               	movlw	194
  6661  004702  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  6662  004704  0E35               	movlw	53
  6663  004706  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  6664  004708  0E3F               	movlw	63
  6665  00470A  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  6666  00470C  EC8A  F029         	call	___flge	;wreg free
  6667  004710  0100               	movlb	0	; () banked
  6668  004712  B0D8               	btfsc	status,0,c
  6669  004714  D02D               	goto	l7322
  6670                           
  6671                           ; BSR set to: 0
  6672  004716  C0DE  F077         	movff	asin@x,___fldiv@b
  6673  00471A  C0DF  F078         	movff	asin@x+1,___fldiv@b+1
  6674  00471E  C0E0  F079         	movff	asin@x+2,___fldiv@b+2
  6675  004722  C0E1  F07A         	movff	asin@x+3,___fldiv@b+3
  6676  004726  C1AA  F07B         	movff	asin@y,___fldiv@a
  6677  00472A  C1AB  F07C         	movff	asin@y+1,___fldiv@a+1
  6678  00472E  C1AC  F07D         	movff	asin@y+2,___fldiv@a+2
  6679  004732  C1AD  F07E         	movff	asin@y+3,___fldiv@a+3
  6680  004736  ECB7  F01D         	call	___fldiv	;wreg free
  6681  00473A  C077  F1AE         	movff	?___fldiv,_asin$3747
  6682  00473E  C078  F1AF         	movff	?___fldiv+1,_asin$3747+1
  6683  004742  C079  F1B0         	movff	?___fldiv+2,_asin$3747+2
  6684  004746  C07A  F1B1         	movff	?___fldiv+3,_asin$3747+3
  6685  00474A  C1AE  F0D1         	movff	_asin$3747,atan@f
  6686  00474E  C1AF  F0D2         	movff	_asin$3747+1,atan@f+1
  6687  004752  C1B0  F0D3         	movff	_asin$3747+2,atan@f+2
  6688  004756  C1B1  F0D4         	movff	_asin$3747+3,atan@f+3
  6689  00475A  ECC1  F025         	call	_atan	;wreg free
  6690  00475E  C0D1  F0DE         	movff	?_atan,?_asin
  6691  004762  C0D2  F0DF         	movff	?_atan+1,?_asin+1
  6692  004766  C0D3  F0E0         	movff	?_atan+2,?_asin+2
  6693  00476A  C0D4  F0E1         	movff	?_atan+3,?_asin+3
  6694  00476E  0012               	return	
  6695  004770                     l7322:
  6696  004770  0100               	movlb	0	; () banked
  6697  004772  AFE1               	btfss	(asin@x+3)& (0+255),7,b
  6698  004774  D06E               	goto	l7334
  6699                           
  6700                           ; BSR set to: 0
  6701  004776  C0DE  F07B         	movff	asin@x,___fldiv@a
  6702  00477A  C0DF  F07C         	movff	asin@x+1,___fldiv@a+1
  6703  00477E  C0E0  F07D         	movff	asin@x+2,___fldiv@a+2
  6704  004782  C0E1  F07E         	movff	asin@x+3,___fldiv@a+3
  6705  004786  C1AA  F0BD         	movff	asin@y,___flneg@f1
  6706  00478A  C1AB  F0BE         	movff	asin@y+1,___flneg@f1+1
  6707  00478E  C1AC  F0BF         	movff	asin@y+2,___flneg@f1+2
  6708  004792  C1AD  F0C0         	movff	asin@y+3,___flneg@f1+3
  6709  004796  EC53  F02F         	call	___flneg	;wreg free
  6710  00479A  C0BD  F077         	movff	?___flneg,___fldiv@b
  6711  00479E  C0BE  F078         	movff	?___flneg+1,___fldiv@b+1
  6712  0047A2  C0BF  F079         	movff	?___flneg+2,___fldiv@b+2
  6713  0047A6  C0C0  F07A         	movff	?___flneg+3,___fldiv@b+3
  6714  0047AA  ECB7  F01D         	call	___fldiv	;wreg free
  6715  0047AE  C077  F1AE         	movff	?___fldiv,_asin$3747
  6716  0047B2  C078  F1AF         	movff	?___fldiv+1,_asin$3747+1
  6717  0047B6  C079  F1B0         	movff	?___fldiv+2,_asin$3747+2
  6718  0047BA  C07A  F1B1         	movff	?___fldiv+3,_asin$3747+3
  6719  0047BE  C1AE  F0D1         	movff	_asin$3747,atan@f
  6720  0047C2  C1AF  F0D2         	movff	_asin$3747+1,atan@f+1
  6721  0047C6  C1B0  F0D3         	movff	_asin$3747+2,atan@f+2
  6722  0047CA  C1B1  F0D4         	movff	_asin$3747+3,atan@f+3
  6723  0047CE  ECC1  F025         	call	_atan	;wreg free
  6724  0047D2  C0D1  F1A6         	movff	?_atan,_asin$3748
  6725  0047D6  C0D2  F1A7         	movff	?_atan+1,_asin$3748+1
  6726  0047DA  C0D3  F1A8         	movff	?_atan+2,_asin$3748+2
  6727  0047DE  C0D4  F1A9         	movff	?_atan+3,_asin$3748+3
  6728  0047E2  0EDB               	movlw	219
  6729  0047E4  0100               	movlb	0	; () banked
  6730  0047E6  6FAD               	movwf	___fladd@a& (0+255),b
  6731  0047E8  0E0F               	movlw	15
  6732  0047EA  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6733  0047EC  0EC9               	movlw	201
  6734  0047EE  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6735  0047F0  0E3F               	movlw	63
  6736  0047F2  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6737  0047F4  C1A6  F0BD         	movff	_asin$3748,___flneg@f1
  6738  0047F8  C1A7  F0BE         	movff	_asin$3748+1,___flneg@f1+1
  6739  0047FC  C1A8  F0BF         	movff	_asin$3748+2,___flneg@f1+2
  6740  004800  C1A9  F0C0         	movff	_asin$3748+3,___flneg@f1+3
  6741  004804  EC53  F02F         	call	___flneg	;wreg free
  6742  004808  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6743  00480C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6744  004810  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6745  004814  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6746  004818  EC3D  F015         	call	___fladd	;wreg free
  6747  00481C  C0A9  F1A2         	movff	?___fladd,_asin$3749
  6748  004820  C0AA  F1A3         	movff	?___fladd+1,_asin$3749+1
  6749  004824  C0AB  F1A4         	movff	?___fladd+2,_asin$3749+2
  6750  004828  C0AC  F1A5         	movff	?___fladd+3,_asin$3749+3
  6751  00482C  C1A2  F0BD         	movff	_asin$3749,___flneg@f1
  6752  004830  C1A3  F0BE         	movff	_asin$3749+1,___flneg@f1+1
  6753  004834  C1A4  F0BF         	movff	_asin$3749+2,___flneg@f1+2
  6754  004838  C1A5  F0C0         	movff	_asin$3749+3,___flneg@f1+3
  6755  00483C  EC53  F02F         	call	___flneg	;wreg free
  6756  004840  C0BD  F0DE         	movff	?___flneg,?_asin
  6757  004844  C0BE  F0DF         	movff	?___flneg+1,?_asin+1
  6758  004848  C0BF  F0E0         	movff	?___flneg+2,?_asin+2
  6759  00484C  C0C0  F0E1         	movff	?___flneg+3,?_asin+3
  6760  004850  0012               	return	
  6761  004852                     l7334:
  6762  004852  C0DE  F07B         	movff	asin@x,___fldiv@a
  6763  004856  C0DF  F07C         	movff	asin@x+1,___fldiv@a+1
  6764  00485A  C0E0  F07D         	movff	asin@x+2,___fldiv@a+2
  6765  00485E  C0E1  F07E         	movff	asin@x+3,___fldiv@a+3
  6766  004862  C1AA  F077         	movff	asin@y,___fldiv@b
  6767  004866  C1AB  F078         	movff	asin@y+1,___fldiv@b+1
  6768  00486A  C1AC  F079         	movff	asin@y+2,___fldiv@b+2
  6769  00486E  C1AD  F07A         	movff	asin@y+3,___fldiv@b+3
  6770  004872  ECB7  F01D         	call	___fldiv	;wreg free
  6771  004876  C077  F1AE         	movff	?___fldiv,_asin$3747
  6772  00487A  C078  F1AF         	movff	?___fldiv+1,_asin$3747+1
  6773  00487E  C079  F1B0         	movff	?___fldiv+2,_asin$3747+2
  6774  004882  C07A  F1B1         	movff	?___fldiv+3,_asin$3747+3
  6775  004886  C1AE  F0D1         	movff	_asin$3747,atan@f
  6776  00488A  C1AF  F0D2         	movff	_asin$3747+1,atan@f+1
  6777  00488E  C1B0  F0D3         	movff	_asin$3747+2,atan@f+2
  6778  004892  C1B1  F0D4         	movff	_asin$3747+3,atan@f+3
  6779  004896  ECC1  F025         	call	_atan	;wreg free
  6780  00489A  C0D1  F1A6         	movff	?_atan,_asin$3748
  6781  00489E  C0D2  F1A7         	movff	?_atan+1,_asin$3748+1
  6782  0048A2  C0D3  F1A8         	movff	?_atan+2,_asin$3748+2
  6783  0048A6  C0D4  F1A9         	movff	?_atan+3,_asin$3748+3
  6784  0048AA  C1A6  F0BD         	movff	_asin$3748,___flneg@f1
  6785  0048AE  C1A7  F0BE         	movff	_asin$3748+1,___flneg@f1+1
  6786  0048B2  C1A8  F0BF         	movff	_asin$3748+2,___flneg@f1+2
  6787  0048B6  C1A9  F0C0         	movff	_asin$3748+3,___flneg@f1+3
  6788  0048BA  EC53  F02F         	call	___flneg	;wreg free
  6789  0048BE  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6790  0048C2  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6791  0048C6  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6792  0048CA  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6793  0048CE  0EDB               	movlw	219
  6794  0048D0  0100               	movlb	0	; () banked
  6795  0048D2  6FAD               	movwf	___fladd@a& (0+255),b
  6796  0048D4  0E0F               	movlw	15
  6797  0048D6  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6798  0048D8  0EC9               	movlw	201
  6799  0048DA  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6800  0048DC  0E3F               	movlw	63
  6801  0048DE  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6802  0048E0  EC3D  F015         	call	___fladd	;wreg free
  6803  0048E4  C0A9  F0DE         	movff	?___fladd,?_asin
  6804  0048E8  C0AA  F0DF         	movff	?___fladd+1,?_asin+1
  6805  0048EC  C0AB  F0E0         	movff	?___fladd+2,?_asin+2
  6806  0048F0  C0AC  F0E1         	movff	?___fladd+3,?_asin+3
  6807  0048F4  0012               	return	
  6808  0048F6                     __end_of_asin:
  6809                           	opt stack 0
  6810                           tblptru	equ	0xFF8
  6811                           tblptrh	equ	0xFF7
  6812                           tblptrl	equ	0xFF6
  6813                           tablat	equ	0xFF5
  6814                           postinc0	equ	0xFEE
  6815                           wreg	equ	0xFE8
  6816                           postdec1	equ	0xFE5
  6817                           fsr1l	equ	0xFE1
  6818                           indf2	equ	0xFDF
  6819                           postinc2	equ	0xFDE
  6820                           postdec2	equ	0xFDD
  6821                           fsr2h	equ	0xFDA
  6822                           fsr2l	equ	0xFD9
  6823                           status	equ	0xFD8
  6824                           
  6825 ;; *************** function _sqrt *****************
  6826 ;; Defined at:
  6827 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  6828 ;; Parameters:    Size  Location     Type
  6829 ;;  a               4   97[BANK0 ] long 
  6830 ;; Auto vars:     Size  Location     Type
  6831 ;;  frac            4  122[BANK0 ] unsigned long 
  6832 ;;  root            4  118[BANK0 ] struct .
  6833 ;;  grs             4  112[BANK0 ] unsigned long 
  6834 ;;  tfrac           4  107[BANK0 ] unsigned long 
  6835 ;;  exp             2  116[BANK0 ] int 
  6836 ;;  p               1  111[BANK0 ] unsigned char 
  6837 ;;  i               1  106[BANK0 ] unsigned char 
  6838 ;;  sign            1  105[BANK0 ] unsigned char 
  6839 ;; Return value:  Size  Location     Type
  6840 ;;                  4   97[BANK0 ] unsigned char 
  6841 ;; Registers used:
  6842 ;;		wreg, status,2, status,0
  6843 ;; Tracked objects:
  6844 ;;		On entry : 0/0
  6845 ;;		On exit  : 0/0
  6846 ;;		Unchanged: 0/0
  6847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6848 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6849 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6850 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6851 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6852 ;;Total ram usage:       29 bytes
  6853 ;; Hardware stack levels used:    1
  6854 ;; Hardware stack levels required when called:    4
  6855 ;; This function calls:
  6856 ;;		Nothing
  6857 ;; This function is called by:
  6858 ;;		_parallelo
  6859 ;;		_asin
  6860 ;; This function uses a non-reentrant model
  6861 ;;
  6862                           
  6863                           	psect	text17
  6864  0037A4                     __ptext17:
  6865                           	opt stack 0
  6866  0037A4                     _sqrt:
  6867                           	opt stack 24
  6868                           
  6869                           ;incstack = 0
  6870  0037A4  0100               	movlb	0	; () banked
  6871  0037A6  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  6872  0037A8  0B80               	andlw	128
  6873  0037AA  0100               	movlb	0	; () banked
  6874  0037AC  6FC9               	movwf	sqrt@sign& (0+255),b
  6875  0037AE  0100               	movlb	0	; () banked
  6876  0037B0  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  6877  0037B2  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  6878  0037B4  0100               	movlb	0	; () banked
  6879  0037B6  6FCF               	movwf	sqrt@p& (0+255),b
  6880                           
  6881                           ; BSR set to: 0
  6882  0037B8  0100               	movlb	0	; () banked
  6883  0037BA  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  6884  0037BC  D002               	goto	l7096
  6885                           
  6886                           ; BSR set to: 0
  6887  0037BE  0100               	movlb	0	; () banked
  6888  0037C0  81CF               	bsf	sqrt@p& (0+255),0,b
  6889  0037C2                     l7096:
  6890                           
  6891                           ; BSR set to: 0
  6892  0037C2  C0CF  F0D4         	movff	sqrt@p,sqrt@exp
  6893  0037C6  0100               	movlb	0	; () banked
  6894  0037C8  6BD5               	clrf	(sqrt@exp+1)& (0+255),b
  6895                           
  6896                           ; BSR set to: 0
  6897  0037CA  0EFF               	movlw	255
  6898  0037CC  0100               	movlb	0	; () banked
  6899  0037CE  15C1               	andwf	sqrt@a& (0+255),w,b
  6900  0037D0  0100               	movlb	0	; () banked
  6901  0037D2  6FDA               	movwf	sqrt@frac& (0+255),b
  6902  0037D4  0EFF               	movlw	255
  6903  0037D6  0100               	movlb	0	; () banked
  6904  0037D8  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  6905  0037DA  0100               	movlb	0	; () banked
  6906  0037DC  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  6907  0037DE  0E7F               	movlw	127
  6908  0037E0  0100               	movlb	0	; () banked
  6909  0037E2  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  6910  0037E4  0100               	movlb	0	; () banked
  6911  0037E6  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  6912  0037E8  0E00               	movlw	0
  6913  0037EA  0100               	movlb	0	; () banked
  6914  0037EC  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  6915  0037EE  0100               	movlb	0	; () banked
  6916  0037F0  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  6917                           
  6918                           ; BSR set to: 0
  6919  0037F2  0100               	movlb	0	; () banked
  6920  0037F4  51D4               	movf	sqrt@exp& (0+255),w,b
  6921  0037F6  0100               	movlb	0	; () banked
  6922  0037F8  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  6923  0037FA  B4D8               	btfsc	status,2,c
  6924  0037FC  D008               	goto	l7108
  6925                           
  6926                           ; BSR set to: 0
  6927  0037FE  0100               	movlb	0	; () banked
  6928  003800  8FDC               	bsf	(sqrt@frac+2)& (0+255),7,b
  6929                           
  6930                           ; BSR set to: 0
  6931  003802  0100               	movlb	0	; () banked
  6932  003804  29D4               	incf	sqrt@exp& (0+255),w,b
  6933  003806  0100               	movlb	0	; () banked
  6934  003808  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  6935  00380A  A4D8               	btfss	status,2,c
  6936  00380C  D009               	goto	l7110
  6937  00380E                     l7108:
  6938                           
  6939                           ; BSR set to: 0
  6940  00380E  0E00               	movlw	0
  6941  003810  0100               	movlb	0	; () banked
  6942  003812  6FDA               	movwf	sqrt@frac& (0+255),b
  6943  003814  0E00               	movlw	0
  6944  003816  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  6945  003818  0E00               	movlw	0
  6946  00381A  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  6947  00381C  0E00               	movlw	0
  6948  00381E  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  6949  003820                     l7110:
  6950                           
  6951                           ; BSR set to: 0
  6952  003820  0100               	movlb	0	; () banked
  6953  003822  51D4               	movf	sqrt@exp& (0+255),w,b
  6954  003824  0100               	movlb	0	; () banked
  6955  003826  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  6956  003828  A4D8               	btfss	status,2,c
  6957  00382A  D00A               	goto	l7116
  6958                           
  6959                           ; BSR set to: 0
  6960  00382C  0E00               	movlw	0
  6961  00382E  0100               	movlb	0	; () banked
  6962  003830  6FC1               	movwf	?_sqrt& (0+255),b
  6963  003832  0E00               	movlw	0
  6964  003834  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  6965  003836  0E00               	movlw	0
  6966  003838  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  6967  00383A  0E00               	movlw	0
  6968  00383C  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  6969                           
  6970                           ; BSR set to: 0
  6971  00383E  0012               	return	
  6972  003840                     l7116:
  6973                           
  6974                           ; BSR set to: 0
  6975  003840  0100               	movlb	0	; () banked
  6976  003842  51C9               	movf	sqrt@sign& (0+255),w,b
  6977  003844  0100               	movlb	0	; () banked
  6978  003846  B4D8               	btfsc	status,2,c
  6979  003848  D01C               	goto	l7128
  6980                           
  6981                           ; BSR set to: 0
  6982  00384A  0E00               	movlw	0
  6983  00384C  0100               	movlb	0	; () banked
  6984  00384E  6FD6               	movwf	sqrt@root& (0+255),b
  6985  003850  0E00               	movlw	0
  6986  003852  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  6987  003854  0E40               	movlw	64
  6988  003856  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  6989  003858  0E00               	movlw	0
  6990  00385A  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  6991                           
  6992                           ; BSR set to: 0
  6993  00385C  0100               	movlb	0	; () banked
  6994  00385E  0E80               	movlw	128
  6995  003860  13D8               	iorwf	(sqrt@root+2)& (0+255),f,b
  6996  003862  0EFF               	movlw	255
  6997  003864  13D9               	iorwf	(sqrt@root+3)& (0+255),f,b
  6998                           
  6999                           ; BSR set to: 0
  7000  003866  0E00               	movlw	0
  7001  003868  0101               	movlb	1	; () banked
  7002  00386A  6F49               	movwf	(_errno+1)& (0+255),b
  7003  00386C  0E21               	movlw	33
  7004  00386E  6F48               	movwf	_errno& (0+255),b
  7005                           
  7006                           ; BSR set to: 1
  7007  003870  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  7008  003874  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7009  003878  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7010  00387C  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7011                           
  7012                           ; BSR set to: 1
  7013  003880  0012               	return	
  7014  003882                     l7128:
  7015  003882  0100               	movlb	0	; () banked
  7016  003884  29D4               	incf	sqrt@exp& (0+255),w,b
  7017  003886  0100               	movlb	0	; () banked
  7018  003888  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7019  00388A  A4D8               	btfss	status,2,c
  7020  00388C  D012               	goto	l7136
  7021                           
  7022                           ; BSR set to: 0
  7023  00388E  0E00               	movlw	0
  7024  003890  0100               	movlb	0	; () banked
  7025  003892  6FD6               	movwf	sqrt@root& (0+255),b
  7026  003894  0E00               	movlw	0
  7027  003896  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  7028  003898  0E80               	movlw	128
  7029  00389A  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  7030  00389C  0E7F               	movlw	127
  7031  00389E  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7032                           
  7033                           ; BSR set to: 0
  7034  0038A0  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  7035  0038A4  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7036  0038A8  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7037  0038AC  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7038                           
  7039                           ; BSR set to: 0
  7040  0038B0  0012               	return	
  7041  0038B2                     l7136:
  7042                           
  7043                           ; BSR set to: 0
  7044  0038B2  0100               	movlb	0	; () banked
  7045  0038B4  0E81               	movlw	129
  7046  0038B6  27D4               	addwf	sqrt@exp& (0+255),f,b
  7047  0038B8  0EFF               	movlw	255
  7048  0038BA  23D5               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7049  0038BC  0100               	movlb	0	; () banked
  7050  0038BE  51D4               	movf	sqrt@exp& (0+255),w,b
  7051  0038C0  0B01               	andlw	1
  7052  0038C2  0100               	movlb	0	; () banked
  7053  0038C4  6FCF               	movwf	sqrt@p& (0+255),b
  7054  0038C6  0100               	movlb	0	; () banked
  7055  0038C8  35D5               	rlcf	(sqrt@exp+1)& (0+255),w,b
  7056  0038CA  33D5               	rrcf	(sqrt@exp+1)& (0+255),f,b
  7057  0038CC  33D4               	rrcf	sqrt@exp& (0+255),f,b
  7058  0038CE  0E7F               	movlw	127
  7059  0038D0  0100               	movlb	0	; () banked
  7060  0038D2  27D4               	addwf	sqrt@exp& (0+255),f,b
  7061  0038D4  0E00               	movlw	0
  7062  0038D6  23D5               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7063  0038D8  90D8               	bcf	status,0,c
  7064  0038DA  0100               	movlb	0	; () banked
  7065  0038DC  35DA               	rlcf	sqrt@frac& (0+255),w,b
  7066  0038DE  0100               	movlb	0	; () banked
  7067  0038E0  6FCB               	movwf	sqrt@tfrac& (0+255),b
  7068  0038E2  0100               	movlb	0	; () banked
  7069  0038E4  35DB               	rlcf	(sqrt@frac+1)& (0+255),w,b
  7070  0038E6  0100               	movlb	0	; () banked
  7071  0038E8  6FCC               	movwf	(sqrt@tfrac+1)& (0+255),b
  7072  0038EA  0100               	movlb	0	; () banked
  7073  0038EC  35DC               	rlcf	(sqrt@frac+2)& (0+255),w,b
  7074  0038EE  0100               	movlb	0	; () banked
  7075  0038F0  6FCD               	movwf	(sqrt@tfrac+2)& (0+255),b
  7076  0038F2  0100               	movlb	0	; () banked
  7077  0038F4  35DD               	rlcf	(sqrt@frac+3)& (0+255),w,b
  7078  0038F6  0100               	movlb	0	; () banked
  7079  0038F8  6FCE               	movwf	(sqrt@tfrac+3)& (0+255),b
  7080                           
  7081                           ; BSR set to: 0
  7082  0038FA  0E00               	movlw	0
  7083  0038FC  0100               	movlb	0	; () banked
  7084  0038FE  6FDA               	movwf	sqrt@frac& (0+255),b
  7085  003900  0E00               	movlw	0
  7086  003902  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  7087  003904  0E00               	movlw	0
  7088  003906  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  7089  003908  0E00               	movlw	0
  7090  00390A  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  7091                           
  7092                           ; BSR set to: 0
  7093  00390C  0E00               	movlw	0
  7094  00390E  0100               	movlb	0	; () banked
  7095  003910  6FD0               	movwf	sqrt@grs& (0+255),b
  7096  003912  0E00               	movlw	0
  7097  003914  6FD1               	movwf	(sqrt@grs+1)& (0+255),b
  7098  003916  0E00               	movlw	0
  7099  003918  6FD2               	movwf	(sqrt@grs+2)& (0+255),b
  7100  00391A  0E01               	movlw	1
  7101  00391C  6FD3               	movwf	(sqrt@grs+3)& (0+255),b
  7102                           
  7103                           ; BSR set to: 0
  7104  00391E  0100               	movlb	0	; () banked
  7105  003920  51CF               	movf	sqrt@p& (0+255),w,b
  7106  003922  0100               	movlb	0	; () banked
  7107  003924  B4D8               	btfsc	status,2,c
  7108  003926  D006               	goto	l7146
  7109                           
  7110                           ; BSR set to: 0
  7111  003928  0100               	movlb	0	; () banked
  7112  00392A  90D8               	bcf	status,0,c
  7113  00392C  37CB               	rlcf	sqrt@tfrac& (0+255),f,b
  7114  00392E  37CC               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7115  003930  37CD               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7116  003932  37CE               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7117  003934                     l7146:
  7118                           
  7119                           ; BSR set to: 0
  7120  003934  0E00               	movlw	0
  7121  003936  0100               	movlb	0	; () banked
  7122  003938  6FCA               	movwf	sqrt@i& (0+255),b
  7123  00393A  D07E               	goto	l7160
  7124  00393C                     l7148:
  7125                           
  7126                           ; BSR set to: 0
  7127  00393C  0100               	movlb	0	; () banked
  7128  00393E  51D0               	movf	sqrt@grs& (0+255),w,b
  7129  003940  0100               	movlb	0	; () banked
  7130  003942  13DA               	iorwf	sqrt@frac& (0+255),f,b
  7131  003944  0100               	movlb	0	; () banked
  7132  003946  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7133  003948  0100               	movlb	0	; () banked
  7134  00394A  13DB               	iorwf	(sqrt@frac+1)& (0+255),f,b
  7135  00394C  0100               	movlb	0	; () banked
  7136  00394E  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7137  003950  0100               	movlb	0	; () banked
  7138  003952  13DC               	iorwf	(sqrt@frac+2)& (0+255),f,b
  7139  003954  0100               	movlb	0	; () banked
  7140  003956  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7141  003958  0100               	movlb	0	; () banked
  7142  00395A  13DD               	iorwf	(sqrt@frac+3)& (0+255),f,b
  7143  00395C  0100               	movlb	0	; () banked
  7144  00395E  51DA               	movf	sqrt@frac& (0+255),w,b
  7145  003960  0100               	movlb	0	; () banked
  7146  003962  5DCB               	subwf	sqrt@tfrac& (0+255),w,b
  7147  003964  0100               	movlb	0	; () banked
  7148  003966  51DB               	movf	(sqrt@frac+1)& (0+255),w,b
  7149  003968  0100               	movlb	0	; () banked
  7150  00396A  59CC               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  7151  00396C  0100               	movlb	0	; () banked
  7152  00396E  51DC               	movf	(sqrt@frac+2)& (0+255),w,b
  7153  003970  0100               	movlb	0	; () banked
  7154  003972  59CD               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  7155  003974  0100               	movlb	0	; () banked
  7156  003976  51DD               	movf	(sqrt@frac+3)& (0+255),w,b
  7157  003978  0100               	movlb	0	; () banked
  7158  00397A  59CE               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  7159  00397C  A0D8               	btfss	status,0,c
  7160  00397E  D021               	goto	l7152
  7161                           
  7162                           ; BSR set to: 0
  7163  003980  0100               	movlb	0	; () banked
  7164  003982  51DA               	movf	sqrt@frac& (0+255),w,b
  7165  003984  0100               	movlb	0	; () banked
  7166  003986  5FCB               	subwf	sqrt@tfrac& (0+255),f,b
  7167  003988  0100               	movlb	0	; () banked
  7168  00398A  51DB               	movf	(sqrt@frac+1)& (0+255),w,b
  7169  00398C  0100               	movlb	0	; () banked
  7170  00398E  5BCC               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  7171  003990  0100               	movlb	0	; () banked
  7172  003992  51DC               	movf	(sqrt@frac+2)& (0+255),w,b
  7173  003994  0100               	movlb	0	; () banked
  7174  003996  5BCD               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  7175  003998  0100               	movlb	0	; () banked
  7176  00399A  51DD               	movf	(sqrt@frac+3)& (0+255),w,b
  7177  00399C  0100               	movlb	0	; () banked
  7178  00399E  5BCE               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  7179  0039A0  0100               	movlb	0	; () banked
  7180  0039A2  51D0               	movf	sqrt@grs& (0+255),w,b
  7181  0039A4  0100               	movlb	0	; () banked
  7182  0039A6  27DA               	addwf	sqrt@frac& (0+255),f,b
  7183  0039A8  0100               	movlb	0	; () banked
  7184  0039AA  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7185  0039AC  0100               	movlb	0	; () banked
  7186  0039AE  23DB               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7187  0039B0  0100               	movlb	0	; () banked
  7188  0039B2  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7189  0039B4  0100               	movlb	0	; () banked
  7190  0039B6  23DC               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7191  0039B8  0100               	movlb	0	; () banked
  7192  0039BA  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7193  0039BC  0100               	movlb	0	; () banked
  7194  0039BE  23DD               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7195  0039C0  D01D               	goto	l7154
  7196  0039C2                     l7152:
  7197                           
  7198                           ; BSR set to: 0
  7199  0039C2  C0D0  F0C5         	movff	sqrt@grs,??_sqrt
  7200  0039C6  C0D1  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7201  0039CA  C0D2  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7202  0039CE  C0D3  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7203  0039D2  0100               	movlb	0	; () banked
  7204  0039D4  1FC5               	comf	??_sqrt& (0+255),f,b
  7205  0039D6  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  7206  0039D8  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  7207  0039DA  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  7208  0039DC  0100               	movlb	0	; () banked
  7209  0039DE  51C5               	movf	??_sqrt& (0+255),w,b
  7210  0039E0  0100               	movlb	0	; () banked
  7211  0039E2  17DA               	andwf	sqrt@frac& (0+255),f,b
  7212  0039E4  0100               	movlb	0	; () banked
  7213  0039E6  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  7214  0039E8  0100               	movlb	0	; () banked
  7215  0039EA  17DB               	andwf	(sqrt@frac+1)& (0+255),f,b
  7216  0039EC  0100               	movlb	0	; () banked
  7217  0039EE  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  7218  0039F0  0100               	movlb	0	; () banked
  7219  0039F2  17DC               	andwf	(sqrt@frac+2)& (0+255),f,b
  7220  0039F4  0100               	movlb	0	; () banked
  7221  0039F6  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  7222  0039F8  0100               	movlb	0	; () banked
  7223  0039FA  17DD               	andwf	(sqrt@frac+3)& (0+255),f,b
  7224  0039FC                     l7154:
  7225                           
  7226                           ; BSR set to: 0
  7227  0039FC  C0D0  F0C5         	movff	sqrt@grs,??_sqrt
  7228  003A00  C0D1  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7229  003A04  C0D2  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7230  003A08  C0D3  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7231  003A0C  0100               	movlb	0	; () banked
  7232  003A0E  90D8               	bcf	status,0,c
  7233  003A10  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7234  003A12  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7235  003A14  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7236  003A16  33C5               	rrcf	??_sqrt& (0+255),f,b
  7237  003A18  C0C5  F0D0         	movff	??_sqrt,sqrt@grs
  7238  003A1C  C0C6  F0D1         	movff	??_sqrt+1,sqrt@grs+1
  7239  003A20  C0C7  F0D2         	movff	??_sqrt+2,sqrt@grs+2
  7240  003A24  C0C8  F0D3         	movff	??_sqrt+3,sqrt@grs+3
  7241                           
  7242                           ; BSR set to: 0
  7243  003A28  0100               	movlb	0	; () banked
  7244  003A2A  90D8               	bcf	status,0,c
  7245  003A2C  37CB               	rlcf	sqrt@tfrac& (0+255),f,b
  7246  003A2E  37CC               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7247  003A30  37CD               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7248  003A32  37CE               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7249                           
  7250                           ; BSR set to: 0
  7251  003A34  0100               	movlb	0	; () banked
  7252  003A36  2BCA               	incf	sqrt@i& (0+255),f,b
  7253  003A38                     l7160:
  7254                           
  7255                           ; BSR set to: 0
  7256  003A38  0E18               	movlw	24
  7257  003A3A  0100               	movlb	0	; () banked
  7258  003A3C  65CA               	cpfsgt	sqrt@i& (0+255),b
  7259  003A3E  D77E               	goto	l7148
  7260                           
  7261                           ; BSR set to: 0
  7262                           
  7263                           ; BSR set to: 0
  7264  003A40  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7265  003A44  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7266  003A48  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7267  003A4C  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7268  003A50  0100               	movlb	0	; () banked
  7269  003A52  90D8               	bcf	status,0,c
  7270  003A54  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7271  003A56  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7272  003A58  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7273  003A5A  33C5               	rrcf	??_sqrt& (0+255),f,b
  7274  003A5C  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7275  003A60  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7276  003A64  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7277  003A68  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7278                           
  7279                           ; BSR set to: 0
  7280  003A6C  0E01               	movlw	1
  7281  003A6E  0100               	movlb	0	; () banked
  7282  003A70  15DA               	andwf	sqrt@frac& (0+255),w,b
  7283  003A72  0100               	movlb	0	; () banked
  7284  003A74  6FD0               	movwf	sqrt@grs& (0+255),b
  7285  003A76  0E00               	movlw	0
  7286  003A78  0100               	movlb	0	; () banked
  7287  003A7A  15DB               	andwf	(sqrt@frac+1)& (0+255),w,b
  7288  003A7C  0100               	movlb	0	; () banked
  7289  003A7E  6FD1               	movwf	(sqrt@grs+1)& (0+255),b
  7290  003A80  0E00               	movlw	0
  7291  003A82  0100               	movlb	0	; () banked
  7292  003A84  15DC               	andwf	(sqrt@frac+2)& (0+255),w,b
  7293  003A86  0100               	movlb	0	; () banked
  7294  003A88  6FD2               	movwf	(sqrt@grs+2)& (0+255),b
  7295  003A8A  0E00               	movlw	0
  7296  003A8C  0100               	movlb	0	; () banked
  7297  003A8E  15DD               	andwf	(sqrt@frac+3)& (0+255),w,b
  7298  003A90  0100               	movlb	0	; () banked
  7299  003A92  6FD3               	movwf	(sqrt@grs+3)& (0+255),b
  7300                           
  7301                           ; BSR set to: 0
  7302  003A94  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7303  003A98  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7304  003A9C  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7305  003AA0  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7306  003AA4  0100               	movlb	0	; () banked
  7307  003AA6  90D8               	bcf	status,0,c
  7308  003AA8  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7309  003AAA  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7310  003AAC  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7311  003AAE  33C5               	rrcf	??_sqrt& (0+255),f,b
  7312  003AB0  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7313  003AB4  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7314  003AB8  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7315  003ABC  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7316  003AC0  0100               	movlb	0	; () banked
  7317  003AC2  51D0               	movf	sqrt@grs& (0+255),w,b
  7318  003AC4  0100               	movlb	0	; () banked
  7319  003AC6  27DA               	addwf	sqrt@frac& (0+255),f,b
  7320  003AC8  0100               	movlb	0	; () banked
  7321  003ACA  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7322  003ACC  0100               	movlb	0	; () banked
  7323  003ACE  23DB               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7324  003AD0  0100               	movlb	0	; () banked
  7325  003AD2  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7326  003AD4  0100               	movlb	0	; () banked
  7327  003AD6  23DC               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7328  003AD8  0100               	movlb	0	; () banked
  7329  003ADA  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7330  003ADC  0100               	movlb	0	; () banked
  7331  003ADE  23DD               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7332                           
  7333                           ; BSR set to: 0
  7334  003AE0  0100               	movlb	0	; () banked
  7335  003AE2  A1DD               	btfss	(sqrt@frac+3)& (0+255),0,b
  7336  003AE4  D019               	goto	l7172
  7337                           
  7338                           ; BSR set to: 0
  7339  003AE6  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7340  003AEA  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7341  003AEE  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7342  003AF2  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7343  003AF6  0100               	movlb	0	; () banked
  7344  003AF8  90D8               	bcf	status,0,c
  7345  003AFA  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7346  003AFC  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7347  003AFE  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7348  003B00  33C5               	rrcf	??_sqrt& (0+255),f,b
  7349  003B02  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7350  003B06  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7351  003B0A  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7352  003B0E  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7353  003B12  0100               	movlb	0	; () banked
  7354  003B14  4BD4               	infsnz	sqrt@exp& (0+255),f,b
  7355  003B16  2BD5               	incf	(sqrt@exp+1)& (0+255),f,b
  7356  003B18                     l7172:
  7357                           
  7358                           ; BSR set to: 0
  7359  003B18  0EFF               	movlw	255
  7360  003B1A  0100               	movlb	0	; () banked
  7361  003B1C  15DA               	andwf	sqrt@frac& (0+255),w,b
  7362  003B1E  0100               	movlb	0	; () banked
  7363  003B20  6FD6               	movwf	sqrt@root& (0+255),b
  7364  003B22  0EFF               	movlw	255
  7365  003B24  0100               	movlb	0	; () banked
  7366  003B26  15DB               	andwf	(sqrt@frac+1)& (0+255),w,b
  7367  003B28  0100               	movlb	0	; () banked
  7368  003B2A  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  7369  003B2C  0E7F               	movlw	127
  7370  003B2E  0100               	movlb	0	; () banked
  7371  003B30  15DC               	andwf	(sqrt@frac+2)& (0+255),w,b
  7372  003B32  0100               	movlb	0	; () banked
  7373  003B34  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  7374  003B36  0E00               	movlw	0
  7375  003B38  0100               	movlb	0	; () banked
  7376  003B3A  15DD               	andwf	(sqrt@frac+3)& (0+255),w,b
  7377  003B3C  0100               	movlb	0	; () banked
  7378  003B3E  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7379                           
  7380                           ; BSR set to: 0
  7381  003B40  C0D4  F0CF         	movff	sqrt@exp,sqrt@p
  7382                           
  7383                           ; BSR set to: 0
  7384  003B44  0100               	movlb	0	; () banked
  7385  003B46  A1CF               	btfss	sqrt@p& (0+255),0,b
  7386  003B48  D002               	goto	l7180
  7387                           
  7388                           ; BSR set to: 0
  7389  003B4A  0100               	movlb	0	; () banked
  7390  003B4C  8FD8               	bsf	(sqrt@root+2)& (0+255),7,b
  7391  003B4E                     l7180:
  7392                           
  7393                           ; BSR set to: 0
  7394  003B4E  0100               	movlb	0	; () banked
  7395  003B50  90D8               	bcf	status,0,c
  7396  003B52  31CF               	rrcf	sqrt@p& (0+255),w,b
  7397  003B54  0100               	movlb	0	; () banked
  7398  003B56  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7399                           
  7400                           ; BSR set to: 0
  7401  003B58  0100               	movlb	0	; () banked
  7402  003B5A  9FD9               	bcf	(sqrt@root+3)& (0+255),7,b
  7403                           
  7404                           ; BSR set to: 0
  7405  003B5C  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  7406  003B60  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7407  003B64  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7408  003B68  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7409  003B6C  0012               	return	
  7410  003B6E                     __end_of_sqrt:
  7411                           	opt stack 0
  7412                           tblptru	equ	0xFF8
  7413                           tblptrh	equ	0xFF7
  7414                           tblptrl	equ	0xFF6
  7415                           tablat	equ	0xFF5
  7416                           postinc0	equ	0xFEE
  7417                           wreg	equ	0xFE8
  7418                           postdec1	equ	0xFE5
  7419                           fsr1l	equ	0xFE1
  7420                           indf2	equ	0xFDF
  7421                           postinc2	equ	0xFDE
  7422                           postdec2	equ	0xFDD
  7423                           fsr2h	equ	0xFDA
  7424                           fsr2l	equ	0xFD9
  7425                           status	equ	0xFD8
  7426                           
  7427 ;; *************** function _atan *****************
  7428 ;; Defined at:
  7429 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  f               4  113[BANK0 ] unsigned char 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;  val             4   13[BANK1 ] unsigned char 
  7434 ;;  val_squared     4    9[BANK1 ] unsigned char 
  7435 ;;  x               4    4[BANK1 ] unsigned char 
  7436 ;;  y               4    0[BANK1 ] unsigned char 
  7437 ;;  recip           1    8[BANK1 ] unsigned char 
  7438 ;; Return value:  Size  Location     Type
  7439 ;;                  4  113[BANK0 ] unsigned char 
  7440 ;; Registers used:
  7441 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7442 ;; Tracked objects:
  7443 ;;		On entry : 0/0
  7444 ;;		On exit  : 0/0
  7445 ;;		Unchanged: 0/0
  7446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7447 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7448 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7450 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7451 ;;Total ram usage:       21 bytes
  7452 ;; Hardware stack levels used:    1
  7453 ;; Hardware stack levels required when called:    6
  7454 ;; This function calls:
  7455 ;;		___fladd
  7456 ;;		___fldiv
  7457 ;;		___flge
  7458 ;;		___flmul
  7459 ;;		___flneg
  7460 ;;		_eval_poly
  7461 ;;		_fabs
  7462 ;; This function is called by:
  7463 ;;		_asin
  7464 ;; This function uses a non-reentrant model
  7465 ;;
  7466                           
  7467                           	psect	text18
  7468  004B82                     __ptext18:
  7469                           	opt stack 0
  7470  004B82                     _atan:
  7471                           	opt stack 21
  7472                           
  7473                           ;incstack = 0
  7474  004B82  C0D1  F0C1         	movff	atan@f,fabs@d
  7475  004B86  C0D2  F0C2         	movff	atan@f+1,fabs@d+1
  7476  004B8A  C0D3  F0C3         	movff	atan@f+2,fabs@d+2
  7477  004B8E  C0D4  F0C4         	movff	atan@f+3,fabs@d+3
  7478  004B92  EC34  F02F         	call	_fabs	;wreg free
  7479  004B96  C0C1  F19A         	movff	?_fabs,atan@val
  7480  004B9A  C0C2  F19B         	movff	?_fabs+1,atan@val+1
  7481  004B9E  C0C3  F19C         	movff	?_fabs+2,atan@val+2
  7482  004BA2  C0C4  F19D         	movff	?_fabs+3,atan@val+3
  7483  004BA6  0101               	movlb	1	; () banked
  7484  004BA8  519A               	movf	atan@val& (0+255),w,b
  7485  004BAA  0101               	movlb	1	; () banked
  7486  004BAC  119B               	iorwf	(atan@val+1)& (0+255),w,b
  7487  004BAE  0101               	movlb	1	; () banked
  7488  004BB0  119C               	iorwf	(atan@val+2)& (0+255),w,b
  7489  004BB2  0101               	movlb	1	; () banked
  7490  004BB4  119D               	iorwf	(atan@val+3)& (0+255),w,b
  7491  004BB6  A4D8               	btfss	status,2,c
  7492  004BB8  D00A               	goto	l7200
  7493                           
  7494                           ; BSR set to: 1
  7495  004BBA  0E00               	movlw	0
  7496  004BBC  0100               	movlb	0	; () banked
  7497  004BBE  6FD1               	movwf	?_atan& (0+255),b
  7498  004BC0  0E00               	movlw	0
  7499  004BC2  6FD2               	movwf	(?_atan+1)& (0+255),b
  7500  004BC4  0E00               	movlw	0
  7501  004BC6  6FD3               	movwf	(?_atan+2)& (0+255),b
  7502  004BC8  0E00               	movlw	0
  7503  004BCA  6FD4               	movwf	(?_atan+3)& (0+255),b
  7504                           
  7505                           ; BSR set to: 0
  7506  004BCC  0012               	return	
  7507  004BCE                     l7200:
  7508  004BCE  0E00               	movlw	0
  7509  004BD0  0100               	movlb	0	; () banked
  7510  004BD2  6FC5               	movwf	___flge@ff1& (0+255),b
  7511  004BD4  0E00               	movlw	0
  7512  004BD6  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  7513  004BD8  0E80               	movlw	128
  7514  004BDA  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  7515  004BDC  0E3F               	movlw	63
  7516  004BDE  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  7517  004BE0  C19A  F0C9         	movff	atan@val,___flge@ff2
  7518  004BE4  C19B  F0CA         	movff	atan@val+1,___flge@ff2+1
  7519  004BE8  C19C  F0CB         	movff	atan@val+2,___flge@ff2+2
  7520  004BEC  C19D  F0CC         	movff	atan@val+3,___flge@ff2+3
  7521  004BF0  EC8A  F029         	call	___flge	;wreg free
  7522  004BF4  0100               	movlb	0	; () banked
  7523  004BF6  B0D8               	btfsc	status,0,c
  7524  004BF8  D002               	goto	u9150
  7525  004BFA  0E01               	movlw	1
  7526  004BFC  D001               	goto	u9160
  7527  004BFE                     u9150:
  7528  004BFE  0E00               	movlw	0
  7529  004C00                     u9160:
  7530  004C00  0101               	movlb	1	; () banked
  7531  004C02  6F95               	movwf	atan@recip& (0+255),b
  7532  004C04  0101               	movlb	1	; () banked
  7533  004C06  5195               	movf	atan@recip& (0+255),w,b
  7534  004C08  B4D8               	btfsc	status,2,c
  7535  004C0A  D01B               	goto	l7204
  7536                           
  7537                           ; BSR set to: 1
  7538  004C0C  0E00               	movlw	0
  7539  004C0E  0100               	movlb	0	; () banked
  7540  004C10  6F77               	movwf	___fldiv@b& (0+255),b
  7541  004C12  0E00               	movlw	0
  7542  004C14  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7543  004C16  0E80               	movlw	128
  7544  004C18  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7545  004C1A  0E3F               	movlw	63
  7546  004C1C  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7547  004C1E  C19A  F07B         	movff	atan@val,___fldiv@a
  7548  004C22  C19B  F07C         	movff	atan@val+1,___fldiv@a+1
  7549  004C26  C19C  F07D         	movff	atan@val+2,___fldiv@a+2
  7550  004C2A  C19D  F07E         	movff	atan@val+3,___fldiv@a+3
  7551  004C2E  ECB7  F01D         	call	___fldiv	;wreg free
  7552  004C32  C077  F19A         	movff	?___fldiv,atan@val
  7553  004C36  C078  F19B         	movff	?___fldiv+1,atan@val+1
  7554  004C3A  C079  F19C         	movff	?___fldiv+2,atan@val+2
  7555  004C3E  C07A  F19D         	movff	?___fldiv+3,atan@val+3
  7556  004C42                     l7204:
  7557  004C42  C19A  F090         	movff	atan@val,___flmul@b
  7558  004C46  C19B  F091         	movff	atan@val+1,___flmul@b+1
  7559  004C4A  C19C  F092         	movff	atan@val+2,___flmul@b+2
  7560  004C4E  C19D  F093         	movff	atan@val+3,___flmul@b+3
  7561  004C52  C19A  F094         	movff	atan@val,___flmul@a
  7562  004C56  C19B  F095         	movff	atan@val+1,___flmul@a+1
  7563  004C5A  C19C  F096         	movff	atan@val+2,___flmul@a+2
  7564  004C5E  C19D  F097         	movff	atan@val+3,___flmul@a+3
  7565  004C62  EC91  F017         	call	___flmul	;wreg free
  7566  004C66  C090  F196         	movff	?___flmul,atan@val_squared
  7567  004C6A  C091  F197         	movff	?___flmul+1,atan@val_squared+1
  7568  004C6E  C092  F198         	movff	?___flmul+2,atan@val_squared+2
  7569  004C72  C093  F199         	movff	?___flmul+3,atan@val_squared+3
  7570  004C76  C196  F0BD         	movff	atan@val_squared,eval_poly@x
  7571  004C7A  C197  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7572  004C7E  C198  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7573  004C82  C199  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7574  004C86  0E19               	movlw	low atan@coeff_b
  7575  004C88  0100               	movlb	0	; () banked
  7576  004C8A  6FC1               	movwf	eval_poly@d& (0+255),b
  7577  004C8C  0E0D               	movlw	high atan@coeff_b
  7578  004C8E  0100               	movlb	0	; () banked
  7579  004C90  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7580  004C92  0E00               	movlw	0
  7581  004C94  0100               	movlb	0	; () banked
  7582  004C96  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7583  004C98  0E04               	movlw	4
  7584  004C9A  6FC3               	movwf	eval_poly@n& (0+255),b
  7585  004C9C  EC7F  F02B         	call	_eval_poly	;wreg free
  7586  004CA0  C0BD  F18D         	movff	?_eval_poly,atan@y
  7587  004CA4  C0BE  F18E         	movff	?_eval_poly+1,atan@y+1
  7588  004CA8  C0BF  F18F         	movff	?_eval_poly+2,atan@y+2
  7589  004CAC  C0C0  F190         	movff	?_eval_poly+3,atan@y+3
  7590  004CB0  C196  F0BD         	movff	atan@val_squared,eval_poly@x
  7591  004CB4  C197  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7592  004CB8  C198  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7593  004CBC  C199  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7594  004CC0  0E01               	movlw	low atan@coeff_a
  7595  004CC2  0100               	movlb	0	; () banked
  7596  004CC4  6FC1               	movwf	eval_poly@d& (0+255),b
  7597  004CC6  0E0D               	movlw	high atan@coeff_a
  7598  004CC8  0100               	movlb	0	; () banked
  7599  004CCA  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7600  004CCC  0E00               	movlw	0
  7601  004CCE  0100               	movlb	0	; () banked
  7602  004CD0  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7603  004CD2  0E05               	movlw	5
  7604  004CD4  6FC3               	movwf	eval_poly@n& (0+255),b
  7605  004CD6  EC7F  F02B         	call	_eval_poly	;wreg free
  7606  004CDA  C0BD  F191         	movff	?_eval_poly,atan@x
  7607  004CDE  C0BE  F192         	movff	?_eval_poly+1,atan@x+1
  7608  004CE2  C0BF  F193         	movff	?_eval_poly+2,atan@x+2
  7609  004CE6  C0C0  F194         	movff	?_eval_poly+3,atan@x+3
  7610  004CEA  C19A  F090         	movff	atan@val,___flmul@b
  7611  004CEE  C19B  F091         	movff	atan@val+1,___flmul@b+1
  7612  004CF2  C19C  F092         	movff	atan@val+2,___flmul@b+2
  7613  004CF6  C19D  F093         	movff	atan@val+3,___flmul@b+3
  7614  004CFA  C18D  F07B         	movff	atan@y,___fldiv@a
  7615  004CFE  C18E  F07C         	movff	atan@y+1,___fldiv@a+1
  7616  004D02  C18F  F07D         	movff	atan@y+2,___fldiv@a+2
  7617  004D06  C190  F07E         	movff	atan@y+3,___fldiv@a+3
  7618  004D0A  C191  F077         	movff	atan@x,___fldiv@b
  7619  004D0E  C192  F078         	movff	atan@x+1,___fldiv@b+1
  7620  004D12  C193  F079         	movff	atan@x+2,___fldiv@b+2
  7621  004D16  C194  F07A         	movff	atan@x+3,___fldiv@b+3
  7622  004D1A  ECB7  F01D         	call	___fldiv	;wreg free
  7623  004D1E  C077  F094         	movff	?___fldiv,___flmul@a
  7624  004D22  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  7625  004D26  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  7626  004D2A  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  7627  004D2E  EC91  F017         	call	___flmul	;wreg free
  7628  004D32  C090  F19A         	movff	?___flmul,atan@val
  7629  004D36  C091  F19B         	movff	?___flmul+1,atan@val+1
  7630  004D3A  C092  F19C         	movff	?___flmul+2,atan@val+2
  7631  004D3E  C093  F19D         	movff	?___flmul+3,atan@val+3
  7632  004D42  0101               	movlb	1	; () banked
  7633  004D44  5195               	movf	atan@recip& (0+255),w,b
  7634  004D46  0101               	movlb	1	; () banked
  7635  004D48  B4D8               	btfsc	status,2,c
  7636  004D4A  D025               	goto	l7216
  7637                           
  7638                           ; BSR set to: 1
  7639  004D4C  C19A  F0BD         	movff	atan@val,___flneg@f1
  7640  004D50  C19B  F0BE         	movff	atan@val+1,___flneg@f1+1
  7641  004D54  C19C  F0BF         	movff	atan@val+2,___flneg@f1+2
  7642  004D58  C19D  F0C0         	movff	atan@val+3,___flneg@f1+3
  7643  004D5C  EC53  F02F         	call	___flneg	;wreg free
  7644  004D60  C0BD  F0A9         	movff	?___flneg,___fladd@b
  7645  004D64  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  7646  004D68  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  7647  004D6C  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  7648  004D70  0EDB               	movlw	219
  7649  004D72  0100               	movlb	0	; () banked
  7650  004D74  6FAD               	movwf	___fladd@a& (0+255),b
  7651  004D76  0E0F               	movlw	15
  7652  004D78  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  7653  004D7A  0EC9               	movlw	201
  7654  004D7C  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  7655  004D7E  0E3F               	movlw	63
  7656  004D80  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  7657  004D82  EC3D  F015         	call	___fladd	;wreg free
  7658  004D86  C0A9  F19A         	movff	?___fladd,atan@val
  7659  004D8A  C0AA  F19B         	movff	?___fladd+1,atan@val+1
  7660  004D8E  C0AB  F19C         	movff	?___fladd+2,atan@val+2
  7661  004D92  C0AC  F19D         	movff	?___fladd+3,atan@val+3
  7662  004D96                     l7216:
  7663  004D96  0100               	movlb	0	; () banked
  7664  004D98  BFD4               	btfsc	(atan@f+3)& (0+255),7,b
  7665  004D9A  D009               	goto	l7220
  7666                           
  7667                           ; BSR set to: 0
  7668  004D9C  C19A  F0D1         	movff	atan@val,?_atan
  7669  004DA0  C19B  F0D2         	movff	atan@val+1,?_atan+1
  7670  004DA4  C19C  F0D3         	movff	atan@val+2,?_atan+2
  7671  004DA8  C19D  F0D4         	movff	atan@val+3,?_atan+3
  7672  004DAC  0012               	return	
  7673  004DAE                     l7220:
  7674                           
  7675                           ; BSR set to: 0
  7676  004DAE  C19A  F0BD         	movff	atan@val,___flneg@f1
  7677  004DB2  C19B  F0BE         	movff	atan@val+1,___flneg@f1+1
  7678  004DB6  C19C  F0BF         	movff	atan@val+2,___flneg@f1+2
  7679  004DBA  C19D  F0C0         	movff	atan@val+3,___flneg@f1+3
  7680  004DBE  EC53  F02F         	call	___flneg	;wreg free
  7681  004DC2  C0BD  F0D1         	movff	?___flneg,?_atan
  7682  004DC6  C0BE  F0D2         	movff	?___flneg+1,?_atan+1
  7683  004DCA  C0BF  F0D3         	movff	?___flneg+2,?_atan+2
  7684  004DCE  C0C0  F0D4         	movff	?___flneg+3,?_atan+3
  7685  004DD2  0012               	return	
  7686  004DD4                     __end_of_atan:
  7687                           	opt stack 0
  7688                           tblptru	equ	0xFF8
  7689                           tblptrh	equ	0xFF7
  7690                           tblptrl	equ	0xFF6
  7691                           tablat	equ	0xFF5
  7692                           postinc0	equ	0xFEE
  7693                           wreg	equ	0xFE8
  7694                           postdec1	equ	0xFE5
  7695                           fsr1l	equ	0xFE1
  7696                           indf2	equ	0xFDF
  7697                           postinc2	equ	0xFDE
  7698                           postdec2	equ	0xFDD
  7699                           fsr2h	equ	0xFDA
  7700                           fsr2l	equ	0xFD9
  7701                           status	equ	0xFD8
  7702                           
  7703 ;; *************** function _fabs *****************
  7704 ;; Defined at:
  7705 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  7706 ;; Parameters:    Size  Location     Type
  7707 ;;  d               4   97[BANK0 ] unsigned char 
  7708 ;; Auto vars:     Size  Location     Type
  7709 ;;		None
  7710 ;; Return value:  Size  Location     Type
  7711 ;;                  4   97[BANK0 ] unsigned char 
  7712 ;; Registers used:
  7713 ;;		wreg, status,2, status,0, cstack
  7714 ;; Tracked objects:
  7715 ;;		On entry : 0/0
  7716 ;;		On exit  : 0/0
  7717 ;;		Unchanged: 0/0
  7718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7719 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7722 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7723 ;;Total ram usage:        4 bytes
  7724 ;; Hardware stack levels used:    1
  7725 ;; Hardware stack levels required when called:    5
  7726 ;; This function calls:
  7727 ;;		___flneg
  7728 ;; This function is called by:
  7729 ;;		_asin
  7730 ;;		_atan
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text19
  7735  005E68                     __ptext19:
  7736                           	opt stack 0
  7737  005E68                     _fabs:
  7738                           	opt stack 22
  7739                           
  7740                           ;incstack = 0
  7741  005E68  0100               	movlb	0	; () banked
  7742  005E6A  AFC4               	btfss	(fabs@d+3)& (0+255),7,b
  7743  005E6C  D013               	goto	l1052
  7744                           
  7745                           ; BSR set to: 0
  7746  005E6E  C0C1  F0BD         	movff	fabs@d,___flneg@f1
  7747  005E72  C0C2  F0BE         	movff	fabs@d+1,___flneg@f1+1
  7748  005E76  C0C3  F0BF         	movff	fabs@d+2,___flneg@f1+2
  7749  005E7A  C0C4  F0C0         	movff	fabs@d+3,___flneg@f1+3
  7750  005E7E  EC53  F02F         	call	___flneg	;wreg free
  7751  005E82  C0BD  F0C1         	movff	?___flneg,?_fabs
  7752  005E86  C0BE  F0C2         	movff	?___flneg+1,?_fabs+1
  7753  005E8A  C0BF  F0C3         	movff	?___flneg+2,?_fabs+2
  7754  005E8E  C0C0  F0C4         	movff	?___flneg+3,?_fabs+3
  7755  005E92  0012               	return	
  7756  005E94                     l1052:
  7757                           
  7758                           ; BSR set to: 0
  7759  005E94  C0C1  F0C1         	movff	fabs@d,?_fabs
  7760  005E98  C0C2  F0C2         	movff	fabs@d+1,?_fabs+1
  7761  005E9C  C0C3  F0C3         	movff	fabs@d+2,?_fabs+2
  7762  005EA0  C0C4  F0C4         	movff	fabs@d+3,?_fabs+3
  7763  005EA4  0012               	return		;funcret
  7764  005EA6                     __end_of_fabs:
  7765                           	opt stack 0
  7766                           tblptru	equ	0xFF8
  7767                           tblptrh	equ	0xFF7
  7768                           tblptrl	equ	0xFF6
  7769                           tablat	equ	0xFF5
  7770                           postinc0	equ	0xFEE
  7771                           wreg	equ	0xFE8
  7772                           postdec1	equ	0xFE5
  7773                           fsr1l	equ	0xFE1
  7774                           indf2	equ	0xFDF
  7775                           postinc2	equ	0xFDE
  7776                           postdec2	equ	0xFDD
  7777                           fsr2h	equ	0xFDA
  7778                           fsr2l	equ	0xFD9
  7779                           status	equ	0xFD8
  7780                           
  7781 ;; *************** function ___flneg *****************
  7782 ;; Defined at:
  7783 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;  f1              4   93[BANK0 ] unsigned char 
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;		None
  7788 ;; Return value:  Size  Location     Type
  7789 ;;                  4   93[BANK0 ] unsigned char 
  7790 ;; Registers used:
  7791 ;;		wreg, status,2, status,0
  7792 ;; Tracked objects:
  7793 ;;		On entry : 0/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7797 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7800 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7801 ;;Total ram usage:        4 bytes
  7802 ;; Hardware stack levels used:    1
  7803 ;; Hardware stack levels required when called:    4
  7804 ;; This function calls:
  7805 ;;		Nothing
  7806 ;; This function is called by:
  7807 ;;		_park_routine
  7808 ;;		_matematica
  7809 ;;		_asin
  7810 ;;		_atan
  7811 ;;		_fabs
  7812 ;;		_sin
  7813 ;; This function uses a non-reentrant model
  7814 ;;
  7815                           
  7816                           	psect	text20
  7817  005EA6                     __ptext20:
  7818                           	opt stack 0
  7819  005EA6                     ___flneg:
  7820                           	opt stack 22
  7821                           
  7822                           ;incstack = 0
  7823  005EA6  0100               	movlb	0	; () banked
  7824  005EA8  51BD               	movf	___flneg@f1& (0+255),w,b
  7825  005EAA  0100               	movlb	0	; () banked
  7826  005EAC  11BE               	iorwf	(___flneg@f1+1)& (0+255),w,b
  7827  005EAE  0100               	movlb	0	; () banked
  7828  005EB0  11BF               	iorwf	(___flneg@f1+2)& (0+255),w,b
  7829  005EB2  0100               	movlb	0	; () banked
  7830  005EB4  11C0               	iorwf	(___flneg@f1+3)& (0+255),w,b
  7831  005EB6  B4D8               	btfsc	status,2,c
  7832  005EB8  D009               	goto	l6564
  7833                           
  7834                           ; BSR set to: 0
  7835  005EBA  0E00               	movlw	0
  7836  005EBC  0100               	movlb	0	; () banked
  7837  005EBE  1BBD               	xorwf	___flneg@f1& (0+255),f,b
  7838  005EC0  0E00               	movlw	0
  7839  005EC2  1BBE               	xorwf	(___flneg@f1+1)& (0+255),f,b
  7840  005EC4  0E00               	movlw	0
  7841  005EC6  1BBF               	xorwf	(___flneg@f1+2)& (0+255),f,b
  7842  005EC8  0E80               	movlw	128
  7843  005ECA  1BC0               	xorwf	(___flneg@f1+3)& (0+255),f,b
  7844  005ECC                     l6564:
  7845                           
  7846                           ; BSR set to: 0
  7847  005ECC  C0BD  F0BD         	movff	___flneg@f1,?___flneg
  7848  005ED0  C0BE  F0BE         	movff	___flneg@f1+1,?___flneg+1
  7849  005ED4  C0BF  F0BF         	movff	___flneg@f1+2,?___flneg+2
  7850  005ED8  C0C0  F0C0         	movff	___flneg@f1+3,?___flneg+3
  7851  005EDC  0012               	return	
  7852  005EDE                     __end_of___flneg:
  7853                           	opt stack 0
  7854                           tblptru	equ	0xFF8
  7855                           tblptrh	equ	0xFF7
  7856                           tblptrl	equ	0xFF6
  7857                           tablat	equ	0xFF5
  7858                           postinc0	equ	0xFEE
  7859                           wreg	equ	0xFE8
  7860                           postdec1	equ	0xFE5
  7861                           fsr1l	equ	0xFE1
  7862                           indf2	equ	0xFDF
  7863                           postinc2	equ	0xFDE
  7864                           postdec2	equ	0xFDD
  7865                           fsr2h	equ	0xFDA
  7866                           fsr2l	equ	0xFD9
  7867                           status	equ	0xFD8
  7868                           
  7869 ;; *************** function _eval_poly *****************
  7870 ;; Defined at:
  7871 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  7872 ;; Parameters:    Size  Location     Type
  7873 ;;  x               4   93[BANK0 ] unsigned char 
  7874 ;;  d               2   97[BANK0 ] PTR const 
  7875 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
  7876 ;;  n               2   99[BANK0 ] int 
  7877 ;; Auto vars:     Size  Location     Type
  7878 ;;  res             4  105[BANK0 ] int 
  7879 ;; Return value:  Size  Location     Type
  7880 ;;                  4   93[BANK0 ] int 
  7881 ;; Registers used:
  7882 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7883 ;; Tracked objects:
  7884 ;;		On entry : 0/0
  7885 ;;		On exit  : 0/0
  7886 ;;		Unchanged: 0/0
  7887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7888 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7889 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7890 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7891 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7892 ;;Total ram usage:       16 bytes
  7893 ;; Hardware stack levels used:    1
  7894 ;; Hardware stack levels required when called:    5
  7895 ;; This function calls:
  7896 ;;		___fladd
  7897 ;;		___flmul
  7898 ;; This function is called by:
  7899 ;;		_atan
  7900 ;;		_sin
  7901 ;; This function uses a non-reentrant model
  7902 ;;
  7903                           
  7904                           	psect	text21
  7905  0056FE                     __ptext21:
  7906                           	opt stack 0
  7907  0056FE                     _eval_poly:
  7908                           	opt stack 21
  7909                           
  7910                           ; BSR set to: 0
  7911                           ;incstack = 0
  7912  0056FE  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  7913  005702  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  7914  005706  0100               	movlb	0	; () banked
  7915  005708  90D8               	bcf	status,0,c
  7916  00570A  37C5               	rlcf	??_eval_poly& (0+255),f,b
  7917  00570C  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  7918  00570E  0100               	movlb	0	; () banked
  7919  005710  90D8               	bcf	status,0,c
  7920  005712  37C5               	rlcf	??_eval_poly& (0+255),f,b
  7921  005714  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  7922  005716  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  7923  00571A  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  7924  00571E  0100               	movlb	0	; () banked
  7925  005720  51C5               	movf	??_eval_poly& (0+255),w,b
  7926  005722  0100               	movlb	0	; () banked
  7927  005724  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  7928  005726  0100               	movlb	0	; () banked
  7929  005728  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  7930  00572A  0100               	movlb	0	; () banked
  7931  00572C  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  7932  00572E  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  7933  005732  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  7934  005736                     	if	0	;tblptru may be non-zero
  7935  005736                     	endif
  7936  005736                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7937  005736  0E00               	movlw	low (__mediumconst shr (0+16))
  7938  005738  6EF8               	movwf	tblptru,c
  7939  00573A                     	endif
  7940  00573A  0009               	tblrd		*+
  7941  00573C  CFF5 F0C9          	movff	tablat,eval_poly@res
  7942  005740  0009               	tblrd		*+
  7943  005742  CFF5 F0CA          	movff	tablat,eval_poly@res+1
  7944  005746  0009               	tblrd		*+
  7945  005748  CFF5 F0CB          	movff	tablat,eval_poly@res+2
  7946  00574C  000A               	tblrd		*-
  7947  00574E  CFF5 F0CC          	movff	tablat,eval_poly@res+3
  7948  005752  D052               	goto	l6822
  7949  005754                     l6820:
  7950                           
  7951                           ; BSR set to: 0
  7952  005754  C0C9  F094         	movff	eval_poly@res,___flmul@a
  7953  005758  C0CA  F095         	movff	eval_poly@res+1,___flmul@a+1
  7954  00575C  C0CB  F096         	movff	eval_poly@res+2,___flmul@a+2
  7955  005760  C0CC  F097         	movff	eval_poly@res+3,___flmul@a+3
  7956  005764  C0BD  F090         	movff	eval_poly@x,___flmul@b
  7957  005768  C0BE  F091         	movff	eval_poly@x+1,___flmul@b+1
  7958  00576C  C0BF  F092         	movff	eval_poly@x+2,___flmul@b+2
  7959  005770  C0C0  F093         	movff	eval_poly@x+3,___flmul@b+3
  7960  005774  EC91  F017         	call	___flmul	;wreg free
  7961  005778  C090  F0A9         	movff	?___flmul,___fladd@b
  7962  00577C  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  7963  005780  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  7964  005784  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  7965  005788  0100               	movlb	0	; () banked
  7966  00578A  07C3               	decf	eval_poly@n& (0+255),f,b
  7967  00578C  A0D8               	btfss	status,0,c
  7968  00578E  07C4               	decf	(eval_poly@n+1)& (0+255),f,b
  7969  005790  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  7970  005794  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  7971  005798  0100               	movlb	0	; () banked
  7972  00579A  90D8               	bcf	status,0,c
  7973  00579C  37C5               	rlcf	??_eval_poly& (0+255),f,b
  7974  00579E  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  7975  0057A0  0100               	movlb	0	; () banked
  7976  0057A2  90D8               	bcf	status,0,c
  7977  0057A4  37C5               	rlcf	??_eval_poly& (0+255),f,b
  7978  0057A6  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  7979  0057A8  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  7980  0057AC  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  7981  0057B0  0100               	movlb	0	; () banked
  7982  0057B2  51C5               	movf	??_eval_poly& (0+255),w,b
  7983  0057B4  0100               	movlb	0	; () banked
  7984  0057B6  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  7985  0057B8  0100               	movlb	0	; () banked
  7986  0057BA  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  7987  0057BC  0100               	movlb	0	; () banked
  7988  0057BE  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  7989  0057C0  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  7990  0057C4  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  7991  0057C8                     	if	0	;tblptru may be non-zero
  7992  0057C8                     	endif
  7993  0057C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7994  0057C8  0E00               	movlw	low (__mediumconst shr (0+16))
  7995  0057CA  6EF8               	movwf	tblptru,c
  7996  0057CC                     	endif
  7997  0057CC  0009               	tblrd		*+
  7998  0057CE  CFF5 F0AD          	movff	tablat,___fladd@a
  7999  0057D2  0009               	tblrd		*+
  8000  0057D4  CFF5 F0AE          	movff	tablat,___fladd@a+1
  8001  0057D8  0009               	tblrd		*+
  8002  0057DA  CFF5 F0AF          	movff	tablat,___fladd@a+2
  8003  0057DE  000A               	tblrd		*-
  8004  0057E0  CFF5 F0B0          	movff	tablat,___fladd@a+3
  8005  0057E4  EC3D  F015         	call	___fladd	;wreg free
  8006  0057E8  C0A9  F0C9         	movff	?___fladd,eval_poly@res
  8007  0057EC  C0AA  F0CA         	movff	?___fladd+1,eval_poly@res+1
  8008  0057F0  C0AB  F0CB         	movff	?___fladd+2,eval_poly@res+2
  8009  0057F4  C0AC  F0CC         	movff	?___fladd+3,eval_poly@res+3
  8010  0057F8                     l6822:
  8011  0057F8  0100               	movlb	0	; () banked
  8012  0057FA  51C3               	movf	eval_poly@n& (0+255),w,b
  8013  0057FC  0100               	movlb	0	; () banked
  8014  0057FE  11C4               	iorwf	(eval_poly@n+1)& (0+255),w,b
  8015  005800  A4D8               	btfss	status,2,c
  8016  005802  D7A8               	goto	l6820
  8017                           
  8018                           ; BSR set to: 0
  8019  005804  C0C9  F0BD         	movff	eval_poly@res,?_eval_poly
  8020  005808  C0CA  F0BE         	movff	eval_poly@res+1,?_eval_poly+1
  8021  00580C  C0CB  F0BF         	movff	eval_poly@res+2,?_eval_poly+2
  8022  005810  C0CC  F0C0         	movff	eval_poly@res+3,?_eval_poly+3
  8023                           
  8024                           ; BSR set to: 0
  8025  005814  0012               	return		;funcret
  8026  005816                     __end_of_eval_poly:
  8027                           	opt stack 0
  8028                           tblptru	equ	0xFF8
  8029                           tblptrh	equ	0xFF7
  8030                           tblptrl	equ	0xFF6
  8031                           tablat	equ	0xFF5
  8032                           postinc0	equ	0xFEE
  8033                           wreg	equ	0xFE8
  8034                           postdec1	equ	0xFE5
  8035                           fsr1l	equ	0xFE1
  8036                           indf2	equ	0xFDF
  8037                           postinc2	equ	0xFDE
  8038                           postdec2	equ	0xFDD
  8039                           fsr2h	equ	0xFDA
  8040                           fsr2l	equ	0xFD9
  8041                           status	equ	0xFD8
  8042                           
  8043 ;; *************** function ___flmul *****************
  8044 ;; Defined at:
  8045 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;  b               4   48[BANK0 ] int 
  8048 ;;  a               4   52[BANK0 ] int 
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;  prod            4   67[BANK0 ] struct .
  8051 ;;  grs             4   62[BANK0 ] unsigned long 
  8052 ;;  temp            2   71[BANK0 ] struct .
  8053 ;;  bexp            1   66[BANK0 ] unsigned char 
  8054 ;;  aexp            1   61[BANK0 ] unsigned char 
  8055 ;;  sign            1   60[BANK0 ] unsigned char 
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  4   48[BANK0 ] unsigned char 
  8058 ;; Registers used:
  8059 ;;		wreg, status,2, status,0, prodl, prodh
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8065 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8066 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8067 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8068 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8069 ;;Total ram usage:       25 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; Hardware stack levels required when called:    4
  8072 ;; This function calls:
  8073 ;;		Nothing
  8074 ;; This function is called by:
  8075 ;;		_parallelo
  8076 ;;		_matematica
  8077 ;;		_asin
  8078 ;;		_atan
  8079 ;;		_eval_poly
  8080 ;;		_sin
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084                           	psect	text22
  8085  002F22                     __ptext22:
  8086                           	opt stack 0
  8087  002F22                     ___flmul:
  8088                           	opt stack 21
  8089                           
  8090                           ; BSR set to: 0
  8091                           ;incstack = 0
  8092  002F22  0100               	movlb	0	; () banked
  8093  002F24  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8094  002F26  0B80               	andlw	128
  8095  002F28  0100               	movlb	0	; () banked
  8096  002F2A  6F9C               	movwf	___flmul@sign& (0+255),b
  8097  002F2C  0100               	movlb	0	; () banked
  8098  002F2E  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8099  002F30  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  8100  002F32  0100               	movlb	0	; () banked
  8101  002F34  6FA2               	movwf	___flmul@bexp& (0+255),b
  8102                           
  8103                           ; BSR set to: 0
  8104  002F36  0100               	movlb	0	; () banked
  8105  002F38  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  8106  002F3A  D002               	goto	l6414
  8107                           
  8108                           ; BSR set to: 0
  8109  002F3C  0100               	movlb	0	; () banked
  8110  002F3E  81A2               	bsf	___flmul@bexp& (0+255),0,b
  8111  002F40                     l6414:
  8112                           
  8113                           ; BSR set to: 0
  8114  002F40  0100               	movlb	0	; () banked
  8115  002F42  51A2               	movf	___flmul@bexp& (0+255),w,b
  8116  002F44  0100               	movlb	0	; () banked
  8117  002F46  B4D8               	btfsc	status,2,c
  8118  002F48  D010               	goto	l6422
  8119                           
  8120                           ; BSR set to: 0
  8121  002F4A  0100               	movlb	0	; () banked
  8122  002F4C  29A2               	incf	___flmul@bexp& (0+255),w,b
  8123  002F4E  A4D8               	btfss	status,2,c
  8124  002F50  D009               	goto	l6420
  8125                           
  8126                           ; BSR set to: 0
  8127  002F52  0E00               	movlw	0
  8128  002F54  0100               	movlb	0	; () banked
  8129  002F56  6F90               	movwf	___flmul@b& (0+255),b
  8130  002F58  0E00               	movlw	0
  8131  002F5A  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8132  002F5C  0E00               	movlw	0
  8133  002F5E  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8134  002F60  0E00               	movlw	0
  8135  002F62  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8136  002F64                     l6420:
  8137                           
  8138                           ; BSR set to: 0
  8139  002F64  0100               	movlb	0	; () banked
  8140  002F66  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  8141  002F68  D009               	goto	l6424
  8142  002F6A                     l6422:
  8143                           
  8144                           ; BSR set to: 0
  8145  002F6A  0E00               	movlw	0
  8146  002F6C  0100               	movlb	0	; () banked
  8147  002F6E  6F90               	movwf	___flmul@b& (0+255),b
  8148  002F70  0E00               	movlw	0
  8149  002F72  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8150  002F74  0E00               	movlw	0
  8151  002F76  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8152  002F78  0E00               	movlw	0
  8153  002F7A  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8154  002F7C                     l6424:
  8155                           
  8156                           ; BSR set to: 0
  8157  002F7C  0100               	movlb	0	; () banked
  8158  002F7E  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8159  002F80  0B80               	andlw	128
  8160  002F82  0100               	movlb	0	; () banked
  8161  002F84  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  8162                           
  8163                           ; BSR set to: 0
  8164  002F86  0100               	movlb	0	; () banked
  8165  002F88  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8166  002F8A  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  8167  002F8C  0100               	movlb	0	; () banked
  8168  002F8E  6F9D               	movwf	___flmul@aexp& (0+255),b
  8169                           
  8170                           ; BSR set to: 0
  8171  002F90  0100               	movlb	0	; () banked
  8172  002F92  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  8173  002F94  D002               	goto	l6432
  8174                           
  8175                           ; BSR set to: 0
  8176  002F96  0100               	movlb	0	; () banked
  8177  002F98  819D               	bsf	___flmul@aexp& (0+255),0,b
  8178  002F9A                     l6432:
  8179                           
  8180                           ; BSR set to: 0
  8181  002F9A  0100               	movlb	0	; () banked
  8182  002F9C  519D               	movf	___flmul@aexp& (0+255),w,b
  8183  002F9E  0100               	movlb	0	; () banked
  8184  002FA0  B4D8               	btfsc	status,2,c
  8185  002FA2  D010               	goto	l6440
  8186                           
  8187                           ; BSR set to: 0
  8188  002FA4  0100               	movlb	0	; () banked
  8189  002FA6  299D               	incf	___flmul@aexp& (0+255),w,b
  8190  002FA8  A4D8               	btfss	status,2,c
  8191  002FAA  D009               	goto	l6438
  8192                           
  8193                           ; BSR set to: 0
  8194  002FAC  0E00               	movlw	0
  8195  002FAE  0100               	movlb	0	; () banked
  8196  002FB0  6F94               	movwf	___flmul@a& (0+255),b
  8197  002FB2  0E00               	movlw	0
  8198  002FB4  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8199  002FB6  0E00               	movlw	0
  8200  002FB8  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8201  002FBA  0E00               	movlw	0
  8202  002FBC  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8203  002FBE                     l6438:
  8204                           
  8205                           ; BSR set to: 0
  8206  002FBE  0100               	movlb	0	; () banked
  8207  002FC0  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  8208  002FC2  D009               	goto	l1397
  8209  002FC4                     l6440:
  8210                           
  8211                           ; BSR set to: 0
  8212  002FC4  0E00               	movlw	0
  8213  002FC6  0100               	movlb	0	; () banked
  8214  002FC8  6F94               	movwf	___flmul@a& (0+255),b
  8215  002FCA  0E00               	movlw	0
  8216  002FCC  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8217  002FCE  0E00               	movlw	0
  8218  002FD0  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8219  002FD2  0E00               	movlw	0
  8220  002FD4  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8221  002FD6                     l1397:
  8222                           
  8223                           ; BSR set to: 0
  8224  002FD6  0100               	movlb	0	; () banked
  8225  002FD8  519D               	movf	___flmul@aexp& (0+255),w,b
  8226  002FDA  0100               	movlb	0	; () banked
  8227  002FDC  B4D8               	btfsc	status,2,c
  8228  002FDE  D005               	goto	l6444
  8229                           
  8230                           ; BSR set to: 0
  8231  002FE0  0100               	movlb	0	; () banked
  8232  002FE2  51A2               	movf	___flmul@bexp& (0+255),w,b
  8233  002FE4  0100               	movlb	0	; () banked
  8234  002FE6  A4D8               	btfss	status,2,c
  8235  002FE8  D00A               	goto	l6448
  8236  002FEA                     l6444:
  8237                           
  8238                           ; BSR set to: 0
  8239  002FEA  0E00               	movlw	0
  8240  002FEC  0100               	movlb	0	; () banked
  8241  002FEE  6F90               	movwf	?___flmul& (0+255),b
  8242  002FF0  0E00               	movlw	0
  8243  002FF2  6F91               	movwf	(?___flmul+1)& (0+255),b
  8244  002FF4  0E00               	movlw	0
  8245  002FF6  6F92               	movwf	(?___flmul+2)& (0+255),b
  8246  002FF8  0E00               	movlw	0
  8247  002FFA  6F93               	movwf	(?___flmul+3)& (0+255),b
  8248                           
  8249                           ; BSR set to: 0
  8250  002FFC  0012               	return	
  8251  002FFE                     l6448:
  8252                           
  8253                           ; BSR set to: 0
  8254  002FFE  0100               	movlb	0	; () banked
  8255  003000  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8256  003002  0100               	movlb	0	; () banked
  8257  003004  0390               	mulwf	___flmul@b& (0+255),b
  8258  003006  CFF3 F0A7          	movff	prodl,___flmul@temp
  8259  00300A  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8260                           
  8261                           ; BSR set to: 0
  8262  00300E  0100               	movlb	0	; () banked
  8263  003010  51A7               	movf	___flmul@temp& (0+255),w,b
  8264  003012  0100               	movlb	0	; () banked
  8265  003014  6F9E               	movwf	___flmul@grs& (0+255),b
  8266  003016  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  8267  003018  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  8268  00301A  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  8269                           
  8270                           ; BSR set to: 0
  8271  00301C  0100               	movlb	0	; () banked
  8272  00301E  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8273  003020  0100               	movlb	0	; () banked
  8274  003022  6FA3               	movwf	___flmul@prod& (0+255),b
  8275  003024  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  8276  003026  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  8277  003028  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  8278  00302A  0100               	movlb	0	; () banked
  8279  00302C  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8280  00302E  0100               	movlb	0	; () banked
  8281  003030  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8282  003032  CFF3 F0A7          	movff	prodl,___flmul@temp
  8283  003036  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8284                           
  8285                           ; BSR set to: 0
  8286  00303A  0100               	movlb	0	; () banked
  8287  00303C  51A7               	movf	___flmul@temp& (0+255),w,b
  8288  00303E  0100               	movlb	0	; () banked
  8289  003040  279E               	addwf	___flmul@grs& (0+255),f,b
  8290  003042  0E00               	movlw	0
  8291  003044  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8292  003046  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8293  003048  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8294                           
  8295                           ; BSR set to: 0
  8296  00304A  0100               	movlb	0	; () banked
  8297  00304C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8298  00304E  0100               	movlb	0	; () banked
  8299  003050  27A3               	addwf	___flmul@prod& (0+255),f,b
  8300  003052  0E00               	movlw	0
  8301  003054  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8302  003056  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8303  003058  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8304  00305A  0100               	movlb	0	; () banked
  8305  00305C  5194               	movf	___flmul@a& (0+255),w,b
  8306  00305E  0100               	movlb	0	; () banked
  8307  003060  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8308  003062  CFF3 F0A7          	movff	prodl,___flmul@temp
  8309  003066  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8310                           
  8311                           ; BSR set to: 0
  8312  00306A  0100               	movlb	0	; () banked
  8313  00306C  51A7               	movf	___flmul@temp& (0+255),w,b
  8314  00306E  0100               	movlb	0	; () banked
  8315  003070  279E               	addwf	___flmul@grs& (0+255),f,b
  8316  003072  0E00               	movlw	0
  8317  003074  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8318  003076  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8319  003078  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8320                           
  8321                           ; BSR set to: 0
  8322  00307A  0100               	movlb	0	; () banked
  8323  00307C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8324  00307E  0100               	movlb	0	; () banked
  8325  003080  27A3               	addwf	___flmul@prod& (0+255),f,b
  8326  003082  0E00               	movlw	0
  8327  003084  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8328  003086  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8329  003088  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8330                           
  8331                           ; BSR set to: 0
  8332  00308A  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8333  00308E  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8334  003092  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8335  003096  0100               	movlb	0	; () banked
  8336  003098  6B9E               	clrf	___flmul@grs& (0+255),b
  8337                           
  8338                           ; BSR set to: 0
  8339  00309A  0100               	movlb	0	; () banked
  8340  00309C  5194               	movf	___flmul@a& (0+255),w,b
  8341  00309E  0100               	movlb	0	; () banked
  8342  0030A0  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8343  0030A2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8344  0030A6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8345                           
  8346                           ; BSR set to: 0
  8347  0030AA  0100               	movlb	0	; () banked
  8348  0030AC  51A7               	movf	___flmul@temp& (0+255),w,b
  8349  0030AE  0100               	movlb	0	; () banked
  8350  0030B0  279E               	addwf	___flmul@grs& (0+255),f,b
  8351  0030B2  0100               	movlb	0	; () banked
  8352  0030B4  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8353  0030B6  0100               	movlb	0	; () banked
  8354  0030B8  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8355  0030BA  0E00               	movlw	0
  8356  0030BC  0100               	movlb	0	; () banked
  8357  0030BE  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8358  0030C0  0E00               	movlw	0
  8359  0030C2  0100               	movlb	0	; () banked
  8360  0030C4  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8361                           
  8362                           ; BSR set to: 0
  8363  0030C6  0100               	movlb	0	; () banked
  8364  0030C8  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8365  0030CA  0100               	movlb	0	; () banked
  8366  0030CC  0390               	mulwf	___flmul@b& (0+255),b
  8367  0030CE  CFF3 F0A7          	movff	prodl,___flmul@temp
  8368  0030D2  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8369                           
  8370                           ; BSR set to: 0
  8371  0030D6  0100               	movlb	0	; () banked
  8372  0030D8  51A7               	movf	___flmul@temp& (0+255),w,b
  8373  0030DA  0100               	movlb	0	; () banked
  8374  0030DC  279E               	addwf	___flmul@grs& (0+255),f,b
  8375  0030DE  0100               	movlb	0	; () banked
  8376  0030E0  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8377  0030E2  0100               	movlb	0	; () banked
  8378  0030E4  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8379  0030E6  0E00               	movlw	0
  8380  0030E8  0100               	movlb	0	; () banked
  8381  0030EA  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8382  0030EC  0E00               	movlw	0
  8383  0030EE  0100               	movlb	0	; () banked
  8384  0030F0  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8385                           
  8386                           ; BSR set to: 0
  8387  0030F2  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8388  0030F6  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8389  0030FA  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8390  0030FE  0100               	movlb	0	; () banked
  8391  003100  6B9E               	clrf	___flmul@grs& (0+255),b
  8392  003102  0100               	movlb	0	; () banked
  8393  003104  5194               	movf	___flmul@a& (0+255),w,b
  8394  003106  0100               	movlb	0	; () banked
  8395  003108  0390               	mulwf	___flmul@b& (0+255),b
  8396  00310A  CFF3 F0A7          	movff	prodl,___flmul@temp
  8397  00310E  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8398                           
  8399                           ; BSR set to: 0
  8400  003112  0100               	movlb	0	; () banked
  8401  003114  51A7               	movf	___flmul@temp& (0+255),w,b
  8402  003116  0100               	movlb	0	; () banked
  8403  003118  279E               	addwf	___flmul@grs& (0+255),f,b
  8404  00311A  0100               	movlb	0	; () banked
  8405  00311C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8406  00311E  0100               	movlb	0	; () banked
  8407  003120  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8408  003122  0E00               	movlw	0
  8409  003124  0100               	movlb	0	; () banked
  8410  003126  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8411  003128  0E00               	movlw	0
  8412  00312A  0100               	movlb	0	; () banked
  8413  00312C  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8414                           
  8415                           ; BSR set to: 0
  8416  00312E  0100               	movlb	0	; () banked
  8417  003130  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8418  003132  0100               	movlb	0	; () banked
  8419  003134  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8420  003136  CFF3 F0A7          	movff	prodl,___flmul@temp
  8421  00313A  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8422  00313E  0100               	movlb	0	; () banked
  8423  003140  51A7               	movf	___flmul@temp& (0+255),w,b
  8424  003142  0100               	movlb	0	; () banked
  8425  003144  27A3               	addwf	___flmul@prod& (0+255),f,b
  8426  003146  0100               	movlb	0	; () banked
  8427  003148  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8428  00314A  0100               	movlb	0	; () banked
  8429  00314C  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8430  00314E  0E00               	movlw	0
  8431  003150  0100               	movlb	0	; () banked
  8432  003152  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8433  003154  0E00               	movlw	0
  8434  003156  0100               	movlb	0	; () banked
  8435  003158  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8436                           
  8437                           ; BSR set to: 0
  8438  00315A  0100               	movlb	0	; () banked
  8439  00315C  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8440  00315E  0100               	movlb	0	; () banked
  8441  003160  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8442  003162  CFF3 F0A7          	movff	prodl,___flmul@temp
  8443  003166  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8444                           
  8445                           ; BSR set to: 0
  8446  00316A  0100               	movlb	0	; () banked
  8447  00316C  51A7               	movf	___flmul@temp& (0+255),w,b
  8448  00316E  0100               	movlb	0	; () banked
  8449  003170  27A3               	addwf	___flmul@prod& (0+255),f,b
  8450  003172  0100               	movlb	0	; () banked
  8451  003174  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8452  003176  0100               	movlb	0	; () banked
  8453  003178  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8454  00317A  0E00               	movlw	0
  8455  00317C  0100               	movlb	0	; () banked
  8456  00317E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8457  003180  0E00               	movlw	0
  8458  003182  0100               	movlb	0	; () banked
  8459  003184  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8460  003186  0100               	movlb	0	; () banked
  8461  003188  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8462  00318A  0100               	movlb	0	; () banked
  8463  00318C  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8464  00318E  CFF3 F0A7          	movff	prodl,___flmul@temp
  8465  003192  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8466                           
  8467                           ; BSR set to: 0
  8468  003196  0100               	movlb	0	; () banked
  8469  003198  51A7               	movf	___flmul@temp& (0+255),w,b
  8470  00319A  0100               	movlb	0	; () banked
  8471  00319C  6F98               	movwf	??___flmul& (0+255),b
  8472  00319E  0100               	movlb	0	; () banked
  8473  0031A0  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8474  0031A2  0100               	movlb	0	; () banked
  8475  0031A4  6F99               	movwf	(??___flmul+1)& (0+255),b
  8476  0031A6  0100               	movlb	0	; () banked
  8477  0031A8  6B9A               	clrf	(??___flmul+2)& (0+255),b
  8478  0031AA  0100               	movlb	0	; () banked
  8479  0031AC  6B9B               	clrf	(??___flmul+3)& (0+255),b
  8480  0031AE  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  8481  0031B2  C099  F09A         	movff	??___flmul+1,??___flmul+2
  8482  0031B6  C098  F099         	movff	??___flmul,??___flmul+1
  8483  0031BA  0100               	movlb	0	; () banked
  8484  0031BC  6B98               	clrf	??___flmul& (0+255),b
  8485  0031BE  0100               	movlb	0	; () banked
  8486  0031C0  5198               	movf	??___flmul& (0+255),w,b
  8487  0031C2  0100               	movlb	0	; () banked
  8488  0031C4  27A3               	addwf	___flmul@prod& (0+255),f,b
  8489  0031C6  0100               	movlb	0	; () banked
  8490  0031C8  5199               	movf	(??___flmul+1)& (0+255),w,b
  8491  0031CA  0100               	movlb	0	; () banked
  8492  0031CC  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8493  0031CE  0100               	movlb	0	; () banked
  8494  0031D0  519A               	movf	(??___flmul+2)& (0+255),w,b
  8495  0031D2  0100               	movlb	0	; () banked
  8496  0031D4  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8497  0031D6  0100               	movlb	0	; () banked
  8498  0031D8  519B               	movf	(??___flmul+3)& (0+255),w,b
  8499  0031DA  0100               	movlb	0	; () banked
  8500  0031DC  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8501                           
  8502                           ; BSR set to: 0
  8503  0031DE  C09E  F098         	movff	___flmul@grs,??___flmul
  8504  0031E2  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  8505  0031E6  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  8506  0031EA  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  8507  0031EE  0E19               	movlw	25
  8508  0031F0  D006               	goto	u7960
  8509  0031F2                     u7965:
  8510  0031F2  0100               	movlb	0	; () banked
  8511  0031F4  90D8               	bcf	status,0,c
  8512  0031F6  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8513  0031F8  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8514  0031FA  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8515  0031FC  3398               	rrcf	??___flmul& (0+255),f,b
  8516  0031FE                     u7960:
  8517  0031FE  2EE8               	decfsz	wreg,f,c
  8518  003200  D7F8               	goto	u7965
  8519  003202  0100               	movlb	0	; () banked
  8520  003204  5198               	movf	??___flmul& (0+255),w,b
  8521  003206  0100               	movlb	0	; () banked
  8522  003208  27A3               	addwf	___flmul@prod& (0+255),f,b
  8523  00320A  0100               	movlb	0	; () banked
  8524  00320C  5199               	movf	(??___flmul+1)& (0+255),w,b
  8525  00320E  0100               	movlb	0	; () banked
  8526  003210  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8527  003212  0100               	movlb	0	; () banked
  8528  003214  519A               	movf	(??___flmul+2)& (0+255),w,b
  8529  003216  0100               	movlb	0	; () banked
  8530  003218  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8531  00321A  0100               	movlb	0	; () banked
  8532  00321C  519B               	movf	(??___flmul+3)& (0+255),w,b
  8533  00321E  0100               	movlb	0	; () banked
  8534  003220  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8535                           
  8536                           ; BSR set to: 0
  8537  003222  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8538  003226  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8539  00322A  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8540  00322E  0100               	movlb	0	; () banked
  8541  003230  6B9E               	clrf	___flmul@grs& (0+255),b
  8542                           
  8543                           ; BSR set to: 0
  8544  003232  0100               	movlb	0	; () banked
  8545  003234  519D               	movf	___flmul@aexp& (0+255),w,b
  8546  003236  C0A2  F098         	movff	___flmul@bexp,??___flmul
  8547  00323A  0100               	movlb	0	; () banked
  8548  00323C  6B99               	clrf	(??___flmul+1)& (0+255),b
  8549  00323E  0100               	movlb	0	; () banked
  8550  003240  2798               	addwf	??___flmul& (0+255),f,b
  8551  003242  0E00               	movlw	0
  8552  003244  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  8553  003246  0E82               	movlw	130
  8554  003248  0100               	movlb	0	; () banked
  8555  00324A  2598               	addwf	??___flmul& (0+255),w,b
  8556  00324C  0100               	movlb	0	; () banked
  8557  00324E  6FA7               	movwf	___flmul@temp& (0+255),b
  8558  003250  0EFF               	movlw	255
  8559  003252  0100               	movlb	0	; () banked
  8560  003254  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  8561  003256  0100               	movlb	0	; () banked
  8562  003258  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  8563  00325A  D015               	goto	l6496
  8564  00325C                     l6490:
  8565                           
  8566                           ; BSR set to: 0
  8567  00325C  0100               	movlb	0	; () banked
  8568  00325E  90D8               	bcf	status,0,c
  8569  003260  37A3               	rlcf	___flmul@prod& (0+255),f,b
  8570  003262  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8571  003264  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8572  003266  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8573                           
  8574                           ; BSR set to: 0
  8575  003268  0100               	movlb	0	; () banked
  8576  00326A  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8577  00326C  D002               	goto	l1404
  8578                           
  8579                           ; BSR set to: 0
  8580  00326E  0100               	movlb	0	; () banked
  8581  003270  81A3               	bsf	___flmul@prod& (0+255),0,b
  8582  003272                     l1404:
  8583                           
  8584                           ; BSR set to: 0
  8585  003272  0100               	movlb	0	; () banked
  8586  003274  90D8               	bcf	status,0,c
  8587  003276  379E               	rlcf	___flmul@grs& (0+255),f,b
  8588  003278  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8589  00327A  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8590  00327C  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8591  00327E  0100               	movlb	0	; () banked
  8592  003280  07A7               	decf	___flmul@temp& (0+255),f,b
  8593  003282  A0D8               	btfss	status,0,c
  8594  003284  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  8595  003286                     l6496:
  8596                           
  8597                           ; BSR set to: 0
  8598  003286  0100               	movlb	0	; () banked
  8599  003288  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  8600  00328A  D7E8               	goto	l6490
  8601                           
  8602                           ; BSR set to: 0
  8603                           
  8604                           ; BSR set to: 0
  8605  00328C  0E00               	movlw	0
  8606  00328E  0100               	movlb	0	; () banked
  8607  003290  6F9D               	movwf	___flmul@aexp& (0+255),b
  8608                           
  8609                           ; BSR set to: 0
  8610  003292  0100               	movlb	0	; () banked
  8611  003294  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8612  003296  D024               	goto	l1406
  8613                           
  8614                           ; BSR set to: 0
  8615  003298  0EFF               	movlw	255
  8616  00329A  0100               	movlb	0	; () banked
  8617  00329C  159E               	andwf	___flmul@grs& (0+255),w,b
  8618  00329E  0100               	movlb	0	; () banked
  8619  0032A0  6F98               	movwf	??___flmul& (0+255),b
  8620  0032A2  0EFF               	movlw	255
  8621  0032A4  0100               	movlb	0	; () banked
  8622  0032A6  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  8623  0032A8  0100               	movlb	0	; () banked
  8624  0032AA  6F99               	movwf	(??___flmul+1)& (0+255),b
  8625  0032AC  0EFF               	movlw	255
  8626  0032AE  0100               	movlb	0	; () banked
  8627  0032B0  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  8628  0032B2  0100               	movlb	0	; () banked
  8629  0032B4  6F9A               	movwf	(??___flmul+2)& (0+255),b
  8630  0032B6  0E7F               	movlw	127
  8631  0032B8  0100               	movlb	0	; () banked
  8632  0032BA  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  8633  0032BC  0100               	movlb	0	; () banked
  8634  0032BE  6F9B               	movwf	(??___flmul+3)& (0+255),b
  8635  0032C0  0100               	movlb	0	; () banked
  8636  0032C2  5198               	movf	??___flmul& (0+255),w,b
  8637  0032C4  0100               	movlb	0	; () banked
  8638  0032C6  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  8639  0032C8  0100               	movlb	0	; () banked
  8640  0032CA  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  8641  0032CC  0100               	movlb	0	; () banked
  8642  0032CE  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  8643  0032D0  A4D8               	btfss	status,2,c
  8644  0032D2  D003               	goto	l6506
  8645                           
  8646                           ; BSR set to: 0
  8647                           
  8648                           ; BSR set to: 0
  8649  0032D4  0100               	movlb	0	; () banked
  8650  0032D6  A1A3               	btfss	___flmul@prod& (0+255),0,b
  8651  0032D8  D003               	goto	l1406
  8652  0032DA                     l6506:
  8653                           
  8654                           ; BSR set to: 0
  8655  0032DA  0E01               	movlw	1
  8656  0032DC  0100               	movlb	0	; () banked
  8657  0032DE  6F9D               	movwf	___flmul@aexp& (0+255),b
  8658  0032E0                     l1406:
  8659                           
  8660                           ; BSR set to: 0
  8661  0032E0  0100               	movlb	0	; () banked
  8662  0032E2  519D               	movf	___flmul@aexp& (0+255),w,b
  8663  0032E4  0100               	movlb	0	; () banked
  8664  0032E6  B4D8               	btfsc	status,2,c
  8665  0032E8  D023               	goto	l6516
  8666                           
  8667                           ; BSR set to: 0
  8668  0032EA  0E01               	movlw	1
  8669  0032EC  0100               	movlb	0	; () banked
  8670  0032EE  27A3               	addwf	___flmul@prod& (0+255),f,b
  8671  0032F0  0E00               	movlw	0
  8672  0032F2  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8673  0032F4  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8674  0032F6  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8675                           
  8676                           ; BSR set to: 0
  8677  0032F8  0100               	movlb	0	; () banked
  8678  0032FA  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  8679  0032FC  D019               	goto	l6516
  8680                           
  8681                           ; BSR set to: 0
  8682  0032FE  C0A3  F098         	movff	___flmul@prod,??___flmul
  8683  003302  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  8684  003306  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  8685  00330A  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  8686  00330E  0100               	movlb	0	; () banked
  8687  003310  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  8688  003312  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8689  003314  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8690  003316  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8691  003318  3398               	rrcf	??___flmul& (0+255),f,b
  8692  00331A  C098  F0A3         	movff	??___flmul,___flmul@prod
  8693  00331E  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  8694  003322  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  8695  003326  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  8696                           
  8697                           ; BSR set to: 0
  8698  00332A  0100               	movlb	0	; () banked
  8699  00332C  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  8700  00332E  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  8701  003330                     l6516:
  8702                           
  8703                           ; BSR set to: 0
  8704  003330  0100               	movlb	0	; () banked
  8705  003332  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8706  003334  D010               	goto	l6520
  8707  003336  0100               	movlb	0	; () banked
  8708  003338  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8709  00333A  E104               	bnz	u8040
  8710  00333C  0100               	movlb	0	; () banked
  8711  00333E  29A7               	incf	___flmul@temp& (0+255),w,b
  8712  003340  A0D8               	btfss	status,0,c
  8713  003342  D009               	goto	l6520
  8714  003344                     u8040:
  8715                           
  8716                           ; BSR set to: 0
  8717  003344  0E00               	movlw	0
  8718  003346  0100               	movlb	0	; () banked
  8719  003348  6FA3               	movwf	___flmul@prod& (0+255),b
  8720  00334A  0E00               	movlw	0
  8721  00334C  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8722  00334E  0E80               	movlw	128
  8723  003350  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8724  003352  0E7F               	movlw	127
  8725  003354  D02B               	goto	L2
  8726  003356                     l6520:
  8727                           
  8728                           ; BSR set to: 0
  8729  003356  0100               	movlb	0	; () banked
  8730  003358  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8731  00335A  D007               	goto	l6522
  8732  00335C  0100               	movlb	0	; () banked
  8733  00335E  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8734  003360  E111               	bnz	l1414
  8735  003362  0100               	movlb	0	; () banked
  8736  003364  05A7               	decf	___flmul@temp& (0+255),w,b
  8737  003366  B0D8               	btfsc	status,0,c
  8738  003368  D00D               	goto	l1414
  8739  00336A                     l6522:
  8740                           
  8741                           ; BSR set to: 0
  8742  00336A  0E00               	movlw	0
  8743  00336C  0100               	movlb	0	; () banked
  8744  00336E  6FA3               	movwf	___flmul@prod& (0+255),b
  8745  003370  0E00               	movlw	0
  8746  003372  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8747  003374  0E00               	movlw	0
  8748  003376  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8749  003378  0E00               	movlw	0
  8750  00337A  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8751  00337C  0E00               	movlw	0
  8752  00337E  0100               	movlb	0	; () banked
  8753  003380  6F9C               	movwf	___flmul@sign& (0+255),b
  8754  003382  D015               	goto	l6532
  8755  003384                     l1414:
  8756                           
  8757                           ; BSR set to: 0
  8758  003384  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  8759                           
  8760                           ; BSR set to: 0
  8761  003388  0EFF               	movlw	255
  8762  00338A  0100               	movlb	0	; () banked
  8763  00338C  17A3               	andwf	___flmul@prod& (0+255),f,b
  8764  00338E  0EFF               	movlw	255
  8765  003390  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  8766  003392  0E7F               	movlw	127
  8767  003394  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  8768  003396  0E00               	movlw	0
  8769  003398  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  8770                           
  8771                           ; BSR set to: 0
  8772  00339A  0100               	movlb	0	; () banked
  8773  00339C  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  8774  00339E  D002               	goto	l6530
  8775                           
  8776                           ; BSR set to: 0
  8777  0033A0  0100               	movlb	0	; () banked
  8778  0033A2  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  8779  0033A4                     l6530:
  8780                           
  8781                           ; BSR set to: 0
  8782  0033A4  0100               	movlb	0	; () banked
  8783  0033A6  90D8               	bcf	status,0,c
  8784  0033A8  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  8785  0033AA  0100               	movlb	0	; () banked
  8786  0033AC                     L2:
  8787  0033AC  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8788  0033AE                     l6532:
  8789                           
  8790                           ; BSR set to: 0
  8791  0033AE  0100               	movlb	0	; () banked
  8792  0033B0  519C               	movf	___flmul@sign& (0+255),w,b
  8793  0033B2  0100               	movlb	0	; () banked
  8794  0033B4  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8795                           
  8796                           ; BSR set to: 0
  8797  0033B6  C0A3  F090         	movff	___flmul@prod,?___flmul
  8798  0033BA  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  8799  0033BE  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  8800  0033C2  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  8801  0033C6  0012               	return	
  8802  0033C8                     __end_of___flmul:
  8803                           	opt stack 0
  8804                           tblptru	equ	0xFF8
  8805                           tblptrh	equ	0xFF7
  8806                           tblptrl	equ	0xFF6
  8807                           tablat	equ	0xFF5
  8808                           prodh	equ	0xFF4
  8809                           prodl	equ	0xFF3
  8810                           postinc0	equ	0xFEE
  8811                           wreg	equ	0xFE8
  8812                           postdec1	equ	0xFE5
  8813                           fsr1l	equ	0xFE1
  8814                           indf2	equ	0xFDF
  8815                           postinc2	equ	0xFDE
  8816                           postdec2	equ	0xFDD
  8817                           fsr2h	equ	0xFDA
  8818                           fsr2l	equ	0xFD9
  8819                           status	equ	0xFD8
  8820                           
  8821 ;; *************** function ___fladd *****************
  8822 ;; Defined at:
  8823 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  8824 ;; Parameters:    Size  Location     Type
  8825 ;;  b               4   73[BANK0 ] unsigned char 
  8826 ;;  a               4   77[BANK0 ] unsigned char 
  8827 ;; Auto vars:     Size  Location     Type
  8828 ;;  grs             1   92[BANK0 ] unsigned char 
  8829 ;;  bexp            1   91[BANK0 ] unsigned char 
  8830 ;;  aexp            1   90[BANK0 ] unsigned char 
  8831 ;;  signs           1   89[BANK0 ] unsigned char 
  8832 ;; Return value:  Size  Location     Type
  8833 ;;                  4   73[BANK0 ] unsigned char 
  8834 ;; Registers used:
  8835 ;;		wreg, status,2, status,0
  8836 ;; Tracked objects:
  8837 ;;		On entry : 0/0
  8838 ;;		On exit  : 0/0
  8839 ;;		Unchanged: 0/0
  8840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8841 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8842 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8843 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8844 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8845 ;;Total ram usage:       20 bytes
  8846 ;; Hardware stack levels used:    1
  8847 ;; Hardware stack levels required when called:    4
  8848 ;; This function calls:
  8849 ;;		Nothing
  8850 ;; This function is called by:
  8851 ;;		_park_routine
  8852 ;;		_parallelo
  8853 ;;		_matematica
  8854 ;;		_asin
  8855 ;;		_atan
  8856 ;;		_cos
  8857 ;;		_eval_poly
  8858 ;;		_sin
  8859 ;;		___flsub
  8860 ;;		_floor
  8861 ;; This function uses a non-reentrant model
  8862 ;;
  8863                           
  8864                           	psect	text23
  8865  002A7A                     __ptext23:
  8866                           	opt stack 0
  8867  002A7A                     ___fladd:
  8868                           	opt stack 21
  8869                           
  8870                           ; BSR set to: 0
  8871                           ;incstack = 0
  8872  002A7A  0100               	movlb	0	; () banked
  8873  002A7C  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  8874  002A7E  0B80               	andlw	128
  8875  002A80  0100               	movlb	0	; () banked
  8876  002A82  6FB9               	movwf	___fladd@signs& (0+255),b
  8877  002A84  0100               	movlb	0	; () banked
  8878  002A86  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  8879  002A88  25AC               	addwf	(___fladd@b+3)& (0+255),w,b
  8880  002A8A  0100               	movlb	0	; () banked
  8881  002A8C  6FBB               	movwf	___fladd@bexp& (0+255),b
  8882                           
  8883                           ; BSR set to: 0
  8884  002A8E  0100               	movlb	0	; () banked
  8885  002A90  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  8886  002A92  D002               	goto	l6212
  8887                           
  8888                           ; BSR set to: 0
  8889  002A94  0100               	movlb	0	; () banked
  8890  002A96  81BB               	bsf	___fladd@bexp& (0+255),0,b
  8891  002A98                     l6212:
  8892                           
  8893                           ; BSR set to: 0
  8894  002A98  0100               	movlb	0	; () banked
  8895  002A9A  51BB               	movf	___fladd@bexp& (0+255),w,b
  8896  002A9C  0100               	movlb	0	; () banked
  8897  002A9E  B4D8               	btfsc	status,2,c
  8898  002AA0  D012               	goto	l6222
  8899                           
  8900                           ; BSR set to: 0
  8901  002AA2  0100               	movlb	0	; () banked
  8902  002AA4  29BB               	incf	___fladd@bexp& (0+255),w,b
  8903  002AA6  A4D8               	btfss	status,2,c
  8904  002AA8  D009               	goto	l6218
  8905                           
  8906                           ; BSR set to: 0
  8907  002AAA  0E00               	movlw	0
  8908  002AAC  0100               	movlb	0	; () banked
  8909  002AAE  6FA9               	movwf	___fladd@b& (0+255),b
  8910  002AB0  0E00               	movlw	0
  8911  002AB2  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  8912  002AB4  0E00               	movlw	0
  8913  002AB6  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  8914  002AB8  0E00               	movlw	0
  8915  002ABA  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  8916  002ABC                     l6218:
  8917                           
  8918                           ; BSR set to: 0
  8919  002ABC  0100               	movlb	0	; () banked
  8920  002ABE  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  8921                           
  8922                           ; BSR set to: 0
  8923  002AC0  0E00               	movlw	0
  8924  002AC2  0100               	movlb	0	; () banked
  8925  002AC4  D008               	goto	L3
  8926  002AC6                     l6222:
  8927                           
  8928                           ; BSR set to: 0
  8929  002AC6  0E00               	movlw	0
  8930  002AC8  0100               	movlb	0	; () banked
  8931  002ACA  6FA9               	movwf	___fladd@b& (0+255),b
  8932  002ACC  0E00               	movlw	0
  8933  002ACE  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  8934  002AD0  0E00               	movlw	0
  8935  002AD2  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  8936  002AD4  0E00               	movlw	0
  8937  002AD6                     L3:
  8938  002AD6  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  8939                           
  8940                           ; BSR set to: 0
  8941                           
  8942                           ; BSR set to: 0
  8943  002AD8  0100               	movlb	0	; () banked
  8944  002ADA  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  8945  002ADC  0B80               	andlw	128
  8946  002ADE  0100               	movlb	0	; () banked
  8947  002AE0  6FBA               	movwf	___fladd@aexp& (0+255),b
  8948                           
  8949                           ; BSR set to: 0
  8950  002AE2  0100               	movlb	0	; () banked
  8951  002AE4  51B9               	movf	___fladd@signs& (0+255),w,b
  8952  002AE6  0100               	movlb	0	; () banked
  8953  002AE8  19BA               	xorwf	___fladd@aexp& (0+255),w,b
  8954  002AEA  B4D8               	btfsc	status,2,c
  8955  002AEC  D002               	goto	l6230
  8956                           
  8957                           ; BSR set to: 0
  8958  002AEE  0100               	movlb	0	; () banked
  8959  002AF0  8DB9               	bsf	___fladd@signs& (0+255),6,b
  8960  002AF2                     l6230:
  8961                           
  8962                           ; BSR set to: 0
  8963  002AF2  0100               	movlb	0	; () banked
  8964  002AF4  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  8965  002AF6  25B0               	addwf	(___fladd@a+3)& (0+255),w,b
  8966  002AF8  0100               	movlb	0	; () banked
  8967  002AFA  6FBA               	movwf	___fladd@aexp& (0+255),b
  8968                           
  8969                           ; BSR set to: 0
  8970  002AFC  0100               	movlb	0	; () banked
  8971  002AFE  AFAF               	btfss	(___fladd@a+2)& (0+255),7,b
  8972  002B00  D002               	goto	l6236
  8973                           
  8974                           ; BSR set to: 0
  8975  002B02  0100               	movlb	0	; () banked
  8976  002B04  81BA               	bsf	___fladd@aexp& (0+255),0,b
  8977  002B06                     l6236:
  8978                           
  8979                           ; BSR set to: 0
  8980  002B06  0100               	movlb	0	; () banked
  8981  002B08  51BA               	movf	___fladd@aexp& (0+255),w,b
  8982  002B0A  0100               	movlb	0	; () banked
  8983  002B0C  B4D8               	btfsc	status,2,c
  8984  002B0E  D012               	goto	l6246
  8985                           
  8986                           ; BSR set to: 0
  8987  002B10  0100               	movlb	0	; () banked
  8988  002B12  29BA               	incf	___fladd@aexp& (0+255),w,b
  8989  002B14  A4D8               	btfss	status,2,c
  8990  002B16  D009               	goto	l6242
  8991                           
  8992                           ; BSR set to: 0
  8993  002B18  0E00               	movlw	0
  8994  002B1A  0100               	movlb	0	; () banked
  8995  002B1C  6FAD               	movwf	___fladd@a& (0+255),b
  8996  002B1E  0E00               	movlw	0
  8997  002B20  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  8998  002B22  0E00               	movlw	0
  8999  002B24  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9000  002B26  0E00               	movlw	0
  9001  002B28  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9002  002B2A                     l6242:
  9003                           
  9004                           ; BSR set to: 0
  9005  002B2A  0100               	movlb	0	; () banked
  9006  002B2C  8FAF               	bsf	(___fladd@a+2)& (0+255),7,b
  9007                           
  9008                           ; BSR set to: 0
  9009  002B2E  0E00               	movlw	0
  9010  002B30  0100               	movlb	0	; () banked
  9011  002B32  D008               	goto	L4
  9012  002B34                     l6246:
  9013                           
  9014                           ; BSR set to: 0
  9015  002B34  0E00               	movlw	0
  9016  002B36  0100               	movlb	0	; () banked
  9017  002B38  6FAD               	movwf	___fladd@a& (0+255),b
  9018  002B3A  0E00               	movlw	0
  9019  002B3C  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9020  002B3E  0E00               	movlw	0
  9021  002B40  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9022  002B42  0E00               	movlw	0
  9023  002B44                     L4:
  9024  002B44  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9025                           
  9026                           ; BSR set to: 0
  9027                           
  9028                           ; BSR set to: 0
  9029  002B46  0100               	movlb	0	; () banked
  9030  002B48  51BB               	movf	___fladd@bexp& (0+255),w,b
  9031  002B4A  0100               	movlb	0	; () banked
  9032  002B4C  5DBA               	subwf	___fladd@aexp& (0+255),w,b
  9033  002B4E  B0D8               	btfsc	status,0,c
  9034  002B50  D024               	goto	l6284
  9035                           
  9036                           ; BSR set to: 0
  9037  002B52  0100               	movlb	0	; () banked
  9038  002B54  ADB9               	btfss	___fladd@signs& (0+255),6,b
  9039  002B56  D003               	goto	l6254
  9040                           
  9041                           ; BSR set to: 0
  9042  002B58  0E80               	movlw	128
  9043  002B5A  0100               	movlb	0	; () banked
  9044  002B5C  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9045  002B5E                     l6254:
  9046                           
  9047                           ; BSR set to: 0
  9048  002B5E  C0BB  F0BC         	movff	___fladd@bexp,___fladd@grs
  9049                           
  9050                           ; BSR set to: 0
  9051  002B62  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9052                           
  9053                           ; BSR set to: 0
  9054  002B66  C0BC  F0BA         	movff	___fladd@grs,___fladd@aexp
  9055                           
  9056                           ; BSR set to: 0
  9057  002B6A  C0A9  F0BC         	movff	___fladd@b,___fladd@grs
  9058                           
  9059                           ; BSR set to: 0
  9060  002B6E  C0AD  F0A9         	movff	___fladd@a,___fladd@b
  9061                           
  9062                           ; BSR set to: 0
  9063  002B72  C0BC  F0AD         	movff	___fladd@grs,___fladd@a
  9064                           
  9065                           ; BSR set to: 0
  9066  002B76  C0AA  F0BC         	movff	___fladd@b+1,___fladd@grs
  9067                           
  9068                           ; BSR set to: 0
  9069  002B7A  C0AE  F0AA         	movff	___fladd@a+1,___fladd@b+1
  9070                           
  9071                           ; BSR set to: 0
  9072  002B7E  C0BC  F0AE         	movff	___fladd@grs,___fladd@a+1
  9073                           
  9074                           ; BSR set to: 0
  9075  002B82  C0AB  F0BC         	movff	___fladd@b+2,___fladd@grs
  9076                           
  9077                           ; BSR set to: 0
  9078  002B86  C0AF  F0AB         	movff	___fladd@a+2,___fladd@b+2
  9079                           
  9080                           ; BSR set to: 0
  9081  002B8A  C0BC  F0AF         	movff	___fladd@grs,___fladd@a+2
  9082                           
  9083                           ; BSR set to: 0
  9084  002B8E  C0AC  F0BC         	movff	___fladd@b+3,___fladd@grs
  9085                           
  9086                           ; BSR set to: 0
  9087  002B92  C0B0  F0AC         	movff	___fladd@a+3,___fladd@b+3
  9088                           
  9089                           ; BSR set to: 0
  9090  002B96  C0BC  F0B0         	movff	___fladd@grs,___fladd@a+3
  9091  002B9A                     l6284:
  9092                           
  9093                           ; BSR set to: 0
  9094  002B9A  0E00               	movlw	0
  9095  002B9C  0100               	movlb	0	; () banked
  9096  002B9E  6FBC               	movwf	___fladd@grs& (0+255),b
  9097                           
  9098                           ; BSR set to: 0
  9099  002BA0  0100               	movlb	0	; () banked
  9100  002BA2  51BB               	movf	___fladd@bexp& (0+255),w,b
  9101  002BA4  0100               	movlb	0	; () banked
  9102  002BA6  6FB1               	movwf	??___fladd& (0+255),b
  9103  002BA8  6BB2               	clrf	(??___fladd+1)& (0+255),b
  9104  002BAA  0100               	movlb	0	; () banked
  9105  002BAC  1FB1               	comf	??___fladd& (0+255),f,b
  9106  002BAE  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9107  002BB0  4BB1               	infsnz	??___fladd& (0+255),f,b
  9108  002BB2  2BB2               	incf	(??___fladd+1)& (0+255),f,b
  9109  002BB4  0100               	movlb	0	; () banked
  9110  002BB6  51BA               	movf	___fladd@aexp& (0+255),w,b
  9111  002BB8  0100               	movlb	0	; () banked
  9112  002BBA  6FB3               	movwf	(??___fladd+2)& (0+255),b
  9113  002BBC  6BB4               	clrf	(??___fladd+3)& (0+255),b
  9114  002BBE  0100               	movlb	0	; () banked
  9115  002BC0  51B1               	movf	??___fladd& (0+255),w,b
  9116  002BC2  0100               	movlb	0	; () banked
  9117  002BC4  27B3               	addwf	(??___fladd+2)& (0+255),f,b
  9118  002BC6  0100               	movlb	0	; () banked
  9119  002BC8  51B2               	movf	(??___fladd+1)& (0+255),w,b
  9120  002BCA  0100               	movlb	0	; () banked
  9121  002BCC  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9122  002BCE  0100               	movlb	0	; () banked
  9123  002BD0  BFB4               	btfsc	(??___fladd+3)& (0+255),7,b
  9124  002BD2  D03D               	goto	l1312
  9125  002BD4  0100               	movlb	0	; () banked
  9126  002BD6  51B4               	movf	(??___fladd+3)& (0+255),w,b
  9127  002BD8  E105               	bnz	u7580
  9128  002BDA  0E1A               	movlw	26
  9129  002BDC  0100               	movlb	0	; () banked
  9130  002BDE  5DB3               	subwf	(??___fladd+2)& (0+255),w,b
  9131  002BE0  A0D8               	btfss	status,0,c
  9132  002BE2  D035               	goto	l1312
  9133  002BE4                     u7580:
  9134                           
  9135                           ; BSR set to: 0
  9136  002BE4  0100               	movlb	0	; () banked
  9137  002BE6  51A9               	movf	___fladd@b& (0+255),w,b
  9138  002BE8  0100               	movlb	0	; () banked
  9139  002BEA  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9140  002BEC  0100               	movlb	0	; () banked
  9141  002BEE  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9142  002BF0  0100               	movlb	0	; () banked
  9143  002BF2  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9144  002BF4  B4D8               	btfsc	status,2,c
  9145  002BF6  D002               	goto	u7590
  9146  002BF8  0E01               	movlw	1
  9147  002BFA  D001               	goto	u7600
  9148  002BFC                     u7590:
  9149  002BFC  0E00               	movlw	0
  9150  002BFE                     u7600:
  9151  002BFE  0100               	movlb	0	; () banked
  9152  002C00  6FBC               	movwf	___fladd@grs& (0+255),b
  9153                           
  9154                           ; BSR set to: 0
  9155  002C02  0E00               	movlw	0
  9156  002C04  0100               	movlb	0	; () banked
  9157  002C06  6FA9               	movwf	___fladd@b& (0+255),b
  9158  002C08  0E00               	movlw	0
  9159  002C0A  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9160  002C0C  0E00               	movlw	0
  9161  002C0E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9162  002C10  0E00               	movlw	0
  9163  002C12  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9164                           
  9165                           ; BSR set to: 0
  9166  002C14  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9167  002C18  D020               	goto	l1311
  9168  002C1A                     l1313:
  9169                           
  9170                           ; BSR set to: 0
  9171  002C1A  0100               	movlb	0	; () banked
  9172  002C1C  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9173  002C1E  D007               	goto	l6296
  9174                           
  9175                           ; BSR set to: 0
  9176  002C20  0100               	movlb	0	; () banked
  9177  002C22  90D8               	bcf	status,0,c
  9178  002C24  31BC               	rrcf	___fladd@grs& (0+255),w,b
  9179  002C26  0901               	iorlw	1
  9180  002C28  0100               	movlb	0	; () banked
  9181  002C2A  6FBC               	movwf	___fladd@grs& (0+255),b
  9182  002C2C  D003               	goto	l6298
  9183  002C2E                     l6296:
  9184                           
  9185                           ; BSR set to: 0
  9186  002C2E  0100               	movlb	0	; () banked
  9187  002C30  90D8               	bcf	status,0,c
  9188  002C32  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9189  002C34                     l6298:
  9190                           
  9191                           ; BSR set to: 0
  9192  002C34  0100               	movlb	0	; () banked
  9193  002C36  A1A9               	btfss	___fladd@b& (0+255),0,b
  9194  002C38  D002               	goto	l6302
  9195                           
  9196                           ; BSR set to: 0
  9197  002C3A  0100               	movlb	0	; () banked
  9198  002C3C  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9199  002C3E                     l6302:
  9200                           
  9201                           ; BSR set to: 0
  9202  002C3E  0100               	movlb	0	; () banked
  9203  002C40  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9204  002C42  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9205  002C44  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9206  002C46  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9207  002C48  33A9               	rrcf	___fladd@b& (0+255),f,b
  9208                           
  9209                           ; BSR set to: 0
  9210  002C4A  0100               	movlb	0	; () banked
  9211  002C4C  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9212  002C4E                     l1312:
  9213                           
  9214                           ; BSR set to: 0
  9215  002C4E  0100               	movlb	0	; () banked
  9216  002C50  51BA               	movf	___fladd@aexp& (0+255),w,b
  9217  002C52  0100               	movlb	0	; () banked
  9218  002C54  5DBB               	subwf	___fladd@bexp& (0+255),w,b
  9219  002C56  A0D8               	btfss	status,0,c
  9220  002C58  D7E0               	goto	l1313
  9221  002C5A                     l1311:
  9222                           
  9223                           ; BSR set to: 0
  9224  002C5A  0100               	movlb	0	; () banked
  9225  002C5C  BDB9               	btfsc	___fladd@signs& (0+255),6,b
  9226  002C5E  D03F               	goto	l6330
  9227                           
  9228                           ; BSR set to: 0
  9229  002C60  0100               	movlb	0	; () banked
  9230  002C62  51BB               	movf	___fladd@bexp& (0+255),w,b
  9231  002C64  0100               	movlb	0	; () banked
  9232  002C66  A4D8               	btfss	status,2,c
  9233  002C68  D00A               	goto	l6312
  9234                           
  9235                           ; BSR set to: 0
  9236  002C6A  0E00               	movlw	0
  9237  002C6C  0100               	movlb	0	; () banked
  9238  002C6E  6FA9               	movwf	?___fladd& (0+255),b
  9239  002C70  0E00               	movlw	0
  9240  002C72  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9241  002C74  0E00               	movlw	0
  9242  002C76  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9243  002C78  0E00               	movlw	0
  9244  002C7A  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9245                           
  9246                           ; BSR set to: 0
  9247  002C7C  0012               	return	
  9248  002C7E                     l6312:
  9249                           
  9250                           ; BSR set to: 0
  9251  002C7E  0100               	movlb	0	; () banked
  9252  002C80  51AD               	movf	___fladd@a& (0+255),w,b
  9253  002C82  0100               	movlb	0	; () banked
  9254  002C84  27A9               	addwf	___fladd@b& (0+255),f,b
  9255  002C86  0100               	movlb	0	; () banked
  9256  002C88  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9257  002C8A  0100               	movlb	0	; () banked
  9258  002C8C  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9259  002C8E  0100               	movlb	0	; () banked
  9260  002C90  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9261  002C92  0100               	movlb	0	; () banked
  9262  002C94  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9263  002C96  0100               	movlb	0	; () banked
  9264  002C98  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9265  002C9A  0100               	movlb	0	; () banked
  9266  002C9C  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9267                           
  9268                           ; BSR set to: 0
  9269  002C9E  0100               	movlb	0	; () banked
  9270  002CA0  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9271  002CA2  D0CC               	goto	l6366
  9272                           
  9273                           ; BSR set to: 0
  9274  002CA4  0100               	movlb	0	; () banked
  9275  002CA6  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9276  002CA8  D009               	goto	l6320
  9277                           
  9278                           ; BSR set to: 0
  9279  002CAA  0100               	movlb	0	; () banked
  9280  002CAC  90D8               	bcf	status,0,c
  9281  002CAE  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9282  002CB0  0100               	movlb	0	; () banked
  9283  002CB2  51BC               	movf	___fladd@grs& (0+255),w,b
  9284  002CB4  0901               	iorlw	1
  9285  002CB6  0100               	movlb	0	; () banked
  9286  002CB8  6FBC               	movwf	___fladd@grs& (0+255),b
  9287  002CBA  D003               	goto	l6322
  9288  002CBC                     l6320:
  9289                           
  9290                           ; BSR set to: 0
  9291  002CBC  0100               	movlb	0	; () banked
  9292  002CBE  90D8               	bcf	status,0,c
  9293  002CC0  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9294  002CC2                     l6322:
  9295                           
  9296                           ; BSR set to: 0
  9297  002CC2  0100               	movlb	0	; () banked
  9298  002CC4  A1A9               	btfss	___fladd@b& (0+255),0,b
  9299  002CC6  D002               	goto	l6326
  9300                           
  9301                           ; BSR set to: 0
  9302  002CC8  0100               	movlb	0	; () banked
  9303  002CCA  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9304  002CCC                     l6326:
  9305                           
  9306                           ; BSR set to: 0
  9307  002CCC  0100               	movlb	0	; () banked
  9308  002CCE  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9309  002CD0  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9310  002CD2  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9311  002CD4  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9312  002CD6  33A9               	rrcf	___fladd@b& (0+255),f,b
  9313                           
  9314                           ; BSR set to: 0
  9315  002CD8  0100               	movlb	0	; () banked
  9316  002CDA  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9317                           
  9318                           ; BSR set to: 0
  9319  002CDC  D0AF               	goto	l6366
  9320  002CDE                     l6330:
  9321                           
  9322                           ; BSR set to: 0
  9323  002CDE  0100               	movlb	0	; () banked
  9324  002CE0  51AD               	movf	___fladd@a& (0+255),w,b
  9325  002CE2  0100               	movlb	0	; () banked
  9326  002CE4  5DA9               	subwf	___fladd@b& (0+255),w,b
  9327  002CE6  0100               	movlb	0	; () banked
  9328  002CE8  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9329  002CEA  0100               	movlb	0	; () banked
  9330  002CEC  59AA               	subwfb	(___fladd@b+1)& (0+255),w,b
  9331  002CEE  0100               	movlb	0	; () banked
  9332  002CF0  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9333  002CF2  0100               	movlb	0	; () banked
  9334  002CF4  59AB               	subwfb	(___fladd@b+2)& (0+255),w,b
  9335  002CF6  0100               	movlb	0	; () banked
  9336  002CF8  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9337  002CFA  0A80               	xorlw	128
  9338  002CFC  0100               	movlb	0	; () banked
  9339  002CFE  6FB1               	movwf	??___fladd& (0+255),b
  9340  002D00  0100               	movlb	0	; () banked
  9341  002D02  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9342  002D04  0A80               	xorlw	128
  9343  002D06  0100               	movlb	0	; () banked
  9344  002D08  59B1               	subwfb	??___fladd& (0+255),w,b
  9345  002D0A  B0D8               	btfsc	status,0,c
  9346  002D0C  D050               	goto	l6340
  9347                           
  9348                           ; BSR set to: 0
  9349  002D0E  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9350  002D12  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9351  002D16  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9352  002D1A  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9353  002D1E  0100               	movlb	0	; () banked
  9354  002D20  1FB1               	comf	??___fladd& (0+255),f,b
  9355  002D22  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9356  002D24  1FB3               	comf	(??___fladd+2)& (0+255),f,b
  9357  002D26  1FB4               	comf	(??___fladd+3)& (0+255),f,b
  9358  002D28  2BB1               	incf	??___fladd& (0+255),f,b
  9359  002D2A  0E00               	movlw	0
  9360  002D2C  23B2               	addwfc	(??___fladd+1)& (0+255),f,b
  9361  002D2E  23B3               	addwfc	(??___fladd+2)& (0+255),f,b
  9362  002D30  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9363  002D32  0100               	movlb	0	; () banked
  9364  002D34  51AD               	movf	___fladd@a& (0+255),w,b
  9365  002D36  0100               	movlb	0	; () banked
  9366  002D38  25B1               	addwf	??___fladd& (0+255),w,b
  9367  002D3A  0100               	movlb	0	; () banked
  9368  002D3C  6FB5               	movwf	(??___fladd+4)& (0+255),b
  9369  002D3E  0100               	movlb	0	; () banked
  9370  002D40  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9371  002D42  0100               	movlb	0	; () banked
  9372  002D44  21B2               	addwfc	(??___fladd+1)& (0+255),w,b
  9373  002D46  0100               	movlb	0	; () banked
  9374  002D48  6FB6               	movwf	(??___fladd+5)& (0+255),b
  9375  002D4A  0100               	movlb	0	; () banked
  9376  002D4C  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9377  002D4E  0100               	movlb	0	; () banked
  9378  002D50  21B3               	addwfc	(??___fladd+2)& (0+255),w,b
  9379  002D52  0100               	movlb	0	; () banked
  9380  002D54  6FB7               	movwf	(??___fladd+6)& (0+255),b
  9381  002D56  0100               	movlb	0	; () banked
  9382  002D58  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9383  002D5A  0100               	movlb	0	; () banked
  9384  002D5C  21B4               	addwfc	(??___fladd+3)& (0+255),w,b
  9385  002D5E  0100               	movlb	0	; () banked
  9386  002D60  6FB8               	movwf	(??___fladd+7)& (0+255),b
  9387  002D62  0EFF               	movlw	255
  9388  002D64  0100               	movlb	0	; () banked
  9389  002D66  25B5               	addwf	(??___fladd+4)& (0+255),w,b
  9390  002D68  0100               	movlb	0	; () banked
  9391  002D6A  6FA9               	movwf	___fladd@b& (0+255),b
  9392  002D6C  0EFF               	movlw	255
  9393  002D6E  0100               	movlb	0	; () banked
  9394  002D70  21B6               	addwfc	(??___fladd+5)& (0+255),w,b
  9395  002D72  0100               	movlb	0	; () banked
  9396  002D74  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9397  002D76  0EFF               	movlw	255
  9398  002D78  0100               	movlb	0	; () banked
  9399  002D7A  21B7               	addwfc	(??___fladd+6)& (0+255),w,b
  9400  002D7C  0100               	movlb	0	; () banked
  9401  002D7E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9402  002D80  0EFF               	movlw	255
  9403  002D82  0100               	movlb	0	; () banked
  9404  002D84  21B8               	addwfc	(??___fladd+7)& (0+255),w,b
  9405  002D86  0100               	movlb	0	; () banked
  9406  002D88  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9407  002D8A  0E80               	movlw	128
  9408  002D8C  0100               	movlb	0	; () banked
  9409  002D8E  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9410                           
  9411                           ; BSR set to: 0
  9412  002D90  0100               	movlb	0	; () banked
  9413  002D92  6DBC               	negf	___fladd@grs& (0+255),b
  9414                           
  9415                           ; BSR set to: 0
  9416  002D94  0100               	movlb	0	; () banked
  9417  002D96  51BC               	movf	___fladd@grs& (0+255),w,b
  9418  002D98  0100               	movlb	0	; () banked
  9419  002D9A  A4D8               	btfss	status,2,c
  9420  002D9C  D018               	goto	l1328
  9421                           
  9422                           ; BSR set to: 0
  9423  002D9E  0E01               	movlw	1
  9424  002DA0  0100               	movlb	0	; () banked
  9425  002DA2  27A9               	addwf	___fladd@b& (0+255),f,b
  9426  002DA4  0E00               	movlw	0
  9427  002DA6  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9428  002DA8  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9429  002DAA  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9430                           
  9431                           ; BSR set to: 0
  9432  002DAC  D010               	goto	l1328
  9433  002DAE                     l6340:
  9434                           
  9435                           ; BSR set to: 0
  9436  002DAE  0100               	movlb	0	; () banked
  9437  002DB0  51AD               	movf	___fladd@a& (0+255),w,b
  9438  002DB2  0100               	movlb	0	; () banked
  9439  002DB4  5FA9               	subwf	___fladd@b& (0+255),f,b
  9440  002DB6  0100               	movlb	0	; () banked
  9441  002DB8  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9442  002DBA  0100               	movlb	0	; () banked
  9443  002DBC  5BAA               	subwfb	(___fladd@b+1)& (0+255),f,b
  9444  002DBE  0100               	movlb	0	; () banked
  9445  002DC0  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9446  002DC2  0100               	movlb	0	; () banked
  9447  002DC4  5BAB               	subwfb	(___fladd@b+2)& (0+255),f,b
  9448  002DC6  0100               	movlb	0	; () banked
  9449  002DC8  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9450  002DCA  0100               	movlb	0	; () banked
  9451  002DCC  5BAC               	subwfb	(___fladd@b+3)& (0+255),f,b
  9452  002DCE                     l1328:
  9453                           
  9454                           ; BSR set to: 0
  9455  002DCE  0100               	movlb	0	; () banked
  9456  002DD0  51A9               	movf	___fladd@b& (0+255),w,b
  9457  002DD2  0100               	movlb	0	; () banked
  9458  002DD4  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9459  002DD6  0100               	movlb	0	; () banked
  9460  002DD8  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9461  002DDA  0100               	movlb	0	; () banked
  9462  002DDC  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9463  002DDE  A4D8               	btfss	status,2,c
  9464  002DE0  D02A               	goto	l6364
  9465                           
  9466                           ; BSR set to: 0
  9467  002DE2  0100               	movlb	0	; () banked
  9468  002DE4  51BC               	movf	___fladd@grs& (0+255),w,b
  9469  002DE6  0100               	movlb	0	; () banked
  9470  002DE8  A4D8               	btfss	status,2,c
  9471  002DEA  D025               	goto	l6364
  9472                           
  9473                           ; BSR set to: 0
  9474  002DEC  0E00               	movlw	0
  9475  002DEE  0100               	movlb	0	; () banked
  9476  002DF0  6FA9               	movwf	?___fladd& (0+255),b
  9477  002DF2  0E00               	movlw	0
  9478  002DF4  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9479  002DF6  0E00               	movlw	0
  9480  002DF8  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9481  002DFA  0E00               	movlw	0
  9482  002DFC  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9483                           
  9484                           ; BSR set to: 0
  9485  002DFE  0012               	return	
  9486  002E00                     l6348:
  9487                           
  9488                           ; BSR set to: 0
  9489  002E00  0100               	movlb	0	; () banked
  9490  002E02  90D8               	bcf	status,0,c
  9491  002E04  37A9               	rlcf	___fladd@b& (0+255),f,b
  9492  002E06  37AA               	rlcf	(___fladd@b+1)& (0+255),f,b
  9493  002E08  37AB               	rlcf	(___fladd@b+2)& (0+255),f,b
  9494  002E0A  37AC               	rlcf	(___fladd@b+3)& (0+255),f,b
  9495                           
  9496                           ; BSR set to: 0
  9497  002E0C  0100               	movlb	0	; () banked
  9498  002E0E  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9499  002E10  D002               	goto	l6354
  9500                           
  9501                           ; BSR set to: 0
  9502  002E12  0100               	movlb	0	; () banked
  9503  002E14  81A9               	bsf	___fladd@b& (0+255),0,b
  9504  002E16                     l6354:
  9505                           
  9506                           ; BSR set to: 0
  9507  002E16  0100               	movlb	0	; () banked
  9508  002E18  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9509  002E1A  D003               	goto	l6358
  9510                           
  9511                           ; BSR set to: 0
  9512  002E1C  80D8               	bsf	status,0,c
  9513  002E1E  0100               	movlb	0	; () banked
  9514  002E20  D002               	goto	L5
  9515  002E22                     l6358:
  9516                           
  9517                           ; BSR set to: 0
  9518  002E22  0100               	movlb	0	; () banked
  9519  002E24  90D8               	bcf	status,0,c
  9520  002E26                     L5:
  9521  002E26  37BC               	rlcf	___fladd@grs& (0+255),f,b
  9522                           
  9523                           ; BSR set to: 0
  9524                           
  9525                           ; BSR set to: 0
  9526  002E28  0100               	movlb	0	; () banked
  9527  002E2A  51BB               	movf	___fladd@bexp& (0+255),w,b
  9528  002E2C  0100               	movlb	0	; () banked
  9529  002E2E  B4D8               	btfsc	status,2,c
  9530  002E30  D002               	goto	l6364
  9531                           
  9532                           ; BSR set to: 0
  9533  002E32  0100               	movlb	0	; () banked
  9534  002E34  07BB               	decf	___fladd@bexp& (0+255),f,b
  9535  002E36                     l6364:
  9536                           
  9537                           ; BSR set to: 0
  9538  002E36  0100               	movlb	0	; () banked
  9539  002E38  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  9540  002E3A  D7E2               	goto	l6348
  9541  002E3C                     l6366:
  9542                           
  9543                           ; BSR set to: 0
  9544  002E3C  0E00               	movlw	0
  9545  002E3E  0100               	movlb	0	; () banked
  9546  002E40  6FBA               	movwf	___fladd@aexp& (0+255),b
  9547                           
  9548                           ; BSR set to: 0
  9549  002E42  0100               	movlb	0	; () banked
  9550  002E44  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9551  002E46  D00D               	goto	l1337
  9552                           
  9553                           ; BSR set to: 0
  9554  002E48  C0BC  F0B1         	movff	___fladd@grs,??___fladd
  9555  002E4C  0E7F               	movlw	127
  9556  002E4E  0100               	movlb	0	; () banked
  9557  002E50  17B1               	andwf	??___fladd& (0+255),f,b
  9558  002E52  A4D8               	btfss	status,2,c
  9559  002E54  D003               	goto	l6374
  9560                           
  9561                           ; BSR set to: 0
  9562                           
  9563                           ; BSR set to: 0
  9564  002E56  0100               	movlb	0	; () banked
  9565  002E58  A1A9               	btfss	___fladd@b& (0+255),0,b
  9566  002E5A  D003               	goto	l1337
  9567  002E5C                     l6374:
  9568                           
  9569                           ; BSR set to: 0
  9570  002E5C  0E01               	movlw	1
  9571  002E5E  0100               	movlb	0	; () banked
  9572  002E60  6FBA               	movwf	___fladd@aexp& (0+255),b
  9573  002E62                     l1337:
  9574                           
  9575                           ; BSR set to: 0
  9576  002E62  0100               	movlb	0	; () banked
  9577  002E64  51BA               	movf	___fladd@aexp& (0+255),w,b
  9578  002E66  0100               	movlb	0	; () banked
  9579  002E68  B4D8               	btfsc	status,2,c
  9580  002E6A  D026               	goto	l6384
  9581                           
  9582                           ; BSR set to: 0
  9583  002E6C  0E01               	movlw	1
  9584  002E6E  0100               	movlb	0	; () banked
  9585  002E70  27A9               	addwf	___fladd@b& (0+255),f,b
  9586  002E72  0E00               	movlw	0
  9587  002E74  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9588  002E76  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9589  002E78  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9590                           
  9591                           ; BSR set to: 0
  9592  002E7A  0100               	movlb	0	; () banked
  9593  002E7C  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9594  002E7E  D01C               	goto	l6384
  9595                           
  9596                           ; BSR set to: 0
  9597  002E80  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9598  002E84  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9599  002E88  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9600  002E8C  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9601  002E90  0100               	movlb	0	; () banked
  9602  002E92  35B4               	rlcf	(??___fladd+3)& (0+255),w,b
  9603  002E94  33B4               	rrcf	(??___fladd+3)& (0+255),f,b
  9604  002E96  33B3               	rrcf	(??___fladd+2)& (0+255),f,b
  9605  002E98  33B2               	rrcf	(??___fladd+1)& (0+255),f,b
  9606  002E9A  33B1               	rrcf	??___fladd& (0+255),f,b
  9607  002E9C  C0B1  F0A9         	movff	??___fladd,___fladd@b
  9608  002EA0  C0B2  F0AA         	movff	??___fladd+1,___fladd@b+1
  9609  002EA4  C0B3  F0AB         	movff	??___fladd+2,___fladd@b+2
  9610  002EA8  C0B4  F0AC         	movff	??___fladd+3,___fladd@b+3
  9611  002EAC  0100               	movlb	0	; () banked
  9612  002EAE  29BB               	incf	___fladd@bexp& (0+255),w,b
  9613  002EB0  B4D8               	btfsc	status,2,c
  9614  002EB2  D002               	goto	l6384
  9615                           
  9616                           ; BSR set to: 0
  9617  002EB4  0100               	movlb	0	; () banked
  9618  002EB6  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9619  002EB8                     l6384:
  9620                           
  9621                           ; BSR set to: 0
  9622  002EB8  0100               	movlb	0	; () banked
  9623  002EBA  29BB               	incf	___fladd@bexp& (0+255),w,b
  9624  002EBC  B4D8               	btfsc	status,2,c
  9625  002EBE  D005               	goto	l6388
  9626                           
  9627                           ; BSR set to: 0
  9628  002EC0  0100               	movlb	0	; () banked
  9629  002EC2  51BB               	movf	___fladd@bexp& (0+255),w,b
  9630  002EC4  0100               	movlb	0	; () banked
  9631  002EC6  A4D8               	btfss	status,2,c
  9632  002EC8  D011               	goto	l6392
  9633  002ECA                     l6388:
  9634                           
  9635                           ; BSR set to: 0
  9636  002ECA  0E00               	movlw	0
  9637  002ECC  0100               	movlb	0	; () banked
  9638  002ECE  6FA9               	movwf	___fladd@b& (0+255),b
  9639  002ED0  0E00               	movlw	0
  9640  002ED2  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9641  002ED4  0E00               	movlw	0
  9642  002ED6  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9643  002ED8  0E00               	movlw	0
  9644  002EDA  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9645  002EDC  0100               	movlb	0	; () banked
  9646  002EDE  51BB               	movf	___fladd@bexp& (0+255),w,b
  9647  002EE0  0100               	movlb	0	; () banked
  9648  002EE2  A4D8               	btfss	status,2,c
  9649  002EE4  D003               	goto	l6392
  9650                           
  9651                           ; BSR set to: 0
  9652  002EE6  0E00               	movlw	0
  9653  002EE8  0100               	movlb	0	; () banked
  9654  002EEA  6FB9               	movwf	___fladd@signs& (0+255),b
  9655  002EEC                     l6392:
  9656                           
  9657                           ; BSR set to: 0
  9658  002EEC  0100               	movlb	0	; () banked
  9659  002EEE  A1BB               	btfss	___fladd@bexp& (0+255),0,b
  9660  002EF0  D003               	goto	l6396
  9661                           
  9662                           ; BSR set to: 0
  9663  002EF2  0100               	movlb	0	; () banked
  9664  002EF4  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  9665  002EF6  D002               	goto	l6398
  9666  002EF8                     l6396:
  9667                           
  9668                           ; BSR set to: 0
  9669  002EF8  0100               	movlb	0	; () banked
  9670  002EFA  9FAB               	bcf	(___fladd@b+2)& (0+255),7,b
  9671  002EFC                     l6398:
  9672                           
  9673                           ; BSR set to: 0
  9674  002EFC  0100               	movlb	0	; () banked
  9675  002EFE  90D8               	bcf	status,0,c
  9676  002F00  31BB               	rrcf	___fladd@bexp& (0+255),w,b
  9677  002F02  0100               	movlb	0	; () banked
  9678  002F04  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9679                           
  9680                           ; BSR set to: 0
  9681  002F06  0100               	movlb	0	; () banked
  9682  002F08  AFB9               	btfss	___fladd@signs& (0+255),7,b
  9683  002F0A  D002               	goto	l6404
  9684                           
  9685                           ; BSR set to: 0
  9686  002F0C  0100               	movlb	0	; () banked
  9687  002F0E  8FAC               	bsf	(___fladd@b+3)& (0+255),7,b
  9688  002F10                     l6404:
  9689                           
  9690                           ; BSR set to: 0
  9691  002F10  C0A9  F0A9         	movff	___fladd@b,?___fladd
  9692  002F14  C0AA  F0AA         	movff	___fladd@b+1,?___fladd+1
  9693  002F18  C0AB  F0AB         	movff	___fladd@b+2,?___fladd+2
  9694  002F1C  C0AC  F0AC         	movff	___fladd@b+3,?___fladd+3
  9695  002F20  0012               	return	
  9696  002F22                     __end_of___fladd:
  9697                           	opt stack 0
  9698                           tblptru	equ	0xFF8
  9699                           tblptrh	equ	0xFF7
  9700                           tblptrl	equ	0xFF6
  9701                           tablat	equ	0xFF5
  9702                           prodh	equ	0xFF4
  9703                           prodl	equ	0xFF3
  9704                           postinc0	equ	0xFEE
  9705                           wreg	equ	0xFE8
  9706                           postdec1	equ	0xFE5
  9707                           fsr1l	equ	0xFE1
  9708                           indf2	equ	0xFDF
  9709                           postinc2	equ	0xFDE
  9710                           postdec2	equ	0xFDD
  9711                           fsr2h	equ	0xFDA
  9712                           fsr2l	equ	0xFD9
  9713                           status	equ	0xFD8
  9714                           
  9715 ;; *************** function ___flge *****************
  9716 ;; Defined at:
  9717 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  9718 ;; Parameters:    Size  Location     Type
  9719 ;;  ff1             4  101[BANK0 ] unsigned char 
  9720 ;;  ff2             4  105[BANK0 ] unsigned char 
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;		None
  9723 ;; Return value:  Size  Location     Type
  9724 ;;		None               void
  9725 ;; Registers used:
  9726 ;;		wreg, status,2, status,0
  9727 ;; Tracked objects:
  9728 ;;		On entry : 0/0
  9729 ;;		On exit  : 0/0
  9730 ;;		Unchanged: 0/0
  9731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9732 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9734 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9735 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9736 ;;Total ram usage:       12 bytes
  9737 ;; Hardware stack levels used:    1
  9738 ;; Hardware stack levels required when called:    4
  9739 ;; This function calls:
  9740 ;;		Nothing
  9741 ;; This function is called by:
  9742 ;;		_parallelo
  9743 ;;		_asin
  9744 ;;		_atan
  9745 ;;		_cos
  9746 ;;		_sin
  9747 ;;		_floor
  9748 ;; This function uses a non-reentrant model
  9749 ;;
  9750                           
  9751                           	psect	text24
  9752  005314                     __ptext24:
  9753                           	opt stack 0
  9754  005314                     ___flge:
  9755                           	opt stack 22
  9756                           
  9757                           ; BSR set to: 0
  9758                           ;incstack = 0
  9759  005314  0E00               	movlw	0
  9760  005316  0100               	movlb	0	; () banked
  9761  005318  15C5               	andwf	___flge@ff1& (0+255),w,b
  9762  00531A  0100               	movlb	0	; () banked
  9763  00531C  6FCD               	movwf	??___flge& (0+255),b
  9764  00531E  0E00               	movlw	0
  9765  005320  0100               	movlb	0	; () banked
  9766  005322  15C6               	andwf	(___flge@ff1+1)& (0+255),w,b
  9767  005324  0100               	movlb	0	; () banked
  9768  005326  6FCE               	movwf	(??___flge+1)& (0+255),b
  9769  005328  0E80               	movlw	128
  9770  00532A  0100               	movlb	0	; () banked
  9771  00532C  15C7               	andwf	(___flge@ff1+2)& (0+255),w,b
  9772  00532E  0100               	movlb	0	; () banked
  9773  005330  6FCF               	movwf	(??___flge+2)& (0+255),b
  9774  005332  0E7F               	movlw	127
  9775  005334  0100               	movlb	0	; () banked
  9776  005336  15C8               	andwf	(___flge@ff1+3)& (0+255),w,b
  9777  005338  0100               	movlb	0	; () banked
  9778  00533A  6FD0               	movwf	(??___flge+3)& (0+255),b
  9779  00533C  0100               	movlb	0	; () banked
  9780  00533E  51CD               	movf	??___flge& (0+255),w,b
  9781  005340  0100               	movlb	0	; () banked
  9782  005342  11CE               	iorwf	(??___flge+1)& (0+255),w,b
  9783  005344  0100               	movlb	0	; () banked
  9784  005346  11CF               	iorwf	(??___flge+2)& (0+255),w,b
  9785  005348  0100               	movlb	0	; () banked
  9786  00534A  11D0               	iorwf	(??___flge+3)& (0+255),w,b
  9787  00534C  A4D8               	btfss	status,2,c
  9788  00534E  D009               	goto	l6542
  9789                           
  9790                           ; BSR set to: 0
  9791  005350  0E00               	movlw	0
  9792  005352  0100               	movlb	0	; () banked
  9793  005354  6FC5               	movwf	___flge@ff1& (0+255),b
  9794  005356  0E00               	movlw	0
  9795  005358  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  9796  00535A  0E00               	movlw	0
  9797  00535C  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  9798  00535E  0E00               	movlw	0
  9799  005360  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  9800  005362                     l6542:
  9801                           
  9802                           ; BSR set to: 0
  9803  005362  0E00               	movlw	0
  9804  005364  0100               	movlb	0	; () banked
  9805  005366  15C9               	andwf	___flge@ff2& (0+255),w,b
  9806  005368  0100               	movlb	0	; () banked
  9807  00536A  6FCD               	movwf	??___flge& (0+255),b
  9808  00536C  0E00               	movlw	0
  9809  00536E  0100               	movlb	0	; () banked
  9810  005370  15CA               	andwf	(___flge@ff2+1)& (0+255),w,b
  9811  005372  0100               	movlb	0	; () banked
  9812  005374  6FCE               	movwf	(??___flge+1)& (0+255),b
  9813  005376  0E80               	movlw	128
  9814  005378  0100               	movlb	0	; () banked
  9815  00537A  15CB               	andwf	(___flge@ff2+2)& (0+255),w,b
  9816  00537C  0100               	movlb	0	; () banked
  9817  00537E  6FCF               	movwf	(??___flge+2)& (0+255),b
  9818  005380  0E7F               	movlw	127
  9819  005382  0100               	movlb	0	; () banked
  9820  005384  15CC               	andwf	(___flge@ff2+3)& (0+255),w,b
  9821  005386  0100               	movlb	0	; () banked
  9822  005388  6FD0               	movwf	(??___flge+3)& (0+255),b
  9823  00538A  0100               	movlb	0	; () banked
  9824  00538C  51CD               	movf	??___flge& (0+255),w,b
  9825  00538E  0100               	movlb	0	; () banked
  9826  005390  11CE               	iorwf	(??___flge+1)& (0+255),w,b
  9827  005392  0100               	movlb	0	; () banked
  9828  005394  11CF               	iorwf	(??___flge+2)& (0+255),w,b
  9829  005396  0100               	movlb	0	; () banked
  9830  005398  11D0               	iorwf	(??___flge+3)& (0+255),w,b
  9831  00539A  A4D8               	btfss	status,2,c
  9832  00539C  D009               	goto	l6546
  9833                           
  9834                           ; BSR set to: 0
  9835  00539E  0E00               	movlw	0
  9836  0053A0  0100               	movlb	0	; () banked
  9837  0053A2  6FC9               	movwf	___flge@ff2& (0+255),b
  9838  0053A4  0E00               	movlw	0
  9839  0053A6  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  9840  0053A8  0E00               	movlw	0
  9841  0053AA  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  9842  0053AC  0E00               	movlw	0
  9843  0053AE  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  9844  0053B0                     l6546:
  9845                           
  9846                           ; BSR set to: 0
  9847  0053B0  0100               	movlb	0	; () banked
  9848  0053B2  AFC8               	btfss	(___flge@ff1+3)& (0+255),7,b
  9849  0053B4  D026               	goto	l6550
  9850                           
  9851                           ; BSR set to: 0
  9852  0053B6  C0C5  F0CD         	movff	___flge@ff1,??___flge
  9853  0053BA  C0C6  F0CE         	movff	___flge@ff1+1,??___flge+1
  9854  0053BE  C0C7  F0CF         	movff	___flge@ff1+2,??___flge+2
  9855  0053C2  C0C8  F0D0         	movff	___flge@ff1+3,??___flge+3
  9856  0053C6  0100               	movlb	0	; () banked
  9857  0053C8  1FCD               	comf	??___flge& (0+255),f,b
  9858  0053CA  1FCE               	comf	(??___flge+1)& (0+255),f,b
  9859  0053CC  1FCF               	comf	(??___flge+2)& (0+255),f,b
  9860  0053CE  1FD0               	comf	(??___flge+3)& (0+255),f,b
  9861  0053D0  2BCD               	incf	??___flge& (0+255),f,b
  9862  0053D2  0E00               	movlw	0
  9863  0053D4  23CE               	addwfc	(??___flge+1)& (0+255),f,b
  9864  0053D6  23CF               	addwfc	(??___flge+2)& (0+255),f,b
  9865  0053D8  23D0               	addwfc	(??___flge+3)& (0+255),f,b
  9866  0053DA  0E00               	movlw	0
  9867  0053DC  0100               	movlb	0	; () banked
  9868  0053DE  25CD               	addwf	??___flge& (0+255),w,b
  9869  0053E0  0100               	movlb	0	; () banked
  9870  0053E2  6FC5               	movwf	___flge@ff1& (0+255),b
  9871  0053E4  0E00               	movlw	0
  9872  0053E6  0100               	movlb	0	; () banked
  9873  0053E8  21CE               	addwfc	(??___flge+1)& (0+255),w,b
  9874  0053EA  0100               	movlb	0	; () banked
  9875  0053EC  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  9876  0053EE  0E00               	movlw	0
  9877  0053F0  0100               	movlb	0	; () banked
  9878  0053F2  21CF               	addwfc	(??___flge+2)& (0+255),w,b
  9879  0053F4  0100               	movlb	0	; () banked
  9880  0053F6  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  9881  0053F8  0E80               	movlw	128
  9882  0053FA  0100               	movlb	0	; () banked
  9883  0053FC  21D0               	addwfc	(??___flge+3)& (0+255),w,b
  9884  0053FE  0100               	movlb	0	; () banked
  9885  005400  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  9886  005402                     l6550:
  9887                           
  9888                           ; BSR set to: 0
  9889  005402  0100               	movlb	0	; () banked
  9890  005404  AFCC               	btfss	(___flge@ff2+3)& (0+255),7,b
  9891  005406  D026               	goto	l1059
  9892                           
  9893                           ; BSR set to: 0
  9894  005408  C0C9  F0CD         	movff	___flge@ff2,??___flge
  9895  00540C  C0CA  F0CE         	movff	___flge@ff2+1,??___flge+1
  9896  005410  C0CB  F0CF         	movff	___flge@ff2+2,??___flge+2
  9897  005414  C0CC  F0D0         	movff	___flge@ff2+3,??___flge+3
  9898  005418  0100               	movlb	0	; () banked
  9899  00541A  1FCD               	comf	??___flge& (0+255),f,b
  9900  00541C  1FCE               	comf	(??___flge+1)& (0+255),f,b
  9901  00541E  1FCF               	comf	(??___flge+2)& (0+255),f,b
  9902  005420  1FD0               	comf	(??___flge+3)& (0+255),f,b
  9903  005422  2BCD               	incf	??___flge& (0+255),f,b
  9904  005424  0E00               	movlw	0
  9905  005426  23CE               	addwfc	(??___flge+1)& (0+255),f,b
  9906  005428  23CF               	addwfc	(??___flge+2)& (0+255),f,b
  9907  00542A  23D0               	addwfc	(??___flge+3)& (0+255),f,b
  9908  00542C  0E00               	movlw	0
  9909  00542E  0100               	movlb	0	; () banked
  9910  005430  25CD               	addwf	??___flge& (0+255),w,b
  9911  005432  0100               	movlb	0	; () banked
  9912  005434  6FC9               	movwf	___flge@ff2& (0+255),b
  9913  005436  0E00               	movlw	0
  9914  005438  0100               	movlb	0	; () banked
  9915  00543A  21CE               	addwfc	(??___flge+1)& (0+255),w,b
  9916  00543C  0100               	movlb	0	; () banked
  9917  00543E  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  9918  005440  0E00               	movlw	0
  9919  005442  0100               	movlb	0	; () banked
  9920  005444  21CF               	addwfc	(??___flge+2)& (0+255),w,b
  9921  005446  0100               	movlb	0	; () banked
  9922  005448  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  9923  00544A  0E80               	movlw	128
  9924  00544C  0100               	movlb	0	; () banked
  9925  00544E  21D0               	addwfc	(??___flge+3)& (0+255),w,b
  9926  005450  0100               	movlb	0	; () banked
  9927  005452  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  9928  005454                     l1059:
  9929                           
  9930                           ; BSR set to: 0
  9931  005454  0E00               	movlw	0
  9932  005456  0100               	movlb	0	; () banked
  9933  005458  1BC5               	xorwf	___flge@ff1& (0+255),f,b
  9934  00545A  0E00               	movlw	0
  9935  00545C  1BC6               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9936  00545E  0E00               	movlw	0
  9937  005460  1BC7               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9938  005462  0E80               	movlw	128
  9939  005464  1BC8               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9940  005466  0E00               	movlw	0
  9941  005468  0100               	movlb	0	; () banked
  9942  00546A  1BC9               	xorwf	___flge@ff2& (0+255),f,b
  9943  00546C  0E00               	movlw	0
  9944  00546E  1BCA               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9945  005470  0E00               	movlw	0
  9946  005472  1BCB               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9947  005474  0E80               	movlw	128
  9948  005476  1BCC               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9949  005478  0100               	movlb	0	; () banked
  9950  00547A  51C9               	movf	___flge@ff2& (0+255),w,b
  9951  00547C  0100               	movlb	0	; () banked
  9952  00547E  5DC5               	subwf	___flge@ff1& (0+255),w,b
  9953  005480  0100               	movlb	0	; () banked
  9954  005482  51CA               	movf	(___flge@ff2+1)& (0+255),w,b
  9955  005484  0100               	movlb	0	; () banked
  9956  005486  59C6               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9957  005488  0100               	movlb	0	; () banked
  9958  00548A  51CB               	movf	(___flge@ff2+2)& (0+255),w,b
  9959  00548C  0100               	movlb	0	; () banked
  9960  00548E  59C7               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9961  005490  0100               	movlb	0	; () banked
  9962  005492  51CC               	movf	(___flge@ff2+3)& (0+255),w,b
  9963  005494  0100               	movlb	0	; () banked
  9964  005496  59C8               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9965  005498  B0D8               	btfsc	status,0,c
  9966  00549A  D002               	goto	l6556
  9967                           
  9968                           ; BSR set to: 0
  9969  00549C  90D8               	bcf	status,0,c
  9970  00549E  0012               	return	
  9971  0054A0                     l6556:
  9972                           
  9973                           ; BSR set to: 0
  9974  0054A0  80D8               	bsf	status,0,c
  9975                           
  9976                           ; BSR set to: 0
  9977  0054A2  0012               	return	
  9978  0054A4                     __end_of___flge:
  9979                           	opt stack 0
  9980                           tblptru	equ	0xFF8
  9981                           tblptrh	equ	0xFF7
  9982                           tblptrl	equ	0xFF6
  9983                           tablat	equ	0xFF5
  9984                           prodh	equ	0xFF4
  9985                           prodl	equ	0xFF3
  9986                           postinc0	equ	0xFEE
  9987                           wreg	equ	0xFE8
  9988                           postdec1	equ	0xFE5
  9989                           fsr1l	equ	0xFE1
  9990                           indf2	equ	0xFDF
  9991                           postinc2	equ	0xFDE
  9992                           postdec2	equ	0xFDD
  9993                           fsr2h	equ	0xFDA
  9994                           fsr2l	equ	0xFD9
  9995                           status	equ	0xFD8
  9996                           
  9997 ;; *************** function ___fldiv *****************
  9998 ;; Defined at:
  9999 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 10000 ;; Parameters:    Size  Location     Type
 10001 ;;  b               4   23[BANK0 ] unsigned char 
 10002 ;;  a               4   27[BANK0 ] unsigned char 
 10003 ;; Auto vars:     Size  Location     Type
 10004 ;;  grs             4   42[BANK0 ] unsigned long 
 10005 ;;  rem             4   36[BANK0 ] unsigned long 
 10006 ;;  new_exp         2   40[BANK0 ] int 
 10007 ;;  aexp            1   47[BANK0 ] unsigned char 
 10008 ;;  bexp            1   46[BANK0 ] unsigned char 
 10009 ;;  sign            1   35[BANK0 ] unsigned char 
 10010 ;; Return value:  Size  Location     Type
 10011 ;;                  4   23[BANK0 ] unsigned char 
 10012 ;; Registers used:
 10013 ;;		wreg, status,2, status,0
 10014 ;; Tracked objects:
 10015 ;;		On entry : 0/0
 10016 ;;		On exit  : 0/0
 10017 ;;		Unchanged: 0/0
 10018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10019 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10020 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10021 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10022 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10023 ;;Total ram usage:       25 bytes
 10024 ;; Hardware stack levels used:    1
 10025 ;; Hardware stack levels required when called:    4
 10026 ;; This function calls:
 10027 ;;		Nothing
 10028 ;; This function is called by:
 10029 ;;		_parallelo
 10030 ;;		_matematica
 10031 ;;		_asin
 10032 ;;		_atan
 10033 ;;		_sin
 10034 ;; This function uses a non-reentrant model
 10035 ;;
 10036                           
 10037                           	psect	text25
 10038  003B6E                     __ptext25:
 10039                           	opt stack 0
 10040  003B6E                     ___fldiv:
 10041                           	opt stack 22
 10042                           
 10043                           ; BSR set to: 0
 10044                           ;incstack = 0
 10045  003B6E  0100               	movlb	0	; () banked
 10046  003B70  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10047  003B72  0B80               	andlw	128
 10048  003B74  0100               	movlb	0	; () banked
 10049  003B76  6F83               	movwf	___fldiv@sign& (0+255),b
 10050  003B78  0100               	movlb	0	; () banked
 10051  003B7A  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10052  003B7C  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
 10053  003B7E  0100               	movlb	0	; () banked
 10054  003B80  6F8E               	movwf	___fldiv@bexp& (0+255),b
 10055                           
 10056                           ; BSR set to: 0
 10057  003B82  0100               	movlb	0	; () banked
 10058  003B84  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10059  003B86  D002               	goto	l6676
 10060                           
 10061                           ; BSR set to: 0
 10062  003B88  0100               	movlb	0	; () banked
 10063  003B8A  818E               	bsf	___fldiv@bexp& (0+255),0,b
 10064  003B8C                     l6676:
 10065                           
 10066                           ; BSR set to: 0
 10067  003B8C  0100               	movlb	0	; () banked
 10068  003B8E  518E               	movf	___fldiv@bexp& (0+255),w,b
 10069  003B90  0100               	movlb	0	; () banked
 10070  003B92  B4D8               	btfsc	status,2,c
 10071  003B94  D012               	goto	l6686
 10072                           
 10073                           ; BSR set to: 0
 10074  003B96  0100               	movlb	0	; () banked
 10075  003B98  298E               	incf	___fldiv@bexp& (0+255),w,b
 10076  003B9A  A4D8               	btfss	status,2,c
 10077  003B9C  D009               	goto	l6682
 10078                           
 10079                           ; BSR set to: 0
 10080  003B9E  0E00               	movlw	0
 10081  003BA0  0100               	movlb	0	; () banked
 10082  003BA2  6F77               	movwf	___fldiv@b& (0+255),b
 10083  003BA4  0E00               	movlw	0
 10084  003BA6  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10085  003BA8  0E00               	movlw	0
 10086  003BAA  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10087  003BAC  0E00               	movlw	0
 10088  003BAE  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10089  003BB0                     l6682:
 10090                           
 10091                           ; BSR set to: 0
 10092  003BB0  0100               	movlb	0	; () banked
 10093  003BB2  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10094                           
 10095                           ; BSR set to: 0
 10096  003BB4  0E00               	movlw	0
 10097  003BB6  0100               	movlb	0	; () banked
 10098  003BB8  D008               	goto	L6
 10099  003BBA                     l6686:
 10100                           
 10101                           ; BSR set to: 0
 10102  003BBA  0E00               	movlw	0
 10103  003BBC  0100               	movlb	0	; () banked
 10104  003BBE  6F77               	movwf	___fldiv@b& (0+255),b
 10105  003BC0  0E00               	movlw	0
 10106  003BC2  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10107  003BC4  0E00               	movlw	0
 10108  003BC6  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10109  003BC8  0E00               	movlw	0
 10110  003BCA                     L6:
 10111  003BCA  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10112                           
 10113                           ; BSR set to: 0
 10114                           
 10115                           ; BSR set to: 0
 10116  003BCC  0100               	movlb	0	; () banked
 10117  003BCE  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10118  003BD0  0B80               	andlw	128
 10119  003BD2  0100               	movlb	0	; () banked
 10120  003BD4  1B83               	xorwf	___fldiv@sign& (0+255),f,b
 10121                           
 10122                           ; BSR set to: 0
 10123  003BD6  0100               	movlb	0	; () banked
 10124  003BD8  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10125  003BDA  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
 10126  003BDC  0100               	movlb	0	; () banked
 10127  003BDE  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10128                           
 10129                           ; BSR set to: 0
 10130  003BE0  0100               	movlb	0	; () banked
 10131  003BE2  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
 10132  003BE4  D002               	goto	l6696
 10133                           
 10134                           ; BSR set to: 0
 10135  003BE6  0100               	movlb	0	; () banked
 10136  003BE8  818F               	bsf	___fldiv@aexp& (0+255),0,b
 10137  003BEA                     l6696:
 10138                           
 10139                           ; BSR set to: 0
 10140  003BEA  0100               	movlb	0	; () banked
 10141  003BEC  518F               	movf	___fldiv@aexp& (0+255),w,b
 10142  003BEE  0100               	movlb	0	; () banked
 10143  003BF0  B4D8               	btfsc	status,2,c
 10144  003BF2  D012               	goto	l6706
 10145                           
 10146                           ; BSR set to: 0
 10147  003BF4  0100               	movlb	0	; () banked
 10148  003BF6  298F               	incf	___fldiv@aexp& (0+255),w,b
 10149  003BF8  A4D8               	btfss	status,2,c
 10150  003BFA  D009               	goto	l6702
 10151                           
 10152                           ; BSR set to: 0
 10153  003BFC  0E00               	movlw	0
 10154  003BFE  0100               	movlb	0	; () banked
 10155  003C00  6F7B               	movwf	___fldiv@a& (0+255),b
 10156  003C02  0E00               	movlw	0
 10157  003C04  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10158  003C06  0E00               	movlw	0
 10159  003C08  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10160  003C0A  0E00               	movlw	0
 10161  003C0C  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10162  003C0E                     l6702:
 10163                           
 10164                           ; BSR set to: 0
 10165  003C0E  0100               	movlb	0	; () banked
 10166  003C10  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
 10167                           
 10168                           ; BSR set to: 0
 10169  003C12  0E00               	movlw	0
 10170  003C14  0100               	movlb	0	; () banked
 10171  003C16  D008               	goto	L7
 10172  003C18                     l6706:
 10173                           
 10174                           ; BSR set to: 0
 10175  003C18  0E00               	movlw	0
 10176  003C1A  0100               	movlb	0	; () banked
 10177  003C1C  6F7B               	movwf	___fldiv@a& (0+255),b
 10178  003C1E  0E00               	movlw	0
 10179  003C20  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10180  003C22  0E00               	movlw	0
 10181  003C24  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10182  003C26  0E00               	movlw	0
 10183  003C28                     L7:
 10184  003C28  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10185                           
 10186                           ; BSR set to: 0
 10187                           
 10188                           ; BSR set to: 0
 10189  003C2A  0100               	movlb	0	; () banked
 10190  003C2C  517B               	movf	___fldiv@a& (0+255),w,b
 10191  003C2E  0100               	movlb	0	; () banked
 10192  003C30  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10193  003C32  0100               	movlb	0	; () banked
 10194  003C34  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10195  003C36  0100               	movlb	0	; () banked
 10196  003C38  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10197  003C3A  A4D8               	btfss	status,2,c
 10198  003C3C  D017               	goto	l6718
 10199                           
 10200                           ; BSR set to: 0
 10201  003C3E  0E00               	movlw	0
 10202  003C40  0100               	movlb	0	; () banked
 10203  003C42  6F77               	movwf	___fldiv@b& (0+255),b
 10204  003C44  0E00               	movlw	0
 10205  003C46  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10206  003C48  0E00               	movlw	0
 10207  003C4A  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10208  003C4C  0E00               	movlw	0
 10209  003C4E  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10210                           
 10211                           ; BSR set to: 0
 10212  003C50  0100               	movlb	0	; () banked
 10213  003C52  0E80               	movlw	128
 10214  003C54  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10215  003C56  0E7F               	movlw	127
 10216  003C58  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10217                           
 10218                           ; BSR set to: 0
 10219  003C5A  C077  F077         	movff	___fldiv@b,?___fldiv
 10220  003C5E  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10221  003C62  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10222  003C66  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10223                           
 10224                           ; BSR set to: 0
 10225  003C6A  0012               	return	
 10226  003C6C                     l6718:
 10227                           
 10228                           ; BSR set to: 0
 10229  003C6C  0100               	movlb	0	; () banked
 10230  003C6E  518E               	movf	___fldiv@bexp& (0+255),w,b
 10231  003C70  0100               	movlb	0	; () banked
 10232  003C72  A4D8               	btfss	status,2,c
 10233  003C74  D012               	goto	l6726
 10234                           
 10235                           ; BSR set to: 0
 10236  003C76  0E00               	movlw	0
 10237  003C78  0100               	movlb	0	; () banked
 10238  003C7A  6F77               	movwf	___fldiv@b& (0+255),b
 10239  003C7C  0E00               	movlw	0
 10240  003C7E  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10241  003C80  0E00               	movlw	0
 10242  003C82  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10243  003C84  0E00               	movlw	0
 10244  003C86  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10245                           
 10246                           ; BSR set to: 0
 10247  003C88  C077  F077         	movff	___fldiv@b,?___fldiv
 10248  003C8C  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10249  003C90  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10250  003C94  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10251                           
 10252                           ; BSR set to: 0
 10253  003C98  0012               	return	
 10254  003C9A                     l6726:
 10255                           
 10256                           ; BSR set to: 0
 10257  003C9A  0100               	movlb	0	; () banked
 10258  003C9C  518F               	movf	___fldiv@aexp& (0+255),w,b
 10259  003C9E  0100               	movlb	0	; () banked
 10260  003CA0  6F7F               	movwf	??___fldiv& (0+255),b
 10261  003CA2  6B80               	clrf	(??___fldiv+1)& (0+255),b
 10262  003CA4  0100               	movlb	0	; () banked
 10263  003CA6  1F7F               	comf	??___fldiv& (0+255),f,b
 10264  003CA8  1F80               	comf	(??___fldiv+1)& (0+255),f,b
 10265  003CAA  4B7F               	infsnz	??___fldiv& (0+255),f,b
 10266  003CAC  2B80               	incf	(??___fldiv+1)& (0+255),f,b
 10267  003CAE  0100               	movlb	0	; () banked
 10268  003CB0  518E               	movf	___fldiv@bexp& (0+255),w,b
 10269  003CB2  0100               	movlb	0	; () banked
 10270  003CB4  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10271  003CB6  6B82               	clrf	(??___fldiv+3)& (0+255),b
 10272  003CB8  0100               	movlb	0	; () banked
 10273  003CBA  517F               	movf	??___fldiv& (0+255),w,b
 10274  003CBC  0100               	movlb	0	; () banked
 10275  003CBE  2781               	addwf	(??___fldiv+2)& (0+255),f,b
 10276  003CC0  0100               	movlb	0	; () banked
 10277  003CC2  5180               	movf	(??___fldiv+1)& (0+255),w,b
 10278  003CC4  0100               	movlb	0	; () banked
 10279  003CC6  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
 10280  003CC8  0E7F               	movlw	127
 10281  003CCA  0100               	movlb	0	; () banked
 10282  003CCC  2581               	addwf	(??___fldiv+2)& (0+255),w,b
 10283  003CCE  0100               	movlb	0	; () banked
 10284  003CD0  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10285  003CD2  0E00               	movlw	0
 10286  003CD4  0100               	movlb	0	; () banked
 10287  003CD6  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
 10288  003CD8  0100               	movlb	0	; () banked
 10289  003CDA  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10290                           
 10291                           ; BSR set to: 0
 10292  003CDC  C077  F084         	movff	___fldiv@b,___fldiv@rem
 10293  003CE0  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 10294  003CE4  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 10295  003CE8  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 10296                           
 10297                           ; BSR set to: 0
 10298  003CEC  0E00               	movlw	0
 10299  003CEE  0100               	movlb	0	; () banked
 10300  003CF0  6F77               	movwf	___fldiv@b& (0+255),b
 10301  003CF2  0E00               	movlw	0
 10302  003CF4  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10303  003CF6  0E00               	movlw	0
 10304  003CF8  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10305  003CFA  0E00               	movlw	0
 10306  003CFC  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10307                           
 10308                           ; BSR set to: 0
 10309  003CFE  0E00               	movlw	0
 10310  003D00  0100               	movlb	0	; () banked
 10311  003D02  6F8A               	movwf	___fldiv@grs& (0+255),b
 10312  003D04  0E00               	movlw	0
 10313  003D06  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
 10314  003D08  0E00               	movlw	0
 10315  003D0A  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
 10316  003D0C  0E00               	movlw	0
 10317  003D0E  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
 10318                           
 10319                           ; BSR set to: 0
 10320  003D10  0E00               	movlw	0
 10321  003D12  0100               	movlb	0	; () banked
 10322  003D14  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10323  003D16  D042               	goto	l1367
 10324  003D18                     l6736:
 10325                           
 10326                           ; BSR set to: 0
 10327  003D18  0100               	movlb	0	; () banked
 10328  003D1A  518F               	movf	___fldiv@aexp& (0+255),w,b
 10329  003D1C  0100               	movlb	0	; () banked
 10330  003D1E  B4D8               	btfsc	status,2,c
 10331  003D20  D017               	goto	l6744
 10332                           
 10333                           ; BSR set to: 0
 10334  003D22  0100               	movlb	0	; () banked
 10335  003D24  90D8               	bcf	status,0,c
 10336  003D26  3784               	rlcf	___fldiv@rem& (0+255),f,b
 10337  003D28  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10338  003D2A  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10339  003D2C  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10340  003D2E  0100               	movlb	0	; () banked
 10341  003D30  90D8               	bcf	status,0,c
 10342  003D32  3777               	rlcf	___fldiv@b& (0+255),f,b
 10343  003D34  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10344  003D36  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10345  003D38  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10346                           
 10347                           ; BSR set to: 0
 10348  003D3A  0100               	movlb	0	; () banked
 10349  003D3C  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10350  003D3E  D002               	goto	l1370
 10351                           
 10352                           ; BSR set to: 0
 10353  003D40  0100               	movlb	0	; () banked
 10354  003D42  8177               	bsf	___fldiv@b& (0+255),0,b
 10355  003D44                     l1370:
 10356                           
 10357                           ; BSR set to: 0
 10358  003D44  0100               	movlb	0	; () banked
 10359  003D46  90D8               	bcf	status,0,c
 10360  003D48  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10361  003D4A  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10362  003D4C  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10363  003D4E  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10364  003D50                     l6744:
 10365                           
 10366                           ; BSR set to: 0
 10367  003D50  0100               	movlb	0	; () banked
 10368  003D52  517B               	movf	___fldiv@a& (0+255),w,b
 10369  003D54  0100               	movlb	0	; () banked
 10370  003D56  5D84               	subwf	___fldiv@rem& (0+255),w,b
 10371  003D58  0100               	movlb	0	; () banked
 10372  003D5A  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10373  003D5C  0100               	movlb	0	; () banked
 10374  003D5E  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10375  003D60  0100               	movlb	0	; () banked
 10376  003D62  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10377  003D64  0100               	movlb	0	; () banked
 10378  003D66  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10379  003D68  0100               	movlb	0	; () banked
 10380  003D6A  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10381  003D6C  0100               	movlb	0	; () banked
 10382  003D6E  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10383  003D70  A0D8               	btfss	status,0,c
 10384  003D72  D012               	goto	l6750
 10385                           
 10386                           ; BSR set to: 0
 10387  003D74  0100               	movlb	0	; () banked
 10388  003D76  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10389                           
 10390                           ; BSR set to: 0
 10391  003D78  0100               	movlb	0	; () banked
 10392  003D7A  517B               	movf	___fldiv@a& (0+255),w,b
 10393  003D7C  0100               	movlb	0	; () banked
 10394  003D7E  5F84               	subwf	___fldiv@rem& (0+255),f,b
 10395  003D80  0100               	movlb	0	; () banked
 10396  003D82  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10397  003D84  0100               	movlb	0	; () banked
 10398  003D86  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10399  003D88  0100               	movlb	0	; () banked
 10400  003D8A  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10401  003D8C  0100               	movlb	0	; () banked
 10402  003D8E  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10403  003D90  0100               	movlb	0	; () banked
 10404  003D92  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10405  003D94  0100               	movlb	0	; () banked
 10406  003D96  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10407  003D98                     l6750:
 10408                           
 10409                           ; BSR set to: 0
 10410  003D98  0100               	movlb	0	; () banked
 10411  003D9A  2B8F               	incf	___fldiv@aexp& (0+255),f,b
 10412  003D9C                     l1367:
 10413                           
 10414                           ; BSR set to: 0
 10415  003D9C  0E19               	movlw	25
 10416  003D9E  0100               	movlb	0	; () banked
 10417  003DA0  658F               	cpfsgt	___fldiv@aexp& (0+255),b
 10418  003DA2  D7BA               	goto	l6736
 10419                           
 10420                           ; BSR set to: 0
 10421                           
 10422                           ; BSR set to: 0
 10423  003DA4  0100               	movlb	0	; () banked
 10424  003DA6  5184               	movf	___fldiv@rem& (0+255),w,b
 10425  003DA8  0100               	movlb	0	; () banked
 10426  003DAA  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10427  003DAC  0100               	movlb	0	; () banked
 10428  003DAE  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10429  003DB0  0100               	movlb	0	; () banked
 10430  003DB2  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10431  003DB4  B4D8               	btfsc	status,2,c
 10432  003DB6  D018               	goto	l6762
 10433                           
 10434                           ; BSR set to: 0
 10435  003DB8  0100               	movlb	0	; () banked
 10436  003DBA  818A               	bsf	___fldiv@grs& (0+255),0,b
 10437                           
 10438                           ; BSR set to: 0
 10439  003DBC  D015               	goto	l6762
 10440  003DBE                     l6756:
 10441                           
 10442                           ; BSR set to: 0
 10443  003DBE  0100               	movlb	0	; () banked
 10444  003DC0  90D8               	bcf	status,0,c
 10445  003DC2  3777               	rlcf	___fldiv@b& (0+255),f,b
 10446  003DC4  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10447  003DC6  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10448  003DC8  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10449                           
 10450                           ; BSR set to: 0
 10451  003DCA  0100               	movlb	0	; () banked
 10452  003DCC  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10453  003DCE  D002               	goto	l1376
 10454                           
 10455                           ; BSR set to: 0
 10456  003DD0  0100               	movlb	0	; () banked
 10457  003DD2  8177               	bsf	___fldiv@b& (0+255),0,b
 10458  003DD4                     l1376:
 10459                           
 10460                           ; BSR set to: 0
 10461  003DD4  0100               	movlb	0	; () banked
 10462  003DD6  90D8               	bcf	status,0,c
 10463  003DD8  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10464  003DDA  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10465  003DDC  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10466  003DDE  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10467  003DE0  0100               	movlb	0	; () banked
 10468  003DE2  0788               	decf	___fldiv@new_exp& (0+255),f,b
 10469  003DE4  A0D8               	btfss	status,0,c
 10470  003DE6  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10471  003DE8                     l6762:
 10472                           
 10473                           ; BSR set to: 0
 10474  003DE8  0100               	movlb	0	; () banked
 10475  003DEA  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10476  003DEC  D7E8               	goto	l6756
 10477                           
 10478                           ; BSR set to: 0
 10479                           
 10480                           ; BSR set to: 0
 10481  003DEE  0E00               	movlw	0
 10482  003DF0  0100               	movlb	0	; () banked
 10483  003DF2  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10484                           
 10485                           ; BSR set to: 0
 10486  003DF4  0100               	movlb	0	; () banked
 10487  003DF6  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10488  003DF8  D024               	goto	l1378
 10489                           
 10490                           ; BSR set to: 0
 10491  003DFA  0EFF               	movlw	255
 10492  003DFC  0100               	movlb	0	; () banked
 10493  003DFE  158A               	andwf	___fldiv@grs& (0+255),w,b
 10494  003E00  0100               	movlb	0	; () banked
 10495  003E02  6F7F               	movwf	??___fldiv& (0+255),b
 10496  003E04  0EFF               	movlw	255
 10497  003E06  0100               	movlb	0	; () banked
 10498  003E08  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10499  003E0A  0100               	movlb	0	; () banked
 10500  003E0C  6F80               	movwf	(??___fldiv+1)& (0+255),b
 10501  003E0E  0EFF               	movlw	255
 10502  003E10  0100               	movlb	0	; () banked
 10503  003E12  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10504  003E14  0100               	movlb	0	; () banked
 10505  003E16  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10506  003E18  0E7F               	movlw	127
 10507  003E1A  0100               	movlb	0	; () banked
 10508  003E1C  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10509  003E1E  0100               	movlb	0	; () banked
 10510  003E20  6F82               	movwf	(??___fldiv+3)& (0+255),b
 10511  003E22  0100               	movlb	0	; () banked
 10512  003E24  517F               	movf	??___fldiv& (0+255),w,b
 10513  003E26  0100               	movlb	0	; () banked
 10514  003E28  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
 10515  003E2A  0100               	movlb	0	; () banked
 10516  003E2C  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
 10517  003E2E  0100               	movlb	0	; () banked
 10518  003E30  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
 10519  003E32  A4D8               	btfss	status,2,c
 10520  003E34  D003               	goto	l6772
 10521                           
 10522                           ; BSR set to: 0
 10523                           
 10524                           ; BSR set to: 0
 10525  003E36  0100               	movlb	0	; () banked
 10526  003E38  A177               	btfss	___fldiv@b& (0+255),0,b
 10527  003E3A  D003               	goto	l1378
 10528  003E3C                     l6772:
 10529                           
 10530                           ; BSR set to: 0
 10531  003E3C  0E01               	movlw	1
 10532  003E3E  0100               	movlb	0	; () banked
 10533  003E40  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10534  003E42                     l1378:
 10535                           
 10536                           ; BSR set to: 0
 10537  003E42  0100               	movlb	0	; () banked
 10538  003E44  518F               	movf	___fldiv@aexp& (0+255),w,b
 10539  003E46  0100               	movlb	0	; () banked
 10540  003E48  B4D8               	btfsc	status,2,c
 10541  003E4A  D023               	goto	l6782
 10542                           
 10543                           ; BSR set to: 0
 10544  003E4C  0E01               	movlw	1
 10545  003E4E  0100               	movlb	0	; () banked
 10546  003E50  2777               	addwf	___fldiv@b& (0+255),f,b
 10547  003E52  0E00               	movlw	0
 10548  003E54  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10549  003E56  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10550  003E58  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10551                           
 10552                           ; BSR set to: 0
 10553  003E5A  0100               	movlb	0	; () banked
 10554  003E5C  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
 10555  003E5E  D019               	goto	l6782
 10556                           
 10557                           ; BSR set to: 0
 10558  003E60  C077  F07F         	movff	___fldiv@b,??___fldiv
 10559  003E64  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
 10560  003E68  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
 10561  003E6C  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
 10562  003E70  0100               	movlb	0	; () banked
 10563  003E72  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
 10564  003E74  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
 10565  003E76  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
 10566  003E78  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
 10567  003E7A  337F               	rrcf	??___fldiv& (0+255),f,b
 10568  003E7C  C07F  F077         	movff	??___fldiv,___fldiv@b
 10569  003E80  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
 10570  003E84  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
 10571  003E88  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
 10572                           
 10573                           ; BSR set to: 0
 10574  003E8C  0100               	movlb	0	; () banked
 10575  003E8E  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
 10576  003E90  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10577  003E92                     l6782:
 10578                           
 10579                           ; BSR set to: 0
 10580  003E92  0100               	movlb	0	; () banked
 10581  003E94  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10582  003E96  D014               	goto	l6786
 10583  003E98  0100               	movlb	0	; () banked
 10584  003E9A  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10585  003E9C  E104               	bnz	u8520
 10586  003E9E  0100               	movlb	0	; () banked
 10587  003EA0  2988               	incf	___fldiv@new_exp& (0+255),w,b
 10588  003EA2  A0D8               	btfss	status,0,c
 10589  003EA4  D00D               	goto	l6786
 10590  003EA6                     u8520:
 10591                           
 10592                           ; BSR set to: 0
 10593  003EA6  0E00               	movlw	0
 10594  003EA8  0100               	movlb	0	; () banked
 10595  003EAA  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10596  003EAC  6988               	setf	___fldiv@new_exp& (0+255),b
 10597  003EAE  0E00               	movlw	0
 10598  003EB0  0100               	movlb	0	; () banked
 10599  003EB2  6F77               	movwf	___fldiv@b& (0+255),b
 10600  003EB4  0E00               	movlw	0
 10601  003EB6  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10602  003EB8  0E00               	movlw	0
 10603  003EBA  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10604  003EBC  0E00               	movlw	0
 10605  003EBE  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10606  003EC0                     l6786:
 10607                           
 10608                           ; BSR set to: 0
 10609  003EC0  0100               	movlb	0	; () banked
 10610  003EC2  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10611  003EC4  D007               	goto	l6788
 10612  003EC6  0100               	movlb	0	; () banked
 10613  003EC8  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10614  003ECA  E115               	bnz	l6790
 10615  003ECC  0100               	movlb	0	; () banked
 10616  003ECE  0588               	decf	___fldiv@new_exp& (0+255),w,b
 10617  003ED0  B0D8               	btfsc	status,0,c
 10618  003ED2  D011               	goto	l6790
 10619  003ED4                     l6788:
 10620                           
 10621                           ; BSR set to: 0
 10622  003ED4  0E00               	movlw	0
 10623  003ED6  0100               	movlb	0	; () banked
 10624  003ED8  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10625  003EDA  0E00               	movlw	0
 10626  003EDC  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10627  003EDE  0E00               	movlw	0
 10628  003EE0  0100               	movlb	0	; () banked
 10629  003EE2  6F77               	movwf	___fldiv@b& (0+255),b
 10630  003EE4  0E00               	movlw	0
 10631  003EE6  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10632  003EE8  0E00               	movlw	0
 10633  003EEA  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10634  003EEC  0E00               	movlw	0
 10635  003EEE  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10636  003EF0  0E00               	movlw	0
 10637  003EF2  0100               	movlb	0	; () banked
 10638  003EF4  6F83               	movwf	___fldiv@sign& (0+255),b
 10639  003EF6                     l6790:
 10640                           
 10641                           ; BSR set to: 0
 10642  003EF6  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
 10643                           
 10644                           ; BSR set to: 0
 10645  003EFA  0100               	movlb	0	; () banked
 10646  003EFC  A18E               	btfss	___fldiv@bexp& (0+255),0,b
 10647  003EFE  D003               	goto	l6796
 10648                           
 10649                           ; BSR set to: 0
 10650  003F00  0100               	movlb	0	; () banked
 10651  003F02  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10652  003F04  D002               	goto	l6798
 10653  003F06                     l6796:
 10654                           
 10655                           ; BSR set to: 0
 10656  003F06  0100               	movlb	0	; () banked
 10657  003F08  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
 10658  003F0A                     l6798:
 10659                           
 10660                           ; BSR set to: 0
 10661  003F0A  0100               	movlb	0	; () banked
 10662  003F0C  90D8               	bcf	status,0,c
 10663  003F0E  318E               	rrcf	___fldiv@bexp& (0+255),w,b
 10664  003F10  0100               	movlb	0	; () banked
 10665  003F12  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10666                           
 10667                           ; BSR set to: 0
 10668  003F14  0100               	movlb	0	; () banked
 10669  003F16  5183               	movf	___fldiv@sign& (0+255),w,b
 10670  003F18  0100               	movlb	0	; () banked
 10671  003F1A  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10672                           
 10673                           ; BSR set to: 0
 10674  003F1C  C077  F077         	movff	___fldiv@b,?___fldiv
 10675  003F20  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10676  003F24  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10677  003F28  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10678  003F2C  0012               	return	
 10679  003F2E                     __end_of___fldiv:
 10680                           	opt stack 0
 10681                           tblptru	equ	0xFF8
 10682                           tblptrh	equ	0xFF7
 10683                           tblptrl	equ	0xFF6
 10684                           tablat	equ	0xFF5
 10685                           prodh	equ	0xFF4
 10686                           prodl	equ	0xFF3
 10687                           postinc0	equ	0xFEE
 10688                           wreg	equ	0xFE8
 10689                           postdec1	equ	0xFE5
 10690                           fsr1l	equ	0xFE1
 10691                           indf2	equ	0xFDF
 10692                           postinc2	equ	0xFDE
 10693                           postdec2	equ	0xFDD
 10694                           fsr2h	equ	0xFDA
 10695                           fsr2l	equ	0xFD9
 10696                           status	equ	0xFD8
 10697                           
 10698 ;; *************** function _delay_s *****************
 10699 ;; Defined at:
 10700 ;;		line 102 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
 10701 ;; Parameters:    Size  Location     Type
 10702 ;;  value_s         1    wreg     unsigned char 
 10703 ;; Auto vars:     Size  Location     Type
 10704 ;;  value_s         1   31[BANK0 ] unsigned char 
 10705 ;;  repeat_loop     1   32[BANK0 ] unsigned char 
 10706 ;; Return value:  Size  Location     Type
 10707 ;;		None               void
 10708 ;; Registers used:
 10709 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10710 ;; Tracked objects:
 10711 ;;		On entry : 0/0
 10712 ;;		On exit  : 0/0
 10713 ;;		Unchanged: 0/0
 10714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10716 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10718 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10719 ;;Total ram usage:        2 bytes
 10720 ;; Hardware stack levels used:    1
 10721 ;; Hardware stack levels required when called:    6
 10722 ;; This function calls:
 10723 ;;		_delay_ms
 10724 ;; This function is called by:
 10725 ;;		_park_routine
 10726 ;; This function uses a non-reentrant model
 10727 ;;
 10728                           
 10729                           	psect	text26
 10730  005F74                     __ptext26:
 10731                           	opt stack 0
 10732  005F74                     _delay_s:
 10733                           	opt stack 23
 10734                           
 10735                           ; BSR set to: 0
 10736                           ;incstack = 0
 10737                           ;delay_s@value_s stored from wreg
 10738  005F74  0100               	movlb	0	; () banked
 10739  005F76  6F7F               	movwf	delay_s@value_s& (0+255),b
 10740                           
 10741                           ;src\delay.c: 104: unsigned char repeat_loop;
 10742                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10743  005F78  0E00               	movlw	0
 10744  005F7A  0100               	movlb	0	; () banked
 10745  005F7C  6F80               	movwf	delay_s@repeat_loop& (0+255),b
 10746  005F7E  D009               	goto	l7362
 10747  005F80                     l7358:
 10748                           
 10749                           ; BSR set to: 0
 10750                           ;src\delay.c: 107: delay_ms (1000);
 10751  005F80  0E03               	movlw	3
 10752  005F82  0100               	movlb	0	; () banked
 10753  005F84  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10754  005F86  0EE8               	movlw	232
 10755  005F88  6F7D               	movwf	delay_ms@value_ms& (0+255),b
 10756  005F8A  EC8A  F02F         	call	_delay_ms	;wreg free
 10757  005F8E  0100               	movlb	0	; () banked
 10758  005F90  2B80               	incf	delay_s@repeat_loop& (0+255),f,b
 10759  005F92                     l7362:
 10760                           
 10761                           ; BSR set to: 0
 10762  005F92  0100               	movlb	0	; () banked
 10763  005F94  517F               	movf	delay_s@value_s& (0+255),w,b
 10764  005F96  0100               	movlb	0	; () banked
 10765  005F98  5D80               	subwf	delay_s@repeat_loop& (0+255),w,b
 10766  005F9A  B0D8               	btfsc	status,0,c
 10767  005F9C  0012               	return	
 10768  005F9E  D7F0               	goto	l7358
 10769  005FA0                     __end_of_delay_s:
 10770                           	opt stack 0
 10771                           tblptru	equ	0xFF8
 10772                           tblptrh	equ	0xFF7
 10773                           tblptrl	equ	0xFF6
 10774                           tablat	equ	0xFF5
 10775                           prodh	equ	0xFF4
 10776                           prodl	equ	0xFF3
 10777                           postinc0	equ	0xFEE
 10778                           wreg	equ	0xFE8
 10779                           postdec1	equ	0xFE5
 10780                           fsr1l	equ	0xFE1
 10781                           indf2	equ	0xFDF
 10782                           postinc2	equ	0xFDE
 10783                           postdec2	equ	0xFDD
 10784                           fsr2h	equ	0xFDA
 10785                           fsr2l	equ	0xFD9
 10786                           status	equ	0xFD8
 10787                           
 10788 ;; *************** function _delay_ms *****************
 10789 ;; Defined at:
 10790 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
 10791 ;; Parameters:    Size  Location     Type
 10792 ;;  value_ms        2   29[BANK0 ] unsigned int 
 10793 ;; Auto vars:     Size  Location     Type
 10794 ;;		None
 10795 ;; Return value:  Size  Location     Type
 10796 ;;		None               void
 10797 ;; Registers used:
 10798 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10799 ;; Tracked objects:
 10800 ;;		On entry : 0/0
 10801 ;;		On exit  : 0/0
 10802 ;;		Unchanged: 0/0
 10803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10804 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10807 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10808 ;;Total ram usage:        2 bytes
 10809 ;; Hardware stack levels used:    1
 10810 ;; Hardware stack levels required when called:    5
 10811 ;; This function calls:
 10812 ;;		___wmul
 10813 ;; This function is called by:
 10814 ;;		_delay_s
 10815 ;;		_park_routine
 10816 ;; This function uses a non-reentrant model
 10817 ;;
 10818                           
 10819                           	psect	text27
 10820  005F14                     __ptext27:
 10821                           	opt stack 0
 10822  005F14                     _delay_ms:
 10823                           	opt stack 23
 10824                           
 10825                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 10826                           
 10827                           ; BSR set to: 0
 10828                           ;incstack = 0
 10829  005F14  C0E8  F077         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 10830  005F18  0100               	movlb	0	; () banked
 10831  005F1A  6B78               	clrf	(___wmul@multiplier+1)& (0+255),b
 10832  005F1C  C07D  F079         	movff	delay_ms@value_ms,___wmul@multiplicand
 10833  005F20  C07E  F07A         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 10834  005F24  EC6F  F02F         	call	___wmul	;wreg free
 10835  005F28  C077  F034         	movff	?___wmul,_clock_counter_reference	;volatile
 10836  005F2C  C078  F035         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 10837                           
 10838                           ;src\delay.c: 75: while (clock_counter_reference) {
 10839  005F30  D006               	goto	l569
 10840  005F32                     l7264:
 10841                           
 10842                           ;src\delay.c: 85: _delay(240);
 10843  005F32  0E50               	movlw	80
 10844  005F34                     u9827:
 10845  005F34  2EE8               	decfsz	wreg,f,c
 10846  005F36  D7FE               	goto	u9827
 10847                           
 10848                           ;src\delay.c: 88: clock_counter_reference--;
 10849  005F38  0634               	decf	_clock_counter_reference,f,c	;volatile
 10850  005F3A  A0D8               	btfss	status,0,c
 10851  005F3C  0635               	decf	_clock_counter_reference+1,f,c	;volatile
 10852  005F3E                     l569:
 10853  005F3E  5034               	movf	_clock_counter_reference,w,c	;volatile
 10854  005F40  1035               	iorwf	_clock_counter_reference+1,w,c	;volatile
 10855  005F42  B4D8               	btfsc	status,2,c
 10856  005F44  0012               	return	
 10857  005F46  D7F5               	goto	l7264
 10858  005F48                     __end_of_delay_ms:
 10859                           	opt stack 0
 10860                           tblptru	equ	0xFF8
 10861                           tblptrh	equ	0xFF7
 10862                           tblptrl	equ	0xFF6
 10863                           tablat	equ	0xFF5
 10864                           prodh	equ	0xFF4
 10865                           prodl	equ	0xFF3
 10866                           postinc0	equ	0xFEE
 10867                           wreg	equ	0xFE8
 10868                           postdec1	equ	0xFE5
 10869                           fsr1l	equ	0xFE1
 10870                           indf2	equ	0xFDF
 10871                           postinc2	equ	0xFDE
 10872                           postdec2	equ	0xFDD
 10873                           fsr2h	equ	0xFDA
 10874                           fsr2l	equ	0xFD9
 10875                           status	equ	0xFD8
 10876                           
 10877 ;; *************** function ___wmul *****************
 10878 ;; Defined at:
 10879 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10880 ;; Parameters:    Size  Location     Type
 10881 ;;  multiplier      2   23[BANK0 ] unsigned int 
 10882 ;;  multiplicand    2   25[BANK0 ] unsigned int 
 10883 ;; Auto vars:     Size  Location     Type
 10884 ;;  product         2   27[BANK0 ] unsigned int 
 10885 ;; Return value:  Size  Location     Type
 10886 ;;                  2   23[BANK0 ] unsigned int 
 10887 ;; Registers used:
 10888 ;;		wreg, status,2, status,0, prodl, prodh
 10889 ;; Tracked objects:
 10890 ;;		On entry : 0/0
 10891 ;;		On exit  : 0/0
 10892 ;;		Unchanged: 0/0
 10893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10894 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10895 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10897 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10898 ;;Total ram usage:        6 bytes
 10899 ;; Hardware stack levels used:    1
 10900 ;; Hardware stack levels required when called:    4
 10901 ;; This function calls:
 10902 ;;		Nothing
 10903 ;; This function is called by:
 10904 ;;		_delay_ms
 10905 ;; This function uses a non-reentrant model
 10906 ;;
 10907                           
 10908                           	psect	text28
 10909  005EDE                     __ptext28:
 10910                           	opt stack 0
 10911  005EDE                     ___wmul:
 10912                           	opt stack 23
 10913                           
 10914                           ;incstack = 0
 10915  005EDE  0100               	movlb	0	; () banked
 10916  005EE0  5177               	movf	___wmul@multiplier& (0+255),w,b
 10917  005EE2  0100               	movlb	0	; () banked
 10918  005EE4  0379               	mulwf	___wmul@multiplicand& (0+255),b
 10919  005EE6  CFF3 F07B          	movff	prodl,___wmul@product
 10920  005EEA  CFF4 F07C          	movff	prodh,___wmul@product+1
 10921  005EEE  0100               	movlb	0	; () banked
 10922  005EF0  5177               	movf	___wmul@multiplier& (0+255),w,b
 10923  005EF2  0100               	movlb	0	; () banked
 10924  005EF4  037A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10925  005EF6  50F3               	movf	prodl,w,c
 10926  005EF8  0100               	movlb	0	; () banked
 10927  005EFA  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 10928  005EFC  0100               	movlb	0	; () banked
 10929  005EFE  5178               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10930  005F00  0100               	movlb	0	; () banked
 10931  005F02  0379               	mulwf	___wmul@multiplicand& (0+255),b
 10932  005F04  50F3               	movf	prodl,w,c
 10933  005F06  0100               	movlb	0	; () banked
 10934  005F08  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 10935                           
 10936                           ; BSR set to: 0
 10937  005F0A  C07B  F077         	movff	___wmul@product,?___wmul
 10938  005F0E  C07C  F078         	movff	___wmul@product+1,?___wmul+1
 10939  005F12  0012               	return	
 10940  005F14                     __end_of___wmul:
 10941                           	opt stack 0
 10942                           tblptru	equ	0xFF8
 10943                           tblptrh	equ	0xFF7
 10944                           tblptrl	equ	0xFF6
 10945                           tablat	equ	0xFF5
 10946                           prodh	equ	0xFF4
 10947                           prodl	equ	0xFF3
 10948                           postinc0	equ	0xFEE
 10949                           wreg	equ	0xFE8
 10950                           postdec1	equ	0xFE5
 10951                           fsr1l	equ	0xFE1
 10952                           indf2	equ	0xFDF
 10953                           postinc2	equ	0xFDE
 10954                           postdec2	equ	0xFDD
 10955                           fsr2h	equ	0xFDA
 10956                           fsr2l	equ	0xFD9
 10957                           status	equ	0xFD8
 10958                           
 10959 ;; *************** function ___awdiv *****************
 10960 ;; Defined at:
 10961 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
 10962 ;; Parameters:    Size  Location     Type
 10963 ;;  dividend        2   23[BANK0 ] int 
 10964 ;;  divisor         2   25[BANK0 ] int 
 10965 ;; Auto vars:     Size  Location     Type
 10966 ;;  quotient        2   29[BANK0 ] int 
 10967 ;;  sign            1   28[BANK0 ] unsigned char 
 10968 ;;  counter         1   27[BANK0 ] unsigned char 
 10969 ;; Return value:  Size  Location     Type
 10970 ;;                  2   23[BANK0 ] int 
 10971 ;; Registers used:
 10972 ;;		wreg, status,2, status,0
 10973 ;; Tracked objects:
 10974 ;;		On entry : 0/0
 10975 ;;		On exit  : 0/0
 10976 ;;		Unchanged: 0/0
 10977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10978 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10979 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10981 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10982 ;;Total ram usage:        8 bytes
 10983 ;; Hardware stack levels used:    1
 10984 ;; Hardware stack levels required when called:    4
 10985 ;; This function calls:
 10986 ;;		Nothing
 10987 ;; This function is called by:
 10988 ;;		_park_routine
 10989 ;; This function uses a non-reentrant model
 10990 ;;
 10991                           
 10992                           	psect	text29
 10993  005AE8                     __ptext29:
 10994                           	opt stack 0
 10995  005AE8                     ___awdiv:
 10996                           	opt stack 25
 10997                           
 10998                           ; BSR set to: 0
 10999                           ;incstack = 0
 11000  005AE8  0E00               	movlw	0
 11001  005AEA  0100               	movlb	0	; () banked
 11002  005AEC  6F7C               	movwf	___awdiv@sign& (0+255),b
 11003                           
 11004                           ; BSR set to: 0
 11005  005AEE  0100               	movlb	0	; () banked
 11006  005AF0  AF7A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11007  005AF2  D008               	goto	l7452
 11008                           
 11009                           ; BSR set to: 0
 11010  005AF4  0100               	movlb	0	; () banked
 11011  005AF6  6D79               	negf	___awdiv@divisor& (0+255),b
 11012  005AF8  1F7A               	comf	(___awdiv@divisor+1)& (0+255),f,b
 11013  005AFA  B0D8               	btfsc	status,0,c
 11014  005AFC  2B7A               	incf	(___awdiv@divisor+1)& (0+255),f,b
 11015                           
 11016                           ; BSR set to: 0
 11017  005AFE  0E01               	movlw	1
 11018  005B00  0100               	movlb	0	; () banked
 11019  005B02  6F7C               	movwf	___awdiv@sign& (0+255),b
 11020  005B04                     l7452:
 11021                           
 11022                           ; BSR set to: 0
 11023  005B04  0100               	movlb	0	; () banked
 11024  005B06  AF78               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 11025  005B08  D008               	goto	l7458
 11026                           
 11027                           ; BSR set to: 0
 11028  005B0A  0100               	movlb	0	; () banked
 11029  005B0C  6D77               	negf	___awdiv@dividend& (0+255),b
 11030  005B0E  1F78               	comf	(___awdiv@dividend+1)& (0+255),f,b
 11031  005B10  B0D8               	btfsc	status,0,c
 11032  005B12  2B78               	incf	(___awdiv@dividend+1)& (0+255),f,b
 11033                           
 11034                           ; BSR set to: 0
 11035  005B14  0E01               	movlw	1
 11036  005B16  0100               	movlb	0	; () banked
 11037  005B18  1B7C               	xorwf	___awdiv@sign& (0+255),f,b
 11038  005B1A                     l7458:
 11039                           
 11040                           ; BSR set to: 0
 11041  005B1A  0E00               	movlw	0
 11042  005B1C  0100               	movlb	0	; () banked
 11043  005B1E  6F7E               	movwf	(___awdiv@quotient+1)& (0+255),b
 11044  005B20  0E00               	movlw	0
 11045  005B22  6F7D               	movwf	___awdiv@quotient& (0+255),b
 11046                           
 11047                           ; BSR set to: 0
 11048  005B24  0100               	movlb	0	; () banked
 11049  005B26  5179               	movf	___awdiv@divisor& (0+255),w,b
 11050  005B28  0100               	movlb	0	; () banked
 11051  005B2A  117A               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 11052  005B2C  B4D8               	btfsc	status,2,c
 11053  005B2E  D02C               	goto	l7480
 11054                           
 11055                           ; BSR set to: 0
 11056  005B30  0E01               	movlw	1
 11057  005B32  0100               	movlb	0	; () banked
 11058  005B34  6F7B               	movwf	___awdiv@counter& (0+255),b
 11059  005B36  D006               	goto	l7466
 11060  005B38                     l7464:
 11061                           
 11062                           ; BSR set to: 0
 11063  005B38  0100               	movlb	0	; () banked
 11064  005B3A  90D8               	bcf	status,0,c
 11065  005B3C  3779               	rlcf	___awdiv@divisor& (0+255),f,b
 11066  005B3E  377A               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 11067  005B40  0100               	movlb	0	; () banked
 11068  005B42  2B7B               	incf	___awdiv@counter& (0+255),f,b
 11069  005B44                     l7466:
 11070                           
 11071                           ; BSR set to: 0
 11072  005B44  0100               	movlb	0	; () banked
 11073  005B46  AF7A               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 11074  005B48  D7F7               	goto	l7464
 11075  005B4A                     l7468:
 11076                           
 11077                           ; BSR set to: 0
 11078  005B4A  0100               	movlb	0	; () banked
 11079  005B4C  90D8               	bcf	status,0,c
 11080  005B4E  377D               	rlcf	___awdiv@quotient& (0+255),f,b
 11081  005B50  377E               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 11082                           
 11083                           ; BSR set to: 0
 11084  005B52  0100               	movlb	0	; () banked
 11085  005B54  5179               	movf	___awdiv@divisor& (0+255),w,b
 11086  005B56  0100               	movlb	0	; () banked
 11087  005B58  5D77               	subwf	___awdiv@dividend& (0+255),w,b
 11088  005B5A  0100               	movlb	0	; () banked
 11089  005B5C  517A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11090  005B5E  0100               	movlb	0	; () banked
 11091  005B60  5978               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 11092  005B62  A0D8               	btfss	status,0,c
 11093  005B64  D00A               	goto	l7476
 11094                           
 11095                           ; BSR set to: 0
 11096  005B66  0100               	movlb	0	; () banked
 11097  005B68  5179               	movf	___awdiv@divisor& (0+255),w,b
 11098  005B6A  0100               	movlb	0	; () banked
 11099  005B6C  5F77               	subwf	___awdiv@dividend& (0+255),f,b
 11100  005B6E  0100               	movlb	0	; () banked
 11101  005B70  517A               	movf	(___awdiv@divisor+1)& (0+255),w,b
 11102  005B72  0100               	movlb	0	; () banked
 11103  005B74  5B78               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 11104                           
 11105                           ; BSR set to: 0
 11106  005B76  0100               	movlb	0	; () banked
 11107  005B78  817D               	bsf	___awdiv@quotient& (0+255),0,b
 11108  005B7A                     l7476:
 11109                           
 11110                           ; BSR set to: 0
 11111  005B7A  0100               	movlb	0	; () banked
 11112  005B7C  90D8               	bcf	status,0,c
 11113  005B7E  337A               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 11114  005B80  3379               	rrcf	___awdiv@divisor& (0+255),f,b
 11115                           
 11116                           ; BSR set to: 0
 11117  005B82  0100               	movlb	0	; () banked
 11118  005B84  2F7B               	decfsz	___awdiv@counter& (0+255),f,b
 11119  005B86  D7E1               	goto	l7468
 11120  005B88                     l7480:
 11121                           
 11122                           ; BSR set to: 0
 11123  005B88  0100               	movlb	0	; () banked
 11124  005B8A  517C               	movf	___awdiv@sign& (0+255),w,b
 11125  005B8C  0100               	movlb	0	; () banked
 11126  005B8E  B4D8               	btfsc	status,2,c
 11127  005B90  D005               	goto	l7484
 11128                           
 11129                           ; BSR set to: 0
 11130  005B92  0100               	movlb	0	; () banked
 11131  005B94  6D7D               	negf	___awdiv@quotient& (0+255),b
 11132  005B96  1F7E               	comf	(___awdiv@quotient+1)& (0+255),f,b
 11133  005B98  B0D8               	btfsc	status,0,c
 11134  005B9A  2B7E               	incf	(___awdiv@quotient+1)& (0+255),f,b
 11135  005B9C                     l7484:
 11136                           
 11137                           ; BSR set to: 0
 11138  005B9C  C07D  F077         	movff	___awdiv@quotient,?___awdiv
 11139  005BA0  C07E  F078         	movff	___awdiv@quotient+1,?___awdiv+1
 11140  005BA4  0012               	return	
 11141  005BA6                     __end_of___awdiv:
 11142                           	opt stack 0
 11143                           tblptru	equ	0xFF8
 11144                           tblptrh	equ	0xFF7
 11145                           tblptrl	equ	0xFF6
 11146                           tablat	equ	0xFF5
 11147                           prodh	equ	0xFF4
 11148                           prodl	equ	0xFF3
 11149                           postinc0	equ	0xFEE
 11150                           wreg	equ	0xFE8
 11151                           postdec1	equ	0xFE5
 11152                           fsr1l	equ	0xFE1
 11153                           indf2	equ	0xFDF
 11154                           postinc2	equ	0xFDE
 11155                           postdec2	equ	0xFDD
 11156                           fsr2h	equ	0xFDA
 11157                           fsr2l	equ	0xFD9
 11158                           status	equ	0xFD8
 11159                           
 11160 ;; *************** function _configurazione *****************
 11161 ;; Defined at:
 11162 ;;		line 440 in file "parcheggio.c"
 11163 ;; Parameters:    Size  Location     Type
 11164 ;;		None
 11165 ;; Auto vars:     Size  Location     Type
 11166 ;;		None
 11167 ;; Return value:  Size  Location     Type
 11168 ;;		None               void
 11169 ;; Registers used:
 11170 ;;		wreg, status,2, status,0, cstack
 11171 ;; Tracked objects:
 11172 ;;		On entry : 0/0
 11173 ;;		On exit  : 0/0
 11174 ;;		Unchanged: 0/0
 11175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11180 ;;Total ram usage:        0 bytes
 11181 ;; Hardware stack levels used:    1
 11182 ;; Hardware stack levels required when called:    6
 11183 ;; This function calls:
 11184 ;;		_CANInitialize
 11185 ;; This function is called by:
 11186 ;;		_main
 11187 ;; This function uses a non-reentrant model
 11188 ;;
 11189                           
 11190                           	psect	text30
 11191  005CB2                     __ptext30:
 11192                           	opt stack 0
 11193  005CB2                     _configurazione:
 11194                           	opt stack 24
 11195                           
 11196                           ;parcheggio.c: 441: LATA = 0x00;
 11197                           
 11198                           ; BSR set to: 0
 11199                           ;incstack = 0
 11200  005CB2  0E00               	movlw	0
 11201  005CB4  6E89               	movwf	3977,c	;volatile
 11202                           
 11203                           ;parcheggio.c: 442: TRISA = 0b11110000;
 11204  005CB6  0EF0               	movlw	240
 11205  005CB8  6E92               	movwf	3986,c	;volatile
 11206                           
 11207                           ;parcheggio.c: 444: LATB = 0x00;
 11208  005CBA  0E00               	movlw	0
 11209  005CBC  6E8A               	movwf	3978,c	;volatile
 11210                           
 11211                           ;parcheggio.c: 445: TRISB = 0b10001010;
 11212  005CBE  0E8A               	movlw	138
 11213  005CC0  6E93               	movwf	3987,c	;volatile
 11214                           
 11215                           ;parcheggio.c: 447: LATC = 0x00;
 11216  005CC2  0E00               	movlw	0
 11217  005CC4  6E8B               	movwf	3979,c	;volatile
 11218                           
 11219                           ;parcheggio.c: 448: TRISC = 0b11111111;
 11220  005CC6  6894               	setf	3988,c	;volatile
 11221                           
 11222                           ;parcheggio.c: 450: ADCON1 = 0xFF;
 11223  005CC8  68C1               	setf	4033,c	;volatile
 11224                           
 11225                           ;parcheggio.c: 451: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
 11226  005CCA  0E06               	movlw	6
 11227  005CCC  0100               	movlb	0	; () banked
 11228  005CCE  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11229  005CD0  0E05               	movlw	5
 11230  005CD2  0100               	movlb	0	; () banked
 11231  005CD4  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
 11232  005CD6  0E01               	movlw	1
 11233  005CD8  0100               	movlb	0	; () banked
 11234  005CDA  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11235  005CDC  0E03               	movlw	3
 11236  005CDE  0100               	movlb	0	; () banked
 11237  005CE0  6F88               	movwf	CANInitialize@BRP& (0+255),b
 11238  005CE2  0E9D               	movlw	157
 11239  005CE4  0100               	movlb	0	; () banked
 11240  005CE6  6F89               	movwf	CANInitialize@flags& (0+255),b
 11241  005CE8  0E04               	movlw	4
 11242  005CEA  ECD1  F027         	call	_CANInitialize
 11243                           
 11244                           ;parcheggio.c: 453: RCONbits.IPEN = 1;
 11245  005CEE  8ED0               	bsf	4048,7,c	;volatile
 11246                           
 11247                           ;parcheggio.c: 454: PIR3bits.RXB1IF = 0;
 11248  005CF0  92A4               	bcf	4004,1,c	;volatile
 11249                           
 11250                           ;parcheggio.c: 455: PIR3bits.RXB0IF = 0;
 11251  005CF2  90A4               	bcf	4004,0,c	;volatile
 11252                           
 11253                           ;parcheggio.c: 456: IPR3bits.RXB1IP = 0;
 11254  005CF4  92A5               	bcf	4005,1,c	;volatile
 11255                           
 11256                           ;parcheggio.c: 457: IPR3bits.RXB0IP = 0;
 11257  005CF6  90A5               	bcf	4005,0,c	;volatile
 11258                           
 11259                           ;parcheggio.c: 458: PIE3bits.RXB1IE = 1;
 11260  005CF8  82A3               	bsf	4003,1,c	;volatile
 11261                           
 11262                           ;parcheggio.c: 459: PIE3bits.RXB0IE = 1;
 11263  005CFA  80A3               	bsf	4003,0,c	;volatile
 11264                           
 11265                           ;parcheggio.c: 460: INTCON2bits.TMR0IP = 0;
 11266  005CFC  94F1               	bcf	intcon2,2,c	;volatile
 11267                           
 11268                           ;parcheggio.c: 461: T0CON = 0x80;
 11269  005CFE  0E80               	movlw	128
 11270  005D00  6ED5               	movwf	4053,c	;volatile
 11271                           
 11272                           ;parcheggio.c: 462: T3CON = 0x11;
 11273  005D02  0E11               	movlw	17
 11274  005D04  6EB1               	movwf	4017,c	;volatile
 11275                           
 11276                           ;parcheggio.c: 463: TMR0H = 0x34;
 11277  005D06  0E34               	movlw	52
 11278  005D08  6ED7               	movwf	4055,c	;volatile
 11279                           
 11280                           ;parcheggio.c: 464: TMR0L = 0xE0;
 11281  005D0A  0EE0               	movlw	224
 11282  005D0C  6ED6               	movwf	4054,c	;volatile
 11283                           
 11284                           ;parcheggio.c: 465: INTCONbits.TMR0IF = 0;
 11285  005D0E  94F2               	bcf	intcon,2,c	;volatile
 11286                           
 11287                           ;parcheggio.c: 466: INTCONbits.TMR0IE = 1;
 11288  005D10  8AF2               	bsf	intcon,5,c	;volatile
 11289                           
 11290                           ;parcheggio.c: 467: INTCON2bits.INTEDG0 = 1;
 11291  005D12  8CF1               	bsf	intcon2,6,c	;volatile
 11292                           
 11293                           ;parcheggio.c: 468: INTCONbits.INT0IF = 0;
 11294  005D14  92F2               	bcf	intcon,1,c	;volatile
 11295                           
 11296                           ;parcheggio.c: 469: INTCONbits.INT0IE = 0;
 11297  005D16  98F2               	bcf	intcon,4,c	;volatile
 11298                           
 11299                           ;parcheggio.c: 470: INTCONbits.GIEL = 1;
 11300  005D18  8CF2               	bsf	intcon,6,c	;volatile
 11301                           
 11302                           ;parcheggio.c: 471: INTCONbits.GIEH = 1;
 11303  005D1A  8EF2               	bsf	intcon,7,c	;volatile
 11304  005D1C  0012               	return		;funcret
 11305  005D1E                     __end_of_configurazione:
 11306                           	opt stack 0
 11307                           tblptru	equ	0xFF8
 11308                           tblptrh	equ	0xFF7
 11309                           tblptrl	equ	0xFF6
 11310                           tablat	equ	0xFF5
 11311                           prodh	equ	0xFF4
 11312                           prodl	equ	0xFF3
 11313                           intcon	equ	0xFF2
 11314                           intcon2	equ	0xFF1
 11315                           postinc0	equ	0xFEE
 11316                           wreg	equ	0xFE8
 11317                           postdec1	equ	0xFE5
 11318                           fsr1l	equ	0xFE1
 11319                           indf2	equ	0xFDF
 11320                           postinc2	equ	0xFDE
 11321                           postdec2	equ	0xFDD
 11322                           fsr2h	equ	0xFDA
 11323                           fsr2l	equ	0xFD9
 11324                           status	equ	0xFD8
 11325                           
 11326 ;; *************** function _CANInitialize *****************
 11327 ;; Defined at:
 11328 ;;		line 219 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 11329 ;; Parameters:    Size  Location     Type
 11330 ;;  propSeg         1    wreg     unsigned char 
 11331 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
 11332 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
 11333 ;;  SJW             1   39[BANK0 ] unsigned char 
 11334 ;;  BRP             1   40[BANK0 ] unsigned char 
 11335 ;;  flags           1   41[BANK0 ] enum E16313
 11336 ;; Auto vars:     Size  Location     Type
 11337 ;;  propSeg         1   46[BANK0 ] unsigned char 
 11338 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
 11339 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
 11340 ;; Return value:  Size  Location     Type
 11341 ;;		None               void
 11342 ;; Registers used:
 11343 ;;		wreg, status,2, status,0, cstack
 11344 ;; Tracked objects:
 11345 ;;		On entry : 0/0
 11346 ;;		On exit  : 0/0
 11347 ;;		Unchanged: 0/0
 11348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11349 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11350 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11351 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11352 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11353 ;;Total ram usage:       12 bytes
 11354 ;; Hardware stack levels used:    1
 11355 ;; Hardware stack levels required when called:    5
 11356 ;; This function calls:
 11357 ;;		_CANOperationMode
 11358 ;;		_CANSetFilter
 11359 ;;		_CANSetMask
 11360 ;; This function is called by:
 11361 ;;		_configurazione
 11362 ;; This function uses a non-reentrant model
 11363 ;;
 11364                           
 11365                           	psect	text31
 11366  004FA2                     __ptext31:
 11367                           	opt stack 0
 11368  004FA2                     _CANInitialize:
 11369                           	opt stack 24
 11370                           
 11371                           ;incstack = 0
 11372                           ;CANInitialize@propSeg stored from wreg
 11373  004FA2  0100               	movlb	0	; () banked
 11374  004FA4  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
 11375                           
 11376                           ;inc\CANlib.h: 221: BYTE FilterConfig1;
 11377                           ;inc\CANlib.h: 222: BYTE FilterConfig2;
 11378                           ;inc\CANlib.h: 224: CANOperationMode(CAN_OP_MODE_CONFIG);
 11379  004FA6  0E80               	movlw	128
 11380  004FA8  ECE2  F02F         	call	_CANOperationMode
 11381                           
 11382                           ;inc\CANlib.h: 226: BRGCON1 = 0x00;
 11383  004FAC  0E00               	movlw	0
 11384  004FAE  6E70               	movwf	3952,c	;volatile
 11385                           
 11386                           ;inc\CANlib.h: 227: BRGCON2 = 0x00;
 11387  004FB0  0E00               	movlw	0
 11388  004FB2  6E71               	movwf	3953,c	;volatile
 11389                           
 11390                           ;inc\CANlib.h: 228: BRGCON3 = 0x00;
 11391  004FB4  0E00               	movlw	0
 11392  004FB6  6E72               	movwf	3954,c	;volatile
 11393                           
 11394                           ;inc\CANlib.h: 230: SJW= SJW << 6;
 11395  004FB8  0100               	movlb	0	; () banked
 11396  004FBA  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
 11397  004FBC  42E8               	rrncf	wreg,f,c
 11398  004FBE  0BC0               	andlw	192
 11399  004FC0  0100               	movlb	0	; () banked
 11400  004FC2  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11401                           
 11402                           ; BSR set to: 0
 11403                           ;inc\CANlib.h: 231: BRGCON1 |= SJW;
 11404  004FC4  0100               	movlb	0	; () banked
 11405  004FC6  5187               	movf	CANInitialize@SJW& (0+255),w,b
 11406  004FC8  1270               	iorwf	3952,f,c	;volatile
 11407                           
 11408                           ; BSR set to: 0
 11409                           ;inc\CANlib.h: 232: BRGCON1 |= BRP;
 11410  004FCA  0100               	movlb	0	; () banked
 11411  004FCC  5188               	movf	CANInitialize@BRP& (0+255),w,b
 11412  004FCE  1270               	iorwf	3952,f,c	;volatile
 11413                           
 11414                           ; BSR set to: 0
 11415                           ;inc\CANlib.h: 234: BRGCON2 |= propSeg;
 11416  004FD0  0100               	movlb	0	; () banked
 11417  004FD2  518E               	movf	CANInitialize@propSeg& (0+255),w,b
 11418  004FD4  1271               	iorwf	3953,f,c	;volatile
 11419                           
 11420                           ; BSR set to: 0
 11421                           ;inc\CANlib.h: 235: phaseSeg1 = phaseSeg1 <<3;
 11422  004FD6  0100               	movlb	0	; () banked
 11423  004FD8  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
 11424  004FDA  42E8               	rrncf	wreg,f,c
 11425  004FDC  0BF8               	andlw	248
 11426  004FDE  0100               	movlb	0	; () banked
 11427  004FE0  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11428                           
 11429                           ; BSR set to: 0
 11430                           ;inc\CANlib.h: 236: BRGCON2 |= phaseSeg1;
 11431  004FE2  0100               	movlb	0	; () banked
 11432  004FE4  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
 11433  004FE6  1271               	iorwf	3953,f,c	;volatile
 11434                           
 11435                           ; BSR set to: 0
 11436                           ;inc\CANlib.h: 238: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
 11437  004FE8  0100               	movlb	0	; () banked
 11438  004FEA  A589               	btfss	CANInitialize@flags& (0+255),2,b
 11439                           
 11440                           ; BSR set to: 0
 11441                           ;inc\CANlib.h: 239: BRGCON2bits.SAM= 1;
 11442  004FEC  8C71               	bsf	3953,6,c	;volatile
 11443                           
 11444                           ; BSR set to: 0
 11445                           ;inc\CANlib.h: 241: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
 11446  004FEE  0100               	movlb	0	; () banked
 11447  004FF0  B189               	btfsc	CANInitialize@flags& (0+255),0,b
 11448                           
 11449                           ; BSR set to: 0
 11450                           ;inc\CANlib.h: 242: BRGCON2bits.SEG2PHTS = 1;
 11451  004FF2  8E71               	bsf	3953,7,c	;volatile
 11452                           
 11453                           ; BSR set to: 0
 11454                           ;inc\CANlib.h: 244: BRGCON3 |= phaseSeg2;
 11455                           
 11456                           ; BSR set to: 0
 11457  004FF4  0100               	movlb	0	; () banked
 11458  004FF6  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
 11459  004FF8  1272               	iorwf	3954,f,c	;volatile
 11460                           
 11461                           ; BSR set to: 0
 11462                           ;inc\CANlib.h: 246: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
 11463  004FFA  0100               	movlb	0	; () banked
 11464  004FFC  B389               	btfsc	CANInitialize@flags& (0+255),1,b
 11465                           
 11466                           ; BSR set to: 0
 11467                           ;inc\CANlib.h: 247: BRGCON3bits.WAKFIL = 1;
 11468  004FFE  8C72               	bsf	3954,6,c	;volatile
 11469                           
 11470                           ; BSR set to: 0
 11471                           ;inc\CANlib.h: 252: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
 11472                           
 11473                           ; BSR set to: 0
 11474  005000  0100               	movlb	0	; () banked
 11475  005002  5189               	movf	CANInitialize@flags& (0+255),w,b
 11476  005004  0B60               	andlw	96
 11477  005006  6E60               	movwf	3936,c	;volatile
 11478                           
 11479                           ;inc\CANlib.h: 253: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
 11480  005008  0100               	movlb	0	; () banked
 11481  00500A  5189               	movf	CANInitialize@flags& (0+255),w,b
 11482  00500C  0B10               	andlw	16
 11483  00500E  0AFF               	xorlw	255
 11484  005010  B4D8               	btfsc	status,2,c
 11485                           
 11486                           ; BSR set to: 0
 11487                           ;inc\CANlib.h: 254: RXB0CONbits.RXB0DBEN = 1;
 11488  005012  8460               	bsf	3936,2,c	;volatile
 11489                           
 11490                           ; BSR set to: 0
 11491                           ;inc\CANlib.h: 256: RXB1CON = RXB0CON;
 11492  005014  CF60 FF50          	movff	3936,3920	;volatile
 11493                           
 11494                           ; BSR set to: 0
 11495                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
 11496  005018  0E00               	movlw	0
 11497  00501A  0100               	movlb	0	; () banked
 11498  00501C  6F77               	movwf	CANSetMask@mask& (0+255),b
 11499  00501E  0E00               	movlw	0
 11500  005020  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11501  005022  0E00               	movlw	0
 11502  005024  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11503  005026  0E00               	movlw	0
 11504  005028  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11505  00502A  0EF7               	movlw	247
 11506  00502C  0100               	movlb	0	; () banked
 11507  00502E  6F7B               	movwf	CANSetMask@type& (0+255),b
 11508  005030  0E01               	movlw	1
 11509  005032  EC97  F01F         	call	_CANSetMask
 11510                           
 11511                           ;inc\CANlib.h: 261: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
 11512  005036  0E00               	movlw	0
 11513  005038  0100               	movlb	0	; () banked
 11514  00503A  6F77               	movwf	CANSetMask@mask& (0+255),b
 11515  00503C  0E00               	movlw	0
 11516  00503E  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11517  005040  0E00               	movlw	0
 11518  005042  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11519  005044  0E00               	movlw	0
 11520  005046  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11521  005048  0EF7               	movlw	247
 11522  00504A  0100               	movlb	0	; () banked
 11523  00504C  6F7B               	movwf	CANSetMask@type& (0+255),b
 11524  00504E  0E02               	movlw	2
 11525  005050  EC97  F01F         	call	_CANSetMask
 11526                           
 11527                           ;inc\CANlib.h: 264: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
 11528  005054  D00F               	goto	l5498
 11529  005056                     l5492:
 11530                           
 11531                           ;inc\CANlib.h: 267: FilterConfig1 = CAN_CONFIG_XTD_MSG;
 11532  005056  0EF7               	movlw	247
 11533  005058  0100               	movlb	0	; () banked
 11534  00505A  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
 11535  00505C  D007               	goto	l5494
 11536  00505E                     l358:
 11537                           
 11538                           ; BSR set to: 0
 11539                           ;inc\CANlib.h: 272: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11540  00505E  0100               	movlb	0	; () banked
 11541  005060  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11542                           
 11543                           ;inc\CANlib.h: 273: FilterConfig2 = CAN_CONFIG_STD_MSG;
 11544  005062  0100               	movlb	0	; () banked
 11545  005064  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
 11546                           
 11547                           ;inc\CANlib.h: 274: break;
 11548  005066  D028               	goto	l5500
 11549  005068                     l359:
 11550                           
 11551                           ; BSR set to: 0
 11552                           ;inc\CANlib.h: 276: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11553  005068  0100               	movlb	0	; () banked
 11554  00506A  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11555  00506C                     l5494:
 11556                           
 11557                           ; BSR set to: 0
 11558                           ;inc\CANlib.h: 277: FilterConfig2 = CAN_CONFIG_XTD_MSG;
 11559  00506C  0EF7               	movlw	247
 11560  00506E  0100               	movlb	0	; () banked
 11561  005070  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
 11562                           
 11563                           ; BSR set to: 0
 11564                           ;inc\CANlib.h: 279: }
 11565                           
 11566                           ;inc\CANlib.h: 278: break;
 11567  005072  D022               	goto	l5500
 11568  005074                     l5498:
 11569  005074  0E9F               	movlw	159
 11570  005076  0100               	movlb	0	; () banked
 11571  005078  6F8A               	movwf	??_CANInitialize& (0+255),b
 11572  00507A  0EFF               	movlw	255
 11573  00507C  0100               	movlb	0	; () banked
 11574  00507E  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
 11575  005080  0100               	movlb	0	; () banked
 11576  005082  5189               	movf	CANInitialize@flags& (0+255),w,b
 11577  005084  0B60               	andlw	96
 11578  005086  0100               	movlb	0	; () banked
 11579  005088  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
 11580  00508A  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
 11581  00508C  0100               	movlb	0	; () banked
 11582  00508E  518A               	movf	??_CANInitialize& (0+255),w,b
 11583  005090  0100               	movlb	0	; () banked
 11584  005092  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
 11585  005094  0100               	movlb	0	; () banked
 11586  005096  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
 11587  005098  0100               	movlb	0	; () banked
 11588  00509A  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
 11589                           
 11590                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11591                           ; Switch size 1, requested type "space"
 11592                           ; Number of cases is 1, Range of values is 0 to 0
 11593                           ; switch strategies available:
 11594                           ; Name         Instructions Cycles
 11595                           ; simple_byte            4     3 (average)
 11596                           ;	Chosen strategy is simple_byte
 11597  00509C  0100               	movlb	0	; () banked
 11598  00509E  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
 11599  0050A0  0A00               	xorlw	0	; case 0
 11600  0050A2  A4D8               	btfss	status,2,c
 11601  0050A4  D7E1               	goto	l359
 11602                           
 11603                           ; BSR set to: 0
 11604                           ; Switch size 1, requested type "space"
 11605                           ; Number of cases is 2, Range of values is 191 to 223
 11606                           ; switch strategies available:
 11607                           ; Name         Instructions Cycles
 11608                           ; simple_byte            7     4 (average)
 11609                           ;	Chosen strategy is simple_byte
 11610  0050A6  0100               	movlb	0	; () banked
 11611  0050A8  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
 11612  0050AA  0ABF               	xorlw	191	; case 191
 11613  0050AC  B4D8               	btfsc	status,2,c
 11614  0050AE  D7D7               	goto	l358
 11615  0050B0  0A60               	xorlw	96	; case 223
 11616  0050B2  B4D8               	btfsc	status,2,c
 11617  0050B4  D7D0               	goto	l5492
 11618  0050B6  D7D8               	goto	l359
 11619  0050B8                     l5500:
 11620                           
 11621                           ; BSR set to: 0
 11622                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
 11623  0050B8  0E00               	movlw	0
 11624  0050BA  0100               	movlb	0	; () banked
 11625  0050BC  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11626  0050BE  0E00               	movlw	0
 11627  0050C0  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11628  0050C2  0E00               	movlw	0
 11629  0050C4  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11630  0050C6  0E00               	movlw	0
 11631  0050C8  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11632  0050CA  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11633  0050CE  0E00               	movlw	0
 11634  0050D0  ECA9  F006         	call	_CANSetFilter
 11635                           
 11636                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
 11637  0050D4  0E00               	movlw	0
 11638  0050D6  0100               	movlb	0	; () banked
 11639  0050D8  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11640  0050DA  0E00               	movlw	0
 11641  0050DC  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11642  0050DE  0E00               	movlw	0
 11643  0050E0  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11644  0050E2  0E00               	movlw	0
 11645  0050E4  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11646  0050E6  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11647  0050EA  0E01               	movlw	1
 11648  0050EC  ECA9  F006         	call	_CANSetFilter
 11649                           
 11650                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
 11651  0050F0  0E00               	movlw	0
 11652  0050F2  0100               	movlb	0	; () banked
 11653  0050F4  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11654  0050F6  0E00               	movlw	0
 11655  0050F8  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11656  0050FA  0E00               	movlw	0
 11657  0050FC  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11658  0050FE  0E00               	movlw	0
 11659  005100  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11660  005102  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11661  005106  0E02               	movlw	2
 11662  005108  ECA9  F006         	call	_CANSetFilter
 11663                           
 11664                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
 11665  00510C  0E00               	movlw	0
 11666  00510E  0100               	movlb	0	; () banked
 11667  005110  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11668  005112  0E00               	movlw	0
 11669  005114  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11670  005116  0E00               	movlw	0
 11671  005118  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11672  00511A  0E00               	movlw	0
 11673  00511C  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11674  00511E  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11675  005122  0E03               	movlw	3
 11676  005124  ECA9  F006         	call	_CANSetFilter
 11677                           
 11678                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
 11679  005128  0E00               	movlw	0
 11680  00512A  0100               	movlb	0	; () banked
 11681  00512C  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11682  00512E  0E00               	movlw	0
 11683  005130  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11684  005132  0E00               	movlw	0
 11685  005134  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11686  005136  0E00               	movlw	0
 11687  005138  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11688  00513A  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11689  00513E  0E04               	movlw	4
 11690  005140  ECA9  F006         	call	_CANSetFilter
 11691                           
 11692                           ;inc\CANlib.h: 286: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
 11693  005144  0E00               	movlw	0
 11694  005146  0100               	movlb	0	; () banked
 11695  005148  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11696  00514A  0E00               	movlw	0
 11697  00514C  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11698  00514E  0E00               	movlw	0
 11699  005150  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11700  005152  0E00               	movlw	0
 11701  005154  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11702  005156  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11703  00515A  0E05               	movlw	5
 11704  00515C  ECA9  F006         	call	_CANSetFilter
 11705                           
 11706                           ;inc\CANlib.h: 288: CANOperationMode(CAN_OP_MODE_NORMAL);
 11707  005160  0E00               	movlw	0
 11708  005162  ECE2  F02F         	call	_CANOperationMode
 11709  005166  0012               	return		;funcret
 11710  005168                     __end_of_CANInitialize:
 11711                           	opt stack 0
 11712                           tblptru	equ	0xFF8
 11713                           tblptrh	equ	0xFF7
 11714                           tblptrl	equ	0xFF6
 11715                           tablat	equ	0xFF5
 11716                           prodh	equ	0xFF4
 11717                           prodl	equ	0xFF3
 11718                           intcon	equ	0xFF2
 11719                           intcon2	equ	0xFF1
 11720                           postinc0	equ	0xFEE
 11721                           wreg	equ	0xFE8
 11722                           postdec1	equ	0xFE5
 11723                           fsr1l	equ	0xFE1
 11724                           indf2	equ	0xFDF
 11725                           postinc2	equ	0xFDE
 11726                           postdec2	equ	0xFDD
 11727                           fsr2h	equ	0xFDA
 11728                           fsr2l	equ	0xFD9
 11729                           status	equ	0xFD8
 11730                           
 11731 ;; *************** function _CANSetMask *****************
 11732 ;; Defined at:
 11733 ;;		line 641 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 11734 ;; Parameters:    Size  Location     Type
 11735 ;;  numBuffer       1    wreg     enum E16347
 11736 ;;  mask            4   23[BANK0 ] unsigned long 
 11737 ;;  type            1   27[BANK0 ] enum E16313
 11738 ;; Auto vars:     Size  Location     Type
 11739 ;;  numBuffer       1   32[BANK0 ] enum E16347
 11740 ;;  tamp            4   33[BANK0 ] unsigned long 
 11741 ;; Return value:  Size  Location     Type
 11742 ;;		None               void
 11743 ;; Registers used:
 11744 ;;		wreg, status,2, status,0
 11745 ;; Tracked objects:
 11746 ;;		On entry : 0/0
 11747 ;;		On exit  : 0/0
 11748 ;;		Unchanged: 0/0
 11749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11750 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11751 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11752 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11753 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11754 ;;Total ram usage:       14 bytes
 11755 ;; Hardware stack levels used:    1
 11756 ;; Hardware stack levels required when called:    4
 11757 ;; This function calls:
 11758 ;;		Nothing
 11759 ;; This function is called by:
 11760 ;;		_CANInitialize
 11761 ;; This function uses a non-reentrant model
 11762 ;;
 11763                           
 11764                           	psect	text32
 11765  003F2E                     __ptext32:
 11766                           	opt stack 0
 11767  003F2E                     _CANSetMask:
 11768                           	opt stack 24
 11769                           
 11770                           ;incstack = 0
 11771                           ;CANSetMask@numBuffer stored from wreg
 11772  003F2E  0100               	movlb	0	; () banked
 11773  003F30  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
 11774                           
 11775                           ;inc\CANlib.h: 644: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
 11776  003F32  0100               	movlb	0	; () banked
 11777  003F34  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11778  003F36  A4D8               	btfss	status,2,c
 11779  003F38  D056               	goto	l4968
 11780                           
 11781                           ; BSR set to: 0
 11782  003F3A  0100               	movlb	0	; () banked
 11783  003F3C  297B               	incf	CANSetMask@type& (0+255),w,b
 11784  003F3E  A4D8               	btfss	status,2,c
 11785  003F40  D052               	goto	l4968
 11786                           
 11787                           ; BSR set to: 0
 11788                           ;inc\CANlib.h: 645: {
 11789                           ;inc\CANlib.h: 646: tamp = (mask >> 3);
 11790  003F42  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11791  003F46  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11792  003F4A  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11793  003F4E  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11794  003F52  0E04               	movlw	4
 11795  003F54  D006               	goto	u5560
 11796  003F56                     u5565:
 11797  003F56  0100               	movlb	0	; () banked
 11798  003F58  90D8               	bcf	status,0,c
 11799  003F5A  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11800  003F5C  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11801  003F5E  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11802  003F60  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11803  003F62                     u5560:
 11804  003F62  2EE8               	decfsz	wreg,f,c
 11805  003F64  D7F8               	goto	u5565
 11806  003F66  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11807  003F6A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11808  003F6E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11809  003F72  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11810                           
 11811                           ; BSR set to: 0
 11812                           ;inc\CANlib.h: 647: tamp = tamp & 0x000000FF;
 11813  003F76  0100               	movlb	0	; () banked
 11814  003F78  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11815  003F7A  0100               	movlb	0	; () banked
 11816  003F7C  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11817  003F7E  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11818  003F80  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11819  003F82  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11820                           
 11821                           ; BSR set to: 0
 11822                           ;inc\CANlib.h: 648: RXM0SIDH = (unsigned char) tamp;
 11823  003F84  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11824                           
 11825                           ; BSR set to: 0
 11826                           ;inc\CANlib.h: 650: tamp = mask & 0x00000007;
 11827  003F88  0E07               	movlw	7
 11828  003F8A  0100               	movlb	0	; () banked
 11829  003F8C  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11830  003F8E  0100               	movlb	0	; () banked
 11831  003F90  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11832  003F92  0E00               	movlw	0
 11833  003F94  0100               	movlb	0	; () banked
 11834  003F96  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11835  003F98  0100               	movlb	0	; () banked
 11836  003F9A  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11837  003F9C  0E00               	movlw	0
 11838  003F9E  0100               	movlb	0	; () banked
 11839  003FA0  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11840  003FA2  0100               	movlb	0	; () banked
 11841  003FA4  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11842  003FA6  0E00               	movlw	0
 11843  003FA8  0100               	movlb	0	; () banked
 11844  003FAA  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11845  003FAC  0100               	movlb	0	; () banked
 11846  003FAE  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11847                           
 11848                           ; BSR set to: 0
 11849                           ;inc\CANlib.h: 651: tamp = tamp << 5;
 11850  003FB0  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11851  003FB4  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11852  003FB8  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11853  003FBC  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11854  003FC0  0E05               	movlw	5
 11855  003FC2                     u5575:
 11856  003FC2  90D8               	bcf	status,0,c
 11857  003FC4  0100               	movlb	0	; () banked
 11858  003FC6  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11859  003FC8  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11860  003FCA  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11861  003FCC  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11862  003FCE  2EE8               	decfsz	wreg,f,c
 11863  003FD0  D7F8               	goto	u5575
 11864  003FD2  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11865  003FD6  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11866  003FDA  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11867  003FDE  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11868                           
 11869                           ; BSR set to: 0
 11870                           ;inc\CANlib.h: 652: RXM0SIDL = (unsigned char) tamp;
 11871  003FE2  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
 11872  003FE6                     l4968:
 11873                           
 11874                           ; BSR set to: 0
 11875                           ;inc\CANlib.h: 653: }
 11876                           ;inc\CANlib.h: 655: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
 11877  003FE6  0E02               	movlw	2
 11878  003FE8  0100               	movlb	0	; () banked
 11879  003FEA  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11880  003FEC  A4D8               	btfss	status,2,c
 11881  003FEE  D056               	goto	l4984
 11882                           
 11883                           ; BSR set to: 0
 11884  003FF0  0100               	movlb	0	; () banked
 11885  003FF2  297B               	incf	CANSetMask@type& (0+255),w,b
 11886  003FF4  A4D8               	btfss	status,2,c
 11887  003FF6  D052               	goto	l4984
 11888                           
 11889                           ; BSR set to: 0
 11890                           ;inc\CANlib.h: 656: {
 11891                           ;inc\CANlib.h: 657: tamp = (mask >> 3);
 11892  003FF8  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11893  003FFC  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11894  004000  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11895  004004  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11896  004008  0E04               	movlw	4
 11897  00400A  D006               	goto	u5600
 11898  00400C                     u5605:
 11899  00400C  0100               	movlb	0	; () banked
 11900  00400E  90D8               	bcf	status,0,c
 11901  004010  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11902  004012  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11903  004014  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11904  004016  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11905  004018                     u5600:
 11906  004018  2EE8               	decfsz	wreg,f,c
 11907  00401A  D7F8               	goto	u5605
 11908  00401C  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11909  004020  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11910  004024  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11911  004028  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11912                           
 11913                           ; BSR set to: 0
 11914                           ;inc\CANlib.h: 658: tamp = tamp & 0x000000FF;
 11915  00402C  0100               	movlb	0	; () banked
 11916  00402E  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11917  004030  0100               	movlb	0	; () banked
 11918  004032  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11919  004034  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11920  004036  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11921  004038  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11922                           
 11923                           ; BSR set to: 0
 11924                           ;inc\CANlib.h: 659: RXM1SIDH = (unsigned char) tamp;
 11925  00403A  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11926                           
 11927                           ; BSR set to: 0
 11928                           ;inc\CANlib.h: 661: tamp = mask & 0x00000007;
 11929  00403E  0E07               	movlw	7
 11930  004040  0100               	movlb	0	; () banked
 11931  004042  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11932  004044  0100               	movlb	0	; () banked
 11933  004046  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11934  004048  0E00               	movlw	0
 11935  00404A  0100               	movlb	0	; () banked
 11936  00404C  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11937  00404E  0100               	movlb	0	; () banked
 11938  004050  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11939  004052  0E00               	movlw	0
 11940  004054  0100               	movlb	0	; () banked
 11941  004056  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11942  004058  0100               	movlb	0	; () banked
 11943  00405A  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11944  00405C  0E00               	movlw	0
 11945  00405E  0100               	movlb	0	; () banked
 11946  004060  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11947  004062  0100               	movlb	0	; () banked
 11948  004064  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11949                           
 11950                           ; BSR set to: 0
 11951                           ;inc\CANlib.h: 662: tamp = tamp << 5;
 11952  004066  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11953  00406A  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11954  00406E  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11955  004072  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11956  004076  0E05               	movlw	5
 11957  004078                     u5615:
 11958  004078  90D8               	bcf	status,0,c
 11959  00407A  0100               	movlb	0	; () banked
 11960  00407C  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11961  00407E  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11962  004080  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11963  004082  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11964  004084  2EE8               	decfsz	wreg,f,c
 11965  004086  D7F8               	goto	u5615
 11966  004088  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11967  00408C  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11968  004090  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11969  004094  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11970                           
 11971                           ; BSR set to: 0
 11972                           ;inc\CANlib.h: 663: RXM1SIDL = (unsigned char) tamp;
 11973  004098  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
 11974  00409C                     l4984:
 11975                           
 11976                           ; BSR set to: 0
 11977                           ;inc\CANlib.h: 664: }
 11978                           ;inc\CANlib.h: 666: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
 11979  00409C  0100               	movlb	0	; () banked
 11980  00409E  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11981  0040A0  A4D8               	btfss	status,2,c
 11982  0040A2  D087               	goto	l5016
 11983                           
 11984                           ; BSR set to: 0
 11985  0040A4  0EF7               	movlw	247
 11986  0040A6  0100               	movlb	0	; () banked
 11987  0040A8  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11988  0040AA  A4D8               	btfss	status,2,c
 11989  0040AC  D082               	goto	l5016
 11990                           
 11991                           ; BSR set to: 0
 11992                           ;inc\CANlib.h: 667: {
 11993                           ;inc\CANlib.h: 668: tamp = mask & 0x000000FF;
 11994  0040AE  0100               	movlb	0	; () banked
 11995  0040B0  5177               	movf	CANSetMask@mask& (0+255),w,b
 11996  0040B2  0100               	movlb	0	; () banked
 11997  0040B4  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11998  0040B6  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11999  0040B8  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12000  0040BA  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12001                           
 12002                           ; BSR set to: 0
 12003                           ;inc\CANlib.h: 669: RXM0EIDL = (unsigned char) tamp;
 12004  0040BC  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
 12005                           
 12006                           ; BSR set to: 0
 12007                           ;inc\CANlib.h: 671: tamp = mask & 0x0000FF00;
 12008  0040C0  0E00               	movlw	0
 12009  0040C2  0100               	movlb	0	; () banked
 12010  0040C4  1577               	andwf	CANSetMask@mask& (0+255),w,b
 12011  0040C6  0100               	movlb	0	; () banked
 12012  0040C8  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12013  0040CA  0EFF               	movlw	255
 12014  0040CC  0100               	movlb	0	; () banked
 12015  0040CE  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12016  0040D0  0100               	movlb	0	; () banked
 12017  0040D2  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12018  0040D4  0E00               	movlw	0
 12019  0040D6  0100               	movlb	0	; () banked
 12020  0040D8  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12021  0040DA  0100               	movlb	0	; () banked
 12022  0040DC  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12023  0040DE  0E00               	movlw	0
 12024  0040E0  0100               	movlb	0	; () banked
 12025  0040E2  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12026  0040E4  0100               	movlb	0	; () banked
 12027  0040E6  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12028                           
 12029                           ; BSR set to: 0
 12030                           ;inc\CANlib.h: 672: tamp = tamp >> 8;
 12031  0040E8  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 12032  0040EC  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12033  0040F0  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12034  0040F4  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12035  0040F8  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 12036  0040FC  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 12037  004100  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 12038  004104  0100               	movlb	0	; () banked
 12039  004106  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 12040  004108  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12041  00410C  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12042  004110  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12043  004114  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12044                           
 12045                           ; BSR set to: 0
 12046                           ;inc\CANlib.h: 673: RXM0EIDH = (unsigned char) tamp;
 12047  004118  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
 12048                           
 12049                           ; BSR set to: 0
 12050                           ;inc\CANlib.h: 675: if (mask & 0x00010000)
 12051  00411C  0100               	movlb	0	; () banked
 12052  00411E  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12053  004120  D003               	goto	l432
 12054                           
 12055                           ; BSR set to: 0
 12056                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x01;
 12057  004122  010F               	movlb	15	; () banked
 12058  004124  8119               	bsf	25,0,b	;volatile
 12059  004126  D002               	goto	l433
 12060  004128                     l432:
 12061                           
 12062                           ; BSR set to: 0
 12063                           ;inc\CANlib.h: 677: else
 12064                           ;inc\CANlib.h: 678: RXM0SIDLbits.EID16 = 0x00;
 12065  004128  010F               	movlb	15	; () banked
 12066  00412A  9119               	bcf	25,0,b	;volatile
 12067  00412C                     l433:
 12068                           
 12069                           ; BSR set to: 15
 12070                           ;inc\CANlib.h: 680: if (mask & 0x00020000)
 12071  00412C  0100               	movlb	0	; () banked
 12072  00412E  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12073  004130  D003               	goto	l434
 12074                           
 12075                           ; BSR set to: 0
 12076                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x01;
 12077  004132  010F               	movlb	15	; () banked
 12078  004134  8319               	bsf	25,1,b	;volatile
 12079  004136  D002               	goto	l435
 12080  004138                     l434:
 12081                           
 12082                           ; BSR set to: 0
 12083                           ;inc\CANlib.h: 682: else
 12084                           ;inc\CANlib.h: 683: RXM0SIDLbits.EID17 = 0x00;
 12085  004138  010F               	movlb	15	; () banked
 12086  00413A  9319               	bcf	25,1,b	;volatile
 12087  00413C                     l435:
 12088                           
 12089                           ; BSR set to: 15
 12090                           ;inc\CANlib.h: 685: if (mask & 0x00040000)
 12091  00413C  0100               	movlb	0	; () banked
 12092  00413E  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12093  004140  D003               	goto	l436
 12094                           
 12095                           ; BSR set to: 0
 12096                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x01;
 12097  004142  010F               	movlb	15	; () banked
 12098  004144  8B19               	bsf	25,5,b	;volatile
 12099  004146  D002               	goto	l437
 12100  004148                     l436:
 12101                           
 12102                           ; BSR set to: 0
 12103                           ;inc\CANlib.h: 687: else
 12104                           ;inc\CANlib.h: 688: RXM0SIDLbits.SID0 = 0x00;
 12105  004148  010F               	movlb	15	; () banked
 12106  00414A  9B19               	bcf	25,5,b	;volatile
 12107  00414C                     l437:
 12108                           
 12109                           ; BSR set to: 15
 12110                           ;inc\CANlib.h: 690: if (mask & 0x00080000)
 12111  00414C  0100               	movlb	0	; () banked
 12112  00414E  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12113  004150  D003               	goto	l438
 12114                           
 12115                           ; BSR set to: 0
 12116                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x01;
 12117  004152  010F               	movlb	15	; () banked
 12118  004154  8D19               	bsf	25,6,b	;volatile
 12119  004156  D002               	goto	l439
 12120  004158                     l438:
 12121                           
 12122                           ; BSR set to: 0
 12123                           ;inc\CANlib.h: 692: else
 12124                           ;inc\CANlib.h: 693: RXM0SIDLbits.SID1 = 0x00;
 12125  004158  010F               	movlb	15	; () banked
 12126  00415A  9D19               	bcf	25,6,b	;volatile
 12127  00415C                     l439:
 12128                           
 12129                           ; BSR set to: 15
 12130                           ;inc\CANlib.h: 695: if (mask & 0x00100000)
 12131  00415C  0100               	movlb	0	; () banked
 12132  00415E  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12133  004160  D003               	goto	l440
 12134                           
 12135                           ; BSR set to: 0
 12136                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x01 ;
 12137  004162  010F               	movlb	15	; () banked
 12138  004164  8F19               	bsf	25,7,b	;volatile
 12139  004166  D002               	goto	l5010
 12140  004168                     l440:
 12141                           
 12142                           ; BSR set to: 0
 12143                           ;inc\CANlib.h: 697: else
 12144                           ;inc\CANlib.h: 698: RXM0SIDLbits.SID2 = 0x00 ;
 12145  004168  010F               	movlb	15	; () banked
 12146  00416A  9F19               	bcf	25,7,b	;volatile
 12147  00416C                     l5010:
 12148                           
 12149                           ; BSR set to: 15
 12150                           ;inc\CANlib.h: 700: tamp = (mask >> 21);
 12151  00416C  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12152  004170  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12153  004174  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12154  004178  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12155  00417C  0E16               	movlw	22
 12156  00417E  D006               	goto	u5690
 12157  004180                     u5695:
 12158  004180  0100               	movlb	0	; () banked
 12159  004182  90D8               	bcf	status,0,c
 12160  004184  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12161  004186  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12162  004188  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12163  00418A  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12164  00418C                     u5690:
 12165  00418C  2EE8               	decfsz	wreg,f,c
 12166  00418E  D7F8               	goto	u5695
 12167  004190  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12168  004194  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12169  004198  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12170  00419C  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12171                           
 12172                           ; BSR set to: 0
 12173                           ;inc\CANlib.h: 701: tamp = tamp & 0x000000FF;
 12174  0041A0  0100               	movlb	0	; () banked
 12175  0041A2  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12176  0041A4  0100               	movlb	0	; () banked
 12177  0041A6  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12178  0041A8  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12179  0041AA  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12180  0041AC  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12181                           
 12182                           ; BSR set to: 0
 12183                           ;inc\CANlib.h: 702: RXM0SIDH = (unsigned char) tamp;
 12184  0041AE  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 12185  0041B2                     l5016:
 12186                           
 12187                           ; BSR set to: 0
 12188                           ;inc\CANlib.h: 703: }
 12189                           ;inc\CANlib.h: 705: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
 12190  0041B2  0E02               	movlw	2
 12191  0041B4  0100               	movlb	0	; () banked
 12192  0041B6  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 12193  0041B8  A4D8               	btfss	status,2,c
 12194  0041BA  0012               	return	
 12195                           
 12196                           ; BSR set to: 0
 12197  0041BC  0EF7               	movlw	247
 12198  0041BE  0100               	movlb	0	; () banked
 12199  0041C0  197B               	xorwf	CANSetMask@type& (0+255),w,b
 12200  0041C2  A4D8               	btfss	status,2,c
 12201  0041C4  0012               	return	
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;inc\CANlib.h: 706: {
 12205                           ;inc\CANlib.h: 707: tamp = mask & 0x000000FF;
 12206  0041C6  0100               	movlb	0	; () banked
 12207  0041C8  5177               	movf	CANSetMask@mask& (0+255),w,b
 12208  0041CA  0100               	movlb	0	; () banked
 12209  0041CC  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12210  0041CE  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12211  0041D0  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12212  0041D2  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12213                           
 12214                           ; BSR set to: 0
 12215                           ;inc\CANlib.h: 708: RXM1EIDL = (unsigned char) tamp;
 12216  0041D4  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
 12217                           
 12218                           ; BSR set to: 0
 12219                           ;inc\CANlib.h: 710: tamp = mask & 0x0000FF00;
 12220  0041D8  0E00               	movlw	0
 12221  0041DA  0100               	movlb	0	; () banked
 12222  0041DC  1577               	andwf	CANSetMask@mask& (0+255),w,b
 12223  0041DE  0100               	movlb	0	; () banked
 12224  0041E0  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12225  0041E2  0EFF               	movlw	255
 12226  0041E4  0100               	movlb	0	; () banked
 12227  0041E6  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12228  0041E8  0100               	movlb	0	; () banked
 12229  0041EA  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12230  0041EC  0E00               	movlw	0
 12231  0041EE  0100               	movlb	0	; () banked
 12232  0041F0  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12233  0041F2  0100               	movlb	0	; () banked
 12234  0041F4  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12235  0041F6  0E00               	movlw	0
 12236  0041F8  0100               	movlb	0	; () banked
 12237  0041FA  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12238  0041FC  0100               	movlb	0	; () banked
 12239  0041FE  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12240                           
 12241                           ; BSR set to: 0
 12242                           ;inc\CANlib.h: 711: tamp = tamp >> 8;
 12243  004200  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 12244  004204  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12245  004208  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12246  00420C  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12247  004210  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 12248  004214  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 12249  004218  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 12250  00421C  0100               	movlb	0	; () banked
 12251  00421E  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 12252  004220  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12253  004224  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12254  004228  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12255  00422C  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12256                           
 12257                           ; BSR set to: 0
 12258                           ;inc\CANlib.h: 712: RXM1EIDH = (unsigned char) tamp;
 12259  004230  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
 12260                           
 12261                           ; BSR set to: 0
 12262                           ;inc\CANlib.h: 714: if (mask & 0x00010000)
 12263  004234  0100               	movlb	0	; () banked
 12264  004236  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12265  004238  D003               	goto	l443
 12266                           
 12267                           ; BSR set to: 0
 12268                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x01;
 12269  00423A  010F               	movlb	15	; () banked
 12270  00423C  811D               	bsf	29,0,b	;volatile
 12271  00423E  D002               	goto	l444
 12272  004240                     l443:
 12273                           
 12274                           ; BSR set to: 0
 12275                           ;inc\CANlib.h: 716: else
 12276                           ;inc\CANlib.h: 717: RXM1SIDLbits.EID16 = 0x00;
 12277  004240  010F               	movlb	15	; () banked
 12278  004242  911D               	bcf	29,0,b	;volatile
 12279  004244                     l444:
 12280                           
 12281                           ; BSR set to: 15
 12282                           ;inc\CANlib.h: 719: if (mask & 0x00020000)
 12283  004244  0100               	movlb	0	; () banked
 12284  004246  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12285  004248  D003               	goto	l445
 12286                           
 12287                           ; BSR set to: 0
 12288                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x01;
 12289  00424A  010F               	movlb	15	; () banked
 12290  00424C  831D               	bsf	29,1,b	;volatile
 12291  00424E  D002               	goto	l446
 12292  004250                     l445:
 12293                           
 12294                           ; BSR set to: 0
 12295                           ;inc\CANlib.h: 721: else
 12296                           ;inc\CANlib.h: 722: RXM1SIDLbits.EID17 = 0x00;
 12297  004250  010F               	movlb	15	; () banked
 12298  004252  931D               	bcf	29,1,b	;volatile
 12299  004254                     l446:
 12300                           
 12301                           ; BSR set to: 15
 12302                           ;inc\CANlib.h: 724: if (mask & 0x00040000)
 12303  004254  0100               	movlb	0	; () banked
 12304  004256  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12305  004258  D003               	goto	l447
 12306                           
 12307                           ; BSR set to: 0
 12308                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x01;
 12309  00425A  010F               	movlb	15	; () banked
 12310  00425C  8B1D               	bsf	29,5,b	;volatile
 12311  00425E  D002               	goto	l448
 12312  004260                     l447:
 12313                           
 12314                           ; BSR set to: 0
 12315                           ;inc\CANlib.h: 726: else
 12316                           ;inc\CANlib.h: 727: RXM1SIDLbits.SID0 = 0x00;
 12317  004260  010F               	movlb	15	; () banked
 12318  004262  9B1D               	bcf	29,5,b	;volatile
 12319  004264                     l448:
 12320                           
 12321                           ; BSR set to: 15
 12322                           ;inc\CANlib.h: 729: if (mask & 0x00080000)
 12323  004264  0100               	movlb	0	; () banked
 12324  004266  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12325  004268  D003               	goto	l449
 12326                           
 12327                           ; BSR set to: 0
 12328                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x01;
 12329  00426A  010F               	movlb	15	; () banked
 12330  00426C  8D1D               	bsf	29,6,b	;volatile
 12331  00426E  D002               	goto	l450
 12332  004270                     l449:
 12333                           
 12334                           ; BSR set to: 0
 12335                           ;inc\CANlib.h: 731: else
 12336                           ;inc\CANlib.h: 732: RXM1SIDLbits.SID1 = 0x00;
 12337  004270  010F               	movlb	15	; () banked
 12338  004272  9D1D               	bcf	29,6,b	;volatile
 12339  004274                     l450:
 12340                           
 12341                           ; BSR set to: 15
 12342                           ;inc\CANlib.h: 734: if (mask & 0x00100000)
 12343  004274  0100               	movlb	0	; () banked
 12344  004276  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12345  004278  D003               	goto	l451
 12346                           
 12347                           ; BSR set to: 0
 12348                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x01 ;
 12349  00427A  010F               	movlb	15	; () banked
 12350  00427C  8F1D               	bsf	29,7,b	;volatile
 12351  00427E  D002               	goto	l5042
 12352  004280                     l451:
 12353                           
 12354                           ; BSR set to: 0
 12355                           ;inc\CANlib.h: 736: else
 12356                           ;inc\CANlib.h: 737: RXM1SIDLbits.SID2 = 0x00 ;
 12357  004280  010F               	movlb	15	; () banked
 12358  004282  9F1D               	bcf	29,7,b	;volatile
 12359  004284                     l5042:
 12360                           
 12361                           ; BSR set to: 15
 12362                           ;inc\CANlib.h: 739: tamp = (mask >> 21);
 12363  004284  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12364  004288  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12365  00428C  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12366  004290  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12367  004294  0E16               	movlw	22
 12368  004296  D006               	goto	u5770
 12369  004298                     u5775:
 12370  004298  0100               	movlb	0	; () banked
 12371  00429A  90D8               	bcf	status,0,c
 12372  00429C  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12373  00429E  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12374  0042A0  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12375  0042A2  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12376  0042A4                     u5770:
 12377  0042A4  2EE8               	decfsz	wreg,f,c
 12378  0042A6  D7F8               	goto	u5775
 12379  0042A8  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12380  0042AC  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12381  0042B0  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12382  0042B4  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12383                           
 12384                           ; BSR set to: 0
 12385                           ;inc\CANlib.h: 740: tamp = tamp & 0x000000FF;
 12386  0042B8  0100               	movlb	0	; () banked
 12387  0042BA  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12388  0042BC  0100               	movlb	0	; () banked
 12389  0042BE  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12390  0042C0  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12391  0042C2  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12392  0042C4  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12393                           
 12394                           ; BSR set to: 0
 12395                           ;inc\CANlib.h: 741: RXM1SIDH = (unsigned char) tamp;
 12396  0042C6  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 12397  0042CA  0012               	return	
 12398  0042CC                     __end_of_CANSetMask:
 12399                           	opt stack 0
 12400                           tblptru	equ	0xFF8
 12401                           tblptrh	equ	0xFF7
 12402                           tblptrl	equ	0xFF6
 12403                           tablat	equ	0xFF5
 12404                           prodh	equ	0xFF4
 12405                           prodl	equ	0xFF3
 12406                           intcon	equ	0xFF2
 12407                           intcon2	equ	0xFF1
 12408                           postinc0	equ	0xFEE
 12409                           wreg	equ	0xFE8
 12410                           postdec1	equ	0xFE5
 12411                           fsr1l	equ	0xFE1
 12412                           indf2	equ	0xFDF
 12413                           postinc2	equ	0xFDE
 12414                           postdec2	equ	0xFDD
 12415                           fsr2h	equ	0xFDA
 12416                           fsr2l	equ	0xFD9
 12417                           status	equ	0xFD8
 12418                           
 12419 ;; *************** function _CANSetFilter *****************
 12420 ;; Defined at:
 12421 ;;		line 749 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 12422 ;; Parameters:    Size  Location     Type
 12423 ;;  numBuffer       1    wreg     enum E16350
 12424 ;;  filter          4   23[BANK0 ] unsigned long 
 12425 ;;  type            1   27[BANK0 ] enum E16313
 12426 ;; Auto vars:     Size  Location     Type
 12427 ;;  numBuffer       1   32[BANK0 ] enum E16350
 12428 ;;  tamp            4   33[BANK0 ] unsigned long 
 12429 ;; Return value:  Size  Location     Type
 12430 ;;		None               void
 12431 ;; Registers used:
 12432 ;;		wreg, status,2, status,0
 12433 ;; Tracked objects:
 12434 ;;		On entry : 0/0
 12435 ;;		On exit  : 0/0
 12436 ;;		Unchanged: 0/0
 12437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12438 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12439 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12440 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12441 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12442 ;;Total ram usage:       14 bytes
 12443 ;; Hardware stack levels used:    1
 12444 ;; Hardware stack levels required when called:    4
 12445 ;; This function calls:
 12446 ;;		Nothing
 12447 ;; This function is called by:
 12448 ;;		_CANInitialize
 12449 ;; This function uses a non-reentrant model
 12450 ;;
 12451                           
 12452                           	psect	text33
 12453  000D52                     __ptext33:
 12454                           	opt stack 0
 12455  000D52                     _CANSetFilter:
 12456                           	opt stack 24
 12457                           
 12458                           ; BSR set to: 0
 12459                           ;incstack = 0
 12460                           ;CANSetFilter@numBuffer stored from wreg
 12461  000D52  0100               	movlb	0	; () banked
 12462  000D54  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
 12463                           
 12464                           ;inc\CANlib.h: 751: unsigned long tamp;
 12465                           ;inc\CANlib.h: 753: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
 12466  000D56  0100               	movlb	0	; () banked
 12467  000D58  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12468  000D5A  0100               	movlb	0	; () banked
 12469  000D5C  A4D8               	btfss	status,2,c
 12470  000D5E  D058               	goto	l5066
 12471                           
 12472                           ; BSR set to: 0
 12473  000D60  0100               	movlb	0	; () banked
 12474  000D62  297B               	incf	CANSetFilter@type& (0+255),w,b
 12475  000D64  A4D8               	btfss	status,2,c
 12476  000D66  D054               	goto	l5066
 12477                           
 12478                           ; BSR set to: 0
 12479                           ;inc\CANlib.h: 754: {
 12480                           ;inc\CANlib.h: 755: RXF0SIDLbits.EXIDEN = 0x00;
 12481  000D68  010F               	movlb	15	; () banked
 12482  000D6A  9701               	bcf	1,3,b	;volatile
 12483                           
 12484                           ; BSR set to: 15
 12485                           ;inc\CANlib.h: 757: tamp = (filter >> 3);
 12486  000D6C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12487  000D70  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12488  000D74  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12489  000D78  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12490  000D7C  0E04               	movlw	4
 12491  000D7E  D006               	goto	u5800
 12492  000D80                     u5805:
 12493  000D80  0100               	movlb	0	; () banked
 12494  000D82  90D8               	bcf	status,0,c
 12495  000D84  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12496  000D86  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12497  000D88  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12498  000D8A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12499  000D8C                     u5800:
 12500  000D8C  2EE8               	decfsz	wreg,f,c
 12501  000D8E  D7F8               	goto	u5805
 12502  000D90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12503  000D94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12504  000D98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12505  000D9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12506                           
 12507                           ; BSR set to: 0
 12508                           ;inc\CANlib.h: 758: tamp = tamp & 0x000000FF;
 12509  000DA0  0100               	movlb	0	; () banked
 12510  000DA2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12511  000DA4  0100               	movlb	0	; () banked
 12512  000DA6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12513  000DA8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12514  000DAA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12515  000DAC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12516                           
 12517                           ; BSR set to: 0
 12518                           ;inc\CANlib.h: 759: RXF0SIDH = (unsigned char) tamp;
 12519  000DAE  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12520                           
 12521                           ; BSR set to: 0
 12522                           ;inc\CANlib.h: 761: tamp = filter & 0x00000007;
 12523  000DB2  0E07               	movlw	7
 12524  000DB4  0100               	movlb	0	; () banked
 12525  000DB6  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12526  000DB8  0100               	movlb	0	; () banked
 12527  000DBA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12528  000DBC  0E00               	movlw	0
 12529  000DBE  0100               	movlb	0	; () banked
 12530  000DC0  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12531  000DC2  0100               	movlb	0	; () banked
 12532  000DC4  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12533  000DC6  0E00               	movlw	0
 12534  000DC8  0100               	movlb	0	; () banked
 12535  000DCA  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12536  000DCC  0100               	movlb	0	; () banked
 12537  000DCE  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12538  000DD0  0E00               	movlw	0
 12539  000DD2  0100               	movlb	0	; () banked
 12540  000DD4  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12541  000DD6  0100               	movlb	0	; () banked
 12542  000DD8  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12543                           
 12544                           ; BSR set to: 0
 12545                           ;inc\CANlib.h: 762: tamp = tamp << 5;
 12546  000DDA  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12547  000DDE  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12548  000DE2  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12549  000DE6  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12550  000DEA  0E05               	movlw	5
 12551  000DEC                     u5815:
 12552  000DEC  90D8               	bcf	status,0,c
 12553  000DEE  0100               	movlb	0	; () banked
 12554  000DF0  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12555  000DF2  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12556  000DF4  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12557  000DF6  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12558  000DF8  2EE8               	decfsz	wreg,f,c
 12559  000DFA  D7F8               	goto	u5815
 12560  000DFC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12561  000E00  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12562  000E04  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12563  000E08  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12564                           
 12565                           ; BSR set to: 0
 12566                           ;inc\CANlib.h: 763: RXF0SIDL = (unsigned char) tamp;
 12567  000E0C  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
 12568  000E10                     l5066:
 12569                           
 12570                           ; BSR set to: 0
 12571                           ;inc\CANlib.h: 764: }
 12572                           ;inc\CANlib.h: 766: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
 12573  000E10  0100               	movlb	0	; () banked
 12574  000E12  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12575  000E14  A4D8               	btfss	status,2,c
 12576  000E16  D058               	goto	l5084
 12577                           
 12578                           ; BSR set to: 0
 12579  000E18  0100               	movlb	0	; () banked
 12580  000E1A  297B               	incf	CANSetFilter@type& (0+255),w,b
 12581  000E1C  A4D8               	btfss	status,2,c
 12582  000E1E  D054               	goto	l5084
 12583                           
 12584                           ; BSR set to: 0
 12585                           ;inc\CANlib.h: 767: {
 12586                           ;inc\CANlib.h: 768: RXF1SIDLbits.EXIDEN = 0x00;
 12587  000E20  010F               	movlb	15	; () banked
 12588  000E22  9705               	bcf	5,3,b	;volatile
 12589                           
 12590                           ; BSR set to: 15
 12591                           ;inc\CANlib.h: 770: tamp = (filter >> 3);
 12592  000E24  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12593  000E28  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12594  000E2C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12595  000E30  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12596  000E34  0E04               	movlw	4
 12597  000E36  D006               	goto	u5840
 12598  000E38                     u5845:
 12599  000E38  0100               	movlb	0	; () banked
 12600  000E3A  90D8               	bcf	status,0,c
 12601  000E3C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12602  000E3E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12603  000E40  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12604  000E42  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12605  000E44                     u5840:
 12606  000E44  2EE8               	decfsz	wreg,f,c
 12607  000E46  D7F8               	goto	u5845
 12608  000E48  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12609  000E4C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12610  000E50  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12611  000E54  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12612                           
 12613                           ; BSR set to: 0
 12614                           ;inc\CANlib.h: 771: tamp = tamp & 0x000000FF;
 12615  000E58  0100               	movlb	0	; () banked
 12616  000E5A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12617  000E5C  0100               	movlb	0	; () banked
 12618  000E5E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12619  000E60  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12620  000E62  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12621  000E64  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12622                           
 12623                           ; BSR set to: 0
 12624                           ;inc\CANlib.h: 772: RXF1SIDH = (unsigned char) tamp;
 12625  000E66  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 12626                           
 12627                           ; BSR set to: 0
 12628                           ;inc\CANlib.h: 774: tamp = filter & 0x00000007;
 12629  000E6A  0E07               	movlw	7
 12630  000E6C  0100               	movlb	0	; () banked
 12631  000E6E  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12632  000E70  0100               	movlb	0	; () banked
 12633  000E72  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12634  000E74  0E00               	movlw	0
 12635  000E76  0100               	movlb	0	; () banked
 12636  000E78  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12637  000E7A  0100               	movlb	0	; () banked
 12638  000E7C  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12639  000E7E  0E00               	movlw	0
 12640  000E80  0100               	movlb	0	; () banked
 12641  000E82  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12642  000E84  0100               	movlb	0	; () banked
 12643  000E86  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12644  000E88  0E00               	movlw	0
 12645  000E8A  0100               	movlb	0	; () banked
 12646  000E8C  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12647  000E8E  0100               	movlb	0	; () banked
 12648  000E90  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12649                           
 12650                           ; BSR set to: 0
 12651                           ;inc\CANlib.h: 775: tamp = tamp << 5;
 12652  000E92  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12653  000E96  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12654  000E9A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12655  000E9E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12656  000EA2  0E05               	movlw	5
 12657  000EA4                     u5855:
 12658  000EA4  90D8               	bcf	status,0,c
 12659  000EA6  0100               	movlb	0	; () banked
 12660  000EA8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12661  000EAA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12662  000EAC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12663  000EAE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12664  000EB0  2EE8               	decfsz	wreg,f,c
 12665  000EB2  D7F8               	goto	u5855
 12666  000EB4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12667  000EB8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12668  000EBC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12669  000EC0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12670                           
 12671                           ; BSR set to: 0
 12672                           ;inc\CANlib.h: 776: RXF1SIDL = (unsigned char) tamp;
 12673  000EC4  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
 12674  000EC8                     l5084:
 12675                           
 12676                           ; BSR set to: 0
 12677                           ;inc\CANlib.h: 777: }
 12678                           ;inc\CANlib.h: 779: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
 12679  000EC8  0E02               	movlw	2
 12680  000ECA  0100               	movlb	0	; () banked
 12681  000ECC  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12682  000ECE  A4D8               	btfss	status,2,c
 12683  000ED0  D058               	goto	l5102
 12684                           
 12685                           ; BSR set to: 0
 12686  000ED2  0100               	movlb	0	; () banked
 12687  000ED4  297B               	incf	CANSetFilter@type& (0+255),w,b
 12688  000ED6  A4D8               	btfss	status,2,c
 12689  000ED8  D054               	goto	l5102
 12690                           
 12691                           ; BSR set to: 0
 12692                           ;inc\CANlib.h: 780: {
 12693                           ;inc\CANlib.h: 781: RXF2SIDLbits.EXIDEN = 0x00;
 12694  000EDA  010F               	movlb	15	; () banked
 12695  000EDC  9709               	bcf	9,3,b	;volatile
 12696                           
 12697                           ; BSR set to: 15
 12698                           ;inc\CANlib.h: 783: tamp = (filter >> 3);
 12699  000EDE  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12700  000EE2  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12701  000EE6  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12702  000EEA  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12703  000EEE  0E04               	movlw	4
 12704  000EF0  D006               	goto	u5880
 12705  000EF2                     u5885:
 12706  000EF2  0100               	movlb	0	; () banked
 12707  000EF4  90D8               	bcf	status,0,c
 12708  000EF6  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12709  000EF8  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12710  000EFA  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12711  000EFC  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12712  000EFE                     u5880:
 12713  000EFE  2EE8               	decfsz	wreg,f,c
 12714  000F00  D7F8               	goto	u5885
 12715  000F02  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12716  000F06  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12717  000F0A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12718  000F0E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12719                           
 12720                           ; BSR set to: 0
 12721                           ;inc\CANlib.h: 784: tamp = tamp & 0x000000FF;
 12722  000F12  0100               	movlb	0	; () banked
 12723  000F14  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12724  000F16  0100               	movlb	0	; () banked
 12725  000F18  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12726  000F1A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12727  000F1C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12728  000F1E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12729                           
 12730                           ; BSR set to: 0
 12731                           ;inc\CANlib.h: 785: RXF2SIDH = (unsigned char) tamp;
 12732  000F20  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 12733                           
 12734                           ; BSR set to: 0
 12735                           ;inc\CANlib.h: 787: tamp = filter & 0x00000007;
 12736  000F24  0E07               	movlw	7
 12737  000F26  0100               	movlb	0	; () banked
 12738  000F28  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12739  000F2A  0100               	movlb	0	; () banked
 12740  000F2C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12741  000F2E  0E00               	movlw	0
 12742  000F30  0100               	movlb	0	; () banked
 12743  000F32  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12744  000F34  0100               	movlb	0	; () banked
 12745  000F36  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12746  000F38  0E00               	movlw	0
 12747  000F3A  0100               	movlb	0	; () banked
 12748  000F3C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12749  000F3E  0100               	movlb	0	; () banked
 12750  000F40  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12751  000F42  0E00               	movlw	0
 12752  000F44  0100               	movlb	0	; () banked
 12753  000F46  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12754  000F48  0100               	movlb	0	; () banked
 12755  000F4A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12756                           
 12757                           ; BSR set to: 0
 12758                           ;inc\CANlib.h: 788: tamp = tamp << 5;
 12759  000F4C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12760  000F50  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12761  000F54  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12762  000F58  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12763  000F5C  0E05               	movlw	5
 12764  000F5E                     u5895:
 12765  000F5E  90D8               	bcf	status,0,c
 12766  000F60  0100               	movlb	0	; () banked
 12767  000F62  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12768  000F64  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12769  000F66  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12770  000F68  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12771  000F6A  2EE8               	decfsz	wreg,f,c
 12772  000F6C  D7F8               	goto	u5895
 12773  000F6E  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12774  000F72  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12775  000F76  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12776  000F7A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12777                           
 12778                           ; BSR set to: 0
 12779                           ;inc\CANlib.h: 789: RXF2SIDL = (unsigned char) tamp;
 12780  000F7E  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
 12781  000F82                     l5102:
 12782                           
 12783                           ; BSR set to: 0
 12784                           ;inc\CANlib.h: 790: }
 12785                           ;inc\CANlib.h: 792: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
 12786  000F82  0E03               	movlw	3
 12787  000F84  0100               	movlb	0	; () banked
 12788  000F86  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12789  000F88  A4D8               	btfss	status,2,c
 12790  000F8A  D058               	goto	l5120
 12791                           
 12792                           ; BSR set to: 0
 12793  000F8C  0100               	movlb	0	; () banked
 12794  000F8E  297B               	incf	CANSetFilter@type& (0+255),w,b
 12795  000F90  A4D8               	btfss	status,2,c
 12796  000F92  D054               	goto	l5120
 12797                           
 12798                           ; BSR set to: 0
 12799                           ;inc\CANlib.h: 793: {
 12800                           ;inc\CANlib.h: 794: RXF3SIDLbits.EXIDEN = 0x00;
 12801  000F94  010F               	movlb	15	; () banked
 12802  000F96  970D               	bcf	13,3,b	;volatile
 12803                           
 12804                           ; BSR set to: 15
 12805                           ;inc\CANlib.h: 796: tamp = (filter >> 3);
 12806  000F98  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12807  000F9C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12808  000FA0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12809  000FA4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12810  000FA8  0E04               	movlw	4
 12811  000FAA  D006               	goto	u5920
 12812  000FAC                     u5925:
 12813  000FAC  0100               	movlb	0	; () banked
 12814  000FAE  90D8               	bcf	status,0,c
 12815  000FB0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12816  000FB2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12817  000FB4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12818  000FB6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12819  000FB8                     u5920:
 12820  000FB8  2EE8               	decfsz	wreg,f,c
 12821  000FBA  D7F8               	goto	u5925
 12822  000FBC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12823  000FC0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12824  000FC4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12825  000FC8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12826                           
 12827                           ; BSR set to: 0
 12828                           ;inc\CANlib.h: 797: tamp = tamp & 0x000000FF;
 12829  000FCC  0100               	movlb	0	; () banked
 12830  000FCE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12831  000FD0  0100               	movlb	0	; () banked
 12832  000FD2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12833  000FD4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12834  000FD6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12835  000FD8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12836                           
 12837                           ; BSR set to: 0
 12838                           ;inc\CANlib.h: 798: RXF3SIDH = (unsigned char) tamp;
 12839  000FDA  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 12840                           
 12841                           ; BSR set to: 0
 12842                           ;inc\CANlib.h: 800: tamp = filter & 0x00000007;
 12843  000FDE  0E07               	movlw	7
 12844  000FE0  0100               	movlb	0	; () banked
 12845  000FE2  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12846  000FE4  0100               	movlb	0	; () banked
 12847  000FE6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12848  000FE8  0E00               	movlw	0
 12849  000FEA  0100               	movlb	0	; () banked
 12850  000FEC  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12851  000FEE  0100               	movlb	0	; () banked
 12852  000FF0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12853  000FF2  0E00               	movlw	0
 12854  000FF4  0100               	movlb	0	; () banked
 12855  000FF6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12856  000FF8  0100               	movlb	0	; () banked
 12857  000FFA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12858  000FFC  0E00               	movlw	0
 12859  000FFE  0100               	movlb	0	; () banked
 12860  001000  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12861  001002  0100               	movlb	0	; () banked
 12862  001004  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12863                           
 12864                           ; BSR set to: 0
 12865                           ;inc\CANlib.h: 801: tamp = tamp << 5;
 12866  001006  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12867  00100A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12868  00100E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12869  001012  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12870  001016  0E05               	movlw	5
 12871  001018                     u5935:
 12872  001018  90D8               	bcf	status,0,c
 12873  00101A  0100               	movlb	0	; () banked
 12874  00101C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12875  00101E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12876  001020  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12877  001022  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12878  001024  2EE8               	decfsz	wreg,f,c
 12879  001026  D7F8               	goto	u5935
 12880  001028  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12881  00102C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12882  001030  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12883  001034  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12884                           
 12885                           ; BSR set to: 0
 12886                           ;inc\CANlib.h: 802: RXF3SIDL = (unsigned char) tamp;
 12887  001038  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
 12888  00103C                     l5120:
 12889                           
 12890                           ; BSR set to: 0
 12891                           ;inc\CANlib.h: 803: }
 12892                           ;inc\CANlib.h: 805: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
 12893  00103C  0E04               	movlw	4
 12894  00103E  0100               	movlb	0	; () banked
 12895  001040  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12896  001042  A4D8               	btfss	status,2,c
 12897  001044  D058               	goto	l5138
 12898                           
 12899                           ; BSR set to: 0
 12900  001046  0100               	movlb	0	; () banked
 12901  001048  297B               	incf	CANSetFilter@type& (0+255),w,b
 12902  00104A  A4D8               	btfss	status,2,c
 12903  00104C  D054               	goto	l5138
 12904                           
 12905                           ; BSR set to: 0
 12906                           ;inc\CANlib.h: 806: {
 12907                           ;inc\CANlib.h: 807: RXF4SIDLbits.EXIDEN = 0x00;
 12908  00104E  010F               	movlb	15	; () banked
 12909  001050  9711               	bcf	17,3,b	;volatile
 12910                           
 12911                           ; BSR set to: 15
 12912                           ;inc\CANlib.h: 809: tamp = (filter >> 3);
 12913  001052  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12914  001056  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12915  00105A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12916  00105E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12917  001062  0E04               	movlw	4
 12918  001064  D006               	goto	u5960
 12919  001066                     u5965:
 12920  001066  0100               	movlb	0	; () banked
 12921  001068  90D8               	bcf	status,0,c
 12922  00106A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12923  00106C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12924  00106E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12925  001070  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12926  001072                     u5960:
 12927  001072  2EE8               	decfsz	wreg,f,c
 12928  001074  D7F8               	goto	u5965
 12929  001076  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12930  00107A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12931  00107E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12932  001082  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12933                           
 12934                           ; BSR set to: 0
 12935                           ;inc\CANlib.h: 810: tamp = tamp & 0x000000FF;
 12936  001086  0100               	movlb	0	; () banked
 12937  001088  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12938  00108A  0100               	movlb	0	; () banked
 12939  00108C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12940  00108E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12941  001090  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12942  001092  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12943                           
 12944                           ; BSR set to: 0
 12945                           ;inc\CANlib.h: 811: RXF4SIDH = (unsigned char) tamp;
 12946  001094  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;inc\CANlib.h: 813: tamp = filter & 0x00000007;
 12950  001098  0E07               	movlw	7
 12951  00109A  0100               	movlb	0	; () banked
 12952  00109C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12953  00109E  0100               	movlb	0	; () banked
 12954  0010A0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12955  0010A2  0E00               	movlw	0
 12956  0010A4  0100               	movlb	0	; () banked
 12957  0010A6  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12958  0010A8  0100               	movlb	0	; () banked
 12959  0010AA  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12960  0010AC  0E00               	movlw	0
 12961  0010AE  0100               	movlb	0	; () banked
 12962  0010B0  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12963  0010B2  0100               	movlb	0	; () banked
 12964  0010B4  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12965  0010B6  0E00               	movlw	0
 12966  0010B8  0100               	movlb	0	; () banked
 12967  0010BA  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12968  0010BC  0100               	movlb	0	; () banked
 12969  0010BE  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12970                           
 12971                           ; BSR set to: 0
 12972                           ;inc\CANlib.h: 814: tamp = tamp << 5;
 12973  0010C0  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12974  0010C4  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12975  0010C8  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12976  0010CC  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12977  0010D0  0E05               	movlw	5
 12978  0010D2                     u5975:
 12979  0010D2  90D8               	bcf	status,0,c
 12980  0010D4  0100               	movlb	0	; () banked
 12981  0010D6  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12982  0010D8  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12983  0010DA  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12984  0010DC  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12985  0010DE  2EE8               	decfsz	wreg,f,c
 12986  0010E0  D7F8               	goto	u5975
 12987  0010E2  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12988  0010E6  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12989  0010EA  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12990  0010EE  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12991                           
 12992                           ; BSR set to: 0
 12993                           ;inc\CANlib.h: 815: RXF4SIDL = (unsigned char) tamp;
 12994  0010F2  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 12995  0010F6                     l5138:
 12996                           
 12997                           ; BSR set to: 0
 12998                           ;inc\CANlib.h: 816: }
 12999                           ;inc\CANlib.h: 818: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 13000  0010F6  0E05               	movlw	5
 13001  0010F8  0100               	movlb	0	; () banked
 13002  0010FA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13003  0010FC  A4D8               	btfss	status,2,c
 13004  0010FE  D058               	goto	l5156
 13005                           
 13006                           ; BSR set to: 0
 13007  001100  0100               	movlb	0	; () banked
 13008  001102  297B               	incf	CANSetFilter@type& (0+255),w,b
 13009  001104  A4D8               	btfss	status,2,c
 13010  001106  D054               	goto	l5156
 13011                           
 13012                           ; BSR set to: 0
 13013                           ;inc\CANlib.h: 819: {
 13014                           ;inc\CANlib.h: 820: RXF5SIDLbits.EXIDEN = 0x00;
 13015  001108  010F               	movlb	15	; () banked
 13016  00110A  9715               	bcf	21,3,b	;volatile
 13017                           
 13018                           ; BSR set to: 15
 13019                           ;inc\CANlib.h: 822: tamp = (filter >> 3);
 13020  00110C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13021  001110  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13022  001114  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13023  001118  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13024  00111C  0E04               	movlw	4
 13025  00111E  D006               	goto	u6000
 13026  001120                     u6005:
 13027  001120  0100               	movlb	0	; () banked
 13028  001122  90D8               	bcf	status,0,c
 13029  001124  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13030  001126  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13031  001128  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13032  00112A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13033  00112C                     u6000:
 13034  00112C  2EE8               	decfsz	wreg,f,c
 13035  00112E  D7F8               	goto	u6005
 13036  001130  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13037  001134  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13038  001138  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13039  00113C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13040                           
 13041                           ; BSR set to: 0
 13042                           ;inc\CANlib.h: 823: tamp = tamp & 0x000000FF;
 13043  001140  0100               	movlb	0	; () banked
 13044  001142  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13045  001144  0100               	movlb	0	; () banked
 13046  001146  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13047  001148  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13048  00114A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13049  00114C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13050                           
 13051                           ; BSR set to: 0
 13052                           ;inc\CANlib.h: 824: RXF5SIDH = (unsigned char) tamp;
 13053  00114E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 13054                           
 13055                           ; BSR set to: 0
 13056                           ;inc\CANlib.h: 826: tamp = filter & 0x00000007;
 13057  001152  0E07               	movlw	7
 13058  001154  0100               	movlb	0	; () banked
 13059  001156  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13060  001158  0100               	movlb	0	; () banked
 13061  00115A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13062  00115C  0E00               	movlw	0
 13063  00115E  0100               	movlb	0	; () banked
 13064  001160  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13065  001162  0100               	movlb	0	; () banked
 13066  001164  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13067  001166  0E00               	movlw	0
 13068  001168  0100               	movlb	0	; () banked
 13069  00116A  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13070  00116C  0100               	movlb	0	; () banked
 13071  00116E  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13072  001170  0E00               	movlw	0
 13073  001172  0100               	movlb	0	; () banked
 13074  001174  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13075  001176  0100               	movlb	0	; () banked
 13076  001178  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13077                           
 13078                           ; BSR set to: 0
 13079                           ;inc\CANlib.h: 827: tamp = tamp << 5;
 13080  00117A  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13081  00117E  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13082  001182  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13083  001186  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13084  00118A  0E05               	movlw	5
 13085  00118C                     u6015:
 13086  00118C  90D8               	bcf	status,0,c
 13087  00118E  0100               	movlb	0	; () banked
 13088  001190  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 13089  001192  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 13090  001194  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 13091  001196  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 13092  001198  2EE8               	decfsz	wreg,f,c
 13093  00119A  D7F8               	goto	u6015
 13094  00119C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13095  0011A0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13096  0011A4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13097  0011A8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13098                           
 13099                           ; BSR set to: 0
 13100                           ;inc\CANlib.h: 828: RXF5SIDL = (unsigned char) tamp;
 13101  0011AC  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 13102  0011B0                     l5156:
 13103                           
 13104                           ; BSR set to: 0
 13105                           ;inc\CANlib.h: 829: }
 13106                           ;inc\CANlib.h: 832: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 13107  0011B0  0100               	movlb	0	; () banked
 13108  0011B2  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 13109  0011B4  0100               	movlb	0	; () banked
 13110  0011B6  A4D8               	btfss	status,2,c
 13111  0011B8  D089               	goto	l5190
 13112                           
 13113                           ; BSR set to: 0
 13114  0011BA  0EF7               	movlw	247
 13115  0011BC  0100               	movlb	0	; () banked
 13116  0011BE  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13117  0011C0  A4D8               	btfss	status,2,c
 13118  0011C2  D084               	goto	l5190
 13119                           
 13120                           ; BSR set to: 0
 13121                           ;inc\CANlib.h: 833: {
 13122                           ;inc\CANlib.h: 834: RXF0SIDLbits.EXIDEN = 0x01;
 13123  0011C4  010F               	movlb	15	; () banked
 13124  0011C6  8701               	bsf	1,3,b	;volatile
 13125                           
 13126                           ; BSR set to: 15
 13127                           ;inc\CANlib.h: 836: tamp = filter & 0x000000FF;
 13128  0011C8  0100               	movlb	0	; () banked
 13129  0011CA  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13130  0011CC  0100               	movlb	0	; () banked
 13131  0011CE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13132  0011D0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13133  0011D2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13134  0011D4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13135                           
 13136                           ; BSR set to: 0
 13137                           ;inc\CANlib.h: 837: RXF0EIDL = (unsigned char) tamp;
 13138  0011D6  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 13139                           
 13140                           ; BSR set to: 0
 13141                           ;inc\CANlib.h: 839: tamp = filter & 0x0000FF00;
 13142  0011DA  0E00               	movlw	0
 13143  0011DC  0100               	movlb	0	; () banked
 13144  0011DE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13145  0011E0  0100               	movlb	0	; () banked
 13146  0011E2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13147  0011E4  0EFF               	movlw	255
 13148  0011E6  0100               	movlb	0	; () banked
 13149  0011E8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13150  0011EA  0100               	movlb	0	; () banked
 13151  0011EC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13152  0011EE  0E00               	movlw	0
 13153  0011F0  0100               	movlb	0	; () banked
 13154  0011F2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13155  0011F4  0100               	movlb	0	; () banked
 13156  0011F6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13157  0011F8  0E00               	movlw	0
 13158  0011FA  0100               	movlb	0	; () banked
 13159  0011FC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13160  0011FE  0100               	movlb	0	; () banked
 13161  001200  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13162                           
 13163                           ; BSR set to: 0
 13164                           ;inc\CANlib.h: 840: tamp = tamp >> 8;
 13165  001202  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13166  001206  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13167  00120A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13168  00120E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13169  001212  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13170  001216  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13171  00121A  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13172  00121E  0100               	movlb	0	; () banked
 13173  001220  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13174  001222  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13175  001226  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13176  00122A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13177  00122E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13178                           
 13179                           ; BSR set to: 0
 13180                           ;inc\CANlib.h: 841: RXF0EIDH = (unsigned char) tamp;
 13181  001232  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 13182                           
 13183                           ; BSR set to: 0
 13184                           ;inc\CANlib.h: 843: if (filter & 0x00010000)
 13185  001236  0100               	movlb	0	; () banked
 13186  001238  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13187  00123A  D003               	goto	l463
 13188                           
 13189                           ; BSR set to: 0
 13190                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x01;
 13191  00123C  010F               	movlb	15	; () banked
 13192  00123E  8101               	bsf	1,0,b	;volatile
 13193  001240  D002               	goto	l464
 13194  001242                     l463:
 13195                           
 13196                           ; BSR set to: 0
 13197                           ;inc\CANlib.h: 845: else
 13198                           ;inc\CANlib.h: 846: RXF0SIDLbits.EID16 = 0x00;
 13199  001242  010F               	movlb	15	; () banked
 13200  001244  9101               	bcf	1,0,b	;volatile
 13201  001246                     l464:
 13202                           
 13203                           ; BSR set to: 15
 13204                           ;inc\CANlib.h: 848: if (filter & 0x00020000)
 13205  001246  0100               	movlb	0	; () banked
 13206  001248  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13207  00124A  D003               	goto	l465
 13208                           
 13209                           ; BSR set to: 0
 13210                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x01;
 13211  00124C  010F               	movlb	15	; () banked
 13212  00124E  8301               	bsf	1,1,b	;volatile
 13213  001250  D002               	goto	l466
 13214  001252                     l465:
 13215                           
 13216                           ; BSR set to: 0
 13217                           ;inc\CANlib.h: 850: else
 13218                           ;inc\CANlib.h: 851: RXF0SIDLbits.EID17 = 0x00;
 13219  001252  010F               	movlb	15	; () banked
 13220  001254  9301               	bcf	1,1,b	;volatile
 13221  001256                     l466:
 13222                           
 13223                           ; BSR set to: 15
 13224                           ;inc\CANlib.h: 853: if (filter & 0x00040000)
 13225  001256  0100               	movlb	0	; () banked
 13226  001258  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13227  00125A  D003               	goto	l467
 13228                           
 13229                           ; BSR set to: 0
 13230                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x01;
 13231  00125C  010F               	movlb	15	; () banked
 13232  00125E  8B01               	bsf	1,5,b	;volatile
 13233  001260  D002               	goto	l468
 13234  001262                     l467:
 13235                           
 13236                           ; BSR set to: 0
 13237                           ;inc\CANlib.h: 855: else
 13238                           ;inc\CANlib.h: 856: RXF0SIDLbits.SID0 = 0x00;
 13239  001262  010F               	movlb	15	; () banked
 13240  001264  9B01               	bcf	1,5,b	;volatile
 13241  001266                     l468:
 13242                           
 13243                           ; BSR set to: 15
 13244                           ;inc\CANlib.h: 858: if (filter & 0x00080000)
 13245  001266  0100               	movlb	0	; () banked
 13246  001268  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13247  00126A  D003               	goto	l469
 13248                           
 13249                           ; BSR set to: 0
 13250                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x01;
 13251  00126C  010F               	movlb	15	; () banked
 13252  00126E  8D01               	bsf	1,6,b	;volatile
 13253  001270  D002               	goto	l470
 13254  001272                     l469:
 13255                           
 13256                           ; BSR set to: 0
 13257                           ;inc\CANlib.h: 860: else
 13258                           ;inc\CANlib.h: 861: RXF0SIDLbits.SID1 = 0x00;
 13259  001272  010F               	movlb	15	; () banked
 13260  001274  9D01               	bcf	1,6,b	;volatile
 13261  001276                     l470:
 13262                           
 13263                           ; BSR set to: 15
 13264                           ;inc\CANlib.h: 863: if (filter & 0x00100000)
 13265  001276  0100               	movlb	0	; () banked
 13266  001278  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13267  00127A  D003               	goto	l471
 13268                           
 13269                           ; BSR set to: 0
 13270                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x01 ;
 13271  00127C  010F               	movlb	15	; () banked
 13272  00127E  8F01               	bsf	1,7,b	;volatile
 13273  001280  D002               	goto	l5184
 13274  001282                     l471:
 13275                           
 13276                           ; BSR set to: 0
 13277                           ;inc\CANlib.h: 865: else
 13278                           ;inc\CANlib.h: 866: RXF0SIDLbits.SID2 = 0x00 ;
 13279  001282  010F               	movlb	15	; () banked
 13280  001284  9F01               	bcf	1,7,b	;volatile
 13281  001286                     l5184:
 13282                           
 13283                           ; BSR set to: 15
 13284                           ;inc\CANlib.h: 868: tamp = (filter >> 21);
 13285  001286  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13286  00128A  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13287  00128E  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13288  001292  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13289  001296  0E16               	movlw	22
 13290  001298  D006               	goto	u6090
 13291  00129A                     u6095:
 13292  00129A  0100               	movlb	0	; () banked
 13293  00129C  90D8               	bcf	status,0,c
 13294  00129E  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13295  0012A0  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13296  0012A2  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13297  0012A4  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13298  0012A6                     u6090:
 13299  0012A6  2EE8               	decfsz	wreg,f,c
 13300  0012A8  D7F8               	goto	u6095
 13301  0012AA  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13302  0012AE  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13303  0012B2  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13304  0012B6  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13305                           
 13306                           ; BSR set to: 0
 13307                           ;inc\CANlib.h: 869: tamp = tamp & 0x000000FF;
 13308  0012BA  0100               	movlb	0	; () banked
 13309  0012BC  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13310  0012BE  0100               	movlb	0	; () banked
 13311  0012C0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13312  0012C2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13313  0012C4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13314  0012C6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13315                           
 13316                           ; BSR set to: 0
 13317                           ;inc\CANlib.h: 870: RXF0SIDH = (unsigned char) tamp;
 13318  0012C8  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 13319  0012CC                     l5190:
 13320                           
 13321                           ; BSR set to: 0
 13322                           ;inc\CANlib.h: 871: }
 13323                           ;inc\CANlib.h: 873: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 13324  0012CC  0100               	movlb	0	; () banked
 13325  0012CE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 13326  0012D0  A4D8               	btfss	status,2,c
 13327  0012D2  D089               	goto	l5224
 13328                           
 13329                           ; BSR set to: 0
 13330  0012D4  0EF7               	movlw	247
 13331  0012D6  0100               	movlb	0	; () banked
 13332  0012D8  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13333  0012DA  A4D8               	btfss	status,2,c
 13334  0012DC  D084               	goto	l5224
 13335                           
 13336                           ; BSR set to: 0
 13337                           ;inc\CANlib.h: 874: {
 13338                           ;inc\CANlib.h: 875: RXF1SIDLbits.EXIDEN = 0x01;
 13339  0012DE  010F               	movlb	15	; () banked
 13340  0012E0  8705               	bsf	5,3,b	;volatile
 13341                           
 13342                           ; BSR set to: 15
 13343                           ;inc\CANlib.h: 877: tamp = filter & 0x000000FF;
 13344  0012E2  0100               	movlb	0	; () banked
 13345  0012E4  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13346  0012E6  0100               	movlb	0	; () banked
 13347  0012E8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13348  0012EA  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13349  0012EC  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13350  0012EE  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13351                           
 13352                           ; BSR set to: 0
 13353                           ;inc\CANlib.h: 878: RXF1EIDL = (unsigned char) tamp;
 13354  0012F0  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 13355                           
 13356                           ; BSR set to: 0
 13357                           ;inc\CANlib.h: 880: tamp = filter & 0x0000FF00;
 13358  0012F4  0E00               	movlw	0
 13359  0012F6  0100               	movlb	0	; () banked
 13360  0012F8  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13361  0012FA  0100               	movlb	0	; () banked
 13362  0012FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13363  0012FE  0EFF               	movlw	255
 13364  001300  0100               	movlb	0	; () banked
 13365  001302  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13366  001304  0100               	movlb	0	; () banked
 13367  001306  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13368  001308  0E00               	movlw	0
 13369  00130A  0100               	movlb	0	; () banked
 13370  00130C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13371  00130E  0100               	movlb	0	; () banked
 13372  001310  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13373  001312  0E00               	movlw	0
 13374  001314  0100               	movlb	0	; () banked
 13375  001316  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13376  001318  0100               	movlb	0	; () banked
 13377  00131A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13378                           
 13379                           ; BSR set to: 0
 13380                           ;inc\CANlib.h: 881: tamp = tamp >> 8;
 13381  00131C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13382  001320  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13383  001324  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13384  001328  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13385  00132C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13386  001330  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13387  001334  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13388  001338  0100               	movlb	0	; () banked
 13389  00133A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13390  00133C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13391  001340  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13392  001344  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13393  001348  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13394                           
 13395                           ; BSR set to: 0
 13396                           ;inc\CANlib.h: 882: RXF1EIDH = (unsigned char) tamp;
 13397  00134C  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 13398                           
 13399                           ; BSR set to: 0
 13400                           ;inc\CANlib.h: 884: if (filter & 0x00010000)
 13401  001350  0100               	movlb	0	; () banked
 13402  001352  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13403  001354  D003               	goto	l474
 13404                           
 13405                           ; BSR set to: 0
 13406                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x01;
 13407  001356  010F               	movlb	15	; () banked
 13408  001358  8105               	bsf	5,0,b	;volatile
 13409  00135A  D002               	goto	l475
 13410  00135C                     l474:
 13411                           
 13412                           ; BSR set to: 0
 13413                           ;inc\CANlib.h: 886: else
 13414                           ;inc\CANlib.h: 887: RXF1SIDLbits.EID16 = 0x00;
 13415  00135C  010F               	movlb	15	; () banked
 13416  00135E  9105               	bcf	5,0,b	;volatile
 13417  001360                     l475:
 13418                           
 13419                           ; BSR set to: 15
 13420                           ;inc\CANlib.h: 889: if (filter & 0x00020000)
 13421  001360  0100               	movlb	0	; () banked
 13422  001362  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13423  001364  D003               	goto	l476
 13424                           
 13425                           ; BSR set to: 0
 13426                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x01;
 13427  001366  010F               	movlb	15	; () banked
 13428  001368  8305               	bsf	5,1,b	;volatile
 13429  00136A  D002               	goto	l477
 13430  00136C                     l476:
 13431                           
 13432                           ; BSR set to: 0
 13433                           ;inc\CANlib.h: 891: else
 13434                           ;inc\CANlib.h: 892: RXF1SIDLbits.EID17 = 0x00;
 13435  00136C  010F               	movlb	15	; () banked
 13436  00136E  9305               	bcf	5,1,b	;volatile
 13437  001370                     l477:
 13438                           
 13439                           ; BSR set to: 15
 13440                           ;inc\CANlib.h: 894: if (filter & 0x00040000)
 13441  001370  0100               	movlb	0	; () banked
 13442  001372  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13443  001374  D003               	goto	l478
 13444                           
 13445                           ; BSR set to: 0
 13446                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x01;
 13447  001376  010F               	movlb	15	; () banked
 13448  001378  8B05               	bsf	5,5,b	;volatile
 13449  00137A  D002               	goto	l479
 13450  00137C                     l478:
 13451                           
 13452                           ; BSR set to: 0
 13453                           ;inc\CANlib.h: 896: else
 13454                           ;inc\CANlib.h: 897: RXF1SIDLbits.SID0 = 0x00;
 13455  00137C  010F               	movlb	15	; () banked
 13456  00137E  9B05               	bcf	5,5,b	;volatile
 13457  001380                     l479:
 13458                           
 13459                           ; BSR set to: 15
 13460                           ;inc\CANlib.h: 899: if (filter & 0x00080000)
 13461  001380  0100               	movlb	0	; () banked
 13462  001382  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13463  001384  D003               	goto	l480
 13464                           
 13465                           ; BSR set to: 0
 13466                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x01;
 13467  001386  010F               	movlb	15	; () banked
 13468  001388  8D05               	bsf	5,6,b	;volatile
 13469  00138A  D002               	goto	l481
 13470  00138C                     l480:
 13471                           
 13472                           ; BSR set to: 0
 13473                           ;inc\CANlib.h: 901: else
 13474                           ;inc\CANlib.h: 902: RXF1SIDLbits.SID1 = 0x00;
 13475  00138C  010F               	movlb	15	; () banked
 13476  00138E  9D05               	bcf	5,6,b	;volatile
 13477  001390                     l481:
 13478                           
 13479                           ; BSR set to: 15
 13480                           ;inc\CANlib.h: 904: if (filter & 0x00100000)
 13481  001390  0100               	movlb	0	; () banked
 13482  001392  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13483  001394  D003               	goto	l482
 13484                           
 13485                           ; BSR set to: 0
 13486                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x01 ;
 13487  001396  010F               	movlb	15	; () banked
 13488  001398  8F05               	bsf	5,7,b	;volatile
 13489  00139A  D002               	goto	l5218
 13490  00139C                     l482:
 13491                           
 13492                           ; BSR set to: 0
 13493                           ;inc\CANlib.h: 906: else
 13494                           ;inc\CANlib.h: 907: RXF1SIDLbits.SID2 = 0x00 ;
 13495  00139C  010F               	movlb	15	; () banked
 13496  00139E  9F05               	bcf	5,7,b	;volatile
 13497  0013A0                     l5218:
 13498                           
 13499                           ; BSR set to: 15
 13500                           ;inc\CANlib.h: 909: tamp = (filter >> 21);
 13501  0013A0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13502  0013A4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13503  0013A8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13504  0013AC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13505  0013B0  0E16               	movlw	22
 13506  0013B2  D006               	goto	u6170
 13507  0013B4                     u6175:
 13508  0013B4  0100               	movlb	0	; () banked
 13509  0013B6  90D8               	bcf	status,0,c
 13510  0013B8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13511  0013BA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13512  0013BC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13513  0013BE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13514  0013C0                     u6170:
 13515  0013C0  2EE8               	decfsz	wreg,f,c
 13516  0013C2  D7F8               	goto	u6175
 13517  0013C4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13518  0013C8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13519  0013CC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13520  0013D0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13521                           
 13522                           ; BSR set to: 0
 13523                           ;inc\CANlib.h: 910: tamp = tamp & 0x000000FF;
 13524  0013D4  0100               	movlb	0	; () banked
 13525  0013D6  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13526  0013D8  0100               	movlb	0	; () banked
 13527  0013DA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13528  0013DC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13529  0013DE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13530  0013E0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13531                           
 13532                           ; BSR set to: 0
 13533                           ;inc\CANlib.h: 911: RXF1SIDH = (unsigned char) tamp;
 13534  0013E2  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 13535  0013E6                     l5224:
 13536                           
 13537                           ; BSR set to: 0
 13538                           ;inc\CANlib.h: 912: }
 13539                           ;inc\CANlib.h: 915: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 13540  0013E6  0E02               	movlw	2
 13541  0013E8  0100               	movlb	0	; () banked
 13542  0013EA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13543  0013EC  A4D8               	btfss	status,2,c
 13544  0013EE  D089               	goto	l5258
 13545                           
 13546                           ; BSR set to: 0
 13547  0013F0  0EF7               	movlw	247
 13548  0013F2  0100               	movlb	0	; () banked
 13549  0013F4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13550  0013F6  A4D8               	btfss	status,2,c
 13551  0013F8  D084               	goto	l5258
 13552                           
 13553                           ; BSR set to: 0
 13554                           ;inc\CANlib.h: 916: {
 13555                           ;inc\CANlib.h: 917: RXF2SIDLbits.EXIDEN = 0x01;
 13556  0013FA  010F               	movlb	15	; () banked
 13557  0013FC  8709               	bsf	9,3,b	;volatile
 13558                           
 13559                           ; BSR set to: 15
 13560                           ;inc\CANlib.h: 919: tamp = filter & 0x000000FF;
 13561  0013FE  0100               	movlb	0	; () banked
 13562  001400  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13563  001402  0100               	movlb	0	; () banked
 13564  001404  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13565  001406  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13566  001408  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13567  00140A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13568                           
 13569                           ; BSR set to: 0
 13570                           ;inc\CANlib.h: 920: RXF2EIDL = (unsigned char) tamp;
 13571  00140C  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 13572                           
 13573                           ; BSR set to: 0
 13574                           ;inc\CANlib.h: 922: tamp = filter & 0x0000FF00;
 13575  001410  0E00               	movlw	0
 13576  001412  0100               	movlb	0	; () banked
 13577  001414  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13578  001416  0100               	movlb	0	; () banked
 13579  001418  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13580  00141A  0EFF               	movlw	255
 13581  00141C  0100               	movlb	0	; () banked
 13582  00141E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13583  001420  0100               	movlb	0	; () banked
 13584  001422  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13585  001424  0E00               	movlw	0
 13586  001426  0100               	movlb	0	; () banked
 13587  001428  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13588  00142A  0100               	movlb	0	; () banked
 13589  00142C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13590  00142E  0E00               	movlw	0
 13591  001430  0100               	movlb	0	; () banked
 13592  001432  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13593  001434  0100               	movlb	0	; () banked
 13594  001436  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13595                           
 13596                           ; BSR set to: 0
 13597                           ;inc\CANlib.h: 923: tamp = tamp >> 8;
 13598  001438  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13599  00143C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13600  001440  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13601  001444  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13602  001448  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13603  00144C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13604  001450  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13605  001454  0100               	movlb	0	; () banked
 13606  001456  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13607  001458  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13608  00145C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13609  001460  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13610  001464  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13611                           
 13612                           ; BSR set to: 0
 13613                           ;inc\CANlib.h: 924: RXF2EIDH = (unsigned char) tamp;
 13614  001468  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 13615                           
 13616                           ; BSR set to: 0
 13617                           ;inc\CANlib.h: 926: if (filter & 0x00010000)
 13618  00146C  0100               	movlb	0	; () banked
 13619  00146E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13620  001470  D003               	goto	l485
 13621                           
 13622                           ; BSR set to: 0
 13623                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x01;
 13624  001472  010F               	movlb	15	; () banked
 13625  001474  8109               	bsf	9,0,b	;volatile
 13626  001476  D002               	goto	l486
 13627  001478                     l485:
 13628                           
 13629                           ; BSR set to: 0
 13630                           ;inc\CANlib.h: 928: else
 13631                           ;inc\CANlib.h: 929: RXF2SIDLbits.EID16 = 0x00;
 13632  001478  010F               	movlb	15	; () banked
 13633  00147A  9109               	bcf	9,0,b	;volatile
 13634  00147C                     l486:
 13635                           
 13636                           ; BSR set to: 15
 13637                           ;inc\CANlib.h: 931: if (filter & 0x00020000)
 13638  00147C  0100               	movlb	0	; () banked
 13639  00147E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13640  001480  D003               	goto	l487
 13641                           
 13642                           ; BSR set to: 0
 13643                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x01;
 13644  001482  010F               	movlb	15	; () banked
 13645  001484  8309               	bsf	9,1,b	;volatile
 13646  001486  D002               	goto	l488
 13647  001488                     l487:
 13648                           
 13649                           ; BSR set to: 0
 13650                           ;inc\CANlib.h: 933: else
 13651                           ;inc\CANlib.h: 934: RXF2SIDLbits.EID17 = 0x00;
 13652  001488  010F               	movlb	15	; () banked
 13653  00148A  9309               	bcf	9,1,b	;volatile
 13654  00148C                     l488:
 13655                           
 13656                           ; BSR set to: 15
 13657                           ;inc\CANlib.h: 936: if (filter & 0x00040000)
 13658  00148C  0100               	movlb	0	; () banked
 13659  00148E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13660  001490  D003               	goto	l489
 13661                           
 13662                           ; BSR set to: 0
 13663                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x01;
 13664  001492  010F               	movlb	15	; () banked
 13665  001494  8B09               	bsf	9,5,b	;volatile
 13666  001496  D002               	goto	l490
 13667  001498                     l489:
 13668                           
 13669                           ; BSR set to: 0
 13670                           ;inc\CANlib.h: 938: else
 13671                           ;inc\CANlib.h: 939: RXF2SIDLbits.SID0 = 0x00;
 13672  001498  010F               	movlb	15	; () banked
 13673  00149A  9B09               	bcf	9,5,b	;volatile
 13674  00149C                     l490:
 13675                           
 13676                           ; BSR set to: 15
 13677                           ;inc\CANlib.h: 941: if (filter & 0x00080000)
 13678  00149C  0100               	movlb	0	; () banked
 13679  00149E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13680  0014A0  D003               	goto	l491
 13681                           
 13682                           ; BSR set to: 0
 13683                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x01;
 13684  0014A2  010F               	movlb	15	; () banked
 13685  0014A4  8D09               	bsf	9,6,b	;volatile
 13686  0014A6  D002               	goto	l492
 13687  0014A8                     l491:
 13688                           
 13689                           ; BSR set to: 0
 13690                           ;inc\CANlib.h: 943: else
 13691                           ;inc\CANlib.h: 944: RXF2SIDLbits.SID1 = 0x00;
 13692  0014A8  010F               	movlb	15	; () banked
 13693  0014AA  9D09               	bcf	9,6,b	;volatile
 13694  0014AC                     l492:
 13695                           
 13696                           ; BSR set to: 15
 13697                           ;inc\CANlib.h: 946: if (filter & 0x00100000)
 13698  0014AC  0100               	movlb	0	; () banked
 13699  0014AE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13700  0014B0  D003               	goto	l493
 13701                           
 13702                           ; BSR set to: 0
 13703                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x01 ;
 13704  0014B2  010F               	movlb	15	; () banked
 13705  0014B4  8F09               	bsf	9,7,b	;volatile
 13706  0014B6  D002               	goto	l5252
 13707  0014B8                     l493:
 13708                           
 13709                           ; BSR set to: 0
 13710                           ;inc\CANlib.h: 948: else
 13711                           ;inc\CANlib.h: 949: RXF2SIDLbits.SID2 = 0x00 ;
 13712  0014B8  010F               	movlb	15	; () banked
 13713  0014BA  9F09               	bcf	9,7,b	;volatile
 13714  0014BC                     l5252:
 13715                           
 13716                           ; BSR set to: 15
 13717                           ;inc\CANlib.h: 951: tamp = (filter >> 21);
 13718  0014BC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13719  0014C0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13720  0014C4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13721  0014C8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13722  0014CC  0E16               	movlw	22
 13723  0014CE  D006               	goto	u6250
 13724  0014D0                     u6255:
 13725  0014D0  0100               	movlb	0	; () banked
 13726  0014D2  90D8               	bcf	status,0,c
 13727  0014D4  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13728  0014D6  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13729  0014D8  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13730  0014DA  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13731  0014DC                     u6250:
 13732  0014DC  2EE8               	decfsz	wreg,f,c
 13733  0014DE  D7F8               	goto	u6255
 13734  0014E0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13735  0014E4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13736  0014E8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13737  0014EC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13738                           
 13739                           ; BSR set to: 0
 13740                           ;inc\CANlib.h: 952: tamp = tamp & 0x000000FF;
 13741  0014F0  0100               	movlb	0	; () banked
 13742  0014F2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13743  0014F4  0100               	movlb	0	; () banked
 13744  0014F6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13745  0014F8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13746  0014FA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13747  0014FC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13748                           
 13749                           ; BSR set to: 0
 13750                           ;inc\CANlib.h: 953: RXF2SIDH = (unsigned char) tamp;
 13751  0014FE  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 13752  001502                     l5258:
 13753                           
 13754                           ; BSR set to: 0
 13755                           ;inc\CANlib.h: 954: }
 13756                           ;inc\CANlib.h: 956: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 13757  001502  0E03               	movlw	3
 13758  001504  0100               	movlb	0	; () banked
 13759  001506  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13760  001508  A4D8               	btfss	status,2,c
 13761  00150A  D089               	goto	l5292
 13762                           
 13763                           ; BSR set to: 0
 13764  00150C  0EF7               	movlw	247
 13765  00150E  0100               	movlb	0	; () banked
 13766  001510  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13767  001512  A4D8               	btfss	status,2,c
 13768  001514  D084               	goto	l5292
 13769                           
 13770                           ; BSR set to: 0
 13771                           ;inc\CANlib.h: 957: {
 13772                           ;inc\CANlib.h: 958: RXF3SIDLbits.EXIDEN = 0x01;
 13773  001516  010F               	movlb	15	; () banked
 13774  001518  870D               	bsf	13,3,b	;volatile
 13775                           
 13776                           ; BSR set to: 15
 13777                           ;inc\CANlib.h: 960: tamp = filter & 0x000000FF;
 13778  00151A  0100               	movlb	0	; () banked
 13779  00151C  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13780  00151E  0100               	movlb	0	; () banked
 13781  001520  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13782  001522  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13783  001524  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13784  001526  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13785                           
 13786                           ; BSR set to: 0
 13787                           ;inc\CANlib.h: 961: RXF3EIDL = (unsigned char) tamp;
 13788  001528  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 13789                           
 13790                           ; BSR set to: 0
 13791                           ;inc\CANlib.h: 963: tamp = filter & 0x0000FF00;
 13792  00152C  0E00               	movlw	0
 13793  00152E  0100               	movlb	0	; () banked
 13794  001530  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13795  001532  0100               	movlb	0	; () banked
 13796  001534  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13797  001536  0EFF               	movlw	255
 13798  001538  0100               	movlb	0	; () banked
 13799  00153A  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13800  00153C  0100               	movlb	0	; () banked
 13801  00153E  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13802  001540  0E00               	movlw	0
 13803  001542  0100               	movlb	0	; () banked
 13804  001544  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13805  001546  0100               	movlb	0	; () banked
 13806  001548  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13807  00154A  0E00               	movlw	0
 13808  00154C  0100               	movlb	0	; () banked
 13809  00154E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13810  001550  0100               	movlb	0	; () banked
 13811  001552  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13812                           
 13813                           ; BSR set to: 0
 13814                           ;inc\CANlib.h: 964: tamp = tamp >> 8;
 13815  001554  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13816  001558  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13817  00155C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13818  001560  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13819  001564  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13820  001568  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13821  00156C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13822  001570  0100               	movlb	0	; () banked
 13823  001572  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13824  001574  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13825  001578  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13826  00157C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13827  001580  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13828                           
 13829                           ; BSR set to: 0
 13830                           ;inc\CANlib.h: 965: RXF3EIDH = (unsigned char) tamp;
 13831  001584  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 13832                           
 13833                           ; BSR set to: 0
 13834                           ;inc\CANlib.h: 967: if (filter & 0x00010000)
 13835  001588  0100               	movlb	0	; () banked
 13836  00158A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13837  00158C  D003               	goto	l496
 13838                           
 13839                           ; BSR set to: 0
 13840                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x01;
 13841  00158E  010F               	movlb	15	; () banked
 13842  001590  810D               	bsf	13,0,b	;volatile
 13843  001592  D002               	goto	l497
 13844  001594                     l496:
 13845                           
 13846                           ; BSR set to: 0
 13847                           ;inc\CANlib.h: 969: else
 13848                           ;inc\CANlib.h: 970: RXF3SIDLbits.EID16 = 0x00;
 13849  001594  010F               	movlb	15	; () banked
 13850  001596  910D               	bcf	13,0,b	;volatile
 13851  001598                     l497:
 13852                           
 13853                           ; BSR set to: 15
 13854                           ;inc\CANlib.h: 972: if (filter & 0x00020000)
 13855  001598  0100               	movlb	0	; () banked
 13856  00159A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13857  00159C  D003               	goto	l498
 13858                           
 13859                           ; BSR set to: 0
 13860                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x01;
 13861  00159E  010F               	movlb	15	; () banked
 13862  0015A0  830D               	bsf	13,1,b	;volatile
 13863  0015A2  D002               	goto	l499
 13864  0015A4                     l498:
 13865                           
 13866                           ; BSR set to: 0
 13867                           ;inc\CANlib.h: 974: else
 13868                           ;inc\CANlib.h: 975: RXF3SIDLbits.EID17 = 0x00;
 13869  0015A4  010F               	movlb	15	; () banked
 13870  0015A6  930D               	bcf	13,1,b	;volatile
 13871  0015A8                     l499:
 13872                           
 13873                           ; BSR set to: 15
 13874                           ;inc\CANlib.h: 977: if (filter & 0x00040000)
 13875  0015A8  0100               	movlb	0	; () banked
 13876  0015AA  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13877  0015AC  D003               	goto	l500
 13878                           
 13879                           ; BSR set to: 0
 13880                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x01;
 13881  0015AE  010F               	movlb	15	; () banked
 13882  0015B0  8B0D               	bsf	13,5,b	;volatile
 13883  0015B2  D002               	goto	l501
 13884  0015B4                     l500:
 13885                           
 13886                           ; BSR set to: 0
 13887                           ;inc\CANlib.h: 979: else
 13888                           ;inc\CANlib.h: 980: RXF3SIDLbits.SID0 = 0x00;
 13889  0015B4  010F               	movlb	15	; () banked
 13890  0015B6  9B0D               	bcf	13,5,b	;volatile
 13891  0015B8                     l501:
 13892                           
 13893                           ; BSR set to: 15
 13894                           ;inc\CANlib.h: 982: if (filter & 0x00080000)
 13895  0015B8  0100               	movlb	0	; () banked
 13896  0015BA  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13897  0015BC  D003               	goto	l502
 13898                           
 13899                           ; BSR set to: 0
 13900                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x01;
 13901  0015BE  010F               	movlb	15	; () banked
 13902  0015C0  8D0D               	bsf	13,6,b	;volatile
 13903  0015C2  D002               	goto	l503
 13904  0015C4                     l502:
 13905                           
 13906                           ; BSR set to: 0
 13907                           ;inc\CANlib.h: 984: else
 13908                           ;inc\CANlib.h: 985: RXF3SIDLbits.SID1 = 0x00;
 13909  0015C4  010F               	movlb	15	; () banked
 13910  0015C6  9D0D               	bcf	13,6,b	;volatile
 13911  0015C8                     l503:
 13912                           
 13913                           ; BSR set to: 15
 13914                           ;inc\CANlib.h: 987: if (filter & 0x00100000)
 13915  0015C8  0100               	movlb	0	; () banked
 13916  0015CA  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13917  0015CC  D003               	goto	l504
 13918                           
 13919                           ; BSR set to: 0
 13920                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x01 ;
 13921  0015CE  010F               	movlb	15	; () banked
 13922  0015D0  8F0D               	bsf	13,7,b	;volatile
 13923  0015D2  D002               	goto	l5286
 13924  0015D4                     l504:
 13925                           
 13926                           ; BSR set to: 0
 13927                           ;inc\CANlib.h: 989: else
 13928                           ;inc\CANlib.h: 990: RXF3SIDLbits.SID2 = 0x00 ;
 13929  0015D4  010F               	movlb	15	; () banked
 13930  0015D6  9F0D               	bcf	13,7,b	;volatile
 13931  0015D8                     l5286:
 13932                           
 13933                           ; BSR set to: 15
 13934                           ;inc\CANlib.h: 992: tamp = (filter >> 21);
 13935  0015D8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13936  0015DC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13937  0015E0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13938  0015E4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13939  0015E8  0E16               	movlw	22
 13940  0015EA  D006               	goto	u6330
 13941  0015EC                     u6335:
 13942  0015EC  0100               	movlb	0	; () banked
 13943  0015EE  90D8               	bcf	status,0,c
 13944  0015F0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13945  0015F2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13946  0015F4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13947  0015F6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13948  0015F8                     u6330:
 13949  0015F8  2EE8               	decfsz	wreg,f,c
 13950  0015FA  D7F8               	goto	u6335
 13951  0015FC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13952  001600  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13953  001604  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13954  001608  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13955                           
 13956                           ; BSR set to: 0
 13957                           ;inc\CANlib.h: 993: tamp = tamp & 0x000000FF;
 13958  00160C  0100               	movlb	0	; () banked
 13959  00160E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13960  001610  0100               	movlb	0	; () banked
 13961  001612  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13962  001614  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13963  001616  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13964  001618  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13965                           
 13966                           ; BSR set to: 0
 13967                           ;inc\CANlib.h: 994: RXF3SIDH = (unsigned char) tamp;
 13968  00161A  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 13969  00161E                     l5292:
 13970                           
 13971                           ; BSR set to: 0
 13972                           ;inc\CANlib.h: 995: }
 13973                           ;inc\CANlib.h: 997: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 13974  00161E  0E04               	movlw	4
 13975  001620  0100               	movlb	0	; () banked
 13976  001622  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13977  001624  A4D8               	btfss	status,2,c
 13978  001626  D089               	goto	l5326
 13979                           
 13980                           ; BSR set to: 0
 13981  001628  0EF7               	movlw	247
 13982  00162A  0100               	movlb	0	; () banked
 13983  00162C  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13984  00162E  A4D8               	btfss	status,2,c
 13985  001630  D084               	goto	l5326
 13986                           
 13987                           ; BSR set to: 0
 13988                           ;inc\CANlib.h: 998: {
 13989                           ;inc\CANlib.h: 999: RXF4SIDLbits.EXIDEN = 0x01;
 13990  001632  010F               	movlb	15	; () banked
 13991  001634  8711               	bsf	17,3,b	;volatile
 13992                           
 13993                           ; BSR set to: 15
 13994                           ;inc\CANlib.h: 1001: tamp = filter & 0x000000FF;
 13995  001636  0100               	movlb	0	; () banked
 13996  001638  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13997  00163A  0100               	movlb	0	; () banked
 13998  00163C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13999  00163E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14000  001640  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14001  001642  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14002                           
 14003                           ; BSR set to: 0
 14004                           ;inc\CANlib.h: 1002: RXF4EIDL = (unsigned char) tamp;
 14005  001644  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 14006                           
 14007                           ; BSR set to: 0
 14008                           ;inc\CANlib.h: 1004: tamp = filter & 0x0000FF00;
 14009  001648  0E00               	movlw	0
 14010  00164A  0100               	movlb	0	; () banked
 14011  00164C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 14012  00164E  0100               	movlb	0	; () banked
 14013  001650  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14014  001652  0EFF               	movlw	255
 14015  001654  0100               	movlb	0	; () banked
 14016  001656  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14017  001658  0100               	movlb	0	; () banked
 14018  00165A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14019  00165C  0E00               	movlw	0
 14020  00165E  0100               	movlb	0	; () banked
 14021  001660  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14022  001662  0100               	movlb	0	; () banked
 14023  001664  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14024  001666  0E00               	movlw	0
 14025  001668  0100               	movlb	0	; () banked
 14026  00166A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14027  00166C  0100               	movlb	0	; () banked
 14028  00166E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14029                           
 14030                           ; BSR set to: 0
 14031                           ;inc\CANlib.h: 1005: tamp = tamp >> 8;
 14032  001670  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 14033  001674  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14034  001678  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14035  00167C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14036  001680  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 14037  001684  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14038  001688  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14039  00168C  0100               	movlb	0	; () banked
 14040  00168E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 14041  001690  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14042  001694  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14043  001698  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14044  00169C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14045                           
 14046                           ; BSR set to: 0
 14047                           ;inc\CANlib.h: 1006: RXF4EIDH = (unsigned char) tamp;
 14048  0016A0  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 14049                           
 14050                           ; BSR set to: 0
 14051                           ;inc\CANlib.h: 1008: if (filter & 0x00010000)
 14052  0016A4  0100               	movlb	0	; () banked
 14053  0016A6  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14054  0016A8  D003               	goto	l507
 14055                           
 14056                           ; BSR set to: 0
 14057                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x01;
 14058  0016AA  010F               	movlb	15	; () banked
 14059  0016AC  8111               	bsf	17,0,b	;volatile
 14060  0016AE  D002               	goto	l508
 14061  0016B0                     l507:
 14062                           
 14063                           ; BSR set to: 0
 14064                           ;inc\CANlib.h: 1010: else
 14065                           ;inc\CANlib.h: 1011: RXF4SIDLbits.EID16 = 0x00;
 14066  0016B0  010F               	movlb	15	; () banked
 14067  0016B2  9111               	bcf	17,0,b	;volatile
 14068  0016B4                     l508:
 14069                           
 14070                           ; BSR set to: 15
 14071                           ;inc\CANlib.h: 1013: if (filter & 0x00020000)
 14072  0016B4  0100               	movlb	0	; () banked
 14073  0016B6  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14074  0016B8  D003               	goto	l509
 14075                           
 14076                           ; BSR set to: 0
 14077                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x01;
 14078  0016BA  010F               	movlb	15	; () banked
 14079  0016BC  8311               	bsf	17,1,b	;volatile
 14080  0016BE  D002               	goto	l510
 14081  0016C0                     l509:
 14082                           
 14083                           ; BSR set to: 0
 14084                           ;inc\CANlib.h: 1015: else
 14085                           ;inc\CANlib.h: 1016: RXF4SIDLbits.EID17 = 0x00;
 14086  0016C0  010F               	movlb	15	; () banked
 14087  0016C2  9311               	bcf	17,1,b	;volatile
 14088  0016C4                     l510:
 14089                           
 14090                           ; BSR set to: 15
 14091                           ;inc\CANlib.h: 1018: if (filter & 0x00040000)
 14092  0016C4  0100               	movlb	0	; () banked
 14093  0016C6  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14094  0016C8  D003               	goto	l511
 14095                           
 14096                           ; BSR set to: 0
 14097                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x01;
 14098  0016CA  010F               	movlb	15	; () banked
 14099  0016CC  8B11               	bsf	17,5,b	;volatile
 14100  0016CE  D002               	goto	l512
 14101  0016D0                     l511:
 14102                           
 14103                           ; BSR set to: 0
 14104                           ;inc\CANlib.h: 1020: else
 14105                           ;inc\CANlib.h: 1021: RXF4SIDLbits.SID0 = 0x00;
 14106  0016D0  010F               	movlb	15	; () banked
 14107  0016D2  9B11               	bcf	17,5,b	;volatile
 14108  0016D4                     l512:
 14109                           
 14110                           ; BSR set to: 15
 14111                           ;inc\CANlib.h: 1023: if (filter & 0x00080000)
 14112  0016D4  0100               	movlb	0	; () banked
 14113  0016D6  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14114  0016D8  D003               	goto	l513
 14115                           
 14116                           ; BSR set to: 0
 14117                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x01;
 14118  0016DA  010F               	movlb	15	; () banked
 14119  0016DC  8D11               	bsf	17,6,b	;volatile
 14120  0016DE  D002               	goto	l514
 14121  0016E0                     l513:
 14122                           
 14123                           ; BSR set to: 0
 14124                           ;inc\CANlib.h: 1025: else
 14125                           ;inc\CANlib.h: 1026: RXF4SIDLbits.SID1 = 0x00;
 14126  0016E0  010F               	movlb	15	; () banked
 14127  0016E2  9D11               	bcf	17,6,b	;volatile
 14128  0016E4                     l514:
 14129                           
 14130                           ; BSR set to: 15
 14131                           ;inc\CANlib.h: 1028: if (filter & 0x00100000)
 14132  0016E4  0100               	movlb	0	; () banked
 14133  0016E6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14134  0016E8  D003               	goto	l515
 14135                           
 14136                           ; BSR set to: 0
 14137                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x01 ;
 14138  0016EA  010F               	movlb	15	; () banked
 14139  0016EC  8F11               	bsf	17,7,b	;volatile
 14140  0016EE  D002               	goto	l5320
 14141  0016F0                     l515:
 14142                           
 14143                           ; BSR set to: 0
 14144                           ;inc\CANlib.h: 1030: else
 14145                           ;inc\CANlib.h: 1031: RXF4SIDLbits.SID2 = 0x00 ;
 14146  0016F0  010F               	movlb	15	; () banked
 14147  0016F2  9F11               	bcf	17,7,b	;volatile
 14148  0016F4                     l5320:
 14149                           
 14150                           ; BSR set to: 15
 14151                           ;inc\CANlib.h: 1033: tamp = (filter >> 21);
 14152  0016F4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14153  0016F8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14154  0016FC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14155  001700  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14156  001704  0E16               	movlw	22
 14157  001706  D006               	goto	u6410
 14158  001708                     u6415:
 14159  001708  0100               	movlb	0	; () banked
 14160  00170A  90D8               	bcf	status,0,c
 14161  00170C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14162  00170E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14163  001710  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14164  001712  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14165  001714                     u6410:
 14166  001714  2EE8               	decfsz	wreg,f,c
 14167  001716  D7F8               	goto	u6415
 14168  001718  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14169  00171C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14170  001720  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14171  001724  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14172                           
 14173                           ; BSR set to: 0
 14174                           ;inc\CANlib.h: 1034: tamp = tamp & 0x000000FF;
 14175  001728  0100               	movlb	0	; () banked
 14176  00172A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14177  00172C  0100               	movlb	0	; () banked
 14178  00172E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14179  001730  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14180  001732  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14181  001734  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14182                           
 14183                           ; BSR set to: 0
 14184                           ;inc\CANlib.h: 1035: RXF4SIDH = (unsigned char) tamp;
 14185  001736  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 14186  00173A                     l5326:
 14187                           
 14188                           ; BSR set to: 0
 14189                           ;inc\CANlib.h: 1036: }
 14190                           ;inc\CANlib.h: 1038: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 14191  00173A  0E05               	movlw	5
 14192  00173C  0100               	movlb	0	; () banked
 14193  00173E  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 14194  001740  A4D8               	btfss	status,2,c
 14195  001742  0012               	return	
 14196                           
 14197                           ; BSR set to: 0
 14198  001744  0EF7               	movlw	247
 14199  001746  0100               	movlb	0	; () banked
 14200  001748  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 14201  00174A  A4D8               	btfss	status,2,c
 14202  00174C  0012               	return	
 14203                           
 14204                           ; BSR set to: 0
 14205                           ;inc\CANlib.h: 1039: {
 14206                           ;inc\CANlib.h: 1040: RXF5SIDLbits.EXIDEN = 0x01;
 14207  00174E  010F               	movlb	15	; () banked
 14208  001750  8715               	bsf	21,3,b	;volatile
 14209                           
 14210                           ; BSR set to: 15
 14211                           ;inc\CANlib.h: 1042: tamp = filter & 0x000000FF;
 14212  001752  0100               	movlb	0	; () banked
 14213  001754  5177               	movf	CANSetFilter@filter& (0+255),w,b
 14214  001756  0100               	movlb	0	; () banked
 14215  001758  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14216  00175A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14217  00175C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14218  00175E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14219                           
 14220                           ; BSR set to: 0
 14221                           ;inc\CANlib.h: 1043: RXF5EIDL = (unsigned char) tamp;
 14222  001760  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 14223                           
 14224                           ; BSR set to: 0
 14225                           ;inc\CANlib.h: 1045: tamp = filter & 0x0000FF00;
 14226  001764  0E00               	movlw	0
 14227  001766  0100               	movlb	0	; () banked
 14228  001768  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 14229  00176A  0100               	movlb	0	; () banked
 14230  00176C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14231  00176E  0EFF               	movlw	255
 14232  001770  0100               	movlb	0	; () banked
 14233  001772  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14234  001774  0100               	movlb	0	; () banked
 14235  001776  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14236  001778  0E00               	movlw	0
 14237  00177A  0100               	movlb	0	; () banked
 14238  00177C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14239  00177E  0100               	movlb	0	; () banked
 14240  001780  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14241  001782  0E00               	movlw	0
 14242  001784  0100               	movlb	0	; () banked
 14243  001786  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14244  001788  0100               	movlb	0	; () banked
 14245  00178A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14246                           
 14247                           ; BSR set to: 0
 14248                           ;inc\CANlib.h: 1046: tamp = tamp >> 8;
 14249  00178C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 14250  001790  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14251  001794  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14252  001798  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14253  00179C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 14254  0017A0  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14255  0017A4  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14256  0017A8  0100               	movlb	0	; () banked
 14257  0017AA  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 14258  0017AC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14259  0017B0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14260  0017B4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14261  0017B8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14262                           
 14263                           ; BSR set to: 0
 14264                           ;inc\CANlib.h: 1047: RXF5EIDH = (unsigned char) tamp;
 14265  0017BC  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 14266                           
 14267                           ; BSR set to: 0
 14268                           ;inc\CANlib.h: 1049: if (filter & 0x00010000)
 14269  0017C0  0100               	movlb	0	; () banked
 14270  0017C2  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14271  0017C4  D003               	goto	l518
 14272                           
 14273                           ; BSR set to: 0
 14274                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x01;
 14275  0017C6  010F               	movlb	15	; () banked
 14276  0017C8  8115               	bsf	21,0,b	;volatile
 14277  0017CA  D002               	goto	l519
 14278  0017CC                     l518:
 14279                           
 14280                           ; BSR set to: 0
 14281                           ;inc\CANlib.h: 1051: else
 14282                           ;inc\CANlib.h: 1052: RXF5SIDLbits.EID16 = 0x00;
 14283  0017CC  010F               	movlb	15	; () banked
 14284  0017CE  9115               	bcf	21,0,b	;volatile
 14285  0017D0                     l519:
 14286                           
 14287                           ; BSR set to: 15
 14288                           ;inc\CANlib.h: 1054: if (filter & 0x00020000)
 14289  0017D0  0100               	movlb	0	; () banked
 14290  0017D2  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14291  0017D4  D003               	goto	l520
 14292                           
 14293                           ; BSR set to: 0
 14294                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x01;
 14295  0017D6  010F               	movlb	15	; () banked
 14296  0017D8  8315               	bsf	21,1,b	;volatile
 14297  0017DA  D002               	goto	l521
 14298  0017DC                     l520:
 14299                           
 14300                           ; BSR set to: 0
 14301                           ;inc\CANlib.h: 1056: else
 14302                           ;inc\CANlib.h: 1057: RXF5SIDLbits.EID17 = 0x00;
 14303  0017DC  010F               	movlb	15	; () banked
 14304  0017DE  9315               	bcf	21,1,b	;volatile
 14305  0017E0                     l521:
 14306                           
 14307                           ; BSR set to: 15
 14308                           ;inc\CANlib.h: 1059: if (filter & 0x00040000)
 14309  0017E0  0100               	movlb	0	; () banked
 14310  0017E2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14311  0017E4  D003               	goto	l522
 14312                           
 14313                           ; BSR set to: 0
 14314                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x01;
 14315  0017E6  010F               	movlb	15	; () banked
 14316  0017E8  8B15               	bsf	21,5,b	;volatile
 14317  0017EA  D002               	goto	l523
 14318  0017EC                     l522:
 14319                           
 14320                           ; BSR set to: 0
 14321                           ;inc\CANlib.h: 1061: else
 14322                           ;inc\CANlib.h: 1062: RXF5SIDLbits.SID0 = 0x00;
 14323  0017EC  010F               	movlb	15	; () banked
 14324  0017EE  9B15               	bcf	21,5,b	;volatile
 14325  0017F0                     l523:
 14326                           
 14327                           ; BSR set to: 15
 14328                           ;inc\CANlib.h: 1064: if (filter & 0x00080000)
 14329  0017F0  0100               	movlb	0	; () banked
 14330  0017F2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14331  0017F4  D003               	goto	l524
 14332                           
 14333                           ; BSR set to: 0
 14334                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x01;
 14335  0017F6  010F               	movlb	15	; () banked
 14336  0017F8  8D15               	bsf	21,6,b	;volatile
 14337  0017FA  D002               	goto	l525
 14338  0017FC                     l524:
 14339                           
 14340                           ; BSR set to: 0
 14341                           ;inc\CANlib.h: 1066: else
 14342                           ;inc\CANlib.h: 1067: RXF5SIDLbits.SID1 = 0x00;
 14343  0017FC  010F               	movlb	15	; () banked
 14344  0017FE  9D15               	bcf	21,6,b	;volatile
 14345  001800                     l525:
 14346                           
 14347                           ; BSR set to: 15
 14348                           ;inc\CANlib.h: 1069: if (filter & 0x00100000)
 14349  001800  0100               	movlb	0	; () banked
 14350  001802  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14351  001804  D003               	goto	l526
 14352                           
 14353                           ; BSR set to: 0
 14354                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x01 ;
 14355  001806  010F               	movlb	15	; () banked
 14356  001808  8F15               	bsf	21,7,b	;volatile
 14357  00180A  D002               	goto	l5354
 14358  00180C                     l526:
 14359                           
 14360                           ; BSR set to: 0
 14361                           ;inc\CANlib.h: 1071: else
 14362                           ;inc\CANlib.h: 1072: RXF5SIDLbits.SID2 = 0x00 ;
 14363  00180C  010F               	movlb	15	; () banked
 14364  00180E  9F15               	bcf	21,7,b	;volatile
 14365  001810                     l5354:
 14366                           
 14367                           ; BSR set to: 15
 14368                           ;inc\CANlib.h: 1074: tamp = (filter >> 21);
 14369  001810  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14370  001814  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14371  001818  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14372  00181C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14373  001820  0E16               	movlw	22
 14374  001822  D006               	goto	u6490
 14375  001824                     u6495:
 14376  001824  0100               	movlb	0	; () banked
 14377  001826  90D8               	bcf	status,0,c
 14378  001828  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14379  00182A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14380  00182C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14381  00182E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14382  001830                     u6490:
 14383  001830  2EE8               	decfsz	wreg,f,c
 14384  001832  D7F8               	goto	u6495
 14385  001834  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14386  001838  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14387  00183C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14388  001840  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14389                           
 14390                           ; BSR set to: 0
 14391                           ;inc\CANlib.h: 1075: tamp = tamp & 0x000000FF;
 14392  001844  0100               	movlb	0	; () banked
 14393  001846  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14394  001848  0100               	movlb	0	; () banked
 14395  00184A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14396  00184C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14397  00184E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14398  001850  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14399                           
 14400                           ; BSR set to: 0
 14401                           ;inc\CANlib.h: 1076: RXF5SIDH = (unsigned char) tamp;
 14402  001852  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 14403  001856  0012               	return	
 14404  001858                     __end_of_CANSetFilter:
 14405                           	opt stack 0
 14406                           tblptru	equ	0xFF8
 14407                           tblptrh	equ	0xFF7
 14408                           tblptrl	equ	0xFF6
 14409                           tablat	equ	0xFF5
 14410                           prodh	equ	0xFF4
 14411                           prodl	equ	0xFF3
 14412                           intcon	equ	0xFF2
 14413                           intcon2	equ	0xFF1
 14414                           postinc0	equ	0xFEE
 14415                           wreg	equ	0xFE8
 14416                           postdec1	equ	0xFE5
 14417                           fsr1l	equ	0xFE1
 14418                           indf2	equ	0xFDF
 14419                           postinc2	equ	0xFDE
 14420                           postdec2	equ	0xFDD
 14421                           fsr2h	equ	0xFDA
 14422                           fsr2l	equ	0xFD9
 14423                           status	equ	0xFD8
 14424                           
 14425 ;; *************** function _CANOperationMode *****************
 14426 ;; Defined at:
 14427 ;;		line 207 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 14428 ;; Parameters:    Size  Location     Type
 14429 ;;  mode            1    wreg     enum E16307
 14430 ;; Auto vars:     Size  Location     Type
 14431 ;;  mode            1   23[BANK0 ] enum E16307
 14432 ;; Return value:  Size  Location     Type
 14433 ;;		None               void
 14434 ;; Registers used:
 14435 ;;		wreg, status,2, status,0
 14436 ;; Tracked objects:
 14437 ;;		On entry : 0/0
 14438 ;;		On exit  : 0/0
 14439 ;;		Unchanged: 0/0
 14440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14442 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14444 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14445 ;;Total ram usage:        1 bytes
 14446 ;; Hardware stack levels used:    1
 14447 ;; Hardware stack levels required when called:    4
 14448 ;; This function calls:
 14449 ;;		Nothing
 14450 ;; This function is called by:
 14451 ;;		_CANInitialize
 14452 ;; This function uses a non-reentrant model
 14453 ;;
 14454                           
 14455                           	psect	text34
 14456  005FC4                     __ptext34:
 14457                           	opt stack 0
 14458  005FC4                     _CANOperationMode:
 14459                           	opt stack 24
 14460                           
 14461                           ; BSR set to: 0
 14462                           ;incstack = 0
 14463                           ;CANOperationMode@mode stored from wreg
 14464  005FC4  0100               	movlb	0	; () banked
 14465  005FC6  6F77               	movwf	CANOperationMode@mode& (0+255),b
 14466                           
 14467                           ;inc\CANlib.h: 209: CANCON = mode;
 14468  005FC8  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 14469  005FCC                     l4950:
 14470  005FCC  506E               	movf	3950,w,c	;volatile
 14471  005FCE  0BE0               	andlw	224
 14472  005FD0  0100               	movlb	0	; () banked
 14473  005FD2  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 14474  005FD4  B4D8               	btfsc	status,2,c
 14475  005FD6  0012               	return	
 14476  005FD8  D7F9               	goto	l4950
 14477  005FDA                     __end_of_CANOperationMode:
 14478                           	opt stack 0
 14479                           tblptru	equ	0xFF8
 14480                           tblptrh	equ	0xFF7
 14481                           tblptrl	equ	0xFF6
 14482                           tablat	equ	0xFF5
 14483                           prodh	equ	0xFF4
 14484                           prodl	equ	0xFF3
 14485                           intcon	equ	0xFF2
 14486                           intcon2	equ	0xFF1
 14487                           postinc0	equ	0xFEE
 14488                           wreg	equ	0xFE8
 14489                           postdec1	equ	0xFE5
 14490                           fsr1l	equ	0xFE1
 14491                           indf2	equ	0xFDF
 14492                           postinc2	equ	0xFDE
 14493                           postdec2	equ	0xFDD
 14494                           fsr2h	equ	0xFDA
 14495                           fsr2l	equ	0xFD9
 14496                           status	equ	0xFD8
 14497                           
 14498 ;; *************** function _can_interpreter *****************
 14499 ;; Defined at:
 14500 ;;		line 432 in file "parcheggio.c"
 14501 ;; Parameters:    Size  Location     Type
 14502 ;;		None
 14503 ;; Auto vars:     Size  Location     Type
 14504 ;;		None
 14505 ;; Return value:  Size  Location     Type
 14506 ;;		None               void
 14507 ;; Registers used:
 14508 ;;		wreg, status,2, status,0
 14509 ;; Tracked objects:
 14510 ;;		On entry : 0/0
 14511 ;;		On exit  : 0/0
 14512 ;;		Unchanged: 0/0
 14513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14516 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14517 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14518 ;;Total ram usage:        4 bytes
 14519 ;; Hardware stack levels used:    1
 14520 ;; Hardware stack levels required when called:    4
 14521 ;; This function calls:
 14522 ;;		Nothing
 14523 ;; This function is called by:
 14524 ;;		_main
 14525 ;; This function uses a non-reentrant model
 14526 ;;
 14527                           
 14528                           	psect	text35
 14529  005D80                     __ptext35:
 14530                           	opt stack 0
 14531  005D80                     _can_interpreter:
 14532                           	opt stack 26
 14533                           
 14534                           ;parcheggio.c: 433: left_speed = data_speed_rx[1];
 14535                           
 14536                           ; BSR set to: 0
 14537                           ;incstack = 0
 14538  005D80  C109  F03C         	movff	_data_speed_rx+1,_left_speed
 14539  005D84  6A3D               	clrf	_left_speed+1,c
 14540                           
 14541                           ;parcheggio.c: 434: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 14542  005D86  503C               	movf	_left_speed,w,c
 14543  005D88  0100               	movlb	0	; () banked
 14544  005D8A  6F77               	movwf	??_can_interpreter& (0+255),b
 14545  005D8C  0101               	movlb	1	; () banked
 14546  005D8E  5108               	movf	_data_speed_rx& (0+255),w,b
 14547  005D90  6E3C               	movwf	_left_speed,c
 14548  005D92  C077  F03D         	movff	??_can_interpreter,_left_speed+1
 14549                           
 14550                           ; BSR set to: 1
 14551                           ;parcheggio.c: 435: right_speed = data_speed_rx[3];
 14552  005D96  C10B  F03E         	movff	_data_speed_rx+3,_right_speed
 14553  005D9A  6A3F               	clrf	_right_speed+1,c
 14554                           
 14555                           ;parcheggio.c: 436: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 14556  005D9C  503E               	movf	_right_speed,w,c
 14557  005D9E  0100               	movlb	0	; () banked
 14558  005DA0  6F77               	movwf	??_can_interpreter& (0+255),b
 14559  005DA2  0101               	movlb	1	; () banked
 14560  005DA4  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 14561  005DA6  6E3E               	movwf	_right_speed,c
 14562  005DA8  C077  F03F         	movff	??_can_interpreter,_right_speed+1
 14563                           
 14564                           ; BSR set to: 1
 14565                           ;parcheggio.c: 437: actual_speed = (right_speed + left_speed) / 2;
 14566  005DAC  503C               	movf	_left_speed,w,c
 14567  005DAE  243E               	addwf	_right_speed,w,c
 14568  005DB0  0100               	movlb	0	; () banked
 14569  005DB2  6F77               	movwf	??_can_interpreter& (0+255),b
 14570  005DB4  503D               	movf	_left_speed+1,w,c
 14571  005DB6  203F               	addwfc	_right_speed+1,w,c
 14572  005DB8  0100               	movlb	0	; () banked
 14573  005DBA  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 14574  005DBC  90D8               	bcf	status,0,c
 14575  005DBE  0100               	movlb	0	; () banked
 14576  005DC0  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 14577  005DC2  0100               	movlb	0	; () banked
 14578  005DC4  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 14579  005DC6  0100               	movlb	0	; () banked
 14580  005DC8  3177               	rrcf	??_can_interpreter& (0+255),w,b
 14581  005DCA  0101               	movlb	1	; () banked
 14582  005DCC  6F44               	movwf	_actual_speed& (0+255),b
 14583  005DCE  C079  F145         	movff	??_can_interpreter+2,_actual_speed+1
 14584                           
 14585                           ; BSR set to: 1
 14586  005DD2  0012               	return		;funcret
 14587  005DD4                     __end_of_can_interpreter:
 14588                           	opt stack 0
 14589                           tblptru	equ	0xFF8
 14590                           tblptrh	equ	0xFF7
 14591                           tblptrl	equ	0xFF6
 14592                           tablat	equ	0xFF5
 14593                           prodh	equ	0xFF4
 14594                           prodl	equ	0xFF3
 14595                           intcon	equ	0xFF2
 14596                           intcon2	equ	0xFF1
 14597                           postinc0	equ	0xFEE
 14598                           wreg	equ	0xFE8
 14599                           postdec1	equ	0xFE5
 14600                           fsr1l	equ	0xFE1
 14601                           indf2	equ	0xFDF
 14602                           postinc2	equ	0xFDE
 14603                           postdec2	equ	0xFDD
 14604                           fsr2h	equ	0xFDA
 14605                           fsr2l	equ	0xFD9
 14606                           status	equ	0xFD8
 14607                           
 14608 ;; *************** function _ISR_Bassa *****************
 14609 ;; Defined at:
 14610 ;;		line 110 in file "parcheggio.c"
 14611 ;; Parameters:    Size  Location     Type
 14612 ;;		None
 14613 ;; Auto vars:     Size  Location     Type
 14614 ;;  i               1   34[COMRAM] unsigned char 
 14615 ;;  gigi            1   33[COMRAM] unsigned char 
 14616 ;; Return value:  Size  Location     Type
 14617 ;;		None               void
 14618 ;; Registers used:
 14619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14620 ;; Tracked objects:
 14621 ;;		On entry : 0/0
 14622 ;;		On exit  : 0/0
 14623 ;;		Unchanged: 0/0
 14624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14626 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14627 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14628 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14629 ;;Total ram usage:       23 bytes
 14630 ;; Hardware stack levels used:    1
 14631 ;; Hardware stack levels required when called:    3
 14632 ;; This function calls:
 14633 ;;		_CANreceiveMessage
 14634 ;; This function is called by:
 14635 ;;		Interrupt level 1
 14636 ;; This function uses a non-reentrant model
 14637 ;;
 14638                           
 14639                           	psect	intcodelo
 14640  000018                     __pintcodelo:
 14641                           	opt stack 0
 14642  000018                     _ISR_Bassa:
 14643                           	opt stack 21
 14644                           
 14645                           ; BSR set to: 1
 14646                           ;incstack = 0
 14647  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14648  00001A  CFD8 F011          	movff	status,??_ISR_Bassa+4
 14649  00001E  CFE8 F012          	movff	wreg,??_ISR_Bassa+5
 14650  000022  CFE0 F013          	movff	bsr,??_ISR_Bassa+6
 14651  000026  CFFA F014          	movff	pclath,??_ISR_Bassa+7
 14652  00002A  CFFB F015          	movff	pclatu,??_ISR_Bassa+8
 14653  00002E  CFE9 F016          	movff	fsr0l,??_ISR_Bassa+9
 14654  000032  CFEA F017          	movff	fsr0h,??_ISR_Bassa+10
 14655  000036  CFE1 F018          	movff	fsr1l,??_ISR_Bassa+11
 14656  00003A  CFE2 F019          	movff	fsr1h,??_ISR_Bassa+12
 14657  00003E  CFD9 F01A          	movff	fsr2l,??_ISR_Bassa+13
 14658  000042  CFDA F01B          	movff	fsr2h,??_ISR_Bassa+14
 14659  000046  CFF3 F01C          	movff	prodl,??_ISR_Bassa+15
 14660  00004A  CFF4 F01D          	movff	prodh,??_ISR_Bassa+16
 14661  00004E  CFF6 F01E          	movff	tblptrl,??_ISR_Bassa+17
 14662  000052  CFF7 F01F          	movff	tblptrh,??_ISR_Bassa+18
 14663  000056  CFF8 F020          	movff	tblptru,??_ISR_Bassa+19
 14664  00005A  CFF5 F021          	movff	tablat,??_ISR_Bassa+20
 14665                           
 14666                           ;parcheggio.c: 112: if (INTCONbits.TMR0IF == 1) {
 14667  00005E  A4F2               	btfss	intcon,2,c	;volatile
 14668  000060  D036               	goto	i1l6108
 14669                           
 14670                           ;parcheggio.c: 113: INTCONbits.INT0IE = 0;
 14671  000062  98F2               	bcf	intcon,4,c	;volatile
 14672                           
 14673                           ;parcheggio.c: 114: T0CONbits.TMR0ON = 0;
 14674  000064  9ED5               	bcf	4053,7,c	;volatile
 14675                           
 14676                           ;parcheggio.c: 115: TMR0H = 0x34;
 14677  000066  0E34               	movlw	52
 14678  000068  6ED7               	movwf	4055,c	;volatile
 14679                           
 14680                           ;parcheggio.c: 116: TMR0L = 0xE0;
 14681  00006A  0EE0               	movlw	224
 14682  00006C  6ED6               	movwf	4054,c	;volatile
 14683                           
 14684                           ;parcheggio.c: 117: T0CONbits.TMR0ON = 1;
 14685  00006E  8ED5               	bsf	4053,7,c	;volatile
 14686                           
 14687                           ;parcheggio.c: 118: if (distance_error == 1) {
 14688  000070  A646               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14689  000072  D00C               	goto	i1l6078
 14690                           
 14691                           ;parcheggio.c: 119: sensor_distance[MUX_index] = 5000;
 14692  000074  5042               	movf	_MUX_index,w,c	;volatile
 14693  000076  0D02               	mullw	2
 14694  000078  0E24               	movlw	low _sensor_distance
 14695  00007A  24F3               	addwf	prodl,w,c
 14696  00007C  6ED9               	movwf	fsr2l,c
 14697  00007E  0E00               	movlw	high _sensor_distance
 14698  000080  20F4               	addwfc	prodh,w,c
 14699  000082  6EDA               	movwf	fsr2h,c
 14700  000084  0E88               	movlw	136
 14701  000086  6EDE               	movwf	postinc2,c
 14702  000088  0E13               	movlw	19
 14703  00008A  6EDD               	movwf	postdec2,c
 14704  00008C                     i1l6078:
 14705                           
 14706                           ;parcheggio.c: 120: }
 14707                           ;parcheggio.c: 121: MUX_index++;
 14708  00008C  2A42               	incf	_MUX_index,f,c	;volatile
 14709                           
 14710                           ;parcheggio.c: 122: if (MUX_index == 8) {
 14711  00008E  0E08               	movlw	8
 14712  000090  1842               	xorwf	_MUX_index,w,c	;volatile
 14713  000092  A4D8               	btfss	status,2,c
 14714  000094  D002               	goto	i1l695
 14715                           
 14716                           ;parcheggio.c: 123: MUX_index = 0;
 14717  000096  0E00               	movlw	0
 14718  000098  6E42               	movwf	_MUX_index,c	;volatile
 14719  00009A                     i1l695:
 14720                           
 14721                           ;parcheggio.c: 124: }
 14722                           ;parcheggio.c: 126: unsigned char gigi = 0;
 14723  00009A  0E00               	movlw	0
 14724  00009C  6E22               	movwf	ISR_Bassa@gigi,c
 14725                           
 14726                           ;parcheggio.c: 127: gigi = MUX_select[MUX_index];
 14727  00009E  5042               	movf	_MUX_index,w,c	;volatile
 14728  0000A0  0D01               	mullw	1
 14729  0000A2  0E00               	movlw	low _MUX_select
 14730  0000A4  24F3               	addwf	prodl,w,c
 14731  0000A6  6ED9               	movwf	fsr2l,c
 14732  0000A8  0E01               	movlw	high _MUX_select
 14733  0000AA  20F4               	addwfc	prodh,w,c
 14734  0000AC  6EDA               	movwf	fsr2h,c
 14735  0000AE  50DF               	movf	indf2,w,c
 14736  0000B0  6E22               	movwf	ISR_Bassa@gigi,c
 14737                           
 14738                           ;parcheggio.c: 128: PORTA = gigi;
 14739  0000B2  C022  FF80         	movff	ISR_Bassa@gigi,3968	;volatile
 14740                           
 14741                           ;parcheggio.c: 129: TRISBbits.RB0 = 0;
 14742  0000B6  9093               	bcf	3987,0,c	;volatile
 14743                           
 14744                           ;parcheggio.c: 130: LATBbits.LATB0 = 1;
 14745  0000B8  808A               	bsf	3978,0,c	;volatile
 14746                           
 14747                           ;parcheggio.c: 131: _delay((unsigned long)((15)*(16000000/4000000.0)));
 14748  0000BA  0E14               	movlw	20
 14749  0000BC                     i1u983_27:
 14750  0000BC  2EE8               	decfsz	wreg,f,c
 14751  0000BE  D7FE               	goto	i1u983_27
 14752                           
 14753                           ;parcheggio.c: 132: distance_error = 1;
 14754  0000C0  8646               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14755                           
 14756                           ;parcheggio.c: 133: LATBbits.LATB0 = 0;
 14757  0000C2  908A               	bcf	3978,0,c	;volatile
 14758                           
 14759                           ;parcheggio.c: 134: TRISBbits.RB0 = 1;
 14760  0000C4  8093               	bsf	3987,0,c	;volatile
 14761                           
 14762                           ;parcheggio.c: 135: INTCONbits.INT0IF = 0;
 14763  0000C6  92F2               	bcf	intcon,1,c	;volatile
 14764                           
 14765                           ;parcheggio.c: 136: INTCONbits.INT0IE = 1;
 14766  0000C8  88F2               	bsf	intcon,4,c	;volatile
 14767                           
 14768                           ;parcheggio.c: 137: INTCONbits.TMR0IF = 0;
 14769  0000CA  94F2               	bcf	intcon,2,c	;volatile
 14770                           
 14771                           ;parcheggio.c: 138: INTCON2bits.INTEDG0 = 1;
 14772  0000CC  8CF1               	bsf	intcon2,6,c	;volatile
 14773  0000CE                     i1l6108:
 14774                           
 14775                           ;parcheggio.c: 139: }
 14776                           ;parcheggio.c: 141: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 14777  0000CE  A0A4               	btfss	4004,0,c	;volatile
 14778  0000D0  B2A4               	btfsc	4004,1,c	;volatile
 14779  0000D2  D001               	goto	i1l6112
 14780  0000D4  D09B               	goto	i1l709
 14781  0000D6                     i1l6112:
 14782                           
 14783                           ;parcheggio.c: 142: CANreceiveMessage(&msg);
 14784  0000D6  0E4E               	movlw	low _msg
 14785  0000D8  6E01               	movwf	CANreceiveMessage@msg,c
 14786  0000DA  0E01               	movlw	high _msg
 14787  0000DC  6E02               	movwf	CANreceiveMessage@msg+1,c
 14788  0000DE  ECB7  F012         	call	_CANreceiveMessage	;wreg free
 14789                           
 14790                           ;parcheggio.c: 143: if (msg.identifier == 0b00000001101) {
 14791  0000E2  0E0D               	movlw	13
 14792  0000E4  0101               	movlb	1	; () banked
 14793  0000E6  194E               	xorwf	_msg& (0+255),w,b
 14794  0000E8  0101               	movlb	1	; () banked
 14795  0000EA  114F               	iorwf	(_msg+1)& (0+255),w,b
 14796  0000EC  0101               	movlb	1	; () banked
 14797  0000EE  1150               	iorwf	(_msg+2)& (0+255),w,b
 14798  0000F0  0101               	movlb	1	; () banked
 14799  0000F2  1151               	iorwf	(_msg+3)& (0+255),w,b
 14800  0000F4  B4D8               	btfsc	status,2,c
 14801                           
 14802                           ; BSR set to: 1
 14803                           ;parcheggio.c: 144: asd = 0;
 14804  0000F6  9246               	bcf	_asd/(0+8),_asd& (0+7),c	;volatile
 14805                           
 14806                           ; BSR set to: 1
 14807                           ;parcheggio.c: 145: }
 14808                           ;parcheggio.c: 146: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 14809                           
 14810                           ; BSR set to: 1
 14811  0000F8  0E07               	movlw	7
 14812  0000FA  0101               	movlb	1	; () banked
 14813  0000FC  194E               	xorwf	_msg& (0+255),w,b
 14814  0000FE  0101               	movlb	1	; () banked
 14815  000100  114F               	iorwf	(_msg+1)& (0+255),w,b
 14816  000102  0101               	movlb	1	; () banked
 14817  000104  1150               	iorwf	(_msg+2)& (0+255),w,b
 14818  000106  0101               	movlb	1	; () banked
 14819  000108  1151               	iorwf	(_msg+3)& (0+255),w,b
 14820  00010A  A4D8               	btfss	status,2,c
 14821  00010C  D02B               	goto	i1l6134
 14822                           
 14823                           ; BSR set to: 1
 14824  00010E  0101               	movlb	1	; () banked
 14825  000110  055C               	decf	(_msg+14)& (0+255),w,b
 14826  000112  B4D8               	btfsc	status,2,c
 14827  000114  D027               	goto	i1l6134
 14828                           
 14829                           ; BSR set to: 1
 14830                           ;parcheggio.c: 147: distance_average = 0;
 14831  000116  0E00               	movlw	0
 14832  000118  6E37               	movwf	_distance_average+1,c	;volatile
 14833  00011A  0E00               	movlw	0
 14834  00011C  6E36               	movwf	_distance_average,c	;volatile
 14835                           
 14836                           ; BSR set to: 1
 14837                           ;parcheggio.c: 148: distance_dx = msg.data[1];
 14838  00011E  C153  F038         	movff	_msg+5,_distance_dx	;volatile
 14839  000122  6A39               	clrf	_distance_dx+1,c	;volatile
 14840                           
 14841                           ;parcheggio.c: 149: distance_dx = ((distance_dx << 8) | msg.data[0]);
 14842  000124  5038               	movf	_distance_dx,w,c	;volatile
 14843  000126  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14844  000128  0101               	movlb	1	; () banked
 14845  00012A  5152               	movf	(_msg+4)& (0+255),w,b
 14846  00012C  6E38               	movwf	_distance_dx,c	;volatile
 14847  00012E  C00D  F039         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 14848                           
 14849                           ; BSR set to: 1
 14850                           ;parcheggio.c: 150: distance_sx = msg.data[3];
 14851  000132  C155  F03A         	movff	_msg+7,_distance_sx	;volatile
 14852  000136  6A3B               	clrf	_distance_sx+1,c	;volatile
 14853                           
 14854                           ;parcheggio.c: 151: distance_sx = ((distance_sx << 8) | msg.data[2]);
 14855  000138  503A               	movf	_distance_sx,w,c	;volatile
 14856  00013A  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14857  00013C  0101               	movlb	1	; () banked
 14858  00013E  5154               	movf	(_msg+6)& (0+255),w,b
 14859  000140  6E3A               	movwf	_distance_sx,c	;volatile
 14860  000142  C00D  F03B         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 14861                           
 14862                           ; BSR set to: 1
 14863                           ;parcheggio.c: 152: distance_average = (distance_sx + distance_dx) / 2;
 14864  000146  5038               	movf	_distance_dx,w,c	;volatile
 14865  000148  243A               	addwf	_distance_sx,w,c	;volatile
 14866  00014A  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14867  00014C  5039               	movf	_distance_dx+1,w,c	;volatile
 14868  00014E  203B               	addwfc	_distance_sx+1,w,c	;volatile
 14869  000150  6E0E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14870  000152  90D8               	bcf	status,0,c
 14871  000154  300E               	rrcf	??_ISR_Bassa+1,w,c
 14872  000156  6E0F               	movwf	(??_ISR_Bassa+2)& (0+255),c
 14873  000158  300D               	rrcf	??_ISR_Bassa,w,c
 14874  00015A  6E36               	movwf	_distance_average,c	;volatile
 14875  00015C  C00F  F037         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 14876                           
 14877                           ; BSR set to: 1
 14878                           ;parcheggio.c: 153: distance_received = 1;
 14879  000160  8846               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 14880                           
 14881                           ; BSR set to: 1
 14882                           ;parcheggio.c: 154: distance_received1 = 1;
 14883  000162  8A46               	bsf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
 14884  000164                     i1l6134:
 14885                           
 14886                           ; BSR set to: 1
 14887                           ;parcheggio.c: 155: }
 14888                           ;parcheggio.c: 156: if (msg.identifier == 0b00000001010) {
 14889  000164  0E0A               	movlw	10
 14890  000166  0101               	movlb	1	; () banked
 14891  000168  194E               	xorwf	_msg& (0+255),w,b
 14892  00016A  0101               	movlb	1	; () banked
 14893  00016C  114F               	iorwf	(_msg+1)& (0+255),w,b
 14894  00016E  0101               	movlb	1	; () banked
 14895  000170  1150               	iorwf	(_msg+2)& (0+255),w,b
 14896  000172  0101               	movlb	1	; () banked
 14897  000174  1151               	iorwf	(_msg+3)& (0+255),w,b
 14898  000176  A4D8               	btfss	status,2,c
 14899  000178  D00C               	goto	i1l6140
 14900                           
 14901                           ; BSR set to: 1
 14902                           ;parcheggio.c: 157: if (msg.data[0] == 1) {
 14903  00017A  0101               	movlb	1	; () banked
 14904  00017C  0552               	decf	(_msg+4)& (0+255),w,b
 14905  00017E  A4D8               	btfss	status,2,c
 14906  000180  D003               	goto	i1l702
 14907                           
 14908                           ; BSR set to: 1
 14909                           ;parcheggio.c: 158: activation = 1;
 14910  000182  8046               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 14911                           
 14912                           ;parcheggio.c: 159: PORTBbits.RB6 = 1;
 14913  000184  8C81               	bsf	3969,6,c	;volatile
 14914                           
 14915                           ;parcheggio.c: 160: } else {
 14916  000186  D005               	goto	i1l6140
 14917  000188                     i1l702:
 14918                           
 14919                           ; BSR set to: 1
 14920                           ;parcheggio.c: 161: activation = 0;
 14921  000188  9046               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 14922                           
 14923                           ;parcheggio.c: 162: PORTBbits.RB4 = 0;
 14924  00018A  9881               	bcf	3969,4,c	;volatile
 14925                           
 14926                           ;parcheggio.c: 163: PORTBbits.RB5 = 0;
 14927  00018C  9A81               	bcf	3969,5,c	;volatile
 14928                           
 14929                           ;parcheggio.c: 164: PORTBbits.RB6 = 0;
 14930  00018E  9C81               	bcf	3969,6,c	;volatile
 14931                           
 14932                           ;parcheggio.c: 165: request_sent = 0;
 14933  000190  9047               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
 14934  000192                     i1l6140:
 14935                           
 14936                           ; BSR set to: 1
 14937                           ;parcheggio.c: 166: }
 14938                           ;parcheggio.c: 167: }
 14939                           ;parcheggio.c: 168: if (msg.identifier == 0b00000001100) {
 14940  000192  0E0C               	movlw	12
 14941  000194  0101               	movlb	1	; () banked
 14942  000196  194E               	xorwf	_msg& (0+255),w,b
 14943  000198  0101               	movlb	1	; () banked
 14944  00019A  114F               	iorwf	(_msg+1)& (0+255),w,b
 14945  00019C  0101               	movlb	1	; () banked
 14946  00019E  1150               	iorwf	(_msg+2)& (0+255),w,b
 14947  0001A0  0101               	movlb	1	; () banked
 14948  0001A2  1151               	iorwf	(_msg+3)& (0+255),w,b
 14949  0001A4  B4D8               	btfsc	status,2,c
 14950                           
 14951                           ; BSR set to: 1
 14952                           ;parcheggio.c: 169: start_operation = 1;
 14953  0001A6  8447               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14954                           
 14955                           ; BSR set to: 1
 14956                           ;parcheggio.c: 170: }
 14957                           ;parcheggio.c: 171: if (msg.identifier == 0b00000000110) {
 14958                           
 14959                           ; BSR set to: 1
 14960  0001A8  0E06               	movlw	6
 14961  0001AA  0101               	movlb	1	; () banked
 14962  0001AC  194E               	xorwf	_msg& (0+255),w,b
 14963  0001AE  0101               	movlb	1	; () banked
 14964  0001B0  114F               	iorwf	(_msg+1)& (0+255),w,b
 14965  0001B2  0101               	movlb	1	; () banked
 14966  0001B4  1150               	iorwf	(_msg+2)& (0+255),w,b
 14967  0001B6  0101               	movlb	1	; () banked
 14968  0001B8  1151               	iorwf	(_msg+3)& (0+255),w,b
 14969  0001BA  A4D8               	btfss	status,2,c
 14970  0001BC  D025               	goto	i1l705
 14971                           
 14972                           ; BSR set to: 1
 14973                           ;parcheggio.c: 172: for (unsigned char i = 0; i < 8; i++) {
 14974  0001BE  0E00               	movlw	0
 14975  0001C0  6E23               	movwf	ISR_Bassa@i,c
 14976  0001C2                     i1l6148:
 14977                           
 14978                           ; BSR set to: 1
 14979  0001C2  0E07               	movlw	7
 14980  0001C4  6423               	cpfsgt	ISR_Bassa@i,c
 14981  0001C6  D001               	goto	i1l6152
 14982  0001C8  D014               	goto	i1l6158
 14983  0001CA                     i1l6152:
 14984                           
 14985                           ;parcheggio.c: 173: data_speed_rx[i] = msg.data[i];
 14986  0001CA  5023               	movf	ISR_Bassa@i,w,c
 14987  0001CC  0D01               	mullw	1
 14988  0001CE  0E52               	movlw	low (_msg+4)
 14989  0001D0  24F3               	addwf	prodl,w,c
 14990  0001D2  6ED9               	movwf	fsr2l,c
 14991  0001D4  0E01               	movlw	high (_msg+4)
 14992  0001D6  20F4               	addwfc	prodh,w,c
 14993  0001D8  6EDA               	movwf	fsr2h,c
 14994  0001DA  5023               	movf	ISR_Bassa@i,w,c
 14995  0001DC  0D01               	mullw	1
 14996  0001DE  0E08               	movlw	low _data_speed_rx
 14997  0001E0  24F3               	addwf	prodl,w,c
 14998  0001E2  6EE1               	movwf	fsr1l,c
 14999  0001E4  0E01               	movlw	high _data_speed_rx
 15000  0001E6  20F4               	addwfc	prodh,w,c
 15001  0001E8  6EE2               	movwf	fsr1h,c
 15002  0001EA  CFDF FFE7          	movff	indf2,indf1
 15003  0001EE  2A23               	incf	ISR_Bassa@i,f,c
 15004  0001F0  D7E8               	goto	i1l6148
 15005  0001F2                     i1l6158:
 15006                           
 15007                           ;parcheggio.c: 174: }
 15008                           ;parcheggio.c: 175: if (msg.identifier == 0b00000001101) {
 15009  0001F2  0E0D               	movlw	13
 15010  0001F4  0101               	movlb	1	; () banked
 15011  0001F6  194E               	xorwf	_msg& (0+255),w,b
 15012  0001F8  0101               	movlb	1	; () banked
 15013  0001FA  114F               	iorwf	(_msg+1)& (0+255),w,b
 15014  0001FC  0101               	movlb	1	; () banked
 15015  0001FE  1150               	iorwf	(_msg+2)& (0+255),w,b
 15016  000200  0101               	movlb	1	; () banked
 15017  000202  1151               	iorwf	(_msg+3)& (0+255),w,b
 15018  000204  B4D8               	btfsc	status,2,c
 15019                           
 15020                           ; BSR set to: 1
 15021                           ;parcheggio.c: 176: distance_wait = 0;
 15022  000206  9C46               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 15023  000208                     i1l705:
 15024                           
 15025                           ; BSR set to: 1
 15026                           ;parcheggio.c: 177: }
 15027                           ;parcheggio.c: 179: }
 15028                           ;parcheggio.c: 181: PIR3bits.RXB0IF = 0;
 15029  000208  90A4               	bcf	4004,0,c	;volatile
 15030                           
 15031                           ;parcheggio.c: 182: PIR3bits.RXB1IF = 0;
 15032  00020A  92A4               	bcf	4004,1,c	;volatile
 15033  00020C                     i1l709:
 15034  00020C  C021  FFF5         	movff	??_ISR_Bassa+20,tablat
 15035  000210  C020  FFF8         	movff	??_ISR_Bassa+19,tblptru
 15036  000214  C01F  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 15037  000218  C01E  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 15038  00021C  C01D  FFF4         	movff	??_ISR_Bassa+16,prodh
 15039  000220  C01C  FFF3         	movff	??_ISR_Bassa+15,prodl
 15040  000224  C01B  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 15041  000228  C01A  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 15042  00022C  C019  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 15043  000230  C018  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 15044  000234  C017  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 15045  000238  C016  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 15046  00023C  C015  FFFB         	movff	??_ISR_Bassa+8,pclatu
 15047  000240  C014  FFFA         	movff	??_ISR_Bassa+7,pclath
 15048  000244  C013  FFE0         	movff	??_ISR_Bassa+6,bsr
 15049  000248  C012  FFE8         	movff	??_ISR_Bassa+5,wreg
 15050  00024C  C011  FFD8         	movff	??_ISR_Bassa+4,status
 15051  000250  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 15052  000252  0010               	retfie	
 15053  000254                     __end_of_ISR_Bassa:
 15054                           	opt stack 0
 15055                           pclatu	equ	0xFFB
 15056                           pclath	equ	0xFFA
 15057                           tblptru	equ	0xFF8
 15058                           tblptrh	equ	0xFF7
 15059                           tblptrl	equ	0xFF6
 15060                           tablat	equ	0xFF5
 15061                           prodh	equ	0xFF4
 15062                           prodl	equ	0xFF3
 15063                           intcon	equ	0xFF2
 15064                           intcon2	equ	0xFF1
 15065                           postinc0	equ	0xFEE
 15066                           fsr0h	equ	0xFEA
 15067                           fsr0l	equ	0xFE9
 15068                           wreg	equ	0xFE8
 15069                           indf1	equ	0xFE7
 15070                           postdec1	equ	0xFE5
 15071                           fsr1h	equ	0xFE2
 15072                           fsr1l	equ	0xFE1
 15073                           bsr	equ	0xFE0
 15074                           indf2	equ	0xFDF
 15075                           postinc2	equ	0xFDE
 15076                           postdec2	equ	0xFDD
 15077                           fsr2h	equ	0xFDA
 15078                           fsr2l	equ	0xFD9
 15079                           status	equ	0xFD8
 15080                           
 15081 ;; *************** function _CANreceiveMessage *****************
 15082 ;; Defined at:
 15083 ;;		line 529 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 15084 ;; Parameters:    Size  Location     Type
 15085 ;;  msg             2    0[COMRAM] PTR struct .
 15086 ;;		 -> msg(15), 
 15087 ;; Auto vars:     Size  Location     Type
 15088 ;;  tamp            1   11[COMRAM] unsigned char 
 15089 ;;  error           1   10[COMRAM] unsigned char 
 15090 ;; Return value:  Size  Location     Type
 15091 ;;                  1    wreg      unsigned char 
 15092 ;; Registers used:
 15093 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15094 ;; Tracked objects:
 15095 ;;		On entry : 0/0
 15096 ;;		On exit  : 0/0
 15097 ;;		Unchanged: 0/0
 15098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15099 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15100 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15101 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15102 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15103 ;;Total ram usage:       12 bytes
 15104 ;; Hardware stack levels used:    1
 15105 ;; Hardware stack levels required when called:    2
 15106 ;; This function calls:
 15107 ;;		Nothing
 15108 ;; This function is called by:
 15109 ;;		_ISR_Bassa
 15110 ;; This function uses a non-reentrant model
 15111 ;;
 15112                           
 15113                           	psect	text37
 15114  00256E                     __ptext37:
 15115                           	opt stack 0
 15116  00256E                     _CANreceiveMessage:
 15117                           	opt stack 21
 15118                           
 15119                           ;inc\CANlib.h: 531: BYTE tamp;
 15120                           ;inc\CANlib.h: 532: BYTE error = 0;
 15121                           
 15122                           ;incstack = 0
 15123  00256E  0E00               	movlw	0
 15124  002570  6E0B               	movwf	CANreceiveMessage@error,c
 15125                           
 15126                           ;inc\CANlib.h: 534: if (COMSTATbits.RXB0OVFL == 0x01)
 15127  002572  BE74               	btfsc	3956,7,c	;volatile
 15128                           
 15129                           ;inc\CANlib.h: 535: error |= CAN_RX_BUFFER_1_OVFL;
 15130  002574  800B               	bsf	CANreceiveMessage@error,0,c
 15131                           
 15132                           ;inc\CANlib.h: 537: if (COMSTATbits.RXB1OVFL == 0x01)
 15133  002576  BC74               	btfsc	3956,6,c	;volatile
 15134                           
 15135                           ;inc\CANlib.h: 538: error |= CAN_RX_BUFFER_2_OVFL;
 15136  002578  820B               	bsf	CANreceiveMessage@error,1,c
 15137                           
 15138                           ;inc\CANlib.h: 541: if (RXB1CONbits.RXFUL ==0x01)
 15139  00257A  010F               	movlb	15	; () banked
 15140  00257C  AF50               	btfss	80,7,b	;volatile
 15141  00257E  D143               	goto	i1l410
 15142                           
 15143                           ; BSR set to: 15
 15144                           ;inc\CANlib.h: 542: {
 15145                           ;inc\CANlib.h: 543: msg->identifier = 0;
 15146  002580  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15147  002584  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15148  002588  6ADE               	clrf	postinc2,c
 15149  00258A  6ADE               	clrf	postinc2,c
 15150  00258C  6ADE               	clrf	postinc2,c
 15151  00258E  6ADD               	clrf	postdec2,c
 15152                           
 15153                           ; BSR set to: 15
 15154                           ;inc\CANlib.h: 544: msg->data[0] =RXB1D0;
 15155  002590  EE20 F004          	lfsr	2,4
 15156  002594  5001               	movf	CANreceiveMessage@msg,w,c
 15157  002596  26D9               	addwf	fsr2l,f,c
 15158  002598  5002               	movf	CANreceiveMessage@msg+1,w,c
 15159  00259A  22DA               	addwfc	fsr2h,f,c
 15160  00259C  CF56 FFDF          	movff	3926,indf2	;volatile
 15161                           
 15162                           ; BSR set to: 15
 15163                           ;inc\CANlib.h: 545: msg->data[1] =RXB1D1;
 15164  0025A0  EE20 F005          	lfsr	2,5
 15165  0025A4  5001               	movf	CANreceiveMessage@msg,w,c
 15166  0025A6  26D9               	addwf	fsr2l,f,c
 15167  0025A8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15168  0025AA  22DA               	addwfc	fsr2h,f,c
 15169  0025AC  CF57 FFDF          	movff	3927,indf2	;volatile
 15170                           
 15171                           ; BSR set to: 15
 15172                           ;inc\CANlib.h: 546: msg->data[2] =RXB1D2;
 15173  0025B0  EE20 F006          	lfsr	2,6
 15174  0025B4  5001               	movf	CANreceiveMessage@msg,w,c
 15175  0025B6  26D9               	addwf	fsr2l,f,c
 15176  0025B8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15177  0025BA  22DA               	addwfc	fsr2h,f,c
 15178  0025BC  CF58 FFDF          	movff	3928,indf2	;volatile
 15179                           
 15180                           ; BSR set to: 15
 15181                           ;inc\CANlib.h: 547: msg->data[3] =RXB1D3;
 15182  0025C0  EE20 F007          	lfsr	2,7
 15183  0025C4  5001               	movf	CANreceiveMessage@msg,w,c
 15184  0025C6  26D9               	addwf	fsr2l,f,c
 15185  0025C8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15186  0025CA  22DA               	addwfc	fsr2h,f,c
 15187  0025CC  CF59 FFDF          	movff	3929,indf2	;volatile
 15188                           
 15189                           ; BSR set to: 15
 15190                           ;inc\CANlib.h: 548: msg->data[4] =RXB1D4;
 15191  0025D0  EE20 F008          	lfsr	2,8
 15192  0025D4  5001               	movf	CANreceiveMessage@msg,w,c
 15193  0025D6  26D9               	addwf	fsr2l,f,c
 15194  0025D8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15195  0025DA  22DA               	addwfc	fsr2h,f,c
 15196  0025DC  CF5A FFDF          	movff	3930,indf2	;volatile
 15197                           
 15198                           ; BSR set to: 15
 15199                           ;inc\CANlib.h: 549: msg->data[5] =RXB1D5;
 15200  0025E0  EE20 F009          	lfsr	2,9
 15201  0025E4  5001               	movf	CANreceiveMessage@msg,w,c
 15202  0025E6  26D9               	addwf	fsr2l,f,c
 15203  0025E8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15204  0025EA  22DA               	addwfc	fsr2h,f,c
 15205  0025EC  CF5B FFDF          	movff	3931,indf2	;volatile
 15206                           
 15207                           ; BSR set to: 15
 15208                           ;inc\CANlib.h: 550: msg->data[6] =RXB1D6;
 15209  0025F0  EE20 F00A          	lfsr	2,10
 15210  0025F4  5001               	movf	CANreceiveMessage@msg,w,c
 15211  0025F6  26D9               	addwf	fsr2l,f,c
 15212  0025F8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15213  0025FA  22DA               	addwfc	fsr2h,f,c
 15214  0025FC  CF5C FFDF          	movff	3932,indf2	;volatile
 15215                           
 15216                           ; BSR set to: 15
 15217                           ;inc\CANlib.h: 551: msg->data[7] =RXB1D7;
 15218  002600  EE20 F00B          	lfsr	2,11
 15219  002604  5001               	movf	CANreceiveMessage@msg,w,c
 15220  002606  26D9               	addwf	fsr2l,f,c
 15221  002608  5002               	movf	CANreceiveMessage@msg+1,w,c
 15222  00260A  22DA               	addwfc	fsr2h,f,c
 15223  00260C  CF5D FFDF          	movff	3933,indf2	;volatile
 15224                           
 15225                           ; BSR set to: 15
 15226                           ;inc\CANlib.h: 553: msg->RTR = RXB1DLCbits.RXRTR;
 15227  002610  EE20 F00E          	lfsr	2,14
 15228  002614  5001               	movf	CANreceiveMessage@msg,w,c
 15229  002616  26D9               	addwf	fsr2l,f,c
 15230  002618  5002               	movf	CANreceiveMessage@msg+1,w,c
 15231  00261A  22DA               	addwfc	fsr2h,f,c
 15232  00261C  010F               	movlb	15	; () banked
 15233  00261E  AD55               	btfss	85,6,b	;volatile
 15234  002620  D002               	goto	i1u684_20
 15235  002622  0E01               	movlw	1
 15236  002624  D001               	goto	i1u684_26
 15237  002626                     i1u684_20:
 15238  002626  0E00               	movlw	0
 15239  002628                     i1u684_26:
 15240  002628  6EDF               	movwf	indf2,c
 15241                           
 15242                           ; BSR set to: 15
 15243                           ;inc\CANlib.h: 555: msg->length = RXB1DLC & 0x0F;
 15244  00262A  EE20 F00D          	lfsr	2,13
 15245  00262E  5001               	movf	CANreceiveMessage@msg,w,c
 15246  002630  26D9               	addwf	fsr2l,f,c
 15247  002632  5002               	movf	CANreceiveMessage@msg+1,w,c
 15248  002634  22DA               	addwfc	fsr2h,f,c
 15249  002636  010F               	movlb	15	; () banked
 15250  002638  5155               	movf	85,w,b	;volatile
 15251  00263A  0B0F               	andlw	15
 15252  00263C  6EDF               	movwf	indf2,c
 15253                           
 15254                           ; BSR set to: 15
 15255                           ;inc\CANlib.h: 557: msg->type = RXB1SIDLbits.EXID;
 15256  00263E  EE20 F00C          	lfsr	2,12
 15257  002642  5001               	movf	CANreceiveMessage@msg,w,c
 15258  002644  26D9               	addwf	fsr2l,f,c
 15259  002646  5002               	movf	CANreceiveMessage@msg+1,w,c
 15260  002648  22DA               	addwfc	fsr2h,f,c
 15261  00264A  010F               	movlb	15	; () banked
 15262  00264C  A752               	btfss	82,3,b	;volatile
 15263  00264E  D002               	goto	i1u685_20
 15264  002650  0E01               	movlw	1
 15265  002652  D001               	goto	i1u685_26
 15266  002654                     i1u685_20:
 15267  002654  0E00               	movlw	0
 15268  002656                     i1u685_26:
 15269  002656  6EDF               	movwf	indf2,c
 15270                           
 15271                           ; BSR set to: 15
 15272                           ;inc\CANlib.h: 559: if (RXB1SIDLbits.EXID == 0)
 15273  002658  010F               	movlb	15	; () banked
 15274  00265A  B752               	btfsc	82,3,b	;volatile
 15275  00265C  D044               	goto	i1l5682
 15276                           
 15277                           ; BSR set to: 15
 15278                           ;inc\CANlib.h: 560: {
 15279                           ;inc\CANlib.h: 561: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 15280  00265E  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 15281  002662  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15282  002664  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15283  002666  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15284  002668  0E03               	movlw	3
 15285  00266A                     i1u687_25:
 15286  00266A  90D8               	bcf	status,0,c
 15287  00266C  3603               	rlcf	??_CANreceiveMessage,f,c
 15288  00266E  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15289  002670  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15290  002672  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15291  002674  2EE8               	decfsz	wreg,f,c
 15292  002676  D7F9               	goto	i1u687_25
 15293  002678  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15294  00267C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15295  002680  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15296  002684  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15297  002688  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15298  00268C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15299                           
 15300                           ; BSR set to: 15
 15301                           ;inc\CANlib.h: 562: tamp = (RXB1SIDL >> 5 ) & 0x07;
 15302  002690  010F               	movlb	15	; () banked
 15303  002692  3952               	swapf	82,w,b	;volatile
 15304  002694  42E8               	rrncf	wreg,f,c
 15305  002696  0B07               	andlw	7
 15306  002698  0B07               	andlw	7
 15307  00269A  6E0C               	movwf	CANreceiveMessage@tamp,c
 15308                           
 15309                           ; BSR set to: 15
 15310                           ;inc\CANlib.h: 563: msg->identifier = msg->identifier + tamp;
 15311  00269C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15312  0026A0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15313  0026A4  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 15314  0026A8  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 15315  0026AC  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 15316  0026B0  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 15317  0026B4  500C               	movf	CANreceiveMessage@tamp,w,c
 15318  0026B6  2403               	addwf	??_CANreceiveMessage,w,c
 15319  0026B8  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 15320  0026BA  0E00               	movlw	0
 15321  0026BC  2004               	addwfc	??_CANreceiveMessage+1,w,c
 15322  0026BE  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 15323  0026C0  0E00               	movlw	0
 15324  0026C2  2005               	addwfc	??_CANreceiveMessage+2,w,c
 15325  0026C4  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 15326  0026C6  0E00               	movlw	0
 15327  0026C8  2006               	addwfc	??_CANreceiveMessage+3,w,c
 15328  0026CA  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 15329  0026CC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15330  0026D0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15331  0026D4  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 15332  0026D8  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 15333  0026DC  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 15334  0026E0  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 15335                           
 15336                           ;inc\CANlib.h: 564: }
 15337  0026E4  D08D               	goto	i1l5708
 15338  0026E6                     i1l5682:
 15339                           
 15340                           ; BSR set to: 15
 15341                           ;inc\CANlib.h: 565: else
 15342                           ;inc\CANlib.h: 566: {
 15343                           ;inc\CANlib.h: 567: msg->identifier = (unsigned long) RXB1EIDL;
 15344  0026E6  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
 15345  0026EA  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15346  0026EC  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15347  0026EE  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15348  0026F0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15349  0026F4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15350  0026F8  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15351  0026FC  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15352  002700  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15353  002704  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15354                           
 15355                           ; BSR set to: 15
 15356                           ;inc\CANlib.h: 568: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 15357  002708  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
 15358  00270C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15359  00270E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15360  002710  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15361  002712  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 15362  002716  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 15363  00271A  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 15364  00271E  6A03               	clrf	??_CANreceiveMessage,c
 15365  002720  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15366  002724  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15367  002728  5003               	movf	??_CANreceiveMessage,w,c
 15368  00272A  26DE               	addwf	postinc2,f,c
 15369  00272C  5004               	movf	??_CANreceiveMessage+1,w,c
 15370  00272E  22DE               	addwfc	postinc2,f,c
 15371  002730  5005               	movf	??_CANreceiveMessage+2,w,c
 15372  002732  22DE               	addwfc	postinc2,f,c
 15373  002734  5006               	movf	??_CANreceiveMessage+3,w,c
 15374  002736  22DE               	addwfc	postinc2,f,c
 15375                           
 15376                           ; BSR set to: 15
 15377                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID16)
 15378  002738  010F               	movlb	15	; () banked
 15379  00273A  A152               	btfss	82,0,b	;volatile
 15380  00273C  D00C               	goto	i1l5690
 15381                           
 15382                           ; BSR set to: 15
 15383                           ;inc\CANlib.h: 571: msg->identifier |= 0x00010000;
 15384  00273E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15385  002742  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15386  002746  0E00               	movlw	0
 15387  002748  12DE               	iorwf	postinc2,f,c
 15388  00274A  0E00               	movlw	0
 15389  00274C  12DE               	iorwf	postinc2,f,c
 15390  00274E  0E01               	movlw	1
 15391  002750  12DE               	iorwf	postinc2,f,c
 15392  002752  0E00               	movlw	0
 15393  002754  12DE               	iorwf	postinc2,f,c
 15394  002756                     i1l5690:
 15395                           
 15396                           ; BSR set to: 15
 15397                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.EID17)
 15398  002756  010F               	movlb	15	; () banked
 15399  002758  A352               	btfss	82,1,b	;volatile
 15400  00275A  D00C               	goto	i1l5694
 15401                           
 15402                           ; BSR set to: 15
 15403                           ;inc\CANlib.h: 573: msg->identifier |= 0x00020000;
 15404  00275C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15405  002760  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15406  002764  0E00               	movlw	0
 15407  002766  12DE               	iorwf	postinc2,f,c
 15408  002768  0E00               	movlw	0
 15409  00276A  12DE               	iorwf	postinc2,f,c
 15410  00276C  0E02               	movlw	2
 15411  00276E  12DE               	iorwf	postinc2,f,c
 15412  002770  0E00               	movlw	0
 15413  002772  12DE               	iorwf	postinc2,f,c
 15414  002774                     i1l5694:
 15415                           
 15416                           ; BSR set to: 15
 15417                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID0)
 15418  002774  010F               	movlb	15	; () banked
 15419  002776  AB52               	btfss	82,5,b	;volatile
 15420  002778  D00C               	goto	i1l5698
 15421                           
 15422                           ; BSR set to: 15
 15423                           ;inc\CANlib.h: 575: msg->identifier |= 0x00040000;
 15424  00277A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15425  00277E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15426  002782  0E00               	movlw	0
 15427  002784  12DE               	iorwf	postinc2,f,c
 15428  002786  0E00               	movlw	0
 15429  002788  12DE               	iorwf	postinc2,f,c
 15430  00278A  0E04               	movlw	4
 15431  00278C  12DE               	iorwf	postinc2,f,c
 15432  00278E  0E00               	movlw	0
 15433  002790  12DE               	iorwf	postinc2,f,c
 15434  002792                     i1l5698:
 15435                           
 15436                           ; BSR set to: 15
 15437                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID1)
 15438  002792  010F               	movlb	15	; () banked
 15439  002794  AD52               	btfss	82,6,b	;volatile
 15440  002796  D00C               	goto	i1l5702
 15441                           
 15442                           ; BSR set to: 15
 15443                           ;inc\CANlib.h: 577: msg->identifier |= 0x00080000;
 15444  002798  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15445  00279C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15446  0027A0  0E00               	movlw	0
 15447  0027A2  12DE               	iorwf	postinc2,f,c
 15448  0027A4  0E00               	movlw	0
 15449  0027A6  12DE               	iorwf	postinc2,f,c
 15450  0027A8  0E08               	movlw	8
 15451  0027AA  12DE               	iorwf	postinc2,f,c
 15452  0027AC  0E00               	movlw	0
 15453  0027AE  12DE               	iorwf	postinc2,f,c
 15454  0027B0                     i1l5702:
 15455                           
 15456                           ; BSR set to: 15
 15457                           ;inc\CANlib.h: 578: if (RXB1SIDLbits.SID2)
 15458  0027B0  010F               	movlb	15	; () banked
 15459  0027B2  AF52               	btfss	82,7,b	;volatile
 15460  0027B4  D00C               	goto	i1l5706
 15461                           
 15462                           ; BSR set to: 15
 15463                           ;inc\CANlib.h: 579: msg->identifier |= 0x00100000;
 15464  0027B6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15465  0027BA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15466  0027BE  0E00               	movlw	0
 15467  0027C0  12DE               	iorwf	postinc2,f,c
 15468  0027C2  0E00               	movlw	0
 15469  0027C4  12DE               	iorwf	postinc2,f,c
 15470  0027C6  0E10               	movlw	16
 15471  0027C8  12DE               	iorwf	postinc2,f,c
 15472  0027CA  0E00               	movlw	0
 15473  0027CC  12DE               	iorwf	postinc2,f,c
 15474  0027CE                     i1l5706:
 15475                           
 15476                           ; BSR set to: 15
 15477                           ;inc\CANlib.h: 581: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 15478  0027CE  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 15479  0027D2  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15480  0027D4  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15481  0027D6  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15482  0027D8  0E15               	movlw	21
 15483  0027DA                     i1u693_25:
 15484  0027DA  90D8               	bcf	status,0,c
 15485  0027DC  3603               	rlcf	??_CANreceiveMessage,f,c
 15486  0027DE  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15487  0027E0  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15488  0027E2  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15489  0027E4  2EE8               	decfsz	wreg,f,c
 15490  0027E6  D7F9               	goto	i1u693_25
 15491  0027E8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15492  0027EC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15493  0027F0  5003               	movf	??_CANreceiveMessage,w,c
 15494  0027F2  12DE               	iorwf	postinc2,f,c
 15495  0027F4  5004               	movf	??_CANreceiveMessage+1,w,c
 15496  0027F6  12DE               	iorwf	postinc2,f,c
 15497  0027F8  5005               	movf	??_CANreceiveMessage+2,w,c
 15498  0027FA  12DE               	iorwf	postinc2,f,c
 15499  0027FC  5006               	movf	??_CANreceiveMessage+3,w,c
 15500  0027FE  12DE               	iorwf	postinc2,f,c
 15501  002800                     i1l5708:
 15502                           
 15503                           ; BSR set to: 15
 15504                           ;inc\CANlib.h: 582: }
 15505                           ;inc\CANlib.h: 584: RXB1CONbits.RXFUL = 0x00;
 15506  002800  010F               	movlb	15	; () banked
 15507  002802  9F50               	bcf	80,7,b	;volatile
 15508                           
 15509                           ; BSR set to: 15
 15510                           ;inc\CANlib.h: 585: return (error);
 15511                           ;	Return value of _CANreceiveMessage is never used
 15512  002804  0012               	return	
 15513  002806                     i1l410:
 15514                           
 15515                           ; BSR set to: 15
 15516                           ;inc\CANlib.h: 586: }
 15517                           ;inc\CANlib.h: 588: if (RXB0CONbits.RXFUL ==0x01)
 15518  002806  AE60               	btfss	3936,7,c	;volatile
 15519  002808  0012               	return	
 15520                           
 15521                           ; BSR set to: 15
 15522                           ;inc\CANlib.h: 589: {
 15523                           ;inc\CANlib.h: 590: msg->identifier = 0;
 15524  00280A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15525  00280E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15526  002812  6ADE               	clrf	postinc2,c
 15527  002814  6ADE               	clrf	postinc2,c
 15528  002816  6ADE               	clrf	postinc2,c
 15529  002818  6ADD               	clrf	postdec2,c
 15530                           
 15531                           ; BSR set to: 15
 15532                           ;inc\CANlib.h: 591: msg->data[0] =RXB0D0;
 15533  00281A  EE20 F004          	lfsr	2,4
 15534  00281E  5001               	movf	CANreceiveMessage@msg,w,c
 15535  002820  26D9               	addwf	fsr2l,f,c
 15536  002822  5002               	movf	CANreceiveMessage@msg+1,w,c
 15537  002824  22DA               	addwfc	fsr2h,f,c
 15538  002826  CF66 FFDF          	movff	3942,indf2	;volatile
 15539                           
 15540                           ; BSR set to: 15
 15541                           ;inc\CANlib.h: 592: msg->data[1] =RXB0D1;
 15542  00282A  EE20 F005          	lfsr	2,5
 15543  00282E  5001               	movf	CANreceiveMessage@msg,w,c
 15544  002830  26D9               	addwf	fsr2l,f,c
 15545  002832  5002               	movf	CANreceiveMessage@msg+1,w,c
 15546  002834  22DA               	addwfc	fsr2h,f,c
 15547  002836  CF67 FFDF          	movff	3943,indf2	;volatile
 15548                           
 15549                           ; BSR set to: 15
 15550                           ;inc\CANlib.h: 593: msg->data[2] =RXB0D2;
 15551  00283A  EE20 F006          	lfsr	2,6
 15552  00283E  5001               	movf	CANreceiveMessage@msg,w,c
 15553  002840  26D9               	addwf	fsr2l,f,c
 15554  002842  5002               	movf	CANreceiveMessage@msg+1,w,c
 15555  002844  22DA               	addwfc	fsr2h,f,c
 15556  002846  CF68 FFDF          	movff	3944,indf2	;volatile
 15557                           
 15558                           ; BSR set to: 15
 15559                           ;inc\CANlib.h: 594: msg->data[3] =RXB0D3;
 15560  00284A  EE20 F007          	lfsr	2,7
 15561  00284E  5001               	movf	CANreceiveMessage@msg,w,c
 15562  002850  26D9               	addwf	fsr2l,f,c
 15563  002852  5002               	movf	CANreceiveMessage@msg+1,w,c
 15564  002854  22DA               	addwfc	fsr2h,f,c
 15565  002856  CF69 FFDF          	movff	3945,indf2	;volatile
 15566                           
 15567                           ; BSR set to: 15
 15568                           ;inc\CANlib.h: 595: msg->data[4] =RXB0D4;
 15569  00285A  EE20 F008          	lfsr	2,8
 15570  00285E  5001               	movf	CANreceiveMessage@msg,w,c
 15571  002860  26D9               	addwf	fsr2l,f,c
 15572  002862  5002               	movf	CANreceiveMessage@msg+1,w,c
 15573  002864  22DA               	addwfc	fsr2h,f,c
 15574  002866  CF6A FFDF          	movff	3946,indf2	;volatile
 15575                           
 15576                           ; BSR set to: 15
 15577                           ;inc\CANlib.h: 596: msg->data[5] =RXB0D5;
 15578  00286A  EE20 F009          	lfsr	2,9
 15579  00286E  5001               	movf	CANreceiveMessage@msg,w,c
 15580  002870  26D9               	addwf	fsr2l,f,c
 15581  002872  5002               	movf	CANreceiveMessage@msg+1,w,c
 15582  002874  22DA               	addwfc	fsr2h,f,c
 15583  002876  CF6B FFDF          	movff	3947,indf2	;volatile
 15584                           
 15585                           ; BSR set to: 15
 15586                           ;inc\CANlib.h: 597: msg->data[6] =RXB0D6;
 15587  00287A  EE20 F00A          	lfsr	2,10
 15588  00287E  5001               	movf	CANreceiveMessage@msg,w,c
 15589  002880  26D9               	addwf	fsr2l,f,c
 15590  002882  5002               	movf	CANreceiveMessage@msg+1,w,c
 15591  002884  22DA               	addwfc	fsr2h,f,c
 15592  002886  CF6C FFDF          	movff	3948,indf2	;volatile
 15593                           
 15594                           ; BSR set to: 15
 15595                           ;inc\CANlib.h: 598: msg->data[7] =RXB0D7;
 15596  00288A  EE20 F00B          	lfsr	2,11
 15597  00288E  5001               	movf	CANreceiveMessage@msg,w,c
 15598  002890  26D9               	addwf	fsr2l,f,c
 15599  002892  5002               	movf	CANreceiveMessage@msg+1,w,c
 15600  002894  22DA               	addwfc	fsr2h,f,c
 15601  002896  CF6D FFDF          	movff	3949,indf2	;volatile
 15602                           
 15603                           ; BSR set to: 15
 15604                           ;inc\CANlib.h: 600: msg->RTR = RXB0DLCbits.RXRTR;
 15605  00289A  EE20 F00E          	lfsr	2,14
 15606  00289E  5001               	movf	CANreceiveMessage@msg,w,c
 15607  0028A0  26D9               	addwf	fsr2l,f,c
 15608  0028A2  5002               	movf	CANreceiveMessage@msg+1,w,c
 15609  0028A4  22DA               	addwfc	fsr2h,f,c
 15610  0028A6  AC65               	btfss	3941,6,c	;volatile
 15611  0028A8  D002               	goto	i1u695_20
 15612  0028AA  0E01               	movlw	1
 15613  0028AC  D001               	goto	i1u695_26
 15614  0028AE                     i1u695_20:
 15615  0028AE  0E00               	movlw	0
 15616  0028B0                     i1u695_26:
 15617  0028B0  6EDF               	movwf	indf2,c
 15618                           
 15619                           ; BSR set to: 15
 15620                           ;inc\CANlib.h: 602: msg->length = RXB0DLC & 0x0F;
 15621  0028B2  EE20 F00D          	lfsr	2,13
 15622  0028B6  5001               	movf	CANreceiveMessage@msg,w,c
 15623  0028B8  26D9               	addwf	fsr2l,f,c
 15624  0028BA  5002               	movf	CANreceiveMessage@msg+1,w,c
 15625  0028BC  22DA               	addwfc	fsr2h,f,c
 15626  0028BE  5065               	movf	3941,w,c	;volatile
 15627  0028C0  0B0F               	andlw	15
 15628  0028C2  6EDF               	movwf	indf2,c
 15629                           
 15630                           ; BSR set to: 15
 15631                           ;inc\CANlib.h: 604: msg->type = RXB0SIDLbits.EXID;
 15632  0028C4  EE20 F00C          	lfsr	2,12
 15633  0028C8  5001               	movf	CANreceiveMessage@msg,w,c
 15634  0028CA  26D9               	addwf	fsr2l,f,c
 15635  0028CC  5002               	movf	CANreceiveMessage@msg+1,w,c
 15636  0028CE  22DA               	addwfc	fsr2h,f,c
 15637  0028D0  A662               	btfss	3938,3,c	;volatile
 15638  0028D2  D002               	goto	i1u696_20
 15639  0028D4  0E01               	movlw	1
 15640  0028D6  D001               	goto	i1u696_26
 15641  0028D8                     i1u696_20:
 15642  0028D8  0E00               	movlw	0
 15643  0028DA                     i1u696_26:
 15644  0028DA  6EDF               	movwf	indf2,c
 15645                           
 15646                           ; BSR set to: 15
 15647                           ;inc\CANlib.h: 606: if (RXB0SIDLbits.EXID == 0)
 15648  0028DC  B662               	btfsc	3938,3,c	;volatile
 15649  0028DE  D043               	goto	i1l5744
 15650                           
 15651                           ; BSR set to: 15
 15652                           ;inc\CANlib.h: 607: {
 15653                           ;inc\CANlib.h: 608: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 15654  0028E0  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15655  0028E4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15656  0028E6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15657  0028E8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15658  0028EA  0E03               	movlw	3
 15659  0028EC                     i1u698_25:
 15660  0028EC  90D8               	bcf	status,0,c
 15661  0028EE  3603               	rlcf	??_CANreceiveMessage,f,c
 15662  0028F0  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15663  0028F2  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15664  0028F4  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15665  0028F6  2EE8               	decfsz	wreg,f,c
 15666  0028F8  D7F9               	goto	i1u698_25
 15667  0028FA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15668  0028FE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15669  002902  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15670  002906  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15671  00290A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15672  00290E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15673                           
 15674                           ; BSR set to: 15
 15675                           ;inc\CANlib.h: 609: tamp = (RXB0SIDL >> 5 ) & 0x07;
 15676  002912  3862               	swapf	3938,w,c	;volatile
 15677  002914  42E8               	rrncf	wreg,f,c
 15678  002916  0B07               	andlw	7
 15679  002918  0B07               	andlw	7
 15680  00291A  6E0C               	movwf	CANreceiveMessage@tamp,c
 15681                           
 15682                           ; BSR set to: 15
 15683                           ;inc\CANlib.h: 610: msg->identifier = msg->identifier + tamp;
 15684  00291C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15685  002920  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15686  002924  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 15687  002928  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 15688  00292C  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 15689  002930  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 15690  002934  500C               	movf	CANreceiveMessage@tamp,w,c
 15691  002936  2403               	addwf	??_CANreceiveMessage,w,c
 15692  002938  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 15693  00293A  0E00               	movlw	0
 15694  00293C  2004               	addwfc	??_CANreceiveMessage+1,w,c
 15695  00293E  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 15696  002940  0E00               	movlw	0
 15697  002942  2005               	addwfc	??_CANreceiveMessage+2,w,c
 15698  002944  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 15699  002946  0E00               	movlw	0
 15700  002948  2006               	addwfc	??_CANreceiveMessage+3,w,c
 15701  00294A  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 15702  00294C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15703  002950  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15704  002954  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 15705  002958  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 15706  00295C  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 15707  002960  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 15708                           
 15709                           ;inc\CANlib.h: 611: }
 15710  002964  D088               	goto	i1l5770
 15711  002966                     i1l5744:
 15712                           
 15713                           ; BSR set to: 15
 15714                           ;inc\CANlib.h: 612: else
 15715                           ;inc\CANlib.h: 613: {
 15716                           ;inc\CANlib.h: 614: msg->identifier = (unsigned long) RXB0EIDL;
 15717  002966  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
 15718  00296A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15719  00296C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15720  00296E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15721  002970  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15722  002974  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15723  002978  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15724  00297C  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15725  002980  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15726  002984  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15727                           
 15728                           ; BSR set to: 15
 15729                           ;inc\CANlib.h: 615: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 15730  002988  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
 15731  00298C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15732  00298E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15733  002990  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15734  002992  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 15735  002996  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 15736  00299A  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 15737  00299E  6A03               	clrf	??_CANreceiveMessage,c
 15738  0029A0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15739  0029A4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15740  0029A8  5003               	movf	??_CANreceiveMessage,w,c
 15741  0029AA  26DE               	addwf	postinc2,f,c
 15742  0029AC  5004               	movf	??_CANreceiveMessage+1,w,c
 15743  0029AE  22DE               	addwfc	postinc2,f,c
 15744  0029B0  5005               	movf	??_CANreceiveMessage+2,w,c
 15745  0029B2  22DE               	addwfc	postinc2,f,c
 15746  0029B4  5006               	movf	??_CANreceiveMessage+3,w,c
 15747  0029B6  22DE               	addwfc	postinc2,f,c
 15748                           
 15749                           ; BSR set to: 15
 15750                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID16)
 15751  0029B8  A062               	btfss	3938,0,c	;volatile
 15752  0029BA  D00C               	goto	i1l5752
 15753                           
 15754                           ; BSR set to: 15
 15755                           ;inc\CANlib.h: 618: msg->identifier |= 0x00010000;
 15756  0029BC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15757  0029C0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15758  0029C4  0E00               	movlw	0
 15759  0029C6  12DE               	iorwf	postinc2,f,c
 15760  0029C8  0E00               	movlw	0
 15761  0029CA  12DE               	iorwf	postinc2,f,c
 15762  0029CC  0E01               	movlw	1
 15763  0029CE  12DE               	iorwf	postinc2,f,c
 15764  0029D0  0E00               	movlw	0
 15765  0029D2  12DE               	iorwf	postinc2,f,c
 15766  0029D4                     i1l5752:
 15767                           
 15768                           ; BSR set to: 15
 15769                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.EID17)
 15770  0029D4  A262               	btfss	3938,1,c	;volatile
 15771  0029D6  D00C               	goto	i1l5756
 15772                           
 15773                           ; BSR set to: 15
 15774                           ;inc\CANlib.h: 620: msg->identifier |= 0x00020000;
 15775  0029D8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15776  0029DC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15777  0029E0  0E00               	movlw	0
 15778  0029E2  12DE               	iorwf	postinc2,f,c
 15779  0029E4  0E00               	movlw	0
 15780  0029E6  12DE               	iorwf	postinc2,f,c
 15781  0029E8  0E02               	movlw	2
 15782  0029EA  12DE               	iorwf	postinc2,f,c
 15783  0029EC  0E00               	movlw	0
 15784  0029EE  12DE               	iorwf	postinc2,f,c
 15785  0029F0                     i1l5756:
 15786                           
 15787                           ; BSR set to: 15
 15788                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID0)
 15789  0029F0  AA62               	btfss	3938,5,c	;volatile
 15790  0029F2  D00C               	goto	i1l5760
 15791                           
 15792                           ; BSR set to: 15
 15793                           ;inc\CANlib.h: 622: msg->identifier |= 0x00040000;
 15794  0029F4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15795  0029F8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15796  0029FC  0E00               	movlw	0
 15797  0029FE  12DE               	iorwf	postinc2,f,c
 15798  002A00  0E00               	movlw	0
 15799  002A02  12DE               	iorwf	postinc2,f,c
 15800  002A04  0E04               	movlw	4
 15801  002A06  12DE               	iorwf	postinc2,f,c
 15802  002A08  0E00               	movlw	0
 15803  002A0A  12DE               	iorwf	postinc2,f,c
 15804  002A0C                     i1l5760:
 15805                           
 15806                           ; BSR set to: 15
 15807                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID1)
 15808  002A0C  AC62               	btfss	3938,6,c	;volatile
 15809  002A0E  D00C               	goto	i1l5764
 15810                           
 15811                           ; BSR set to: 15
 15812                           ;inc\CANlib.h: 624: msg->identifier |= 0x00080000;
 15813  002A10  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15814  002A14  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15815  002A18  0E00               	movlw	0
 15816  002A1A  12DE               	iorwf	postinc2,f,c
 15817  002A1C  0E00               	movlw	0
 15818  002A1E  12DE               	iorwf	postinc2,f,c
 15819  002A20  0E08               	movlw	8
 15820  002A22  12DE               	iorwf	postinc2,f,c
 15821  002A24  0E00               	movlw	0
 15822  002A26  12DE               	iorwf	postinc2,f,c
 15823  002A28                     i1l5764:
 15824                           
 15825                           ; BSR set to: 15
 15826                           ;inc\CANlib.h: 625: if (RXB0SIDLbits.SID2)
 15827  002A28  AE62               	btfss	3938,7,c	;volatile
 15828  002A2A  D00C               	goto	i1l5768
 15829                           
 15830                           ; BSR set to: 15
 15831                           ;inc\CANlib.h: 626: msg->identifier |= 0x00100000;
 15832  002A2C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15833  002A30  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15834  002A34  0E00               	movlw	0
 15835  002A36  12DE               	iorwf	postinc2,f,c
 15836  002A38  0E00               	movlw	0
 15837  002A3A  12DE               	iorwf	postinc2,f,c
 15838  002A3C  0E10               	movlw	16
 15839  002A3E  12DE               	iorwf	postinc2,f,c
 15840  002A40  0E00               	movlw	0
 15841  002A42  12DE               	iorwf	postinc2,f,c
 15842  002A44                     i1l5768:
 15843                           
 15844                           ; BSR set to: 15
 15845                           ;inc\CANlib.h: 628: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 15846  002A44  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15847  002A48  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15848  002A4A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15849  002A4C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15850  002A4E  0E15               	movlw	21
 15851  002A50                     i1u704_25:
 15852  002A50  90D8               	bcf	status,0,c
 15853  002A52  3603               	rlcf	??_CANreceiveMessage,f,c
 15854  002A54  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15855  002A56  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15856  002A58  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15857  002A5A  2EE8               	decfsz	wreg,f,c
 15858  002A5C  D7F9               	goto	i1u704_25
 15859  002A5E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15860  002A62  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15861  002A66  5003               	movf	??_CANreceiveMessage,w,c
 15862  002A68  12DE               	iorwf	postinc2,f,c
 15863  002A6A  5004               	movf	??_CANreceiveMessage+1,w,c
 15864  002A6C  12DE               	iorwf	postinc2,f,c
 15865  002A6E  5005               	movf	??_CANreceiveMessage+2,w,c
 15866  002A70  12DE               	iorwf	postinc2,f,c
 15867  002A72  5006               	movf	??_CANreceiveMessage+3,w,c
 15868  002A74  12DE               	iorwf	postinc2,f,c
 15869  002A76                     i1l5770:
 15870                           
 15871                           ; BSR set to: 15
 15872                           ;inc\CANlib.h: 630: }
 15873                           ;inc\CANlib.h: 631: RXB0CONbits.RXFUL = 0x00;
 15874  002A76  9E60               	bcf	3936,7,c	;volatile
 15875                           
 15876                           ; BSR set to: 15
 15877                           ;inc\CANlib.h: 633: return (error);
 15878                           ;	Return value of _CANreceiveMessage is never used
 15879  002A78  0012               	return	
 15880  002A7A                     __end_of_CANreceiveMessage:
 15881                           	opt stack 0
 15882                           pclatu	equ	0xFFB
 15883                           pclath	equ	0xFFA
 15884                           tblptru	equ	0xFF8
 15885                           tblptrh	equ	0xFF7
 15886                           tblptrl	equ	0xFF6
 15887                           tablat	equ	0xFF5
 15888                           prodh	equ	0xFF4
 15889                           prodl	equ	0xFF3
 15890                           intcon	equ	0xFF2
 15891                           intcon2	equ	0xFF1
 15892                           postinc0	equ	0xFEE
 15893                           fsr0h	equ	0xFEA
 15894                           fsr0l	equ	0xFE9
 15895                           wreg	equ	0xFE8
 15896                           indf1	equ	0xFE7
 15897                           postdec1	equ	0xFE5
 15898                           fsr1h	equ	0xFE2
 15899                           fsr1l	equ	0xFE1
 15900                           bsr	equ	0xFE0
 15901                           indf2	equ	0xFDF
 15902                           postinc2	equ	0xFDE
 15903                           postdec2	equ	0xFDD
 15904                           fsr2h	equ	0xFDA
 15905                           fsr2l	equ	0xFD9
 15906                           status	equ	0xFD8
 15907                           
 15908 ;; *************** function _ISR_Alta *****************
 15909 ;; Defined at:
 15910 ;;		line 92 in file "parcheggio.c"
 15911 ;; Parameters:    Size  Location     Type
 15912 ;;		None
 15913 ;; Auto vars:     Size  Location     Type
 15914 ;;		None
 15915 ;; Return value:  Size  Location     Type
 15916 ;;		None               void
 15917 ;; Registers used:
 15918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15919 ;; Tracked objects:
 15920 ;;		On entry : 0/0
 15921 ;;		On exit  : 0/0
 15922 ;;		Unchanged: 0/0
 15923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15926 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15927 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15928 ;;Total ram usage:       16 bytes
 15929 ;; Hardware stack levels used:    1
 15930 ;; Hardware stack levels required when called:    1
 15931 ;; This function calls:
 15932 ;;		___lwdiv
 15933 ;; This function is called by:
 15934 ;;		Interrupt level 2
 15935 ;; This function uses a non-reentrant model
 15936 ;;
 15937                           
 15938                           	psect	intcode
 15939  000008                     __pintcode:
 15940                           	opt stack 0
 15941  000008                     _ISR_Alta:
 15942                           	opt stack 21
 15943                           
 15944                           ; BSR set to: 15
 15945                           ;incstack = 0
 15946  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15947  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 15948  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 15949  000012  EF03  F02D         	goto	int_func
 15950                           pclatu	equ	0xFFB
 15951                           pclath	equ	0xFFA
 15952                           tblptru	equ	0xFF8
 15953                           tblptrh	equ	0xFF7
 15954                           tblptrl	equ	0xFF6
 15955                           tablat	equ	0xFF5
 15956                           prodh	equ	0xFF4
 15957                           prodl	equ	0xFF3
 15958                           intcon	equ	0xFF2
 15959                           intcon2	equ	0xFF1
 15960                           postinc0	equ	0xFEE
 15961                           fsr0h	equ	0xFEA
 15962                           fsr0l	equ	0xFE9
 15963                           wreg	equ	0xFE8
 15964                           indf1	equ	0xFE7
 15965                           postdec1	equ	0xFE5
 15966                           fsr1h	equ	0xFE2
 15967                           fsr1l	equ	0xFE1
 15968                           bsr	equ	0xFE0
 15969                           indf2	equ	0xFDF
 15970                           postinc2	equ	0xFDE
 15971                           postdec2	equ	0xFDD
 15972                           fsr2h	equ	0xFDA
 15973                           fsr2l	equ	0xFD9
 15974                           status	equ	0xFD8
 15975                           
 15976                           	psect	intcode_body
 15977  005A06                     __pintcode_body:
 15978                           	opt stack 21
 15979  005A06                     int_func:
 15980                           	opt stack 21
 15981  005A06  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 15982  005A0A  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 15983  005A0E  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 15984  005A12  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 15985  005A16  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 15986  005A1A  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 15987  005A1E  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 15988  005A22  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 15989  005A26  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 15990  005A2A  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 15991  005A2E  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 15992  005A32  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 15993                           
 15994                           ;parcheggio.c: 93: if (INTCON2bits.INTEDG0 == 1) {
 15995  005A36  ACF1               	btfss	intcon2,6,c	;volatile
 15996  005A38  D007               	goto	i2l688
 15997                           
 15998                           ;parcheggio.c: 94: INTCON2bits.INTEDG0 = 0;
 15999  005A3A  9CF1               	bcf	intcon2,6,c	;volatile
 16000                           
 16001                           ;parcheggio.c: 95: TMR3H = 0;
 16002  005A3C  0E00               	movlw	0
 16003  005A3E  6EB3               	movwf	4019,c	;volatile
 16004                           
 16005                           ;parcheggio.c: 96: TMR3L = 0;
 16006  005A40  0E00               	movlw	0
 16007  005A42  6EB2               	movwf	4018,c	;volatile
 16008                           
 16009                           ;parcheggio.c: 97: distance_error = 0;
 16010  005A44  9646               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 16011                           
 16012                           ;parcheggio.c: 98: } else {
 16013  005A46  D031               	goto	i2l7722
 16014  005A48                     i2l688:
 16015                           
 16016                           ;parcheggio.c: 99: gianni = TMR3H;
 16017  005A48  CFB3 F044          	movff	4019,_gianni	;volatile
 16018                           
 16019                           ;parcheggio.c: 100: asus = TMR3L;
 16020  005A4C  CFB2 F043          	movff	4018,_asus	;volatile
 16021                           
 16022                           ;parcheggio.c: 101: timerValue2 = gianni;
 16023  005A50  C044  F040         	movff	_gianni,_timerValue2	;volatile
 16024  005A54  6A41               	clrf	_timerValue2+1,c	;volatile
 16025                           
 16026                           ;parcheggio.c: 102: timerValue2 = ((timerValue2 << 8) | (asus));
 16027  005A56  5040               	movf	_timerValue2,w,c	;volatile
 16028  005A58  0100               	movlb	0	; () banked
 16029  005A5A  6F67               	movwf	??_ISR_Alta& (0+255),b
 16030  005A5C  5043               	movf	_asus,w,c	;volatile
 16031  005A5E  6E40               	movwf	_timerValue2,c	;volatile
 16032  005A60  C067  F041         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 16033                           
 16034                           ; BSR set to: 0
 16035                           ;parcheggio.c: 103: pulse_time = timerValue2 / 2;
 16036  005A64  90D8               	bcf	status,0,c
 16037  005A66  3041               	rrcf	_timerValue2+1,w,c	;volatile
 16038  005A68  0100               	movlb	0	; () banked
 16039  005A6A  6F67               	movwf	??_ISR_Alta& (0+255),b
 16040  005A6C  3040               	rrcf	_timerValue2,w,c	;volatile
 16041  005A6E  0101               	movlb	1	; () banked
 16042  005A70  6F4A               	movwf	_pulse_time& (0+255),b	;volatile
 16043  005A72  C067  F14B         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 16044                           
 16045                           ; BSR set to: 1
 16046                           ;parcheggio.c: 104: sensor_distance[MUX_index] = pulse_time / 58;
 16047  005A76  C14A  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 16048  005A7A  C14B  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 16049  005A7E  0E00               	movlw	0
 16050  005A80  0100               	movlb	0	; () banked
 16051  005A82  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 16052  005A84  0E3A               	movlw	58
 16053  005A86  6F62               	movwf	___lwdiv@divisor& (0+255),b
 16054  005A88  EC1D  F02E         	call	___lwdiv	;wreg free
 16055  005A8C  5042               	movf	_MUX_index,w,c	;volatile
 16056  005A8E  0D02               	mullw	2
 16057  005A90  0E24               	movlw	low _sensor_distance
 16058  005A92  24F3               	addwf	prodl,w,c
 16059  005A94  6ED9               	movwf	fsr2l,c
 16060  005A96  0E00               	movlw	high _sensor_distance
 16061  005A98  20F4               	addwfc	prodh,w,c
 16062  005A9A  6EDA               	movwf	fsr2h,c
 16063  005A9C  0100               	movlb	0	; () banked
 16064  005A9E  C060  FFDE         	movff	?___lwdiv,postinc2
 16065  005AA2  0100               	movlb	0	; () banked
 16066  005AA4  C061  FFDD         	movff	?___lwdiv+1,postdec2
 16067                           
 16068                           ; BSR set to: 0
 16069                           ;parcheggio.c: 105: INTCON2bits.INTEDG0 = 1;
 16070  005AA8  8CF1               	bsf	intcon2,6,c	;volatile
 16071  005AAA                     i2l7722:
 16072                           
 16073                           ;parcheggio.c: 106: }
 16074                           ;parcheggio.c: 107: INTCONbits.INT0IF = 0;
 16075  005AAA  92F2               	bcf	intcon,1,c	;volatile
 16076  005AAC  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 16077  005AB0  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 16078  005AB4  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 16079  005AB8  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 16080  005ABC  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 16081  005AC0  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 16082  005AC4  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 16083  005AC8  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 16084  005ACC  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 16085  005AD0  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 16086  005AD4  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 16087  005AD8  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 16088  005ADC  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 16089  005AE0  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 16090  005AE4  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 16091  005AE6  0011               	retfie		f
 16092  005AE8                     __end_of_ISR_Alta:
 16093                           	opt stack 0
 16094                           pclatu	equ	0xFFB
 16095                           pclath	equ	0xFFA
 16096                           tblptru	equ	0xFF8
 16097                           tblptrh	equ	0xFF7
 16098                           tblptrl	equ	0xFF6
 16099                           tablat	equ	0xFF5
 16100                           prodh	equ	0xFF4
 16101                           prodl	equ	0xFF3
 16102                           intcon	equ	0xFF2
 16103                           intcon2	equ	0xFF1
 16104                           postinc0	equ	0xFEE
 16105                           fsr0h	equ	0xFEA
 16106                           fsr0l	equ	0xFE9
 16107                           wreg	equ	0xFE8
 16108                           indf1	equ	0xFE7
 16109                           postdec1	equ	0xFE5
 16110                           fsr1h	equ	0xFE2
 16111                           fsr1l	equ	0xFE1
 16112                           bsr	equ	0xFE0
 16113                           indf2	equ	0xFDF
 16114                           postinc2	equ	0xFDE
 16115                           postdec2	equ	0xFDD
 16116                           fsr2h	equ	0xFDA
 16117                           fsr2l	equ	0xFD9
 16118                           status	equ	0xFD8
 16119                           
 16120 ;; *************** function ___lwdiv *****************
 16121 ;; Defined at:
 16122 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 16123 ;; Parameters:    Size  Location     Type
 16124 ;;  dividend        2    0[BANK0 ] unsigned int 
 16125 ;;  divisor         2    2[BANK0 ] unsigned int 
 16126 ;; Auto vars:     Size  Location     Type
 16127 ;;  quotient        2    5[BANK0 ] unsigned int 
 16128 ;;  counter         1    4[BANK0 ] unsigned char 
 16129 ;; Return value:  Size  Location     Type
 16130 ;;                  2    0[BANK0 ] unsigned int 
 16131 ;; Registers used:
 16132 ;;		wreg, status,2, status,0
 16133 ;; Tracked objects:
 16134 ;;		On entry : 0/0
 16135 ;;		On exit  : 0/0
 16136 ;;		Unchanged: 0/0
 16137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16138 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16139 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16141 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16142 ;;Total ram usage:        7 bytes
 16143 ;; Hardware stack levels used:    1
 16144 ;; This function calls:
 16145 ;;		Nothing
 16146 ;; This function is called by:
 16147 ;;		_ISR_Alta
 16148 ;; This function uses a non-reentrant model
 16149 ;;
 16150                           
 16151                           	psect	text39
 16152  005C3A                     __ptext39:
 16153                           	opt stack 0
 16154  005C3A                     ___lwdiv:
 16155                           	opt stack 21
 16156                           
 16157                           ;incstack = 0
 16158  005C3A  0E00               	movlw	0
 16159  005C3C  0100               	movlb	0	; () banked
 16160  005C3E  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 16161  005C40  0E00               	movlw	0
 16162  005C42  6F65               	movwf	___lwdiv@quotient& (0+255),b
 16163                           
 16164                           ; BSR set to: 0
 16165  005C44  0100               	movlb	0	; () banked
 16166  005C46  5162               	movf	___lwdiv@divisor& (0+255),w,b
 16167  005C48  0100               	movlb	0	; () banked
 16168  005C4A  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 16169  005C4C  B4D8               	btfsc	status,2,c
 16170  005C4E  D02C               	goto	i2l1259
 16171                           
 16172                           ; BSR set to: 0
 16173  005C50  0E01               	movlw	1
 16174  005C52  0100               	movlb	0	; () banked
 16175  005C54  6F64               	movwf	___lwdiv@counter& (0+255),b
 16176  005C56  D006               	goto	i2l7692
 16177  005C58                     i2l7690:
 16178                           
 16179                           ; BSR set to: 0
 16180  005C58  0100               	movlb	0	; () banked
 16181  005C5A  90D8               	bcf	status,0,c
 16182  005C5C  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 16183  005C5E  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 16184  005C60  0100               	movlb	0	; () banked
 16185  005C62  2B64               	incf	___lwdiv@counter& (0+255),f,b
 16186  005C64                     i2l7692:
 16187                           
 16188                           ; BSR set to: 0
 16189  005C64  0100               	movlb	0	; () banked
 16190  005C66  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 16191  005C68  D7F7               	goto	i2l7690
 16192  005C6A                     i2l7694:
 16193                           
 16194                           ; BSR set to: 0
 16195  005C6A  0100               	movlb	0	; () banked
 16196  005C6C  90D8               	bcf	status,0,c
 16197  005C6E  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 16198  005C70  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 16199                           
 16200                           ; BSR set to: 0
 16201  005C72  0100               	movlb	0	; () banked
 16202  005C74  5162               	movf	___lwdiv@divisor& (0+255),w,b
 16203  005C76  0100               	movlb	0	; () banked
 16204  005C78  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 16205  005C7A  0100               	movlb	0	; () banked
 16206  005C7C  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16207  005C7E  0100               	movlb	0	; () banked
 16208  005C80  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 16209  005C82  A0D8               	btfss	status,0,c
 16210  005C84  D00A               	goto	i2l7702
 16211                           
 16212                           ; BSR set to: 0
 16213  005C86  0100               	movlb	0	; () banked
 16214  005C88  5162               	movf	___lwdiv@divisor& (0+255),w,b
 16215  005C8A  0100               	movlb	0	; () banked
 16216  005C8C  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 16217  005C8E  0100               	movlb	0	; () banked
 16218  005C90  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16219  005C92  0100               	movlb	0	; () banked
 16220  005C94  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 16221                           
 16222                           ; BSR set to: 0
 16223  005C96  0100               	movlb	0	; () banked
 16224  005C98  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 16225  005C9A                     i2l7702:
 16226                           
 16227                           ; BSR set to: 0
 16228  005C9A  0100               	movlb	0	; () banked
 16229  005C9C  90D8               	bcf	status,0,c
 16230  005C9E  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 16231  005CA0  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 16232                           
 16233                           ; BSR set to: 0
 16234  005CA2  0100               	movlb	0	; () banked
 16235  005CA4  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 16236  005CA6  D7E1               	goto	i2l7694
 16237  005CA8                     i2l1259:
 16238                           
 16239                           ; BSR set to: 0
 16240  005CA8  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 16241  005CAC  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 16242                           
 16243                           ; BSR set to: 0
 16244  005CB0  0012               	return		;funcret
 16245  005CB2                     __end_of___lwdiv:
 16246                           	opt stack 0
 16247                           pclatu	equ	0xFFB
 16248                           pclath	equ	0xFFA
 16249                           tblptru	equ	0xFF8
 16250                           tblptrh	equ	0xFF7
 16251                           tblptrl	equ	0xFF6
 16252                           tablat	equ	0xFF5
 16253                           prodh	equ	0xFF4
 16254                           prodl	equ	0xFF3
 16255                           intcon	equ	0xFF2
 16256                           intcon2	equ	0xFF1
 16257                           postinc0	equ	0xFEE
 16258                           fsr0h	equ	0xFEA
 16259                           fsr0l	equ	0xFE9
 16260                           wreg	equ	0xFE8
 16261                           indf1	equ	0xFE7
 16262                           postdec1	equ	0xFE5
 16263                           fsr1h	equ	0xFE2
 16264                           fsr1l	equ	0xFE1
 16265                           bsr	equ	0xFE0
 16266                           indf2	equ	0xFDF
 16267                           postinc2	equ	0xFDE
 16268                           postdec2	equ	0xFDD
 16269                           fsr2h	equ	0xFDA
 16270                           fsr2l	equ	0xFD9
 16271                           status	equ	0xFD8
 16272                           pclatu	equ	0xFFB
 16273                           pclath	equ	0xFFA
 16274                           tblptru	equ	0xFF8
 16275                           tblptrh	equ	0xFF7
 16276                           tblptrl	equ	0xFF6
 16277                           tablat	equ	0xFF5
 16278                           prodh	equ	0xFF4
 16279                           prodl	equ	0xFF3
 16280                           intcon	equ	0xFF2
 16281                           intcon2	equ	0xFF1
 16282                           postinc0	equ	0xFEE
 16283                           fsr0h	equ	0xFEA
 16284                           fsr0l	equ	0xFE9
 16285                           wreg	equ	0xFE8
 16286                           indf1	equ	0xFE7
 16287                           postdec1	equ	0xFE5
 16288                           fsr1h	equ	0xFE2
 16289                           fsr1l	equ	0xFE1
 16290                           bsr	equ	0xFE0
 16291                           indf2	equ	0xFDF
 16292                           postinc2	equ	0xFDE
 16293                           postdec2	equ	0xFDD
 16294                           fsr2h	equ	0xFDA
 16295                           fsr2l	equ	0xFD9
 16296                           status	equ	0xFD8
 16297                           
 16298                           	psect	param0
 16299  0000                     pclatu	equ	0xFFB
 16300                           pclath	equ	0xFFA
 16301                           tblptru	equ	0xFF8
 16302                           tblptrh	equ	0xFF7
 16303                           tblptrl	equ	0xFF6
 16304                           tablat	equ	0xFF5
 16305                           prodh	equ	0xFF4
 16306                           prodl	equ	0xFF3
 16307                           intcon	equ	0xFF2
 16308                           intcon2	equ	0xFF1
 16309                           postinc0	equ	0xFEE
 16310                           fsr0h	equ	0xFEA
 16311                           fsr0l	equ	0xFE9
 16312                           wreg	equ	0xFE8
 16313                           indf1	equ	0xFE7
 16314                           postdec1	equ	0xFE5
 16315                           fsr1h	equ	0xFE2
 16316                           fsr1l	equ	0xFE1
 16317                           bsr	equ	0xFE0
 16318                           indf2	equ	0xFDF
 16319                           postinc2	equ	0xFDE
 16320                           postdec2	equ	0xFDD
 16321                           fsr2h	equ	0xFDA
 16322                           fsr2l	equ	0xFD9
 16323                           status	equ	0xFD8
 16324                           
 16325                           	psect	temp
 16326  000048                     btemp:
 16327                           	opt stack 0
 16328  000048                     	ds	1
 16329  0000                     int$flags	set	btemp
 16330                           pclatu	equ	0xFFB
 16331                           pclath	equ	0xFFA
 16332                           tblptru	equ	0xFF8
 16333                           tblptrh	equ	0xFF7
 16334                           tblptrl	equ	0xFF6
 16335                           tablat	equ	0xFF5
 16336                           prodh	equ	0xFF4
 16337                           prodl	equ	0xFF3
 16338                           intcon	equ	0xFF2
 16339                           intcon2	equ	0xFF1
 16340                           postinc0	equ	0xFEE
 16341                           fsr0h	equ	0xFEA
 16342                           fsr0l	equ	0xFE9
 16343                           wreg	equ	0xFE8
 16344                           indf1	equ	0xFE7
 16345                           postdec1	equ	0xFE5
 16346                           fsr1h	equ	0xFE2
 16347                           fsr1l	equ	0xFE1
 16348                           bsr	equ	0xFE0
 16349                           indf2	equ	0xFDF
 16350                           postinc2	equ	0xFDE
 16351                           postdec2	equ	0xFDD
 16352                           fsr2h	equ	0xFDA
 16353                           fsr2l	equ	0xFD9
 16354                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        11
    BSS         179
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      71
    BANK0           160    132     137
    BANK1           256     85     236
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> can_send@data_correction1(BANK0[0]), data_speed(BANK1[8]), data_steering(BANK1[8]), data_correction(BANK1[8]), 
		 -> data_brake(BANK1[8]), data_test(BANK1[8]), data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _park_search->_parallelo
    _park_routine->_parallelo
    _parallelo->_asin
    _can_send->_CANsendMessage
    _sin->_floor
    _floor->___xxtofl
    ___xxtofl->___fltol
    ___fltol->___flneg
    ___flsub->_floor
    _asin->_sqrt
    _sqrt->___flneg
    _atan->___flge
    _fabs->___flneg
    ___flneg->___fladd
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul
    ___flge->_fabs
    _delay_s->_delay_ms
    _delay_ms->___wmul
    _configurazione->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_park_routine
    _park_routine->_matematica
    _parallelo->_asin
    _matematica->_cos
    _cos->_asin
    _sin->___flsub
    _asin->_atan

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  343703
                    _can_interpreter
                     _configurazione
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   93704
                                             37 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (1) _park_routine                                        12    12      0  244065
                                             73 BANK1     12    12      0
                     _CANsendMessage
                            ___awdiv
                            ___fladd
                            ___flneg
                            ___fltol
                           ___xxtofl
                           _can_send
                           _delay_ms
                            _delay_s
                         _matematica
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   85575
                                            130 BANK0      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    7241
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    7061
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      37
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     247
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _matematica                                          32    32      0  133218
                                             45 BANK1     28    28      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                               _asin
                                _cos
 ---------------------------------------------------------------------------------
 (3) _cos                                                 12     8      4   57965
                                             37 BANK1      8     4      4
                            ___fladd
                             ___flge
                               _asin (ARG)
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 17    13      4   49794
                                              8 BANK1     17    13      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4   10191
                                            121 BANK0     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                8     2      6     452
                                             23 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     784
                                            107 BANK0     14    10      4
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     722
                                             97 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6777
                                              0 BANK1      8     0      8
                            ___fladd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   57438
                                            126 BANK0      4     0      4
                                             17 BANK1     20    20      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0     29    25      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   34323
                                            113 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1621
                                             97 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1297
                                             93 BANK0      4     0      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   13009
                                             93 BANK0     16     8      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5541
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    6290
                                             73 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1498
                                            101 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4347
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0     639
                                             31 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     571
                                             29 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     599
                                             23 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    5934
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    1251
                                             12 COMRAM    23    23      0
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_interpreter
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _park_routine
     _CANsendMessage
     ___awdiv
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___flneg
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___flneg (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _can_send
       _CANisTxReady
       _CANsendMessage
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
     _matematica
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _cos
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _asin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _atan
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _fabs
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           _sqrt
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _sin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _floor (ARG)
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flge
                 _fabs (ARG)
                   ___flneg
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___xxtofl
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___flneg (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                 _abs (ARG)
               _frexp
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _floor
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___xxtofl
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               _abs (ARG)
             _frexp
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _abs
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     55      EC       7       92.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     84      89       5       85.6%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     23      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BC      20        0.0%
DATA                 0      0     1BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu May 05 17:14:32 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _n 0130  
                           _x 013C                             _z 0140          __end_of_CANSetFilter 1858  
                ___fldiv@sign 0083                  ___awdiv@sign 007C            delay_s@repeat_loop 0080  
                          bsr 000FE0           ___wmul@multiplicand 0079                   __CFG_BORV$3 000000  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                   __CFG_OSC$HS 000000                    _MUX_select 0100  
                         l402 1F30                           l403 1F34                           l500 15B4  
                         l404 1F40                           l501 15B8                           l510 16C4  
                         l502 15C4                           l511 16D0                           l503 15C8  
                         l520 17DC                           l512 16D4                           l504 15D4  
                         l440 4168                           l432 4128                           l521 17E0  
                         l513 16E0                           l433 412C                           l522 17EC  
                         l514 16E4                           l450 4274                           l434 4138  
                         l370 1918                           l523 17F0                           l515 16F0  
                         l507 16B0                           l451 4280                           l443 4240  
                         l435 413C                           l363 1ADC                           l524 17FC  
                         l508 16B4                           l444 4244                           l436 4148  
                         l380 1AF6                           l364 186E                           l525 1800  
                         l509 16C0                           l445 4250                           l437 414C  
                         l381 1BEE                           l373 1A28                           l365 1872  
                         l526 180C                           l518 17CC                           l470 1276  
                         l446 4254                           l438 4158                           l358 505E  
                         l390 1CBC                           l382 1B7E                           l374 1A2C  
                         l366 196A                           l519 17D0                           l471 1282  
                         l463 1242                           l447 4260                           l439 415C  
                         l359 5068                           l383 1B88                           l375 1A38  
                         l367 18FA                           l480 138C                           l464 1246  
                         l448 4264                           l384 1B92                           l368 1904  
                         l720 51CE                           l481 1390                           l465 1252  
                         l449 4270                           l393 1D76                           l385 1B9C  
                         l369 190E                           l490 149C                           l482 139C  
                         l474 135C                           l466 1256                           l394 1D7A  
                         l378 1D60                           l491 14A8                           l475 1360  
                         l467 1262                           l395 1E72                           l379 1AF2  
                         l731 5306                           l492 14AC                           l476 136C  
                         l468 1266                           l556 5FBE                           l396 1E02  
                         l388 1CAC                           l493 14B8                           l485 1478  
                         l477 1370                           l469 1272                           l397 1E0C  
                         l389 1CB0                           l486 147C                           l478 137C  
                         l398 1E16                           l718 530A                           l487 1488  
                         l479 1380                           l399 1E20                           l496 1594  
                         l488 148C                           l752 364C                           l497 1598  
                         l489 1498                           l569 5F3E                           l498 15A4  
                         l499 15A8                           l755 36D6                           l852 5F6A  
                         l749 35B4                           l782 4B70                           l788 4B32  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           _abs 5F48  
                         _asd 0231                           _dir 0232                           _cos 5922  
                         _jjj 0128                           _kkk 012C                           _msg 014E  
                         _sin 42CC                           prod 000FF3                           wreg 000FE8  
                ___flmul@aexp 009D                  ___flmul@bexp 00A2               ?_configurazione 0001  
                ___flmul@sign 009C                  ___flmul@temp 00A7                  ___flmul@prod 00A3  
                __CFG_LVP$OFF 000000                  ___fltol@exp1 00CA                  __CFG_WDT$OFF 000000  
                        ?_abs 0077                          l1052 5E94                          l1311 2C5A  
                        l1312 2C4E                          l1313 2C1A                          l1059 5454  
                        l1404 3272                          l1414 3384                          l1406 32E0  
                        l1328 2DCE                          l1337 2E62                          l1370 3D44  
                        l1453 4F26                          l1454 4F3E                          l1446 4ECA  
                        l1367 3D9C                          l1439 4E1E                          l1295 45D2  
                        l1376 3DD4                          l1464 56EC                          l5010 416C  
                        l1378 3E42                          l1397 2FD6                          l5102 0F82  
                        l5120 103C                          l5016 41B2                          l5042 4284  
                        ?_cos 01B2                          l5320 16F4                          l5224 13E6  
                        l5218 13A0                          l5138 10F6                          l5066 0E10  
                        l5252 14BC                          l5156 11B0                          l5084 0EC8  
                        l5500 50B8                          l6212 2A98                          l5326 173A  
                        l5190 12CC                          l6302 2C3E                          l6230 2AF2  
                        l6222 2AC6                          l7110 3820                          l5184 1286  
                        l6320 2CBC                          l6312 2C7E                          l7200 4BCE  
                        l7032 1E2A                          l5354 1810                          l5258 1502  
                        l6322 2CC2                          l6330 2CDE                          l6242 2B2A  
                        l6218 2ABC                          l5292 161E                          l6404 2F10  
                        l6340 2DAE                          l6236 2B06                          l6420 2F64  
                        l7220 4DAE                          l7204 4C42                          l7116 3840  
                        l7108 380E                          l7052 1F24                          l5286 15D8  
                        l6326 2CCC                          l6254 2B5E                          l6246 2B34  
                        l6422 2F6A                          l6414 2F40                          l7310 4642  
                        l6520 3356                          l6440 2FC4                          l6432 2F9A  
                        l6424 2F7C                          l7216 4D96                          l7152 39C2  
                        l7160 3A38                          l7136 38B2                          l7128 3882  
                        l6600 58DA                          l7232 4302                          l6354 2E16  
                        l6530 33A4                          l6522 336A                          l6506 32DA  
                        l7154 39FC                          l7146 3934                          l7322 4770  
                        l6602 58EA                          l7058 1F44                          l5492 5056  
                        l6348 2E00                          l6364 2E36                          l6284 2B9A  
                        l6532 33AE                          l6516 3330                          l6444 2FEA  
                        l7180 3B4E                          l7172 3B18                          l7148 393C  
                        l6604 58F4                          l7244 442C                          l4950 5FCC  
                        l5494 506C                          l6702 3C0E                          l6550 5402  
                        l6542 5362                          l6374 2E5C                          l6358 2E22  
                        l6366 2E3C                          l6438 2FBE                          l7334 4852  
                        l6630 4EAC                          l7350 59AA                          l7510 522C  
                        l7264 5F32                          l6392 2EEC                          l6384 2EB8  
                        l6296 2C2E                          l6448 2FFE                          l7096 37C2  
                        l6608 5910                          l6624 4E56                          l7248 44A2  
                        l7520 5274                          l5498 5074                          l7362 5F92  
                        l6706 3C18                          l6546 53B0                          l6298 2C34  
                        l6490 325C                          l6650 4F90                          l6626 4E5E  
                        l6618 4E2E                          l7290 552E                          l7452 5B04  
                        l6556 54A0                          l6396 2EF8                          l6388 2ECA  
                        l6820 5754                          l6564 5ECC                          l6636 4F08  
                        l6628 4E6E                          l6660 5BCC                          l6900 1A1C  
                        l7276 54A8                          l7516 523C                          l7358 5F80  
                        l6750 3D98                          l6726 3C9A                          l6718 3C6C  
                        l6398 2EFC                          l6822 57F8                          l6590 58AA  
                        l6574 583C                          l6638 4F18                          l7286 54F6  
                        l4984 409C                          l4968 3FE6                          l7464 5B38  
                        l7480 5B88                          l6744 3D50                          l6736 3D18  
                        l6496 3286                          l7296 556E                          l7466 5B44  
                        l7458 5B1A                          l6762 3DE8                          l6682 3BB0  
                        l6594 58BE                          l6842 5650                          l6834 561A  
                        l6906 1A3C                          l7394 4B4E                          l7490 516A  
                        l7484 5B9C                          l7476 5B7A                          l7468 5B4A  
                        l6772 3E3C                          l6756 3DBE                          l6676 3B8C  
                        l7388 4AF4                          l7396 4B54                          l7548 33CA  
                        l6790 3EF6                          l6782 3E92                          l6686 3BBA  
                        l6838 562E                          l7662 372E                          l6696 3BEA  
                        l6880 1922                          l7664 373A                          l7576 3432  
                        l7568 3424                          l6786 3EC0                          l7498 517E  
                        l7738 5E12                          l6796 3F06                          l6788 3ED4  
                        l6956 1BA6                          ?_sin 0195                          l6798 3F0A  
                        l6982 1CC0                          l7678 3796                          l6976 1CA0  
                        _LATA 000F89                          _LATB 000F8A                          _LATC 000F8B  
                        u6000 112C                          u6005 1120                          u6015 118C  
                        u5600 4018                          u6410 1714                          u6330 15F8  
                        u6250 14DC                          u6170 13C0                          u6090 12A6  
                        u5605 400C                          u6415 1708                          u6335 15EC  
                        u6255 14D0                          u6175 13B4                          u6095 129A  
                        u5615 4078                          u5800 0D8C                          u5560 3F62  
                        u8040 3344                          u8140 585C                          u5805 0D80  
                        u5565 3F56                          u8310 5BFE                          u5815 0DEC  
                        u5575 3FC2                          u5920 0FB8                          u5840 0E44  
                        u7600 2BFE                          u8145 5850                          u6490 1830  
                        u5770 42A4                          u5690 418C                          u9220 4426  
                        u5925 0FAC                          u5845 0E38                          u9150 4BFE  
                        u8318 5C02                          u9230 4428                          u6495 1824  
                        u5935 1018                          u5855 0EA4                          u5775 4298  
                        u5695 4180                          u5960 1072                          u5880 0EFE  
                        u8520 3EA6                          u9160 4C00                          u7580 2BE4  
                        u8700 198E                          u5965 1066                          u5885 0EF2  
                        u7590 2BFC                          u9430 4B4C                          u5975 10D2  
                        u5895 0F5E                          u9600 5284                          u8705 1982  
                        u9530 517A                          u8715 19EE                          u8820 1BC6  
                        u9381 4988                          u8590 563E                          u8830 1C12  
                        u9391 4994                          u7960 31FE                          u8825 1BBA  
                        u8690 1942                          u9730 370C                          u8835 1C06  
                        u7965 31F2                          u8845 1C72                          u8950 1E4A  
                        u8695 1936                          u8960 1E96                          u9827 5F34  
                        u8955 1E3E                          u8965 1E8A                          u8975 1EF6  
         __size_of_CANSetMask 039E                          abs@a 0077                          _alfa 011C  
                        _fabs 5E68                          _data 015D                          _beta 0120  
                        _atan 4B82                          _asin 45E4                          _main 5DD4  
                        _asus 0043                          cos@f 01B2                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr0l 000FE9                          fsr2h 000FDA  
                        indf1 000FE7                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          btemp 0048                          _sqrt 37A4  
                        pclat 000FFA                          sin@f 0195                          sin@y 0199  
                        prodh 000FF4                          prodl 000FF3                          start 0254  
               __CFG_IESO$OFF 000000               ___fldiv@new_exp 0088                delay_s@value_s 007F  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000              _CANOperationMode 5FC4  
                       ??_abs 0079                         ??_cos 00E3                         ??_sin 00E3  
  __size_of_CANreceiveMessage 050C                         ?_fabs 00C1                 ___fltol@sign1 00C9  
                       ?_atan 00D1                         ?_asin 00DE               __end_of___fladd 2F22  
                       ?_main 0001               __end_of___fldiv 3F2E               __end_of___awdiv 5BA6  
             __end_of___flneg 5EDE               __end_of___flmul 33C8               __end_of___flsub 5E68  
             __end_of___fltol 5922                         ?_sqrt 00C1                         _T0CON 000FD5  
             ___awdiv@divisor 0079                         _T3CON 000FB1            __size_of_ISR_Bassa 023C  
             __end_of___lwdiv 5CB2                         i1l410 2806                         i1l702 0188  
                       i1l705 0208                         i1l709 020C                         i1l695 009A  
                       i2l688 5A48               ___awdiv@counter 007B                         _TMR0H 000FD7  
                       _TMR0L 000FD6                         _TMR3H 000FB3                         _TMR3L 000FB2  
                       _PORTA 000F80                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94            __end_ofsin@coeff_a 0D41            __end_ofsin@coeff_b 0D51  
               __CFG_PWRT$OFF 000000              __end_of_ISR_Alta 5AE8               __end_of_delay_s 5FA0  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000            CANInitialize@flags 0089                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                         _bordo 0124  
                       fabs@d 00C1                         _floor 55DA                         _frexp 5BA6  
                       _errno 0148                         atan@f 00D1                         atan@x 0191  
                       atan@y 018D                         asin@x 00DE                         asin@y 01AA  
    can_send@data_correction1 0087                __pbitbssCOMRAM 0230                         sin@x2 01A1  
                       tablat 000FF5          __end_of_CANisTxReady 5FC4                         sqrt@a 00C1  
                       sqrt@i 00CA                         sqrt@p 00CF                         status 000FD8  
                ?_park_search 0001               __initialization 5D1E                  __end_of_fabs 5EA6  
                __end_of_atan 4DD4                  __end_of_asin 48F6                  __end_of_main 5E20  
                __end_of_sqrt 3B6E                        ??_fabs 00C5                        ??_atan 00D5  
                      ??_asin 00E2                        ??_main 00E4             _park_routine$3738 01DA  
           _park_routine$3739 01DE                        ??_sqrt 00C5                 __activetblptr 000003  
           _CANisTxReady$2845 0077                        _ADCON1 000FC1                        ?_floor 00D9  
                      ?_frexp 0077                        _CANCON 000F6F              ___awdiv@dividend 0077  
          _distance_received1 0235               __CFG_BBSIZ$1024 000000             _spazio_parcheggio 01E6  
                      i1l6112 00D6                        i1l6140 0192                        i1l6108 00CE  
                      i1l6134 0164                        i1l6152 01CA                        i2l1259 5CA8  
                      i1l6148 01C2                        i1l5702 27B0                        i1l6158 01F2  
                      i1l6078 008C                        i1l5706 27CE                        i1l5708 2800  
                      i1l5760 2A0C                        i1l5752 29D4                        i1l5744 2966  
                      i1l5770 2A76                        i1l5690 2756                        i1l5682 26E6  
                      i1l5764 2A28                        i1l5756 29F0                        i1l5694 2774  
                      i1l5768 2A44                        i1l5698 2792                        i2l7702 5C9A  
                      i2l7722 5AAA                        i2l7690 5C58                        i2l7692 5C64  
                      i2l7694 5C6A                        _RXB0D0 000F66                        _RXB0D1 000F67  
                      _RXB0D2 000F68                        _RXB0D3 000F69                        _RXB0D4 000F6A  
                      _RXB1D0 000F56                        _RXB0D5 000F6B                        _RXB1D1 000F57  
                      _RXB0D6 000F6C                        _RXB1D2 000F58                        _RXB0D7 000F6D  
                      _RXB1D3 000F59                        _RXB1D4 000F5A                        _RXB1D5 000F5B  
                      _RXB1D6 000F5C                        _RXB1D7 000F5D                        _TXB0D0 000F46  
                      _TXB0D1 000F47                        _TXB0D2 000F48                        _TXB0D3 000F49  
                      _TXB1D0 000F36                        _TXB0D4 000F4A                        _TXB1D1 000F37  
                      _TXB0D5 000F4B                        _TXB1D2 000F38                        _TXB0D6 000F4C  
                      _TXB1D3 000F39                        _TXB0D7 000F4D                        _TXB2D0 000F26  
                      _TXB1D4 000F3A                        _TXB2D1 000F27                        _TXB1D5 000F3B  
                      _TXB2D2 000F28                        _TXB1D6 000F3C                        _TXB2D3 000F29  
                      _TXB1D7 000F3D                        _TXB2D4 000F2A                        _TXB2D5 000F2B  
                      _TXB2D6 000F2C                        _TXB2D7 000F2D            CANsendMessage@data 007B  
            __end_of_can_send 55DA            CANsendMessage@tamp 0083              __end_of___xxtofl 4FA2  
           __end_of_ISR_Bassa 0254              __end_of_delay_ms 5F48         __size_of_CANSetFilter 0B06  
              __CFG_XINST$OFF 000000                        ___flge 5314               _data_correction 016D  
                   ??___fladd 00B1                        ___wmul 5EDE                     ??___fldiv 007F  
                   ??___awdiv 007B                     ??___flneg 00C1                __CFG_STVREN$ON 000000  
                   ??___flmul 0098                     ??___flsub 00E3                     ??___fltol 00C5  
                   ??___lwdiv 0064                  ??_CANSetMask 007C                        _gianni 0044  
                      _raggio 01E8                        clear_0 5D24                        clear_1 5D3E  
            ___awdiv@quotient 007D                     ??_delay_s 007F                        floor@i 00DD  
                      floor@x 00D9               __CFG_BOREN$BOHW 000000                        sin@sgn 01A5  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                  _CANSetFilter 0D52                    ___flge@ff1 00C5  
                  ___flge@ff2 00C9                  ___xxtofl@arg 00D5                  ___xxtofl@exp 00D4  
                ___xxtofl@val 00CB                    __accesstop 0060       __end_of__initialization 5D76  
          __end_of_CANSetMask 42CC               __CFG_PBADEN$OFF 000000                    ___flneg@f1 00BD  
               ?_park_routine 0001                  eval_poly@res 00C9                 ___rparam_used 000000  
                  ___fltol@f1 00C1                __pcstackCOMRAM 0001                     ?_ISR_Alta 0001  
                __pidataBANK0 5FE4                  __pidataBANK1 5FDA                 __end_of_floor 56FE  
               __end_of_frexp 5C3A              ??_configurazione 0091         CANSetFilter@numBuffer 0080  
                _actual_speed 0144         __size_of_CANisTxReady 0024                       ??_floor 00DD  
                     ??_frexp 007D      __end_of_CANOperationMode 5FDA                    __pbssBANK0 00E4  
                  __pbssBANK1 0100               _sensor_distance 0024            __size_of_eval_poly 0118  
                  _data_brake 0165                ??_park_routine 01D6                 ISR_Bassa@gigi 0022  
     __size_of_CANsendMessage 078C                    _data_speed 0175                    _activation 0230  
    __size_of_can_interpreter 0054            __size_of_parallelo 028C          __size_of_park_search 01AC  
           _old_alignment_gap 0134                    ??_ISR_Alta 0067                       ?___flge 00C5  
                     ?___wmul 0077                       _CANSTAT 000F6E                  _CANisTxReady 5FA0  
                     _BRGCON1 000F70                       _BRGCON2 000F71                       _BRGCON3 000F72  
                   ?_can_send 0001                     ?___xxtofl 00CB        __size_of_CANInitialize 01C6  
                   ?_delay_ms 007D                       _RXB0DLC 000F65                       _RXB1DLC 000F55  
                     _RXB0CON 000F60                       _RXB1CON 000F50                       _TXB0DLC 000F45  
                     _TXB1DLC 000F35                       _TXB2DLC 000F25           CANsendMessage@flags 007E  
                     __Hparam 0000                    _left_speed 003C                       __Lparam 0000  
            delay_ms@value_ms 007D                       _Pminimo 0118               __size_of___flge 0190  
                  _matematica 1FE4                       ___fladd 2A7A                       ___fldiv 3B6E  
                     ___awdiv 5AE8                       ___flneg 5EA6                       ___flmul 2F22  
                     ___flsub 5E20                       ___fltol 5816               __size_of___wmul 0036  
                     ___lwdiv 5C3A                  __psmallconst 0D00          CANInitialize@propSeg 008E  
                     __pcinit 5D1E             __end_of_eval_poly 5816                       _delay_s 5F74  
                     __ramtop 0D00                       __ptext0 5DD4                       __ptext1 5168  
                     __ptext2 33C8                       __ptext3 48F6                       __ptext4 54A4  
                     __ptext5 1858                       __ptext6 5FA0                       __ptext7 5F48  
                     __ptext8 1FE4                       __ptext9 5922                     _T0CONbits 000FD5  
                  ??_can_send 0087                  __size_of_abs 002C                  __size_of_cos 00E4  
             atan@val_squared 0196                  __size_of_sin 0318                    ??___xxtofl 00CF  
                     atan@val 019A             __end_of_parallelo 4B82                    ??_delay_ms 007F  
                     asin@sgn 019E        CANreceiveMessage@error 000B               _start_operation 023A  
              __pintcode_body 5A06          end_of_initialization 5D76                       int_func 5A06  
               _CANInitialize 4FA2                     _ISR_Bassa 0018                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc2 000FDE  
                     sqrt@grs 00D0                       sqrt@exp 00D4             ??_can_interpreter 0077  
     _steering_correction_dir 023B                     _PORTBbits 000F81                CANSetMask@mask 0077  
              CANSetMask@tamp 0081                  _distance_set 0110                CANSetMask@type 007B  
        __end_of_park_routine 37A4                   ___fladd@grs 00BC                 ___xxtofl@sign 00D3  
                   _TRISBbits 000F93                   ___fldiv@grs 008A                   ___fldiv@rem 0084  
                   _MUX_index 0042                    _pulse_time 014A       _clock_counter_reference 0034  
                 ___flmul@grs 009E                _CANsendMessage 1858              CANInitialize@BRP 0088  
            CANInitialize@SJW 0087                ?_CANInitialize 0085                    ?_ISR_Bassa 0001  
                 ?_matematica 0001                __end_of___flge 54A4             __size_of_ISR_Alta 5AE0  
              __end_of___wmul 5F14                    floor@expon 00E1           start_initialization 5D1E  
                  eval_poly@d 00C1                    eval_poly@n 00C3                    eval_poly@x 00BD  
                 __end_of_abs 5F74                   __end_of_cos 5A06                   __end_of_sin 45E4  
         CANSetMask@numBuffer 0080                 _data_speed_rx 0108        __end_of_CANsendMessage 1FE4  
           ?_CANOperationMode 0001                 _data_steering 017D                    frexp@value 0077  
          ??_CANOperationMode 0077             _distance_received 0234    CANInitialize@FilterConfig1 008F  
  CANInitialize@FilterConfig2 0090           _steering_correction 0045                      ??___flge 00CD  
                    ??___wmul 007B                   __pdataBANK0 00E8                   __pdataBANK1 01E2  
            __CFG_LPT1OSC$OFF 000000                     ___fladd@a 00AD                     ___fladd@b 00A9  
      CANInitialize@phaseSeg1 0085        CANInitialize@phaseSeg2 0086                     ___fldiv@a 007B  
                   ___fldiv@b 0077                     ___flmul@a 0094                     ___flmul@b 0090  
                 __pbssCOMRAM 0024                     ___flsub@a 0191                     ___flsub@b 018D  
               __pcstackBANK0 0060                 __pcstackBANK1 018D                   _BRGCON2bits 000F71  
                 _BRGCON3bits 000F72             __size_of_can_send 0136             __size_of___xxtofl 01CE  
           __size_of_delay_ms 0034               ?_CANsendMessage 0077           __size_of_matematica 058A  
             ??_CANInitialize 008A                     _asin$3747 01AE                     _asin$3748 01A6  
                   _asin$3749 01A2                    sin@coeff_a 0D2D                    sin@coeff_b 0D41  
               ??_park_search 01B2                 _alignment_gap 00E4            CANSetFilter@filter 0077  
                   _data_test 0185              ___lwdiv@dividend 0060                    ISR_Bassa@i 0023  
                 ??_ISR_Bassa 000D                     __pintcode 0008                      ?___fladd 00A9  
                    ?___fldiv 0077                      ?___awdiv 0077                      ?___flneg 00BD  
                    ?___flmul 0090                      ?___flsub 018D                      ?___fltol 00C1  
       __size_of_park_routine 03DC                      ?___lwdiv 0060                   __pintcodelo 0018  
                    ?_delay_s 0001                   __smallconst 0D00                   _COMSTATbits 000F74  
                   _eval_poly 56FE                     _larghezza 01E2              ___lwdiv@quotient 0065  
              __size_of_floor 0124                __size_of_frexp 0094       __size_of_configurazione 006C  
                   _parallelo 48F6         CANreceiveMessage@tamp 000C                _prima_sterzata 0138  
              ___wmul@product 007B                      _LATBbits 000F8A               _can_interpreter 5D80  
                   atan@recip 0195                  _park_routine 33C8  _delay_quartz_frequency_value 00E8  
                    _IPR3bits 000FA5                      _PIE3bits 000FA3                      i1u704_25 2A50  
                    i1u684_20 2626                      i1u684_26 2628                      i1u685_20 2654  
                    i1u693_25 27DA                      i1u685_26 2656                      _PIR3bits 000FA4  
                    i1u695_20 28AE                      i1u687_25 266A                      i1u695_26 28B0  
                    i1u696_20 28D8                      i1u696_26 28DA                      i1u698_25 28EC  
                    i1u983_27 00BC                      _RXB0EIDH 000F63                      _RXB0EIDL 000F64  
                    _RXB1EIDH 000F53                      _RXB1EIDL 000F54                      _ISR_Alta 0008  
                   _set_speed 014C                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
                    _RXB0SIDH 000F61                      _RXB0SIDL 000F62                      _RXF0EIDH 000F02  
                    _RXB1SIDH 000F51                      _RXF0EIDL 000F03                      _RXB1SIDL 000F52  
                    _RXF1EIDH 000F06                      _RXF1EIDL 000F07                      _RXF2EIDH 000F0A  
                    _RXF2EIDL 000F0B                      _RXF3EIDH 000F0E                      _RXF3EIDL 000F0F  
                    _RXF4EIDH 000F12                      _RXF4EIDL 000F13                      _RXF5EIDH 000F16  
                    _RXF5EIDL 000F17                      _RXF0SIDH 000F00                      _RXF0SIDL 000F01  
         __end_of_park_search 5314                      _TXB0EIDH 000F43                      _RXF1SIDH 000F04  
                    _TXB0EIDL 000F44                      _RXF1SIDL 000F05                      _TXB1EIDH 000F33  
                    _RXF2SIDH 000F08                      _TXB1EIDL 000F34                      _RXF2SIDL 000F09  
                    _TXB2EIDH 000F23                      _RXF3SIDH 000F0C                      _TXB2EIDL 000F24  
                    _RXF3SIDL 000F0D                      _RXF4SIDH 000F10                      _RXF4SIDL 000F11  
                    _RXF5SIDH 000F14                      _RXF5SIDL 000F15                      _RXM0EIDH 000F1A  
                    _RXM0EIDL 000F1B                      _TXB0SIDH 000F41                      _RXM1EIDH 000F1E  
                    _TXB0SIDL 000F42                      _RXM1EIDL 000F1F                      _TXB1SIDH 000F31  
                    _TXB1SIDL 000F32                      _TXB2SIDH 000F21                      _TXB2SIDL 000F22  
                    _RXM0SIDH 000F18                      _RXM0SIDL 000F19                      _RXM1SIDH 000F1C  
                    _RXM1SIDL 000F1D                   _distance_dx 0038                   _distance_sx 003A  
                    _RXERRCNT 000F75                      _TXERRCNT 000F76             ___wmul@multiplier 0077  
                  ?_eval_poly 00BD           __end_ofatan@coeff_a 0D19           __end_ofatan@coeff_b 0D2D  
               ?_CANSetFilter 0077                   _INTCON2bits 000FF1                     copy_data0 5D58  
                  _CANCONbits 000F6F                    ?_parallelo 0001              _distance_average 0036  
                   frexp@eptr 007B                      __Hparam0 0000                      __Lparam0 0000  
                _RXB0SIDLbits 000F62                  _RXB1SIDLbits 000F52                  ??_matematica 00E3  
               _request_sent1 0239              __size_of___fladd 04A8                    _CANSetMask 3F2E  
            __size_of___fldiv 03C0              __size_of___awdiv 00BE              __size_of___flneg 0038  
            __size_of___flmul 04A6              __size_of___flsub 0048              __size_of___fltol 010C  
                    _cos$3750 01B6              __size_of___lwdiv 0078              __size_of_delay_s 002C  
                    _can_send 54A4                      ___xxtofl 4DD4                  _RXF0SIDLbits 000F01  
                    _delay_ms 5F14               ___lwdiv@divisor 0062                  _RXF1SIDLbits 000F05  
             ___lwdiv@counter 0064                ??_CANSetFilter 007C                      __ptext10 42CC  
                    __ptext11 55DA                      __ptext20 5EA6                      __ptext12 5BA6  
                    __ptext21 56FE                      __ptext13 4DD4                      __ptext30 5CB2  
                    __ptext22 2F22                      __ptext14 5816                      __ptext31 4FA2  
                    __ptext23 2A7A                      __ptext15 5E20                      __ptext32 3F2E  
                    __ptext24 5314                      __ptext16 45E4                      __ptext33 0D52  
                    __ptext25 3B6E                      __ptext17 37A4                      __ptext34 5FC4  
                    __ptext26 5F74                      __ptext18 4B82                      __ptext35 5D80  
                    __ptext27 5F14                      __ptext19 5E68                      __ptext28 5EDE  
                    __ptext37 256E                      __ptext29 5AE8                      __ptext39 5C3A  
                _RXF2SIDLbits 000F09                      _sin$3751 019D       __end_of_can_interpreter 5DD4  
                _RXF3SIDLbits 000F0D                      _distance 0146            __end_of_matematica 256E  
                _RXF4SIDLbits 000F11                  _RXF5SIDLbits 000F15      CANsendMessage@dataLength 007D  
               __size_of_fabs 003E                 __size_of_atan 0252                 __size_of_asin 0312  
               __size_of_main 004C                 __size_of_sqrt 03CA                   _park_search 5168  
        CANreceiveMessage@msg 0001                  _TXB0SIDLbits 000F42                  _TXB1SIDLbits 000F32  
                _TXB2SIDLbits 000F22                      int$flags 0048     __size_of_CANOperationMode 0016  
               ?_CANisTxReady 0001                   atan@coeff_a 0D01                   atan@coeff_b 0D19  
                 _RXB0DLCbits 000F65                   _RXB1DLCbits 000F55                  _RXM0SIDLbits 000F19  
                 _RXB0CONbits 000F60                   _RXB1CONbits 000F50             _CANreceiveMessage 256E  
                _RXM1SIDLbits 000F1D                    _INTCONbits 000FF2                   ??_eval_poly 00C5  
            ??_CANsendMessage 007F            ?_CANreceiveMessage 0001                  _request_sent 0238  
                   sqrt@tfrac 00CB                _configurazione 5CB2      CANsendMessage@identifier 0077  
                 ??_parallelo 00E2                      intlevel1 0000                      intlevel2 0000  
            CANSetFilter@tamp 0081              CANSetFilter@type 007B           ??_CANreceiveMessage 0003  
         _old_data_correction 0237                   _TXB0DLCbits 000F45                   _right_speed 003E  
                 _TXB1DLCbits 000F35                   _TXB0CONbits 000F40                   _TXB2DLCbits 000F25  
                 _TXB1CONbits 000F30                   _TXB2CONbits 000F20          CANOperationMode@mode 0077  
                 ?_CANSetMask 0077                ??_CANisTxReady 0077                _distance_error 0233  
             _matematica$3740 01BA               _matematica$3741 01BE               _matematica$3742 01C2  
             _matematica$3743 01C6               _matematica$3744 01D2               _matematica$3745 01CA  
             _matematica$3746 01CE     __end_of_CANreceiveMessage 2A7A                      sqrt@frac 00DA  
                    sqrt@sign 00C9                      sqrt@root 00D6                   _timerValue2 0040  
      __end_of_configurazione 5D1E                 ___fladd@signs 00B9                 _distance_wait 0236  
            ?_can_interpreter 0001                  ___fladd@aexp 00BA                  ___fladd@bexp 00BB  
       __end_of_CANInitialize 5168  
