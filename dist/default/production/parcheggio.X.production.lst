

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sun Apr 24 23:05:22 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    53                           	psect	param0,global,class=BANK0,space=1,delta=1
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           	psect	idataCOMRAM
    57  005000                     __pidataCOMRAM:
    58                           	opt stack 0
    59                           
    60                           ;initializer for _spazio_parcheggio
    61  005000  0064               	dw	100
    62                           
    63                           	psect	idataBANK0
    64  005002                     __pidataBANK0:
    65                           	opt stack 0
    66                           
    67                           ;initializer for _delay_quartz_frequency_value
    68  005002  10                 	db	16
    69                           
    70                           	psect	smallconst
    71  000D00                     __psmallconst:
    72                           	opt stack 0
    73  000D00  00                 	db	0
    74  000D01                     atan@coeff_a:
    75                           	opt stack 0
    76  000D01  3C06               	dw	15366
    77  000D03  4204               	dw	16900
    78  000D05  9F7D               	dw	40829
    79  000D07  426A               	dw	17002
    80  000D09  905C               	dw	36956
    81  000D0B  4201               	dw	16897
    82  000D0D  4D60               	dw	19808
    83  000D0F  40BB               	dw	16571
    84  000D11  EC51               	dw	60497
    85  000D13  3E47               	dw	15943
    86  000D15  8DDE               	dw	36318
    87  000D17  BB1F               	dw	47903
    88  000D19                     __end_ofatan@coeff_a:
    89                           	opt stack 0
    90  000D19                     atan@coeff_b:
    91                           	opt stack 0
    92  000D19  3C06               	dw	15366
    93  000D1B  4204               	dw	16900
    94  000D1D  59C0               	dw	22976
    95  000D1F  428B               	dw	17035
    96  000D21  0474               	dw	1140
    97  000D23  4244               	dw	16964
    98  000D25  9BF9               	dw	39929
    99  000D27  414F               	dw	16719
   100  000D29  0000               	dw	0
   101  000D2B  3F80               	dw	16256
   102  000D2D                     __end_ofatan@coeff_b:
   103                           	opt stack 0
   104  0000                     _RXB1CON	set	3920
   105  0000                     _RXB1CONbits	set	3920
   106  0000                     _RXB1D0	set	3926
   107  0000                     _RXB1D1	set	3927
   108  0000                     _RXB1D2	set	3928
   109  0000                     _RXB1D3	set	3929
   110  0000                     _RXB1D4	set	3930
   111  0000                     _RXB1D5	set	3931
   112  0000                     _RXB1D6	set	3932
   113  0000                     _RXB1D7	set	3933
   114  0000                     _RXB1DLC	set	3925
   115  0000                     _RXB1DLCbits	set	3925
   116  0000                     _RXB1EIDH	set	3923
   117  0000                     _RXB1EIDL	set	3924
   118  0000                     _RXB1SIDH	set	3921
   119  0000                     _RXB1SIDL	set	3922
   120  0000                     _RXB1SIDLbits	set	3922
   121  0000                     _RXF0EIDH	set	3842
   122  0000                     _RXF0EIDL	set	3843
   123  0000                     _RXF0SIDH	set	3840
   124  0000                     _RXF0SIDL	set	3841
   125  0000                     _RXF0SIDLbits	set	3841
   126  0000                     _RXF1EIDH	set	3846
   127  0000                     _RXF1EIDL	set	3847
   128  0000                     _RXF1SIDH	set	3844
   129  0000                     _RXF1SIDL	set	3845
   130  0000                     _RXF1SIDLbits	set	3845
   131  0000                     _RXF2EIDH	set	3850
   132  0000                     _RXF2EIDL	set	3851
   133  0000                     _RXF2SIDH	set	3848
   134  0000                     _RXF2SIDL	set	3849
   135  0000                     _RXF2SIDLbits	set	3849
   136  0000                     _RXF3EIDH	set	3854
   137  0000                     _RXF3EIDL	set	3855
   138  0000                     _RXF3SIDH	set	3852
   139  0000                     _RXF3SIDL	set	3853
   140  0000                     _RXF3SIDLbits	set	3853
   141  0000                     _RXF4EIDH	set	3858
   142  0000                     _RXF4EIDL	set	3859
   143  0000                     _RXF4SIDH	set	3856
   144  0000                     _RXF4SIDL	set	3857
   145  0000                     _RXF4SIDLbits	set	3857
   146  0000                     _RXF5EIDH	set	3862
   147  0000                     _RXF5EIDL	set	3863
   148  0000                     _RXF5SIDH	set	3860
   149  0000                     _RXF5SIDL	set	3861
   150  0000                     _RXF5SIDLbits	set	3861
   151  0000                     _RXM0EIDH	set	3866
   152  0000                     _RXM0EIDL	set	3867
   153  0000                     _RXM0SIDH	set	3864
   154  0000                     _RXM0SIDL	set	3865
   155  0000                     _RXM0SIDLbits	set	3865
   156  0000                     _RXM1EIDH	set	3870
   157  0000                     _RXM1EIDL	set	3871
   158  0000                     _RXM1SIDH	set	3868
   159  0000                     _RXM1SIDL	set	3869
   160  0000                     _RXM1SIDLbits	set	3869
   161  0000                     _TXB0CONbits	set	3904
   162  0000                     _TXB0D0	set	3910
   163  0000                     _TXB0D1	set	3911
   164  0000                     _TXB0D2	set	3912
   165  0000                     _TXB0D3	set	3913
   166  0000                     _TXB0D4	set	3914
   167  0000                     _TXB0D5	set	3915
   168  0000                     _TXB0D6	set	3916
   169  0000                     _TXB0D7	set	3917
   170  0000                     _TXB0DLC	set	3909
   171  0000                     _TXB0DLCbits	set	3909
   172  0000                     _TXB0EIDH	set	3907
   173  0000                     _TXB0EIDL	set	3908
   174  0000                     _TXB0SIDH	set	3905
   175  0000                     _TXB0SIDL	set	3906
   176  0000                     _TXB0SIDLbits	set	3906
   177  0000                     _TXB1CONbits	set	3888
   178  0000                     _TXB1D0	set	3894
   179  0000                     _TXB1D1	set	3895
   180  0000                     _TXB1D2	set	3896
   181  0000                     _TXB1D3	set	3897
   182  0000                     _TXB1D4	set	3898
   183  0000                     _TXB1D5	set	3899
   184  0000                     _TXB1D6	set	3900
   185  0000                     _TXB1D7	set	3901
   186  0000                     _TXB1DLC	set	3893
   187  0000                     _TXB1DLCbits	set	3893
   188  0000                     _TXB1EIDH	set	3891
   189  0000                     _TXB1EIDL	set	3892
   190  0000                     _TXB1SIDH	set	3889
   191  0000                     _TXB1SIDL	set	3890
   192  0000                     _TXB1SIDLbits	set	3890
   193  0000                     _TXB2CONbits	set	3872
   194  0000                     _TXB2D0	set	3878
   195  0000                     _TXB2D1	set	3879
   196  0000                     _TXB2D2	set	3880
   197  0000                     _TXB2D3	set	3881
   198  0000                     _TXB2D4	set	3882
   199  0000                     _TXB2D5	set	3883
   200  0000                     _TXB2D6	set	3884
   201  0000                     _TXB2D7	set	3885
   202  0000                     _TXB2DLC	set	3877
   203  0000                     _TXB2DLCbits	set	3877
   204  0000                     _TXB2EIDH	set	3875
   205  0000                     _TXB2EIDL	set	3876
   206  0000                     _TXB2SIDH	set	3873
   207  0000                     _TXB2SIDL	set	3874
   208  0000                     _TXB2SIDLbits	set	3874
   209  0000                     _ADCON1	set	4033
   210  0000                     _BRGCON1	set	3952
   211  0000                     _BRGCON2	set	3953
   212  0000                     _BRGCON2bits	set	3953
   213  0000                     _BRGCON3	set	3954
   214  0000                     _BRGCON3bits	set	3954
   215  0000                     _CANCON	set	3951
   216  0000                     _CANCONbits	set	3951
   217  0000                     _CANSTAT	set	3950
   218  0000                     _COMSTATbits	set	3956
   219  0000                     _INTCON2bits	set	4081
   220  0000                     _INTCONbits	set	4082
   221  0000                     _IPR3bits	set	4005
   222  0000                     _LATA	set	3977
   223  0000                     _LATB	set	3978
   224  0000                     _LATBbits	set	3978
   225  0000                     _LATC	set	3979
   226  0000                     _PIE3bits	set	4003
   227  0000                     _PIR3bits	set	4004
   228  0000                     _PORTA	set	3968
   229  0000                     _PORTBbits	set	3969
   230  0000                     _RCONbits	set	4048
   231  0000                     _RXB0CON	set	3936
   232  0000                     _RXB0CONbits	set	3936
   233  0000                     _RXB0D0	set	3942
   234  0000                     _RXB0D1	set	3943
   235  0000                     _RXB0D2	set	3944
   236  0000                     _RXB0D3	set	3945
   237  0000                     _RXB0D4	set	3946
   238  0000                     _RXB0D5	set	3947
   239  0000                     _RXB0D6	set	3948
   240  0000                     _RXB0D7	set	3949
   241  0000                     _RXB0DLC	set	3941
   242  0000                     _RXB0DLCbits	set	3941
   243  0000                     _RXB0EIDH	set	3939
   244  0000                     _RXB0EIDL	set	3940
   245  0000                     _RXB0SIDH	set	3937
   246  0000                     _RXB0SIDL	set	3938
   247  0000                     _RXB0SIDLbits	set	3938
   248  0000                     _RXERRCNT	set	3957
   249  0000                     _T0CON	set	4053
   250  0000                     _T3CON	set	4017
   251  0000                     _TMR0H	set	4055
   252  0000                     _TMR0L	set	4054
   253  0000                     _TMR3H	set	4019
   254  0000                     _TMR3L	set	4018
   255  0000                     _TRISA	set	3986
   256  0000                     _TRISB	set	3987
   257  0000                     _TRISBbits	set	3987
   258  0000                     _TRISC	set	3988
   259  0000                     _TXERRCNT	set	3958
   260                           
   261                           ; #config settings
   262  000D2D  00                 	db	0	; dummy byte at the end
   263  0000                     
   264                           	psect	cinit
   265  004D8C                     __pcinit:
   266                           	opt stack 0
   267  004D8C                     start_initialization:
   268                           	opt stack 0
   269  004D8C                     __initialization:
   270                           	opt stack 0
   271                           
   272                           ; Clear objects allocated to BANK1 (87 bytes)
   273  004D8C  EE01  F000         	lfsr	0,__pbssBANK1
   274  004D90  0E57               	movlw	87
   275  004D92                     clear_0:
   276  004D92  6AEE               	clrf	postinc0,c
   277  004D94  06E8               	decf	wreg,f,c
   278  004D96  E1FD               	bnz	clear_0
   279                           
   280                           ; Clear objects allocated to BANK0 (20 bytes)
   281  004D98  EE00  F0D3         	lfsr	0,__pbssBANK0
   282  004D9C  0E14               	movlw	20
   283  004D9E                     clear_1:
   284  004D9E  6AEE               	clrf	postinc0,c
   285  004DA0  06E8               	decf	wreg,f,c
   286  004DA2  E1FD               	bnz	clear_1
   287                           
   288                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   289  004DA4  6A45               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   290  004DA6  6A44               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   291                           
   292                           ; Clear objects allocated to COMRAM (32 bytes)
   293  004DA8  EE00  F024         	lfsr	0,__pbssCOMRAM
   294  004DAC  0E20               	movlw	32
   295  004DAE                     clear_2:
   296  004DAE  6AEE               	clrf	postinc0,c
   297  004DB0  06E8               	decf	wreg,f,c
   298  004DB2  E1FD               	bnz	clear_2
   299                           
   300                           ; Initialize objects allocated to BANK0 (1 bytes)
   301                           ; load TBLPTR registers with __pidataBANK0
   302  004DB4  0E02               	movlw	low __pidataBANK0
   303  004DB6  6EF6               	movwf	tblptrl,c
   304  004DB8  0E50               	movlw	high __pidataBANK0
   305  004DBA  6EF7               	movwf	tblptrh,c
   306  004DBC  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   307  004DBE  6EF8               	movwf	tblptru,c
   308  004DC0  0009               	tblrd		*+	;fetch initializer
   309  004DC2  CFF5 F0E7          	movff	tablat,__pdataBANK0
   310                           
   311                           ; Initialize objects allocated to COMRAM (2 bytes)
   312                           ; load TBLPTR registers with __pidataCOMRAM
   313  004DC6  0E00               	movlw	low __pidataCOMRAM
   314  004DC8  6EF6               	movwf	tblptrl,c
   315  004DCA  0E50               	movlw	high __pidataCOMRAM
   316  004DCC  6EF7               	movwf	tblptrh,c
   317  004DCE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   318  004DD0  6EF8               	movwf	tblptru,c
   319  004DD2  0009               	tblrd		*+	;fetch initializer
   320  004DD4  CFF5 F046          	movff	tablat,__pdataCOMRAM
   321  004DD8  0009               	tblrd		*+	;fetch initializer
   322  004DDA  CFF5 F047          	movff	tablat,__pdataCOMRAM+1
   323  004DDE                     end_of_initialization:
   324                           	opt stack 0
   325  004DDE                     __end_of__initialization:
   326                           	opt stack 0
   327  004DDE  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   328  004DE0  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   329  004DE2  0100               	movlb	0
   330  004DE4  EF1E  F027         	goto	_main	;jump to C main() function
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           wreg	equ	0xFE8
   337                           
   338                           	psect	bitbssCOMRAM
   339  000220                     __pbitbssCOMRAM:
   340                           	opt stack 0
   341  000220                     _activation:
   342                           	opt stack 0
   343  000220                     	ds	1
   344  000221                     _asd:
   345                           	opt stack 0
   346  000221                     	ds	1
   347  000222                     _dir:
   348                           	opt stack 0
   349  000222                     	ds	1
   350  000223                     _distance_error:
   351                           	opt stack 0
   352  000223                     	ds	1
   353  000224                     _distance_received:
   354                           	opt stack 0
   355  000224                     	ds	1
   356  000225                     _distance_wait:
   357                           	opt stack 0
   358  000225                     	ds	1
   359  000226                     _old_data_correction:
   360                           	opt stack 0
   361  000226                     	ds	1
   362  000227                     _request_sent:
   363                           	opt stack 0
   364  000227                     	ds	1
   365  000228                     _start_operation:
   366                           	opt stack 0
   367  000228                     	ds	1
   368  000229                     _steering_correction_dir:
   369                           	opt stack 0
   370  000229                     	ds	1
   371                           tblptru	equ	0xFF8
   372                           tblptrh	equ	0xFF7
   373                           tblptrl	equ	0xFF6
   374                           tablat	equ	0xFF5
   375                           postinc0	equ	0xFEE
   376                           wreg	equ	0xFE8
   377                           
   378                           	psect	bssCOMRAM
   379  000024                     __pbssCOMRAM:
   380                           	opt stack 0
   381  000024                     _sensor_distance:
   382                           	opt stack 0
   383  000024                     	ds	16
   384  000034                     _distance_dx:
   385                           	opt stack 0
   386  000034                     	ds	2
   387  000036                     _distance_sx:
   388                           	opt stack 0
   389  000036                     	ds	2
   390  000038                     _left_speed:
   391                           	opt stack 0
   392  000038                     	ds	2
   393  00003A                     _pulse_time:
   394                           	opt stack 0
   395  00003A                     	ds	2
   396  00003C                     _right_speed:
   397                           	opt stack 0
   398  00003C                     	ds	2
   399  00003E                     _timerValue2:
   400                           	opt stack 0
   401  00003E                     	ds	2
   402  000040                     _MUX_index:
   403                           	opt stack 0
   404  000040                     	ds	1
   405  000041                     _asus:
   406                           	opt stack 0
   407  000041                     	ds	1
   408  000042                     _gianni:
   409                           	opt stack 0
   410  000042                     	ds	1
   411  000043                     _steering_correction:
   412                           	opt stack 0
   413  000043                     	ds	1
   414                           tblptru	equ	0xFF8
   415                           tblptrh	equ	0xFF7
   416                           tblptrl	equ	0xFF6
   417                           tablat	equ	0xFF5
   418                           postinc0	equ	0xFEE
   419                           wreg	equ	0xFE8
   420                           
   421                           	psect	dataCOMRAM
   422  000046                     __pdataCOMRAM:
   423                           	opt stack 0
   424  000046                     _spazio_parcheggio:
   425                           	opt stack 0
   426  000046                     	ds	2
   427                           tblptru	equ	0xFF8
   428                           tblptrh	equ	0xFF7
   429                           tblptrl	equ	0xFF6
   430                           tablat	equ	0xFF5
   431                           postinc0	equ	0xFEE
   432                           wreg	equ	0xFE8
   433                           
   434                           	psect	bssBANK0
   435  0000D3                     __pbssBANK0:
   436                           	opt stack 0
   437  0000D3                     _alignment_gap:
   438                           	opt stack 0
   439  0000D3                     	ds	4
   440  0000D7                     _x:
   441                           	opt stack 0
   442  0000D7                     	ds	4
   443  0000DB                     _z:
   444                           	opt stack 0
   445  0000DB                     	ds	4
   446  0000DF                     _actual_speed:
   447                           	opt stack 0
   448  0000DF                     	ds	2
   449  0000E1                     _clock_counter_reference:
   450                           	opt stack 0
   451  0000E1                     	ds	2
   452  0000E3                     _distance_average:
   453                           	opt stack 0
   454  0000E3                     	ds	2
   455  0000E5                     _set_speed:
   456                           	opt stack 0
   457  0000E5                     	ds	2
   458                           tblptru	equ	0xFF8
   459                           tblptrh	equ	0xFF7
   460                           tblptrl	equ	0xFF6
   461                           tablat	equ	0xFF5
   462                           postinc0	equ	0xFEE
   463                           wreg	equ	0xFE8
   464                           
   465                           	psect	dataBANK0
   466  0000E7                     __pdataBANK0:
   467                           	opt stack 0
   468  0000E7                     _delay_quartz_frequency_value:
   469                           	opt stack 0
   470  0000E7                     	ds	1
   471                           tblptru	equ	0xFF8
   472                           tblptrh	equ	0xFF7
   473                           tblptrl	equ	0xFF6
   474                           tablat	equ	0xFF5
   475                           postinc0	equ	0xFEE
   476                           wreg	equ	0xFE8
   477                           
   478                           	psect	bssBANK1
   479  000100                     __pbssBANK1:
   480                           	opt stack 0
   481  000100                     _MUX_select:
   482                           	opt stack 0
   483  000100                     	ds	8
   484  000108                     _data_speed_rx:
   485                           	opt stack 0
   486  000108                     	ds	8
   487  000110                     _distance_set:
   488                           	opt stack 0
   489  000110                     	ds	8
   490  000118                     _old_alignment_gap:
   491                           	opt stack 0
   492  000118                     	ds	4
   493  00011C                     _distance:
   494                           	opt stack 0
   495  00011C                     	ds	2
   496  00011E                     _errno:
   497                           	opt stack 0
   498  00011E                     	ds	2
   499  000120                     _msg:
   500                           	opt stack 0
   501  000120                     	ds	15
   502  00012F                     _data:
   503                           	opt stack 0
   504  00012F                     	ds	8
   505  000137                     _data_brake:
   506                           	opt stack 0
   507  000137                     	ds	8
   508  00013F                     _data_correction:
   509                           	opt stack 0
   510  00013F                     	ds	8
   511  000147                     _data_speed:
   512                           	opt stack 0
   513  000147                     	ds	8
   514  00014F                     _data_steering:
   515                           	opt stack 0
   516  00014F                     	ds	8
   517                           tblptru	equ	0xFF8
   518                           tblptrh	equ	0xFF7
   519                           tblptrl	equ	0xFF6
   520                           tablat	equ	0xFF5
   521                           postinc0	equ	0xFEE
   522                           wreg	equ	0xFE8
   523                           
   524                           	psect	cstackBANK1
   525  000157                     __pcstackBANK1:
   526                           	opt stack 0
   527  000157                     ?_atan:
   528                           	opt stack 0
   529  000157                     sqrt@sign:
   530                           	opt stack 0
   531  000157                     atan@f:
   532                           	opt stack 0
   533                           
   534                           ; 4 bytes @ 0x0
   535  000157                     	ds	1
   536  000158                     sqrt@i:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x1
   540  000158                     	ds	1
   541  000159                     sqrt@tfrac:
   542                           	opt stack 0
   543                           
   544                           ; 4 bytes @ 0x2
   545  000159                     	ds	2
   546  00015B                     atan@y:
   547                           	opt stack 0
   548                           
   549                           ; 4 bytes @ 0x4
   550  00015B                     	ds	2
   551  00015D                     sqrt@p:
   552                           	opt stack 0
   553                           
   554                           ; 1 bytes @ 0x6
   555  00015D                     	ds	1
   556  00015E                     sqrt@grs:
   557                           	opt stack 0
   558                           
   559                           ; 4 bytes @ 0x7
   560  00015E                     	ds	1
   561  00015F                     atan@x:
   562                           	opt stack 0
   563                           
   564                           ; 4 bytes @ 0x8
   565  00015F                     	ds	3
   566  000162                     sqrt@exp:
   567                           	opt stack 0
   568                           
   569                           ; 2 bytes @ 0xB
   570  000162                     	ds	1
   571  000163                     atan@recip:
   572                           	opt stack 0
   573                           
   574                           ; 1 bytes @ 0xC
   575  000163                     	ds	1
   576  000164                     atan@val_squared:
   577                           	opt stack 0
   578  000164                     sqrt@root:
   579                           	opt stack 0
   580                           
   581                           ; 4 bytes @ 0xD
   582  000164                     	ds	4
   583  000168                     atan@val:
   584                           	opt stack 0
   585  000168                     sqrt@frac:
   586                           	opt stack 0
   587                           
   588                           ; 4 bytes @ 0x11
   589  000168                     	ds	4
   590  00016C                     ?_asin:
   591                           	opt stack 0
   592  00016C                     asin@x:
   593                           	opt stack 0
   594                           
   595                           ; 4 bytes @ 0x15
   596  00016C                     	ds	4
   597  000170                     asin@sgn:
   598                           	opt stack 0
   599                           
   600                           ; 4 bytes @ 0x19
   601  000170                     	ds	4
   602  000174                     _asin$3625:
   603                           	opt stack 0
   604                           
   605                           ; 4 bytes @ 0x1D
   606  000174                     	ds	4
   607  000178                     _asin$3624:
   608                           	opt stack 0
   609                           
   610                           ; 4 bytes @ 0x21
   611  000178                     	ds	4
   612  00017C                     asin@y:
   613                           	opt stack 0
   614                           
   615                           ; 4 bytes @ 0x25
   616  00017C                     	ds	4
   617  000180                     _asin$3623:
   618                           	opt stack 0
   619                           
   620                           ; 4 bytes @ 0x29
   621  000180                     	ds	4
   622  000184                     ??_park_search:
   623                           
   624                           ; 0 bytes @ 0x2D
   625  000184                     	ds	2
   626                           tblptru	equ	0xFF8
   627                           tblptrh	equ	0xFF7
   628                           tblptrl	equ	0xFF6
   629                           tablat	equ	0xFF5
   630                           postinc0	equ	0xFEE
   631                           wreg	equ	0xFE8
   632                           
   633                           	psect	cstackBANK0
   634  000060                     __pcstackBANK0:
   635                           	opt stack 0
   636  000060                     ?___lwdiv:
   637                           	opt stack 0
   638  000060                     ___lwdiv@dividend:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x0
   642  000060                     	ds	2
   643  000062                     ___lwdiv@divisor:
   644                           	opt stack 0
   645                           
   646                           ; 2 bytes @ 0x2
   647  000062                     	ds	2
   648  000064                     ___lwdiv@counter:
   649                           	opt stack 0
   650                           
   651                           ; 1 bytes @ 0x4
   652  000064                     	ds	1
   653  000065                     ___lwdiv@quotient:
   654                           	opt stack 0
   655                           
   656                           ; 2 bytes @ 0x5
   657  000065                     	ds	2
   658  000067                     ??_ISR_Alta:
   659                           
   660                           ; 0 bytes @ 0x7
   661  000067                     	ds	16
   662  000077                     ??_can_interpreter:
   663  000077                     ?_abs:
   664                           	opt stack 0
   665  000077                     ?___wmul:
   666                           	opt stack 0
   667  000077                     ?___fldiv:
   668                           	opt stack 0
   669  000077                     ?___fltol:
   670                           	opt stack 0
   671  000077                     CANOperationMode@mode:
   672                           	opt stack 0
   673  000077                     _CANisTxReady$2808:
   674                           	opt stack 0
   675  000077                     ___wmul@multiplier:
   676                           	opt stack 0
   677  000077                     abs@a:
   678                           	opt stack 0
   679  000077                     CANsendMessage@identifier:
   680                           	opt stack 0
   681  000077                     CANSetMask@mask:
   682                           	opt stack 0
   683  000077                     CANSetFilter@filter:
   684                           	opt stack 0
   685  000077                     ___fltol@f1:
   686                           	opt stack 0
   687  000077                     ___fldiv@b:
   688                           	opt stack 0
   689                           
   690                           ; 4 bytes @ 0x17
   691  000077                     	ds	2
   692  000079                     ??_abs:
   693  000079                     ___wmul@multiplicand:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x19
   697  000079                     	ds	2
   698  00007B                     ??___fltol:
   699  00007B                     ?___xxtofl:
   700                           	opt stack 0
   701  00007B                     CANSetMask@type:
   702                           	opt stack 0
   703  00007B                     CANSetFilter@type:
   704                           	opt stack 0
   705  00007B                     CANsendMessage@data:
   706                           	opt stack 0
   707  00007B                     ___wmul@product:
   708                           	opt stack 0
   709  00007B                     ___fldiv@a:
   710                           	opt stack 0
   711  00007B                     ___xxtofl@val:
   712                           	opt stack 0
   713                           
   714                           ; 4 bytes @ 0x1B
   715  00007B                     	ds	1
   716  00007C                     ??_CANSetMask:
   717  00007C                     ??_CANSetFilter:
   718                           
   719                           ; 0 bytes @ 0x1C
   720  00007C                     	ds	1
   721  00007D                     CANsendMessage@dataLength:
   722                           	opt stack 0
   723  00007D                     delay_ms@value_ms:
   724                           	opt stack 0
   725                           
   726                           ; 2 bytes @ 0x1D
   727  00007D                     	ds	1
   728  00007E                     CANsendMessage@flags:
   729                           	opt stack 0
   730                           
   731                           ; 1 bytes @ 0x1E
   732  00007E                     	ds	1
   733  00007F                     ??___fldiv:
   734  00007F                     ??_CANsendMessage:
   735  00007F                     ??___xxtofl:
   736  00007F                     delay_s@value_s:
   737                           	opt stack 0
   738  00007F                     ___fltol@sign1:
   739                           	opt stack 0
   740                           
   741                           ; 1 bytes @ 0x1F
   742  00007F                     	ds	1
   743  000080                     CANSetMask@numBuffer:
   744                           	opt stack 0
   745  000080                     CANSetFilter@numBuffer:
   746                           	opt stack 0
   747  000080                     delay_s@repeat_loop:
   748                           	opt stack 0
   749  000080                     ___fltol@exp1:
   750                           	opt stack 0
   751                           
   752                           ; 1 bytes @ 0x20
   753  000080                     	ds	1
   754  000081                     CANSetMask@tamp:
   755                           	opt stack 0
   756  000081                     CANSetFilter@tamp:
   757                           	opt stack 0
   758                           
   759                           ; 4 bytes @ 0x21
   760  000081                     	ds	2
   761  000083                     ___fldiv@sign:
   762                           	opt stack 0
   763  000083                     ___xxtofl@sign:
   764                           	opt stack 0
   765  000083                     CANsendMessage@tamp:
   766                           	opt stack 0
   767                           
   768                           ; 4 bytes @ 0x23
   769  000083                     	ds	1
   770  000084                     ___xxtofl@exp:
   771                           	opt stack 0
   772  000084                     ___fldiv@rem:
   773                           	opt stack 0
   774                           
   775                           ; 4 bytes @ 0x24
   776  000084                     	ds	1
   777  000085                     CANInitialize@phaseSeg1:
   778                           	opt stack 0
   779  000085                     ___xxtofl@arg:
   780                           	opt stack 0
   781                           
   782                           ; 4 bytes @ 0x25
   783  000085                     	ds	1
   784  000086                     CANInitialize@phaseSeg2:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0x26
   788  000086                     	ds	1
   789  000087                     can_send@data_correction1:
   790                           	opt stack 0
   791  000087                     CANInitialize@SJW:
   792                           	opt stack 0
   793  000087                     park_routine@data_test:
   794                           	opt stack 0
   795                           
   796                           ; 8 bytes @ 0x27
   797  000087                     	ds	1
   798  000088                     CANInitialize@BRP:
   799                           	opt stack 0
   800  000088                     ___fldiv@new_exp:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0x28
   804  000088                     	ds	1
   805  000089                     CANInitialize@flags:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0x29
   809  000089                     	ds	1
   810  00008A                     ??_CANInitialize:
   811  00008A                     ___fldiv@grs:
   812                           	opt stack 0
   813                           
   814                           ; 4 bytes @ 0x2A
   815  00008A                     	ds	4
   816  00008E                     CANInitialize@propSeg:
   817                           	opt stack 0
   818  00008E                     ___fldiv@bexp:
   819                           	opt stack 0
   820                           
   821                           ; 1 bytes @ 0x2E
   822  00008E                     	ds	1
   823  00008F                     CANInitialize@FilterConfig1:
   824                           	opt stack 0
   825  00008F                     ___fldiv@aexp:
   826                           	opt stack 0
   827                           
   828                           ; 1 bytes @ 0x2F
   829  00008F                     	ds	1
   830  000090                     ?___flmul:
   831                           	opt stack 0
   832  000090                     CANInitialize@FilterConfig2:
   833                           	opt stack 0
   834  000090                     ___flmul@b:
   835                           	opt stack 0
   836                           
   837                           ; 4 bytes @ 0x30
   838  000090                     	ds	1
   839  000091                     
   840                           ; 0 bytes @ 0x31
   841  000091                     	ds	3
   842  000094                     ___flmul@a:
   843                           	opt stack 0
   844                           
   845                           ; 4 bytes @ 0x34
   846  000094                     	ds	4
   847  000098                     ??___flmul:
   848                           
   849                           ; 0 bytes @ 0x38
   850  000098                     	ds	4
   851  00009C                     ___flmul@sign:
   852                           	opt stack 0
   853                           
   854                           ; 1 bytes @ 0x3C
   855  00009C                     	ds	1
   856  00009D                     ___flmul@aexp:
   857                           	opt stack 0
   858                           
   859                           ; 1 bytes @ 0x3D
   860  00009D                     	ds	1
   861  00009E                     ___flmul@grs:
   862                           	opt stack 0
   863                           
   864                           ; 4 bytes @ 0x3E
   865  00009E                     	ds	4
   866  0000A2                     ___flmul@bexp:
   867                           	opt stack 0
   868                           
   869                           ; 1 bytes @ 0x42
   870  0000A2                     	ds	1
   871  0000A3                     ___flmul@prod:
   872                           	opt stack 0
   873                           
   874                           ; 4 bytes @ 0x43
   875  0000A3                     	ds	4
   876  0000A7                     ___flmul@temp:
   877                           	opt stack 0
   878                           
   879                           ; 2 bytes @ 0x47
   880  0000A7                     	ds	2
   881  0000A9                     ?___flneg:
   882                           	opt stack 0
   883  0000A9                     ___flneg@f1:
   884                           	opt stack 0
   885                           
   886                           ; 4 bytes @ 0x49
   887  0000A9                     	ds	4
   888  0000AD                     ?___fladd:
   889                           	opt stack 0
   890  0000AD                     ?_fabs:
   891                           	opt stack 0
   892  0000AD                     fabs@d:
   893                           	opt stack 0
   894  0000AD                     ___fladd@b:
   895                           	opt stack 0
   896                           
   897                           ; 4 bytes @ 0x4D
   898  0000AD                     	ds	4
   899  0000B1                     ___flge@ff1:
   900                           	opt stack 0
   901  0000B1                     ___fladd@a:
   902                           	opt stack 0
   903                           
   904                           ; 4 bytes @ 0x51
   905  0000B1                     	ds	4
   906  0000B5                     ??___fladd:
   907  0000B5                     ___flge@ff2:
   908                           	opt stack 0
   909                           
   910                           ; 4 bytes @ 0x55
   911  0000B5                     	ds	4
   912  0000B9                     ??___flge:
   913                           
   914                           ; 0 bytes @ 0x59
   915  0000B9                     	ds	4
   916  0000BD                     ___fladd@signs:
   917                           	opt stack 0
   918                           
   919                           ; 1 bytes @ 0x5D
   920  0000BD                     	ds	1
   921  0000BE                     ___fladd@aexp:
   922                           	opt stack 0
   923                           
   924                           ; 1 bytes @ 0x5E
   925  0000BE                     	ds	1
   926  0000BF                     ___fladd@bexp:
   927                           	opt stack 0
   928                           
   929                           ; 1 bytes @ 0x5F
   930  0000BF                     	ds	1
   931  0000C0                     ___fladd@grs:
   932                           	opt stack 0
   933                           
   934                           ; 1 bytes @ 0x60
   935  0000C0                     	ds	1
   936  0000C1                     ?_sqrt:
   937                           	opt stack 0
   938  0000C1                     ?_eval_poly:
   939                           	opt stack 0
   940  0000C1                     eval_poly@x:
   941                           	opt stack 0
   942  0000C1                     sqrt@a:
   943                           	opt stack 0
   944                           
   945                           ; 4 bytes @ 0x61
   946  0000C1                     	ds	4
   947  0000C5                     ??_sqrt:
   948  0000C5                     eval_poly@d:
   949                           	opt stack 0
   950                           
   951                           ; 2 bytes @ 0x65
   952  0000C5                     	ds	2
   953  0000C7                     eval_poly@n:
   954                           	opt stack 0
   955                           
   956                           ; 2 bytes @ 0x67
   957  0000C7                     	ds	2
   958  0000C9                     ??_eval_poly:
   959                           
   960                           ; 0 bytes @ 0x69
   961  0000C9                     	ds	4
   962  0000CD                     eval_poly@res:
   963                           	opt stack 0
   964                           
   965                           ; 4 bytes @ 0x6D
   966  0000CD                     	ds	4
   967  0000D1                     ??_parallelo:
   968  0000D1                     
   969                           ; 0 bytes @ 0x71
   970  0000D1                     	ds	2
   971  0000D3                     tblptru	equ	0xFF8
   972                           tblptrh	equ	0xFF7
   973                           tblptrl	equ	0xFF6
   974                           tablat	equ	0xFF5
   975                           postinc0	equ	0xFEE
   976                           wreg	equ	0xFE8
   977                           
   978                           ; 0 bytes @ 0x73
   979                           
   980                           	psect	cstackCOMRAM
   981  000001                     __pcstackCOMRAM:
   982                           	opt stack 0
   983  000001                     CANreceiveMessage@msg:
   984                           	opt stack 0
   985                           
   986                           ; 2 bytes @ 0x0
   987  000001                     	ds	2
   988  000003                     ??_CANreceiveMessage:
   989                           
   990                           ; 0 bytes @ 0x2
   991  000003                     	ds	8
   992  00000B                     CANreceiveMessage@error:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0xA
   996  00000B                     	ds	1
   997  00000C                     CANreceiveMessage@tamp:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0xB
  1001  00000C                     	ds	1
  1002  00000D                     ??_ISR_Bassa:
  1003                           
  1004                           ; 0 bytes @ 0xC
  1005  00000D                     	ds	21
  1006  000022                     ISR_Bassa@gigi:
  1007                           	opt stack 0
  1008                           
  1009                           ; 1 bytes @ 0x21
  1010  000022                     	ds	1
  1011  000023                     ISR_Bassa@i:
  1012                           	opt stack 0
  1013                           
  1014                           ; 1 bytes @ 0x22
  1015  000023                     	ds	1
  1016                           tblptru	equ	0xFF8
  1017                           tblptrh	equ	0xFF7
  1018                           tblptrl	equ	0xFF6
  1019                           tablat	equ	0xFF5
  1020                           postinc0	equ	0xFEE
  1021                           wreg	equ	0xFE8
  1022                           
  1023 ;;
  1024 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1025 ;;
  1026 ;; *************** function _main *****************
  1027 ;; Defined at:
  1028 ;;		line 166 in file "parcheggio.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;		None
  1033 ;; Return value:  Size  Location     Type
  1034 ;;		None               void
  1035 ;; Registers used:
  1036 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : 0/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1046 ;;Total ram usage:        0 bytes
  1047 ;; Hardware stack levels required when called:   10
  1048 ;; This function calls:
  1049 ;;		_can_interpreter
  1050 ;;		_configurazione
  1051 ;;		_park_routine
  1052 ;;		_park_search
  1053 ;; This function is called by:
  1054 ;;		Startup code after reset
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text0
  1059  004E3C                     __ptext0:
  1060                           	opt stack 0
  1061  004E3C                     _main:
  1062                           	opt stack 21
  1063                           
  1064                           ;parcheggio.c: 167: configurazione();
  1065                           
  1066                           ; BSR set to: 15
  1067                           ;incstack = 0
  1068  004E3C  EC90  F026         	call	_configurazione	;wreg free
  1069                           
  1070                           ;parcheggio.c: 168: MUX_select[0] = 0b00000000;
  1071  004E40  0E00               	movlw	0
  1072  004E42  0101               	movlb	1	; () banked
  1073  004E44  6F00               	movwf	_MUX_select& (0+255),b
  1074                           
  1075                           ; BSR set to: 1
  1076                           ;parcheggio.c: 169: MUX_select[1] = 0b00000001;
  1077  004E46  0E01               	movlw	1
  1078  004E48  0101               	movlb	1	; () banked
  1079  004E4A  6F01               	movwf	(_MUX_select+1)& (0+255),b
  1080                           
  1081                           ; BSR set to: 1
  1082                           ;parcheggio.c: 170: MUX_select[2] = 0b00000010;
  1083  004E4C  0E02               	movlw	2
  1084  004E4E  0101               	movlb	1	; () banked
  1085  004E50  6F02               	movwf	(_MUX_select+2)& (0+255),b
  1086                           
  1087                           ; BSR set to: 1
  1088                           ;parcheggio.c: 171: MUX_select[3] = 0b00000011;
  1089  004E52  0E03               	movlw	3
  1090  004E54  0101               	movlb	1	; () banked
  1091  004E56  6F03               	movwf	(_MUX_select+3)& (0+255),b
  1092                           
  1093                           ; BSR set to: 1
  1094                           ;parcheggio.c: 172: MUX_select[4] = 0b00000100;
  1095  004E58  0E04               	movlw	4
  1096  004E5A  0101               	movlb	1	; () banked
  1097  004E5C  6F04               	movwf	(_MUX_select+4)& (0+255),b
  1098                           
  1099                           ; BSR set to: 1
  1100                           ;parcheggio.c: 173: MUX_select[5] = 0b00000101;
  1101  004E5E  0E05               	movlw	5
  1102  004E60  0101               	movlb	1	; () banked
  1103  004E62  6F05               	movwf	(_MUX_select+5)& (0+255),b
  1104                           
  1105                           ; BSR set to: 1
  1106                           ;parcheggio.c: 174: MUX_select[6] = 0b00000110;
  1107  004E64  0E06               	movlw	6
  1108  004E66  0101               	movlb	1	; () banked
  1109  004E68  6F06               	movwf	(_MUX_select+6)& (0+255),b
  1110                           
  1111                           ; BSR set to: 1
  1112                           ;parcheggio.c: 175: MUX_select[7] = 0b00000111;
  1113  004E6A  0E07               	movlw	7
  1114  004E6C  0101               	movlb	1	; () banked
  1115  004E6E  6F07               	movwf	(_MUX_select+7)& (0+255),b
  1116                           
  1117                           ; BSR set to: 1
  1118                           ;parcheggio.c: 177: PORTBbits.RB4 = 0;
  1119  004E70  9881               	bcf	3969,4,c	;volatile
  1120                           
  1121                           ; BSR set to: 1
  1122                           ;parcheggio.c: 178: PORTBbits.RB5 = 0;
  1123  004E72  9A81               	bcf	3969,5,c	;volatile
  1124                           
  1125                           ; BSR set to: 1
  1126                           ;parcheggio.c: 179: PORTBbits.RB6 = 0;
  1127  004E74  9C81               	bcf	3969,6,c	;volatile
  1128                           
  1129                           ; BSR set to: 1
  1130                           ;parcheggio.c: 180: request_sent = 0;
  1131  004E76  9E44               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1132                           
  1133                           ; BSR set to: 1
  1134                           ;parcheggio.c: 181: start_operation = 0;
  1135  004E78  9045               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1136  004E7A                     l6375:
  1137                           
  1138                           ;parcheggio.c: 183: park_search();
  1139  004E7A  EC1E  F023         	call	_park_search	;wreg free
  1140                           
  1141                           ;parcheggio.c: 184: can_interpreter();
  1142  004E7E  ECF4  F026         	call	_can_interpreter	;wreg free
  1143                           
  1144                           ;parcheggio.c: 185: park_routine();
  1145  004E82  ECEB  F025         	call	_park_routine	;wreg free
  1146  004E86  D7F9               	goto	l6375
  1147  004E88                     __end_of_main:
  1148                           	opt stack 0
  1149                           tblptru	equ	0xFF8
  1150                           tblptrh	equ	0xFF7
  1151                           tblptrl	equ	0xFF6
  1152                           tablat	equ	0xFF5
  1153                           postinc0	equ	0xFEE
  1154                           wreg	equ	0xFE8
  1155                           
  1156 ;; *************** function _park_search *****************
  1157 ;; Defined at:
  1158 ;;		line 189 in file "parcheggio.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;		None               void
  1165 ;; Registers used:
  1166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1174 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1175 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1176 ;;Total ram usage:        2 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; Hardware stack levels required when called:    9
  1179 ;; This function calls:
  1180 ;;		_CANisTxReady
  1181 ;;		_CANsendMessage
  1182 ;;		___xxtofl
  1183 ;;		_abs
  1184 ;;		_parallelo
  1185 ;; This function is called by:
  1186 ;;		_main
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           	psect	text1
  1191  00463C                     __ptext1:
  1192                           	opt stack 0
  1193  00463C                     _park_search:
  1194                           	opt stack 21
  1195                           
  1196                           ;parcheggio.c: 190: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1197                           
  1198                           ;incstack = 0
  1199  00463C  D0AD               	goto	l686
  1200  00463E                     l6263:
  1201                           
  1202                           ;parcheggio.c: 191: parallelo();
  1203  00463E  EC2A  F01E         	call	_parallelo	;wreg free
  1204                           
  1205                           ;parcheggio.c: 192: if (sensor_distance[0] > 50) {
  1206  004642  5025               	movf	_sensor_distance+1,w,c	;volatile
  1207  004644  E104               	bnz	u8070
  1208  004646  0E33               	movlw	51
  1209  004648  5C24               	subwf	_sensor_distance,w,c	;volatile
  1210  00464A  A0D8               	btfss	status,0,c
  1211  00464C  D02A               	goto	l6281
  1212  00464E                     u8070:
  1213                           
  1214                           ;parcheggio.c: 193: if (request_sent == 0) {
  1215  00464E  BE44               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1216  004650  D056               	goto	l6283
  1217  004652                     l6271:
  1218  004652  ECE3  F027         	call	_CANisTxReady	;wreg free
  1219  004656  0900               	iorlw	0
  1220  004658  B4D8               	btfsc	status,2,c
  1221  00465A  D7FB               	goto	l6271
  1222                           
  1223                           ;parcheggio.c: 195: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1224  00465C  0E08               	movlw	8
  1225  00465E  0100               	movlb	0	; () banked
  1226  004660  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1227  004662  0E00               	movlw	0
  1228  004664  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1229  004666  0E00               	movlw	0
  1230  004668  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1231  00466A  0E00               	movlw	0
  1232  00466C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1233  00466E  0E2F               	movlw	low _data
  1234  004670  0100               	movlb	0	; () banked
  1235  004672  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1236  004674  0E01               	movlw	high _data
  1237  004676  0100               	movlb	0	; () banked
  1238  004678  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1239  00467A  0E08               	movlw	8
  1240  00467C  0100               	movlb	0	; () banked
  1241  00467E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1242  004680  0EFC               	movlw	252
  1243  004682  0100               	movlb	0	; () banked
  1244  004684  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1245  004686  EC1A  F00C         	call	_CANsendMessage	;wreg free
  1246                           
  1247                           ;parcheggio.c: 196: request_sent = 1;
  1248  00468A  8E44               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1249                           
  1250                           ;parcheggio.c: 197: alignment_gap = 0;
  1251  00468C  0E00               	movlw	0
  1252  00468E  0100               	movlb	0	; () banked
  1253  004690  6FD3               	movwf	_alignment_gap& (0+255),b
  1254  004692  0E00               	movlw	0
  1255  004694  6FD4               	movwf	(_alignment_gap+1)& (0+255),b
  1256  004696  0E00               	movlw	0
  1257  004698  6FD5               	movwf	(_alignment_gap+2)& (0+255),b
  1258  00469A  0E00               	movlw	0
  1259  00469C  6FD6               	movwf	(_alignment_gap+3)& (0+255),b
  1260                           
  1261                           ; BSR set to: 0
  1262                           ;parcheggio.c: 198: LATBbits.LATB4 = 1;
  1263  00469E  888A               	bsf	3978,4,c	;volatile
  1264                           
  1265                           ; BSR set to: 0
  1266                           ;parcheggio.c: 199: }
  1267                           ;parcheggio.c: 200: } else {
  1268  0046A0  D02E               	goto	l6283
  1269  0046A2                     l6281:
  1270                           
  1271                           ;parcheggio.c: 201: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1272  0046A2  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1273  0046A6  CFDE F184          	movff	postinc2,??_park_search
  1274  0046AA  CFDD F185          	movff	postdec2,??_park_search+1
  1275  0046AE  0101               	movlb	1	; () banked
  1276  0046B0  1F84               	comf	??_park_search& (0+255),f,b
  1277  0046B2  1F85               	comf	(??_park_search+1)& (0+255),f,b
  1278  0046B4  4B84               	infsnz	??_park_search& (0+255),f,b
  1279  0046B6  2B85               	incf	(??_park_search+1)& (0+255),f,b
  1280  0046B8  5024               	movf	_sensor_distance,w,c	;volatile
  1281  0046BA  0101               	movlb	1	; () banked
  1282  0046BC  2584               	addwf	??_park_search& (0+255),w,b
  1283  0046BE  0100               	movlb	0	; () banked
  1284  0046C0  6F77               	movwf	abs@a& (0+255),b
  1285  0046C2  5025               	movf	_sensor_distance+1,w,c	;volatile
  1286  0046C4  0101               	movlb	1	; () banked
  1287  0046C6  2185               	addwfc	(??_park_search+1)& (0+255),w,b
  1288  0046C8  0100               	movlb	0	; () banked
  1289  0046CA  6F78               	movwf	(abs@a+1)& (0+255),b
  1290  0046CC  ECB7  F027         	call	_abs	;wreg free
  1291  0046D0  0100               	movlb	0	; () banked
  1292  0046D2  C077  F07B         	movff	?_abs,___xxtofl@val
  1293  0046D6  0100               	movlb	0	; () banked
  1294  0046D8  C078  F07C         	movff	?_abs+1,___xxtofl@val+1
  1295  0046DC  0100               	movlb	0	; () banked
  1296  0046DE  0E00               	movlw	0
  1297  0046E0  BF7C               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1298  0046E2  0EFF               	movlw	-1
  1299  0046E4  6F7D               	movwf	(___xxtofl@val+2)& (0+255),b
  1300  0046E6  6F7E               	movwf	(___xxtofl@val+3)& (0+255),b
  1301  0046E8  0E01               	movlw	1
  1302  0046EA  EC8C  F020         	call	___xxtofl
  1303  0046EE  C07B  F0D3         	movff	?___xxtofl,_alignment_gap
  1304  0046F2  C07C  F0D4         	movff	?___xxtofl+1,_alignment_gap+1
  1305  0046F6  C07D  F0D5         	movff	?___xxtofl+2,_alignment_gap+2
  1306  0046FA  C07E  F0D6         	movff	?___xxtofl+3,_alignment_gap+3
  1307  0046FE                     l6283:
  1308                           
  1309                           ;parcheggio.c: 202: }
  1310                           ;parcheggio.c: 203: if ((sensor_distance[0] < 50) && (request_sent == 1)) {
  1311  0046FE  5025               	movf	_sensor_distance+1,w,c	;volatile
  1312  004700  E122               	bnz	l6293
  1313  004702  0E32               	movlw	50
  1314  004704  5C24               	subwf	_sensor_distance,w,c	;volatile
  1315  004706  A0D8               	btfss	status,0,c
  1316  004708  AE44               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1317  00470A  D01D               	goto	l6293
  1318                           
  1319                           ;parcheggio.c: 204: request_sent = 0;
  1320  00470C  9E44               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1321  00470E                     l6289:
  1322  00470E  ECE3  F027         	call	_CANisTxReady	;wreg free
  1323  004712  0900               	iorlw	0
  1324  004714  B4D8               	btfsc	status,2,c
  1325  004716  D7FB               	goto	l6289
  1326                           
  1327                           ;parcheggio.c: 206: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1328  004718  0E07               	movlw	7
  1329  00471A  0100               	movlb	0	; () banked
  1330  00471C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1331  00471E  0E00               	movlw	0
  1332  004720  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1333  004722  0E00               	movlw	0
  1334  004724  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1335  004726  0E00               	movlw	0
  1336  004728  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1337  00472A  0E2F               	movlw	low _data
  1338  00472C  0100               	movlb	0	; () banked
  1339  00472E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1340  004730  0E01               	movlw	high _data
  1341  004732  0100               	movlb	0	; () banked
  1342  004734  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1343  004736  0E08               	movlw	8
  1344  004738  0100               	movlb	0	; () banked
  1345  00473A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1346  00473C  0EFC               	movlw	252
  1347  00473E  0100               	movlb	0	; () banked
  1348  004740  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1349  004742  EC1A  F00C         	call	_CANsendMessage	;wreg free
  1350  004746                     l6293:
  1351                           
  1352                           ;parcheggio.c: 207: }
  1353                           ;parcheggio.c: 208: if (distance_received == 1) {
  1354  004746  A844               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1355  004748  D027               	goto	l686
  1356                           
  1357                           ;parcheggio.c: 209: if (distance_average > 90) {
  1358  00474A  0100               	movlb	0	; () banked
  1359  00474C  51E4               	movf	(_distance_average+1)& (0+255),w,b	;volatile
  1360  00474E  E105               	bnz	u8140
  1361  004750  0E5B               	movlw	91
  1362  004752  0100               	movlb	0	; () banked
  1363  004754  5DE3               	subwf	_distance_average& (0+255),w,b	;volatile
  1364  004756  A0D8               	btfss	status,0,c
  1365  004758  D01D               	goto	l699
  1366  00475A                     u8140:
  1367                           
  1368                           ; BSR set to: 0
  1369                           ;parcheggio.c: 210: PORTBbits.RB5 = 1;
  1370  00475A  8A81               	bsf	3969,5,c	;volatile
  1371                           
  1372                           ; BSR set to: 0
  1373                           ;parcheggio.c: 211: data[0] = 1;
  1374  00475C  0E01               	movlw	1
  1375  00475E  0101               	movlb	1	; () banked
  1376  004760  6F2F               	movwf	_data& (0+255),b
  1377                           
  1378                           ; BSR set to: 1
  1379                           ;parcheggio.c: 212: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1380  004762  0E0B               	movlw	11
  1381  004764  0100               	movlb	0	; () banked
  1382  004766  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1383  004768  0E00               	movlw	0
  1384  00476A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1385  00476C  0E00               	movlw	0
  1386  00476E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1387  004770  0E00               	movlw	0
  1388  004772  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1389  004774  0E2F               	movlw	low _data
  1390  004776  0100               	movlb	0	; () banked
  1391  004778  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1392  00477A  0E01               	movlw	high _data
  1393  00477C  0100               	movlb	0	; () banked
  1394  00477E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1395  004780  0E01               	movlw	1
  1396  004782  0100               	movlb	0	; () banked
  1397  004784  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1398  004786  0EBC               	movlw	188
  1399  004788  0100               	movlb	0	; () banked
  1400  00478A  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1401  00478C  EC1A  F00C         	call	_CANsendMessage	;wreg free
  1402                           
  1403                           ;parcheggio.c: 213: distance_received = 0;
  1404  004790  9844               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1405                           
  1406                           ;parcheggio.c: 214: } else {
  1407  004792  D002               	goto	l686
  1408  004794                     l699:
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;parcheggio.c: 215: distance_received = 0;
  1412  004794  9844               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1413                           
  1414                           ;parcheggio.c: 216: PORTBbits.RB5 = 0;
  1415  004796  9A81               	bcf	3969,5,c	;volatile
  1416  004798                     l686:
  1417  004798  A044               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1418  00479A  0012               	return	
  1419  00479C  BA81               	btfsc	3969,5,c	;volatile
  1420  00479E  0012               	return	
  1421  0047A0  D74E               	goto	l6263
  1422  0047A2                     __end_of_park_search:
  1423                           	opt stack 0
  1424                           tblptru	equ	0xFF8
  1425                           tblptrh	equ	0xFF7
  1426                           tblptrl	equ	0xFF6
  1427                           tablat	equ	0xFF5
  1428                           postinc0	equ	0xFEE
  1429                           wreg	equ	0xFE8
  1430                           postinc2	equ	0xFDE
  1431                           postdec2	equ	0xFDD
  1432                           status	equ	0xFD8
  1433                           
  1434 ;; *************** function _parallelo *****************
  1435 ;; Defined at:
  1436 ;;		line 276 in file "parcheggio.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;		None               void
  1443 ;; Registers used:
  1444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1452 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1453 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1454 ;;Total ram usage:        2 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:    8
  1457 ;; This function calls:
  1458 ;;		___fladd
  1459 ;;		___fldiv
  1460 ;;		___flge
  1461 ;;		___flmul
  1462 ;;		___fltol
  1463 ;;		___xxtofl
  1464 ;;		_abs
  1465 ;;		_asin
  1466 ;;		_can_send
  1467 ;;		_sqrt
  1468 ;; This function is called by:
  1469 ;;		_park_search
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text2
  1474  003C54                     __ptext2:
  1475                           	opt stack 0
  1476  003C54                     _parallelo:
  1477                           	opt stack 21
  1478                           
  1479                           ;parcheggio.c: 277: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1480                           
  1481                           ;incstack = 0
  1482  003C54  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1483  003C58  CFDE F0D1          	movff	postinc2,??_parallelo
  1484  003C5C  CFDD F0D2          	movff	postdec2,??_parallelo+1
  1485  003C60  0100               	movlb	0	; () banked
  1486  003C62  1FD1               	comf	??_parallelo& (0+255),f,b
  1487  003C64  1FD2               	comf	(??_parallelo+1)& (0+255),f,b
  1488  003C66  4BD1               	infsnz	??_parallelo& (0+255),f,b
  1489  003C68  2BD2               	incf	(??_parallelo+1)& (0+255),f,b
  1490  003C6A  5024               	movf	_sensor_distance,w,c	;volatile
  1491  003C6C  0100               	movlb	0	; () banked
  1492  003C6E  25D1               	addwf	??_parallelo& (0+255),w,b
  1493  003C70  0100               	movlb	0	; () banked
  1494  003C72  6F77               	movwf	abs@a& (0+255),b
  1495  003C74  5025               	movf	_sensor_distance+1,w,c	;volatile
  1496  003C76  0100               	movlb	0	; () banked
  1497  003C78  21D2               	addwfc	(??_parallelo+1)& (0+255),w,b
  1498  003C7A  0100               	movlb	0	; () banked
  1499  003C7C  6F78               	movwf	(abs@a+1)& (0+255),b
  1500  003C7E  ECB7  F027         	call	_abs	;wreg free
  1501  003C82  0100               	movlb	0	; () banked
  1502  003C84  C077  F07B         	movff	?_abs,___xxtofl@val
  1503  003C88  0100               	movlb	0	; () banked
  1504  003C8A  C078  F07C         	movff	?_abs+1,___xxtofl@val+1
  1505  003C8E  0100               	movlb	0	; () banked
  1506  003C90  0E00               	movlw	0
  1507  003C92  BF7C               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1508  003C94  0EFF               	movlw	-1
  1509  003C96  6F7D               	movwf	(___xxtofl@val+2)& (0+255),b
  1510  003C98  6F7E               	movwf	(___xxtofl@val+3)& (0+255),b
  1511  003C9A  0E01               	movlw	1
  1512  003C9C  EC8C  F020         	call	___xxtofl
  1513  003CA0  C07B  F0D3         	movff	?___xxtofl,_alignment_gap
  1514  003CA4  C07C  F0D4         	movff	?___xxtofl+1,_alignment_gap+1
  1515  003CA8  C07D  F0D5         	movff	?___xxtofl+2,_alignment_gap+2
  1516  003CAC  C07E  F0D6         	movff	?___xxtofl+3,_alignment_gap+3
  1517                           
  1518                           ;parcheggio.c: 279: if (alignment_gap < 30) {
  1519  003CB0  C0D3  F0B1         	movff	_alignment_gap,___flge@ff1
  1520  003CB4  C0D4  F0B2         	movff	_alignment_gap+1,___flge@ff1+1
  1521  003CB8  C0D5  F0B3         	movff	_alignment_gap+2,___flge@ff1+2
  1522  003CBC  C0D6  F0B4         	movff	_alignment_gap+3,___flge@ff1+3
  1523  003CC0  0E00               	movlw	0
  1524  003CC2  0100               	movlb	0	; () banked
  1525  003CC4  6FB5               	movwf	___flge@ff2& (0+255),b
  1526  003CC6  0E00               	movlw	0
  1527  003CC8  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  1528  003CCA  0EF0               	movlw	240
  1529  003CCC  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  1530  003CCE  0E41               	movlw	65
  1531  003CD0  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  1532  003CD2  EC56  F022         	call	___flge	;wreg free
  1533  003CD6  0100               	movlb	0	; () banked
  1534  003CD8  B0D8               	btfsc	status,0,c
  1535  003CDA  D0EB               	goto	l6255
  1536                           
  1537                           ; BSR set to: 0
  1538                           ;parcheggio.c: 280: if ((sensor_distance[0] < 40) && (sensor_distance[1] < 40)) {
  1539  003CDC  5025               	movf	_sensor_distance+1,w,c	;volatile
  1540  003CDE  E103               	bnz	u7991
  1541  003CE0  0E28               	movlw	40
  1542  003CE2  5C24               	subwf	_sensor_distance,w,c	;volatile
  1543  003CE4  B0D8               	btfsc	status,0,c
  1544  003CE6                     u7991:
  1545  003CE6  0012               	return	
  1546                           
  1547                           ; BSR set to: 0
  1548  003CE8  5027               	movf	_sensor_distance+3,w,c	;volatile
  1549  003CEA  E103               	bnz	u8001
  1550  003CEC  0E28               	movlw	40
  1551  003CEE  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  1552  003CF0  B0D8               	btfsc	status,0,c
  1553  003CF2                     u8001:
  1554  003CF2  0012               	return	
  1555                           
  1556                           ; BSR set to: 0
  1557                           ;parcheggio.c: 285: x = ((100) + (alignment_gap * alignment_gap));
  1558  003CF4  C0D3  F094         	movff	_alignment_gap,___flmul@a
  1559  003CF8  C0D4  F095         	movff	_alignment_gap+1,___flmul@a+1
  1560  003CFC  C0D5  F096         	movff	_alignment_gap+2,___flmul@a+2
  1561  003D00  C0D6  F097         	movff	_alignment_gap+3,___flmul@a+3
  1562  003D04  C0D3  F090         	movff	_alignment_gap,___flmul@b
  1563  003D08  C0D4  F091         	movff	_alignment_gap+1,___flmul@b+1
  1564  003D0C  C0D5  F092         	movff	_alignment_gap+2,___flmul@b+2
  1565  003D10  C0D6  F093         	movff	_alignment_gap+3,___flmul@b+3
  1566  003D14  ECBA  F014         	call	___flmul	;wreg free
  1567  003D18  C090  F0AD         	movff	?___flmul,___fladd@b
  1568  003D1C  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  1569  003D20  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  1570  003D24  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  1571  003D28  0E00               	movlw	0
  1572  003D2A  0100               	movlb	0	; () banked
  1573  003D2C  6FB1               	movwf	___fladd@a& (0+255),b
  1574  003D2E  0E00               	movlw	0
  1575  003D30  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  1576  003D32  0EC8               	movlw	200
  1577  003D34  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  1578  003D36  0E42               	movlw	66
  1579  003D38  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  1580  003D3A  EC66  F012         	call	___fladd	;wreg free
  1581  003D3E  C0AD  F0D7         	movff	?___fladd,_x
  1582  003D42  C0AE  F0D8         	movff	?___fladd+1,_x+1
  1583  003D46  C0AF  F0D9         	movff	?___fladd+2,_x+2
  1584  003D4A  C0B0  F0DA         	movff	?___fladd+3,_x+3
  1585                           
  1586                           ;parcheggio.c: 286: x = sqrt(x);
  1587  003D4E  C0D7  F0C1         	movff	_x,sqrt@a
  1588  003D52  C0D8  F0C2         	movff	_x+1,sqrt@a+1
  1589  003D56  C0D9  F0C3         	movff	_x+2,sqrt@a+2
  1590  003D5A  C0DA  F0C4         	movff	_x+3,sqrt@a+3
  1591  003D5E  EC0D  F017         	call	_sqrt	;wreg free
  1592  003D62  C0C1  F0D7         	movff	?_sqrt,_x
  1593  003D66  C0C2  F0D8         	movff	?_sqrt+1,_x+1
  1594  003D6A  C0C3  F0D9         	movff	?_sqrt+2,_x+2
  1595  003D6E  C0C4  F0DA         	movff	?_sqrt+3,_x+3
  1596                           
  1597                           ;parcheggio.c: 287: z = alignment_gap / x;
  1598  003D72  C0D3  F077         	movff	_alignment_gap,___fldiv@b
  1599  003D76  C0D4  F078         	movff	_alignment_gap+1,___fldiv@b+1
  1600  003D7A  C0D5  F079         	movff	_alignment_gap+2,___fldiv@b+2
  1601  003D7E  C0D6  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  1602  003D82  C0D7  F07B         	movff	_x,___fldiv@a
  1603  003D86  C0D8  F07C         	movff	_x+1,___fldiv@a+1
  1604  003D8A  C0D9  F07D         	movff	_x+2,___fldiv@a+2
  1605  003D8E  C0DA  F07E         	movff	_x+3,___fldiv@a+3
  1606  003D92  ECF2  F018         	call	___fldiv	;wreg free
  1607  003D96  C077  F0DB         	movff	?___fldiv,_z
  1608  003D9A  C078  F0DC         	movff	?___fldiv+1,_z+1
  1609  003D9E  C079  F0DD         	movff	?___fldiv+2,_z+2
  1610  003DA2  C07A  F0DE         	movff	?___fldiv+3,_z+3
  1611                           
  1612                           ;parcheggio.c: 288: z = asin(z);
  1613  003DA6  C0DB  F16C         	movff	_z,asin@x
  1614  003DAA  C0DC  F16D         	movff	_z+1,asin@x+1
  1615  003DAE  C0DD  F16E         	movff	_z+2,asin@x+2
  1616  003DB2  C0DE  F16F         	movff	_z+3,asin@x+3
  1617  003DB6  ECA1  F01C         	call	_asin	;wreg free
  1618  003DBA  C16C  F0DB         	movff	?_asin,_z
  1619  003DBE  C16D  F0DC         	movff	?_asin+1,_z+1
  1620  003DC2  C16E  F0DD         	movff	?_asin+2,_z+2
  1621  003DC6  C16F  F0DE         	movff	?_asin+3,_z+3
  1622                           
  1623                           ;parcheggio.c: 289: z = z / 3.14159265358979323846 * 180;
  1624  003DCA  0EDB               	movlw	219
  1625  003DCC  0100               	movlb	0	; () banked
  1626  003DCE  6F7B               	movwf	___fldiv@a& (0+255),b
  1627  003DD0  0E0F               	movlw	15
  1628  003DD2  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  1629  003DD4  0E49               	movlw	73
  1630  003DD6  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  1631  003DD8  0E40               	movlw	64
  1632  003DDA  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  1633  003DDC  C0DB  F077         	movff	_z,___fldiv@b
  1634  003DE0  C0DC  F078         	movff	_z+1,___fldiv@b+1
  1635  003DE4  C0DD  F079         	movff	_z+2,___fldiv@b+2
  1636  003DE8  C0DE  F07A         	movff	_z+3,___fldiv@b+3
  1637  003DEC  ECF2  F018         	call	___fldiv	;wreg free
  1638  003DF0  C077  F090         	movff	?___fldiv,___flmul@b
  1639  003DF4  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  1640  003DF8  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  1641  003DFC  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  1642  003E00  0E00               	movlw	0
  1643  003E02  0100               	movlb	0	; () banked
  1644  003E04  6F94               	movwf	___flmul@a& (0+255),b
  1645  003E06  0E00               	movlw	0
  1646  003E08  6F95               	movwf	(___flmul@a+1)& (0+255),b
  1647  003E0A  0E34               	movlw	52
  1648  003E0C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  1649  003E0E  0E43               	movlw	67
  1650  003E10  6F97               	movwf	(___flmul@a+3)& (0+255),b
  1651  003E12  ECBA  F014         	call	___flmul	;wreg free
  1652  003E16  C090  F0DB         	movff	?___flmul,_z
  1653  003E1A  C091  F0DC         	movff	?___flmul+1,_z+1
  1654  003E1E  C092  F0DD         	movff	?___flmul+2,_z+2
  1655  003E22  C093  F0DE         	movff	?___flmul+3,_z+3
  1656                           
  1657                           ;parcheggio.c: 290: data_correction[0] = z;
  1658  003E26  C0DB  F077         	movff	_z,___fltol@f1
  1659  003E2A  C0DC  F078         	movff	_z+1,___fltol@f1+1
  1660  003E2E  C0DD  F079         	movff	_z+2,___fltol@f1+2
  1661  003E32  C0DE  F07A         	movff	_z+3,___fltol@f1+3
  1662  003E36  ECF5  F024         	call	___fltol	;wreg free
  1663  003E3A  0100               	movlb	0	; () banked
  1664  003E3C  5177               	movf	?___fltol& (0+255),w,b
  1665  003E3E  0101               	movlb	1	; () banked
  1666  003E40  6F3F               	movwf	_data_correction& (0+255),b
  1667                           
  1668                           ; BSR set to: 1
  1669                           ;parcheggio.c: 292: if (sensor_distance[0] > sensor_distance[1]) {
  1670  003E42  5024               	movf	_sensor_distance,w,c	;volatile
  1671  003E44  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  1672  003E46  5025               	movf	_sensor_distance+1,w,c	;volatile
  1673  003E48  5827               	subwfb	_sensor_distance+3,w,c	;volatile
  1674  003E4A  B0D8               	btfsc	status,0,c
  1675  003E4C  D002               	goto	l6247
  1676                           
  1677                           ; BSR set to: 1
  1678                           ;parcheggio.c: 293: data_correction[1] = 0;
  1679  003E4E  0E00               	movlw	0
  1680  003E50  D001               	goto	L1
  1681  003E52                     l6247:
  1682                           
  1683                           ; BSR set to: 1
  1684                           ;parcheggio.c: 295: data_correction[1] = 1;
  1685  003E52  0E01               	movlw	1
  1686  003E54                     L1:
  1687  003E54  0101               	movlb	1	; () banked
  1688  003E56  6F40               	movwf	(_data_correction+1)& (0+255),b
  1689                           
  1690                           ; BSR set to: 1
  1691                           ;parcheggio.c: 296: }
  1692                           ;parcheggio.c: 297: if ((old_alignment_gap != alignment_gap) || (old_data_correction != 
      +                          data_correction[1])) {
  1693                           
  1694                           ; BSR set to: 1
  1695  003E58  0100               	movlb	0	; () banked
  1696  003E5A  51D3               	movf	_alignment_gap& (0+255),w,b
  1697  003E5C  0101               	movlb	1	; () banked
  1698  003E5E  1918               	xorwf	_old_alignment_gap& (0+255),w,b
  1699  003E60  E117               	bnz	l744
  1700  003E62  0100               	movlb	0	; () banked
  1701  003E64  51D4               	movf	(_alignment_gap+1)& (0+255),w,b
  1702  003E66  0101               	movlb	1	; () banked
  1703  003E68  1919               	xorwf	(_old_alignment_gap+1)& (0+255),w,b
  1704  003E6A  E112               	bnz	l744
  1705  003E6C  0100               	movlb	0	; () banked
  1706  003E6E  51D5               	movf	(_alignment_gap+2)& (0+255),w,b
  1707  003E70  0101               	movlb	1	; () banked
  1708  003E72  191A               	xorwf	(_old_alignment_gap+2)& (0+255),w,b
  1709  003E74  E10D               	bnz	l744
  1710  003E76  0100               	movlb	0	; () banked
  1711  003E78  51D6               	movf	(_alignment_gap+3)& (0+255),w,b
  1712  003E7A  0101               	movlb	1	; () banked
  1713  003E7C  191B               	xorwf	(_old_alignment_gap+3)& (0+255),w,b
  1714  003E7E  A4D8               	btfss	status,2,c
  1715  003E80  D007               	goto	l744
  1716                           
  1717                           ; BSR set to: 1
  1718  003E82  0E00               	movlw	0
  1719  003E84  BC44               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  1720  003E86  0E01               	movlw	1
  1721  003E88  0101               	movlb	1	; () banked
  1722  003E8A  1940               	xorwf	(_data_correction+1)& (0+255),w,b
  1723  003E8C  B4D8               	btfsc	status,2,c
  1724  003E8E  0012               	return	
  1725  003E90                     l744:
  1726                           
  1727                           ; BSR set to: 1
  1728                           ;parcheggio.c: 298: old_alignment_gap = alignment_gap;
  1729  003E90  C0D3  F118         	movff	_alignment_gap,_old_alignment_gap
  1730  003E94  C0D4  F119         	movff	_alignment_gap+1,_old_alignment_gap+1
  1731  003E98  C0D5  F11A         	movff	_alignment_gap+2,_old_alignment_gap+2
  1732  003E9C  C0D6  F11B         	movff	_alignment_gap+3,_old_alignment_gap+3
  1733                           
  1734                           ;parcheggio.c: 299: old_data_correction = data_correction[1];
  1735  003EA0  0101               	movlb	1	; () banked
  1736  003EA2  A140               	btfss	(_data_correction+1)& (0+255),0,b
  1737  003EA4  D002               	goto	u8040
  1738  003EA6  8C44               	bsf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  1739  003EA8  D001               	goto	l6253
  1740  003EAA                     u8040:
  1741  003EAA  9C44               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  1742  003EAC                     l6253:
  1743                           
  1744                           ;parcheggio.c: 300: can_send();
  1745  003EAC  ECD1  F023         	call	_can_send	;wreg free
  1746                           
  1747                           ;parcheggio.c: 301: }
  1748                           ;parcheggio.c: 302: }
  1749                           ;parcheggio.c: 303: } else {
  1750  003EB0  0012               	return	
  1751  003EB2                     l6255:
  1752                           
  1753                           ;parcheggio.c: 304: if (data_correction[0] != 0) {
  1754  003EB2  0101               	movlb	1	; () banked
  1755  003EB4  513F               	movf	_data_correction& (0+255),w,b
  1756  003EB6  B4D8               	btfsc	status,2,c
  1757  003EB8  0012               	return	
  1758                           
  1759                           ; BSR set to: 1
  1760                           ;parcheggio.c: 305: data_correction[0] = 0;
  1761  003EBA  0E00               	movlw	0
  1762  003EBC  0101               	movlb	1	; () banked
  1763  003EBE  6F3F               	movwf	_data_correction& (0+255),b
  1764                           
  1765                           ; BSR set to: 1
  1766                           ;parcheggio.c: 306: can_send();
  1767  003EC0  ECD1  F023         	call	_can_send	;wreg free
  1768  003EC4  0012               	return	
  1769  003EC6                     __end_of_parallelo:
  1770                           	opt stack 0
  1771                           tblptru	equ	0xFF8
  1772                           tblptrh	equ	0xFF7
  1773                           tblptrl	equ	0xFF6
  1774                           tablat	equ	0xFF5
  1775                           postinc0	equ	0xFEE
  1776                           wreg	equ	0xFE8
  1777                           postinc2	equ	0xFDE
  1778                           postdec2	equ	0xFDD
  1779                           status	equ	0xFD8
  1780                           
  1781 ;; *************** function _asin *****************
  1782 ;; Defined at:
  1783 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\asin.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  x               4   21[BANK1 ] PTR unsigned char 
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;  y               4   37[BANK1 ] PTR unsigned char 
  1788 ;;  sgn             4   25[BANK1 ] PTR unsigned char 
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  4   21[BANK1 ] PTR unsigned char 
  1791 ;; Registers used:
  1792 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1798 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1799 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  1800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1801 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  1802 ;;Total ram usage:       24 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    7
  1805 ;; This function calls:
  1806 ;;		___fladd
  1807 ;;		___fldiv
  1808 ;;		___flge
  1809 ;;		___flmul
  1810 ;;		___flneg
  1811 ;;		_atan
  1812 ;;		_fabs
  1813 ;;		_sqrt
  1814 ;; This function is called by:
  1815 ;;		_parallelo
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text3
  1820  003942                     __ptext3:
  1821                           	opt stack 0
  1822  003942                     _asin:
  1823                           	opt stack 21
  1824                           
  1825                           ;incstack = 0
  1826  003942  0E00               	movlw	0
  1827  003944  0100               	movlb	0	; () banked
  1828  003946  6FB1               	movwf	___flge@ff1& (0+255),b
  1829  003948  0E00               	movlw	0
  1830  00394A  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  1831  00394C  0E80               	movlw	128
  1832  00394E  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  1833  003950  0E3F               	movlw	63
  1834  003952  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  1835  003954  C16C  F0AD         	movff	asin@x,fabs@d
  1836  003958  C16D  F0AE         	movff	asin@x+1,fabs@d+1
  1837  00395C  C16E  F0AF         	movff	asin@x+2,fabs@d+2
  1838  003960  C16F  F0B0         	movff	asin@x+3,fabs@d+3
  1839  003964  EC44  F027         	call	_fabs	;wreg free
  1840  003968  C0AD  F0B5         	movff	?_fabs,___flge@ff2
  1841  00396C  C0AE  F0B6         	movff	?_fabs+1,___flge@ff2+1
  1842  003970  C0AF  F0B7         	movff	?_fabs+2,___flge@ff2+2
  1843  003974  C0B0  F0B8         	movff	?_fabs+3,___flge@ff2+3
  1844  003978  EC56  F022         	call	___flge	;wreg free
  1845  00397C  0100               	movlb	0	; () banked
  1846  00397E  B0D8               	btfsc	status,0,c
  1847  003980  D00F               	goto	l6191
  1848                           
  1849                           ; BSR set to: 0
  1850  003982  0E00               	movlw	0
  1851  003984  0101               	movlb	1	; () banked
  1852  003986  6F1F               	movwf	(_errno+1)& (0+255),b
  1853  003988  0E21               	movlw	33
  1854  00398A  6F1E               	movwf	_errno& (0+255),b
  1855  00398C  0E00               	movlw	0
  1856  00398E  0101               	movlb	1	; () banked
  1857  003990  6F6C               	movwf	?_asin& (0+255),b
  1858  003992  0E00               	movlw	0
  1859  003994  6F6D               	movwf	(?_asin+1)& (0+255),b
  1860  003996  0E00               	movlw	0
  1861  003998  6F6E               	movwf	(?_asin+2)& (0+255),b
  1862  00399A  0E00               	movlw	0
  1863  00399C  6F6F               	movwf	(?_asin+3)& (0+255),b
  1864                           
  1865                           ; BSR set to: 1
  1866  00399E  0012               	return	
  1867  0039A0                     l6191:
  1868  0039A0  0E00               	movlw	0
  1869  0039A2  0101               	movlb	1	; () banked
  1870  0039A4  6F70               	movwf	asin@sgn& (0+255),b
  1871  0039A6  0E00               	movlw	0
  1872  0039A8  6F71               	movwf	(asin@sgn+1)& (0+255),b
  1873  0039AA  0E80               	movlw	128
  1874  0039AC  6F72               	movwf	(asin@sgn+2)& (0+255),b
  1875  0039AE  0E3F               	movlw	63
  1876  0039B0  6F73               	movwf	(asin@sgn+3)& (0+255),b
  1877                           
  1878                           ; BSR set to: 1
  1879  0039B2  C16C  F094         	movff	asin@x,___flmul@a
  1880  0039B6  C16D  F095         	movff	asin@x+1,___flmul@a+1
  1881  0039BA  C16E  F096         	movff	asin@x+2,___flmul@a+2
  1882  0039BE  C16F  F097         	movff	asin@x+3,___flmul@a+3
  1883  0039C2  C16C  F090         	movff	asin@x,___flmul@b
  1884  0039C6  C16D  F091         	movff	asin@x+1,___flmul@b+1
  1885  0039CA  C16E  F092         	movff	asin@x+2,___flmul@b+2
  1886  0039CE  C16F  F093         	movff	asin@x+3,___flmul@b+3
  1887  0039D2  ECBA  F014         	call	___flmul	;wreg free
  1888  0039D6  C090  F0A9         	movff	?___flmul,___flneg@f1
  1889  0039DA  C091  F0AA         	movff	?___flmul+1,___flneg@f1+1
  1890  0039DE  C092  F0AB         	movff	?___flmul+2,___flneg@f1+2
  1891  0039E2  C093  F0AC         	movff	?___flmul+3,___flneg@f1+3
  1892  0039E6  EC80  F027         	call	___flneg	;wreg free
  1893  0039EA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  1894  0039EE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  1895  0039F2  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  1896  0039F6  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  1897  0039FA  0E00               	movlw	0
  1898  0039FC  0100               	movlb	0	; () banked
  1899  0039FE  6FB1               	movwf	___fladd@a& (0+255),b
  1900  003A00  0E00               	movlw	0
  1901  003A02  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  1902  003A04  0E80               	movlw	128
  1903  003A06  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  1904  003A08  0E3F               	movlw	63
  1905  003A0A  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  1906  003A0C  EC66  F012         	call	___fladd	;wreg free
  1907  003A10  C0AD  F0C1         	movff	?___fladd,sqrt@a
  1908  003A14  C0AE  F0C2         	movff	?___fladd+1,sqrt@a+1
  1909  003A18  C0AF  F0C3         	movff	?___fladd+2,sqrt@a+2
  1910  003A1C  C0B0  F0C4         	movff	?___fladd+3,sqrt@a+3
  1911  003A20  EC0D  F017         	call	_sqrt	;wreg free
  1912  003A24  C0C1  F17C         	movff	?_sqrt,asin@y
  1913  003A28  C0C2  F17D         	movff	?_sqrt+1,asin@y+1
  1914  003A2C  C0C3  F17E         	movff	?_sqrt+2,asin@y+2
  1915  003A30  C0C4  F17F         	movff	?_sqrt+3,asin@y+3
  1916  003A34  C16C  F0AD         	movff	asin@x,fabs@d
  1917  003A38  C16D  F0AE         	movff	asin@x+1,fabs@d+1
  1918  003A3C  C16E  F0AF         	movff	asin@x+2,fabs@d+2
  1919  003A40  C16F  F0B0         	movff	asin@x+3,fabs@d+3
  1920  003A44  EC44  F027         	call	_fabs	;wreg free
  1921  003A48  C0AD  F0B1         	movff	?_fabs,___flge@ff1
  1922  003A4C  C0AE  F0B2         	movff	?_fabs+1,___flge@ff1+1
  1923  003A50  C0AF  F0B3         	movff	?_fabs+2,___flge@ff1+2
  1924  003A54  C0B0  F0B4         	movff	?_fabs+3,___flge@ff1+3
  1925  003A58  0E8F               	movlw	143
  1926  003A5A  0100               	movlb	0	; () banked
  1927  003A5C  6FB5               	movwf	___flge@ff2& (0+255),b
  1928  003A5E  0EC2               	movlw	194
  1929  003A60  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  1930  003A62  0E35               	movlw	53
  1931  003A64  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  1932  003A66  0E3F               	movlw	63
  1933  003A68  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  1934  003A6A  EC56  F022         	call	___flge	;wreg free
  1935  003A6E  0100               	movlb	0	; () banked
  1936  003A70  B0D8               	btfsc	status,0,c
  1937  003A72  D02D               	goto	l6203
  1938                           
  1939                           ; BSR set to: 0
  1940  003A74  C16C  F077         	movff	asin@x,___fldiv@b
  1941  003A78  C16D  F078         	movff	asin@x+1,___fldiv@b+1
  1942  003A7C  C16E  F079         	movff	asin@x+2,___fldiv@b+2
  1943  003A80  C16F  F07A         	movff	asin@x+3,___fldiv@b+3
  1944  003A84  C17C  F07B         	movff	asin@y,___fldiv@a
  1945  003A88  C17D  F07C         	movff	asin@y+1,___fldiv@a+1
  1946  003A8C  C17E  F07D         	movff	asin@y+2,___fldiv@a+2
  1947  003A90  C17F  F07E         	movff	asin@y+3,___fldiv@a+3
  1948  003A94  ECF2  F018         	call	___fldiv	;wreg free
  1949  003A98  C077  F180         	movff	?___fldiv,_asin$3623
  1950  003A9C  C078  F181         	movff	?___fldiv+1,_asin$3623+1
  1951  003AA0  C079  F182         	movff	?___fldiv+2,_asin$3623+2
  1952  003AA4  C07A  F183         	movff	?___fldiv+3,_asin$3623+3
  1953  003AA8  C180  F157         	movff	_asin$3623,atan@f
  1954  003AAC  C181  F158         	movff	_asin$3623+1,atan@f+1
  1955  003AB0  C182  F159         	movff	_asin$3623+2,atan@f+2
  1956  003AB4  C183  F15A         	movff	_asin$3623+3,atan@f+3
  1957  003AB8  EC63  F01F         	call	_atan	;wreg free
  1958  003ABC  C157  F16C         	movff	?_atan,?_asin
  1959  003AC0  C158  F16D         	movff	?_atan+1,?_asin+1
  1960  003AC4  C159  F16E         	movff	?_atan+2,?_asin+2
  1961  003AC8  C15A  F16F         	movff	?_atan+3,?_asin+3
  1962  003ACC  0012               	return	
  1963  003ACE                     l6203:
  1964  003ACE  0101               	movlb	1	; () banked
  1965  003AD0  AF6F               	btfss	(asin@x+3)& (0+255),7,b
  1966  003AD2  D06E               	goto	l6215
  1967                           
  1968                           ; BSR set to: 1
  1969  003AD4  C16C  F07B         	movff	asin@x,___fldiv@a
  1970  003AD8  C16D  F07C         	movff	asin@x+1,___fldiv@a+1
  1971  003ADC  C16E  F07D         	movff	asin@x+2,___fldiv@a+2
  1972  003AE0  C16F  F07E         	movff	asin@x+3,___fldiv@a+3
  1973  003AE4  C17C  F0A9         	movff	asin@y,___flneg@f1
  1974  003AE8  C17D  F0AA         	movff	asin@y+1,___flneg@f1+1
  1975  003AEC  C17E  F0AB         	movff	asin@y+2,___flneg@f1+2
  1976  003AF0  C17F  F0AC         	movff	asin@y+3,___flneg@f1+3
  1977  003AF4  EC80  F027         	call	___flneg	;wreg free
  1978  003AF8  C0A9  F077         	movff	?___flneg,___fldiv@b
  1979  003AFC  C0AA  F078         	movff	?___flneg+1,___fldiv@b+1
  1980  003B00  C0AB  F079         	movff	?___flneg+2,___fldiv@b+2
  1981  003B04  C0AC  F07A         	movff	?___flneg+3,___fldiv@b+3
  1982  003B08  ECF2  F018         	call	___fldiv	;wreg free
  1983  003B0C  C077  F180         	movff	?___fldiv,_asin$3623
  1984  003B10  C078  F181         	movff	?___fldiv+1,_asin$3623+1
  1985  003B14  C079  F182         	movff	?___fldiv+2,_asin$3623+2
  1986  003B18  C07A  F183         	movff	?___fldiv+3,_asin$3623+3
  1987  003B1C  C180  F157         	movff	_asin$3623,atan@f
  1988  003B20  C181  F158         	movff	_asin$3623+1,atan@f+1
  1989  003B24  C182  F159         	movff	_asin$3623+2,atan@f+2
  1990  003B28  C183  F15A         	movff	_asin$3623+3,atan@f+3
  1991  003B2C  EC63  F01F         	call	_atan	;wreg free
  1992  003B30  C157  F178         	movff	?_atan,_asin$3624
  1993  003B34  C158  F179         	movff	?_atan+1,_asin$3624+1
  1994  003B38  C159  F17A         	movff	?_atan+2,_asin$3624+2
  1995  003B3C  C15A  F17B         	movff	?_atan+3,_asin$3624+3
  1996  003B40  0EDB               	movlw	219
  1997  003B42  0100               	movlb	0	; () banked
  1998  003B44  6FB1               	movwf	___fladd@a& (0+255),b
  1999  003B46  0E0F               	movlw	15
  2000  003B48  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  2001  003B4A  0EC9               	movlw	201
  2002  003B4C  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  2003  003B4E  0E3F               	movlw	63
  2004  003B50  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  2005  003B52  C178  F0A9         	movff	_asin$3624,___flneg@f1
  2006  003B56  C179  F0AA         	movff	_asin$3624+1,___flneg@f1+1
  2007  003B5A  C17A  F0AB         	movff	_asin$3624+2,___flneg@f1+2
  2008  003B5E  C17B  F0AC         	movff	_asin$3624+3,___flneg@f1+3
  2009  003B62  EC80  F027         	call	___flneg	;wreg free
  2010  003B66  C0A9  F0AD         	movff	?___flneg,___fladd@b
  2011  003B6A  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  2012  003B6E  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  2013  003B72  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  2014  003B76  EC66  F012         	call	___fladd	;wreg free
  2015  003B7A  C0AD  F174         	movff	?___fladd,_asin$3625
  2016  003B7E  C0AE  F175         	movff	?___fladd+1,_asin$3625+1
  2017  003B82  C0AF  F176         	movff	?___fladd+2,_asin$3625+2
  2018  003B86  C0B0  F177         	movff	?___fladd+3,_asin$3625+3
  2019  003B8A  C174  F0A9         	movff	_asin$3625,___flneg@f1
  2020  003B8E  C175  F0AA         	movff	_asin$3625+1,___flneg@f1+1
  2021  003B92  C176  F0AB         	movff	_asin$3625+2,___flneg@f1+2
  2022  003B96  C177  F0AC         	movff	_asin$3625+3,___flneg@f1+3
  2023  003B9A  EC80  F027         	call	___flneg	;wreg free
  2024  003B9E  C0A9  F16C         	movff	?___flneg,?_asin
  2025  003BA2  C0AA  F16D         	movff	?___flneg+1,?_asin+1
  2026  003BA6  C0AB  F16E         	movff	?___flneg+2,?_asin+2
  2027  003BAA  C0AC  F16F         	movff	?___flneg+3,?_asin+3
  2028  003BAE  0012               	return	
  2029  003BB0                     l6215:
  2030  003BB0  C16C  F07B         	movff	asin@x,___fldiv@a
  2031  003BB4  C16D  F07C         	movff	asin@x+1,___fldiv@a+1
  2032  003BB8  C16E  F07D         	movff	asin@x+2,___fldiv@a+2
  2033  003BBC  C16F  F07E         	movff	asin@x+3,___fldiv@a+3
  2034  003BC0  C17C  F077         	movff	asin@y,___fldiv@b
  2035  003BC4  C17D  F078         	movff	asin@y+1,___fldiv@b+1
  2036  003BC8  C17E  F079         	movff	asin@y+2,___fldiv@b+2
  2037  003BCC  C17F  F07A         	movff	asin@y+3,___fldiv@b+3
  2038  003BD0  ECF2  F018         	call	___fldiv	;wreg free
  2039  003BD4  C077  F180         	movff	?___fldiv,_asin$3623
  2040  003BD8  C078  F181         	movff	?___fldiv+1,_asin$3623+1
  2041  003BDC  C079  F182         	movff	?___fldiv+2,_asin$3623+2
  2042  003BE0  C07A  F183         	movff	?___fldiv+3,_asin$3623+3
  2043  003BE4  C180  F157         	movff	_asin$3623,atan@f
  2044  003BE8  C181  F158         	movff	_asin$3623+1,atan@f+1
  2045  003BEC  C182  F159         	movff	_asin$3623+2,atan@f+2
  2046  003BF0  C183  F15A         	movff	_asin$3623+3,atan@f+3
  2047  003BF4  EC63  F01F         	call	_atan	;wreg free
  2048  003BF8  C157  F178         	movff	?_atan,_asin$3624
  2049  003BFC  C158  F179         	movff	?_atan+1,_asin$3624+1
  2050  003C00  C159  F17A         	movff	?_atan+2,_asin$3624+2
  2051  003C04  C15A  F17B         	movff	?_atan+3,_asin$3624+3
  2052  003C08  C178  F0A9         	movff	_asin$3624,___flneg@f1
  2053  003C0C  C179  F0AA         	movff	_asin$3624+1,___flneg@f1+1
  2054  003C10  C17A  F0AB         	movff	_asin$3624+2,___flneg@f1+2
  2055  003C14  C17B  F0AC         	movff	_asin$3624+3,___flneg@f1+3
  2056  003C18  EC80  F027         	call	___flneg	;wreg free
  2057  003C1C  C0A9  F0AD         	movff	?___flneg,___fladd@b
  2058  003C20  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  2059  003C24  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  2060  003C28  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  2061  003C2C  0EDB               	movlw	219
  2062  003C2E  0100               	movlb	0	; () banked
  2063  003C30  6FB1               	movwf	___fladd@a& (0+255),b
  2064  003C32  0E0F               	movlw	15
  2065  003C34  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  2066  003C36  0EC9               	movlw	201
  2067  003C38  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  2068  003C3A  0E3F               	movlw	63
  2069  003C3C  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  2070  003C3E  EC66  F012         	call	___fladd	;wreg free
  2071  003C42  C0AD  F16C         	movff	?___fladd,?_asin
  2072  003C46  C0AE  F16D         	movff	?___fladd+1,?_asin+1
  2073  003C4A  C0AF  F16E         	movff	?___fladd+2,?_asin+2
  2074  003C4E  C0B0  F16F         	movff	?___fladd+3,?_asin+3
  2075  003C52  0012               	return	
  2076  003C54                     __end_of_asin:
  2077                           	opt stack 0
  2078                           tblptru	equ	0xFF8
  2079                           tblptrh	equ	0xFF7
  2080                           tblptrl	equ	0xFF6
  2081                           tablat	equ	0xFF5
  2082                           postinc0	equ	0xFEE
  2083                           wreg	equ	0xFE8
  2084                           postinc2	equ	0xFDE
  2085                           postdec2	equ	0xFDD
  2086                           status	equ	0xFD8
  2087                           
  2088 ;; *************** function _sqrt *****************
  2089 ;; Defined at:
  2090 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  a               4   97[BANK0 ] PTR unsigned char 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  frac            4   17[BANK1 ] unsigned long 
  2095 ;;  root            4   13[BANK1 ] struct .
  2096 ;;  grs             4    7[BANK1 ] unsigned long 
  2097 ;;  tfrac           4    2[BANK1 ] unsigned long 
  2098 ;;  exp             2   11[BANK1 ] int 
  2099 ;;  p               1    6[BANK1 ] unsigned char 
  2100 ;;  i               1    1[BANK1 ] unsigned char 
  2101 ;;  sign            1    0[BANK1 ] unsigned char 
  2102 ;; Return value:  Size  Location     Type
  2103 ;;                  4   97[BANK0 ] unsigned char 
  2104 ;; Registers used:
  2105 ;;		wreg, status,2, status,0
  2106 ;; Tracked objects:
  2107 ;;		On entry : 0/0
  2108 ;;		On exit  : 0/0
  2109 ;;		Unchanged: 0/0
  2110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2111 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2112 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  2113 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2114 ;;      Totals:         0       8      21       0       0       0       0       0       0       0       0       0       
      +0       0
  2115 ;;Total ram usage:       29 bytes
  2116 ;; Hardware stack levels used:    1
  2117 ;; Hardware stack levels required when called:    4
  2118 ;; This function calls:
  2119 ;;		Nothing
  2120 ;; This function is called by:
  2121 ;;		_parallelo
  2122 ;;		_asin
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           	psect	text4
  2127  002E1A                     __ptext4:
  2128                           	opt stack 0
  2129  002E1A                     _sqrt:
  2130                           	opt stack 24
  2131                           
  2132                           ;incstack = 0
  2133  002E1A  0100               	movlb	0	; () banked
  2134  002E1C  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  2135  002E1E  0B80               	andlw	128
  2136  002E20  0101               	movlb	1	; () banked
  2137  002E22  6F57               	movwf	sqrt@sign& (0+255),b
  2138  002E24  0100               	movlb	0	; () banked
  2139  002E26  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  2140  002E28  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  2141  002E2A  0101               	movlb	1	; () banked
  2142  002E2C  6F5D               	movwf	sqrt@p& (0+255),b
  2143                           
  2144                           ; BSR set to: 1
  2145  002E2E  0100               	movlb	0	; () banked
  2146  002E30  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  2147  002E32  D002               	goto	l6063
  2148                           
  2149                           ; BSR set to: 0
  2150  002E34  0101               	movlb	1	; () banked
  2151  002E36  815D               	bsf	sqrt@p& (0+255),0,b
  2152  002E38                     l6063:
  2153  002E38  C15D  F162         	movff	sqrt@p,sqrt@exp
  2154  002E3C  0101               	movlb	1	; () banked
  2155  002E3E  6B63               	clrf	(sqrt@exp+1)& (0+255),b
  2156                           
  2157                           ; BSR set to: 1
  2158  002E40  0EFF               	movlw	255
  2159  002E42  0100               	movlb	0	; () banked
  2160  002E44  15C1               	andwf	sqrt@a& (0+255),w,b
  2161  002E46  0101               	movlb	1	; () banked
  2162  002E48  6F68               	movwf	sqrt@frac& (0+255),b
  2163  002E4A  0EFF               	movlw	255
  2164  002E4C  0100               	movlb	0	; () banked
  2165  002E4E  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  2166  002E50  0101               	movlb	1	; () banked
  2167  002E52  6F69               	movwf	(sqrt@frac+1)& (0+255),b
  2168  002E54  0E7F               	movlw	127
  2169  002E56  0100               	movlb	0	; () banked
  2170  002E58  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  2171  002E5A  0101               	movlb	1	; () banked
  2172  002E5C  6F6A               	movwf	(sqrt@frac+2)& (0+255),b
  2173  002E5E  0E00               	movlw	0
  2174  002E60  0100               	movlb	0	; () banked
  2175  002E62  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  2176  002E64  0101               	movlb	1	; () banked
  2177  002E66  6F6B               	movwf	(sqrt@frac+3)& (0+255),b
  2178                           
  2179                           ; BSR set to: 1
  2180  002E68  0101               	movlb	1	; () banked
  2181  002E6A  5162               	movf	sqrt@exp& (0+255),w,b
  2182  002E6C  0101               	movlb	1	; () banked
  2183  002E6E  1163               	iorwf	(sqrt@exp+1)& (0+255),w,b
  2184  002E70  B4D8               	btfsc	status,2,c
  2185  002E72  D008               	goto	l6075
  2186                           
  2187                           ; BSR set to: 1
  2188  002E74  0101               	movlb	1	; () banked
  2189  002E76  8F6A               	bsf	(sqrt@frac+2)& (0+255),7,b
  2190                           
  2191                           ; BSR set to: 1
  2192  002E78  0101               	movlb	1	; () banked
  2193  002E7A  2962               	incf	sqrt@exp& (0+255),w,b
  2194  002E7C  0101               	movlb	1	; () banked
  2195  002E7E  1163               	iorwf	(sqrt@exp+1)& (0+255),w,b
  2196  002E80  A4D8               	btfss	status,2,c
  2197  002E82  D009               	goto	l6077
  2198  002E84                     l6075:
  2199                           
  2200                           ; BSR set to: 1
  2201  002E84  0E00               	movlw	0
  2202  002E86  0101               	movlb	1	; () banked
  2203  002E88  6F68               	movwf	sqrt@frac& (0+255),b
  2204  002E8A  0E00               	movlw	0
  2205  002E8C  6F69               	movwf	(sqrt@frac+1)& (0+255),b
  2206  002E8E  0E00               	movlw	0
  2207  002E90  6F6A               	movwf	(sqrt@frac+2)& (0+255),b
  2208  002E92  0E00               	movlw	0
  2209  002E94  6F6B               	movwf	(sqrt@frac+3)& (0+255),b
  2210  002E96                     l6077:
  2211                           
  2212                           ; BSR set to: 1
  2213  002E96  0101               	movlb	1	; () banked
  2214  002E98  5162               	movf	sqrt@exp& (0+255),w,b
  2215  002E9A  0101               	movlb	1	; () banked
  2216  002E9C  1163               	iorwf	(sqrt@exp+1)& (0+255),w,b
  2217  002E9E  A4D8               	btfss	status,2,c
  2218  002EA0  D00A               	goto	l6083
  2219                           
  2220                           ; BSR set to: 1
  2221  002EA2  0E00               	movlw	0
  2222  002EA4  0100               	movlb	0	; () banked
  2223  002EA6  6FC1               	movwf	?_sqrt& (0+255),b
  2224  002EA8  0E00               	movlw	0
  2225  002EAA  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  2226  002EAC  0E00               	movlw	0
  2227  002EAE  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  2228  002EB0  0E00               	movlw	0
  2229  002EB2  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  2230                           
  2231                           ; BSR set to: 0
  2232  002EB4  0012               	return	
  2233  002EB6                     l6083:
  2234  002EB6  0101               	movlb	1	; () banked
  2235  002EB8  5157               	movf	sqrt@sign& (0+255),w,b
  2236  002EBA  0101               	movlb	1	; () banked
  2237  002EBC  B4D8               	btfsc	status,2,c
  2238  002EBE  D01C               	goto	l6095
  2239                           
  2240                           ; BSR set to: 1
  2241  002EC0  0E00               	movlw	0
  2242  002EC2  0101               	movlb	1	; () banked
  2243  002EC4  6F64               	movwf	sqrt@root& (0+255),b
  2244  002EC6  0E00               	movlw	0
  2245  002EC8  6F65               	movwf	(sqrt@root+1)& (0+255),b
  2246  002ECA  0E40               	movlw	64
  2247  002ECC  6F66               	movwf	(sqrt@root+2)& (0+255),b
  2248  002ECE  0E00               	movlw	0
  2249  002ED0  6F67               	movwf	(sqrt@root+3)& (0+255),b
  2250                           
  2251                           ; BSR set to: 1
  2252  002ED2  0101               	movlb	1	; () banked
  2253  002ED4  0E80               	movlw	128
  2254  002ED6  1366               	iorwf	(sqrt@root+2)& (0+255),f,b
  2255  002ED8  0EFF               	movlw	255
  2256  002EDA  1367               	iorwf	(sqrt@root+3)& (0+255),f,b
  2257                           
  2258                           ; BSR set to: 1
  2259  002EDC  0E00               	movlw	0
  2260  002EDE  0101               	movlb	1	; () banked
  2261  002EE0  6F1F               	movwf	(_errno+1)& (0+255),b
  2262  002EE2  0E21               	movlw	33
  2263  002EE4  6F1E               	movwf	_errno& (0+255),b
  2264                           
  2265                           ; BSR set to: 1
  2266  002EE6  C164  F0C1         	movff	sqrt@root,?_sqrt
  2267  002EEA  C165  F0C2         	movff	sqrt@root+1,?_sqrt+1
  2268  002EEE  C166  F0C3         	movff	sqrt@root+2,?_sqrt+2
  2269  002EF2  C167  F0C4         	movff	sqrt@root+3,?_sqrt+3
  2270                           
  2271                           ; BSR set to: 1
  2272  002EF6  0012               	return	
  2273  002EF8                     l6095:
  2274                           
  2275                           ; BSR set to: 1
  2276  002EF8  0101               	movlb	1	; () banked
  2277  002EFA  2962               	incf	sqrt@exp& (0+255),w,b
  2278  002EFC  0101               	movlb	1	; () banked
  2279  002EFE  1163               	iorwf	(sqrt@exp+1)& (0+255),w,b
  2280  002F00  A4D8               	btfss	status,2,c
  2281  002F02  D012               	goto	l6103
  2282                           
  2283                           ; BSR set to: 1
  2284  002F04  0E00               	movlw	0
  2285  002F06  0101               	movlb	1	; () banked
  2286  002F08  6F64               	movwf	sqrt@root& (0+255),b
  2287  002F0A  0E00               	movlw	0
  2288  002F0C  6F65               	movwf	(sqrt@root+1)& (0+255),b
  2289  002F0E  0E80               	movlw	128
  2290  002F10  6F66               	movwf	(sqrt@root+2)& (0+255),b
  2291  002F12  0E7F               	movlw	127
  2292  002F14  6F67               	movwf	(sqrt@root+3)& (0+255),b
  2293                           
  2294                           ; BSR set to: 1
  2295  002F16  C164  F0C1         	movff	sqrt@root,?_sqrt
  2296  002F1A  C165  F0C2         	movff	sqrt@root+1,?_sqrt+1
  2297  002F1E  C166  F0C3         	movff	sqrt@root+2,?_sqrt+2
  2298  002F22  C167  F0C4         	movff	sqrt@root+3,?_sqrt+3
  2299                           
  2300                           ; BSR set to: 1
  2301  002F26  0012               	return	
  2302  002F28                     l6103:
  2303                           
  2304                           ; BSR set to: 1
  2305  002F28  0101               	movlb	1	; () banked
  2306  002F2A  0E81               	movlw	129
  2307  002F2C  2762               	addwf	sqrt@exp& (0+255),f,b
  2308  002F2E  0EFF               	movlw	255
  2309  002F30  2363               	addwfc	(sqrt@exp+1)& (0+255),f,b
  2310  002F32  0101               	movlb	1	; () banked
  2311  002F34  5162               	movf	sqrt@exp& (0+255),w,b
  2312  002F36  0B01               	andlw	1
  2313  002F38  0101               	movlb	1	; () banked
  2314  002F3A  6F5D               	movwf	sqrt@p& (0+255),b
  2315  002F3C  0101               	movlb	1	; () banked
  2316  002F3E  3563               	rlcf	(sqrt@exp+1)& (0+255),w,b
  2317  002F40  3363               	rrcf	(sqrt@exp+1)& (0+255),f,b
  2318  002F42  3362               	rrcf	sqrt@exp& (0+255),f,b
  2319  002F44  0E7F               	movlw	127
  2320  002F46  0101               	movlb	1	; () banked
  2321  002F48  2762               	addwf	sqrt@exp& (0+255),f,b
  2322  002F4A  0E00               	movlw	0
  2323  002F4C  2363               	addwfc	(sqrt@exp+1)& (0+255),f,b
  2324  002F4E  90D8               	bcf	status,0,c
  2325  002F50  0101               	movlb	1	; () banked
  2326  002F52  3568               	rlcf	sqrt@frac& (0+255),w,b
  2327  002F54  0101               	movlb	1	; () banked
  2328  002F56  6F59               	movwf	sqrt@tfrac& (0+255),b
  2329  002F58  0101               	movlb	1	; () banked
  2330  002F5A  3569               	rlcf	(sqrt@frac+1)& (0+255),w,b
  2331  002F5C  0101               	movlb	1	; () banked
  2332  002F5E  6F5A               	movwf	(sqrt@tfrac+1)& (0+255),b
  2333  002F60  0101               	movlb	1	; () banked
  2334  002F62  356A               	rlcf	(sqrt@frac+2)& (0+255),w,b
  2335  002F64  0101               	movlb	1	; () banked
  2336  002F66  6F5B               	movwf	(sqrt@tfrac+2)& (0+255),b
  2337  002F68  0101               	movlb	1	; () banked
  2338  002F6A  356B               	rlcf	(sqrt@frac+3)& (0+255),w,b
  2339  002F6C  0101               	movlb	1	; () banked
  2340  002F6E  6F5C               	movwf	(sqrt@tfrac+3)& (0+255),b
  2341                           
  2342                           ; BSR set to: 1
  2343  002F70  0E00               	movlw	0
  2344  002F72  0101               	movlb	1	; () banked
  2345  002F74  6F68               	movwf	sqrt@frac& (0+255),b
  2346  002F76  0E00               	movlw	0
  2347  002F78  6F69               	movwf	(sqrt@frac+1)& (0+255),b
  2348  002F7A  0E00               	movlw	0
  2349  002F7C  6F6A               	movwf	(sqrt@frac+2)& (0+255),b
  2350  002F7E  0E00               	movlw	0
  2351  002F80  6F6B               	movwf	(sqrt@frac+3)& (0+255),b
  2352                           
  2353                           ; BSR set to: 1
  2354  002F82  0E00               	movlw	0
  2355  002F84  0101               	movlb	1	; () banked
  2356  002F86  6F5E               	movwf	sqrt@grs& (0+255),b
  2357  002F88  0E00               	movlw	0
  2358  002F8A  6F5F               	movwf	(sqrt@grs+1)& (0+255),b
  2359  002F8C  0E00               	movlw	0
  2360  002F8E  6F60               	movwf	(sqrt@grs+2)& (0+255),b
  2361  002F90  0E01               	movlw	1
  2362  002F92  6F61               	movwf	(sqrt@grs+3)& (0+255),b
  2363                           
  2364                           ; BSR set to: 1
  2365  002F94  0101               	movlb	1	; () banked
  2366  002F96  515D               	movf	sqrt@p& (0+255),w,b
  2367  002F98  0101               	movlb	1	; () banked
  2368  002F9A  B4D8               	btfsc	status,2,c
  2369  002F9C  D006               	goto	l6113
  2370                           
  2371                           ; BSR set to: 1
  2372  002F9E  0101               	movlb	1	; () banked
  2373  002FA0  90D8               	bcf	status,0,c
  2374  002FA2  3759               	rlcf	sqrt@tfrac& (0+255),f,b
  2375  002FA4  375A               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  2376  002FA6  375B               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  2377  002FA8  375C               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  2378  002FAA                     l6113:
  2379                           
  2380                           ; BSR set to: 1
  2381  002FAA  0E00               	movlw	0
  2382  002FAC  0101               	movlb	1	; () banked
  2383  002FAE  6F58               	movwf	sqrt@i& (0+255),b
  2384  002FB0  D07E               	goto	l6127
  2385  002FB2                     l6115:
  2386                           
  2387                           ; BSR set to: 1
  2388  002FB2  0101               	movlb	1	; () banked
  2389  002FB4  515E               	movf	sqrt@grs& (0+255),w,b
  2390  002FB6  0101               	movlb	1	; () banked
  2391  002FB8  1368               	iorwf	sqrt@frac& (0+255),f,b
  2392  002FBA  0101               	movlb	1	; () banked
  2393  002FBC  515F               	movf	(sqrt@grs+1)& (0+255),w,b
  2394  002FBE  0101               	movlb	1	; () banked
  2395  002FC0  1369               	iorwf	(sqrt@frac+1)& (0+255),f,b
  2396  002FC2  0101               	movlb	1	; () banked
  2397  002FC4  5160               	movf	(sqrt@grs+2)& (0+255),w,b
  2398  002FC6  0101               	movlb	1	; () banked
  2399  002FC8  136A               	iorwf	(sqrt@frac+2)& (0+255),f,b
  2400  002FCA  0101               	movlb	1	; () banked
  2401  002FCC  5161               	movf	(sqrt@grs+3)& (0+255),w,b
  2402  002FCE  0101               	movlb	1	; () banked
  2403  002FD0  136B               	iorwf	(sqrt@frac+3)& (0+255),f,b
  2404  002FD2  0101               	movlb	1	; () banked
  2405  002FD4  5168               	movf	sqrt@frac& (0+255),w,b
  2406  002FD6  0101               	movlb	1	; () banked
  2407  002FD8  5D59               	subwf	sqrt@tfrac& (0+255),w,b
  2408  002FDA  0101               	movlb	1	; () banked
  2409  002FDC  5169               	movf	(sqrt@frac+1)& (0+255),w,b
  2410  002FDE  0101               	movlb	1	; () banked
  2411  002FE0  595A               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  2412  002FE2  0101               	movlb	1	; () banked
  2413  002FE4  516A               	movf	(sqrt@frac+2)& (0+255),w,b
  2414  002FE6  0101               	movlb	1	; () banked
  2415  002FE8  595B               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  2416  002FEA  0101               	movlb	1	; () banked
  2417  002FEC  516B               	movf	(sqrt@frac+3)& (0+255),w,b
  2418  002FEE  0101               	movlb	1	; () banked
  2419  002FF0  595C               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  2420  002FF2  A0D8               	btfss	status,0,c
  2421  002FF4  D021               	goto	l6119
  2422                           
  2423                           ; BSR set to: 1
  2424  002FF6  0101               	movlb	1	; () banked
  2425  002FF8  5168               	movf	sqrt@frac& (0+255),w,b
  2426  002FFA  0101               	movlb	1	; () banked
  2427  002FFC  5F59               	subwf	sqrt@tfrac& (0+255),f,b
  2428  002FFE  0101               	movlb	1	; () banked
  2429  003000  5169               	movf	(sqrt@frac+1)& (0+255),w,b
  2430  003002  0101               	movlb	1	; () banked
  2431  003004  5B5A               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  2432  003006  0101               	movlb	1	; () banked
  2433  003008  516A               	movf	(sqrt@frac+2)& (0+255),w,b
  2434  00300A  0101               	movlb	1	; () banked
  2435  00300C  5B5B               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  2436  00300E  0101               	movlb	1	; () banked
  2437  003010  516B               	movf	(sqrt@frac+3)& (0+255),w,b
  2438  003012  0101               	movlb	1	; () banked
  2439  003014  5B5C               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  2440  003016  0101               	movlb	1	; () banked
  2441  003018  515E               	movf	sqrt@grs& (0+255),w,b
  2442  00301A  0101               	movlb	1	; () banked
  2443  00301C  2768               	addwf	sqrt@frac& (0+255),f,b
  2444  00301E  0101               	movlb	1	; () banked
  2445  003020  515F               	movf	(sqrt@grs+1)& (0+255),w,b
  2446  003022  0101               	movlb	1	; () banked
  2447  003024  2369               	addwfc	(sqrt@frac+1)& (0+255),f,b
  2448  003026  0101               	movlb	1	; () banked
  2449  003028  5160               	movf	(sqrt@grs+2)& (0+255),w,b
  2450  00302A  0101               	movlb	1	; () banked
  2451  00302C  236A               	addwfc	(sqrt@frac+2)& (0+255),f,b
  2452  00302E  0101               	movlb	1	; () banked
  2453  003030  5161               	movf	(sqrt@grs+3)& (0+255),w,b
  2454  003032  0101               	movlb	1	; () banked
  2455  003034  236B               	addwfc	(sqrt@frac+3)& (0+255),f,b
  2456  003036  D01D               	goto	l6121
  2457  003038                     l6119:
  2458                           
  2459                           ; BSR set to: 1
  2460  003038  C15E  F0C5         	movff	sqrt@grs,??_sqrt
  2461  00303C  C15F  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  2462  003040  C160  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  2463  003044  C161  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  2464  003048  0100               	movlb	0	; () banked
  2465  00304A  1FC5               	comf	??_sqrt& (0+255),f,b
  2466  00304C  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  2467  00304E  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  2468  003050  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  2469  003052  0100               	movlb	0	; () banked
  2470  003054  51C5               	movf	??_sqrt& (0+255),w,b
  2471  003056  0101               	movlb	1	; () banked
  2472  003058  1768               	andwf	sqrt@frac& (0+255),f,b
  2473  00305A  0100               	movlb	0	; () banked
  2474  00305C  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  2475  00305E  0101               	movlb	1	; () banked
  2476  003060  1769               	andwf	(sqrt@frac+1)& (0+255),f,b
  2477  003062  0100               	movlb	0	; () banked
  2478  003064  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  2479  003066  0101               	movlb	1	; () banked
  2480  003068  176A               	andwf	(sqrt@frac+2)& (0+255),f,b
  2481  00306A  0100               	movlb	0	; () banked
  2482  00306C  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  2483  00306E  0101               	movlb	1	; () banked
  2484  003070  176B               	andwf	(sqrt@frac+3)& (0+255),f,b
  2485  003072                     l6121:
  2486                           
  2487                           ; BSR set to: 1
  2488  003072  C15E  F0C5         	movff	sqrt@grs,??_sqrt
  2489  003076  C15F  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  2490  00307A  C160  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  2491  00307E  C161  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  2492  003082  0100               	movlb	0	; () banked
  2493  003084  90D8               	bcf	status,0,c
  2494  003086  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  2495  003088  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  2496  00308A  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  2497  00308C  33C5               	rrcf	??_sqrt& (0+255),f,b
  2498  00308E  C0C5  F15E         	movff	??_sqrt,sqrt@grs
  2499  003092  C0C6  F15F         	movff	??_sqrt+1,sqrt@grs+1
  2500  003096  C0C7  F160         	movff	??_sqrt+2,sqrt@grs+2
  2501  00309A  C0C8  F161         	movff	??_sqrt+3,sqrt@grs+3
  2502                           
  2503                           ; BSR set to: 0
  2504  00309E  0101               	movlb	1	; () banked
  2505  0030A0  90D8               	bcf	status,0,c
  2506  0030A2  3759               	rlcf	sqrt@tfrac& (0+255),f,b
  2507  0030A4  375A               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  2508  0030A6  375B               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  2509  0030A8  375C               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  2510                           
  2511                           ; BSR set to: 1
  2512  0030AA  0101               	movlb	1	; () banked
  2513  0030AC  2B58               	incf	sqrt@i& (0+255),f,b
  2514  0030AE                     l6127:
  2515                           
  2516                           ; BSR set to: 1
  2517  0030AE  0E18               	movlw	24
  2518  0030B0  0101               	movlb	1	; () banked
  2519  0030B2  6558               	cpfsgt	sqrt@i& (0+255),b
  2520  0030B4  D77E               	goto	l6115
  2521                           
  2522                           ; BSR set to: 1
  2523                           
  2524                           ; BSR set to: 1
  2525  0030B6  C168  F0C5         	movff	sqrt@frac,??_sqrt
  2526  0030BA  C169  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  2527  0030BE  C16A  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  2528  0030C2  C16B  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  2529  0030C6  0100               	movlb	0	; () banked
  2530  0030C8  90D8               	bcf	status,0,c
  2531  0030CA  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  2532  0030CC  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  2533  0030CE  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  2534  0030D0  33C5               	rrcf	??_sqrt& (0+255),f,b
  2535  0030D2  C0C5  F168         	movff	??_sqrt,sqrt@frac
  2536  0030D6  C0C6  F169         	movff	??_sqrt+1,sqrt@frac+1
  2537  0030DA  C0C7  F16A         	movff	??_sqrt+2,sqrt@frac+2
  2538  0030DE  C0C8  F16B         	movff	??_sqrt+3,sqrt@frac+3
  2539                           
  2540                           ; BSR set to: 0
  2541  0030E2  0E01               	movlw	1
  2542  0030E4  0101               	movlb	1	; () banked
  2543  0030E6  1568               	andwf	sqrt@frac& (0+255),w,b
  2544  0030E8  0101               	movlb	1	; () banked
  2545  0030EA  6F5E               	movwf	sqrt@grs& (0+255),b
  2546  0030EC  0E00               	movlw	0
  2547  0030EE  0101               	movlb	1	; () banked
  2548  0030F0  1569               	andwf	(sqrt@frac+1)& (0+255),w,b
  2549  0030F2  0101               	movlb	1	; () banked
  2550  0030F4  6F5F               	movwf	(sqrt@grs+1)& (0+255),b
  2551  0030F6  0E00               	movlw	0
  2552  0030F8  0101               	movlb	1	; () banked
  2553  0030FA  156A               	andwf	(sqrt@frac+2)& (0+255),w,b
  2554  0030FC  0101               	movlb	1	; () banked
  2555  0030FE  6F60               	movwf	(sqrt@grs+2)& (0+255),b
  2556  003100  0E00               	movlw	0
  2557  003102  0101               	movlb	1	; () banked
  2558  003104  156B               	andwf	(sqrt@frac+3)& (0+255),w,b
  2559  003106  0101               	movlb	1	; () banked
  2560  003108  6F61               	movwf	(sqrt@grs+3)& (0+255),b
  2561                           
  2562                           ; BSR set to: 1
  2563  00310A  C168  F0C5         	movff	sqrt@frac,??_sqrt
  2564  00310E  C169  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  2565  003112  C16A  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  2566  003116  C16B  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  2567  00311A  0100               	movlb	0	; () banked
  2568  00311C  90D8               	bcf	status,0,c
  2569  00311E  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  2570  003120  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  2571  003122  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  2572  003124  33C5               	rrcf	??_sqrt& (0+255),f,b
  2573  003126  C0C5  F168         	movff	??_sqrt,sqrt@frac
  2574  00312A  C0C6  F169         	movff	??_sqrt+1,sqrt@frac+1
  2575  00312E  C0C7  F16A         	movff	??_sqrt+2,sqrt@frac+2
  2576  003132  C0C8  F16B         	movff	??_sqrt+3,sqrt@frac+3
  2577  003136  0101               	movlb	1	; () banked
  2578  003138  515E               	movf	sqrt@grs& (0+255),w,b
  2579  00313A  0101               	movlb	1	; () banked
  2580  00313C  2768               	addwf	sqrt@frac& (0+255),f,b
  2581  00313E  0101               	movlb	1	; () banked
  2582  003140  515F               	movf	(sqrt@grs+1)& (0+255),w,b
  2583  003142  0101               	movlb	1	; () banked
  2584  003144  2369               	addwfc	(sqrt@frac+1)& (0+255),f,b
  2585  003146  0101               	movlb	1	; () banked
  2586  003148  5160               	movf	(sqrt@grs+2)& (0+255),w,b
  2587  00314A  0101               	movlb	1	; () banked
  2588  00314C  236A               	addwfc	(sqrt@frac+2)& (0+255),f,b
  2589  00314E  0101               	movlb	1	; () banked
  2590  003150  5161               	movf	(sqrt@grs+3)& (0+255),w,b
  2591  003152  0101               	movlb	1	; () banked
  2592  003154  236B               	addwfc	(sqrt@frac+3)& (0+255),f,b
  2593                           
  2594                           ; BSR set to: 1
  2595  003156  0101               	movlb	1	; () banked
  2596  003158  A16B               	btfss	(sqrt@frac+3)& (0+255),0,b
  2597  00315A  D019               	goto	l6139
  2598                           
  2599                           ; BSR set to: 1
  2600  00315C  C168  F0C5         	movff	sqrt@frac,??_sqrt
  2601  003160  C169  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  2602  003164  C16A  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  2603  003168  C16B  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  2604  00316C  0100               	movlb	0	; () banked
  2605  00316E  90D8               	bcf	status,0,c
  2606  003170  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  2607  003172  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  2608  003174  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  2609  003176  33C5               	rrcf	??_sqrt& (0+255),f,b
  2610  003178  C0C5  F168         	movff	??_sqrt,sqrt@frac
  2611  00317C  C0C6  F169         	movff	??_sqrt+1,sqrt@frac+1
  2612  003180  C0C7  F16A         	movff	??_sqrt+2,sqrt@frac+2
  2613  003184  C0C8  F16B         	movff	??_sqrt+3,sqrt@frac+3
  2614  003188  0101               	movlb	1	; () banked
  2615  00318A  4B62               	infsnz	sqrt@exp& (0+255),f,b
  2616  00318C  2B63               	incf	(sqrt@exp+1)& (0+255),f,b
  2617  00318E                     l6139:
  2618                           
  2619                           ; BSR set to: 1
  2620  00318E  0EFF               	movlw	255
  2621  003190  0101               	movlb	1	; () banked
  2622  003192  1568               	andwf	sqrt@frac& (0+255),w,b
  2623  003194  0101               	movlb	1	; () banked
  2624  003196  6F64               	movwf	sqrt@root& (0+255),b
  2625  003198  0EFF               	movlw	255
  2626  00319A  0101               	movlb	1	; () banked
  2627  00319C  1569               	andwf	(sqrt@frac+1)& (0+255),w,b
  2628  00319E  0101               	movlb	1	; () banked
  2629  0031A0  6F65               	movwf	(sqrt@root+1)& (0+255),b
  2630  0031A2  0E7F               	movlw	127
  2631  0031A4  0101               	movlb	1	; () banked
  2632  0031A6  156A               	andwf	(sqrt@frac+2)& (0+255),w,b
  2633  0031A8  0101               	movlb	1	; () banked
  2634  0031AA  6F66               	movwf	(sqrt@root+2)& (0+255),b
  2635  0031AC  0E00               	movlw	0
  2636  0031AE  0101               	movlb	1	; () banked
  2637  0031B0  156B               	andwf	(sqrt@frac+3)& (0+255),w,b
  2638  0031B2  0101               	movlb	1	; () banked
  2639  0031B4  6F67               	movwf	(sqrt@root+3)& (0+255),b
  2640                           
  2641                           ; BSR set to: 1
  2642  0031B6  C162  F15D         	movff	sqrt@exp,sqrt@p
  2643                           
  2644                           ; BSR set to: 1
  2645  0031BA  0101               	movlb	1	; () banked
  2646  0031BC  A15D               	btfss	sqrt@p& (0+255),0,b
  2647  0031BE  D002               	goto	l6147
  2648                           
  2649                           ; BSR set to: 1
  2650  0031C0  0101               	movlb	1	; () banked
  2651  0031C2  8F66               	bsf	(sqrt@root+2)& (0+255),7,b
  2652  0031C4                     l6147:
  2653                           
  2654                           ; BSR set to: 1
  2655  0031C4  0101               	movlb	1	; () banked
  2656  0031C6  90D8               	bcf	status,0,c
  2657  0031C8  315D               	rrcf	sqrt@p& (0+255),w,b
  2658  0031CA  0101               	movlb	1	; () banked
  2659  0031CC  6F67               	movwf	(sqrt@root+3)& (0+255),b
  2660                           
  2661                           ; BSR set to: 1
  2662  0031CE  0101               	movlb	1	; () banked
  2663  0031D0  9F67               	bcf	(sqrt@root+3)& (0+255),7,b
  2664                           
  2665                           ; BSR set to: 1
  2666  0031D2  C164  F0C1         	movff	sqrt@root,?_sqrt
  2667  0031D6  C165  F0C2         	movff	sqrt@root+1,?_sqrt+1
  2668  0031DA  C166  F0C3         	movff	sqrt@root+2,?_sqrt+2
  2669  0031DE  C167  F0C4         	movff	sqrt@root+3,?_sqrt+3
  2670  0031E2  0012               	return	
  2671  0031E4                     __end_of_sqrt:
  2672                           	opt stack 0
  2673                           tblptru	equ	0xFF8
  2674                           tblptrh	equ	0xFF7
  2675                           tblptrl	equ	0xFF6
  2676                           tablat	equ	0xFF5
  2677                           postinc0	equ	0xFEE
  2678                           wreg	equ	0xFE8
  2679                           postinc2	equ	0xFDE
  2680                           postdec2	equ	0xFDD
  2681                           status	equ	0xFD8
  2682                           
  2683 ;; *************** function _atan *****************
  2684 ;; Defined at:
  2685 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  f               4    0[BANK1 ] unsigned char 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  val             4   17[BANK1 ] unsigned char 
  2690 ;;  val_squared     4   13[BANK1 ] unsigned char 
  2691 ;;  x               4    8[BANK1 ] unsigned char 
  2692 ;;  y               4    4[BANK1 ] unsigned char 
  2693 ;;  recip           1   12[BANK1 ] unsigned char 
  2694 ;; Return value:  Size  Location     Type
  2695 ;;                  4    0[BANK1 ] unsigned char 
  2696 ;; Registers used:
  2697 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2698 ;; Tracked objects:
  2699 ;;		On entry : 0/0
  2700 ;;		On exit  : 0/0
  2701 ;;		Unchanged: 0/0
  2702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2703 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2704 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  2705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2706 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  2707 ;;Total ram usage:       21 bytes
  2708 ;; Hardware stack levels used:    1
  2709 ;; Hardware stack levels required when called:    6
  2710 ;; This function calls:
  2711 ;;		___fladd
  2712 ;;		___fldiv
  2713 ;;		___flge
  2714 ;;		___flmul
  2715 ;;		___flneg
  2716 ;;		_eval_poly
  2717 ;;		_fabs
  2718 ;; This function is called by:
  2719 ;;		_asin
  2720 ;; This function uses a non-reentrant model
  2721 ;;
  2722                           
  2723                           	psect	text5
  2724  003EC6                     __ptext5:
  2725                           	opt stack 0
  2726  003EC6                     _atan:
  2727                           	opt stack 21
  2728                           
  2729                           ;incstack = 0
  2730  003EC6  C157  F0AD         	movff	atan@f,fabs@d
  2731  003ECA  C158  F0AE         	movff	atan@f+1,fabs@d+1
  2732  003ECE  C159  F0AF         	movff	atan@f+2,fabs@d+2
  2733  003ED2  C15A  F0B0         	movff	atan@f+3,fabs@d+3
  2734  003ED6  EC44  F027         	call	_fabs	;wreg free
  2735  003EDA  C0AD  F168         	movff	?_fabs,atan@val
  2736  003EDE  C0AE  F169         	movff	?_fabs+1,atan@val+1
  2737  003EE2  C0AF  F16A         	movff	?_fabs+2,atan@val+2
  2738  003EE6  C0B0  F16B         	movff	?_fabs+3,atan@val+3
  2739  003EEA  0101               	movlb	1	; () banked
  2740  003EEC  5168               	movf	atan@val& (0+255),w,b
  2741  003EEE  0101               	movlb	1	; () banked
  2742  003EF0  1169               	iorwf	(atan@val+1)& (0+255),w,b
  2743  003EF2  0101               	movlb	1	; () banked
  2744  003EF4  116A               	iorwf	(atan@val+2)& (0+255),w,b
  2745  003EF6  0101               	movlb	1	; () banked
  2746  003EF8  116B               	iorwf	(atan@val+3)& (0+255),w,b
  2747  003EFA  A4D8               	btfss	status,2,c
  2748  003EFC  D00A               	goto	l6161
  2749                           
  2750                           ; BSR set to: 1
  2751  003EFE  0E00               	movlw	0
  2752  003F00  0101               	movlb	1	; () banked
  2753  003F02  6F57               	movwf	?_atan& (0+255),b
  2754  003F04  0E00               	movlw	0
  2755  003F06  6F58               	movwf	(?_atan+1)& (0+255),b
  2756  003F08  0E00               	movlw	0
  2757  003F0A  6F59               	movwf	(?_atan+2)& (0+255),b
  2758  003F0C  0E00               	movlw	0
  2759  003F0E  6F5A               	movwf	(?_atan+3)& (0+255),b
  2760                           
  2761                           ; BSR set to: 1
  2762  003F10  0012               	return	
  2763  003F12                     l6161:
  2764                           
  2765                           ; BSR set to: 1
  2766  003F12  0E00               	movlw	0
  2767  003F14  0100               	movlb	0	; () banked
  2768  003F16  6FB1               	movwf	___flge@ff1& (0+255),b
  2769  003F18  0E00               	movlw	0
  2770  003F1A  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  2771  003F1C  0E80               	movlw	128
  2772  003F1E  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  2773  003F20  0E3F               	movlw	63
  2774  003F22  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  2775  003F24  C168  F0B5         	movff	atan@val,___flge@ff2
  2776  003F28  C169  F0B6         	movff	atan@val+1,___flge@ff2+1
  2777  003F2C  C16A  F0B7         	movff	atan@val+2,___flge@ff2+2
  2778  003F30  C16B  F0B8         	movff	atan@val+3,___flge@ff2+3
  2779  003F34  EC56  F022         	call	___flge	;wreg free
  2780  003F38  0100               	movlb	0	; () banked
  2781  003F3A  B0D8               	btfsc	status,0,c
  2782  003F3C  D002               	goto	u7900
  2783  003F3E  0E01               	movlw	1
  2784  003F40  D001               	goto	u7910
  2785  003F42                     u7900:
  2786  003F42  0E00               	movlw	0
  2787  003F44                     u7910:
  2788  003F44  0101               	movlb	1	; () banked
  2789  003F46  6F63               	movwf	atan@recip& (0+255),b
  2790  003F48  0101               	movlb	1	; () banked
  2791  003F4A  5163               	movf	atan@recip& (0+255),w,b
  2792  003F4C  B4D8               	btfsc	status,2,c
  2793  003F4E  D01B               	goto	l6165
  2794                           
  2795                           ; BSR set to: 1
  2796  003F50  0E00               	movlw	0
  2797  003F52  0100               	movlb	0	; () banked
  2798  003F54  6F77               	movwf	___fldiv@b& (0+255),b
  2799  003F56  0E00               	movlw	0
  2800  003F58  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  2801  003F5A  0E80               	movlw	128
  2802  003F5C  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  2803  003F5E  0E3F               	movlw	63
  2804  003F60  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  2805  003F62  C168  F07B         	movff	atan@val,___fldiv@a
  2806  003F66  C169  F07C         	movff	atan@val+1,___fldiv@a+1
  2807  003F6A  C16A  F07D         	movff	atan@val+2,___fldiv@a+2
  2808  003F6E  C16B  F07E         	movff	atan@val+3,___fldiv@a+3
  2809  003F72  ECF2  F018         	call	___fldiv	;wreg free
  2810  003F76  C077  F168         	movff	?___fldiv,atan@val
  2811  003F7A  C078  F169         	movff	?___fldiv+1,atan@val+1
  2812  003F7E  C079  F16A         	movff	?___fldiv+2,atan@val+2
  2813  003F82  C07A  F16B         	movff	?___fldiv+3,atan@val+3
  2814  003F86                     l6165:
  2815  003F86  C168  F090         	movff	atan@val,___flmul@b
  2816  003F8A  C169  F091         	movff	atan@val+1,___flmul@b+1
  2817  003F8E  C16A  F092         	movff	atan@val+2,___flmul@b+2
  2818  003F92  C16B  F093         	movff	atan@val+3,___flmul@b+3
  2819  003F96  C168  F094         	movff	atan@val,___flmul@a
  2820  003F9A  C169  F095         	movff	atan@val+1,___flmul@a+1
  2821  003F9E  C16A  F096         	movff	atan@val+2,___flmul@a+2
  2822  003FA2  C16B  F097         	movff	atan@val+3,___flmul@a+3
  2823  003FA6  ECBA  F014         	call	___flmul	;wreg free
  2824  003FAA  C090  F164         	movff	?___flmul,atan@val_squared
  2825  003FAE  C091  F165         	movff	?___flmul+1,atan@val_squared+1
  2826  003FB2  C092  F166         	movff	?___flmul+2,atan@val_squared+2
  2827  003FB6  C093  F167         	movff	?___flmul+3,atan@val_squared+3
  2828  003FBA  C164  F0C1         	movff	atan@val_squared,eval_poly@x
  2829  003FBE  C165  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  2830  003FC2  C166  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  2831  003FC6  C167  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  2832  003FCA  0E19               	movlw	low atan@coeff_b
  2833  003FCC  0100               	movlb	0	; () banked
  2834  003FCE  6FC5               	movwf	eval_poly@d& (0+255),b
  2835  003FD0  0E0D               	movlw	high atan@coeff_b
  2836  003FD2  0100               	movlb	0	; () banked
  2837  003FD4  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  2838  003FD6  0E00               	movlw	0
  2839  003FD8  0100               	movlb	0	; () banked
  2840  003FDA  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  2841  003FDC  0E04               	movlw	4
  2842  003FDE  6FC7               	movwf	eval_poly@n& (0+255),b
  2843  003FE0  EC69  F024         	call	_eval_poly	;wreg free
  2844  003FE4  C0C1  F15B         	movff	?_eval_poly,atan@y
  2845  003FE8  C0C2  F15C         	movff	?_eval_poly+1,atan@y+1
  2846  003FEC  C0C3  F15D         	movff	?_eval_poly+2,atan@y+2
  2847  003FF0  C0C4  F15E         	movff	?_eval_poly+3,atan@y+3
  2848  003FF4  C164  F0C1         	movff	atan@val_squared,eval_poly@x
  2849  003FF8  C165  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  2850  003FFC  C166  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  2851  004000  C167  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  2852  004004  0E01               	movlw	low atan@coeff_a
  2853  004006  0100               	movlb	0	; () banked
  2854  004008  6FC5               	movwf	eval_poly@d& (0+255),b
  2855  00400A  0E0D               	movlw	high atan@coeff_a
  2856  00400C  0100               	movlb	0	; () banked
  2857  00400E  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  2858  004010  0E00               	movlw	0
  2859  004012  0100               	movlb	0	; () banked
  2860  004014  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  2861  004016  0E05               	movlw	5
  2862  004018  6FC7               	movwf	eval_poly@n& (0+255),b
  2863  00401A  EC69  F024         	call	_eval_poly	;wreg free
  2864  00401E  C0C1  F15F         	movff	?_eval_poly,atan@x
  2865  004022  C0C2  F160         	movff	?_eval_poly+1,atan@x+1
  2866  004026  C0C3  F161         	movff	?_eval_poly+2,atan@x+2
  2867  00402A  C0C4  F162         	movff	?_eval_poly+3,atan@x+3
  2868  00402E  C168  F090         	movff	atan@val,___flmul@b
  2869  004032  C169  F091         	movff	atan@val+1,___flmul@b+1
  2870  004036  C16A  F092         	movff	atan@val+2,___flmul@b+2
  2871  00403A  C16B  F093         	movff	atan@val+3,___flmul@b+3
  2872  00403E  C15B  F07B         	movff	atan@y,___fldiv@a
  2873  004042  C15C  F07C         	movff	atan@y+1,___fldiv@a+1
  2874  004046  C15D  F07D         	movff	atan@y+2,___fldiv@a+2
  2875  00404A  C15E  F07E         	movff	atan@y+3,___fldiv@a+3
  2876  00404E  C15F  F077         	movff	atan@x,___fldiv@b
  2877  004052  C160  F078         	movff	atan@x+1,___fldiv@b+1
  2878  004056  C161  F079         	movff	atan@x+2,___fldiv@b+2
  2879  00405A  C162  F07A         	movff	atan@x+3,___fldiv@b+3
  2880  00405E  ECF2  F018         	call	___fldiv	;wreg free
  2881  004062  C077  F094         	movff	?___fldiv,___flmul@a
  2882  004066  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  2883  00406A  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  2884  00406E  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  2885  004072  ECBA  F014         	call	___flmul	;wreg free
  2886  004076  C090  F168         	movff	?___flmul,atan@val
  2887  00407A  C091  F169         	movff	?___flmul+1,atan@val+1
  2888  00407E  C092  F16A         	movff	?___flmul+2,atan@val+2
  2889  004082  C093  F16B         	movff	?___flmul+3,atan@val+3
  2890  004086  0101               	movlb	1	; () banked
  2891  004088  5163               	movf	atan@recip& (0+255),w,b
  2892  00408A  0101               	movlb	1	; () banked
  2893  00408C  B4D8               	btfsc	status,2,c
  2894  00408E  D025               	goto	l6177
  2895                           
  2896                           ; BSR set to: 1
  2897  004090  C168  F0A9         	movff	atan@val,___flneg@f1
  2898  004094  C169  F0AA         	movff	atan@val+1,___flneg@f1+1
  2899  004098  C16A  F0AB         	movff	atan@val+2,___flneg@f1+2
  2900  00409C  C16B  F0AC         	movff	atan@val+3,___flneg@f1+3
  2901  0040A0  EC80  F027         	call	___flneg	;wreg free
  2902  0040A4  C0A9  F0AD         	movff	?___flneg,___fladd@b
  2903  0040A8  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  2904  0040AC  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  2905  0040B0  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  2906  0040B4  0EDB               	movlw	219
  2907  0040B6  0100               	movlb	0	; () banked
  2908  0040B8  6FB1               	movwf	___fladd@a& (0+255),b
  2909  0040BA  0E0F               	movlw	15
  2910  0040BC  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  2911  0040BE  0EC9               	movlw	201
  2912  0040C0  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  2913  0040C2  0E3F               	movlw	63
  2914  0040C4  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  2915  0040C6  EC66  F012         	call	___fladd	;wreg free
  2916  0040CA  C0AD  F168         	movff	?___fladd,atan@val
  2917  0040CE  C0AE  F169         	movff	?___fladd+1,atan@val+1
  2918  0040D2  C0AF  F16A         	movff	?___fladd+2,atan@val+2
  2919  0040D6  C0B0  F16B         	movff	?___fladd+3,atan@val+3
  2920  0040DA                     l6177:
  2921  0040DA  0101               	movlb	1	; () banked
  2922  0040DC  BF5A               	btfsc	(atan@f+3)& (0+255),7,b
  2923  0040DE  D009               	goto	l6181
  2924                           
  2925                           ; BSR set to: 1
  2926  0040E0  C168  F157         	movff	atan@val,?_atan
  2927  0040E4  C169  F158         	movff	atan@val+1,?_atan+1
  2928  0040E8  C16A  F159         	movff	atan@val+2,?_atan+2
  2929  0040EC  C16B  F15A         	movff	atan@val+3,?_atan+3
  2930  0040F0  0012               	return	
  2931  0040F2                     l6181:
  2932                           
  2933                           ; BSR set to: 1
  2934  0040F2  C168  F0A9         	movff	atan@val,___flneg@f1
  2935  0040F6  C169  F0AA         	movff	atan@val+1,___flneg@f1+1
  2936  0040FA  C16A  F0AB         	movff	atan@val+2,___flneg@f1+2
  2937  0040FE  C16B  F0AC         	movff	atan@val+3,___flneg@f1+3
  2938  004102  EC80  F027         	call	___flneg	;wreg free
  2939  004106  C0A9  F157         	movff	?___flneg,?_atan
  2940  00410A  C0AA  F158         	movff	?___flneg+1,?_atan+1
  2941  00410E  C0AB  F159         	movff	?___flneg+2,?_atan+2
  2942  004112  C0AC  F15A         	movff	?___flneg+3,?_atan+3
  2943  004116  0012               	return	
  2944  004118                     __end_of_atan:
  2945                           	opt stack 0
  2946                           tblptru	equ	0xFF8
  2947                           tblptrh	equ	0xFF7
  2948                           tblptrl	equ	0xFF6
  2949                           tablat	equ	0xFF5
  2950                           postinc0	equ	0xFEE
  2951                           wreg	equ	0xFE8
  2952                           postinc2	equ	0xFDE
  2953                           postdec2	equ	0xFDD
  2954                           status	equ	0xFD8
  2955                           
  2956 ;; *************** function _fabs *****************
  2957 ;; Defined at:
  2958 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  2959 ;; Parameters:    Size  Location     Type
  2960 ;;  d               4   77[BANK0 ] unsigned char 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;		None
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  4   77[BANK0 ] unsigned char 
  2965 ;; Registers used:
  2966 ;;		wreg, status,2, status,0, cstack
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2972 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2975 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2976 ;;Total ram usage:        4 bytes
  2977 ;; Hardware stack levels used:    1
  2978 ;; Hardware stack levels required when called:    5
  2979 ;; This function calls:
  2980 ;;		___flneg
  2981 ;; This function is called by:
  2982 ;;		_asin
  2983 ;;		_atan
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           	psect	text6
  2988  004E88                     __ptext6:
  2989                           	opt stack 0
  2990  004E88                     _fabs:
  2991                           	opt stack 22
  2992                           
  2993                           ;incstack = 0
  2994  004E88  0100               	movlb	0	; () banked
  2995  004E8A  AFB0               	btfss	(fabs@d+3)& (0+255),7,b
  2996  004E8C  D013               	goto	l997
  2997                           
  2998                           ; BSR set to: 0
  2999  004E8E  C0AD  F0A9         	movff	fabs@d,___flneg@f1
  3000  004E92  C0AE  F0AA         	movff	fabs@d+1,___flneg@f1+1
  3001  004E96  C0AF  F0AB         	movff	fabs@d+2,___flneg@f1+2
  3002  004E9A  C0B0  F0AC         	movff	fabs@d+3,___flneg@f1+3
  3003  004E9E  EC80  F027         	call	___flneg	;wreg free
  3004  004EA2  C0A9  F0AD         	movff	?___flneg,?_fabs
  3005  004EA6  C0AA  F0AE         	movff	?___flneg+1,?_fabs+1
  3006  004EAA  C0AB  F0AF         	movff	?___flneg+2,?_fabs+2
  3007  004EAE  C0AC  F0B0         	movff	?___flneg+3,?_fabs+3
  3008  004EB2  0012               	return	
  3009  004EB4                     l997:
  3010                           
  3011                           ; BSR set to: 0
  3012  004EB4  C0AD  F0AD         	movff	fabs@d,?_fabs
  3013  004EB8  C0AE  F0AE         	movff	fabs@d+1,?_fabs+1
  3014  004EBC  C0AF  F0AF         	movff	fabs@d+2,?_fabs+2
  3015  004EC0  C0B0  F0B0         	movff	fabs@d+3,?_fabs+3
  3016  004EC4  0012               	return		;funcret
  3017  004EC6                     __end_of_fabs:
  3018                           	opt stack 0
  3019                           tblptru	equ	0xFF8
  3020                           tblptrh	equ	0xFF7
  3021                           tblptrl	equ	0xFF6
  3022                           tablat	equ	0xFF5
  3023                           postinc0	equ	0xFEE
  3024                           wreg	equ	0xFE8
  3025                           postinc2	equ	0xFDE
  3026                           postdec2	equ	0xFDD
  3027                           status	equ	0xFD8
  3028                           
  3029 ;; *************** function ___flneg *****************
  3030 ;; Defined at:
  3031 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  f1              4   73[BANK0 ] unsigned char 
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;		None
  3036 ;; Return value:  Size  Location     Type
  3037 ;;                  4   73[BANK0 ] unsigned char 
  3038 ;; Registers used:
  3039 ;;		wreg, status,2, status,0
  3040 ;; Tracked objects:
  3041 ;;		On entry : 0/0
  3042 ;;		On exit  : 0/0
  3043 ;;		Unchanged: 0/0
  3044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3045 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3048 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3049 ;;Total ram usage:        4 bytes
  3050 ;; Hardware stack levels used:    1
  3051 ;; Hardware stack levels required when called:    4
  3052 ;; This function calls:
  3053 ;;		Nothing
  3054 ;; This function is called by:
  3055 ;;		_asin
  3056 ;;		_atan
  3057 ;;		_fabs
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text7
  3062  004F00                     __ptext7:
  3063                           	opt stack 0
  3064  004F00                     ___flneg:
  3065                           	opt stack 22
  3066                           
  3067                           ;incstack = 0
  3068  004F00  0100               	movlb	0	; () banked
  3069  004F02  51A9               	movf	___flneg@f1& (0+255),w,b
  3070  004F04  0100               	movlb	0	; () banked
  3071  004F06  11AA               	iorwf	(___flneg@f1+1)& (0+255),w,b
  3072  004F08  0100               	movlb	0	; () banked
  3073  004F0A  11AB               	iorwf	(___flneg@f1+2)& (0+255),w,b
  3074  004F0C  0100               	movlb	0	; () banked
  3075  004F0E  11AC               	iorwf	(___flneg@f1+3)& (0+255),w,b
  3076  004F10  B4D8               	btfsc	status,2,c
  3077  004F12  D009               	goto	l5883
  3078                           
  3079                           ; BSR set to: 0
  3080  004F14  0E00               	movlw	0
  3081  004F16  0100               	movlb	0	; () banked
  3082  004F18  1BA9               	xorwf	___flneg@f1& (0+255),f,b
  3083  004F1A  0E00               	movlw	0
  3084  004F1C  1BAA               	xorwf	(___flneg@f1+1)& (0+255),f,b
  3085  004F1E  0E00               	movlw	0
  3086  004F20  1BAB               	xorwf	(___flneg@f1+2)& (0+255),f,b
  3087  004F22  0E80               	movlw	128
  3088  004F24  1BAC               	xorwf	(___flneg@f1+3)& (0+255),f,b
  3089  004F26                     l5883:
  3090                           
  3091                           ; BSR set to: 0
  3092  004F26  C0A9  F0A9         	movff	___flneg@f1,?___flneg
  3093  004F2A  C0AA  F0AA         	movff	___flneg@f1+1,?___flneg+1
  3094  004F2E  C0AB  F0AB         	movff	___flneg@f1+2,?___flneg+2
  3095  004F32  C0AC  F0AC         	movff	___flneg@f1+3,?___flneg+3
  3096  004F36  0012               	return	
  3097  004F38                     __end_of___flneg:
  3098                           	opt stack 0
  3099                           tblptru	equ	0xFF8
  3100                           tblptrh	equ	0xFF7
  3101                           tblptrl	equ	0xFF6
  3102                           tablat	equ	0xFF5
  3103                           postinc0	equ	0xFEE
  3104                           wreg	equ	0xFE8
  3105                           postinc2	equ	0xFDE
  3106                           postdec2	equ	0xFDD
  3107                           status	equ	0xFD8
  3108                           
  3109 ;; *************** function _eval_poly *****************
  3110 ;; Defined at:
  3111 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;  x               4   97[BANK0 ] unsigned char 
  3114 ;;  d               2  101[BANK0 ] PTR const 
  3115 ;;		 -> atan@coeff_a(24), atan@coeff_b(20), 
  3116 ;;  n               2  103[BANK0 ] int 
  3117 ;; Auto vars:     Size  Location     Type
  3118 ;;  res             4  109[BANK0 ] int 
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  4   97[BANK0 ] int 
  3121 ;; Registers used:
  3122 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3128 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3129 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3130 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3131 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3132 ;;Total ram usage:       16 bytes
  3133 ;; Hardware stack levels used:    1
  3134 ;; Hardware stack levels required when called:    5
  3135 ;; This function calls:
  3136 ;;		___fladd
  3137 ;;		___flmul
  3138 ;; This function is called by:
  3139 ;;		_atan
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text8
  3144  0048D2                     __ptext8:
  3145                           	opt stack 0
  3146  0048D2                     _eval_poly:
  3147                           	opt stack 21
  3148                           
  3149                           ; BSR set to: 0
  3150                           ;incstack = 0
  3151  0048D2  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  3152  0048D6  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  3153  0048DA  0100               	movlb	0	; () banked
  3154  0048DC  90D8               	bcf	status,0,c
  3155  0048DE  37C9               	rlcf	??_eval_poly& (0+255),f,b
  3156  0048E0  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3157  0048E2  0100               	movlb	0	; () banked
  3158  0048E4  90D8               	bcf	status,0,c
  3159  0048E6  37C9               	rlcf	??_eval_poly& (0+255),f,b
  3160  0048E8  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3161  0048EA  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  3162  0048EE  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  3163  0048F2  0100               	movlb	0	; () banked
  3164  0048F4  51C9               	movf	??_eval_poly& (0+255),w,b
  3165  0048F6  0100               	movlb	0	; () banked
  3166  0048F8  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  3167  0048FA  0100               	movlb	0	; () banked
  3168  0048FC  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  3169  0048FE  0100               	movlb	0	; () banked
  3170  004900  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  3171  004902  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  3172  004906  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  3173  00490A                     	if	0	;tblptru may be non-zero
  3174  00490A                     	endif
  3175  00490A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3176  00490A  0E00               	movlw	low (__mediumconst shr (0+16))
  3177  00490C  6EF8               	movwf	tblptru,c
  3178  00490E                     	endif
  3179  00490E  0009               	tblrd		*+
  3180  004910  CFF5 F0CD          	movff	tablat,eval_poly@res
  3181  004914  0009               	tblrd		*+
  3182  004916  CFF5 F0CE          	movff	tablat,eval_poly@res+1
  3183  00491A  0009               	tblrd		*+
  3184  00491C  CFF5 F0CF          	movff	tablat,eval_poly@res+2
  3185  004920  000A               	tblrd		*-
  3186  004922  CFF5 F0D0          	movff	tablat,eval_poly@res+3
  3187  004926  D052               	goto	l6033
  3188  004928                     l6031:
  3189                           
  3190                           ; BSR set to: 0
  3191  004928  C0CD  F094         	movff	eval_poly@res,___flmul@a
  3192  00492C  C0CE  F095         	movff	eval_poly@res+1,___flmul@a+1
  3193  004930  C0CF  F096         	movff	eval_poly@res+2,___flmul@a+2
  3194  004934  C0D0  F097         	movff	eval_poly@res+3,___flmul@a+3
  3195  004938  C0C1  F090         	movff	eval_poly@x,___flmul@b
  3196  00493C  C0C2  F091         	movff	eval_poly@x+1,___flmul@b+1
  3197  004940  C0C3  F092         	movff	eval_poly@x+2,___flmul@b+2
  3198  004944  C0C4  F093         	movff	eval_poly@x+3,___flmul@b+3
  3199  004948  ECBA  F014         	call	___flmul	;wreg free
  3200  00494C  C090  F0AD         	movff	?___flmul,___fladd@b
  3201  004950  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  3202  004954  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  3203  004958  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  3204  00495C  0100               	movlb	0	; () banked
  3205  00495E  07C7               	decf	eval_poly@n& (0+255),f,b
  3206  004960  A0D8               	btfss	status,0,c
  3207  004962  07C8               	decf	(eval_poly@n+1)& (0+255),f,b
  3208  004964  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  3209  004968  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  3210  00496C  0100               	movlb	0	; () banked
  3211  00496E  90D8               	bcf	status,0,c
  3212  004970  37C9               	rlcf	??_eval_poly& (0+255),f,b
  3213  004972  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3214  004974  0100               	movlb	0	; () banked
  3215  004976  90D8               	bcf	status,0,c
  3216  004978  37C9               	rlcf	??_eval_poly& (0+255),f,b
  3217  00497A  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3218  00497C  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  3219  004980  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  3220  004984  0100               	movlb	0	; () banked
  3221  004986  51C9               	movf	??_eval_poly& (0+255),w,b
  3222  004988  0100               	movlb	0	; () banked
  3223  00498A  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  3224  00498C  0100               	movlb	0	; () banked
  3225  00498E  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  3226  004990  0100               	movlb	0	; () banked
  3227  004992  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  3228  004994  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  3229  004998  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  3230  00499C                     	if	0	;tblptru may be non-zero
  3231  00499C                     	endif
  3232  00499C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3233  00499C  0E00               	movlw	low (__mediumconst shr (0+16))
  3234  00499E  6EF8               	movwf	tblptru,c
  3235  0049A0                     	endif
  3236  0049A0  0009               	tblrd		*+
  3237  0049A2  CFF5 F0B1          	movff	tablat,___fladd@a
  3238  0049A6  0009               	tblrd		*+
  3239  0049A8  CFF5 F0B2          	movff	tablat,___fladd@a+1
  3240  0049AC  0009               	tblrd		*+
  3241  0049AE  CFF5 F0B3          	movff	tablat,___fladd@a+2
  3242  0049B2  000A               	tblrd		*-
  3243  0049B4  CFF5 F0B4          	movff	tablat,___fladd@a+3
  3244  0049B8  EC66  F012         	call	___fladd	;wreg free
  3245  0049BC  C0AD  F0CD         	movff	?___fladd,eval_poly@res
  3246  0049C0  C0AE  F0CE         	movff	?___fladd+1,eval_poly@res+1
  3247  0049C4  C0AF  F0CF         	movff	?___fladd+2,eval_poly@res+2
  3248  0049C8  C0B0  F0D0         	movff	?___fladd+3,eval_poly@res+3
  3249  0049CC                     l6033:
  3250  0049CC  0100               	movlb	0	; () banked
  3251  0049CE  51C7               	movf	eval_poly@n& (0+255),w,b
  3252  0049D0  0100               	movlb	0	; () banked
  3253  0049D2  11C8               	iorwf	(eval_poly@n+1)& (0+255),w,b
  3254  0049D4  A4D8               	btfss	status,2,c
  3255  0049D6  D7A8               	goto	l6031
  3256                           
  3257                           ; BSR set to: 0
  3258  0049D8  C0CD  F0C1         	movff	eval_poly@res,?_eval_poly
  3259  0049DC  C0CE  F0C2         	movff	eval_poly@res+1,?_eval_poly+1
  3260  0049E0  C0CF  F0C3         	movff	eval_poly@res+2,?_eval_poly+2
  3261  0049E4  C0D0  F0C4         	movff	eval_poly@res+3,?_eval_poly+3
  3262                           
  3263                           ; BSR set to: 0
  3264  0049E8  0012               	return		;funcret
  3265  0049EA                     __end_of_eval_poly:
  3266                           	opt stack 0
  3267                           tblptru	equ	0xFF8
  3268                           tblptrh	equ	0xFF7
  3269                           tblptrl	equ	0xFF6
  3270                           tablat	equ	0xFF5
  3271                           postinc0	equ	0xFEE
  3272                           wreg	equ	0xFE8
  3273                           postinc2	equ	0xFDE
  3274                           postdec2	equ	0xFDD
  3275                           status	equ	0xFD8
  3276                           
  3277 ;; *************** function ___flmul *****************
  3278 ;; Defined at:
  3279 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;  b               4   48[BANK0 ] int 
  3282 ;;  a               4   52[BANK0 ] int 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  prod            4   67[BANK0 ] struct .
  3285 ;;  grs             4   62[BANK0 ] unsigned long 
  3286 ;;  temp            2   71[BANK0 ] struct .
  3287 ;;  bexp            1   66[BANK0 ] unsigned char 
  3288 ;;  aexp            1   61[BANK0 ] unsigned char 
  3289 ;;  sign            1   60[BANK0 ] unsigned char 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  4   48[BANK0 ] unsigned char 
  3292 ;; Registers used:
  3293 ;;		wreg, status,2, status,0, prodl, prodh
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3299 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3300 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3301 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3302 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3303 ;;Total ram usage:       25 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    4
  3306 ;; This function calls:
  3307 ;;		Nothing
  3308 ;; This function is called by:
  3309 ;;		_parallelo
  3310 ;;		_asin
  3311 ;;		_atan
  3312 ;;		_eval_poly
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text9
  3317  002974                     __ptext9:
  3318                           	opt stack 0
  3319  002974                     ___flmul:
  3320                           	opt stack 21
  3321                           
  3322                           ; BSR set to: 0
  3323                           ;incstack = 0
  3324  002974  0100               	movlb	0	; () banked
  3325  002976  5193               	movf	(___flmul@b+3)& (0+255),w,b
  3326  002978  0B80               	andlw	128
  3327  00297A  0100               	movlb	0	; () banked
  3328  00297C  6F9C               	movwf	___flmul@sign& (0+255),b
  3329  00297E  0100               	movlb	0	; () banked
  3330  002980  5193               	movf	(___flmul@b+3)& (0+255),w,b
  3331  002982  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  3332  002984  0100               	movlb	0	; () banked
  3333  002986  6FA2               	movwf	___flmul@bexp& (0+255),b
  3334                           
  3335                           ; BSR set to: 0
  3336  002988  0100               	movlb	0	; () banked
  3337  00298A  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  3338  00298C  D002               	goto	l5755
  3339                           
  3340                           ; BSR set to: 0
  3341  00298E  0100               	movlb	0	; () banked
  3342  002990  81A2               	bsf	___flmul@bexp& (0+255),0,b
  3343  002992                     l5755:
  3344                           
  3345                           ; BSR set to: 0
  3346  002992  0100               	movlb	0	; () banked
  3347  002994  51A2               	movf	___flmul@bexp& (0+255),w,b
  3348  002996  0100               	movlb	0	; () banked
  3349  002998  B4D8               	btfsc	status,2,c
  3350  00299A  D010               	goto	l5763
  3351                           
  3352                           ; BSR set to: 0
  3353  00299C  0100               	movlb	0	; () banked
  3354  00299E  29A2               	incf	___flmul@bexp& (0+255),w,b
  3355  0029A0  A4D8               	btfss	status,2,c
  3356  0029A2  D009               	goto	l5761
  3357                           
  3358                           ; BSR set to: 0
  3359  0029A4  0E00               	movlw	0
  3360  0029A6  0100               	movlb	0	; () banked
  3361  0029A8  6F90               	movwf	___flmul@b& (0+255),b
  3362  0029AA  0E00               	movlw	0
  3363  0029AC  6F91               	movwf	(___flmul@b+1)& (0+255),b
  3364  0029AE  0E00               	movlw	0
  3365  0029B0  6F92               	movwf	(___flmul@b+2)& (0+255),b
  3366  0029B2  0E00               	movlw	0
  3367  0029B4  6F93               	movwf	(___flmul@b+3)& (0+255),b
  3368  0029B6                     l5761:
  3369                           
  3370                           ; BSR set to: 0
  3371  0029B6  0100               	movlb	0	; () banked
  3372  0029B8  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  3373  0029BA  D009               	goto	l5765
  3374  0029BC                     l5763:
  3375                           
  3376                           ; BSR set to: 0
  3377  0029BC  0E00               	movlw	0
  3378  0029BE  0100               	movlb	0	; () banked
  3379  0029C0  6F90               	movwf	___flmul@b& (0+255),b
  3380  0029C2  0E00               	movlw	0
  3381  0029C4  6F91               	movwf	(___flmul@b+1)& (0+255),b
  3382  0029C6  0E00               	movlw	0
  3383  0029C8  6F92               	movwf	(___flmul@b+2)& (0+255),b
  3384  0029CA  0E00               	movlw	0
  3385  0029CC  6F93               	movwf	(___flmul@b+3)& (0+255),b
  3386  0029CE                     l5765:
  3387                           
  3388                           ; BSR set to: 0
  3389  0029CE  0100               	movlb	0	; () banked
  3390  0029D0  5197               	movf	(___flmul@a+3)& (0+255),w,b
  3391  0029D2  0B80               	andlw	128
  3392  0029D4  0100               	movlb	0	; () banked
  3393  0029D6  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  3394                           
  3395                           ; BSR set to: 0
  3396  0029D8  0100               	movlb	0	; () banked
  3397  0029DA  5197               	movf	(___flmul@a+3)& (0+255),w,b
  3398  0029DC  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  3399  0029DE  0100               	movlb	0	; () banked
  3400  0029E0  6F9D               	movwf	___flmul@aexp& (0+255),b
  3401                           
  3402                           ; BSR set to: 0
  3403  0029E2  0100               	movlb	0	; () banked
  3404  0029E4  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  3405  0029E6  D002               	goto	l5773
  3406                           
  3407                           ; BSR set to: 0
  3408  0029E8  0100               	movlb	0	; () banked
  3409  0029EA  819D               	bsf	___flmul@aexp& (0+255),0,b
  3410  0029EC                     l5773:
  3411                           
  3412                           ; BSR set to: 0
  3413  0029EC  0100               	movlb	0	; () banked
  3414  0029EE  519D               	movf	___flmul@aexp& (0+255),w,b
  3415  0029F0  0100               	movlb	0	; () banked
  3416  0029F2  B4D8               	btfsc	status,2,c
  3417  0029F4  D010               	goto	l5781
  3418                           
  3419                           ; BSR set to: 0
  3420  0029F6  0100               	movlb	0	; () banked
  3421  0029F8  299D               	incf	___flmul@aexp& (0+255),w,b
  3422  0029FA  A4D8               	btfss	status,2,c
  3423  0029FC  D009               	goto	l5779
  3424                           
  3425                           ; BSR set to: 0
  3426  0029FE  0E00               	movlw	0
  3427  002A00  0100               	movlb	0	; () banked
  3428  002A02  6F94               	movwf	___flmul@a& (0+255),b
  3429  002A04  0E00               	movlw	0
  3430  002A06  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3431  002A08  0E00               	movlw	0
  3432  002A0A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3433  002A0C  0E00               	movlw	0
  3434  002A0E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3435  002A10                     l5779:
  3436                           
  3437                           ; BSR set to: 0
  3438  002A10  0100               	movlb	0	; () banked
  3439  002A12  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  3440  002A14  D009               	goto	l1327
  3441  002A16                     l5781:
  3442                           
  3443                           ; BSR set to: 0
  3444  002A16  0E00               	movlw	0
  3445  002A18  0100               	movlb	0	; () banked
  3446  002A1A  6F94               	movwf	___flmul@a& (0+255),b
  3447  002A1C  0E00               	movlw	0
  3448  002A1E  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3449  002A20  0E00               	movlw	0
  3450  002A22  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3451  002A24  0E00               	movlw	0
  3452  002A26  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3453  002A28                     l1327:
  3454                           
  3455                           ; BSR set to: 0
  3456  002A28  0100               	movlb	0	; () banked
  3457  002A2A  519D               	movf	___flmul@aexp& (0+255),w,b
  3458  002A2C  0100               	movlb	0	; () banked
  3459  002A2E  B4D8               	btfsc	status,2,c
  3460  002A30  D005               	goto	l5785
  3461                           
  3462                           ; BSR set to: 0
  3463  002A32  0100               	movlb	0	; () banked
  3464  002A34  51A2               	movf	___flmul@bexp& (0+255),w,b
  3465  002A36  0100               	movlb	0	; () banked
  3466  002A38  A4D8               	btfss	status,2,c
  3467  002A3A  D00A               	goto	l5789
  3468  002A3C                     l5785:
  3469                           
  3470                           ; BSR set to: 0
  3471  002A3C  0E00               	movlw	0
  3472  002A3E  0100               	movlb	0	; () banked
  3473  002A40  6F90               	movwf	?___flmul& (0+255),b
  3474  002A42  0E00               	movlw	0
  3475  002A44  6F91               	movwf	(?___flmul+1)& (0+255),b
  3476  002A46  0E00               	movlw	0
  3477  002A48  6F92               	movwf	(?___flmul+2)& (0+255),b
  3478  002A4A  0E00               	movlw	0
  3479  002A4C  6F93               	movwf	(?___flmul+3)& (0+255),b
  3480                           
  3481                           ; BSR set to: 0
  3482  002A4E  0012               	return	
  3483  002A50                     l5789:
  3484                           
  3485                           ; BSR set to: 0
  3486  002A50  0100               	movlb	0	; () banked
  3487  002A52  5196               	movf	(___flmul@a+2)& (0+255),w,b
  3488  002A54  0100               	movlb	0	; () banked
  3489  002A56  0390               	mulwf	___flmul@b& (0+255),b
  3490  002A58  CFF3 F0A7          	movff	prodl,___flmul@temp
  3491  002A5C  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3492                           
  3493                           ; BSR set to: 0
  3494  002A60  0100               	movlb	0	; () banked
  3495  002A62  51A7               	movf	___flmul@temp& (0+255),w,b
  3496  002A64  0100               	movlb	0	; () banked
  3497  002A66  6F9E               	movwf	___flmul@grs& (0+255),b
  3498  002A68  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  3499  002A6A  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  3500  002A6C  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  3501                           
  3502                           ; BSR set to: 0
  3503  002A6E  0100               	movlb	0	; () banked
  3504  002A70  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3505  002A72  0100               	movlb	0	; () banked
  3506  002A74  6FA3               	movwf	___flmul@prod& (0+255),b
  3507  002A76  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  3508  002A78  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  3509  002A7A  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  3510  002A7C  0100               	movlb	0	; () banked
  3511  002A7E  5195               	movf	(___flmul@a+1)& (0+255),w,b
  3512  002A80  0100               	movlb	0	; () banked
  3513  002A82  0391               	mulwf	(___flmul@b+1)& (0+255),b
  3514  002A84  CFF3 F0A7          	movff	prodl,___flmul@temp
  3515  002A88  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3516                           
  3517                           ; BSR set to: 0
  3518  002A8C  0100               	movlb	0	; () banked
  3519  002A8E  51A7               	movf	___flmul@temp& (0+255),w,b
  3520  002A90  0100               	movlb	0	; () banked
  3521  002A92  279E               	addwf	___flmul@grs& (0+255),f,b
  3522  002A94  0E00               	movlw	0
  3523  002A96  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3524  002A98  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3525  002A9A  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3526                           
  3527                           ; BSR set to: 0
  3528  002A9C  0100               	movlb	0	; () banked
  3529  002A9E  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3530  002AA0  0100               	movlb	0	; () banked
  3531  002AA2  27A3               	addwf	___flmul@prod& (0+255),f,b
  3532  002AA4  0E00               	movlw	0
  3533  002AA6  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3534  002AA8  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3535  002AAA  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3536  002AAC  0100               	movlb	0	; () banked
  3537  002AAE  5194               	movf	___flmul@a& (0+255),w,b
  3538  002AB0  0100               	movlb	0	; () banked
  3539  002AB2  0392               	mulwf	(___flmul@b+2)& (0+255),b
  3540  002AB4  CFF3 F0A7          	movff	prodl,___flmul@temp
  3541  002AB8  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3542                           
  3543                           ; BSR set to: 0
  3544  002ABC  0100               	movlb	0	; () banked
  3545  002ABE  51A7               	movf	___flmul@temp& (0+255),w,b
  3546  002AC0  0100               	movlb	0	; () banked
  3547  002AC2  279E               	addwf	___flmul@grs& (0+255),f,b
  3548  002AC4  0E00               	movlw	0
  3549  002AC6  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3550  002AC8  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3551  002ACA  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3552                           
  3553                           ; BSR set to: 0
  3554  002ACC  0100               	movlb	0	; () banked
  3555  002ACE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3556  002AD0  0100               	movlb	0	; () banked
  3557  002AD2  27A3               	addwf	___flmul@prod& (0+255),f,b
  3558  002AD4  0E00               	movlw	0
  3559  002AD6  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3560  002AD8  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3561  002ADA  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3562                           
  3563                           ; BSR set to: 0
  3564  002ADC  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  3565  002AE0  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  3566  002AE4  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  3567  002AE8  0100               	movlb	0	; () banked
  3568  002AEA  6B9E               	clrf	___flmul@grs& (0+255),b
  3569                           
  3570                           ; BSR set to: 0
  3571  002AEC  0100               	movlb	0	; () banked
  3572  002AEE  5194               	movf	___flmul@a& (0+255),w,b
  3573  002AF0  0100               	movlb	0	; () banked
  3574  002AF2  0391               	mulwf	(___flmul@b+1)& (0+255),b
  3575  002AF4  CFF3 F0A7          	movff	prodl,___flmul@temp
  3576  002AF8  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3577                           
  3578                           ; BSR set to: 0
  3579  002AFC  0100               	movlb	0	; () banked
  3580  002AFE  51A7               	movf	___flmul@temp& (0+255),w,b
  3581  002B00  0100               	movlb	0	; () banked
  3582  002B02  279E               	addwf	___flmul@grs& (0+255),f,b
  3583  002B04  0100               	movlb	0	; () banked
  3584  002B06  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3585  002B08  0100               	movlb	0	; () banked
  3586  002B0A  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3587  002B0C  0E00               	movlw	0
  3588  002B0E  0100               	movlb	0	; () banked
  3589  002B10  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3590  002B12  0E00               	movlw	0
  3591  002B14  0100               	movlb	0	; () banked
  3592  002B16  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3593                           
  3594                           ; BSR set to: 0
  3595  002B18  0100               	movlb	0	; () banked
  3596  002B1A  5195               	movf	(___flmul@a+1)& (0+255),w,b
  3597  002B1C  0100               	movlb	0	; () banked
  3598  002B1E  0390               	mulwf	___flmul@b& (0+255),b
  3599  002B20  CFF3 F0A7          	movff	prodl,___flmul@temp
  3600  002B24  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3601                           
  3602                           ; BSR set to: 0
  3603  002B28  0100               	movlb	0	; () banked
  3604  002B2A  51A7               	movf	___flmul@temp& (0+255),w,b
  3605  002B2C  0100               	movlb	0	; () banked
  3606  002B2E  279E               	addwf	___flmul@grs& (0+255),f,b
  3607  002B30  0100               	movlb	0	; () banked
  3608  002B32  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3609  002B34  0100               	movlb	0	; () banked
  3610  002B36  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3611  002B38  0E00               	movlw	0
  3612  002B3A  0100               	movlb	0	; () banked
  3613  002B3C  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3614  002B3E  0E00               	movlw	0
  3615  002B40  0100               	movlb	0	; () banked
  3616  002B42  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3617                           
  3618                           ; BSR set to: 0
  3619  002B44  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  3620  002B48  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  3621  002B4C  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  3622  002B50  0100               	movlb	0	; () banked
  3623  002B52  6B9E               	clrf	___flmul@grs& (0+255),b
  3624  002B54  0100               	movlb	0	; () banked
  3625  002B56  5194               	movf	___flmul@a& (0+255),w,b
  3626  002B58  0100               	movlb	0	; () banked
  3627  002B5A  0390               	mulwf	___flmul@b& (0+255),b
  3628  002B5C  CFF3 F0A7          	movff	prodl,___flmul@temp
  3629  002B60  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3630                           
  3631                           ; BSR set to: 0
  3632  002B64  0100               	movlb	0	; () banked
  3633  002B66  51A7               	movf	___flmul@temp& (0+255),w,b
  3634  002B68  0100               	movlb	0	; () banked
  3635  002B6A  279E               	addwf	___flmul@grs& (0+255),f,b
  3636  002B6C  0100               	movlb	0	; () banked
  3637  002B6E  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3638  002B70  0100               	movlb	0	; () banked
  3639  002B72  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  3640  002B74  0E00               	movlw	0
  3641  002B76  0100               	movlb	0	; () banked
  3642  002B78  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  3643  002B7A  0E00               	movlw	0
  3644  002B7C  0100               	movlb	0	; () banked
  3645  002B7E  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  3646                           
  3647                           ; BSR set to: 0
  3648  002B80  0100               	movlb	0	; () banked
  3649  002B82  5196               	movf	(___flmul@a+2)& (0+255),w,b
  3650  002B84  0100               	movlb	0	; () banked
  3651  002B86  0391               	mulwf	(___flmul@b+1)& (0+255),b
  3652  002B88  CFF3 F0A7          	movff	prodl,___flmul@temp
  3653  002B8C  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3654  002B90  0100               	movlb	0	; () banked
  3655  002B92  51A7               	movf	___flmul@temp& (0+255),w,b
  3656  002B94  0100               	movlb	0	; () banked
  3657  002B96  27A3               	addwf	___flmul@prod& (0+255),f,b
  3658  002B98  0100               	movlb	0	; () banked
  3659  002B9A  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3660  002B9C  0100               	movlb	0	; () banked
  3661  002B9E  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3662  002BA0  0E00               	movlw	0
  3663  002BA2  0100               	movlb	0	; () banked
  3664  002BA4  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3665  002BA6  0E00               	movlw	0
  3666  002BA8  0100               	movlb	0	; () banked
  3667  002BAA  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3668                           
  3669                           ; BSR set to: 0
  3670  002BAC  0100               	movlb	0	; () banked
  3671  002BAE  5195               	movf	(___flmul@a+1)& (0+255),w,b
  3672  002BB0  0100               	movlb	0	; () banked
  3673  002BB2  0392               	mulwf	(___flmul@b+2)& (0+255),b
  3674  002BB4  CFF3 F0A7          	movff	prodl,___flmul@temp
  3675  002BB8  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3676                           
  3677                           ; BSR set to: 0
  3678  002BBC  0100               	movlb	0	; () banked
  3679  002BBE  51A7               	movf	___flmul@temp& (0+255),w,b
  3680  002BC0  0100               	movlb	0	; () banked
  3681  002BC2  27A3               	addwf	___flmul@prod& (0+255),f,b
  3682  002BC4  0100               	movlb	0	; () banked
  3683  002BC6  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3684  002BC8  0100               	movlb	0	; () banked
  3685  002BCA  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3686  002BCC  0E00               	movlw	0
  3687  002BCE  0100               	movlb	0	; () banked
  3688  002BD0  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3689  002BD2  0E00               	movlw	0
  3690  002BD4  0100               	movlb	0	; () banked
  3691  002BD6  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3692  002BD8  0100               	movlb	0	; () banked
  3693  002BDA  5196               	movf	(___flmul@a+2)& (0+255),w,b
  3694  002BDC  0100               	movlb	0	; () banked
  3695  002BDE  0392               	mulwf	(___flmul@b+2)& (0+255),b
  3696  002BE0  CFF3 F0A7          	movff	prodl,___flmul@temp
  3697  002BE4  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  3698                           
  3699                           ; BSR set to: 0
  3700  002BE8  0100               	movlb	0	; () banked
  3701  002BEA  51A7               	movf	___flmul@temp& (0+255),w,b
  3702  002BEC  0100               	movlb	0	; () banked
  3703  002BEE  6F98               	movwf	??___flmul& (0+255),b
  3704  002BF0  0100               	movlb	0	; () banked
  3705  002BF2  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3706  002BF4  0100               	movlb	0	; () banked
  3707  002BF6  6F99               	movwf	(??___flmul+1)& (0+255),b
  3708  002BF8  0100               	movlb	0	; () banked
  3709  002BFA  6B9A               	clrf	(??___flmul+2)& (0+255),b
  3710  002BFC  0100               	movlb	0	; () banked
  3711  002BFE  6B9B               	clrf	(??___flmul+3)& (0+255),b
  3712  002C00  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  3713  002C04  C099  F09A         	movff	??___flmul+1,??___flmul+2
  3714  002C08  C098  F099         	movff	??___flmul,??___flmul+1
  3715  002C0C  0100               	movlb	0	; () banked
  3716  002C0E  6B98               	clrf	??___flmul& (0+255),b
  3717  002C10  0100               	movlb	0	; () banked
  3718  002C12  5198               	movf	??___flmul& (0+255),w,b
  3719  002C14  0100               	movlb	0	; () banked
  3720  002C16  27A3               	addwf	___flmul@prod& (0+255),f,b
  3721  002C18  0100               	movlb	0	; () banked
  3722  002C1A  5199               	movf	(??___flmul+1)& (0+255),w,b
  3723  002C1C  0100               	movlb	0	; () banked
  3724  002C1E  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3725  002C20  0100               	movlb	0	; () banked
  3726  002C22  519A               	movf	(??___flmul+2)& (0+255),w,b
  3727  002C24  0100               	movlb	0	; () banked
  3728  002C26  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3729  002C28  0100               	movlb	0	; () banked
  3730  002C2A  519B               	movf	(??___flmul+3)& (0+255),w,b
  3731  002C2C  0100               	movlb	0	; () banked
  3732  002C2E  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3733                           
  3734                           ; BSR set to: 0
  3735  002C30  C09E  F098         	movff	___flmul@grs,??___flmul
  3736  002C34  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  3737  002C38  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  3738  002C3C  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  3739  002C40  0E19               	movlw	25
  3740  002C42  D006               	goto	u7360
  3741  002C44                     u7365:
  3742  002C44  0100               	movlb	0	; () banked
  3743  002C46  90D8               	bcf	status,0,c
  3744  002C48  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  3745  002C4A  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  3746  002C4C  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  3747  002C4E  3398               	rrcf	??___flmul& (0+255),f,b
  3748  002C50                     u7360:
  3749  002C50  2EE8               	decfsz	wreg,f,c
  3750  002C52  D7F8               	goto	u7365
  3751  002C54  0100               	movlb	0	; () banked
  3752  002C56  5198               	movf	??___flmul& (0+255),w,b
  3753  002C58  0100               	movlb	0	; () banked
  3754  002C5A  27A3               	addwf	___flmul@prod& (0+255),f,b
  3755  002C5C  0100               	movlb	0	; () banked
  3756  002C5E  5199               	movf	(??___flmul+1)& (0+255),w,b
  3757  002C60  0100               	movlb	0	; () banked
  3758  002C62  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3759  002C64  0100               	movlb	0	; () banked
  3760  002C66  519A               	movf	(??___flmul+2)& (0+255),w,b
  3761  002C68  0100               	movlb	0	; () banked
  3762  002C6A  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3763  002C6C  0100               	movlb	0	; () banked
  3764  002C6E  519B               	movf	(??___flmul+3)& (0+255),w,b
  3765  002C70  0100               	movlb	0	; () banked
  3766  002C72  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3767                           
  3768                           ; BSR set to: 0
  3769  002C74  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  3770  002C78  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  3771  002C7C  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  3772  002C80  0100               	movlb	0	; () banked
  3773  002C82  6B9E               	clrf	___flmul@grs& (0+255),b
  3774                           
  3775                           ; BSR set to: 0
  3776  002C84  0100               	movlb	0	; () banked
  3777  002C86  519D               	movf	___flmul@aexp& (0+255),w,b
  3778  002C88  C0A2  F098         	movff	___flmul@bexp,??___flmul
  3779  002C8C  0100               	movlb	0	; () banked
  3780  002C8E  6B99               	clrf	(??___flmul+1)& (0+255),b
  3781  002C90  0100               	movlb	0	; () banked
  3782  002C92  2798               	addwf	??___flmul& (0+255),f,b
  3783  002C94  0E00               	movlw	0
  3784  002C96  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  3785  002C98  0E82               	movlw	130
  3786  002C9A  0100               	movlb	0	; () banked
  3787  002C9C  2598               	addwf	??___flmul& (0+255),w,b
  3788  002C9E  0100               	movlb	0	; () banked
  3789  002CA0  6FA7               	movwf	___flmul@temp& (0+255),b
  3790  002CA2  0EFF               	movlw	255
  3791  002CA4  0100               	movlb	0	; () banked
  3792  002CA6  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  3793  002CA8  0100               	movlb	0	; () banked
  3794  002CAA  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  3795  002CAC  D015               	goto	l5837
  3796  002CAE                     l5831:
  3797                           
  3798                           ; BSR set to: 0
  3799  002CAE  0100               	movlb	0	; () banked
  3800  002CB0  90D8               	bcf	status,0,c
  3801  002CB2  37A3               	rlcf	___flmul@prod& (0+255),f,b
  3802  002CB4  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  3803  002CB6  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  3804  002CB8  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  3805                           
  3806                           ; BSR set to: 0
  3807  002CBA  0100               	movlb	0	; () banked
  3808  002CBC  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  3809  002CBE  D002               	goto	l1334
  3810                           
  3811                           ; BSR set to: 0
  3812  002CC0  0100               	movlb	0	; () banked
  3813  002CC2  81A3               	bsf	___flmul@prod& (0+255),0,b
  3814  002CC4                     l1334:
  3815                           
  3816                           ; BSR set to: 0
  3817  002CC4  0100               	movlb	0	; () banked
  3818  002CC6  90D8               	bcf	status,0,c
  3819  002CC8  379E               	rlcf	___flmul@grs& (0+255),f,b
  3820  002CCA  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  3821  002CCC  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  3822  002CCE  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  3823  002CD0  0100               	movlb	0	; () banked
  3824  002CD2  07A7               	decf	___flmul@temp& (0+255),f,b
  3825  002CD4  A0D8               	btfss	status,0,c
  3826  002CD6  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  3827  002CD8                     l5837:
  3828                           
  3829                           ; BSR set to: 0
  3830  002CD8  0100               	movlb	0	; () banked
  3831  002CDA  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  3832  002CDC  D7E8               	goto	l5831
  3833                           
  3834                           ; BSR set to: 0
  3835                           
  3836                           ; BSR set to: 0
  3837  002CDE  0E00               	movlw	0
  3838  002CE0  0100               	movlb	0	; () banked
  3839  002CE2  6F9D               	movwf	___flmul@aexp& (0+255),b
  3840                           
  3841                           ; BSR set to: 0
  3842  002CE4  0100               	movlb	0	; () banked
  3843  002CE6  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  3844  002CE8  D024               	goto	l1336
  3845                           
  3846                           ; BSR set to: 0
  3847  002CEA  0EFF               	movlw	255
  3848  002CEC  0100               	movlb	0	; () banked
  3849  002CEE  159E               	andwf	___flmul@grs& (0+255),w,b
  3850  002CF0  0100               	movlb	0	; () banked
  3851  002CF2  6F98               	movwf	??___flmul& (0+255),b
  3852  002CF4  0EFF               	movlw	255
  3853  002CF6  0100               	movlb	0	; () banked
  3854  002CF8  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  3855  002CFA  0100               	movlb	0	; () banked
  3856  002CFC  6F99               	movwf	(??___flmul+1)& (0+255),b
  3857  002CFE  0EFF               	movlw	255
  3858  002D00  0100               	movlb	0	; () banked
  3859  002D02  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  3860  002D04  0100               	movlb	0	; () banked
  3861  002D06  6F9A               	movwf	(??___flmul+2)& (0+255),b
  3862  002D08  0E7F               	movlw	127
  3863  002D0A  0100               	movlb	0	; () banked
  3864  002D0C  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  3865  002D0E  0100               	movlb	0	; () banked
  3866  002D10  6F9B               	movwf	(??___flmul+3)& (0+255),b
  3867  002D12  0100               	movlb	0	; () banked
  3868  002D14  5198               	movf	??___flmul& (0+255),w,b
  3869  002D16  0100               	movlb	0	; () banked
  3870  002D18  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  3871  002D1A  0100               	movlb	0	; () banked
  3872  002D1C  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  3873  002D1E  0100               	movlb	0	; () banked
  3874  002D20  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  3875  002D22  A4D8               	btfss	status,2,c
  3876  002D24  D003               	goto	l5847
  3877                           
  3878                           ; BSR set to: 0
  3879                           
  3880                           ; BSR set to: 0
  3881  002D26  0100               	movlb	0	; () banked
  3882  002D28  A1A3               	btfss	___flmul@prod& (0+255),0,b
  3883  002D2A  D003               	goto	l1336
  3884  002D2C                     l5847:
  3885                           
  3886                           ; BSR set to: 0
  3887  002D2C  0E01               	movlw	1
  3888  002D2E  0100               	movlb	0	; () banked
  3889  002D30  6F9D               	movwf	___flmul@aexp& (0+255),b
  3890  002D32                     l1336:
  3891                           
  3892                           ; BSR set to: 0
  3893  002D32  0100               	movlb	0	; () banked
  3894  002D34  519D               	movf	___flmul@aexp& (0+255),w,b
  3895  002D36  0100               	movlb	0	; () banked
  3896  002D38  B4D8               	btfsc	status,2,c
  3897  002D3A  D023               	goto	l5857
  3898                           
  3899                           ; BSR set to: 0
  3900  002D3C  0E01               	movlw	1
  3901  002D3E  0100               	movlb	0	; () banked
  3902  002D40  27A3               	addwf	___flmul@prod& (0+255),f,b
  3903  002D42  0E00               	movlw	0
  3904  002D44  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  3905  002D46  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  3906  002D48  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  3907                           
  3908                           ; BSR set to: 0
  3909  002D4A  0100               	movlb	0	; () banked
  3910  002D4C  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  3911  002D4E  D019               	goto	l5857
  3912                           
  3913                           ; BSR set to: 0
  3914  002D50  C0A3  F098         	movff	___flmul@prod,??___flmul
  3915  002D54  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  3916  002D58  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  3917  002D5C  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  3918  002D60  0100               	movlb	0	; () banked
  3919  002D62  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  3920  002D64  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  3921  002D66  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  3922  002D68  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  3923  002D6A  3398               	rrcf	??___flmul& (0+255),f,b
  3924  002D6C  C098  F0A3         	movff	??___flmul,___flmul@prod
  3925  002D70  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  3926  002D74  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  3927  002D78  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  3928                           
  3929                           ; BSR set to: 0
  3930  002D7C  0100               	movlb	0	; () banked
  3931  002D7E  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  3932  002D80  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  3933  002D82                     l5857:
  3934                           
  3935                           ; BSR set to: 0
  3936  002D82  0100               	movlb	0	; () banked
  3937  002D84  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  3938  002D86  D010               	goto	l5861
  3939  002D88  0100               	movlb	0	; () banked
  3940  002D8A  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3941  002D8C  E104               	bnz	u7440
  3942  002D8E  0100               	movlb	0	; () banked
  3943  002D90  29A7               	incf	___flmul@temp& (0+255),w,b
  3944  002D92  A0D8               	btfss	status,0,c
  3945  002D94  D009               	goto	l5861
  3946  002D96                     u7440:
  3947                           
  3948                           ; BSR set to: 0
  3949  002D96  0E00               	movlw	0
  3950  002D98  0100               	movlb	0	; () banked
  3951  002D9A  6FA3               	movwf	___flmul@prod& (0+255),b
  3952  002D9C  0E00               	movlw	0
  3953  002D9E  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  3954  002DA0  0E80               	movlw	128
  3955  002DA2  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  3956  002DA4  0E7F               	movlw	127
  3957  002DA6  D02B               	goto	L2
  3958  002DA8                     l5861:
  3959                           
  3960                           ; BSR set to: 0
  3961  002DA8  0100               	movlb	0	; () banked
  3962  002DAA  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  3963  002DAC  D007               	goto	l5863
  3964  002DAE  0100               	movlb	0	; () banked
  3965  002DB0  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  3966  002DB2  E111               	bnz	l1344
  3967  002DB4  0100               	movlb	0	; () banked
  3968  002DB6  05A7               	decf	___flmul@temp& (0+255),w,b
  3969  002DB8  B0D8               	btfsc	status,0,c
  3970  002DBA  D00D               	goto	l1344
  3971  002DBC                     l5863:
  3972                           
  3973                           ; BSR set to: 0
  3974  002DBC  0E00               	movlw	0
  3975  002DBE  0100               	movlb	0	; () banked
  3976  002DC0  6FA3               	movwf	___flmul@prod& (0+255),b
  3977  002DC2  0E00               	movlw	0
  3978  002DC4  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  3979  002DC6  0E00               	movlw	0
  3980  002DC8  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  3981  002DCA  0E00               	movlw	0
  3982  002DCC  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  3983  002DCE  0E00               	movlw	0
  3984  002DD0  0100               	movlb	0	; () banked
  3985  002DD2  6F9C               	movwf	___flmul@sign& (0+255),b
  3986  002DD4  D015               	goto	l5873
  3987  002DD6                     l1344:
  3988                           
  3989                           ; BSR set to: 0
  3990  002DD6  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  3991                           
  3992                           ; BSR set to: 0
  3993  002DDA  0EFF               	movlw	255
  3994  002DDC  0100               	movlb	0	; () banked
  3995  002DDE  17A3               	andwf	___flmul@prod& (0+255),f,b
  3996  002DE0  0EFF               	movlw	255
  3997  002DE2  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  3998  002DE4  0E7F               	movlw	127
  3999  002DE6  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  4000  002DE8  0E00               	movlw	0
  4001  002DEA  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  4002                           
  4003                           ; BSR set to: 0
  4004  002DEC  0100               	movlb	0	; () banked
  4005  002DEE  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  4006  002DF0  D002               	goto	l5871
  4007                           
  4008                           ; BSR set to: 0
  4009  002DF2  0100               	movlb	0	; () banked
  4010  002DF4  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  4011  002DF6                     l5871:
  4012                           
  4013                           ; BSR set to: 0
  4014  002DF6  0100               	movlb	0	; () banked
  4015  002DF8  90D8               	bcf	status,0,c
  4016  002DFA  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  4017  002DFC  0100               	movlb	0	; () banked
  4018  002DFE                     L2:
  4019  002DFE  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  4020  002E00                     l5873:
  4021                           
  4022                           ; BSR set to: 0
  4023  002E00  0100               	movlb	0	; () banked
  4024  002E02  519C               	movf	___flmul@sign& (0+255),w,b
  4025  002E04  0100               	movlb	0	; () banked
  4026  002E06  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  4027                           
  4028                           ; BSR set to: 0
  4029  002E08  C0A3  F090         	movff	___flmul@prod,?___flmul
  4030  002E0C  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  4031  002E10  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  4032  002E14  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  4033  002E18  0012               	return	
  4034  002E1A                     __end_of___flmul:
  4035                           	opt stack 0
  4036                           tblptru	equ	0xFF8
  4037                           tblptrh	equ	0xFF7
  4038                           tblptrl	equ	0xFF6
  4039                           tablat	equ	0xFF5
  4040                           prodh	equ	0xFF4
  4041                           prodl	equ	0xFF3
  4042                           postinc0	equ	0xFEE
  4043                           wreg	equ	0xFE8
  4044                           postinc2	equ	0xFDE
  4045                           postdec2	equ	0xFDD
  4046                           status	equ	0xFD8
  4047                           
  4048 ;; *************** function ___fladd *****************
  4049 ;; Defined at:
  4050 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  b               4   77[BANK0 ] unsigned char 
  4053 ;;  a               4   81[BANK0 ] unsigned char 
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;  grs             1   96[BANK0 ] unsigned char 
  4056 ;;  bexp            1   95[BANK0 ] unsigned char 
  4057 ;;  aexp            1   94[BANK0 ] unsigned char 
  4058 ;;  signs           1   93[BANK0 ] unsigned char 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  4   77[BANK0 ] unsigned char 
  4061 ;; Registers used:
  4062 ;;		wreg, status,2, status,0
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4068 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4069 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4070 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4071 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4072 ;;Total ram usage:       20 bytes
  4073 ;; Hardware stack levels used:    1
  4074 ;; Hardware stack levels required when called:    4
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		_parallelo
  4079 ;;		_asin
  4080 ;;		_atan
  4081 ;;		_eval_poly
  4082 ;; This function uses a non-reentrant model
  4083 ;;
  4084                           
  4085                           	psect	text10
  4086  0024CC                     __ptext10:
  4087                           	opt stack 0
  4088  0024CC                     ___fladd:
  4089                           	opt stack 21
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;incstack = 0
  4093  0024CC  0100               	movlb	0	; () banked
  4094  0024CE  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  4095  0024D0  0B80               	andlw	128
  4096  0024D2  0100               	movlb	0	; () banked
  4097  0024D4  6FBD               	movwf	___fladd@signs& (0+255),b
  4098  0024D6  0100               	movlb	0	; () banked
  4099  0024D8  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  4100  0024DA  25B0               	addwf	(___fladd@b+3)& (0+255),w,b
  4101  0024DC  0100               	movlb	0	; () banked
  4102  0024DE  6FBF               	movwf	___fladd@bexp& (0+255),b
  4103                           
  4104                           ; BSR set to: 0
  4105  0024E0  0100               	movlb	0	; () banked
  4106  0024E2  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  4107  0024E4  D002               	goto	l5553
  4108                           
  4109                           ; BSR set to: 0
  4110  0024E6  0100               	movlb	0	; () banked
  4111  0024E8  81BF               	bsf	___fladd@bexp& (0+255),0,b
  4112  0024EA                     l5553:
  4113                           
  4114                           ; BSR set to: 0
  4115  0024EA  0100               	movlb	0	; () banked
  4116  0024EC  51BF               	movf	___fladd@bexp& (0+255),w,b
  4117  0024EE  0100               	movlb	0	; () banked
  4118  0024F0  B4D8               	btfsc	status,2,c
  4119  0024F2  D012               	goto	l5563
  4120                           
  4121                           ; BSR set to: 0
  4122  0024F4  0100               	movlb	0	; () banked
  4123  0024F6  29BF               	incf	___fladd@bexp& (0+255),w,b
  4124  0024F8  A4D8               	btfss	status,2,c
  4125  0024FA  D009               	goto	l5559
  4126                           
  4127                           ; BSR set to: 0
  4128  0024FC  0E00               	movlw	0
  4129  0024FE  0100               	movlb	0	; () banked
  4130  002500  6FAD               	movwf	___fladd@b& (0+255),b
  4131  002502  0E00               	movlw	0
  4132  002504  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  4133  002506  0E00               	movlw	0
  4134  002508  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  4135  00250A  0E00               	movlw	0
  4136  00250C  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  4137  00250E                     l5559:
  4138                           
  4139                           ; BSR set to: 0
  4140  00250E  0100               	movlb	0	; () banked
  4141  002510  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  4142                           
  4143                           ; BSR set to: 0
  4144  002512  0E00               	movlw	0
  4145  002514  0100               	movlb	0	; () banked
  4146  002516  D008               	goto	L3
  4147  002518                     l5563:
  4148                           
  4149                           ; BSR set to: 0
  4150  002518  0E00               	movlw	0
  4151  00251A  0100               	movlb	0	; () banked
  4152  00251C  6FAD               	movwf	___fladd@b& (0+255),b
  4153  00251E  0E00               	movlw	0
  4154  002520  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  4155  002522  0E00               	movlw	0
  4156  002524  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  4157  002526  0E00               	movlw	0
  4158  002528                     L3:
  4159  002528  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  4160                           
  4161                           ; BSR set to: 0
  4162                           
  4163                           ; BSR set to: 0
  4164  00252A  0100               	movlb	0	; () banked
  4165  00252C  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  4166  00252E  0B80               	andlw	128
  4167  002530  0100               	movlb	0	; () banked
  4168  002532  6FBE               	movwf	___fladd@aexp& (0+255),b
  4169                           
  4170                           ; BSR set to: 0
  4171  002534  0100               	movlb	0	; () banked
  4172  002536  51BD               	movf	___fladd@signs& (0+255),w,b
  4173  002538  0100               	movlb	0	; () banked
  4174  00253A  19BE               	xorwf	___fladd@aexp& (0+255),w,b
  4175  00253C  B4D8               	btfsc	status,2,c
  4176  00253E  D002               	goto	l5571
  4177                           
  4178                           ; BSR set to: 0
  4179  002540  0100               	movlb	0	; () banked
  4180  002542  8DBD               	bsf	___fladd@signs& (0+255),6,b
  4181  002544                     l5571:
  4182                           
  4183                           ; BSR set to: 0
  4184  002544  0100               	movlb	0	; () banked
  4185  002546  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  4186  002548  25B4               	addwf	(___fladd@a+3)& (0+255),w,b
  4187  00254A  0100               	movlb	0	; () banked
  4188  00254C  6FBE               	movwf	___fladd@aexp& (0+255),b
  4189                           
  4190                           ; BSR set to: 0
  4191  00254E  0100               	movlb	0	; () banked
  4192  002550  AFB3               	btfss	(___fladd@a+2)& (0+255),7,b
  4193  002552  D002               	goto	l5577
  4194                           
  4195                           ; BSR set to: 0
  4196  002554  0100               	movlb	0	; () banked
  4197  002556  81BE               	bsf	___fladd@aexp& (0+255),0,b
  4198  002558                     l5577:
  4199                           
  4200                           ; BSR set to: 0
  4201  002558  0100               	movlb	0	; () banked
  4202  00255A  51BE               	movf	___fladd@aexp& (0+255),w,b
  4203  00255C  0100               	movlb	0	; () banked
  4204  00255E  B4D8               	btfsc	status,2,c
  4205  002560  D012               	goto	l5587
  4206                           
  4207                           ; BSR set to: 0
  4208  002562  0100               	movlb	0	; () banked
  4209  002564  29BE               	incf	___fladd@aexp& (0+255),w,b
  4210  002566  A4D8               	btfss	status,2,c
  4211  002568  D009               	goto	l5583
  4212                           
  4213                           ; BSR set to: 0
  4214  00256A  0E00               	movlw	0
  4215  00256C  0100               	movlb	0	; () banked
  4216  00256E  6FB1               	movwf	___fladd@a& (0+255),b
  4217  002570  0E00               	movlw	0
  4218  002572  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4219  002574  0E00               	movlw	0
  4220  002576  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4221  002578  0E00               	movlw	0
  4222  00257A  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4223  00257C                     l5583:
  4224                           
  4225                           ; BSR set to: 0
  4226  00257C  0100               	movlb	0	; () banked
  4227  00257E  8FB3               	bsf	(___fladd@a+2)& (0+255),7,b
  4228                           
  4229                           ; BSR set to: 0
  4230  002580  0E00               	movlw	0
  4231  002582  0100               	movlb	0	; () banked
  4232  002584  D008               	goto	L4
  4233  002586                     l5587:
  4234                           
  4235                           ; BSR set to: 0
  4236  002586  0E00               	movlw	0
  4237  002588  0100               	movlb	0	; () banked
  4238  00258A  6FB1               	movwf	___fladd@a& (0+255),b
  4239  00258C  0E00               	movlw	0
  4240  00258E  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4241  002590  0E00               	movlw	0
  4242  002592  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4243  002594  0E00               	movlw	0
  4244  002596                     L4:
  4245  002596  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4246                           
  4247                           ; BSR set to: 0
  4248                           
  4249                           ; BSR set to: 0
  4250  002598  0100               	movlb	0	; () banked
  4251  00259A  51BF               	movf	___fladd@bexp& (0+255),w,b
  4252  00259C  0100               	movlb	0	; () banked
  4253  00259E  5DBE               	subwf	___fladd@aexp& (0+255),w,b
  4254  0025A0  B0D8               	btfsc	status,0,c
  4255  0025A2  D024               	goto	l5625
  4256                           
  4257                           ; BSR set to: 0
  4258  0025A4  0100               	movlb	0	; () banked
  4259  0025A6  ADBD               	btfss	___fladd@signs& (0+255),6,b
  4260  0025A8  D003               	goto	l5595
  4261                           
  4262                           ; BSR set to: 0
  4263  0025AA  0E80               	movlw	128
  4264  0025AC  0100               	movlb	0	; () banked
  4265  0025AE  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  4266  0025B0                     l5595:
  4267                           
  4268                           ; BSR set to: 0
  4269  0025B0  C0BF  F0C0         	movff	___fladd@bexp,___fladd@grs
  4270                           
  4271                           ; BSR set to: 0
  4272  0025B4  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  4273                           
  4274                           ; BSR set to: 0
  4275  0025B8  C0C0  F0BE         	movff	___fladd@grs,___fladd@aexp
  4276                           
  4277                           ; BSR set to: 0
  4278  0025BC  C0AD  F0C0         	movff	___fladd@b,___fladd@grs
  4279                           
  4280                           ; BSR set to: 0
  4281  0025C0  C0B1  F0AD         	movff	___fladd@a,___fladd@b
  4282                           
  4283                           ; BSR set to: 0
  4284  0025C4  C0C0  F0B1         	movff	___fladd@grs,___fladd@a
  4285                           
  4286                           ; BSR set to: 0
  4287  0025C8  C0AE  F0C0         	movff	___fladd@b+1,___fladd@grs
  4288                           
  4289                           ; BSR set to: 0
  4290  0025CC  C0B2  F0AE         	movff	___fladd@a+1,___fladd@b+1
  4291                           
  4292                           ; BSR set to: 0
  4293  0025D0  C0C0  F0B2         	movff	___fladd@grs,___fladd@a+1
  4294                           
  4295                           ; BSR set to: 0
  4296  0025D4  C0AF  F0C0         	movff	___fladd@b+2,___fladd@grs
  4297                           
  4298                           ; BSR set to: 0
  4299  0025D8  C0B3  F0AF         	movff	___fladd@a+2,___fladd@b+2
  4300                           
  4301                           ; BSR set to: 0
  4302  0025DC  C0C0  F0B3         	movff	___fladd@grs,___fladd@a+2
  4303                           
  4304                           ; BSR set to: 0
  4305  0025E0  C0B0  F0C0         	movff	___fladd@b+3,___fladd@grs
  4306                           
  4307                           ; BSR set to: 0
  4308  0025E4  C0B4  F0B0         	movff	___fladd@a+3,___fladd@b+3
  4309                           
  4310                           ; BSR set to: 0
  4311  0025E8  C0C0  F0B4         	movff	___fladd@grs,___fladd@a+3
  4312  0025EC                     l5625:
  4313                           
  4314                           ; BSR set to: 0
  4315  0025EC  0E00               	movlw	0
  4316  0025EE  0100               	movlb	0	; () banked
  4317  0025F0  6FC0               	movwf	___fladd@grs& (0+255),b
  4318                           
  4319                           ; BSR set to: 0
  4320  0025F2  0100               	movlb	0	; () banked
  4321  0025F4  51BF               	movf	___fladd@bexp& (0+255),w,b
  4322  0025F6  0100               	movlb	0	; () banked
  4323  0025F8  6FB5               	movwf	??___fladd& (0+255),b
  4324  0025FA  6BB6               	clrf	(??___fladd+1)& (0+255),b
  4325  0025FC  0100               	movlb	0	; () banked
  4326  0025FE  1FB5               	comf	??___fladd& (0+255),f,b
  4327  002600  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  4328  002602  4BB5               	infsnz	??___fladd& (0+255),f,b
  4329  002604  2BB6               	incf	(??___fladd+1)& (0+255),f,b
  4330  002606  0100               	movlb	0	; () banked
  4331  002608  51BE               	movf	___fladd@aexp& (0+255),w,b
  4332  00260A  0100               	movlb	0	; () banked
  4333  00260C  6FB7               	movwf	(??___fladd+2)& (0+255),b
  4334  00260E  6BB8               	clrf	(??___fladd+3)& (0+255),b
  4335  002610  0100               	movlb	0	; () banked
  4336  002612  51B5               	movf	??___fladd& (0+255),w,b
  4337  002614  0100               	movlb	0	; () banked
  4338  002616  27B7               	addwf	(??___fladd+2)& (0+255),f,b
  4339  002618  0100               	movlb	0	; () banked
  4340  00261A  51B6               	movf	(??___fladd+1)& (0+255),w,b
  4341  00261C  0100               	movlb	0	; () banked
  4342  00261E  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  4343  002620  0100               	movlb	0	; () banked
  4344  002622  BFB8               	btfsc	(??___fladd+3)& (0+255),7,b
  4345  002624  D03D               	goto	l1242
  4346  002626  0100               	movlb	0	; () banked
  4347  002628  51B8               	movf	(??___fladd+3)& (0+255),w,b
  4348  00262A  E105               	bnz	u6980
  4349  00262C  0E1A               	movlw	26
  4350  00262E  0100               	movlb	0	; () banked
  4351  002630  5DB7               	subwf	(??___fladd+2)& (0+255),w,b
  4352  002632  A0D8               	btfss	status,0,c
  4353  002634  D035               	goto	l1242
  4354  002636                     u6980:
  4355                           
  4356                           ; BSR set to: 0
  4357  002636  0100               	movlb	0	; () banked
  4358  002638  51AD               	movf	___fladd@b& (0+255),w,b
  4359  00263A  0100               	movlb	0	; () banked
  4360  00263C  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  4361  00263E  0100               	movlb	0	; () banked
  4362  002640  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  4363  002642  0100               	movlb	0	; () banked
  4364  002644  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  4365  002646  B4D8               	btfsc	status,2,c
  4366  002648  D002               	goto	u6990
  4367  00264A  0E01               	movlw	1
  4368  00264C  D001               	goto	u7000
  4369  00264E                     u6990:
  4370  00264E  0E00               	movlw	0
  4371  002650                     u7000:
  4372  002650  0100               	movlb	0	; () banked
  4373  002652  6FC0               	movwf	___fladd@grs& (0+255),b
  4374                           
  4375                           ; BSR set to: 0
  4376  002654  0E00               	movlw	0
  4377  002656  0100               	movlb	0	; () banked
  4378  002658  6FAD               	movwf	___fladd@b& (0+255),b
  4379  00265A  0E00               	movlw	0
  4380  00265C  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  4381  00265E  0E00               	movlw	0
  4382  002660  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  4383  002662  0E00               	movlw	0
  4384  002664  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  4385                           
  4386                           ; BSR set to: 0
  4387  002666  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  4388  00266A  D020               	goto	l1241
  4389  00266C                     l1243:
  4390                           
  4391                           ; BSR set to: 0
  4392  00266C  0100               	movlb	0	; () banked
  4393  00266E  A1C0               	btfss	___fladd@grs& (0+255),0,b
  4394  002670  D007               	goto	l5637
  4395                           
  4396                           ; BSR set to: 0
  4397  002672  0100               	movlb	0	; () banked
  4398  002674  90D8               	bcf	status,0,c
  4399  002676  31C0               	rrcf	___fladd@grs& (0+255),w,b
  4400  002678  0901               	iorlw	1
  4401  00267A  0100               	movlb	0	; () banked
  4402  00267C  6FC0               	movwf	___fladd@grs& (0+255),b
  4403  00267E  D003               	goto	l5639
  4404  002680                     l5637:
  4405                           
  4406                           ; BSR set to: 0
  4407  002680  0100               	movlb	0	; () banked
  4408  002682  90D8               	bcf	status,0,c
  4409  002684  33C0               	rrcf	___fladd@grs& (0+255),f,b
  4410  002686                     l5639:
  4411                           
  4412                           ; BSR set to: 0
  4413  002686  0100               	movlb	0	; () banked
  4414  002688  A1AD               	btfss	___fladd@b& (0+255),0,b
  4415  00268A  D002               	goto	l5643
  4416                           
  4417                           ; BSR set to: 0
  4418  00268C  0100               	movlb	0	; () banked
  4419  00268E  8FC0               	bsf	___fladd@grs& (0+255),7,b
  4420  002690                     l5643:
  4421                           
  4422                           ; BSR set to: 0
  4423  002690  0100               	movlb	0	; () banked
  4424  002692  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  4425  002694  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  4426  002696  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  4427  002698  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  4428  00269A  33AD               	rrcf	___fladd@b& (0+255),f,b
  4429                           
  4430                           ; BSR set to: 0
  4431  00269C  0100               	movlb	0	; () banked
  4432  00269E  2BBF               	incf	___fladd@bexp& (0+255),f,b
  4433  0026A0                     l1242:
  4434                           
  4435                           ; BSR set to: 0
  4436  0026A0  0100               	movlb	0	; () banked
  4437  0026A2  51BE               	movf	___fladd@aexp& (0+255),w,b
  4438  0026A4  0100               	movlb	0	; () banked
  4439  0026A6  5DBF               	subwf	___fladd@bexp& (0+255),w,b
  4440  0026A8  A0D8               	btfss	status,0,c
  4441  0026AA  D7E0               	goto	l1243
  4442  0026AC                     l1241:
  4443                           
  4444                           ; BSR set to: 0
  4445  0026AC  0100               	movlb	0	; () banked
  4446  0026AE  BDBD               	btfsc	___fladd@signs& (0+255),6,b
  4447  0026B0  D03F               	goto	l5671
  4448                           
  4449                           ; BSR set to: 0
  4450  0026B2  0100               	movlb	0	; () banked
  4451  0026B4  51BF               	movf	___fladd@bexp& (0+255),w,b
  4452  0026B6  0100               	movlb	0	; () banked
  4453  0026B8  A4D8               	btfss	status,2,c
  4454  0026BA  D00A               	goto	l5653
  4455                           
  4456                           ; BSR set to: 0
  4457  0026BC  0E00               	movlw	0
  4458  0026BE  0100               	movlb	0	; () banked
  4459  0026C0  6FAD               	movwf	?___fladd& (0+255),b
  4460  0026C2  0E00               	movlw	0
  4461  0026C4  6FAE               	movwf	(?___fladd+1)& (0+255),b
  4462  0026C6  0E00               	movlw	0
  4463  0026C8  6FAF               	movwf	(?___fladd+2)& (0+255),b
  4464  0026CA  0E00               	movlw	0
  4465  0026CC  6FB0               	movwf	(?___fladd+3)& (0+255),b
  4466                           
  4467                           ; BSR set to: 0
  4468  0026CE  0012               	return	
  4469  0026D0                     l5653:
  4470                           
  4471                           ; BSR set to: 0
  4472  0026D0  0100               	movlb	0	; () banked
  4473  0026D2  51B1               	movf	___fladd@a& (0+255),w,b
  4474  0026D4  0100               	movlb	0	; () banked
  4475  0026D6  27AD               	addwf	___fladd@b& (0+255),f,b
  4476  0026D8  0100               	movlb	0	; () banked
  4477  0026DA  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  4478  0026DC  0100               	movlb	0	; () banked
  4479  0026DE  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  4480  0026E0  0100               	movlb	0	; () banked
  4481  0026E2  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  4482  0026E4  0100               	movlb	0	; () banked
  4483  0026E6  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  4484  0026E8  0100               	movlb	0	; () banked
  4485  0026EA  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  4486  0026EC  0100               	movlb	0	; () banked
  4487  0026EE  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  4488                           
  4489                           ; BSR set to: 0
  4490  0026F0  0100               	movlb	0	; () banked
  4491  0026F2  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  4492  0026F4  D0CC               	goto	l5707
  4493                           
  4494                           ; BSR set to: 0
  4495  0026F6  0100               	movlb	0	; () banked
  4496  0026F8  A1C0               	btfss	___fladd@grs& (0+255),0,b
  4497  0026FA  D009               	goto	l5661
  4498                           
  4499                           ; BSR set to: 0
  4500  0026FC  0100               	movlb	0	; () banked
  4501  0026FE  90D8               	bcf	status,0,c
  4502  002700  33C0               	rrcf	___fladd@grs& (0+255),f,b
  4503  002702  0100               	movlb	0	; () banked
  4504  002704  51C0               	movf	___fladd@grs& (0+255),w,b
  4505  002706  0901               	iorlw	1
  4506  002708  0100               	movlb	0	; () banked
  4507  00270A  6FC0               	movwf	___fladd@grs& (0+255),b
  4508  00270C  D003               	goto	l5663
  4509  00270E                     l5661:
  4510                           
  4511                           ; BSR set to: 0
  4512  00270E  0100               	movlb	0	; () banked
  4513  002710  90D8               	bcf	status,0,c
  4514  002712  33C0               	rrcf	___fladd@grs& (0+255),f,b
  4515  002714                     l5663:
  4516                           
  4517                           ; BSR set to: 0
  4518  002714  0100               	movlb	0	; () banked
  4519  002716  A1AD               	btfss	___fladd@b& (0+255),0,b
  4520  002718  D002               	goto	l5667
  4521                           
  4522                           ; BSR set to: 0
  4523  00271A  0100               	movlb	0	; () banked
  4524  00271C  8FC0               	bsf	___fladd@grs& (0+255),7,b
  4525  00271E                     l5667:
  4526                           
  4527                           ; BSR set to: 0
  4528  00271E  0100               	movlb	0	; () banked
  4529  002720  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  4530  002722  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  4531  002724  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  4532  002726  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  4533  002728  33AD               	rrcf	___fladd@b& (0+255),f,b
  4534                           
  4535                           ; BSR set to: 0
  4536  00272A  0100               	movlb	0	; () banked
  4537  00272C  2BBF               	incf	___fladd@bexp& (0+255),f,b
  4538                           
  4539                           ; BSR set to: 0
  4540  00272E  D0AF               	goto	l5707
  4541  002730                     l5671:
  4542                           
  4543                           ; BSR set to: 0
  4544  002730  0100               	movlb	0	; () banked
  4545  002732  51B1               	movf	___fladd@a& (0+255),w,b
  4546  002734  0100               	movlb	0	; () banked
  4547  002736  5DAD               	subwf	___fladd@b& (0+255),w,b
  4548  002738  0100               	movlb	0	; () banked
  4549  00273A  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  4550  00273C  0100               	movlb	0	; () banked
  4551  00273E  59AE               	subwfb	(___fladd@b+1)& (0+255),w,b
  4552  002740  0100               	movlb	0	; () banked
  4553  002742  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  4554  002744  0100               	movlb	0	; () banked
  4555  002746  59AF               	subwfb	(___fladd@b+2)& (0+255),w,b
  4556  002748  0100               	movlb	0	; () banked
  4557  00274A  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  4558  00274C  0A80               	xorlw	128
  4559  00274E  0100               	movlb	0	; () banked
  4560  002750  6FB5               	movwf	??___fladd& (0+255),b
  4561  002752  0100               	movlb	0	; () banked
  4562  002754  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  4563  002756  0A80               	xorlw	128
  4564  002758  0100               	movlb	0	; () banked
  4565  00275A  59B5               	subwfb	??___fladd& (0+255),w,b
  4566  00275C  B0D8               	btfsc	status,0,c
  4567  00275E  D050               	goto	l5681
  4568                           
  4569                           ; BSR set to: 0
  4570  002760  C0AD  F0B5         	movff	___fladd@b,??___fladd
  4571  002764  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  4572  002768  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  4573  00276C  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  4574  002770  0100               	movlb	0	; () banked
  4575  002772  1FB5               	comf	??___fladd& (0+255),f,b
  4576  002774  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  4577  002776  1FB7               	comf	(??___fladd+2)& (0+255),f,b
  4578  002778  1FB8               	comf	(??___fladd+3)& (0+255),f,b
  4579  00277A  2BB5               	incf	??___fladd& (0+255),f,b
  4580  00277C  0E00               	movlw	0
  4581  00277E  23B6               	addwfc	(??___fladd+1)& (0+255),f,b
  4582  002780  23B7               	addwfc	(??___fladd+2)& (0+255),f,b
  4583  002782  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  4584  002784  0100               	movlb	0	; () banked
  4585  002786  51B1               	movf	___fladd@a& (0+255),w,b
  4586  002788  0100               	movlb	0	; () banked
  4587  00278A  25B5               	addwf	??___fladd& (0+255),w,b
  4588  00278C  0100               	movlb	0	; () banked
  4589  00278E  6FB9               	movwf	(??___fladd+4)& (0+255),b
  4590  002790  0100               	movlb	0	; () banked
  4591  002792  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  4592  002794  0100               	movlb	0	; () banked
  4593  002796  21B6               	addwfc	(??___fladd+1)& (0+255),w,b
  4594  002798  0100               	movlb	0	; () banked
  4595  00279A  6FBA               	movwf	(??___fladd+5)& (0+255),b
  4596  00279C  0100               	movlb	0	; () banked
  4597  00279E  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  4598  0027A0  0100               	movlb	0	; () banked
  4599  0027A2  21B7               	addwfc	(??___fladd+2)& (0+255),w,b
  4600  0027A4  0100               	movlb	0	; () banked
  4601  0027A6  6FBB               	movwf	(??___fladd+6)& (0+255),b
  4602  0027A8  0100               	movlb	0	; () banked
  4603  0027AA  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  4604  0027AC  0100               	movlb	0	; () banked
  4605  0027AE  21B8               	addwfc	(??___fladd+3)& (0+255),w,b
  4606  0027B0  0100               	movlb	0	; () banked
  4607  0027B2  6FBC               	movwf	(??___fladd+7)& (0+255),b
  4608  0027B4  0EFF               	movlw	255
  4609  0027B6  0100               	movlb	0	; () banked
  4610  0027B8  25B9               	addwf	(??___fladd+4)& (0+255),w,b
  4611  0027BA  0100               	movlb	0	; () banked
  4612  0027BC  6FAD               	movwf	___fladd@b& (0+255),b
  4613  0027BE  0EFF               	movlw	255
  4614  0027C0  0100               	movlb	0	; () banked
  4615  0027C2  21BA               	addwfc	(??___fladd+5)& (0+255),w,b
  4616  0027C4  0100               	movlb	0	; () banked
  4617  0027C6  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  4618  0027C8  0EFF               	movlw	255
  4619  0027CA  0100               	movlb	0	; () banked
  4620  0027CC  21BB               	addwfc	(??___fladd+6)& (0+255),w,b
  4621  0027CE  0100               	movlb	0	; () banked
  4622  0027D0  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  4623  0027D2  0EFF               	movlw	255
  4624  0027D4  0100               	movlb	0	; () banked
  4625  0027D6  21BC               	addwfc	(??___fladd+7)& (0+255),w,b
  4626  0027D8  0100               	movlb	0	; () banked
  4627  0027DA  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  4628  0027DC  0E80               	movlw	128
  4629  0027DE  0100               	movlb	0	; () banked
  4630  0027E0  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  4631                           
  4632                           ; BSR set to: 0
  4633  0027E2  0100               	movlb	0	; () banked
  4634  0027E4  6DC0               	negf	___fladd@grs& (0+255),b
  4635                           
  4636                           ; BSR set to: 0
  4637  0027E6  0100               	movlb	0	; () banked
  4638  0027E8  51C0               	movf	___fladd@grs& (0+255),w,b
  4639  0027EA  0100               	movlb	0	; () banked
  4640  0027EC  A4D8               	btfss	status,2,c
  4641  0027EE  D018               	goto	l1258
  4642                           
  4643                           ; BSR set to: 0
  4644  0027F0  0E01               	movlw	1
  4645  0027F2  0100               	movlb	0	; () banked
  4646  0027F4  27AD               	addwf	___fladd@b& (0+255),f,b
  4647  0027F6  0E00               	movlw	0
  4648  0027F8  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  4649  0027FA  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  4650  0027FC  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  4651                           
  4652                           ; BSR set to: 0
  4653  0027FE  D010               	goto	l1258
  4654  002800                     l5681:
  4655                           
  4656                           ; BSR set to: 0
  4657  002800  0100               	movlb	0	; () banked
  4658  002802  51B1               	movf	___fladd@a& (0+255),w,b
  4659  002804  0100               	movlb	0	; () banked
  4660  002806  5FAD               	subwf	___fladd@b& (0+255),f,b
  4661  002808  0100               	movlb	0	; () banked
  4662  00280A  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  4663  00280C  0100               	movlb	0	; () banked
  4664  00280E  5BAE               	subwfb	(___fladd@b+1)& (0+255),f,b
  4665  002810  0100               	movlb	0	; () banked
  4666  002812  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  4667  002814  0100               	movlb	0	; () banked
  4668  002816  5BAF               	subwfb	(___fladd@b+2)& (0+255),f,b
  4669  002818  0100               	movlb	0	; () banked
  4670  00281A  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  4671  00281C  0100               	movlb	0	; () banked
  4672  00281E  5BB0               	subwfb	(___fladd@b+3)& (0+255),f,b
  4673  002820                     l1258:
  4674                           
  4675                           ; BSR set to: 0
  4676  002820  0100               	movlb	0	; () banked
  4677  002822  51AD               	movf	___fladd@b& (0+255),w,b
  4678  002824  0100               	movlb	0	; () banked
  4679  002826  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  4680  002828  0100               	movlb	0	; () banked
  4681  00282A  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  4682  00282C  0100               	movlb	0	; () banked
  4683  00282E  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  4684  002830  A4D8               	btfss	status,2,c
  4685  002832  D02A               	goto	l5705
  4686                           
  4687                           ; BSR set to: 0
  4688  002834  0100               	movlb	0	; () banked
  4689  002836  51C0               	movf	___fladd@grs& (0+255),w,b
  4690  002838  0100               	movlb	0	; () banked
  4691  00283A  A4D8               	btfss	status,2,c
  4692  00283C  D025               	goto	l5705
  4693                           
  4694                           ; BSR set to: 0
  4695  00283E  0E00               	movlw	0
  4696  002840  0100               	movlb	0	; () banked
  4697  002842  6FAD               	movwf	?___fladd& (0+255),b
  4698  002844  0E00               	movlw	0
  4699  002846  6FAE               	movwf	(?___fladd+1)& (0+255),b
  4700  002848  0E00               	movlw	0
  4701  00284A  6FAF               	movwf	(?___fladd+2)& (0+255),b
  4702  00284C  0E00               	movlw	0
  4703  00284E  6FB0               	movwf	(?___fladd+3)& (0+255),b
  4704                           
  4705                           ; BSR set to: 0
  4706  002850  0012               	return	
  4707  002852                     l5689:
  4708                           
  4709                           ; BSR set to: 0
  4710  002852  0100               	movlb	0	; () banked
  4711  002854  90D8               	bcf	status,0,c
  4712  002856  37AD               	rlcf	___fladd@b& (0+255),f,b
  4713  002858  37AE               	rlcf	(___fladd@b+1)& (0+255),f,b
  4714  00285A  37AF               	rlcf	(___fladd@b+2)& (0+255),f,b
  4715  00285C  37B0               	rlcf	(___fladd@b+3)& (0+255),f,b
  4716                           
  4717                           ; BSR set to: 0
  4718  00285E  0100               	movlb	0	; () banked
  4719  002860  AFC0               	btfss	___fladd@grs& (0+255),7,b
  4720  002862  D002               	goto	l5695
  4721                           
  4722                           ; BSR set to: 0
  4723  002864  0100               	movlb	0	; () banked
  4724  002866  81AD               	bsf	___fladd@b& (0+255),0,b
  4725  002868                     l5695:
  4726                           
  4727                           ; BSR set to: 0
  4728  002868  0100               	movlb	0	; () banked
  4729  00286A  A1C0               	btfss	___fladd@grs& (0+255),0,b
  4730  00286C  D003               	goto	l5699
  4731                           
  4732                           ; BSR set to: 0
  4733  00286E  80D8               	bsf	status,0,c
  4734  002870  0100               	movlb	0	; () banked
  4735  002872  D002               	goto	L5
  4736  002874                     l5699:
  4737                           
  4738                           ; BSR set to: 0
  4739  002874  0100               	movlb	0	; () banked
  4740  002876  90D8               	bcf	status,0,c
  4741  002878                     L5:
  4742  002878  37C0               	rlcf	___fladd@grs& (0+255),f,b
  4743                           
  4744                           ; BSR set to: 0
  4745                           
  4746                           ; BSR set to: 0
  4747  00287A  0100               	movlb	0	; () banked
  4748  00287C  51BF               	movf	___fladd@bexp& (0+255),w,b
  4749  00287E  0100               	movlb	0	; () banked
  4750  002880  B4D8               	btfsc	status,2,c
  4751  002882  D002               	goto	l5705
  4752                           
  4753                           ; BSR set to: 0
  4754  002884  0100               	movlb	0	; () banked
  4755  002886  07BF               	decf	___fladd@bexp& (0+255),f,b
  4756  002888                     l5705:
  4757                           
  4758                           ; BSR set to: 0
  4759  002888  0100               	movlb	0	; () banked
  4760  00288A  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  4761  00288C  D7E2               	goto	l5689
  4762  00288E                     l5707:
  4763                           
  4764                           ; BSR set to: 0
  4765  00288E  0E00               	movlw	0
  4766  002890  0100               	movlb	0	; () banked
  4767  002892  6FBE               	movwf	___fladd@aexp& (0+255),b
  4768                           
  4769                           ; BSR set to: 0
  4770  002894  0100               	movlb	0	; () banked
  4771  002896  AFC0               	btfss	___fladd@grs& (0+255),7,b
  4772  002898  D00D               	goto	l1267
  4773                           
  4774                           ; BSR set to: 0
  4775  00289A  C0C0  F0B5         	movff	___fladd@grs,??___fladd
  4776  00289E  0E7F               	movlw	127
  4777  0028A0  0100               	movlb	0	; () banked
  4778  0028A2  17B5               	andwf	??___fladd& (0+255),f,b
  4779  0028A4  A4D8               	btfss	status,2,c
  4780  0028A6  D003               	goto	l5715
  4781                           
  4782                           ; BSR set to: 0
  4783                           
  4784                           ; BSR set to: 0
  4785  0028A8  0100               	movlb	0	; () banked
  4786  0028AA  A1AD               	btfss	___fladd@b& (0+255),0,b
  4787  0028AC  D003               	goto	l1267
  4788  0028AE                     l5715:
  4789                           
  4790                           ; BSR set to: 0
  4791  0028AE  0E01               	movlw	1
  4792  0028B0  0100               	movlb	0	; () banked
  4793  0028B2  6FBE               	movwf	___fladd@aexp& (0+255),b
  4794  0028B4                     l1267:
  4795                           
  4796                           ; BSR set to: 0
  4797  0028B4  0100               	movlb	0	; () banked
  4798  0028B6  51BE               	movf	___fladd@aexp& (0+255),w,b
  4799  0028B8  0100               	movlb	0	; () banked
  4800  0028BA  B4D8               	btfsc	status,2,c
  4801  0028BC  D026               	goto	l5725
  4802                           
  4803                           ; BSR set to: 0
  4804  0028BE  0E01               	movlw	1
  4805  0028C0  0100               	movlb	0	; () banked
  4806  0028C2  27AD               	addwf	___fladd@b& (0+255),f,b
  4807  0028C4  0E00               	movlw	0
  4808  0028C6  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  4809  0028C8  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  4810  0028CA  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  4811                           
  4812                           ; BSR set to: 0
  4813  0028CC  0100               	movlb	0	; () banked
  4814  0028CE  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  4815  0028D0  D01C               	goto	l5725
  4816                           
  4817                           ; BSR set to: 0
  4818  0028D2  C0AD  F0B5         	movff	___fladd@b,??___fladd
  4819  0028D6  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  4820  0028DA  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  4821  0028DE  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  4822  0028E2  0100               	movlb	0	; () banked
  4823  0028E4  35B8               	rlcf	(??___fladd+3)& (0+255),w,b
  4824  0028E6  33B8               	rrcf	(??___fladd+3)& (0+255),f,b
  4825  0028E8  33B7               	rrcf	(??___fladd+2)& (0+255),f,b
  4826  0028EA  33B6               	rrcf	(??___fladd+1)& (0+255),f,b
  4827  0028EC  33B5               	rrcf	??___fladd& (0+255),f,b
  4828  0028EE  C0B5  F0AD         	movff	??___fladd,___fladd@b
  4829  0028F2  C0B6  F0AE         	movff	??___fladd+1,___fladd@b+1
  4830  0028F6  C0B7  F0AF         	movff	??___fladd+2,___fladd@b+2
  4831  0028FA  C0B8  F0B0         	movff	??___fladd+3,___fladd@b+3
  4832  0028FE  0100               	movlb	0	; () banked
  4833  002900  29BF               	incf	___fladd@bexp& (0+255),w,b
  4834  002902  B4D8               	btfsc	status,2,c
  4835  002904  D002               	goto	l5725
  4836                           
  4837                           ; BSR set to: 0
  4838  002906  0100               	movlb	0	; () banked
  4839  002908  2BBF               	incf	___fladd@bexp& (0+255),f,b
  4840  00290A                     l5725:
  4841                           
  4842                           ; BSR set to: 0
  4843  00290A  0100               	movlb	0	; () banked
  4844  00290C  29BF               	incf	___fladd@bexp& (0+255),w,b
  4845  00290E  B4D8               	btfsc	status,2,c
  4846  002910  D005               	goto	l5729
  4847                           
  4848                           ; BSR set to: 0
  4849  002912  0100               	movlb	0	; () banked
  4850  002914  51BF               	movf	___fladd@bexp& (0+255),w,b
  4851  002916  0100               	movlb	0	; () banked
  4852  002918  A4D8               	btfss	status,2,c
  4853  00291A  D011               	goto	l5733
  4854  00291C                     l5729:
  4855                           
  4856                           ; BSR set to: 0
  4857  00291C  0E00               	movlw	0
  4858  00291E  0100               	movlb	0	; () banked
  4859  002920  6FAD               	movwf	___fladd@b& (0+255),b
  4860  002922  0E00               	movlw	0
  4861  002924  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  4862  002926  0E00               	movlw	0
  4863  002928  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  4864  00292A  0E00               	movlw	0
  4865  00292C  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  4866  00292E  0100               	movlb	0	; () banked
  4867  002930  51BF               	movf	___fladd@bexp& (0+255),w,b
  4868  002932  0100               	movlb	0	; () banked
  4869  002934  A4D8               	btfss	status,2,c
  4870  002936  D003               	goto	l5733
  4871                           
  4872                           ; BSR set to: 0
  4873  002938  0E00               	movlw	0
  4874  00293A  0100               	movlb	0	; () banked
  4875  00293C  6FBD               	movwf	___fladd@signs& (0+255),b
  4876  00293E                     l5733:
  4877                           
  4878                           ; BSR set to: 0
  4879  00293E  0100               	movlb	0	; () banked
  4880  002940  A1BF               	btfss	___fladd@bexp& (0+255),0,b
  4881  002942  D003               	goto	l5737
  4882                           
  4883                           ; BSR set to: 0
  4884  002944  0100               	movlb	0	; () banked
  4885  002946  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  4886  002948  D002               	goto	l5739
  4887  00294A                     l5737:
  4888                           
  4889                           ; BSR set to: 0
  4890  00294A  0100               	movlb	0	; () banked
  4891  00294C  9FAF               	bcf	(___fladd@b+2)& (0+255),7,b
  4892  00294E                     l5739:
  4893                           
  4894                           ; BSR set to: 0
  4895  00294E  0100               	movlb	0	; () banked
  4896  002950  90D8               	bcf	status,0,c
  4897  002952  31BF               	rrcf	___fladd@bexp& (0+255),w,b
  4898  002954  0100               	movlb	0	; () banked
  4899  002956  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  4900                           
  4901                           ; BSR set to: 0
  4902  002958  0100               	movlb	0	; () banked
  4903  00295A  AFBD               	btfss	___fladd@signs& (0+255),7,b
  4904  00295C  D002               	goto	l5745
  4905                           
  4906                           ; BSR set to: 0
  4907  00295E  0100               	movlb	0	; () banked
  4908  002960  8FB0               	bsf	(___fladd@b+3)& (0+255),7,b
  4909  002962                     l5745:
  4910                           
  4911                           ; BSR set to: 0
  4912  002962  C0AD  F0AD         	movff	___fladd@b,?___fladd
  4913  002966  C0AE  F0AE         	movff	___fladd@b+1,?___fladd+1
  4914  00296A  C0AF  F0AF         	movff	___fladd@b+2,?___fladd+2
  4915  00296E  C0B0  F0B0         	movff	___fladd@b+3,?___fladd+3
  4916  002972  0012               	return	
  4917  002974                     __end_of___fladd:
  4918                           	opt stack 0
  4919                           tblptru	equ	0xFF8
  4920                           tblptrh	equ	0xFF7
  4921                           tblptrl	equ	0xFF6
  4922                           tablat	equ	0xFF5
  4923                           prodh	equ	0xFF4
  4924                           prodl	equ	0xFF3
  4925                           postinc0	equ	0xFEE
  4926                           wreg	equ	0xFE8
  4927                           postinc2	equ	0xFDE
  4928                           postdec2	equ	0xFDD
  4929                           status	equ	0xFD8
  4930                           
  4931 ;; *************** function ___flge *****************
  4932 ;; Defined at:
  4933 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  ff1             4   81[BANK0 ] unsigned char 
  4936 ;;  ff2             4   85[BANK0 ] unsigned char 
  4937 ;; Auto vars:     Size  Location     Type
  4938 ;;		None
  4939 ;; Return value:  Size  Location     Type
  4940 ;;		None               void
  4941 ;; Registers used:
  4942 ;;		wreg, status,2, status,0
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4948 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4950 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4951 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4952 ;;Total ram usage:       12 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:    4
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		_parallelo
  4959 ;;		_asin
  4960 ;;		_atan
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text11
  4965  0044AC                     __ptext11:
  4966                           	opt stack 0
  4967  0044AC                     ___flge:
  4968                           	opt stack 22
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;incstack = 0
  4972  0044AC  0E00               	movlw	0
  4973  0044AE  0100               	movlb	0	; () banked
  4974  0044B0  15B1               	andwf	___flge@ff1& (0+255),w,b
  4975  0044B2  0100               	movlb	0	; () banked
  4976  0044B4  6FB9               	movwf	??___flge& (0+255),b
  4977  0044B6  0E00               	movlw	0
  4978  0044B8  0100               	movlb	0	; () banked
  4979  0044BA  15B2               	andwf	(___flge@ff1+1)& (0+255),w,b
  4980  0044BC  0100               	movlb	0	; () banked
  4981  0044BE  6FBA               	movwf	(??___flge+1)& (0+255),b
  4982  0044C0  0E80               	movlw	128
  4983  0044C2  0100               	movlb	0	; () banked
  4984  0044C4  15B3               	andwf	(___flge@ff1+2)& (0+255),w,b
  4985  0044C6  0100               	movlb	0	; () banked
  4986  0044C8  6FBB               	movwf	(??___flge+2)& (0+255),b
  4987  0044CA  0E7F               	movlw	127
  4988  0044CC  0100               	movlb	0	; () banked
  4989  0044CE  15B4               	andwf	(___flge@ff1+3)& (0+255),w,b
  4990  0044D0  0100               	movlb	0	; () banked
  4991  0044D2  6FBC               	movwf	(??___flge+3)& (0+255),b
  4992  0044D4  0100               	movlb	0	; () banked
  4993  0044D6  51B9               	movf	??___flge& (0+255),w,b
  4994  0044D8  0100               	movlb	0	; () banked
  4995  0044DA  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  4996  0044DC  0100               	movlb	0	; () banked
  4997  0044DE  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  4998  0044E0  0100               	movlb	0	; () banked
  4999  0044E2  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  5000  0044E4  A4D8               	btfss	status,2,c
  5001  0044E6  D009               	goto	l6039
  5002                           
  5003                           ; BSR set to: 0
  5004  0044E8  0E00               	movlw	0
  5005  0044EA  0100               	movlb	0	; () banked
  5006  0044EC  6FB1               	movwf	___flge@ff1& (0+255),b
  5007  0044EE  0E00               	movlw	0
  5008  0044F0  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  5009  0044F2  0E00               	movlw	0
  5010  0044F4  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  5011  0044F6  0E00               	movlw	0
  5012  0044F8  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  5013  0044FA                     l6039:
  5014                           
  5015                           ; BSR set to: 0
  5016  0044FA  0E00               	movlw	0
  5017  0044FC  0100               	movlb	0	; () banked
  5018  0044FE  15B5               	andwf	___flge@ff2& (0+255),w,b
  5019  004500  0100               	movlb	0	; () banked
  5020  004502  6FB9               	movwf	??___flge& (0+255),b
  5021  004504  0E00               	movlw	0
  5022  004506  0100               	movlb	0	; () banked
  5023  004508  15B6               	andwf	(___flge@ff2+1)& (0+255),w,b
  5024  00450A  0100               	movlb	0	; () banked
  5025  00450C  6FBA               	movwf	(??___flge+1)& (0+255),b
  5026  00450E  0E80               	movlw	128
  5027  004510  0100               	movlb	0	; () banked
  5028  004512  15B7               	andwf	(___flge@ff2+2)& (0+255),w,b
  5029  004514  0100               	movlb	0	; () banked
  5030  004516  6FBB               	movwf	(??___flge+2)& (0+255),b
  5031  004518  0E7F               	movlw	127
  5032  00451A  0100               	movlb	0	; () banked
  5033  00451C  15B8               	andwf	(___flge@ff2+3)& (0+255),w,b
  5034  00451E  0100               	movlb	0	; () banked
  5035  004520  6FBC               	movwf	(??___flge+3)& (0+255),b
  5036  004522  0100               	movlb	0	; () banked
  5037  004524  51B9               	movf	??___flge& (0+255),w,b
  5038  004526  0100               	movlb	0	; () banked
  5039  004528  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  5040  00452A  0100               	movlb	0	; () banked
  5041  00452C  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  5042  00452E  0100               	movlb	0	; () banked
  5043  004530  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  5044  004532  A4D8               	btfss	status,2,c
  5045  004534  D009               	goto	l6043
  5046                           
  5047                           ; BSR set to: 0
  5048  004536  0E00               	movlw	0
  5049  004538  0100               	movlb	0	; () banked
  5050  00453A  6FB5               	movwf	___flge@ff2& (0+255),b
  5051  00453C  0E00               	movlw	0
  5052  00453E  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  5053  004540  0E00               	movlw	0
  5054  004542  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  5055  004544  0E00               	movlw	0
  5056  004546  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  5057  004548                     l6043:
  5058                           
  5059                           ; BSR set to: 0
  5060  004548  0100               	movlb	0	; () banked
  5061  00454A  AFB4               	btfss	(___flge@ff1+3)& (0+255),7,b
  5062  00454C  D026               	goto	l6047
  5063                           
  5064                           ; BSR set to: 0
  5065  00454E  C0B1  F0B9         	movff	___flge@ff1,??___flge
  5066  004552  C0B2  F0BA         	movff	___flge@ff1+1,??___flge+1
  5067  004556  C0B3  F0BB         	movff	___flge@ff1+2,??___flge+2
  5068  00455A  C0B4  F0BC         	movff	___flge@ff1+3,??___flge+3
  5069  00455E  0100               	movlb	0	; () banked
  5070  004560  1FB9               	comf	??___flge& (0+255),f,b
  5071  004562  1FBA               	comf	(??___flge+1)& (0+255),f,b
  5072  004564  1FBB               	comf	(??___flge+2)& (0+255),f,b
  5073  004566  1FBC               	comf	(??___flge+3)& (0+255),f,b
  5074  004568  2BB9               	incf	??___flge& (0+255),f,b
  5075  00456A  0E00               	movlw	0
  5076  00456C  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  5077  00456E  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  5078  004570  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  5079  004572  0E00               	movlw	0
  5080  004574  0100               	movlb	0	; () banked
  5081  004576  25B9               	addwf	??___flge& (0+255),w,b
  5082  004578  0100               	movlb	0	; () banked
  5083  00457A  6FB1               	movwf	___flge@ff1& (0+255),b
  5084  00457C  0E00               	movlw	0
  5085  00457E  0100               	movlb	0	; () banked
  5086  004580  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  5087  004582  0100               	movlb	0	; () banked
  5088  004584  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  5089  004586  0E00               	movlw	0
  5090  004588  0100               	movlb	0	; () banked
  5091  00458A  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  5092  00458C  0100               	movlb	0	; () banked
  5093  00458E  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  5094  004590  0E80               	movlw	128
  5095  004592  0100               	movlb	0	; () banked
  5096  004594  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  5097  004596  0100               	movlb	0	; () banked
  5098  004598  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  5099  00459A                     l6047:
  5100                           
  5101                           ; BSR set to: 0
  5102  00459A  0100               	movlb	0	; () banked
  5103  00459C  AFB8               	btfss	(___flge@ff2+3)& (0+255),7,b
  5104  00459E  D026               	goto	l1004
  5105                           
  5106                           ; BSR set to: 0
  5107  0045A0  C0B5  F0B9         	movff	___flge@ff2,??___flge
  5108  0045A4  C0B6  F0BA         	movff	___flge@ff2+1,??___flge+1
  5109  0045A8  C0B7  F0BB         	movff	___flge@ff2+2,??___flge+2
  5110  0045AC  C0B8  F0BC         	movff	___flge@ff2+3,??___flge+3
  5111  0045B0  0100               	movlb	0	; () banked
  5112  0045B2  1FB9               	comf	??___flge& (0+255),f,b
  5113  0045B4  1FBA               	comf	(??___flge+1)& (0+255),f,b
  5114  0045B6  1FBB               	comf	(??___flge+2)& (0+255),f,b
  5115  0045B8  1FBC               	comf	(??___flge+3)& (0+255),f,b
  5116  0045BA  2BB9               	incf	??___flge& (0+255),f,b
  5117  0045BC  0E00               	movlw	0
  5118  0045BE  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  5119  0045C0  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  5120  0045C2  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  5121  0045C4  0E00               	movlw	0
  5122  0045C6  0100               	movlb	0	; () banked
  5123  0045C8  25B9               	addwf	??___flge& (0+255),w,b
  5124  0045CA  0100               	movlb	0	; () banked
  5125  0045CC  6FB5               	movwf	___flge@ff2& (0+255),b
  5126  0045CE  0E00               	movlw	0
  5127  0045D0  0100               	movlb	0	; () banked
  5128  0045D2  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  5129  0045D4  0100               	movlb	0	; () banked
  5130  0045D6  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  5131  0045D8  0E00               	movlw	0
  5132  0045DA  0100               	movlb	0	; () banked
  5133  0045DC  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  5134  0045DE  0100               	movlb	0	; () banked
  5135  0045E0  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  5136  0045E2  0E80               	movlw	128
  5137  0045E4  0100               	movlb	0	; () banked
  5138  0045E6  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  5139  0045E8  0100               	movlb	0	; () banked
  5140  0045EA  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  5141  0045EC                     l1004:
  5142                           
  5143                           ; BSR set to: 0
  5144  0045EC  0E00               	movlw	0
  5145  0045EE  0100               	movlb	0	; () banked
  5146  0045F0  1BB1               	xorwf	___flge@ff1& (0+255),f,b
  5147  0045F2  0E00               	movlw	0
  5148  0045F4  1BB2               	xorwf	(___flge@ff1+1)& (0+255),f,b
  5149  0045F6  0E00               	movlw	0
  5150  0045F8  1BB3               	xorwf	(___flge@ff1+2)& (0+255),f,b
  5151  0045FA  0E80               	movlw	128
  5152  0045FC  1BB4               	xorwf	(___flge@ff1+3)& (0+255),f,b
  5153  0045FE  0E00               	movlw	0
  5154  004600  0100               	movlb	0	; () banked
  5155  004602  1BB5               	xorwf	___flge@ff2& (0+255),f,b
  5156  004604  0E00               	movlw	0
  5157  004606  1BB6               	xorwf	(___flge@ff2+1)& (0+255),f,b
  5158  004608  0E00               	movlw	0
  5159  00460A  1BB7               	xorwf	(___flge@ff2+2)& (0+255),f,b
  5160  00460C  0E80               	movlw	128
  5161  00460E  1BB8               	xorwf	(___flge@ff2+3)& (0+255),f,b
  5162  004610  0100               	movlb	0	; () banked
  5163  004612  51B5               	movf	___flge@ff2& (0+255),w,b
  5164  004614  0100               	movlb	0	; () banked
  5165  004616  5DB1               	subwf	___flge@ff1& (0+255),w,b
  5166  004618  0100               	movlb	0	; () banked
  5167  00461A  51B6               	movf	(___flge@ff2+1)& (0+255),w,b
  5168  00461C  0100               	movlb	0	; () banked
  5169  00461E  59B2               	subwfb	(___flge@ff1+1)& (0+255),w,b
  5170  004620  0100               	movlb	0	; () banked
  5171  004622  51B7               	movf	(___flge@ff2+2)& (0+255),w,b
  5172  004624  0100               	movlb	0	; () banked
  5173  004626  59B3               	subwfb	(___flge@ff1+2)& (0+255),w,b
  5174  004628  0100               	movlb	0	; () banked
  5175  00462A  51B8               	movf	(___flge@ff2+3)& (0+255),w,b
  5176  00462C  0100               	movlb	0	; () banked
  5177  00462E  59B4               	subwfb	(___flge@ff1+3)& (0+255),w,b
  5178  004630  B0D8               	btfsc	status,0,c
  5179  004632  D002               	goto	l6053
  5180                           
  5181                           ; BSR set to: 0
  5182  004634  90D8               	bcf	status,0,c
  5183  004636  0012               	return	
  5184  004638                     l6053:
  5185                           
  5186                           ; BSR set to: 0
  5187  004638  80D8               	bsf	status,0,c
  5188                           
  5189                           ; BSR set to: 0
  5190  00463A  0012               	return	
  5191  00463C                     __end_of___flge:
  5192                           	opt stack 0
  5193                           tblptru	equ	0xFF8
  5194                           tblptrh	equ	0xFF7
  5195                           tblptrl	equ	0xFF6
  5196                           tablat	equ	0xFF5
  5197                           prodh	equ	0xFF4
  5198                           prodl	equ	0xFF3
  5199                           postinc0	equ	0xFEE
  5200                           wreg	equ	0xFE8
  5201                           postinc2	equ	0xFDE
  5202                           postdec2	equ	0xFDD
  5203                           status	equ	0xFD8
  5204                           
  5205 ;; *************** function ___fldiv *****************
  5206 ;; Defined at:
  5207 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  b               4   23[BANK0 ] unsigned char 
  5210 ;;  a               4   27[BANK0 ] unsigned char 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  grs             4   42[BANK0 ] unsigned long 
  5213 ;;  rem             4   36[BANK0 ] unsigned long 
  5214 ;;  new_exp         2   40[BANK0 ] int 
  5215 ;;  aexp            1   47[BANK0 ] unsigned char 
  5216 ;;  bexp            1   46[BANK0 ] unsigned char 
  5217 ;;  sign            1   35[BANK0 ] unsigned char 
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  4   23[BANK0 ] unsigned char 
  5220 ;; Registers used:
  5221 ;;		wreg, status,2, status,0
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5227 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5228 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5229 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5230 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5231 ;;Total ram usage:       25 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:    4
  5234 ;; This function calls:
  5235 ;;		Nothing
  5236 ;; This function is called by:
  5237 ;;		_parallelo
  5238 ;;		_asin
  5239 ;;		_atan
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           	psect	text12
  5244  0031E4                     __ptext12:
  5245                           	opt stack 0
  5246  0031E4                     ___fldiv:
  5247                           	opt stack 22
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;incstack = 0
  5251  0031E4  0100               	movlb	0	; () banked
  5252  0031E6  517A               	movf	(___fldiv@b+3)& (0+255),w,b
  5253  0031E8  0B80               	andlw	128
  5254  0031EA  0100               	movlb	0	; () banked
  5255  0031EC  6F83               	movwf	___fldiv@sign& (0+255),b
  5256  0031EE  0100               	movlb	0	; () banked
  5257  0031F0  517A               	movf	(___fldiv@b+3)& (0+255),w,b
  5258  0031F2  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
  5259  0031F4  0100               	movlb	0	; () banked
  5260  0031F6  6F8E               	movwf	___fldiv@bexp& (0+255),b
  5261                           
  5262                           ; BSR set to: 0
  5263  0031F8  0100               	movlb	0	; () banked
  5264  0031FA  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
  5265  0031FC  D002               	goto	l5893
  5266                           
  5267                           ; BSR set to: 0
  5268  0031FE  0100               	movlb	0	; () banked
  5269  003200  818E               	bsf	___fldiv@bexp& (0+255),0,b
  5270  003202                     l5893:
  5271                           
  5272                           ; BSR set to: 0
  5273  003202  0100               	movlb	0	; () banked
  5274  003204  518E               	movf	___fldiv@bexp& (0+255),w,b
  5275  003206  0100               	movlb	0	; () banked
  5276  003208  B4D8               	btfsc	status,2,c
  5277  00320A  D012               	goto	l5903
  5278                           
  5279                           ; BSR set to: 0
  5280  00320C  0100               	movlb	0	; () banked
  5281  00320E  298E               	incf	___fldiv@bexp& (0+255),w,b
  5282  003210  A4D8               	btfss	status,2,c
  5283  003212  D009               	goto	l5899
  5284                           
  5285                           ; BSR set to: 0
  5286  003214  0E00               	movlw	0
  5287  003216  0100               	movlb	0	; () banked
  5288  003218  6F77               	movwf	___fldiv@b& (0+255),b
  5289  00321A  0E00               	movlw	0
  5290  00321C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5291  00321E  0E00               	movlw	0
  5292  003220  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5293  003222  0E00               	movlw	0
  5294  003224  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5295  003226                     l5899:
  5296                           
  5297                           ; BSR set to: 0
  5298  003226  0100               	movlb	0	; () banked
  5299  003228  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
  5300                           
  5301                           ; BSR set to: 0
  5302  00322A  0E00               	movlw	0
  5303  00322C  0100               	movlb	0	; () banked
  5304  00322E  D008               	goto	L6
  5305  003230                     l5903:
  5306                           
  5307                           ; BSR set to: 0
  5308  003230  0E00               	movlw	0
  5309  003232  0100               	movlb	0	; () banked
  5310  003234  6F77               	movwf	___fldiv@b& (0+255),b
  5311  003236  0E00               	movlw	0
  5312  003238  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5313  00323A  0E00               	movlw	0
  5314  00323C  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5315  00323E  0E00               	movlw	0
  5316  003240                     L6:
  5317  003240  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5318                           
  5319                           ; BSR set to: 0
  5320                           
  5321                           ; BSR set to: 0
  5322  003242  0100               	movlb	0	; () banked
  5323  003244  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  5324  003246  0B80               	andlw	128
  5325  003248  0100               	movlb	0	; () banked
  5326  00324A  1B83               	xorwf	___fldiv@sign& (0+255),f,b
  5327                           
  5328                           ; BSR set to: 0
  5329  00324C  0100               	movlb	0	; () banked
  5330  00324E  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  5331  003250  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
  5332  003252  0100               	movlb	0	; () banked
  5333  003254  6F8F               	movwf	___fldiv@aexp& (0+255),b
  5334                           
  5335                           ; BSR set to: 0
  5336  003256  0100               	movlb	0	; () banked
  5337  003258  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
  5338  00325A  D002               	goto	l5913
  5339                           
  5340                           ; BSR set to: 0
  5341  00325C  0100               	movlb	0	; () banked
  5342  00325E  818F               	bsf	___fldiv@aexp& (0+255),0,b
  5343  003260                     l5913:
  5344                           
  5345                           ; BSR set to: 0
  5346  003260  0100               	movlb	0	; () banked
  5347  003262  518F               	movf	___fldiv@aexp& (0+255),w,b
  5348  003264  0100               	movlb	0	; () banked
  5349  003266  B4D8               	btfsc	status,2,c
  5350  003268  D012               	goto	l5923
  5351                           
  5352                           ; BSR set to: 0
  5353  00326A  0100               	movlb	0	; () banked
  5354  00326C  298F               	incf	___fldiv@aexp& (0+255),w,b
  5355  00326E  A4D8               	btfss	status,2,c
  5356  003270  D009               	goto	l5919
  5357                           
  5358                           ; BSR set to: 0
  5359  003272  0E00               	movlw	0
  5360  003274  0100               	movlb	0	; () banked
  5361  003276  6F7B               	movwf	___fldiv@a& (0+255),b
  5362  003278  0E00               	movlw	0
  5363  00327A  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5364  00327C  0E00               	movlw	0
  5365  00327E  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5366  003280  0E00               	movlw	0
  5367  003282  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5368  003284                     l5919:
  5369                           
  5370                           ; BSR set to: 0
  5371  003284  0100               	movlb	0	; () banked
  5372  003286  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
  5373                           
  5374                           ; BSR set to: 0
  5375  003288  0E00               	movlw	0
  5376  00328A  0100               	movlb	0	; () banked
  5377  00328C  D008               	goto	L7
  5378  00328E                     l5923:
  5379                           
  5380                           ; BSR set to: 0
  5381  00328E  0E00               	movlw	0
  5382  003290  0100               	movlb	0	; () banked
  5383  003292  6F7B               	movwf	___fldiv@a& (0+255),b
  5384  003294  0E00               	movlw	0
  5385  003296  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5386  003298  0E00               	movlw	0
  5387  00329A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5388  00329C  0E00               	movlw	0
  5389  00329E                     L7:
  5390  00329E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5391                           
  5392                           ; BSR set to: 0
  5393                           
  5394                           ; BSR set to: 0
  5395  0032A0  0100               	movlb	0	; () banked
  5396  0032A2  517B               	movf	___fldiv@a& (0+255),w,b
  5397  0032A4  0100               	movlb	0	; () banked
  5398  0032A6  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
  5399  0032A8  0100               	movlb	0	; () banked
  5400  0032AA  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
  5401  0032AC  0100               	movlb	0	; () banked
  5402  0032AE  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
  5403  0032B0  A4D8               	btfss	status,2,c
  5404  0032B2  D017               	goto	l5935
  5405                           
  5406                           ; BSR set to: 0
  5407  0032B4  0E00               	movlw	0
  5408  0032B6  0100               	movlb	0	; () banked
  5409  0032B8  6F77               	movwf	___fldiv@b& (0+255),b
  5410  0032BA  0E00               	movlw	0
  5411  0032BC  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5412  0032BE  0E00               	movlw	0
  5413  0032C0  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5414  0032C2  0E00               	movlw	0
  5415  0032C4  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5416                           
  5417                           ; BSR set to: 0
  5418  0032C6  0100               	movlb	0	; () banked
  5419  0032C8  0E80               	movlw	128
  5420  0032CA  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
  5421  0032CC  0E7F               	movlw	127
  5422  0032CE  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
  5423                           
  5424                           ; BSR set to: 0
  5425  0032D0  C077  F077         	movff	___fldiv@b,?___fldiv
  5426  0032D4  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  5427  0032D8  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  5428  0032DC  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  5429                           
  5430                           ; BSR set to: 0
  5431  0032E0  0012               	return	
  5432  0032E2                     l5935:
  5433                           
  5434                           ; BSR set to: 0
  5435  0032E2  0100               	movlb	0	; () banked
  5436  0032E4  518E               	movf	___fldiv@bexp& (0+255),w,b
  5437  0032E6  0100               	movlb	0	; () banked
  5438  0032E8  A4D8               	btfss	status,2,c
  5439  0032EA  D012               	goto	l5943
  5440                           
  5441                           ; BSR set to: 0
  5442  0032EC  0E00               	movlw	0
  5443  0032EE  0100               	movlb	0	; () banked
  5444  0032F0  6F77               	movwf	___fldiv@b& (0+255),b
  5445  0032F2  0E00               	movlw	0
  5446  0032F4  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5447  0032F6  0E00               	movlw	0
  5448  0032F8  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5449  0032FA  0E00               	movlw	0
  5450  0032FC  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5451                           
  5452                           ; BSR set to: 0
  5453  0032FE  C077  F077         	movff	___fldiv@b,?___fldiv
  5454  003302  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  5455  003306  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  5456  00330A  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  5457                           
  5458                           ; BSR set to: 0
  5459  00330E  0012               	return	
  5460  003310                     l5943:
  5461                           
  5462                           ; BSR set to: 0
  5463  003310  0100               	movlb	0	; () banked
  5464  003312  518F               	movf	___fldiv@aexp& (0+255),w,b
  5465  003314  0100               	movlb	0	; () banked
  5466  003316  6F7F               	movwf	??___fldiv& (0+255),b
  5467  003318  6B80               	clrf	(??___fldiv+1)& (0+255),b
  5468  00331A  0100               	movlb	0	; () banked
  5469  00331C  1F7F               	comf	??___fldiv& (0+255),f,b
  5470  00331E  1F80               	comf	(??___fldiv+1)& (0+255),f,b
  5471  003320  4B7F               	infsnz	??___fldiv& (0+255),f,b
  5472  003322  2B80               	incf	(??___fldiv+1)& (0+255),f,b
  5473  003324  0100               	movlb	0	; () banked
  5474  003326  518E               	movf	___fldiv@bexp& (0+255),w,b
  5475  003328  0100               	movlb	0	; () banked
  5476  00332A  6F81               	movwf	(??___fldiv+2)& (0+255),b
  5477  00332C  6B82               	clrf	(??___fldiv+3)& (0+255),b
  5478  00332E  0100               	movlb	0	; () banked
  5479  003330  517F               	movf	??___fldiv& (0+255),w,b
  5480  003332  0100               	movlb	0	; () banked
  5481  003334  2781               	addwf	(??___fldiv+2)& (0+255),f,b
  5482  003336  0100               	movlb	0	; () banked
  5483  003338  5180               	movf	(??___fldiv+1)& (0+255),w,b
  5484  00333A  0100               	movlb	0	; () banked
  5485  00333C  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
  5486  00333E  0E7F               	movlw	127
  5487  003340  0100               	movlb	0	; () banked
  5488  003342  2581               	addwf	(??___fldiv+2)& (0+255),w,b
  5489  003344  0100               	movlb	0	; () banked
  5490  003346  6F88               	movwf	___fldiv@new_exp& (0+255),b
  5491  003348  0E00               	movlw	0
  5492  00334A  0100               	movlb	0	; () banked
  5493  00334C  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
  5494  00334E  0100               	movlb	0	; () banked
  5495  003350  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5496                           
  5497                           ; BSR set to: 0
  5498  003352  C077  F084         	movff	___fldiv@b,___fldiv@rem
  5499  003356  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
  5500  00335A  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
  5501  00335E  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
  5502                           
  5503                           ; BSR set to: 0
  5504  003362  0E00               	movlw	0
  5505  003364  0100               	movlb	0	; () banked
  5506  003366  6F77               	movwf	___fldiv@b& (0+255),b
  5507  003368  0E00               	movlw	0
  5508  00336A  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5509  00336C  0E00               	movlw	0
  5510  00336E  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5511  003370  0E00               	movlw	0
  5512  003372  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5513                           
  5514                           ; BSR set to: 0
  5515  003374  0E00               	movlw	0
  5516  003376  0100               	movlb	0	; () banked
  5517  003378  6F8A               	movwf	___fldiv@grs& (0+255),b
  5518  00337A  0E00               	movlw	0
  5519  00337C  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
  5520  00337E  0E00               	movlw	0
  5521  003380  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
  5522  003382  0E00               	movlw	0
  5523  003384  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
  5524                           
  5525                           ; BSR set to: 0
  5526  003386  0E00               	movlw	0
  5527  003388  0100               	movlb	0	; () banked
  5528  00338A  6F8F               	movwf	___fldiv@aexp& (0+255),b
  5529  00338C  D042               	goto	l1297
  5530  00338E                     l5953:
  5531                           
  5532                           ; BSR set to: 0
  5533  00338E  0100               	movlb	0	; () banked
  5534  003390  518F               	movf	___fldiv@aexp& (0+255),w,b
  5535  003392  0100               	movlb	0	; () banked
  5536  003394  B4D8               	btfsc	status,2,c
  5537  003396  D017               	goto	l5961
  5538                           
  5539                           ; BSR set to: 0
  5540  003398  0100               	movlb	0	; () banked
  5541  00339A  90D8               	bcf	status,0,c
  5542  00339C  3784               	rlcf	___fldiv@rem& (0+255),f,b
  5543  00339E  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  5544  0033A0  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  5545  0033A2  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  5546  0033A4  0100               	movlb	0	; () banked
  5547  0033A6  90D8               	bcf	status,0,c
  5548  0033A8  3777               	rlcf	___fldiv@b& (0+255),f,b
  5549  0033AA  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
  5550  0033AC  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
  5551  0033AE  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
  5552                           
  5553                           ; BSR set to: 0
  5554  0033B0  0100               	movlb	0	; () banked
  5555  0033B2  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5556  0033B4  D002               	goto	l1300
  5557                           
  5558                           ; BSR set to: 0
  5559  0033B6  0100               	movlb	0	; () banked
  5560  0033B8  8177               	bsf	___fldiv@b& (0+255),0,b
  5561  0033BA                     l1300:
  5562                           
  5563                           ; BSR set to: 0
  5564  0033BA  0100               	movlb	0	; () banked
  5565  0033BC  90D8               	bcf	status,0,c
  5566  0033BE  378A               	rlcf	___fldiv@grs& (0+255),f,b
  5567  0033C0  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  5568  0033C2  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  5569  0033C4  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  5570  0033C6                     l5961:
  5571                           
  5572                           ; BSR set to: 0
  5573  0033C6  0100               	movlb	0	; () banked
  5574  0033C8  517B               	movf	___fldiv@a& (0+255),w,b
  5575  0033CA  0100               	movlb	0	; () banked
  5576  0033CC  5D84               	subwf	___fldiv@rem& (0+255),w,b
  5577  0033CE  0100               	movlb	0	; () banked
  5578  0033D0  517C               	movf	(___fldiv@a+1)& (0+255),w,b
  5579  0033D2  0100               	movlb	0	; () banked
  5580  0033D4  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  5581  0033D6  0100               	movlb	0	; () banked
  5582  0033D8  517D               	movf	(___fldiv@a+2)& (0+255),w,b
  5583  0033DA  0100               	movlb	0	; () banked
  5584  0033DC  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  5585  0033DE  0100               	movlb	0	; () banked
  5586  0033E0  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  5587  0033E2  0100               	movlb	0	; () banked
  5588  0033E4  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  5589  0033E6  A0D8               	btfss	status,0,c
  5590  0033E8  D012               	goto	l5967
  5591                           
  5592                           ; BSR set to: 0
  5593  0033EA  0100               	movlb	0	; () banked
  5594  0033EC  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
  5595                           
  5596                           ; BSR set to: 0
  5597  0033EE  0100               	movlb	0	; () banked
  5598  0033F0  517B               	movf	___fldiv@a& (0+255),w,b
  5599  0033F2  0100               	movlb	0	; () banked
  5600  0033F4  5F84               	subwf	___fldiv@rem& (0+255),f,b
  5601  0033F6  0100               	movlb	0	; () banked
  5602  0033F8  517C               	movf	(___fldiv@a+1)& (0+255),w,b
  5603  0033FA  0100               	movlb	0	; () banked
  5604  0033FC  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  5605  0033FE  0100               	movlb	0	; () banked
  5606  003400  517D               	movf	(___fldiv@a+2)& (0+255),w,b
  5607  003402  0100               	movlb	0	; () banked
  5608  003404  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  5609  003406  0100               	movlb	0	; () banked
  5610  003408  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  5611  00340A  0100               	movlb	0	; () banked
  5612  00340C  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  5613  00340E                     l5967:
  5614                           
  5615                           ; BSR set to: 0
  5616  00340E  0100               	movlb	0	; () banked
  5617  003410  2B8F               	incf	___fldiv@aexp& (0+255),f,b
  5618  003412                     l1297:
  5619                           
  5620                           ; BSR set to: 0
  5621  003412  0E19               	movlw	25
  5622  003414  0100               	movlb	0	; () banked
  5623  003416  658F               	cpfsgt	___fldiv@aexp& (0+255),b
  5624  003418  D7BA               	goto	l5953
  5625                           
  5626                           ; BSR set to: 0
  5627                           
  5628                           ; BSR set to: 0
  5629  00341A  0100               	movlb	0	; () banked
  5630  00341C  5184               	movf	___fldiv@rem& (0+255),w,b
  5631  00341E  0100               	movlb	0	; () banked
  5632  003420  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  5633  003422  0100               	movlb	0	; () banked
  5634  003424  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  5635  003426  0100               	movlb	0	; () banked
  5636  003428  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  5637  00342A  B4D8               	btfsc	status,2,c
  5638  00342C  D018               	goto	l5979
  5639                           
  5640                           ; BSR set to: 0
  5641  00342E  0100               	movlb	0	; () banked
  5642  003430  818A               	bsf	___fldiv@grs& (0+255),0,b
  5643                           
  5644                           ; BSR set to: 0
  5645  003432  D015               	goto	l5979
  5646  003434                     l5973:
  5647                           
  5648                           ; BSR set to: 0
  5649  003434  0100               	movlb	0	; () banked
  5650  003436  90D8               	bcf	status,0,c
  5651  003438  3777               	rlcf	___fldiv@b& (0+255),f,b
  5652  00343A  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
  5653  00343C  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
  5654  00343E  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
  5655                           
  5656                           ; BSR set to: 0
  5657  003440  0100               	movlb	0	; () banked
  5658  003442  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5659  003444  D002               	goto	l1306
  5660                           
  5661                           ; BSR set to: 0
  5662  003446  0100               	movlb	0	; () banked
  5663  003448  8177               	bsf	___fldiv@b& (0+255),0,b
  5664  00344A                     l1306:
  5665                           
  5666                           ; BSR set to: 0
  5667  00344A  0100               	movlb	0	; () banked
  5668  00344C  90D8               	bcf	status,0,c
  5669  00344E  378A               	rlcf	___fldiv@grs& (0+255),f,b
  5670  003450  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  5671  003452  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  5672  003454  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  5673  003456  0100               	movlb	0	; () banked
  5674  003458  0788               	decf	___fldiv@new_exp& (0+255),f,b
  5675  00345A  A0D8               	btfss	status,0,c
  5676  00345C  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  5677  00345E                     l5979:
  5678                           
  5679                           ; BSR set to: 0
  5680  00345E  0100               	movlb	0	; () banked
  5681  003460  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
  5682  003462  D7E8               	goto	l5973
  5683                           
  5684                           ; BSR set to: 0
  5685                           
  5686                           ; BSR set to: 0
  5687  003464  0E00               	movlw	0
  5688  003466  0100               	movlb	0	; () banked
  5689  003468  6F8F               	movwf	___fldiv@aexp& (0+255),b
  5690                           
  5691                           ; BSR set to: 0
  5692  00346A  0100               	movlb	0	; () banked
  5693  00346C  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  5694  00346E  D024               	goto	l1308
  5695                           
  5696                           ; BSR set to: 0
  5697  003470  0EFF               	movlw	255
  5698  003472  0100               	movlb	0	; () banked
  5699  003474  158A               	andwf	___fldiv@grs& (0+255),w,b
  5700  003476  0100               	movlb	0	; () banked
  5701  003478  6F7F               	movwf	??___fldiv& (0+255),b
  5702  00347A  0EFF               	movlw	255
  5703  00347C  0100               	movlb	0	; () banked
  5704  00347E  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
  5705  003480  0100               	movlb	0	; () banked
  5706  003482  6F80               	movwf	(??___fldiv+1)& (0+255),b
  5707  003484  0EFF               	movlw	255
  5708  003486  0100               	movlb	0	; () banked
  5709  003488  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
  5710  00348A  0100               	movlb	0	; () banked
  5711  00348C  6F81               	movwf	(??___fldiv+2)& (0+255),b
  5712  00348E  0E7F               	movlw	127
  5713  003490  0100               	movlb	0	; () banked
  5714  003492  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
  5715  003494  0100               	movlb	0	; () banked
  5716  003496  6F82               	movwf	(??___fldiv+3)& (0+255),b
  5717  003498  0100               	movlb	0	; () banked
  5718  00349A  517F               	movf	??___fldiv& (0+255),w,b
  5719  00349C  0100               	movlb	0	; () banked
  5720  00349E  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
  5721  0034A0  0100               	movlb	0	; () banked
  5722  0034A2  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
  5723  0034A4  0100               	movlb	0	; () banked
  5724  0034A6  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
  5725  0034A8  A4D8               	btfss	status,2,c
  5726  0034AA  D003               	goto	l5989
  5727                           
  5728                           ; BSR set to: 0
  5729                           
  5730                           ; BSR set to: 0
  5731  0034AC  0100               	movlb	0	; () banked
  5732  0034AE  A177               	btfss	___fldiv@b& (0+255),0,b
  5733  0034B0  D003               	goto	l1308
  5734  0034B2                     l5989:
  5735                           
  5736                           ; BSR set to: 0
  5737  0034B2  0E01               	movlw	1
  5738  0034B4  0100               	movlb	0	; () banked
  5739  0034B6  6F8F               	movwf	___fldiv@aexp& (0+255),b
  5740  0034B8                     l1308:
  5741                           
  5742                           ; BSR set to: 0
  5743  0034B8  0100               	movlb	0	; () banked
  5744  0034BA  518F               	movf	___fldiv@aexp& (0+255),w,b
  5745  0034BC  0100               	movlb	0	; () banked
  5746  0034BE  B4D8               	btfsc	status,2,c
  5747  0034C0  D023               	goto	l5999
  5748                           
  5749                           ; BSR set to: 0
  5750  0034C2  0E01               	movlw	1
  5751  0034C4  0100               	movlb	0	; () banked
  5752  0034C6  2777               	addwf	___fldiv@b& (0+255),f,b
  5753  0034C8  0E00               	movlw	0
  5754  0034CA  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
  5755  0034CC  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
  5756  0034CE  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
  5757                           
  5758                           ; BSR set to: 0
  5759  0034D0  0100               	movlb	0	; () banked
  5760  0034D2  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
  5761  0034D4  D019               	goto	l5999
  5762                           
  5763                           ; BSR set to: 0
  5764  0034D6  C077  F07F         	movff	___fldiv@b,??___fldiv
  5765  0034DA  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
  5766  0034DE  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
  5767  0034E2  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
  5768  0034E6  0100               	movlb	0	; () banked
  5769  0034E8  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
  5770  0034EA  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
  5771  0034EC  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
  5772  0034EE  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
  5773  0034F0  337F               	rrcf	??___fldiv& (0+255),f,b
  5774  0034F2  C07F  F077         	movff	??___fldiv,___fldiv@b
  5775  0034F6  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
  5776  0034FA  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
  5777  0034FE  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
  5778                           
  5779                           ; BSR set to: 0
  5780  003502  0100               	movlb	0	; () banked
  5781  003504  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
  5782  003506  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  5783  003508                     l5999:
  5784                           
  5785                           ; BSR set to: 0
  5786  003508  0100               	movlb	0	; () banked
  5787  00350A  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  5788  00350C  D014               	goto	l6003
  5789  00350E  0100               	movlb	0	; () banked
  5790  003510  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  5791  003512  E104               	bnz	u7680
  5792  003514  0100               	movlb	0	; () banked
  5793  003516  2988               	incf	___fldiv@new_exp& (0+255),w,b
  5794  003518  A0D8               	btfss	status,0,c
  5795  00351A  D00D               	goto	l6003
  5796  00351C                     u7680:
  5797                           
  5798                           ; BSR set to: 0
  5799  00351C  0E00               	movlw	0
  5800  00351E  0100               	movlb	0	; () banked
  5801  003520  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5802  003522  6988               	setf	___fldiv@new_exp& (0+255),b
  5803  003524  0E00               	movlw	0
  5804  003526  0100               	movlb	0	; () banked
  5805  003528  6F77               	movwf	___fldiv@b& (0+255),b
  5806  00352A  0E00               	movlw	0
  5807  00352C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5808  00352E  0E00               	movlw	0
  5809  003530  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5810  003532  0E00               	movlw	0
  5811  003534  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5812  003536                     l6003:
  5813                           
  5814                           ; BSR set to: 0
  5815  003536  0100               	movlb	0	; () banked
  5816  003538  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  5817  00353A  D007               	goto	l6005
  5818  00353C  0100               	movlb	0	; () banked
  5819  00353E  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  5820  003540  E115               	bnz	l6007
  5821  003542  0100               	movlb	0	; () banked
  5822  003544  0588               	decf	___fldiv@new_exp& (0+255),w,b
  5823  003546  B0D8               	btfsc	status,0,c
  5824  003548  D011               	goto	l6007
  5825  00354A                     l6005:
  5826                           
  5827                           ; BSR set to: 0
  5828  00354A  0E00               	movlw	0
  5829  00354C  0100               	movlb	0	; () banked
  5830  00354E  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  5831  003550  0E00               	movlw	0
  5832  003552  6F88               	movwf	___fldiv@new_exp& (0+255),b
  5833  003554  0E00               	movlw	0
  5834  003556  0100               	movlb	0	; () banked
  5835  003558  6F77               	movwf	___fldiv@b& (0+255),b
  5836  00355A  0E00               	movlw	0
  5837  00355C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5838  00355E  0E00               	movlw	0
  5839  003560  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5840  003562  0E00               	movlw	0
  5841  003564  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5842  003566  0E00               	movlw	0
  5843  003568  0100               	movlb	0	; () banked
  5844  00356A  6F83               	movwf	___fldiv@sign& (0+255),b
  5845  00356C                     l6007:
  5846                           
  5847                           ; BSR set to: 0
  5848  00356C  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
  5849                           
  5850                           ; BSR set to: 0
  5851  003570  0100               	movlb	0	; () banked
  5852  003572  A18E               	btfss	___fldiv@bexp& (0+255),0,b
  5853  003574  D003               	goto	l6013
  5854                           
  5855                           ; BSR set to: 0
  5856  003576  0100               	movlb	0	; () banked
  5857  003578  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
  5858  00357A  D002               	goto	l6015
  5859  00357C                     l6013:
  5860                           
  5861                           ; BSR set to: 0
  5862  00357C  0100               	movlb	0	; () banked
  5863  00357E  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
  5864  003580                     l6015:
  5865                           
  5866                           ; BSR set to: 0
  5867  003580  0100               	movlb	0	; () banked
  5868  003582  90D8               	bcf	status,0,c
  5869  003584  318E               	rrcf	___fldiv@bexp& (0+255),w,b
  5870  003586  0100               	movlb	0	; () banked
  5871  003588  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5872                           
  5873                           ; BSR set to: 0
  5874  00358A  0100               	movlb	0	; () banked
  5875  00358C  5183               	movf	___fldiv@sign& (0+255),w,b
  5876  00358E  0100               	movlb	0	; () banked
  5877  003590  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
  5878                           
  5879                           ; BSR set to: 0
  5880  003592  C077  F077         	movff	___fldiv@b,?___fldiv
  5881  003596  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  5882  00359A  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  5883  00359E  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  5884  0035A2  0012               	return	
  5885  0035A4                     __end_of___fldiv:
  5886                           	opt stack 0
  5887                           tblptru	equ	0xFF8
  5888                           tblptrh	equ	0xFF7
  5889                           tblptrl	equ	0xFF6
  5890                           tablat	equ	0xFF5
  5891                           prodh	equ	0xFF4
  5892                           prodl	equ	0xFF3
  5893                           postinc0	equ	0xFEE
  5894                           wreg	equ	0xFE8
  5895                           postinc2	equ	0xFDE
  5896                           postdec2	equ	0xFDD
  5897                           status	equ	0xFD8
  5898                           
  5899 ;; *************** function _abs *****************
  5900 ;; Defined at:
  5901 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  5902 ;; Parameters:    Size  Location     Type
  5903 ;;  a               2   23[BANK0 ] int 
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;		None
  5906 ;; Return value:  Size  Location     Type
  5907 ;;                  2   23[BANK0 ] int 
  5908 ;; Registers used:
  5909 ;;		wreg, status,2, status,0
  5910 ;; Tracked objects:
  5911 ;;		On entry : 0/0
  5912 ;;		On exit  : 0/0
  5913 ;;		Unchanged: 0/0
  5914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5915 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5917 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5918 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5919 ;;Total ram usage:        4 bytes
  5920 ;; Hardware stack levels used:    1
  5921 ;; Hardware stack levels required when called:    4
  5922 ;; This function calls:
  5923 ;;		Nothing
  5924 ;; This function is called by:
  5925 ;;		_park_search
  5926 ;;		_parallelo
  5927 ;; This function uses a non-reentrant model
  5928 ;;
  5929                           
  5930                           	psect	text13
  5931  004F6E                     __ptext13:
  5932                           	opt stack 0
  5933  004F6E                     _abs:
  5934                           	opt stack 24
  5935                           
  5936                           ; BSR set to: 0
  5937                           ;incstack = 0
  5938  004F6E  0100               	movlb	0	; () banked
  5939  004F70  AF78               	btfss	(abs@a+1)& (0+255),7,b
  5940  004F72  D00E               	goto	l803
  5941                           
  5942                           ; BSR set to: 0
  5943  004F74  C077  F079         	movff	abs@a,??_abs
  5944  004F78  C078  F07A         	movff	abs@a+1,??_abs+1
  5945  004F7C  0100               	movlb	0	; () banked
  5946  004F7E  1F79               	comf	??_abs& (0+255),f,b
  5947  004F80  1F7A               	comf	(??_abs+1)& (0+255),f,b
  5948  004F82  4B79               	infsnz	??_abs& (0+255),f,b
  5949  004F84  2B7A               	incf	(??_abs+1)& (0+255),f,b
  5950  004F86  C079  F077         	movff	??_abs,?_abs
  5951  004F8A  C07A  F078         	movff	??_abs+1,?_abs+1
  5952  004F8E  0012               	return	
  5953  004F90                     l803:
  5954                           
  5955                           ; BSR set to: 0
  5956  004F90  C077  F077         	movff	abs@a,?_abs
  5957  004F94  C078  F078         	movff	abs@a+1,?_abs+1
  5958                           
  5959                           ; BSR set to: 0
  5960  004F98  0012               	return		;funcret
  5961  004F9A                     __end_of_abs:
  5962                           	opt stack 0
  5963                           tblptru	equ	0xFF8
  5964                           tblptrh	equ	0xFF7
  5965                           tblptrl	equ	0xFF6
  5966                           tablat	equ	0xFF5
  5967                           prodh	equ	0xFF4
  5968                           prodl	equ	0xFF3
  5969                           postinc0	equ	0xFEE
  5970                           wreg	equ	0xFE8
  5971                           postinc2	equ	0xFDE
  5972                           postdec2	equ	0xFDD
  5973                           status	equ	0xFD8
  5974                           
  5975 ;; *************** function ___xxtofl *****************
  5976 ;; Defined at:
  5977 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  5978 ;; Parameters:    Size  Location     Type
  5979 ;;  sign            1    wreg     unsigned char 
  5980 ;;  val             4   27[BANK0 ] long 
  5981 ;; Auto vars:     Size  Location     Type
  5982 ;;  sign            1   35[BANK0 ] unsigned char 
  5983 ;;  arg             4   37[BANK0 ] unsigned long 
  5984 ;;  exp             1   36[BANK0 ] unsigned char 
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  4   27[BANK0 ] unsigned char 
  5987 ;; Registers used:
  5988 ;;		wreg, status,2, status,0
  5989 ;; Tracked objects:
  5990 ;;		On entry : 0/0
  5991 ;;		On exit  : 0/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5994 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5995 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5996 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5997 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5998 ;;Total ram usage:       14 bytes
  5999 ;; Hardware stack levels used:    1
  6000 ;; Hardware stack levels required when called:    4
  6001 ;; This function calls:
  6002 ;;		Nothing
  6003 ;; This function is called by:
  6004 ;;		_park_search
  6005 ;;		_parallelo
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009                           	psect	text14
  6010  004118                     __ptext14:
  6011                           	opt stack 0
  6012  004118                     ___xxtofl:
  6013                           	opt stack 24
  6014                           
  6015                           ; BSR set to: 0
  6016                           ;incstack = 0
  6017                           ;___xxtofl@sign stored from wreg
  6018  004118  0100               	movlb	0	; () banked
  6019  00411A  6F83               	movwf	___xxtofl@sign& (0+255),b
  6020  00411C  0100               	movlb	0	; () banked
  6021  00411E  5183               	movf	___xxtofl@sign& (0+255),w,b
  6022  004120  0100               	movlb	0	; () banked
  6023  004122  B4D8               	btfsc	status,2,c
  6024  004124  D01E               	goto	l1369
  6025                           
  6026                           ; BSR set to: 0
  6027  004126  0100               	movlb	0	; () banked
  6028  004128  AF7E               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6029  00412A  D01B               	goto	l1369
  6030                           
  6031                           ; BSR set to: 0
  6032  00412C  C07B  F07F         	movff	___xxtofl@val,??___xxtofl
  6033  004130  C07C  F080         	movff	___xxtofl@val+1,??___xxtofl+1
  6034  004134  C07D  F081         	movff	___xxtofl@val+2,??___xxtofl+2
  6035  004138  C07E  F082         	movff	___xxtofl@val+3,??___xxtofl+3
  6036  00413C  0100               	movlb	0	; () banked
  6037  00413E  1F7F               	comf	??___xxtofl& (0+255),f,b
  6038  004140  1F80               	comf	(??___xxtofl+1)& (0+255),f,b
  6039  004142  1F81               	comf	(??___xxtofl+2)& (0+255),f,b
  6040  004144  1F82               	comf	(??___xxtofl+3)& (0+255),f,b
  6041  004146  2B7F               	incf	??___xxtofl& (0+255),f,b
  6042  004148  0E00               	movlw	0
  6043  00414A  2380               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6044  00414C  2381               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6045  00414E  2382               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6046  004150  C07F  F085         	movff	??___xxtofl,___xxtofl@arg
  6047  004154  C080  F086         	movff	??___xxtofl+1,___xxtofl@arg+1
  6048  004158  C081  F087         	movff	??___xxtofl+2,___xxtofl@arg+2
  6049  00415C  C082  F088         	movff	??___xxtofl+3,___xxtofl@arg+3
  6050  004160  D008               	goto	l4941
  6051  004162                     l1369:
  6052                           
  6053                           ; BSR set to: 0
  6054  004162  C07B  F085         	movff	___xxtofl@val,___xxtofl@arg
  6055  004166  C07C  F086         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6056  00416A  C07D  F087         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6057  00416E  C07E  F088         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6058  004172                     l4941:
  6059                           
  6060                           ; BSR set to: 0
  6061  004172  0100               	movlb	0	; () banked
  6062  004174  517B               	movf	___xxtofl@val& (0+255),w,b
  6063  004176  0100               	movlb	0	; () banked
  6064  004178  117C               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6065  00417A  0100               	movlb	0	; () banked
  6066  00417C  117D               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6067  00417E  0100               	movlb	0	; () banked
  6068  004180  117E               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6069  004182  A4D8               	btfss	status,2,c
  6070  004184  D00A               	goto	l4947
  6071                           
  6072                           ; BSR set to: 0
  6073  004186  0E00               	movlw	0
  6074  004188  0100               	movlb	0	; () banked
  6075  00418A  6F7B               	movwf	?___xxtofl& (0+255),b
  6076  00418C  0E00               	movlw	0
  6077  00418E  6F7C               	movwf	(?___xxtofl+1)& (0+255),b
  6078  004190  0E00               	movlw	0
  6079  004192  6F7D               	movwf	(?___xxtofl+2)& (0+255),b
  6080  004194  0E00               	movlw	0
  6081  004196  6F7E               	movwf	(?___xxtofl+3)& (0+255),b
  6082                           
  6083                           ; BSR set to: 0
  6084  004198  0012               	return	
  6085  00419A                     l4947:
  6086                           
  6087                           ; BSR set to: 0
  6088  00419A  0E96               	movlw	150
  6089  00419C  0100               	movlb	0	; () banked
  6090  00419E  6F84               	movwf	___xxtofl@exp& (0+255),b
  6091  0041A0  D008               	goto	l4951
  6092  0041A2                     l4949:
  6093                           
  6094                           ; BSR set to: 0
  6095  0041A2  0100               	movlb	0	; () banked
  6096  0041A4  2B84               	incf	___xxtofl@exp& (0+255),f,b
  6097  0041A6  0100               	movlb	0	; () banked
  6098  0041A8  90D8               	bcf	status,0,c
  6099  0041AA  3388               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6100  0041AC  3387               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6101  0041AE  3386               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6102  0041B0  3385               	rrcf	___xxtofl@arg& (0+255),f,b
  6103  0041B2                     l4951:
  6104                           
  6105                           ; BSR set to: 0
  6106  0041B2  0E00               	movlw	0
  6107  0041B4  0100               	movlb	0	; () banked
  6108  0041B6  1585               	andwf	___xxtofl@arg& (0+255),w,b
  6109  0041B8  0100               	movlb	0	; () banked
  6110  0041BA  6F7F               	movwf	??___xxtofl& (0+255),b
  6111  0041BC  0E00               	movlw	0
  6112  0041BE  0100               	movlb	0	; () banked
  6113  0041C0  1586               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6114  0041C2  0100               	movlb	0	; () banked
  6115  0041C4  6F80               	movwf	(??___xxtofl+1)& (0+255),b
  6116  0041C6  0E00               	movlw	0
  6117  0041C8  0100               	movlb	0	; () banked
  6118  0041CA  1587               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6119  0041CC  0100               	movlb	0	; () banked
  6120  0041CE  6F81               	movwf	(??___xxtofl+2)& (0+255),b
  6121  0041D0  0EFE               	movlw	254
  6122  0041D2  0100               	movlb	0	; () banked
  6123  0041D4  1588               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6124  0041D6  0100               	movlb	0	; () banked
  6125  0041D8  6F82               	movwf	(??___xxtofl+3)& (0+255),b
  6126  0041DA  0100               	movlb	0	; () banked
  6127  0041DC  517F               	movf	??___xxtofl& (0+255),w,b
  6128  0041DE  0100               	movlb	0	; () banked
  6129  0041E0  1180               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6130  0041E2  0100               	movlb	0	; () banked
  6131  0041E4  1181               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6132  0041E6  0100               	movlb	0	; () banked
  6133  0041E8  1182               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6134  0041EA  B4D8               	btfsc	status,2,c
  6135  0041EC  D010               	goto	l1376
  6136  0041EE  D7D9               	goto	l4949
  6137  0041F0                     l4953:
  6138                           
  6139                           ; BSR set to: 0
  6140  0041F0  0100               	movlb	0	; () banked
  6141  0041F2  2B84               	incf	___xxtofl@exp& (0+255),f,b
  6142                           
  6143                           ; BSR set to: 0
  6144  0041F4  0E01               	movlw	1
  6145  0041F6  0100               	movlb	0	; () banked
  6146  0041F8  2785               	addwf	___xxtofl@arg& (0+255),f,b
  6147  0041FA  0E00               	movlw	0
  6148  0041FC  2386               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6149  0041FE  2387               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6150  004200  2388               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6151                           
  6152                           ; BSR set to: 0
  6153  004202  0100               	movlb	0	; () banked
  6154  004204  90D8               	bcf	status,0,c
  6155  004206  3388               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6156  004208  3387               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6157  00420A  3386               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6158  00420C  3385               	rrcf	___xxtofl@arg& (0+255),f,b
  6159  00420E                     l1376:
  6160                           
  6161                           ; BSR set to: 0
  6162  00420E  0E00               	movlw	0
  6163  004210  0100               	movlb	0	; () banked
  6164  004212  1585               	andwf	___xxtofl@arg& (0+255),w,b
  6165  004214  0100               	movlb	0	; () banked
  6166  004216  6F7F               	movwf	??___xxtofl& (0+255),b
  6167  004218  0E00               	movlw	0
  6168  00421A  0100               	movlb	0	; () banked
  6169  00421C  1586               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6170  00421E  0100               	movlb	0	; () banked
  6171  004220  6F80               	movwf	(??___xxtofl+1)& (0+255),b
  6172  004222  0E00               	movlw	0
  6173  004224  0100               	movlb	0	; () banked
  6174  004226  1587               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6175  004228  0100               	movlb	0	; () banked
  6176  00422A  6F81               	movwf	(??___xxtofl+2)& (0+255),b
  6177  00422C  0EFF               	movlw	255
  6178  00422E  0100               	movlb	0	; () banked
  6179  004230  1588               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6180  004232  0100               	movlb	0	; () banked
  6181  004234  6F82               	movwf	(??___xxtofl+3)& (0+255),b
  6182  004236  0100               	movlb	0	; () banked
  6183  004238  517F               	movf	??___xxtofl& (0+255),w,b
  6184  00423A  0100               	movlb	0	; () banked
  6185  00423C  1180               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6186  00423E  0100               	movlb	0	; () banked
  6187  004240  1181               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6188  004242  0100               	movlb	0	; () banked
  6189  004244  1182               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6190  004246  B4D8               	btfsc	status,2,c
  6191  004248  D009               	goto	l4961
  6192  00424A  D7D2               	goto	l4953
  6193  00424C                     l4959:
  6194                           
  6195                           ; BSR set to: 0
  6196  00424C  0100               	movlb	0	; () banked
  6197  00424E  0784               	decf	___xxtofl@exp& (0+255),f,b
  6198  004250  0100               	movlb	0	; () banked
  6199  004252  90D8               	bcf	status,0,c
  6200  004254  3785               	rlcf	___xxtofl@arg& (0+255),f,b
  6201  004256  3786               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6202  004258  3787               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6203  00425A  3788               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6204  00425C                     l4961:
  6205                           
  6206                           ; BSR set to: 0
  6207  00425C  0100               	movlb	0	; () banked
  6208  00425E  BF87               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6209  004260  D004               	goto	l1383
  6210                           
  6211                           ; BSR set to: 0
  6212  004262  0E02               	movlw	2
  6213  004264  0100               	movlb	0	; () banked
  6214  004266  6184               	cpfslt	___xxtofl@exp& (0+255),b
  6215  004268  D7F1               	goto	l4959
  6216  00426A                     l1383:
  6217                           
  6218                           ; BSR set to: 0
  6219  00426A  0100               	movlb	0	; () banked
  6220  00426C  B184               	btfsc	___xxtofl@exp& (0+255),0,b
  6221  00426E  D009               	goto	l1384
  6222                           
  6223                           ; BSR set to: 0
  6224  004270  0EFF               	movlw	255
  6225  004272  0100               	movlb	0	; () banked
  6226  004274  1785               	andwf	___xxtofl@arg& (0+255),f,b
  6227  004276  0EFF               	movlw	255
  6228  004278  1786               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  6229  00427A  0E7F               	movlw	127
  6230  00427C  1787               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  6231  00427E  0EFF               	movlw	255
  6232  004280  1788               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  6233  004282                     l1384:
  6234                           
  6235                           ; BSR set to: 0
  6236  004282  0100               	movlb	0	; () banked
  6237  004284  90D8               	bcf	status,0,c
  6238  004286  3384               	rrcf	___xxtofl@exp& (0+255),f,b
  6239  004288  C084  F07F         	movff	___xxtofl@exp,??___xxtofl
  6240  00428C  0100               	movlb	0	; () banked
  6241  00428E  6B80               	clrf	(??___xxtofl+1)& (0+255),b
  6242  004290  6B81               	clrf	(??___xxtofl+2)& (0+255),b
  6243  004292  6B82               	clrf	(??___xxtofl+3)& (0+255),b
  6244  004294  C07F  F082         	movff	??___xxtofl,??___xxtofl+3
  6245  004298  0100               	movlb	0	; () banked
  6246  00429A  6B81               	clrf	(??___xxtofl+2)& (0+255),b
  6247  00429C  6B80               	clrf	(??___xxtofl+1)& (0+255),b
  6248  00429E  6B7F               	clrf	??___xxtofl& (0+255),b
  6249  0042A0  0100               	movlb	0	; () banked
  6250  0042A2  517F               	movf	??___xxtofl& (0+255),w,b
  6251  0042A4  0100               	movlb	0	; () banked
  6252  0042A6  1385               	iorwf	___xxtofl@arg& (0+255),f,b
  6253  0042A8  0100               	movlb	0	; () banked
  6254  0042AA  5180               	movf	(??___xxtofl+1)& (0+255),w,b
  6255  0042AC  0100               	movlb	0	; () banked
  6256  0042AE  1386               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6257  0042B0  0100               	movlb	0	; () banked
  6258  0042B2  5181               	movf	(??___xxtofl+2)& (0+255),w,b
  6259  0042B4  0100               	movlb	0	; () banked
  6260  0042B6  1387               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6261  0042B8  0100               	movlb	0	; () banked
  6262  0042BA  5182               	movf	(??___xxtofl+3)& (0+255),w,b
  6263  0042BC  0100               	movlb	0	; () banked
  6264  0042BE  1388               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6265                           
  6266                           ; BSR set to: 0
  6267  0042C0  0100               	movlb	0	; () banked
  6268  0042C2  5183               	movf	___xxtofl@sign& (0+255),w,b
  6269  0042C4  0100               	movlb	0	; () banked
  6270  0042C6  B4D8               	btfsc	status,2,c
  6271  0042C8  D005               	goto	l4973
  6272                           
  6273                           ; BSR set to: 0
  6274  0042CA  0100               	movlb	0	; () banked
  6275  0042CC  AF7E               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6276  0042CE  D002               	goto	l4973
  6277                           
  6278                           ; BSR set to: 0
  6279  0042D0  0100               	movlb	0	; () banked
  6280  0042D2  8F88               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6281  0042D4                     l4973:
  6282                           
  6283                           ; BSR set to: 0
  6284  0042D4  C085  F07B         	movff	___xxtofl@arg,?___xxtofl
  6285  0042D8  C086  F07C         	movff	___xxtofl@arg+1,?___xxtofl+1
  6286  0042DC  C087  F07D         	movff	___xxtofl@arg+2,?___xxtofl+2
  6287  0042E0  C088  F07E         	movff	___xxtofl@arg+3,?___xxtofl+3
  6288  0042E4  0012               	return	
  6289  0042E6                     __end_of___xxtofl:
  6290                           	opt stack 0
  6291                           tblptru	equ	0xFF8
  6292                           tblptrh	equ	0xFF7
  6293                           tblptrl	equ	0xFF6
  6294                           tablat	equ	0xFF5
  6295                           prodh	equ	0xFF4
  6296                           prodl	equ	0xFF3
  6297                           postinc0	equ	0xFEE
  6298                           wreg	equ	0xFE8
  6299                           postinc2	equ	0xFDE
  6300                           postdec2	equ	0xFDD
  6301                           status	equ	0xFD8
  6302                           
  6303 ;; *************** function ___fltol *****************
  6304 ;; Defined at:
  6305 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;  f1              4   23[BANK0 ] unsigned char 
  6308 ;; Auto vars:     Size  Location     Type
  6309 ;;  exp1            1   32[BANK0 ] unsigned char 
  6310 ;;  sign1           1   31[BANK0 ] unsigned char 
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  4   23[BANK0 ] long 
  6313 ;; Registers used:
  6314 ;;		wreg, status,2, status,0
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6320 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6321 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6322 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6323 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6324 ;;Total ram usage:       10 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; Hardware stack levels required when called:    4
  6327 ;; This function calls:
  6328 ;;		Nothing
  6329 ;; This function is called by:
  6330 ;;		_parallelo
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text15
  6335  0049EA                     __ptext15:
  6336                           	opt stack 0
  6337  0049EA                     ___fltol:
  6338                           	opt stack 24
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;incstack = 0
  6342  0049EA  0100               	movlb	0	; () banked
  6343  0049EC  3579               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6344  0049EE  357A               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6345  0049F0  0100               	movlb	0	; () banked
  6346  0049F2  6F80               	movwf	___fltol@exp1& (0+255),b
  6347  0049F4  0100               	movlb	0	; () banked
  6348  0049F6  5180               	movf	___fltol@exp1& (0+255),w,b
  6349  0049F8  A4D8               	btfss	status,2,c
  6350  0049FA  D00A               	goto	l4897
  6351                           
  6352                           ; BSR set to: 0
  6353  0049FC  0E00               	movlw	0
  6354  0049FE  0100               	movlb	0	; () banked
  6355  004A00  6F77               	movwf	?___fltol& (0+255),b
  6356  004A02  0E00               	movlw	0
  6357  004A04  6F78               	movwf	(?___fltol+1)& (0+255),b
  6358  004A06  0E00               	movlw	0
  6359  004A08  6F79               	movwf	(?___fltol+2)& (0+255),b
  6360  004A0A  0E00               	movlw	0
  6361  004A0C  6F7A               	movwf	(?___fltol+3)& (0+255),b
  6362                           
  6363                           ; BSR set to: 0
  6364  004A0E  0012               	return	
  6365  004A10                     l4897:
  6366                           
  6367                           ; BSR set to: 0
  6368  004A10  C077  F07B         	movff	___fltol@f1,??___fltol
  6369  004A14  C078  F07C         	movff	___fltol@f1+1,??___fltol+1
  6370  004A18  C079  F07D         	movff	___fltol@f1+2,??___fltol+2
  6371  004A1C  C07A  F07E         	movff	___fltol@f1+3,??___fltol+3
  6372  004A20  0E20               	movlw	32
  6373  004A22  D006               	goto	u6010
  6374  004A24                     u6015:
  6375  004A24  0100               	movlb	0	; () banked
  6376  004A26  90D8               	bcf	status,0,c
  6377  004A28  337E               	rrcf	(??___fltol+3)& (0+255),f,b
  6378  004A2A  337D               	rrcf	(??___fltol+2)& (0+255),f,b
  6379  004A2C  337C               	rrcf	(??___fltol+1)& (0+255),f,b
  6380  004A2E  337B               	rrcf	??___fltol& (0+255),f,b
  6381  004A30                     u6010:
  6382  004A30  2EE8               	decfsz	wreg,f,c
  6383  004A32  D7F8               	goto	u6015
  6384  004A34  0100               	movlb	0	; () banked
  6385  004A36  517B               	movf	??___fltol& (0+255),w,b
  6386  004A38  0100               	movlb	0	; () banked
  6387  004A3A  6F7F               	movwf	___fltol@sign1& (0+255),b
  6388                           
  6389                           ; BSR set to: 0
  6390  004A3C  0100               	movlb	0	; () banked
  6391  004A3E  8F79               	bsf	(___fltol@f1+2)& (0+255),7,b
  6392                           
  6393                           ; BSR set to: 0
  6394  004A40  0EFF               	movlw	255
  6395  004A42  0100               	movlb	0	; () banked
  6396  004A44  1777               	andwf	___fltol@f1& (0+255),f,b
  6397  004A46  0EFF               	movlw	255
  6398  004A48  1778               	andwf	(___fltol@f1+1)& (0+255),f,b
  6399  004A4A  0EFF               	movlw	255
  6400  004A4C  1779               	andwf	(___fltol@f1+2)& (0+255),f,b
  6401  004A4E  0E00               	movlw	0
  6402  004A50  177A               	andwf	(___fltol@f1+3)& (0+255),f,b
  6403                           
  6404                           ; BSR set to: 0
  6405  004A52  0E96               	movlw	150
  6406  004A54  0100               	movlb	0	; () banked
  6407  004A56  5F80               	subwf	___fltol@exp1& (0+255),f,b
  6408                           
  6409                           ; BSR set to: 0
  6410  004A58  0100               	movlb	0	; () banked
  6411  004A5A  AF80               	btfss	___fltol@exp1& (0+255),7,b
  6412  004A5C  D01A               	goto	l4917
  6413                           
  6414                           ; BSR set to: 0
  6415  004A5E  0100               	movlb	0	; () banked
  6416  004A60  5180               	movf	___fltol@exp1& (0+255),w,b
  6417  004A62  0A80               	xorlw	128
  6418  004A64  0F97               	addlw	151
  6419  004A66  B0D8               	btfsc	status,0,c
  6420  004A68  D00A               	goto	l4913
  6421                           
  6422                           ; BSR set to: 0
  6423  004A6A  0E00               	movlw	0
  6424  004A6C  0100               	movlb	0	; () banked
  6425  004A6E  6F77               	movwf	?___fltol& (0+255),b
  6426  004A70  0E00               	movlw	0
  6427  004A72  6F78               	movwf	(?___fltol+1)& (0+255),b
  6428  004A74  0E00               	movlw	0
  6429  004A76  6F79               	movwf	(?___fltol+2)& (0+255),b
  6430  004A78  0E00               	movlw	0
  6431  004A7A  6F7A               	movwf	(?___fltol+3)& (0+255),b
  6432                           
  6433                           ; BSR set to: 0
  6434  004A7C  0012               	return	
  6435  004A7E                     l4913:
  6436                           
  6437                           ; BSR set to: 0
  6438  004A7E  0100               	movlb	0	; () banked
  6439  004A80  90D8               	bcf	status,0,c
  6440  004A82  337A               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6441  004A84  3379               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6442  004A86  3378               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6443  004A88  3377               	rrcf	___fltol@f1& (0+255),f,b
  6444                           
  6445                           ; BSR set to: 0
  6446  004A8A  0100               	movlb	0	; () banked
  6447  004A8C  3F80               	incfsz	___fltol@exp1& (0+255),f,b
  6448  004A8E  D7F7               	goto	l4913
  6449                           
  6450                           ; BSR set to: 0
  6451  004A90  D01B               	goto	l4927
  6452  004A92                     l4917:
  6453                           
  6454                           ; BSR set to: 0
  6455  004A92  0E1F               	movlw	31
  6456  004A94  0100               	movlb	0	; () banked
  6457  004A96  6580               	cpfsgt	___fltol@exp1& (0+255),b
  6458  004A98  D012               	goto	l4925
  6459                           
  6460                           ; BSR set to: 0
  6461  004A9A  0E00               	movlw	0
  6462  004A9C  0100               	movlb	0	; () banked
  6463  004A9E  6F77               	movwf	?___fltol& (0+255),b
  6464  004AA0  0E00               	movlw	0
  6465  004AA2  6F78               	movwf	(?___fltol+1)& (0+255),b
  6466  004AA4  0E00               	movlw	0
  6467  004AA6  6F79               	movwf	(?___fltol+2)& (0+255),b
  6468  004AA8  0E00               	movlw	0
  6469  004AAA  6F7A               	movwf	(?___fltol+3)& (0+255),b
  6470                           
  6471                           ; BSR set to: 0
  6472  004AAC  0012               	return	
  6473  004AAE                     l4923:
  6474                           
  6475                           ; BSR set to: 0
  6476  004AAE  0100               	movlb	0	; () banked
  6477  004AB0  90D8               	bcf	status,0,c
  6478  004AB2  3777               	rlcf	___fltol@f1& (0+255),f,b
  6479  004AB4  3778               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6480  004AB6  3779               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6481  004AB8  377A               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6482  004ABA  0100               	movlb	0	; () banked
  6483  004ABC  0780               	decf	___fltol@exp1& (0+255),f,b
  6484  004ABE                     l4925:
  6485                           
  6486                           ; BSR set to: 0
  6487  004ABE  0100               	movlb	0	; () banked
  6488  004AC0  5180               	movf	___fltol@exp1& (0+255),w,b
  6489  004AC2  0100               	movlb	0	; () banked
  6490  004AC4  A4D8               	btfss	status,2,c
  6491  004AC6  D7F3               	goto	l4923
  6492  004AC8                     l4927:
  6493                           
  6494                           ; BSR set to: 0
  6495  004AC8  0100               	movlb	0	; () banked
  6496  004ACA  517F               	movf	___fltol@sign1& (0+255),w,b
  6497  004ACC  0100               	movlb	0	; () banked
  6498  004ACE  B4D8               	btfsc	status,2,c
  6499  004AD0  D009               	goto	l4931
  6500                           
  6501                           ; BSR set to: 0
  6502  004AD2  0100               	movlb	0	; () banked
  6503  004AD4  1F7A               	comf	(___fltol@f1+3)& (0+255),f,b
  6504  004AD6  1F79               	comf	(___fltol@f1+2)& (0+255),f,b
  6505  004AD8  1F78               	comf	(___fltol@f1+1)& (0+255),f,b
  6506  004ADA  6D77               	negf	___fltol@f1& (0+255),b
  6507  004ADC  0E00               	movlw	0
  6508  004ADE  2378               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6509  004AE0  2379               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6510  004AE2  237A               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6511  004AE4                     l4931:
  6512                           
  6513                           ; BSR set to: 0
  6514  004AE4  C077  F077         	movff	___fltol@f1,?___fltol
  6515  004AE8  C078  F078         	movff	___fltol@f1+1,?___fltol+1
  6516  004AEC  C079  F079         	movff	___fltol@f1+2,?___fltol+2
  6517  004AF0  C07A  F07A         	movff	___fltol@f1+3,?___fltol+3
  6518  004AF4  0012               	return	
  6519  004AF6                     __end_of___fltol:
  6520                           	opt stack 0
  6521                           tblptru	equ	0xFF8
  6522                           tblptrh	equ	0xFF7
  6523                           tblptrl	equ	0xFF6
  6524                           tablat	equ	0xFF5
  6525                           prodh	equ	0xFF4
  6526                           prodl	equ	0xFF3
  6527                           postinc0	equ	0xFEE
  6528                           wreg	equ	0xFE8
  6529                           postinc2	equ	0xFDE
  6530                           postdec2	equ	0xFDD
  6531                           status	equ	0xFD8
  6532                           
  6533 ;; *************** function _park_routine *****************
  6534 ;; Defined at:
  6535 ;;		line 222 in file "parcheggio.c"
  6536 ;; Parameters:    Size  Location     Type
  6537 ;;		None
  6538 ;; Auto vars:     Size  Location     Type
  6539 ;;  data_test       8   39[BANK0 ] unsigned char [8]
  6540 ;; Return value:  Size  Location     Type
  6541 ;;		None               void
  6542 ;; Registers used:
  6543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6544 ;; Tracked objects:
  6545 ;;		On entry : 0/0
  6546 ;;		On exit  : 0/0
  6547 ;;		Unchanged: 0/0
  6548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6550 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6552 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6553 ;;Total ram usage:        8 bytes
  6554 ;; Hardware stack levels used:    1
  6555 ;; Hardware stack levels required when called:    7
  6556 ;; This function calls:
  6557 ;;		_CANsendMessage
  6558 ;;		_can_send
  6559 ;;		_delay_s
  6560 ;; This function is called by:
  6561 ;;		_main
  6562 ;; This function uses a non-reentrant model
  6563 ;;
  6564                           
  6565                           	psect	text16
  6566  004BD6                     __ptext16:
  6567                           	opt stack 0
  6568  004BD6                     _park_routine:
  6569                           	opt stack 23
  6570                           
  6571                           ;parcheggio.c: 223: while ((PORTBbits.RB5 == 1) && (activation == 1)&&(start_operation =
      +                          =1)) {
  6572                           
  6573                           ; BSR set to: 0
  6574                           ;incstack = 0
  6575  004BD6  D061               	goto	l707
  6576  004BD8                     l5313:
  6577                           
  6578                           ;parcheggio.c: 224: set_speed = 0;
  6579  004BD8  0E00               	movlw	0
  6580  004BDA  0100               	movlb	0	; () banked
  6581  004BDC  6FE6               	movwf	(_set_speed+1)& (0+255),b
  6582  004BDE  0E00               	movlw	0
  6583  004BE0  6FE5               	movwf	_set_speed& (0+255),b
  6584                           
  6585                           ;parcheggio.c: 225: data_brake[0] = 0;
  6586  004BE2  0E00               	movlw	0
  6587  004BE4  0101               	movlb	1	; () banked
  6588  004BE6  6F37               	movwf	_data_brake& (0+255),b
  6589                           
  6590                           ;parcheggio.c: 226: data_steering[0] = 90;
  6591  004BE8  0E5A               	movlw	90
  6592  004BEA  0101               	movlb	1	; () banked
  6593  004BEC  6F4F               	movwf	_data_steering& (0+255),b
  6594                           
  6595                           ; BSR set to: 1
  6596                           ;parcheggio.c: 227: can_send();
  6597  004BEE  ECD1  F023         	call	_can_send	;wreg free
  6598                           
  6599                           ;parcheggio.c: 228: delay_s(1);
  6600  004BF2  0E01               	movlw	1
  6601  004BF4  ECCD  F027         	call	_delay_s
  6602                           
  6603                           ;parcheggio.c: 229: set_speed = 50;
  6604  004BF8  0E00               	movlw	0
  6605  004BFA  0100               	movlb	0	; () banked
  6606  004BFC  6FE6               	movwf	(_set_speed+1)& (0+255),b
  6607  004BFE  0E32               	movlw	50
  6608  004C00  6FE5               	movwf	_set_speed& (0+255),b
  6609                           
  6610                           ; BSR set to: 0
  6611                           ;parcheggio.c: 230: dir = 0;
  6612  004C02  9444               	bcf	_dir/(0+8),_dir& (0+7),c
  6613                           
  6614                           ; BSR set to: 0
  6615                           ;parcheggio.c: 231: data_steering[0] = 90;
  6616  004C04  0E5A               	movlw	90
  6617  004C06  0101               	movlb	1	; () banked
  6618  004C08  6F4F               	movwf	_data_steering& (0+255),b
  6619                           
  6620                           ; BSR set to: 1
  6621                           ;parcheggio.c: 232: unsigned char data_test[8];
  6622                           ;parcheggio.c: 233: data_test[0] = 50;
  6623  004C0A  0E32               	movlw	50
  6624  004C0C  0100               	movlb	0	; () banked
  6625  004C0E  6F87               	movwf	park_routine@data_test& (0+255),b
  6626                           
  6627                           ; BSR set to: 0
  6628                           ;parcheggio.c: 236: can_send();
  6629  004C10  ECD1  F023         	call	_can_send	;wreg free
  6630  004C14                     l5329:
  6631  004C14  5027               	movf	_sensor_distance+3,w,c	;volatile
  6632  004C16  E104               	bnz	l5331
  6633  004C18  0E1E               	movlw	30
  6634  004C1A  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  6635  004C1C  A0D8               	btfss	status,0,c
  6636  004C1E  D7FA               	goto	l5329
  6637  004C20                     l5331:
  6638                           
  6639                           ;parcheggio.c: 238: set_speed = 0;
  6640  004C20  0E00               	movlw	0
  6641  004C22  0100               	movlb	0	; () banked
  6642  004C24  6FE6               	movwf	(_set_speed+1)& (0+255),b
  6643  004C26  0E00               	movlw	0
  6644  004C28  6FE5               	movwf	_set_speed& (0+255),b
  6645                           
  6646                           ;parcheggio.c: 239: data_steering[0] = 90;
  6647  004C2A  0E5A               	movlw	90
  6648  004C2C  0101               	movlb	1	; () banked
  6649  004C2E  6F4F               	movwf	_data_steering& (0+255),b
  6650                           
  6651                           ; BSR set to: 1
  6652                           ;parcheggio.c: 240: can_send();
  6653  004C30  ECD1  F023         	call	_can_send	;wreg free
  6654                           
  6655                           ;parcheggio.c: 241: delay_s(1);
  6656  004C34  0E01               	movlw	1
  6657  004C36  ECCD  F027         	call	_delay_s
  6658                           
  6659                           ;parcheggio.c: 242: set_speed = 50;
  6660  004C3A  0E00               	movlw	0
  6661  004C3C  0100               	movlb	0	; () banked
  6662  004C3E  6FE6               	movwf	(_set_speed+1)& (0+255),b
  6663  004C40  0E32               	movlw	50
  6664  004C42  6FE5               	movwf	_set_speed& (0+255),b
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;parcheggio.c: 243: dir = 0;
  6668  004C44  9444               	bcf	_dir/(0+8),_dir& (0+7),c
  6669                           
  6670                           ; BSR set to: 0
  6671                           ;parcheggio.c: 244: data_steering[0] = 180;
  6672  004C46  0EB4               	movlw	180
  6673  004C48  0101               	movlb	1	; () banked
  6674  004C4A  6F4F               	movwf	_data_steering& (0+255),b
  6675                           
  6676                           ; BSR set to: 1
  6677                           ;parcheggio.c: 245: data_test[0] = 70;
  6678  004C4C  0E46               	movlw	70
  6679  004C4E  0100               	movlb	0	; () banked
  6680  004C50  6F87               	movwf	park_routine@data_test& (0+255),b
  6681                           
  6682                           ; BSR set to: 0
  6683                           ;parcheggio.c: 246: asd = 1;
  6684  004C52  8244               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  6685                           
  6686                           ; BSR set to: 0
  6687                           ;parcheggio.c: 247: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  6688  004C54  0E0D               	movlw	13
  6689  004C56  0100               	movlb	0	; () banked
  6690  004C58  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  6691  004C5A  0E00               	movlw	0
  6692  004C5C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  6693  004C5E  0E00               	movlw	0
  6694  004C60  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  6695  004C62  0E00               	movlw	0
  6696  004C64  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  6697  004C66  0E87               	movlw	low park_routine@data_test
  6698  004C68  0100               	movlb	0	; () banked
  6699  004C6A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  6700  004C6C  0E00               	movlw	high park_routine@data_test
  6701  004C6E  0100               	movlb	0	; () banked
  6702  004C70  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  6703  004C72  0E08               	movlw	8
  6704  004C74  0100               	movlb	0	; () banked
  6705  004C76  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  6706  004C78  0EBC               	movlw	188
  6707  004C7A  0100               	movlb	0	; () banked
  6708  004C7C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  6709  004C7E  EC1A  F00C         	call	_CANsendMessage	;wreg free
  6710                           
  6711                           ;parcheggio.c: 248: can_send();
  6712  004C82  ECD1  F023         	call	_can_send	;wreg free
  6713  004C86                     l712:
  6714  004C86  B244               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  6715  004C88  D7FE               	goto	l712
  6716                           
  6717                           ;parcheggio.c: 250: set_speed = 0;
  6718  004C8A  0E00               	movlw	0
  6719  004C8C  0100               	movlb	0	; () banked
  6720  004C8E  6FE6               	movwf	(_set_speed+1)& (0+255),b
  6721  004C90  0E00               	movlw	0
  6722  004C92  6FE5               	movwf	_set_speed& (0+255),b
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;parcheggio.c: 251: can_send();
  6726  004C94  ECD1  F023         	call	_can_send	;wreg free
  6727  004C98  D7FF               	goto	l716
  6728  004C9A                     l707:
  6729  004C9A  AA81               	btfss	3969,5,c	;volatile
  6730  004C9C  0012               	return	
  6731  004C9E  A044               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  6732  004CA0  0012               	return	
  6733  004CA2  A045               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  6734  004CA4  0012               	return	
  6735  004CA6  D798               	goto	l5313
  6736  004CA8                     __end_of_park_routine:
  6737                           	opt stack 0
  6738                           tblptru	equ	0xFF8
  6739                           tblptrh	equ	0xFF7
  6740                           tblptrl	equ	0xFF6
  6741                           tablat	equ	0xFF5
  6742                           prodh	equ	0xFF4
  6743                           prodl	equ	0xFF3
  6744                           postinc0	equ	0xFEE
  6745                           wreg	equ	0xFE8
  6746                           postinc2	equ	0xFDE
  6747                           postdec2	equ	0xFDD
  6748                           status	equ	0xFD8
  6749                           
  6750 ;; *************** function _delay_s *****************
  6751 ;; Defined at:
  6752 ;;		line 102 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  6753 ;; Parameters:    Size  Location     Type
  6754 ;;  value_s         1    wreg     unsigned char 
  6755 ;; Auto vars:     Size  Location     Type
  6756 ;;  value_s         1   31[BANK0 ] unsigned char 
  6757 ;;  repeat_loop     1   32[BANK0 ] unsigned char 
  6758 ;; Return value:  Size  Location     Type
  6759 ;;		None               void
  6760 ;; Registers used:
  6761 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6762 ;; Tracked objects:
  6763 ;;		On entry : 0/0
  6764 ;;		On exit  : 0/0
  6765 ;;		Unchanged: 0/0
  6766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6768 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6770 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6771 ;;Total ram usage:        2 bytes
  6772 ;; Hardware stack levels used:    1
  6773 ;; Hardware stack levels required when called:    6
  6774 ;; This function calls:
  6775 ;;		_delay_ms
  6776 ;; This function is called by:
  6777 ;;		_park_routine
  6778 ;; This function uses a non-reentrant model
  6779 ;;
  6780                           
  6781                           	psect	text17
  6782  004F9A                     __ptext17:
  6783                           	opt stack 0
  6784  004F9A                     _delay_s:
  6785                           	opt stack 23
  6786                           
  6787                           ;incstack = 0
  6788                           ;delay_s@value_s stored from wreg
  6789  004F9A  0100               	movlb	0	; () banked
  6790  004F9C  6F7F               	movwf	delay_s@value_s& (0+255),b
  6791                           
  6792                           ;src\delay.c: 104: unsigned char repeat_loop;
  6793                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
  6794  004F9E  0E00               	movlw	0
  6795  004FA0  0100               	movlb	0	; () banked
  6796  004FA2  6F80               	movwf	delay_s@repeat_loop& (0+255),b
  6797  004FA4  D009               	goto	l5035
  6798  004FA6                     l5031:
  6799                           
  6800                           ; BSR set to: 0
  6801                           ;src\delay.c: 107: delay_ms (1000);
  6802  004FA6  0E03               	movlw	3
  6803  004FA8  0100               	movlb	0	; () banked
  6804  004FAA  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  6805  004FAC  0EE8               	movlw	232
  6806  004FAE  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  6807  004FB0  EC63  F027         	call	_delay_ms	;wreg free
  6808  004FB4  0100               	movlb	0	; () banked
  6809  004FB6  2B80               	incf	delay_s@repeat_loop& (0+255),f,b
  6810  004FB8                     l5035:
  6811                           
  6812                           ; BSR set to: 0
  6813  004FB8  0100               	movlb	0	; () banked
  6814  004FBA  517F               	movf	delay_s@value_s& (0+255),w,b
  6815  004FBC  0100               	movlb	0	; () banked
  6816  004FBE  5D80               	subwf	delay_s@repeat_loop& (0+255),w,b
  6817  004FC0  B0D8               	btfsc	status,0,c
  6818  004FC2  0012               	return	
  6819  004FC4  D7F0               	goto	l5031
  6820  004FC6                     __end_of_delay_s:
  6821                           	opt stack 0
  6822                           tblptru	equ	0xFF8
  6823                           tblptrh	equ	0xFF7
  6824                           tblptrl	equ	0xFF6
  6825                           tablat	equ	0xFF5
  6826                           prodh	equ	0xFF4
  6827                           prodl	equ	0xFF3
  6828                           postinc0	equ	0xFEE
  6829                           wreg	equ	0xFE8
  6830                           postinc2	equ	0xFDE
  6831                           postdec2	equ	0xFDD
  6832                           status	equ	0xFD8
  6833                           
  6834 ;; *************** function _delay_ms *****************
  6835 ;; Defined at:
  6836 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0/src\delay.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;  value_ms        2   29[BANK0 ] unsigned int 
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;		None
  6841 ;; Return value:  Size  Location     Type
  6842 ;;		None               void
  6843 ;; Registers used:
  6844 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6850 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6853 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6854 ;;Total ram usage:        2 bytes
  6855 ;; Hardware stack levels used:    1
  6856 ;; Hardware stack levels required when called:    5
  6857 ;; This function calls:
  6858 ;;		___wmul
  6859 ;; This function is called by:
  6860 ;;		_delay_s
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           	psect	text18
  6865  004EC6                     __ptext18:
  6866                           	opt stack 0
  6867  004EC6                     _delay_ms:
  6868                           	opt stack 23
  6869                           
  6870                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  6871                           
  6872                           ; BSR set to: 0
  6873                           ;incstack = 0
  6874  004EC6  C0E7  F077         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  6875  004ECA  0100               	movlb	0	; () banked
  6876  004ECC  6B78               	clrf	(___wmul@multiplier+1)& (0+255),b
  6877  004ECE  C07D  F079         	movff	delay_ms@value_ms,___wmul@multiplicand
  6878  004ED2  C07E  F07A         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  6879  004ED6  EC9C  F027         	call	___wmul	;wreg free
  6880  004EDA  C077  F0E1         	movff	?___wmul,_clock_counter_reference	;volatile
  6881  004EDE  C078  F0E2         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  6882                           
  6883                           ;src\delay.c: 75: while (clock_counter_reference) {
  6884  004EE2  D007               	goto	l563
  6885  004EE4                     l4815:
  6886                           
  6887                           ;src\delay.c: 85: _delay(240);
  6888  004EE4  0E50               	movlw	80
  6889  004EE6                     u8217:
  6890  004EE6  2EE8               	decfsz	wreg,f,c
  6891  004EE8  D7FE               	goto	u8217
  6892                           
  6893                           ;src\delay.c: 88: clock_counter_reference--;
  6894  004EEA  0100               	movlb	0	; () banked
  6895  004EEC  07E1               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  6896  004EEE  A0D8               	btfss	status,0,c
  6897  004EF0  07E2               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  6898  004EF2                     l563:
  6899  004EF2  0100               	movlb	0	; () banked
  6900  004EF4  51E1               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  6901  004EF6  0100               	movlb	0	; () banked
  6902  004EF8  11E2               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  6903  004EFA  B4D8               	btfsc	status,2,c
  6904  004EFC  0012               	return	
  6905  004EFE  D7F2               	goto	l4815
  6906  004F00                     __end_of_delay_ms:
  6907                           	opt stack 0
  6908                           tblptru	equ	0xFF8
  6909                           tblptrh	equ	0xFF7
  6910                           tblptrl	equ	0xFF6
  6911                           tablat	equ	0xFF5
  6912                           prodh	equ	0xFF4
  6913                           prodl	equ	0xFF3
  6914                           postinc0	equ	0xFEE
  6915                           wreg	equ	0xFE8
  6916                           postinc2	equ	0xFDE
  6917                           postdec2	equ	0xFDD
  6918                           status	equ	0xFD8
  6919                           
  6920 ;; *************** function ___wmul *****************
  6921 ;; Defined at:
  6922 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  6923 ;; Parameters:    Size  Location     Type
  6924 ;;  multiplier      2   23[BANK0 ] unsigned int 
  6925 ;;  multiplicand    2   25[BANK0 ] unsigned int 
  6926 ;; Auto vars:     Size  Location     Type
  6927 ;;  product         2   27[BANK0 ] unsigned int 
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  2   23[BANK0 ] unsigned int 
  6930 ;; Registers used:
  6931 ;;		wreg, status,2, status,0, prodl, prodh
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6937 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6938 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6940 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6941 ;;Total ram usage:        6 bytes
  6942 ;; Hardware stack levels used:    1
  6943 ;; Hardware stack levels required when called:    4
  6944 ;; This function calls:
  6945 ;;		Nothing
  6946 ;; This function is called by:
  6947 ;;		_delay_ms
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           
  6951                           	psect	text19
  6952  004F38                     __ptext19:
  6953                           	opt stack 0
  6954  004F38                     ___wmul:
  6955                           	opt stack 23
  6956                           
  6957                           ; BSR set to: 0
  6958                           ;incstack = 0
  6959  004F38  0100               	movlb	0	; () banked
  6960  004F3A  5177               	movf	___wmul@multiplier& (0+255),w,b
  6961  004F3C  0100               	movlb	0	; () banked
  6962  004F3E  0379               	mulwf	___wmul@multiplicand& (0+255),b
  6963  004F40  CFF3 F07B          	movff	prodl,___wmul@product
  6964  004F44  CFF4 F07C          	movff	prodh,___wmul@product+1
  6965  004F48  0100               	movlb	0	; () banked
  6966  004F4A  5177               	movf	___wmul@multiplier& (0+255),w,b
  6967  004F4C  0100               	movlb	0	; () banked
  6968  004F4E  037A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  6969  004F50  50F3               	movf	prodl,w,c
  6970  004F52  0100               	movlb	0	; () banked
  6971  004F54  277C               	addwf	(___wmul@product+1)& (0+255),f,b
  6972  004F56  0100               	movlb	0	; () banked
  6973  004F58  5178               	movf	(___wmul@multiplier+1)& (0+255),w,b
  6974  004F5A  0100               	movlb	0	; () banked
  6975  004F5C  0379               	mulwf	___wmul@multiplicand& (0+255),b
  6976  004F5E  50F3               	movf	prodl,w,c
  6977  004F60  0100               	movlb	0	; () banked
  6978  004F62  277C               	addwf	(___wmul@product+1)& (0+255),f,b
  6979                           
  6980                           ; BSR set to: 0
  6981  004F64  C07B  F077         	movff	___wmul@product,?___wmul
  6982  004F68  C07C  F078         	movff	___wmul@product+1,?___wmul+1
  6983  004F6C  0012               	return	
  6984  004F6E                     __end_of___wmul:
  6985                           	opt stack 0
  6986                           tblptru	equ	0xFF8
  6987                           tblptrh	equ	0xFF7
  6988                           tblptrl	equ	0xFF6
  6989                           tablat	equ	0xFF5
  6990                           prodh	equ	0xFF4
  6991                           prodl	equ	0xFF3
  6992                           postinc0	equ	0xFEE
  6993                           wreg	equ	0xFE8
  6994                           postinc2	equ	0xFDE
  6995                           postdec2	equ	0xFDD
  6996                           status	equ	0xFD8
  6997                           
  6998 ;; *************** function _can_send *****************
  6999 ;; Defined at:
  7000 ;;		line 256 in file "parcheggio.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;		None
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;  data_correct    0   39[BANK0 ] unsigned char [0]
  7005 ;; Return value:  Size  Location     Type
  7006 ;;		None               void
  7007 ;; Registers used:
  7008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/0
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7018 ;;Total ram usage:        0 bytes
  7019 ;; Hardware stack levels used:    1
  7020 ;; Hardware stack levels required when called:    5
  7021 ;; This function calls:
  7022 ;;		_CANisTxReady
  7023 ;;		_CANsendMessage
  7024 ;; This function is called by:
  7025 ;;		_park_routine
  7026 ;;		_parallelo
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           	psect	text20
  7031  0047A2                     __ptext20:
  7032                           	opt stack 0
  7033  0047A2                     _can_send:
  7034                           	opt stack 23
  7035                           
  7036                           ;parcheggio.c: 257: if (PORTBbits.RB5 == 1) {
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;incstack = 0
  7040  0047A2  AA81               	btfss	3969,5,c	;volatile
  7041  0047A4  D060               	goto	l4845
  7042  0047A6                     l4827:
  7043  0047A6  ECE3  F027         	call	_CANisTxReady	;wreg free
  7044  0047AA  06E8               	decf	wreg,f,c
  7045  0047AC  A4D8               	btfss	status,2,c
  7046  0047AE  D7FB               	goto	l4827
  7047                           
  7048                           ;parcheggio.c: 259: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  7049  0047B0  0E05               	movlw	5
  7050  0047B2  0100               	movlb	0	; () banked
  7051  0047B4  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  7052  0047B6  0E00               	movlw	0
  7053  0047B8  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  7054  0047BA  0E00               	movlw	0
  7055  0047BC  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  7056  0047BE  0E00               	movlw	0
  7057  0047C0  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  7058  0047C2  0E4F               	movlw	low _data_steering
  7059  0047C4  0100               	movlb	0	; () banked
  7060  0047C6  6F7B               	movwf	CANsendMessage@data& (0+255),b
  7061  0047C8  0E01               	movlw	high _data_steering
  7062  0047CA  0100               	movlb	0	; () banked
  7063  0047CC  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  7064  0047CE  0E08               	movlw	8
  7065  0047D0  0100               	movlb	0	; () banked
  7066  0047D2  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  7067  0047D4  0EBC               	movlw	188
  7068  0047D6  0100               	movlb	0	; () banked
  7069  0047D8  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  7070  0047DA  EC1A  F00C         	call	_CANsendMessage	;wreg free
  7071                           
  7072                           ;parcheggio.c: 260: data_speed[0] = set_speed;
  7073  0047DE  C0E5  F147         	movff	_set_speed,_data_speed
  7074                           
  7075                           ;parcheggio.c: 261: data_speed[1] = (set_speed >> 8);
  7076  0047E2  0100               	movlb	0	; () banked
  7077  0047E4  51E6               	movf	(_set_speed+1)& (0+255),w,b
  7078  0047E6  0101               	movlb	1	; () banked
  7079  0047E8  6F48               	movwf	(_data_speed+1)& (0+255),b
  7080                           
  7081                           ; BSR set to: 1
  7082                           ;parcheggio.c: 262: data_speed[2] = dir;
  7083  0047EA  0E00               	movlw	0
  7084  0047EC  B444               	btfsc	_dir/(0+8),_dir& (0+7),c
  7085  0047EE  0E01               	movlw	1
  7086  0047F0  0101               	movlb	1	; () banked
  7087  0047F2  6F49               	movwf	(_data_speed+2)& (0+255),b
  7088  0047F4                     l4837:
  7089  0047F4  ECE3  F027         	call	_CANisTxReady	;wreg free
  7090  0047F8  06E8               	decf	wreg,f,c
  7091  0047FA  A4D8               	btfss	status,2,c
  7092  0047FC  D7FB               	goto	l4837
  7093                           
  7094                           ;parcheggio.c: 264: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  7095  0047FE  0E03               	movlw	3
  7096  004800  0100               	movlb	0	; () banked
  7097  004802  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  7098  004804  0E00               	movlw	0
  7099  004806  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  7100  004808  0E00               	movlw	0
  7101  00480A  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  7102  00480C  0E00               	movlw	0
  7103  00480E  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  7104  004810  0E47               	movlw	low _data_speed
  7105  004812  0100               	movlb	0	; () banked
  7106  004814  6F7B               	movwf	CANsendMessage@data& (0+255),b
  7107  004816  0E01               	movlw	high _data_speed
  7108  004818  0100               	movlb	0	; () banked
  7109  00481A  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  7110  00481C  0E08               	movlw	8
  7111  00481E  0100               	movlb	0	; () banked
  7112  004820  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  7113  004822  0EBC               	movlw	188
  7114  004824  0100               	movlb	0	; () banked
  7115  004826  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  7116  004828  EC1A  F00C         	call	_CANsendMessage	;wreg free
  7117  00482C                     l4841:
  7118  00482C  ECE3  F027         	call	_CANisTxReady	;wreg free
  7119  004830  06E8               	decf	wreg,f,c
  7120  004832  A4D8               	btfss	status,2,c
  7121  004834  D7FB               	goto	l4841
  7122                           
  7123                           ;parcheggio.c: 266: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  7124  004836  0E04               	movlw	4
  7125  004838  0100               	movlb	0	; () banked
  7126  00483A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  7127  00483C  0E00               	movlw	0
  7128  00483E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  7129  004840  0E00               	movlw	0
  7130  004842  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  7131  004844  0E00               	movlw	0
  7132  004846  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  7133  004848  0E37               	movlw	low _data_brake
  7134  00484A  0100               	movlb	0	; () banked
  7135  00484C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  7136  00484E  0E01               	movlw	high _data_brake
  7137  004850  0100               	movlb	0	; () banked
  7138  004852  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  7139  004854  0E08               	movlw	8
  7140  004856  0100               	movlb	0	; () banked
  7141  004858  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  7142  00485A  0EBC               	movlw	188
  7143  00485C  0100               	movlb	0	; () banked
  7144  00485E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  7145  004860  EC1A  F00C         	call	_CANsendMessage	;wreg free
  7146                           
  7147                           ;parcheggio.c: 267: } else {
  7148  004864  0012               	return	
  7149  004866                     l4845:
  7150                           
  7151                           ;parcheggio.c: 268: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  7152  004866  0E0E               	movlw	14
  7153  004868  0100               	movlb	0	; () banked
  7154  00486A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  7155  00486C  0E00               	movlw	0
  7156  00486E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  7157  004870  0E00               	movlw	0
  7158  004872  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  7159  004874  0E00               	movlw	0
  7160  004876  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  7161  004878  0E3F               	movlw	low _data_correction
  7162  00487A  0100               	movlb	0	; () banked
  7163  00487C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  7164  00487E  0E01               	movlw	high _data_correction
  7165  004880  0100               	movlb	0	; () banked
  7166  004882  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  7167  004884  0E08               	movlw	8
  7168  004886  0100               	movlb	0	; () banked
  7169  004888  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  7170  00488A  0EBC               	movlw	188
  7171  00488C  0100               	movlb	0	; () banked
  7172  00488E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  7173  004890  EC1A  F00C         	call	_CANsendMessage	;wreg free
  7174                           
  7175                           ;parcheggio.c: 269: unsigned char data_correction1[];
  7176                           ;parcheggio.c: 270: data_correction1[0] = data_correction[0];
  7177  004894  EE20  F087         	lfsr	2,can_send@data_correction1
  7178  004898  C13F  FFDF         	movff	_data_correction,indf2
  7179                           
  7180                           ;parcheggio.c: 271: data_correction1[1] = 0;
  7181  00489C  0E00               	movlw	0
  7182  00489E  CFE8 F088          	movff	wreg,can_send@data_correction1+1
  7183                           
  7184                           ;parcheggio.c: 272: CANsendMessage(0xAA, data_correction1, 8, CAN_CONFIG_STD_MSG & CAN_N
      +                          ORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  7185  0048A2  0EAA               	movlw	170
  7186  0048A4  0100               	movlb	0	; () banked
  7187  0048A6  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  7188  0048A8  0E00               	movlw	0
  7189  0048AA  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  7190  0048AC  0E00               	movlw	0
  7191  0048AE  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  7192  0048B0  0E00               	movlw	0
  7193  0048B2  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  7194  0048B4  0E87               	movlw	low can_send@data_correction1
  7195  0048B6  0100               	movlb	0	; () banked
  7196  0048B8  6F7B               	movwf	CANsendMessage@data& (0+255),b
  7197  0048BA  0E00               	movlw	high can_send@data_correction1
  7198  0048BC  0100               	movlb	0	; () banked
  7199  0048BE  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  7200  0048C0  0E08               	movlw	8
  7201  0048C2  0100               	movlb	0	; () banked
  7202  0048C4  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  7203  0048C6  0EBC               	movlw	188
  7204  0048C8  0100               	movlb	0	; () banked
  7205  0048CA  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  7206  0048CC  EC1A  F00C         	call	_CANsendMessage	;wreg free
  7207  0048D0  0012               	return	
  7208  0048D2                     __end_of_can_send:
  7209                           	opt stack 0
  7210                           tblptru	equ	0xFF8
  7211                           tblptrh	equ	0xFF7
  7212                           tblptrl	equ	0xFF6
  7213                           tablat	equ	0xFF5
  7214                           prodh	equ	0xFF4
  7215                           prodl	equ	0xFF3
  7216                           postinc0	equ	0xFEE
  7217                           wreg	equ	0xFE8
  7218                           indf2	equ	0xFDF
  7219                           postinc2	equ	0xFDE
  7220                           postdec2	equ	0xFDD
  7221                           status	equ	0xFD8
  7222                           
  7223 ;; *************** function _CANsendMessage *****************
  7224 ;; Defined at:
  7225 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  7226 ;; Parameters:    Size  Location     Type
  7227 ;;  identifier      4   23[BANK0 ] unsigned long 
  7228 ;;  data            2   27[BANK0 ] PTR unsigned char 
  7229 ;;		 -> can_send@data_correction1(0), data_correction(8), data_speed(8), park_routine@data_test(8), 
  7230 ;;		 -> data_steering(8), data_brake(8), data(8), 
  7231 ;;  dataLength      1   29[BANK0 ] unsigned char 
  7232 ;;  flags           1   30[BANK0 ] enum E16335
  7233 ;; Auto vars:     Size  Location     Type
  7234 ;;  tamp            4   35[BANK0 ] unsigned long 
  7235 ;; Return value:  Size  Location     Type
  7236 ;;		None               void
  7237 ;; Registers used:
  7238 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7244 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7245 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7246 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7247 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7248 ;;Total ram usage:       16 bytes
  7249 ;; Hardware stack levels used:    1
  7250 ;; Hardware stack levels required when called:    4
  7251 ;; This function calls:
  7252 ;;		Nothing
  7253 ;; This function is called by:
  7254 ;;		_park_search
  7255 ;;		_park_routine
  7256 ;;		_can_send
  7257 ;; This function uses a non-reentrant model
  7258 ;;
  7259                           
  7260                           	psect	text21
  7261  001834                     __ptext21:
  7262                           	opt stack 0
  7263  001834                     _CANsendMessage:
  7264                           	opt stack 23
  7265                           
  7266                           ;inc\CANlib.h: 297: unsigned long tamp;
  7267                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
  7268                           
  7269                           ;incstack = 0
  7270  001834  010F               	movlb	15	; () banked
  7271  001836  B740               	btfsc	64,3,b	;volatile
  7272  001838  D13F               	goto	l357
  7273                           
  7274                           ; BSR set to: 15
  7275                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
  7276  00183A  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  7277                           
  7278                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
  7279  00183E  0100               	movlb	0	; () banked
  7280  001840  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  7281  001842  D003               	goto	l358
  7282                           
  7283                           ; BSR set to: 0
  7284                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
  7285  001844  010F               	movlb	15	; () banked
  7286  001846  8D45               	bsf	69,6,b	;volatile
  7287  001848  D002               	goto	l359
  7288  00184A                     l358:
  7289                           
  7290                           ; BSR set to: 0
  7291                           ;inc\CANlib.h: 303: else
  7292                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
  7293  00184A  010F               	movlb	15	; () banked
  7294  00184C  9D45               	bcf	69,6,b	;volatile
  7295  00184E                     l359:
  7296                           
  7297                           ; BSR set to: 15
  7298                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
  7299  00184E  0100               	movlb	0	; () banked
  7300  001850  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  7301  001852  D079               	goto	l360
  7302                           
  7303                           ; BSR set to: 0
  7304                           ;inc\CANlib.h: 307: {
  7305                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
  7306  001854  0100               	movlb	0	; () banked
  7307  001856  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  7308  001858  0100               	movlb	0	; () banked
  7309  00185A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7310  00185C  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7311  00185E  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7312  001860  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7313                           
  7314                           ; BSR set to: 0
  7315                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
  7316  001862  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
  7320  001866  0E00               	movlw	0
  7321  001868  0100               	movlb	0	; () banked
  7322  00186A  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  7323  00186C  0100               	movlb	0	; () banked
  7324  00186E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7325  001870  0EFF               	movlw	255
  7326  001872  0100               	movlb	0	; () banked
  7327  001874  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  7328  001876  0100               	movlb	0	; () banked
  7329  001878  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  7330  00187A  0E00               	movlw	0
  7331  00187C  0100               	movlb	0	; () banked
  7332  00187E  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  7333  001880  0100               	movlb	0	; () banked
  7334  001882  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  7335  001884  0E00               	movlw	0
  7336  001886  0100               	movlb	0	; () banked
  7337  001888  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  7338  00188A  0100               	movlb	0	; () banked
  7339  00188C  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  7340                           
  7341                           ; BSR set to: 0
  7342                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
  7343  00188E  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  7344  001892  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  7345  001896  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  7346  00189A  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  7347  00189E  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  7348  0018A2  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  7349  0018A6  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  7350  0018AA  0100               	movlb	0	; () banked
  7351  0018AC  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  7352  0018AE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7353  0018B2  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7354  0018B6  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7355  0018BA  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
  7359  0018BE  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  7360                           
  7361                           ; BSR set to: 0
  7362                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
  7363  0018C2  0E00               	movlw	0
  7364  0018C4  010F               	movlb	15	; () banked
  7365  0018C6  6F42               	movwf	66,b	;volatile
  7366                           
  7367                           ; BSR set to: 15
  7368                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
  7369  0018C8  010F               	movlb	15	; () banked
  7370  0018CA  8742               	bsf	66,3,b	;volatile
  7371                           
  7372                           ; BSR set to: 15
  7373                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
  7374  0018CC  0100               	movlb	0	; () banked
  7375  0018CE  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  7376  0018D0  D002               	goto	l361
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
  7380  0018D2  010F               	movlb	15	; () banked
  7381  0018D4  8142               	bsf	66,0,b	;volatile
  7382  0018D6                     l361:
  7383                           
  7384                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
  7385  0018D6  0100               	movlb	0	; () banked
  7386  0018D8  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  7387  0018DA  D002               	goto	l362
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
  7391  0018DC  010F               	movlb	15	; () banked
  7392  0018DE  8342               	bsf	66,1,b	;volatile
  7393  0018E0                     l362:
  7394                           
  7395                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
  7396  0018E0  0100               	movlb	0	; () banked
  7397  0018E2  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  7398  0018E4  D002               	goto	l363
  7399                           
  7400                           ; BSR set to: 0
  7401                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
  7402  0018E6  010F               	movlb	15	; () banked
  7403  0018E8  8B42               	bsf	66,5,b	;volatile
  7404  0018EA                     l363:
  7405                           
  7406                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
  7407  0018EA  0100               	movlb	0	; () banked
  7408  0018EC  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  7409  0018EE  D002               	goto	l364
  7410                           
  7411                           ; BSR set to: 0
  7412                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
  7413  0018F0  010F               	movlb	15	; () banked
  7414  0018F2  8D42               	bsf	66,6,b	;volatile
  7415  0018F4                     l364:
  7416                           
  7417                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
  7418  0018F4  0100               	movlb	0	; () banked
  7419  0018F6  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  7420  0018F8  D002               	goto	l4057
  7421                           
  7422                           ; BSR set to: 0
  7423                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
  7424  0018FA  010F               	movlb	15	; () banked
  7425  0018FC  8F42               	bsf	66,7,b	;volatile
  7426  0018FE                     l4057:
  7427                           
  7428                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
  7429  0018FE  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  7430  001902  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7431  001906  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7432  00190A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7433  00190E  0E16               	movlw	22
  7434  001910  D006               	goto	u4430
  7435  001912                     u4435:
  7436  001912  0100               	movlb	0	; () banked
  7437  001914  90D8               	bcf	status,0,c
  7438  001916  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  7439  001918  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  7440  00191A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  7441  00191C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  7442  00191E                     u4430:
  7443  00191E  2EE8               	decfsz	wreg,f,c
  7444  001920  D7F8               	goto	u4435
  7445  001922  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7446  001926  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7447  00192A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7448  00192E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7449                           
  7450                           ; BSR set to: 0
  7451                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
  7452  001932  0100               	movlb	0	; () banked
  7453  001934  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  7454  001936  0100               	movlb	0	; () banked
  7455  001938  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7456  00193A  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7457  00193C  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7458  00193E  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
  7462  001940  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  7463                           
  7464                           ;inc\CANlib.h: 333: }
  7465  001944  D059               	goto	l4077
  7466  001946                     l360:
  7467                           
  7468                           ; BSR set to: 0
  7469                           ;inc\CANlib.h: 335: else
  7470                           ;inc\CANlib.h: 337: {
  7471                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
  7472  001946  010F               	movlb	15	; () banked
  7473  001948  9742               	bcf	66,3,b	;volatile
  7474                           
  7475                           ; BSR set to: 15
  7476                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
  7477  00194A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  7478  00194E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7479  001952  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7480  001956  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7481  00195A  0E04               	movlw	4
  7482  00195C  D006               	goto	u4440
  7483  00195E                     u4445:
  7484  00195E  0100               	movlb	0	; () banked
  7485  001960  90D8               	bcf	status,0,c
  7486  001962  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  7487  001964  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  7488  001966  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  7489  001968  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  7490  00196A                     u4440:
  7491  00196A  2EE8               	decfsz	wreg,f,c
  7492  00196C  D7F8               	goto	u4445
  7493  00196E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7494  001972  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7495  001976  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7496  00197A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
  7500  00197E  0100               	movlb	0	; () banked
  7501  001980  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  7502  001982  0100               	movlb	0	; () banked
  7503  001984  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7504  001986  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7505  001988  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7506  00198A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7507                           
  7508                           ; BSR set to: 0
  7509                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
  7510  00198C  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  7511                           
  7512                           ; BSR set to: 0
  7513                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
  7514  001990  0E07               	movlw	7
  7515  001992  0100               	movlb	0	; () banked
  7516  001994  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  7517  001996  0100               	movlb	0	; () banked
  7518  001998  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7519  00199A  0E00               	movlw	0
  7520  00199C  0100               	movlb	0	; () banked
  7521  00199E  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  7522  0019A0  0100               	movlb	0	; () banked
  7523  0019A2  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  7524  0019A4  0E00               	movlw	0
  7525  0019A6  0100               	movlb	0	; () banked
  7526  0019A8  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  7527  0019AA  0100               	movlb	0	; () banked
  7528  0019AC  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  7529  0019AE  0E00               	movlw	0
  7530  0019B0  0100               	movlb	0	; () banked
  7531  0019B2  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  7532  0019B4  0100               	movlb	0	; () banked
  7533  0019B6  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  7534                           
  7535                           ; BSR set to: 0
  7536                           ;inc\CANlib.h: 345: tamp = tamp << 5;
  7537  0019B8  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  7538  0019BC  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  7539  0019C0  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  7540  0019C4  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  7541  0019C8  0E05               	movlw	5
  7542  0019CA                     u4455:
  7543  0019CA  90D8               	bcf	status,0,c
  7544  0019CC  0100               	movlb	0	; () banked
  7545  0019CE  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  7546  0019D0  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  7547  0019D2  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  7548  0019D4  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  7549  0019D6  2EE8               	decfsz	wreg,f,c
  7550  0019D8  D7F8               	goto	u4455
  7551  0019DA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7552  0019DE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7553  0019E2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7554  0019E6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7555                           
  7556                           ; BSR set to: 0
  7557                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
  7558  0019EA  010F               	movlb	15	; () banked
  7559  0019EC  5142               	movf	66,w,b	;volatile
  7560  0019EE  0B1F               	andlw	31
  7561  0019F0  010F               	movlb	15	; () banked
  7562  0019F2  6F42               	movwf	66,b	;volatile
  7563                           
  7564                           ; BSR set to: 15
  7565                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
  7566  0019F4  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  7567  0019F8                     l4077:
  7568                           
  7569                           ;inc\CANlib.h: 348: }
  7570                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
  7571  0019F8  0100               	movlb	0	; () banked
  7572  0019FA  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  7573  0019FC  D003               	goto	l367
  7574                           
  7575                           ; BSR set to: 0
  7576                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
  7577  0019FE  010F               	movlb	15	; () banked
  7578  001A00  8140               	bsf	64,0,b	;volatile
  7579  001A02  D002               	goto	l368
  7580  001A04                     l367:
  7581                           
  7582                           ; BSR set to: 0
  7583                           ;inc\CANlib.h: 352: else
  7584                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
  7585  001A04  010F               	movlb	15	; () banked
  7586  001A06  9140               	bcf	64,0,b	;volatile
  7587  001A08                     l368:
  7588                           
  7589                           ; BSR set to: 15
  7590                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
  7591  001A08  0100               	movlb	0	; () banked
  7592  001A0A  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  7593  001A0C  D003               	goto	l369
  7594                           
  7595                           ; BSR set to: 0
  7596                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
  7597  001A0E  010F               	movlb	15	; () banked
  7598  001A10  8340               	bsf	64,1,b	;volatile
  7599  001A12  D002               	goto	l4083
  7600  001A14                     l369:
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;inc\CANlib.h: 356: else
  7604                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
  7605  001A14  010F               	movlb	15	; () banked
  7606  001A16  9340               	bcf	64,1,b	;volatile
  7607  001A18                     l4083:
  7608                           
  7609                           ; BSR set to: 15
  7610                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
  7611  001A18  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  7612  001A1C  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  7613  001A20  50DF               	movf	indf2,w,c
  7614  001A22  010F               	movlb	15	; () banked
  7615  001A24  6F46               	movwf	70,b	;volatile
  7616                           
  7617                           ; BSR set to: 15
  7618                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
  7619  001A26  0100               	movlb	0	; () banked
  7620  001A28  EE20 F001          	lfsr	2,1
  7621  001A2C  517B               	movf	CANsendMessage@data& (0+255),w,b
  7622  001A2E  26D9               	addwf	fsr2l,f,c
  7623  001A30  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7624  001A32  22DA               	addwfc	fsr2h,f,c
  7625  001A34  50DF               	movf	indf2,w,c
  7626  001A36  010F               	movlb	15	; () banked
  7627  001A38  6F47               	movwf	71,b	;volatile
  7628                           
  7629                           ; BSR set to: 15
  7630                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
  7631  001A3A  0100               	movlb	0	; () banked
  7632  001A3C  EE20 F002          	lfsr	2,2
  7633  001A40  517B               	movf	CANsendMessage@data& (0+255),w,b
  7634  001A42  26D9               	addwf	fsr2l,f,c
  7635  001A44  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7636  001A46  22DA               	addwfc	fsr2h,f,c
  7637  001A48  50DF               	movf	indf2,w,c
  7638  001A4A  010F               	movlb	15	; () banked
  7639  001A4C  6F48               	movwf	72,b	;volatile
  7640                           
  7641                           ; BSR set to: 15
  7642                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
  7643  001A4E  0100               	movlb	0	; () banked
  7644  001A50  EE20 F003          	lfsr	2,3
  7645  001A54  517B               	movf	CANsendMessage@data& (0+255),w,b
  7646  001A56  26D9               	addwf	fsr2l,f,c
  7647  001A58  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7648  001A5A  22DA               	addwfc	fsr2h,f,c
  7649  001A5C  50DF               	movf	indf2,w,c
  7650  001A5E  010F               	movlb	15	; () banked
  7651  001A60  6F49               	movwf	73,b	;volatile
  7652                           
  7653                           ; BSR set to: 15
  7654                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
  7655  001A62  0100               	movlb	0	; () banked
  7656  001A64  EE20 F004          	lfsr	2,4
  7657  001A68  517B               	movf	CANsendMessage@data& (0+255),w,b
  7658  001A6A  26D9               	addwf	fsr2l,f,c
  7659  001A6C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7660  001A6E  22DA               	addwfc	fsr2h,f,c
  7661  001A70  50DF               	movf	indf2,w,c
  7662  001A72  010F               	movlb	15	; () banked
  7663  001A74  6F4A               	movwf	74,b	;volatile
  7664                           
  7665                           ; BSR set to: 15
  7666                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
  7667  001A76  0100               	movlb	0	; () banked
  7668  001A78  EE20 F005          	lfsr	2,5
  7669  001A7C  517B               	movf	CANsendMessage@data& (0+255),w,b
  7670  001A7E  26D9               	addwf	fsr2l,f,c
  7671  001A80  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7672  001A82  22DA               	addwfc	fsr2h,f,c
  7673  001A84  50DF               	movf	indf2,w,c
  7674  001A86  010F               	movlb	15	; () banked
  7675  001A88  6F4B               	movwf	75,b	;volatile
  7676                           
  7677                           ; BSR set to: 15
  7678                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
  7679  001A8A  0100               	movlb	0	; () banked
  7680  001A8C  EE20 F006          	lfsr	2,6
  7681  001A90  517B               	movf	CANsendMessage@data& (0+255),w,b
  7682  001A92  26D9               	addwf	fsr2l,f,c
  7683  001A94  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7684  001A96  22DA               	addwfc	fsr2h,f,c
  7685  001A98  50DF               	movf	indf2,w,c
  7686  001A9A  010F               	movlb	15	; () banked
  7687  001A9C  6F4C               	movwf	76,b	;volatile
  7688                           
  7689                           ; BSR set to: 15
  7690                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
  7691  001A9E  0100               	movlb	0	; () banked
  7692  001AA0  EE20 F007          	lfsr	2,7
  7693  001AA4  517B               	movf	CANsendMessage@data& (0+255),w,b
  7694  001AA6  26D9               	addwf	fsr2l,f,c
  7695  001AA8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  7696  001AAA  22DA               	addwfc	fsr2h,f,c
  7697  001AAC  50DF               	movf	indf2,w,c
  7698  001AAE  010F               	movlb	15	; () banked
  7699  001AB0  6F4D               	movwf	77,b	;volatile
  7700                           
  7701                           ; BSR set to: 15
  7702                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
  7703  001AB2  010F               	movlb	15	; () banked
  7704  001AB4  8740               	bsf	64,3,b	;volatile
  7705                           
  7706                           ; BSR set to: 15
  7707                           ;inc\CANlib.h: 369: return;
  7708  001AB6  0012               	return	
  7709  001AB8                     l357:
  7710                           
  7711                           ; BSR set to: 15
  7712                           ;inc\CANlib.h: 370: }
  7713                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
  7714  001AB8  010F               	movlb	15	; () banked
  7715  001ABA  B730               	btfsc	48,3,b	;volatile
  7716  001ABC  D13F               	goto	l372
  7717                           
  7718                           ; BSR set to: 15
  7719                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
  7720  001ABE  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  7721                           
  7722                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
  7723  001AC2  0100               	movlb	0	; () banked
  7724  001AC4  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  7725  001AC6  D003               	goto	l373
  7726                           
  7727                           ; BSR set to: 0
  7728                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
  7729  001AC8  010F               	movlb	15	; () banked
  7730  001ACA  8D35               	bsf	53,6,b	;volatile
  7731  001ACC  D002               	goto	l374
  7732  001ACE                     l373:
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;inc\CANlib.h: 379: else
  7736                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
  7737  001ACE  010F               	movlb	15	; () banked
  7738  001AD0  9D35               	bcf	53,6,b	;volatile
  7739  001AD2                     l374:
  7740                           
  7741                           ; BSR set to: 15
  7742                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
  7743  001AD2  0100               	movlb	0	; () banked
  7744  001AD4  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  7745  001AD6  D079               	goto	l375
  7746                           
  7747                           ; BSR set to: 0
  7748                           ;inc\CANlib.h: 383: {
  7749                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
  7750  001AD8  0100               	movlb	0	; () banked
  7751  001ADA  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  7752  001ADC  0100               	movlb	0	; () banked
  7753  001ADE  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7754  001AE0  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7755  001AE2  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7756  001AE4  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7757                           
  7758                           ; BSR set to: 0
  7759                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
  7760  001AE6  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  7761                           
  7762                           ; BSR set to: 0
  7763                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
  7764  001AEA  0E00               	movlw	0
  7765  001AEC  0100               	movlb	0	; () banked
  7766  001AEE  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  7767  001AF0  0100               	movlb	0	; () banked
  7768  001AF2  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7769  001AF4  0EFF               	movlw	255
  7770  001AF6  0100               	movlb	0	; () banked
  7771  001AF8  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  7772  001AFA  0100               	movlb	0	; () banked
  7773  001AFC  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  7774  001AFE  0E00               	movlw	0
  7775  001B00  0100               	movlb	0	; () banked
  7776  001B02  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  7777  001B04  0100               	movlb	0	; () banked
  7778  001B06  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  7779  001B08  0E00               	movlw	0
  7780  001B0A  0100               	movlb	0	; () banked
  7781  001B0C  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  7782  001B0E  0100               	movlb	0	; () banked
  7783  001B10  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  7784                           
  7785                           ; BSR set to: 0
  7786                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
  7787  001B12  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  7788  001B16  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  7789  001B1A  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  7790  001B1E  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  7791  001B22  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  7792  001B26  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  7793  001B2A  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  7794  001B2E  0100               	movlb	0	; () banked
  7795  001B30  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  7796  001B32  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7797  001B36  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7798  001B3A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7799  001B3E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7800                           
  7801                           ; BSR set to: 0
  7802                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
  7803  001B42  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  7804                           
  7805                           ; BSR set to: 0
  7806                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
  7807  001B46  0E00               	movlw	0
  7808  001B48  010F               	movlb	15	; () banked
  7809  001B4A  6F32               	movwf	50,b	;volatile
  7810                           
  7811                           ; BSR set to: 15
  7812                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
  7813  001B4C  010F               	movlb	15	; () banked
  7814  001B4E  8732               	bsf	50,3,b	;volatile
  7815                           
  7816                           ; BSR set to: 15
  7817                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
  7818  001B50  0100               	movlb	0	; () banked
  7819  001B52  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  7820  001B54  D002               	goto	l376
  7821                           
  7822                           ; BSR set to: 0
  7823                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
  7824  001B56  010F               	movlb	15	; () banked
  7825  001B58  8132               	bsf	50,0,b	;volatile
  7826  001B5A                     l376:
  7827                           
  7828                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
  7829  001B5A  0100               	movlb	0	; () banked
  7830  001B5C  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  7831  001B5E  D002               	goto	l377
  7832                           
  7833                           ; BSR set to: 0
  7834                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
  7835  001B60  010F               	movlb	15	; () banked
  7836  001B62  8332               	bsf	50,1,b	;volatile
  7837  001B64                     l377:
  7838                           
  7839                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
  7840  001B64  0100               	movlb	0	; () banked
  7841  001B66  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  7842  001B68  D002               	goto	l378
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
  7846  001B6A  010F               	movlb	15	; () banked
  7847  001B6C  8B32               	bsf	50,5,b	;volatile
  7848  001B6E                     l378:
  7849                           
  7850                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
  7851  001B6E  0100               	movlb	0	; () banked
  7852  001B70  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  7853  001B72  D002               	goto	l379
  7854                           
  7855                           ; BSR set to: 0
  7856                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
  7857  001B74  010F               	movlb	15	; () banked
  7858  001B76  8D32               	bsf	50,6,b	;volatile
  7859  001B78                     l379:
  7860                           
  7861                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
  7862  001B78  0100               	movlb	0	; () banked
  7863  001B7A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  7864  001B7C  D002               	goto	l4133
  7865                           
  7866                           ; BSR set to: 0
  7867                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
  7868  001B7E  010F               	movlb	15	; () banked
  7869  001B80  8F32               	bsf	50,7,b	;volatile
  7870  001B82                     l4133:
  7871                           
  7872                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
  7873  001B82  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  7874  001B86  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7875  001B8A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7876  001B8E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7877  001B92  0E16               	movlw	22
  7878  001B94  D006               	goto	u4560
  7879  001B96                     u4565:
  7880  001B96  0100               	movlb	0	; () banked
  7881  001B98  90D8               	bcf	status,0,c
  7882  001B9A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  7883  001B9C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  7884  001B9E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  7885  001BA0  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  7886  001BA2                     u4560:
  7887  001BA2  2EE8               	decfsz	wreg,f,c
  7888  001BA4  D7F8               	goto	u4565
  7889  001BA6  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7890  001BAA  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7891  001BAE  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7892  001BB2  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7893                           
  7894                           ; BSR set to: 0
  7895                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
  7896  001BB6  0100               	movlb	0	; () banked
  7897  001BB8  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  7898  001BBA  0100               	movlb	0	; () banked
  7899  001BBC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7900  001BBE  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7901  001BC0  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7902  001BC2  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7903                           
  7904                           ; BSR set to: 0
  7905                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
  7906  001BC4  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  7907                           
  7908                           ;inc\CANlib.h: 408: }
  7909  001BC8  D059               	goto	l4153
  7910  001BCA                     l375:
  7911                           
  7912                           ; BSR set to: 0
  7913                           ;inc\CANlib.h: 410: else
  7914                           ;inc\CANlib.h: 412: {
  7915                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
  7916  001BCA  010F               	movlb	15	; () banked
  7917  001BCC  9732               	bcf	50,3,b	;volatile
  7918                           
  7919                           ; BSR set to: 15
  7920                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
  7921  001BCE  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  7922  001BD2  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  7923  001BD6  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  7924  001BDA  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  7925  001BDE  0E04               	movlw	4
  7926  001BE0  D006               	goto	u4570
  7927  001BE2                     u4575:
  7928  001BE2  0100               	movlb	0	; () banked
  7929  001BE4  90D8               	bcf	status,0,c
  7930  001BE6  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  7931  001BE8  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  7932  001BEA  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  7933  001BEC  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  7934  001BEE                     u4570:
  7935  001BEE  2EE8               	decfsz	wreg,f,c
  7936  001BF0  D7F8               	goto	u4575
  7937  001BF2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7938  001BF6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7939  001BFA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7940  001BFE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7941                           
  7942                           ; BSR set to: 0
  7943                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
  7944  001C02  0100               	movlb	0	; () banked
  7945  001C04  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  7946  001C06  0100               	movlb	0	; () banked
  7947  001C08  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7948  001C0A  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  7949  001C0C  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  7950  001C0E  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  7951                           
  7952                           ; BSR set to: 0
  7953                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
  7954  001C10  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  7955                           
  7956                           ; BSR set to: 0
  7957                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
  7958  001C14  0E07               	movlw	7
  7959  001C16  0100               	movlb	0	; () banked
  7960  001C18  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  7961  001C1A  0100               	movlb	0	; () banked
  7962  001C1C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  7963  001C1E  0E00               	movlw	0
  7964  001C20  0100               	movlb	0	; () banked
  7965  001C22  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  7966  001C24  0100               	movlb	0	; () banked
  7967  001C26  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  7968  001C28  0E00               	movlw	0
  7969  001C2A  0100               	movlb	0	; () banked
  7970  001C2C  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  7971  001C2E  0100               	movlb	0	; () banked
  7972  001C30  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  7973  001C32  0E00               	movlw	0
  7974  001C34  0100               	movlb	0	; () banked
  7975  001C36  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  7976  001C38  0100               	movlb	0	; () banked
  7977  001C3A  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  7978                           
  7979                           ; BSR set to: 0
  7980                           ;inc\CANlib.h: 420: tamp = tamp << 5;
  7981  001C3C  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  7982  001C40  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  7983  001C44  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  7984  001C48  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  7985  001C4C  0E05               	movlw	5
  7986  001C4E                     u4585:
  7987  001C4E  90D8               	bcf	status,0,c
  7988  001C50  0100               	movlb	0	; () banked
  7989  001C52  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  7990  001C54  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  7991  001C56  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  7992  001C58  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  7993  001C5A  2EE8               	decfsz	wreg,f,c
  7994  001C5C  D7F8               	goto	u4585
  7995  001C5E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  7996  001C62  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  7997  001C66  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  7998  001C6A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  7999                           
  8000                           ; BSR set to: 0
  8001                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
  8002  001C6E  010F               	movlb	15	; () banked
  8003  001C70  5132               	movf	50,w,b	;volatile
  8004  001C72  0B1F               	andlw	31
  8005  001C74  010F               	movlb	15	; () banked
  8006  001C76  6F32               	movwf	50,b	;volatile
  8007                           
  8008                           ; BSR set to: 15
  8009                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
  8010  001C78  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  8011  001C7C                     l4153:
  8012                           
  8013                           ;inc\CANlib.h: 423: }
  8014                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
  8015  001C7C  0100               	movlb	0	; () banked
  8016  001C7E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  8017  001C80  D003               	goto	l382
  8018                           
  8019                           ; BSR set to: 0
  8020                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
  8021  001C82  010F               	movlb	15	; () banked
  8022  001C84  8130               	bsf	48,0,b	;volatile
  8023  001C86  D002               	goto	l383
  8024  001C88                     l382:
  8025                           
  8026                           ; BSR set to: 0
  8027                           ;inc\CANlib.h: 427: else
  8028                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
  8029  001C88  010F               	movlb	15	; () banked
  8030  001C8A  9130               	bcf	48,0,b	;volatile
  8031  001C8C                     l383:
  8032                           
  8033                           ; BSR set to: 15
  8034                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
  8035  001C8C  0100               	movlb	0	; () banked
  8036  001C8E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  8037  001C90  D003               	goto	l384
  8038                           
  8039                           ; BSR set to: 0
  8040                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
  8041  001C92  010F               	movlb	15	; () banked
  8042  001C94  8330               	bsf	48,1,b	;volatile
  8043  001C96  D002               	goto	l4159
  8044  001C98                     l384:
  8045                           
  8046                           ; BSR set to: 0
  8047                           ;inc\CANlib.h: 431: else
  8048                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
  8049  001C98  010F               	movlb	15	; () banked
  8050  001C9A  9330               	bcf	48,1,b	;volatile
  8051  001C9C                     l4159:
  8052                           
  8053                           ; BSR set to: 15
  8054                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
  8055  001C9C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  8056  001CA0  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  8057  001CA4  50DF               	movf	indf2,w,c
  8058  001CA6  010F               	movlb	15	; () banked
  8059  001CA8  6F36               	movwf	54,b	;volatile
  8060                           
  8061                           ; BSR set to: 15
  8062                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
  8063  001CAA  0100               	movlb	0	; () banked
  8064  001CAC  EE20 F001          	lfsr	2,1
  8065  001CB0  517B               	movf	CANsendMessage@data& (0+255),w,b
  8066  001CB2  26D9               	addwf	fsr2l,f,c
  8067  001CB4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8068  001CB6  22DA               	addwfc	fsr2h,f,c
  8069  001CB8  50DF               	movf	indf2,w,c
  8070  001CBA  010F               	movlb	15	; () banked
  8071  001CBC  6F37               	movwf	55,b	;volatile
  8072                           
  8073                           ; BSR set to: 15
  8074                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
  8075  001CBE  0100               	movlb	0	; () banked
  8076  001CC0  EE20 F002          	lfsr	2,2
  8077  001CC4  517B               	movf	CANsendMessage@data& (0+255),w,b
  8078  001CC6  26D9               	addwf	fsr2l,f,c
  8079  001CC8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8080  001CCA  22DA               	addwfc	fsr2h,f,c
  8081  001CCC  50DF               	movf	indf2,w,c
  8082  001CCE  010F               	movlb	15	; () banked
  8083  001CD0  6F38               	movwf	56,b	;volatile
  8084                           
  8085                           ; BSR set to: 15
  8086                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
  8087  001CD2  0100               	movlb	0	; () banked
  8088  001CD4  EE20 F003          	lfsr	2,3
  8089  001CD8  517B               	movf	CANsendMessage@data& (0+255),w,b
  8090  001CDA  26D9               	addwf	fsr2l,f,c
  8091  001CDC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8092  001CDE  22DA               	addwfc	fsr2h,f,c
  8093  001CE0  50DF               	movf	indf2,w,c
  8094  001CE2  010F               	movlb	15	; () banked
  8095  001CE4  6F39               	movwf	57,b	;volatile
  8096                           
  8097                           ; BSR set to: 15
  8098                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
  8099  001CE6  0100               	movlb	0	; () banked
  8100  001CE8  EE20 F004          	lfsr	2,4
  8101  001CEC  517B               	movf	CANsendMessage@data& (0+255),w,b
  8102  001CEE  26D9               	addwf	fsr2l,f,c
  8103  001CF0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8104  001CF2  22DA               	addwfc	fsr2h,f,c
  8105  001CF4  50DF               	movf	indf2,w,c
  8106  001CF6  010F               	movlb	15	; () banked
  8107  001CF8  6F3A               	movwf	58,b	;volatile
  8108                           
  8109                           ; BSR set to: 15
  8110                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
  8111  001CFA  0100               	movlb	0	; () banked
  8112  001CFC  EE20 F005          	lfsr	2,5
  8113  001D00  517B               	movf	CANsendMessage@data& (0+255),w,b
  8114  001D02  26D9               	addwf	fsr2l,f,c
  8115  001D04  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8116  001D06  22DA               	addwfc	fsr2h,f,c
  8117  001D08  50DF               	movf	indf2,w,c
  8118  001D0A  010F               	movlb	15	; () banked
  8119  001D0C  6F3B               	movwf	59,b	;volatile
  8120                           
  8121                           ; BSR set to: 15
  8122                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
  8123  001D0E  0100               	movlb	0	; () banked
  8124  001D10  EE20 F006          	lfsr	2,6
  8125  001D14  517B               	movf	CANsendMessage@data& (0+255),w,b
  8126  001D16  26D9               	addwf	fsr2l,f,c
  8127  001D18  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8128  001D1A  22DA               	addwfc	fsr2h,f,c
  8129  001D1C  50DF               	movf	indf2,w,c
  8130  001D1E  010F               	movlb	15	; () banked
  8131  001D20  6F3C               	movwf	60,b	;volatile
  8132                           
  8133                           ; BSR set to: 15
  8134                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
  8135  001D22  0100               	movlb	0	; () banked
  8136  001D24  EE20 F007          	lfsr	2,7
  8137  001D28  517B               	movf	CANsendMessage@data& (0+255),w,b
  8138  001D2A  26D9               	addwf	fsr2l,f,c
  8139  001D2C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8140  001D2E  22DA               	addwfc	fsr2h,f,c
  8141  001D30  50DF               	movf	indf2,w,c
  8142  001D32  010F               	movlb	15	; () banked
  8143  001D34  6F3D               	movwf	61,b	;volatile
  8144                           
  8145                           ; BSR set to: 15
  8146                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
  8147  001D36  010F               	movlb	15	; () banked
  8148  001D38  8730               	bsf	48,3,b	;volatile
  8149                           
  8150                           ; BSR set to: 15
  8151                           ;inc\CANlib.h: 445: return;
  8152  001D3A  0012               	return	
  8153  001D3C                     l372:
  8154                           
  8155                           ; BSR set to: 15
  8156                           ;inc\CANlib.h: 446: }
  8157                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
  8158  001D3C  010F               	movlb	15	; () banked
  8159  001D3E  B720               	btfsc	32,3,b	;volatile
  8160  001D40  0012               	return	
  8161                           
  8162                           ; BSR set to: 15
  8163                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
  8164  001D42  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  8165                           
  8166                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
  8167  001D46  0100               	movlb	0	; () banked
  8168  001D48  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  8169  001D4A  D003               	goto	l387
  8170                           
  8171                           ; BSR set to: 0
  8172                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
  8173  001D4C  010F               	movlb	15	; () banked
  8174  001D4E  8D25               	bsf	37,6,b	;volatile
  8175  001D50  D002               	goto	l388
  8176  001D52                     l387:
  8177                           
  8178                           ; BSR set to: 0
  8179                           ;inc\CANlib.h: 455: else
  8180                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
  8181  001D52  010F               	movlb	15	; () banked
  8182  001D54  9D25               	bcf	37,6,b	;volatile
  8183  001D56                     l388:
  8184                           
  8185                           ; BSR set to: 15
  8186                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
  8187  001D56  0100               	movlb	0	; () banked
  8188  001D58  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  8189  001D5A  D079               	goto	l389
  8190                           
  8191                           ; BSR set to: 0
  8192                           ;inc\CANlib.h: 459: {
  8193                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
  8194  001D5C  0100               	movlb	0	; () banked
  8195  001D5E  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  8196  001D60  0100               	movlb	0	; () banked
  8197  001D62  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  8198  001D64  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  8199  001D66  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  8200  001D68  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  8201                           
  8202                           ; BSR set to: 0
  8203                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
  8204  001D6A  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  8205                           
  8206                           ; BSR set to: 0
  8207                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
  8208  001D6E  0E00               	movlw	0
  8209  001D70  0100               	movlb	0	; () banked
  8210  001D72  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  8211  001D74  0100               	movlb	0	; () banked
  8212  001D76  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  8213  001D78  0EFF               	movlw	255
  8214  001D7A  0100               	movlb	0	; () banked
  8215  001D7C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  8216  001D7E  0100               	movlb	0	; () banked
  8217  001D80  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  8218  001D82  0E00               	movlw	0
  8219  001D84  0100               	movlb	0	; () banked
  8220  001D86  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  8221  001D88  0100               	movlb	0	; () banked
  8222  001D8A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  8223  001D8C  0E00               	movlw	0
  8224  001D8E  0100               	movlb	0	; () banked
  8225  001D90  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  8226  001D92  0100               	movlb	0	; () banked
  8227  001D94  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  8228                           
  8229                           ; BSR set to: 0
  8230                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
  8231  001D96  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  8232  001D9A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  8233  001D9E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  8234  001DA2  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  8235  001DA6  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  8236  001DAA  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  8237  001DAE  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  8238  001DB2  0100               	movlb	0	; () banked
  8239  001DB4  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  8240  001DB6  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  8241  001DBA  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  8242  001DBE  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  8243  001DC2  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  8244                           
  8245                           ; BSR set to: 0
  8246                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
  8247  001DC6  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  8248                           
  8249                           ; BSR set to: 0
  8250                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
  8251  001DCA  0E00               	movlw	0
  8252  001DCC  010F               	movlb	15	; () banked
  8253  001DCE  6F22               	movwf	34,b	;volatile
  8254                           
  8255                           ; BSR set to: 15
  8256                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
  8257  001DD0  010F               	movlb	15	; () banked
  8258  001DD2  8722               	bsf	34,3,b	;volatile
  8259                           
  8260                           ; BSR set to: 15
  8261                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
  8262  001DD4  0100               	movlb	0	; () banked
  8263  001DD6  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  8264  001DD8  D002               	goto	l390
  8265                           
  8266                           ; BSR set to: 0
  8267                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
  8268  001DDA  010F               	movlb	15	; () banked
  8269  001DDC  8122               	bsf	34,0,b	;volatile
  8270  001DDE                     l390:
  8271                           
  8272                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
  8273  001DDE  0100               	movlb	0	; () banked
  8274  001DE0  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  8275  001DE2  D002               	goto	l391
  8276                           
  8277                           ; BSR set to: 0
  8278                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
  8279  001DE4  010F               	movlb	15	; () banked
  8280  001DE6  8322               	bsf	34,1,b	;volatile
  8281  001DE8                     l391:
  8282                           
  8283                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
  8284  001DE8  0100               	movlb	0	; () banked
  8285  001DEA  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  8286  001DEC  D002               	goto	l392
  8287                           
  8288                           ; BSR set to: 0
  8289                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
  8290  001DEE  010F               	movlb	15	; () banked
  8291  001DF0  8B22               	bsf	34,5,b	;volatile
  8292  001DF2                     l392:
  8293                           
  8294                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
  8295  001DF2  0100               	movlb	0	; () banked
  8296  001DF4  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  8297  001DF6  D002               	goto	l393
  8298                           
  8299                           ; BSR set to: 0
  8300                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
  8301  001DF8  010F               	movlb	15	; () banked
  8302  001DFA  8D22               	bsf	34,6,b	;volatile
  8303  001DFC                     l393:
  8304                           
  8305                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
  8306  001DFC  0100               	movlb	0	; () banked
  8307  001DFE  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  8308  001E00  D002               	goto	l4209
  8309                           
  8310                           ; BSR set to: 0
  8311                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
  8312  001E02  010F               	movlb	15	; () banked
  8313  001E04  8F22               	bsf	34,7,b	;volatile
  8314  001E06                     l4209:
  8315                           
  8316                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
  8317  001E06  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  8318  001E0A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  8319  001E0E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  8320  001E12  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  8321  001E16  0E16               	movlw	22
  8322  001E18  D006               	goto	u4690
  8323  001E1A                     u4695:
  8324  001E1A  0100               	movlb	0	; () banked
  8325  001E1C  90D8               	bcf	status,0,c
  8326  001E1E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  8327  001E20  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  8328  001E22  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  8329  001E24  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  8330  001E26                     u4690:
  8331  001E26  2EE8               	decfsz	wreg,f,c
  8332  001E28  D7F8               	goto	u4695
  8333  001E2A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  8334  001E2E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  8335  001E32  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  8336  001E36  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  8337                           
  8338                           ; BSR set to: 0
  8339                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
  8340  001E3A  0100               	movlb	0	; () banked
  8341  001E3C  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  8342  001E3E  0100               	movlb	0	; () banked
  8343  001E40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  8344  001E42  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  8345  001E44  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  8346  001E46  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  8347                           
  8348                           ; BSR set to: 0
  8349                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
  8350  001E48  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  8351                           
  8352                           ;inc\CANlib.h: 484: }
  8353  001E4C  D059               	goto	l4229
  8354  001E4E                     l389:
  8355                           
  8356                           ; BSR set to: 0
  8357                           ;inc\CANlib.h: 486: else
  8358                           ;inc\CANlib.h: 488: {
  8359                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
  8360  001E4E  010F               	movlb	15	; () banked
  8361  001E50  9722               	bcf	34,3,b	;volatile
  8362                           
  8363                           ; BSR set to: 15
  8364                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
  8365  001E52  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  8366  001E56  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  8367  001E5A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  8368  001E5E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  8369  001E62  0E04               	movlw	4
  8370  001E64  D006               	goto	u4700
  8371  001E66                     u4705:
  8372  001E66  0100               	movlb	0	; () banked
  8373  001E68  90D8               	bcf	status,0,c
  8374  001E6A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  8375  001E6C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  8376  001E6E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  8377  001E70  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  8378  001E72                     u4700:
  8379  001E72  2EE8               	decfsz	wreg,f,c
  8380  001E74  D7F8               	goto	u4705
  8381  001E76  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  8382  001E7A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  8383  001E7E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  8384  001E82  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
  8388  001E86  0100               	movlb	0	; () banked
  8389  001E88  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  8390  001E8A  0100               	movlb	0	; () banked
  8391  001E8C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  8392  001E8E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  8393  001E90  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  8394  001E92  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  8395                           
  8396                           ; BSR set to: 0
  8397                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
  8398  001E94  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  8399                           
  8400                           ; BSR set to: 0
  8401                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
  8402  001E98  0E07               	movlw	7
  8403  001E9A  0100               	movlb	0	; () banked
  8404  001E9C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  8405  001E9E  0100               	movlb	0	; () banked
  8406  001EA0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  8407  001EA2  0E00               	movlw	0
  8408  001EA4  0100               	movlb	0	; () banked
  8409  001EA6  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  8410  001EA8  0100               	movlb	0	; () banked
  8411  001EAA  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  8412  001EAC  0E00               	movlw	0
  8413  001EAE  0100               	movlb	0	; () banked
  8414  001EB0  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  8415  001EB2  0100               	movlb	0	; () banked
  8416  001EB4  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  8417  001EB6  0E00               	movlw	0
  8418  001EB8  0100               	movlb	0	; () banked
  8419  001EBA  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  8420  001EBC  0100               	movlb	0	; () banked
  8421  001EBE  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  8422                           
  8423                           ; BSR set to: 0
  8424                           ;inc\CANlib.h: 496: tamp = tamp << 5;
  8425  001EC0  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  8426  001EC4  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  8427  001EC8  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  8428  001ECC  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  8429  001ED0  0E05               	movlw	5
  8430  001ED2                     u4715:
  8431  001ED2  90D8               	bcf	status,0,c
  8432  001ED4  0100               	movlb	0	; () banked
  8433  001ED6  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  8434  001ED8  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  8435  001EDA  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  8436  001EDC  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  8437  001EDE  2EE8               	decfsz	wreg,f,c
  8438  001EE0  D7F8               	goto	u4715
  8439  001EE2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  8440  001EE6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  8441  001EEA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  8442  001EEE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  8443                           
  8444                           ; BSR set to: 0
  8445                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
  8446  001EF2  010F               	movlb	15	; () banked
  8447  001EF4  5122               	movf	34,w,b	;volatile
  8448  001EF6  0B1F               	andlw	31
  8449  001EF8  010F               	movlb	15	; () banked
  8450  001EFA  6F22               	movwf	34,b	;volatile
  8451                           
  8452                           ; BSR set to: 15
  8453                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
  8454  001EFC  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  8455  001F00                     l4229:
  8456                           
  8457                           ;inc\CANlib.h: 499: }
  8458                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
  8459  001F00  0100               	movlb	0	; () banked
  8460  001F02  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  8461  001F04  D003               	goto	l396
  8462                           
  8463                           ; BSR set to: 0
  8464                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
  8465  001F06  010F               	movlb	15	; () banked
  8466  001F08  8120               	bsf	32,0,b	;volatile
  8467  001F0A  D002               	goto	l397
  8468  001F0C                     l396:
  8469                           
  8470                           ; BSR set to: 0
  8471                           ;inc\CANlib.h: 503: else
  8472                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
  8473  001F0C  010F               	movlb	15	; () banked
  8474  001F0E  9120               	bcf	32,0,b	;volatile
  8475  001F10                     l397:
  8476                           
  8477                           ; BSR set to: 15
  8478                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
  8479  001F10  0100               	movlb	0	; () banked
  8480  001F12  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  8481  001F14  D003               	goto	l398
  8482                           
  8483                           ; BSR set to: 0
  8484                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
  8485  001F16  010F               	movlb	15	; () banked
  8486  001F18  8320               	bsf	32,1,b	;volatile
  8487  001F1A  D002               	goto	l4235
  8488  001F1C                     l398:
  8489                           
  8490                           ; BSR set to: 0
  8491                           ;inc\CANlib.h: 507: else
  8492                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
  8493  001F1C  010F               	movlb	15	; () banked
  8494  001F1E  9320               	bcf	32,1,b	;volatile
  8495  001F20                     l4235:
  8496                           
  8497                           ; BSR set to: 15
  8498                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
  8499  001F20  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  8500  001F24  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  8501  001F28  50DF               	movf	indf2,w,c
  8502  001F2A  010F               	movlb	15	; () banked
  8503  001F2C  6F26               	movwf	38,b	;volatile
  8504                           
  8505                           ; BSR set to: 15
  8506                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
  8507  001F2E  0100               	movlb	0	; () banked
  8508  001F30  EE20 F001          	lfsr	2,1
  8509  001F34  517B               	movf	CANsendMessage@data& (0+255),w,b
  8510  001F36  26D9               	addwf	fsr2l,f,c
  8511  001F38  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8512  001F3A  22DA               	addwfc	fsr2h,f,c
  8513  001F3C  50DF               	movf	indf2,w,c
  8514  001F3E  010F               	movlb	15	; () banked
  8515  001F40  6F27               	movwf	39,b	;volatile
  8516                           
  8517                           ; BSR set to: 15
  8518                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
  8519  001F42  0100               	movlb	0	; () banked
  8520  001F44  EE20 F002          	lfsr	2,2
  8521  001F48  517B               	movf	CANsendMessage@data& (0+255),w,b
  8522  001F4A  26D9               	addwf	fsr2l,f,c
  8523  001F4C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8524  001F4E  22DA               	addwfc	fsr2h,f,c
  8525  001F50  50DF               	movf	indf2,w,c
  8526  001F52  010F               	movlb	15	; () banked
  8527  001F54  6F28               	movwf	40,b	;volatile
  8528                           
  8529                           ; BSR set to: 15
  8530                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
  8531  001F56  0100               	movlb	0	; () banked
  8532  001F58  EE20 F003          	lfsr	2,3
  8533  001F5C  517B               	movf	CANsendMessage@data& (0+255),w,b
  8534  001F5E  26D9               	addwf	fsr2l,f,c
  8535  001F60  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8536  001F62  22DA               	addwfc	fsr2h,f,c
  8537  001F64  50DF               	movf	indf2,w,c
  8538  001F66  010F               	movlb	15	; () banked
  8539  001F68  6F29               	movwf	41,b	;volatile
  8540                           
  8541                           ; BSR set to: 15
  8542                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
  8543  001F6A  0100               	movlb	0	; () banked
  8544  001F6C  EE20 F004          	lfsr	2,4
  8545  001F70  517B               	movf	CANsendMessage@data& (0+255),w,b
  8546  001F72  26D9               	addwf	fsr2l,f,c
  8547  001F74  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8548  001F76  22DA               	addwfc	fsr2h,f,c
  8549  001F78  50DF               	movf	indf2,w,c
  8550  001F7A  010F               	movlb	15	; () banked
  8551  001F7C  6F2A               	movwf	42,b	;volatile
  8552                           
  8553                           ; BSR set to: 15
  8554                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
  8555  001F7E  0100               	movlb	0	; () banked
  8556  001F80  EE20 F005          	lfsr	2,5
  8557  001F84  517B               	movf	CANsendMessage@data& (0+255),w,b
  8558  001F86  26D9               	addwf	fsr2l,f,c
  8559  001F88  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8560  001F8A  22DA               	addwfc	fsr2h,f,c
  8561  001F8C  50DF               	movf	indf2,w,c
  8562  001F8E  010F               	movlb	15	; () banked
  8563  001F90  6F2B               	movwf	43,b	;volatile
  8564                           
  8565                           ; BSR set to: 15
  8566                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
  8567  001F92  0100               	movlb	0	; () banked
  8568  001F94  EE20 F006          	lfsr	2,6
  8569  001F98  517B               	movf	CANsendMessage@data& (0+255),w,b
  8570  001F9A  26D9               	addwf	fsr2l,f,c
  8571  001F9C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8572  001F9E  22DA               	addwfc	fsr2h,f,c
  8573  001FA0  50DF               	movf	indf2,w,c
  8574  001FA2  010F               	movlb	15	; () banked
  8575  001FA4  6F2C               	movwf	44,b	;volatile
  8576                           
  8577                           ; BSR set to: 15
  8578                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
  8579  001FA6  0100               	movlb	0	; () banked
  8580  001FA8  EE20 F007          	lfsr	2,7
  8581  001FAC  517B               	movf	CANsendMessage@data& (0+255),w,b
  8582  001FAE  26D9               	addwf	fsr2l,f,c
  8583  001FB0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  8584  001FB2  22DA               	addwfc	fsr2h,f,c
  8585  001FB4  50DF               	movf	indf2,w,c
  8586  001FB6  010F               	movlb	15	; () banked
  8587  001FB8  6F2D               	movwf	45,b	;volatile
  8588                           
  8589                           ; BSR set to: 15
  8590                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
  8591  001FBA  010F               	movlb	15	; () banked
  8592  001FBC  8720               	bsf	32,3,b	;volatile
  8593                           
  8594                           ; BSR set to: 15
  8595                           ;inc\CANlib.h: 521: return;
  8596  001FBE  0012               	return	
  8597  001FC0                     __end_of_CANsendMessage:
  8598                           	opt stack 0
  8599                           tblptru	equ	0xFF8
  8600                           tblptrh	equ	0xFF7
  8601                           tblptrl	equ	0xFF6
  8602                           tablat	equ	0xFF5
  8603                           prodh	equ	0xFF4
  8604                           prodl	equ	0xFF3
  8605                           postinc0	equ	0xFEE
  8606                           wreg	equ	0xFE8
  8607                           indf2	equ	0xFDF
  8608                           postinc2	equ	0xFDE
  8609                           postdec2	equ	0xFDD
  8610                           fsr2h	equ	0xFDA
  8611                           fsr2l	equ	0xFD9
  8612                           status	equ	0xFD8
  8613                           
  8614 ;; *************** function _CANisTxReady *****************
  8615 ;; Defined at:
  8616 ;;		line 1155 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;		None
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;		None
  8621 ;; Return value:  Size  Location     Type
  8622 ;;                  1    wreg      unsigned char 
  8623 ;; Registers used:
  8624 ;;		wreg, status,2
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 0/0
  8628 ;;		Unchanged: 0/0
  8629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8631 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8633 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8634 ;;Total ram usage:        1 bytes
  8635 ;; Hardware stack levels used:    1
  8636 ;; Hardware stack levels required when called:    4
  8637 ;; This function calls:
  8638 ;;		Nothing
  8639 ;; This function is called by:
  8640 ;;		_park_search
  8641 ;;		_can_send
  8642 ;; This function uses a non-reentrant model
  8643 ;;
  8644                           
  8645                           	psect	text22
  8646  004FC6                     __ptext22:
  8647                           	opt stack 0
  8648  004FC6                     _CANisTxReady:
  8649                           	opt stack 23
  8650                           
  8651                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  8652                           
  8653                           ; BSR set to: 15
  8654                           ;incstack = 0
  8655  004FC6  0E01               	movlw	1
  8656  004FC8  0100               	movlb	0	; () banked
  8657  004FCA  6F77               	movwf	_CANisTxReady$2808& (0+255),b
  8658                           
  8659                           ; BSR set to: 0
  8660  004FCC  010F               	movlb	15	; () banked
  8661  004FCE  A740               	btfss	64,3,b	;volatile
  8662  004FD0  D009               	goto	l550
  8663                           
  8664                           ; BSR set to: 15
  8665  004FD2  010F               	movlb	15	; () banked
  8666  004FD4  A730               	btfss	48,3,b	;volatile
  8667  004FD6  D006               	goto	l550
  8668                           
  8669                           ; BSR set to: 15
  8670  004FD8  010F               	movlb	15	; () banked
  8671  004FDA  A720               	btfss	32,3,b	;volatile
  8672  004FDC  D003               	goto	l550
  8673                           
  8674                           ; BSR set to: 15
  8675  004FDE  0E00               	movlw	0
  8676  004FE0  0100               	movlb	0	; () banked
  8677  004FE2  6F77               	movwf	_CANisTxReady$2808& (0+255),b
  8678  004FE4                     l550:
  8679  004FE4  0100               	movlb	0	; () banked
  8680  004FE6  5177               	movf	_CANisTxReady$2808& (0+255),w,b
  8681  004FE8  0012               	return	
  8682  004FEA                     __end_of_CANisTxReady:
  8683                           	opt stack 0
  8684                           tblptru	equ	0xFF8
  8685                           tblptrh	equ	0xFF7
  8686                           tblptrl	equ	0xFF6
  8687                           tablat	equ	0xFF5
  8688                           prodh	equ	0xFF4
  8689                           prodl	equ	0xFF3
  8690                           postinc0	equ	0xFEE
  8691                           wreg	equ	0xFE8
  8692                           indf2	equ	0xFDF
  8693                           postinc2	equ	0xFDE
  8694                           postdec2	equ	0xFDD
  8695                           fsr2h	equ	0xFDA
  8696                           fsr2l	equ	0xFD9
  8697                           status	equ	0xFD8
  8698                           
  8699 ;; *************** function _configurazione *****************
  8700 ;; Defined at:
  8701 ;;		line 320 in file "parcheggio.c"
  8702 ;; Parameters:    Size  Location     Type
  8703 ;;		None
  8704 ;; Auto vars:     Size  Location     Type
  8705 ;;		None
  8706 ;; Return value:  Size  Location     Type
  8707 ;;		None               void
  8708 ;; Registers used:
  8709 ;;		wreg, status,2, status,0, cstack
  8710 ;; Tracked objects:
  8711 ;;		On entry : 0/0
  8712 ;;		On exit  : 0/0
  8713 ;;		Unchanged: 0/0
  8714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8719 ;;Total ram usage:        0 bytes
  8720 ;; Hardware stack levels used:    1
  8721 ;; Hardware stack levels required when called:    6
  8722 ;; This function calls:
  8723 ;;		_CANInitialize
  8724 ;; This function is called by:
  8725 ;;		_main
  8726 ;; This function uses a non-reentrant model
  8727 ;;
  8728                           
  8729                           	psect	text23
  8730  004D20                     __ptext23:
  8731                           	opt stack 0
  8732  004D20                     _configurazione:
  8733                           	opt stack 24
  8734                           
  8735                           ;parcheggio.c: 321: LATA = 0x00;
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;incstack = 0
  8739  004D20  0E00               	movlw	0
  8740  004D22  6E89               	movwf	3977,c	;volatile
  8741                           
  8742                           ;parcheggio.c: 322: TRISA = 0b11110000;
  8743  004D24  0EF0               	movlw	240
  8744  004D26  6E92               	movwf	3986,c	;volatile
  8745                           
  8746                           ;parcheggio.c: 324: LATB = 0x00;
  8747  004D28  0E00               	movlw	0
  8748  004D2A  6E8A               	movwf	3978,c	;volatile
  8749                           
  8750                           ;parcheggio.c: 325: TRISB = 0b10001010;
  8751  004D2C  0E8A               	movlw	138
  8752  004D2E  6E93               	movwf	3987,c	;volatile
  8753                           
  8754                           ;parcheggio.c: 327: LATC = 0x00;
  8755  004D30  0E00               	movlw	0
  8756  004D32  6E8B               	movwf	3979,c	;volatile
  8757                           
  8758                           ;parcheggio.c: 328: TRISC = 0b11111111;
  8759  004D34  6894               	setf	3988,c	;volatile
  8760                           
  8761                           ;parcheggio.c: 330: ADCON1 = 0xFF;
  8762  004D36  68C1               	setf	4033,c	;volatile
  8763                           
  8764                           ;parcheggio.c: 331: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
  8765  004D38  0E06               	movlw	6
  8766  004D3A  0100               	movlb	0	; () banked
  8767  004D3C  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
  8768  004D3E  0E05               	movlw	5
  8769  004D40  0100               	movlb	0	; () banked
  8770  004D42  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
  8771  004D44  0E01               	movlw	1
  8772  004D46  0100               	movlb	0	; () banked
  8773  004D48  6F87               	movwf	CANInitialize@SJW& (0+255),b
  8774  004D4A  0E03               	movlw	3
  8775  004D4C  0100               	movlb	0	; () banked
  8776  004D4E  6F88               	movwf	CANInitialize@BRP& (0+255),b
  8777  004D50  0E9D               	movlw	157
  8778  004D52  0100               	movlb	0	; () banked
  8779  004D54  6F89               	movwf	CANInitialize@flags& (0+255),b
  8780  004D56  0E04               	movlw	4
  8781  004D58  EC73  F021         	call	_CANInitialize
  8782                           
  8783                           ;parcheggio.c: 333: RCONbits.IPEN = 1;
  8784  004D5C  8ED0               	bsf	4048,7,c	;volatile
  8785                           
  8786                           ;parcheggio.c: 334: PIR3bits.RXB1IF = 0;
  8787  004D5E  92A4               	bcf	4004,1,c	;volatile
  8788                           
  8789                           ;parcheggio.c: 335: PIR3bits.RXB0IF = 0;
  8790  004D60  90A4               	bcf	4004,0,c	;volatile
  8791                           
  8792                           ;parcheggio.c: 336: IPR3bits.RXB1IP = 0;
  8793  004D62  92A5               	bcf	4005,1,c	;volatile
  8794                           
  8795                           ;parcheggio.c: 337: IPR3bits.RXB0IP = 0;
  8796  004D64  90A5               	bcf	4005,0,c	;volatile
  8797                           
  8798                           ;parcheggio.c: 338: PIE3bits.RXB1IE = 1;
  8799  004D66  82A3               	bsf	4003,1,c	;volatile
  8800                           
  8801                           ;parcheggio.c: 339: PIE3bits.RXB0IE = 1;
  8802  004D68  80A3               	bsf	4003,0,c	;volatile
  8803                           
  8804                           ;parcheggio.c: 340: INTCON2bits.TMR0IP = 0;
  8805  004D6A  94F1               	bcf	intcon2,2,c	;volatile
  8806                           
  8807                           ;parcheggio.c: 341: T0CON = 0x80;
  8808  004D6C  0E80               	movlw	128
  8809  004D6E  6ED5               	movwf	4053,c	;volatile
  8810                           
  8811                           ;parcheggio.c: 342: T3CON = 0x11;
  8812  004D70  0E11               	movlw	17
  8813  004D72  6EB1               	movwf	4017,c	;volatile
  8814                           
  8815                           ;parcheggio.c: 343: TMR0H = 0x34;
  8816  004D74  0E34               	movlw	52
  8817  004D76  6ED7               	movwf	4055,c	;volatile
  8818                           
  8819                           ;parcheggio.c: 344: TMR0L = 0xE0;
  8820  004D78  0EE0               	movlw	224
  8821  004D7A  6ED6               	movwf	4054,c	;volatile
  8822                           
  8823                           ;parcheggio.c: 345: INTCONbits.TMR0IF = 0;
  8824  004D7C  94F2               	bcf	intcon,2,c	;volatile
  8825                           
  8826                           ;parcheggio.c: 346: INTCONbits.TMR0IE = 1;
  8827  004D7E  8AF2               	bsf	intcon,5,c	;volatile
  8828                           
  8829                           ;parcheggio.c: 347: INTCON2bits.INTEDG0 = 1;
  8830  004D80  8CF1               	bsf	intcon2,6,c	;volatile
  8831                           
  8832                           ;parcheggio.c: 348: INTCONbits.INT0IF = 0;
  8833  004D82  92F2               	bcf	intcon,1,c	;volatile
  8834                           
  8835                           ;parcheggio.c: 349: INTCONbits.INT0IE = 0;
  8836  004D84  98F2               	bcf	intcon,4,c	;volatile
  8837                           
  8838                           ;parcheggio.c: 350: INTCONbits.GIEL = 1;
  8839  004D86  8CF2               	bsf	intcon,6,c	;volatile
  8840                           
  8841                           ;parcheggio.c: 351: INTCONbits.GIEH = 1;
  8842  004D88  8EF2               	bsf	intcon,7,c	;volatile
  8843  004D8A  0012               	return		;funcret
  8844  004D8C                     __end_of_configurazione:
  8845                           	opt stack 0
  8846                           tblptru	equ	0xFF8
  8847                           tblptrh	equ	0xFF7
  8848                           tblptrl	equ	0xFF6
  8849                           tablat	equ	0xFF5
  8850                           prodh	equ	0xFF4
  8851                           prodl	equ	0xFF3
  8852                           intcon	equ	0xFF2
  8853                           intcon2	equ	0xFF1
  8854                           postinc0	equ	0xFEE
  8855                           wreg	equ	0xFE8
  8856                           indf2	equ	0xFDF
  8857                           postinc2	equ	0xFDE
  8858                           postdec2	equ	0xFDD
  8859                           fsr2h	equ	0xFDA
  8860                           fsr2l	equ	0xFD9
  8861                           status	equ	0xFD8
  8862                           
  8863 ;; *************** function _CANInitialize *****************
  8864 ;; Defined at:
  8865 ;;		line 219 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  8866 ;; Parameters:    Size  Location     Type
  8867 ;;  propSeg         1    wreg     unsigned char 
  8868 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
  8869 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
  8870 ;;  SJW             1   39[BANK0 ] unsigned char 
  8871 ;;  BRP             1   40[BANK0 ] unsigned char 
  8872 ;;  flags           1   41[BANK0 ] enum E16313
  8873 ;; Auto vars:     Size  Location     Type
  8874 ;;  propSeg         1   46[BANK0 ] unsigned char 
  8875 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
  8876 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
  8877 ;; Return value:  Size  Location     Type
  8878 ;;		None               void
  8879 ;; Registers used:
  8880 ;;		wreg, status,2, status,0, cstack
  8881 ;; Tracked objects:
  8882 ;;		On entry : 0/0
  8883 ;;		On exit  : 0/0
  8884 ;;		Unchanged: 0/0
  8885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8886 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8887 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8888 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8889 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8890 ;;Total ram usage:       12 bytes
  8891 ;; Hardware stack levels used:    1
  8892 ;; Hardware stack levels required when called:    5
  8893 ;; This function calls:
  8894 ;;		_CANOperationMode
  8895 ;;		_CANSetFilter
  8896 ;;		_CANSetMask
  8897 ;; This function is called by:
  8898 ;;		_configurazione
  8899 ;; This function uses a non-reentrant model
  8900 ;;
  8901                           
  8902                           	psect	text24
  8903  0042E6                     __ptext24:
  8904                           	opt stack 0
  8905  0042E6                     _CANInitialize:
  8906                           	opt stack 24
  8907                           
  8908                           ;incstack = 0
  8909                           ;CANInitialize@propSeg stored from wreg
  8910  0042E6  0100               	movlb	0	; () banked
  8911  0042E8  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
  8912                           
  8913                           ;inc\CANlib.h: 221: BYTE FilterConfig1;
  8914                           ;inc\CANlib.h: 222: BYTE FilterConfig2;
  8915                           ;inc\CANlib.h: 224: CANOperationMode(CAN_OP_MODE_CONFIG);
  8916  0042EA  0E80               	movlw	128
  8917  0042EC  ECF5  F027         	call	_CANOperationMode
  8918                           
  8919                           ;inc\CANlib.h: 226: BRGCON1 = 0x00;
  8920  0042F0  0E00               	movlw	0
  8921  0042F2  6E70               	movwf	3952,c	;volatile
  8922                           
  8923                           ;inc\CANlib.h: 227: BRGCON2 = 0x00;
  8924  0042F4  0E00               	movlw	0
  8925  0042F6  6E71               	movwf	3953,c	;volatile
  8926                           
  8927                           ;inc\CANlib.h: 228: BRGCON3 = 0x00;
  8928  0042F8  0E00               	movlw	0
  8929  0042FA  6E72               	movwf	3954,c	;volatile
  8930                           
  8931                           ;inc\CANlib.h: 230: SJW= SJW << 6;
  8932  0042FC  0100               	movlb	0	; () banked
  8933  0042FE  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
  8934  004300  42E8               	rrncf	wreg,f,c
  8935  004302  0BC0               	andlw	192
  8936  004304  0100               	movlb	0	; () banked
  8937  004306  6F87               	movwf	CANInitialize@SJW& (0+255),b
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;inc\CANlib.h: 231: BRGCON1 |= SJW;
  8941  004308  0100               	movlb	0	; () banked
  8942  00430A  5187               	movf	CANInitialize@SJW& (0+255),w,b
  8943  00430C  1270               	iorwf	3952,f,c	;volatile
  8944                           
  8945                           ; BSR set to: 0
  8946                           ;inc\CANlib.h: 232: BRGCON1 |= BRP;
  8947  00430E  0100               	movlb	0	; () banked
  8948  004310  5188               	movf	CANInitialize@BRP& (0+255),w,b
  8949  004312  1270               	iorwf	3952,f,c	;volatile
  8950                           
  8951                           ; BSR set to: 0
  8952                           ;inc\CANlib.h: 234: BRGCON2 |= propSeg;
  8953  004314  0100               	movlb	0	; () banked
  8954  004316  518E               	movf	CANInitialize@propSeg& (0+255),w,b
  8955  004318  1271               	iorwf	3953,f,c	;volatile
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;inc\CANlib.h: 235: phaseSeg1 = phaseSeg1 <<3;
  8959  00431A  0100               	movlb	0	; () banked
  8960  00431C  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
  8961  00431E  42E8               	rrncf	wreg,f,c
  8962  004320  0BF8               	andlw	248
  8963  004322  0100               	movlb	0	; () banked
  8964  004324  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
  8965                           
  8966                           ; BSR set to: 0
  8967                           ;inc\CANlib.h: 236: BRGCON2 |= phaseSeg1;
  8968  004326  0100               	movlb	0	; () banked
  8969  004328  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
  8970  00432A  1271               	iorwf	3953,f,c	;volatile
  8971                           
  8972                           ; BSR set to: 0
  8973                           ;inc\CANlib.h: 238: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
  8974  00432C  0100               	movlb	0	; () banked
  8975  00432E  A589               	btfss	CANInitialize@flags& (0+255),2,b
  8976                           
  8977                           ; BSR set to: 0
  8978                           ;inc\CANlib.h: 239: BRGCON2bits.SAM= 1;
  8979  004330  8C71               	bsf	3953,6,c	;volatile
  8980                           
  8981                           ; BSR set to: 0
  8982                           ;inc\CANlib.h: 241: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
  8983  004332  0100               	movlb	0	; () banked
  8984  004334  B189               	btfsc	CANInitialize@flags& (0+255),0,b
  8985                           
  8986                           ; BSR set to: 0
  8987                           ;inc\CANlib.h: 242: BRGCON2bits.SEG2PHTS = 1;
  8988  004336  8E71               	bsf	3953,7,c	;volatile
  8989                           
  8990                           ; BSR set to: 0
  8991                           ;inc\CANlib.h: 244: BRGCON3 |= phaseSeg2;
  8992                           
  8993                           ; BSR set to: 0
  8994  004338  0100               	movlb	0	; () banked
  8995  00433A  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
  8996  00433C  1272               	iorwf	3954,f,c	;volatile
  8997                           
  8998                           ; BSR set to: 0
  8999                           ;inc\CANlib.h: 246: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
  9000  00433E  0100               	movlb	0	; () banked
  9001  004340  B389               	btfsc	CANInitialize@flags& (0+255),1,b
  9002                           
  9003                           ; BSR set to: 0
  9004                           ;inc\CANlib.h: 247: BRGCON3bits.WAKFIL = 1;
  9005  004342  8C72               	bsf	3954,6,c	;volatile
  9006                           
  9007                           ; BSR set to: 0
  9008                           ;inc\CANlib.h: 252: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
  9009                           
  9010                           ; BSR set to: 0
  9011  004344  0100               	movlb	0	; () banked
  9012  004346  5189               	movf	CANInitialize@flags& (0+255),w,b
  9013  004348  0B60               	andlw	96
  9014  00434A  6E60               	movwf	3936,c	;volatile
  9015                           
  9016                           ;inc\CANlib.h: 253: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
  9017  00434C  0100               	movlb	0	; () banked
  9018  00434E  5189               	movf	CANInitialize@flags& (0+255),w,b
  9019  004350  0B10               	andlw	16
  9020  004352  0AFF               	xorlw	255
  9021  004354  B4D8               	btfsc	status,2,c
  9022                           
  9023                           ; BSR set to: 0
  9024                           ;inc\CANlib.h: 254: RXB0CONbits.RXB0DBEN = 1;
  9025  004356  8460               	bsf	3936,2,c	;volatile
  9026                           
  9027                           ; BSR set to: 0
  9028                           ;inc\CANlib.h: 256: RXB1CON = RXB0CON;
  9029  004358  CF60 FF50          	movff	3936,3920	;volatile
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
  9033  00435C  0E00               	movlw	0
  9034  00435E  0100               	movlb	0	; () banked
  9035  004360  6F77               	movwf	CANSetMask@mask& (0+255),b
  9036  004362  0E00               	movlw	0
  9037  004364  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
  9038  004366  0E00               	movlw	0
  9039  004368  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
  9040  00436A  0E00               	movlw	0
  9041  00436C  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
  9042  00436E  0EF7               	movlw	247
  9043  004370  0100               	movlb	0	; () banked
  9044  004372  6F7B               	movwf	CANSetMask@type& (0+255),b
  9045  004374  0E01               	movlw	1
  9046  004376  ECD2  F01A         	call	_CANSetMask
  9047                           
  9048                           ;inc\CANlib.h: 261: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
  9049  00437A  0E00               	movlw	0
  9050  00437C  0100               	movlb	0	; () banked
  9051  00437E  6F77               	movwf	CANSetMask@mask& (0+255),b
  9052  004380  0E00               	movlw	0
  9053  004382  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
  9054  004384  0E00               	movlw	0
  9055  004386  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
  9056  004388  0E00               	movlw	0
  9057  00438A  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
  9058  00438C  0EF7               	movlw	247
  9059  00438E  0100               	movlb	0	; () banked
  9060  004390  6F7B               	movwf	CANSetMask@type& (0+255),b
  9061  004392  0E02               	movlw	2
  9062  004394  ECD2  F01A         	call	_CANSetMask
  9063                           
  9064                           ;inc\CANlib.h: 264: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
  9065  004398  D00F               	goto	l5021
  9066  00439A                     l5015:
  9067                           
  9068                           ;inc\CANlib.h: 267: FilterConfig1 = CAN_CONFIG_XTD_MSG;
  9069  00439A  0EF7               	movlw	247
  9070  00439C  0100               	movlb	0	; () banked
  9071  00439E  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
  9072  0043A0  D007               	goto	l5017
  9073  0043A2                     l352:
  9074                           
  9075                           ; BSR set to: 0
  9076                           ;inc\CANlib.h: 272: FilterConfig1 = CAN_CONFIG_STD_MSG;
  9077  0043A2  0100               	movlb	0	; () banked
  9078  0043A4  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
  9079                           
  9080                           ;inc\CANlib.h: 273: FilterConfig2 = CAN_CONFIG_STD_MSG;
  9081  0043A6  0100               	movlb	0	; () banked
  9082  0043A8  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
  9083                           
  9084                           ;inc\CANlib.h: 274: break;
  9085  0043AA  D028               	goto	l5023
  9086  0043AC                     l353:
  9087                           
  9088                           ; BSR set to: 0
  9089                           ;inc\CANlib.h: 276: FilterConfig1 = CAN_CONFIG_STD_MSG;
  9090  0043AC  0100               	movlb	0	; () banked
  9091  0043AE  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
  9092  0043B0                     l5017:
  9093                           
  9094                           ; BSR set to: 0
  9095                           ;inc\CANlib.h: 277: FilterConfig2 = CAN_CONFIG_XTD_MSG;
  9096  0043B0  0EF7               	movlw	247
  9097  0043B2  0100               	movlb	0	; () banked
  9098  0043B4  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
  9099                           
  9100                           ; BSR set to: 0
  9101                           ;inc\CANlib.h: 279: }
  9102                           
  9103                           ;inc\CANlib.h: 278: break;
  9104  0043B6  D022               	goto	l5023
  9105  0043B8                     l5021:
  9106  0043B8  0E9F               	movlw	159
  9107  0043BA  0100               	movlb	0	; () banked
  9108  0043BC  6F8A               	movwf	??_CANInitialize& (0+255),b
  9109  0043BE  0EFF               	movlw	255
  9110  0043C0  0100               	movlb	0	; () banked
  9111  0043C2  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
  9112  0043C4  0100               	movlb	0	; () banked
  9113  0043C6  5189               	movf	CANInitialize@flags& (0+255),w,b
  9114  0043C8  0B60               	andlw	96
  9115  0043CA  0100               	movlb	0	; () banked
  9116  0043CC  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
  9117  0043CE  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
  9118  0043D0  0100               	movlb	0	; () banked
  9119  0043D2  518A               	movf	??_CANInitialize& (0+255),w,b
  9120  0043D4  0100               	movlb	0	; () banked
  9121  0043D6  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
  9122  0043D8  0100               	movlb	0	; () banked
  9123  0043DA  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
  9124  0043DC  0100               	movlb	0	; () banked
  9125  0043DE  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
  9126                           
  9127                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9128                           ; Switch size 1, requested type "space"
  9129                           ; Number of cases is 1, Range of values is 0 to 0
  9130                           ; switch strategies available:
  9131                           ; Name         Instructions Cycles
  9132                           ; simple_byte            4     3 (average)
  9133                           ;	Chosen strategy is simple_byte
  9134  0043E0  0100               	movlb	0	; () banked
  9135  0043E2  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
  9136  0043E4  0A00               	xorlw	0	; case 0
  9137  0043E6  A4D8               	btfss	status,2,c
  9138  0043E8  D7E1               	goto	l353
  9139                           
  9140                           ; BSR set to: 0
  9141                           ; Switch size 1, requested type "space"
  9142                           ; Number of cases is 2, Range of values is 191 to 223
  9143                           ; switch strategies available:
  9144                           ; Name         Instructions Cycles
  9145                           ; simple_byte            7     4 (average)
  9146                           ;	Chosen strategy is simple_byte
  9147  0043EA  0100               	movlb	0	; () banked
  9148  0043EC  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
  9149  0043EE  0ABF               	xorlw	191	; case 191
  9150  0043F0  B4D8               	btfsc	status,2,c
  9151  0043F2  D7D7               	goto	l352
  9152  0043F4  0A60               	xorlw	96	; case 223
  9153  0043F6  B4D8               	btfsc	status,2,c
  9154  0043F8  D7D0               	goto	l5015
  9155  0043FA  D7D8               	goto	l353
  9156  0043FC                     l5023:
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
  9160  0043FC  0E00               	movlw	0
  9161  0043FE  0100               	movlb	0	; () banked
  9162  004400  6F77               	movwf	CANSetFilter@filter& (0+255),b
  9163  004402  0E00               	movlw	0
  9164  004404  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  9165  004406  0E00               	movlw	0
  9166  004408  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  9167  00440A  0E00               	movlw	0
  9168  00440C  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  9169  00440E  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  9170  004412  0E00               	movlw	0
  9171  004414  EC97  F006         	call	_CANSetFilter
  9172                           
  9173                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
  9174  004418  0E00               	movlw	0
  9175  00441A  0100               	movlb	0	; () banked
  9176  00441C  6F77               	movwf	CANSetFilter@filter& (0+255),b
  9177  00441E  0E00               	movlw	0
  9178  004420  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  9179  004422  0E00               	movlw	0
  9180  004424  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  9181  004426  0E00               	movlw	0
  9182  004428  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  9183  00442A  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
  9184  00442E  0E01               	movlw	1
  9185  004430  EC97  F006         	call	_CANSetFilter
  9186                           
  9187                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
  9188  004434  0E00               	movlw	0
  9189  004436  0100               	movlb	0	; () banked
  9190  004438  6F77               	movwf	CANSetFilter@filter& (0+255),b
  9191  00443A  0E00               	movlw	0
  9192  00443C  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  9193  00443E  0E00               	movlw	0
  9194  004440  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  9195  004442  0E00               	movlw	0
  9196  004444  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  9197  004446  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  9198  00444A  0E02               	movlw	2
  9199  00444C  EC97  F006         	call	_CANSetFilter
  9200                           
  9201                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
  9202  004450  0E00               	movlw	0
  9203  004452  0100               	movlb	0	; () banked
  9204  004454  6F77               	movwf	CANSetFilter@filter& (0+255),b
  9205  004456  0E00               	movlw	0
  9206  004458  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  9207  00445A  0E00               	movlw	0
  9208  00445C  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  9209  00445E  0E00               	movlw	0
  9210  004460  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  9211  004462  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  9212  004466  0E03               	movlw	3
  9213  004468  EC97  F006         	call	_CANSetFilter
  9214                           
  9215                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
  9216  00446C  0E00               	movlw	0
  9217  00446E  0100               	movlb	0	; () banked
  9218  004470  6F77               	movwf	CANSetFilter@filter& (0+255),b
  9219  004472  0E00               	movlw	0
  9220  004474  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  9221  004476  0E00               	movlw	0
  9222  004478  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  9223  00447A  0E00               	movlw	0
  9224  00447C  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  9225  00447E  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  9226  004482  0E04               	movlw	4
  9227  004484  EC97  F006         	call	_CANSetFilter
  9228                           
  9229                           ;inc\CANlib.h: 286: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
  9230  004488  0E00               	movlw	0
  9231  00448A  0100               	movlb	0	; () banked
  9232  00448C  6F77               	movwf	CANSetFilter@filter& (0+255),b
  9233  00448E  0E00               	movlw	0
  9234  004490  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
  9235  004492  0E00               	movlw	0
  9236  004494  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
  9237  004496  0E00               	movlw	0
  9238  004498  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
  9239  00449A  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
  9240  00449E  0E05               	movlw	5
  9241  0044A0  EC97  F006         	call	_CANSetFilter
  9242                           
  9243                           ;inc\CANlib.h: 288: CANOperationMode(CAN_OP_MODE_NORMAL);
  9244  0044A4  0E00               	movlw	0
  9245  0044A6  ECF5  F027         	call	_CANOperationMode
  9246  0044AA  0012               	return		;funcret
  9247  0044AC                     __end_of_CANInitialize:
  9248                           	opt stack 0
  9249                           tblptru	equ	0xFF8
  9250                           tblptrh	equ	0xFF7
  9251                           tblptrl	equ	0xFF6
  9252                           tablat	equ	0xFF5
  9253                           prodh	equ	0xFF4
  9254                           prodl	equ	0xFF3
  9255                           intcon	equ	0xFF2
  9256                           intcon2	equ	0xFF1
  9257                           postinc0	equ	0xFEE
  9258                           wreg	equ	0xFE8
  9259                           indf2	equ	0xFDF
  9260                           postinc2	equ	0xFDE
  9261                           postdec2	equ	0xFDD
  9262                           fsr2h	equ	0xFDA
  9263                           fsr2l	equ	0xFD9
  9264                           status	equ	0xFD8
  9265                           
  9266 ;; *************** function _CANSetMask *****************
  9267 ;; Defined at:
  9268 ;;		line 641 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  9269 ;; Parameters:    Size  Location     Type
  9270 ;;  numBuffer       1    wreg     enum E16347
  9271 ;;  mask            4   23[BANK0 ] unsigned long 
  9272 ;;  type            1   27[BANK0 ] enum E16313
  9273 ;; Auto vars:     Size  Location     Type
  9274 ;;  numBuffer       1   32[BANK0 ] enum E16347
  9275 ;;  tamp            4   33[BANK0 ] unsigned long 
  9276 ;; Return value:  Size  Location     Type
  9277 ;;		None               void
  9278 ;; Registers used:
  9279 ;;		wreg, status,2, status,0
  9280 ;; Tracked objects:
  9281 ;;		On entry : 0/0
  9282 ;;		On exit  : 0/0
  9283 ;;		Unchanged: 0/0
  9284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9285 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9286 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9287 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9288 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9289 ;;Total ram usage:       14 bytes
  9290 ;; Hardware stack levels used:    1
  9291 ;; Hardware stack levels required when called:    4
  9292 ;; This function calls:
  9293 ;;		Nothing
  9294 ;; This function is called by:
  9295 ;;		_CANInitialize
  9296 ;; This function uses a non-reentrant model
  9297 ;;
  9298                           
  9299                           	psect	text25
  9300  0035A4                     __ptext25:
  9301                           	opt stack 0
  9302  0035A4                     _CANSetMask:
  9303                           	opt stack 24
  9304                           
  9305                           ;incstack = 0
  9306                           ;CANSetMask@numBuffer stored from wreg
  9307  0035A4  0100               	movlb	0	; () banked
  9308  0035A6  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
  9309                           
  9310                           ;inc\CANlib.h: 644: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
  9311  0035A8  0100               	movlb	0	; () banked
  9312  0035AA  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
  9313  0035AC  A4D8               	btfss	status,2,c
  9314  0035AE  D056               	goto	l4421
  9315                           
  9316                           ; BSR set to: 0
  9317  0035B0  0100               	movlb	0	; () banked
  9318  0035B2  297B               	incf	CANSetMask@type& (0+255),w,b
  9319  0035B4  A4D8               	btfss	status,2,c
  9320  0035B6  D052               	goto	l4421
  9321                           
  9322                           ; BSR set to: 0
  9323                           ;inc\CANlib.h: 645: {
  9324                           ;inc\CANlib.h: 646: tamp = (mask >> 3);
  9325  0035B8  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
  9326  0035BC  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
  9327  0035C0  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
  9328  0035C4  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
  9329  0035C8  0E04               	movlw	4
  9330  0035CA  D006               	goto	u4970
  9331  0035CC                     u4975:
  9332  0035CC  0100               	movlb	0	; () banked
  9333  0035CE  90D8               	bcf	status,0,c
  9334  0035D0  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  9335  0035D2  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  9336  0035D4  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  9337  0035D6  337C               	rrcf	??_CANSetMask& (0+255),f,b
  9338  0035D8                     u4970:
  9339  0035D8  2EE8               	decfsz	wreg,f,c
  9340  0035DA  D7F8               	goto	u4975
  9341  0035DC  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9342  0035E0  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9343  0035E4  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9344  0035E8  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9345                           
  9346                           ; BSR set to: 0
  9347                           ;inc\CANlib.h: 647: tamp = tamp & 0x000000FF;
  9348  0035EC  0100               	movlb	0	; () banked
  9349  0035EE  5181               	movf	CANSetMask@tamp& (0+255),w,b
  9350  0035F0  0100               	movlb	0	; () banked
  9351  0035F2  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9352  0035F4  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  9353  0035F6  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  9354  0035F8  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  9355                           
  9356                           ; BSR set to: 0
  9357                           ;inc\CANlib.h: 648: RXM0SIDH = (unsigned char) tamp;
  9358  0035FA  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
  9359                           
  9360                           ; BSR set to: 0
  9361                           ;inc\CANlib.h: 650: tamp = mask & 0x00000007;
  9362  0035FE  0E07               	movlw	7
  9363  003600  0100               	movlb	0	; () banked
  9364  003602  1577               	andwf	CANSetMask@mask& (0+255),w,b
  9365  003604  0100               	movlb	0	; () banked
  9366  003606  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9367  003608  0E00               	movlw	0
  9368  00360A  0100               	movlb	0	; () banked
  9369  00360C  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  9370  00360E  0100               	movlb	0	; () banked
  9371  003610  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
  9372  003612  0E00               	movlw	0
  9373  003614  0100               	movlb	0	; () banked
  9374  003616  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  9375  003618  0100               	movlb	0	; () banked
  9376  00361A  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
  9377  00361C  0E00               	movlw	0
  9378  00361E  0100               	movlb	0	; () banked
  9379  003620  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  9380  003622  0100               	movlb	0	; () banked
  9381  003624  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
  9382                           
  9383                           ; BSR set to: 0
  9384                           ;inc\CANlib.h: 651: tamp = tamp << 5;
  9385  003626  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
  9386  00362A  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  9387  00362E  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  9388  003632  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  9389  003636  0E05               	movlw	5
  9390  003638                     u4985:
  9391  003638  90D8               	bcf	status,0,c
  9392  00363A  0100               	movlb	0	; () banked
  9393  00363C  377C               	rlcf	??_CANSetMask& (0+255),f,b
  9394  00363E  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  9395  003640  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  9396  003642  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  9397  003644  2EE8               	decfsz	wreg,f,c
  9398  003646  D7F8               	goto	u4985
  9399  003648  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9400  00364C  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9401  003650  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9402  003654  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9403                           
  9404                           ; BSR set to: 0
  9405                           ;inc\CANlib.h: 652: RXM0SIDL = (unsigned char) tamp;
  9406  003658  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
  9407  00365C                     l4421:
  9408                           
  9409                           ; BSR set to: 0
  9410                           ;inc\CANlib.h: 653: }
  9411                           ;inc\CANlib.h: 655: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
  9412  00365C  0E02               	movlw	2
  9413  00365E  0100               	movlb	0	; () banked
  9414  003660  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  9415  003662  A4D8               	btfss	status,2,c
  9416  003664  D056               	goto	l4437
  9417                           
  9418                           ; BSR set to: 0
  9419  003666  0100               	movlb	0	; () banked
  9420  003668  297B               	incf	CANSetMask@type& (0+255),w,b
  9421  00366A  A4D8               	btfss	status,2,c
  9422  00366C  D052               	goto	l4437
  9423                           
  9424                           ; BSR set to: 0
  9425                           ;inc\CANlib.h: 656: {
  9426                           ;inc\CANlib.h: 657: tamp = (mask >> 3);
  9427  00366E  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
  9428  003672  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
  9429  003676  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
  9430  00367A  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
  9431  00367E  0E04               	movlw	4
  9432  003680  D006               	goto	u5010
  9433  003682                     u5015:
  9434  003682  0100               	movlb	0	; () banked
  9435  003684  90D8               	bcf	status,0,c
  9436  003686  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  9437  003688  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  9438  00368A  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  9439  00368C  337C               	rrcf	??_CANSetMask& (0+255),f,b
  9440  00368E                     u5010:
  9441  00368E  2EE8               	decfsz	wreg,f,c
  9442  003690  D7F8               	goto	u5015
  9443  003692  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9444  003696  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9445  00369A  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9446  00369E  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9447                           
  9448                           ; BSR set to: 0
  9449                           ;inc\CANlib.h: 658: tamp = tamp & 0x000000FF;
  9450  0036A2  0100               	movlb	0	; () banked
  9451  0036A4  5181               	movf	CANSetMask@tamp& (0+255),w,b
  9452  0036A6  0100               	movlb	0	; () banked
  9453  0036A8  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9454  0036AA  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  9455  0036AC  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  9456  0036AE  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  9457                           
  9458                           ; BSR set to: 0
  9459                           ;inc\CANlib.h: 659: RXM1SIDH = (unsigned char) tamp;
  9460  0036B0  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  9461                           
  9462                           ; BSR set to: 0
  9463                           ;inc\CANlib.h: 661: tamp = mask & 0x00000007;
  9464  0036B4  0E07               	movlw	7
  9465  0036B6  0100               	movlb	0	; () banked
  9466  0036B8  1577               	andwf	CANSetMask@mask& (0+255),w,b
  9467  0036BA  0100               	movlb	0	; () banked
  9468  0036BC  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9469  0036BE  0E00               	movlw	0
  9470  0036C0  0100               	movlb	0	; () banked
  9471  0036C2  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  9472  0036C4  0100               	movlb	0	; () banked
  9473  0036C6  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
  9474  0036C8  0E00               	movlw	0
  9475  0036CA  0100               	movlb	0	; () banked
  9476  0036CC  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  9477  0036CE  0100               	movlb	0	; () banked
  9478  0036D0  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
  9479  0036D2  0E00               	movlw	0
  9480  0036D4  0100               	movlb	0	; () banked
  9481  0036D6  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  9482  0036D8  0100               	movlb	0	; () banked
  9483  0036DA  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
  9484                           
  9485                           ; BSR set to: 0
  9486                           ;inc\CANlib.h: 662: tamp = tamp << 5;
  9487  0036DC  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
  9488  0036E0  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  9489  0036E4  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  9490  0036E8  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  9491  0036EC  0E05               	movlw	5
  9492  0036EE                     u5025:
  9493  0036EE  90D8               	bcf	status,0,c
  9494  0036F0  0100               	movlb	0	; () banked
  9495  0036F2  377C               	rlcf	??_CANSetMask& (0+255),f,b
  9496  0036F4  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
  9497  0036F6  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
  9498  0036F8  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
  9499  0036FA  2EE8               	decfsz	wreg,f,c
  9500  0036FC  D7F8               	goto	u5025
  9501  0036FE  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9502  003702  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9503  003706  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9504  00370A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9505                           
  9506                           ; BSR set to: 0
  9507                           ;inc\CANlib.h: 663: RXM1SIDL = (unsigned char) tamp;
  9508  00370E  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
  9509  003712                     l4437:
  9510                           
  9511                           ; BSR set to: 0
  9512                           ;inc\CANlib.h: 664: }
  9513                           ;inc\CANlib.h: 666: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
  9514  003712  0100               	movlb	0	; () banked
  9515  003714  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
  9516  003716  A4D8               	btfss	status,2,c
  9517  003718  D087               	goto	l4469
  9518                           
  9519                           ; BSR set to: 0
  9520  00371A  0EF7               	movlw	247
  9521  00371C  0100               	movlb	0	; () banked
  9522  00371E  197B               	xorwf	CANSetMask@type& (0+255),w,b
  9523  003720  A4D8               	btfss	status,2,c
  9524  003722  D082               	goto	l4469
  9525                           
  9526                           ; BSR set to: 0
  9527                           ;inc\CANlib.h: 667: {
  9528                           ;inc\CANlib.h: 668: tamp = mask & 0x000000FF;
  9529  003724  0100               	movlb	0	; () banked
  9530  003726  5177               	movf	CANSetMask@mask& (0+255),w,b
  9531  003728  0100               	movlb	0	; () banked
  9532  00372A  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9533  00372C  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  9534  00372E  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  9535  003730  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  9536                           
  9537                           ; BSR set to: 0
  9538                           ;inc\CANlib.h: 669: RXM0EIDL = (unsigned char) tamp;
  9539  003732  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
  9540                           
  9541                           ; BSR set to: 0
  9542                           ;inc\CANlib.h: 671: tamp = mask & 0x0000FF00;
  9543  003736  0E00               	movlw	0
  9544  003738  0100               	movlb	0	; () banked
  9545  00373A  1577               	andwf	CANSetMask@mask& (0+255),w,b
  9546  00373C  0100               	movlb	0	; () banked
  9547  00373E  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9548  003740  0EFF               	movlw	255
  9549  003742  0100               	movlb	0	; () banked
  9550  003744  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  9551  003746  0100               	movlb	0	; () banked
  9552  003748  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
  9553  00374A  0E00               	movlw	0
  9554  00374C  0100               	movlb	0	; () banked
  9555  00374E  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  9556  003750  0100               	movlb	0	; () banked
  9557  003752  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
  9558  003754  0E00               	movlw	0
  9559  003756  0100               	movlb	0	; () banked
  9560  003758  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  9561  00375A  0100               	movlb	0	; () banked
  9562  00375C  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
  9563                           
  9564                           ; BSR set to: 0
  9565                           ;inc\CANlib.h: 672: tamp = tamp >> 8;
  9566  00375E  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
  9567  003762  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  9568  003766  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  9569  00376A  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  9570  00376E  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
  9571  003772  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
  9572  003776  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
  9573  00377A  0100               	movlb	0	; () banked
  9574  00377C  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
  9575  00377E  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9576  003782  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9577  003786  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9578  00378A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9579                           
  9580                           ; BSR set to: 0
  9581                           ;inc\CANlib.h: 673: RXM0EIDH = (unsigned char) tamp;
  9582  00378E  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
  9583                           
  9584                           ; BSR set to: 0
  9585                           ;inc\CANlib.h: 675: if (mask & 0x00010000)
  9586  003792  0100               	movlb	0	; () banked
  9587  003794  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  9588  003796  D003               	goto	l426
  9589                           
  9590                           ; BSR set to: 0
  9591                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x01;
  9592  003798  010F               	movlb	15	; () banked
  9593  00379A  8119               	bsf	25,0,b	;volatile
  9594  00379C  D002               	goto	l427
  9595  00379E                     l426:
  9596                           
  9597                           ; BSR set to: 0
  9598                           ;inc\CANlib.h: 677: else
  9599                           ;inc\CANlib.h: 678: RXM0SIDLbits.EID16 = 0x00;
  9600  00379E  010F               	movlb	15	; () banked
  9601  0037A0  9119               	bcf	25,0,b	;volatile
  9602  0037A2                     l427:
  9603                           
  9604                           ; BSR set to: 15
  9605                           ;inc\CANlib.h: 680: if (mask & 0x00020000)
  9606  0037A2  0100               	movlb	0	; () banked
  9607  0037A4  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  9608  0037A6  D003               	goto	l428
  9609                           
  9610                           ; BSR set to: 0
  9611                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x01;
  9612  0037A8  010F               	movlb	15	; () banked
  9613  0037AA  8319               	bsf	25,1,b	;volatile
  9614  0037AC  D002               	goto	l429
  9615  0037AE                     l428:
  9616                           
  9617                           ; BSR set to: 0
  9618                           ;inc\CANlib.h: 682: else
  9619                           ;inc\CANlib.h: 683: RXM0SIDLbits.EID17 = 0x00;
  9620  0037AE  010F               	movlb	15	; () banked
  9621  0037B0  9319               	bcf	25,1,b	;volatile
  9622  0037B2                     l429:
  9623                           
  9624                           ; BSR set to: 15
  9625                           ;inc\CANlib.h: 685: if (mask & 0x00040000)
  9626  0037B2  0100               	movlb	0	; () banked
  9627  0037B4  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  9628  0037B6  D003               	goto	l430
  9629                           
  9630                           ; BSR set to: 0
  9631                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x01;
  9632  0037B8  010F               	movlb	15	; () banked
  9633  0037BA  8B19               	bsf	25,5,b	;volatile
  9634  0037BC  D002               	goto	l431
  9635  0037BE                     l430:
  9636                           
  9637                           ; BSR set to: 0
  9638                           ;inc\CANlib.h: 687: else
  9639                           ;inc\CANlib.h: 688: RXM0SIDLbits.SID0 = 0x00;
  9640  0037BE  010F               	movlb	15	; () banked
  9641  0037C0  9B19               	bcf	25,5,b	;volatile
  9642  0037C2                     l431:
  9643                           
  9644                           ; BSR set to: 15
  9645                           ;inc\CANlib.h: 690: if (mask & 0x00080000)
  9646  0037C2  0100               	movlb	0	; () banked
  9647  0037C4  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  9648  0037C6  D003               	goto	l432
  9649                           
  9650                           ; BSR set to: 0
  9651                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x01;
  9652  0037C8  010F               	movlb	15	; () banked
  9653  0037CA  8D19               	bsf	25,6,b	;volatile
  9654  0037CC  D002               	goto	l433
  9655  0037CE                     l432:
  9656                           
  9657                           ; BSR set to: 0
  9658                           ;inc\CANlib.h: 692: else
  9659                           ;inc\CANlib.h: 693: RXM0SIDLbits.SID1 = 0x00;
  9660  0037CE  010F               	movlb	15	; () banked
  9661  0037D0  9D19               	bcf	25,6,b	;volatile
  9662  0037D2                     l433:
  9663                           
  9664                           ; BSR set to: 15
  9665                           ;inc\CANlib.h: 695: if (mask & 0x00100000)
  9666  0037D2  0100               	movlb	0	; () banked
  9667  0037D4  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  9668  0037D6  D003               	goto	l434
  9669                           
  9670                           ; BSR set to: 0
  9671                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x01 ;
  9672  0037D8  010F               	movlb	15	; () banked
  9673  0037DA  8F19               	bsf	25,7,b	;volatile
  9674  0037DC  D002               	goto	l4463
  9675  0037DE                     l434:
  9676                           
  9677                           ; BSR set to: 0
  9678                           ;inc\CANlib.h: 697: else
  9679                           ;inc\CANlib.h: 698: RXM0SIDLbits.SID2 = 0x00 ;
  9680  0037DE  010F               	movlb	15	; () banked
  9681  0037E0  9F19               	bcf	25,7,b	;volatile
  9682  0037E2                     l4463:
  9683                           
  9684                           ; BSR set to: 15
  9685                           ;inc\CANlib.h: 700: tamp = (mask >> 21);
  9686  0037E2  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
  9687  0037E6  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
  9688  0037EA  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
  9689  0037EE  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
  9690  0037F2  0E16               	movlw	22
  9691  0037F4  D006               	goto	u5100
  9692  0037F6                     u5105:
  9693  0037F6  0100               	movlb	0	; () banked
  9694  0037F8  90D8               	bcf	status,0,c
  9695  0037FA  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  9696  0037FC  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  9697  0037FE  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  9698  003800  337C               	rrcf	??_CANSetMask& (0+255),f,b
  9699  003802                     u5100:
  9700  003802  2EE8               	decfsz	wreg,f,c
  9701  003804  D7F8               	goto	u5105
  9702  003806  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9703  00380A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9704  00380E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9705  003812  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9706                           
  9707                           ; BSR set to: 0
  9708                           ;inc\CANlib.h: 701: tamp = tamp & 0x000000FF;
  9709  003816  0100               	movlb	0	; () banked
  9710  003818  5181               	movf	CANSetMask@tamp& (0+255),w,b
  9711  00381A  0100               	movlb	0	; () banked
  9712  00381C  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9713  00381E  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  9714  003820  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  9715  003822  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  9716                           
  9717                           ; BSR set to: 0
  9718                           ;inc\CANlib.h: 702: RXM0SIDH = (unsigned char) tamp;
  9719  003824  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
  9720  003828                     l4469:
  9721                           
  9722                           ; BSR set to: 0
  9723                           ;inc\CANlib.h: 703: }
  9724                           ;inc\CANlib.h: 705: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
  9725  003828  0E02               	movlw	2
  9726  00382A  0100               	movlb	0	; () banked
  9727  00382C  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
  9728  00382E  A4D8               	btfss	status,2,c
  9729  003830  0012               	return	
  9730                           
  9731                           ; BSR set to: 0
  9732  003832  0EF7               	movlw	247
  9733  003834  0100               	movlb	0	; () banked
  9734  003836  197B               	xorwf	CANSetMask@type& (0+255),w,b
  9735  003838  A4D8               	btfss	status,2,c
  9736  00383A  0012               	return	
  9737                           
  9738                           ; BSR set to: 0
  9739                           ;inc\CANlib.h: 706: {
  9740                           ;inc\CANlib.h: 707: tamp = mask & 0x000000FF;
  9741  00383C  0100               	movlb	0	; () banked
  9742  00383E  5177               	movf	CANSetMask@mask& (0+255),w,b
  9743  003840  0100               	movlb	0	; () banked
  9744  003842  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9745  003844  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  9746  003846  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  9747  003848  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  9748                           
  9749                           ; BSR set to: 0
  9750                           ;inc\CANlib.h: 708: RXM1EIDL = (unsigned char) tamp;
  9751  00384A  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
  9752                           
  9753                           ; BSR set to: 0
  9754                           ;inc\CANlib.h: 710: tamp = mask & 0x0000FF00;
  9755  00384E  0E00               	movlw	0
  9756  003850  0100               	movlb	0	; () banked
  9757  003852  1577               	andwf	CANSetMask@mask& (0+255),w,b
  9758  003854  0100               	movlb	0	; () banked
  9759  003856  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9760  003858  0EFF               	movlw	255
  9761  00385A  0100               	movlb	0	; () banked
  9762  00385C  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
  9763  00385E  0100               	movlb	0	; () banked
  9764  003860  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
  9765  003862  0E00               	movlw	0
  9766  003864  0100               	movlb	0	; () banked
  9767  003866  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
  9768  003868  0100               	movlb	0	; () banked
  9769  00386A  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
  9770  00386C  0E00               	movlw	0
  9771  00386E  0100               	movlb	0	; () banked
  9772  003870  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
  9773  003872  0100               	movlb	0	; () banked
  9774  003874  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
  9775                           
  9776                           ; BSR set to: 0
  9777                           ;inc\CANlib.h: 711: tamp = tamp >> 8;
  9778  003876  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
  9779  00387A  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
  9780  00387E  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
  9781  003882  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
  9782  003886  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
  9783  00388A  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
  9784  00388E  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
  9785  003892  0100               	movlb	0	; () banked
  9786  003894  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
  9787  003896  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9788  00389A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9789  00389E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9790  0038A2  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9791                           
  9792                           ; BSR set to: 0
  9793                           ;inc\CANlib.h: 712: RXM1EIDH = (unsigned char) tamp;
  9794  0038A6  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
  9795                           
  9796                           ; BSR set to: 0
  9797                           ;inc\CANlib.h: 714: if (mask & 0x00010000)
  9798  0038AA  0100               	movlb	0	; () banked
  9799  0038AC  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
  9800  0038AE  D003               	goto	l437
  9801                           
  9802                           ; BSR set to: 0
  9803                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x01;
  9804  0038B0  010F               	movlb	15	; () banked
  9805  0038B2  811D               	bsf	29,0,b	;volatile
  9806  0038B4  D002               	goto	l438
  9807  0038B6                     l437:
  9808                           
  9809                           ; BSR set to: 0
  9810                           ;inc\CANlib.h: 716: else
  9811                           ;inc\CANlib.h: 717: RXM1SIDLbits.EID16 = 0x00;
  9812  0038B6  010F               	movlb	15	; () banked
  9813  0038B8  911D               	bcf	29,0,b	;volatile
  9814  0038BA                     l438:
  9815                           
  9816                           ; BSR set to: 15
  9817                           ;inc\CANlib.h: 719: if (mask & 0x00020000)
  9818  0038BA  0100               	movlb	0	; () banked
  9819  0038BC  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
  9820  0038BE  D003               	goto	l439
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x01;
  9824  0038C0  010F               	movlb	15	; () banked
  9825  0038C2  831D               	bsf	29,1,b	;volatile
  9826  0038C4  D002               	goto	l440
  9827  0038C6                     l439:
  9828                           
  9829                           ; BSR set to: 0
  9830                           ;inc\CANlib.h: 721: else
  9831                           ;inc\CANlib.h: 722: RXM1SIDLbits.EID17 = 0x00;
  9832  0038C6  010F               	movlb	15	; () banked
  9833  0038C8  931D               	bcf	29,1,b	;volatile
  9834  0038CA                     l440:
  9835                           
  9836                           ; BSR set to: 15
  9837                           ;inc\CANlib.h: 724: if (mask & 0x00040000)
  9838  0038CA  0100               	movlb	0	; () banked
  9839  0038CC  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
  9840  0038CE  D003               	goto	l441
  9841                           
  9842                           ; BSR set to: 0
  9843                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x01;
  9844  0038D0  010F               	movlb	15	; () banked
  9845  0038D2  8B1D               	bsf	29,5,b	;volatile
  9846  0038D4  D002               	goto	l442
  9847  0038D6                     l441:
  9848                           
  9849                           ; BSR set to: 0
  9850                           ;inc\CANlib.h: 726: else
  9851                           ;inc\CANlib.h: 727: RXM1SIDLbits.SID0 = 0x00;
  9852  0038D6  010F               	movlb	15	; () banked
  9853  0038D8  9B1D               	bcf	29,5,b	;volatile
  9854  0038DA                     l442:
  9855                           
  9856                           ; BSR set to: 15
  9857                           ;inc\CANlib.h: 729: if (mask & 0x00080000)
  9858  0038DA  0100               	movlb	0	; () banked
  9859  0038DC  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
  9860  0038DE  D003               	goto	l443
  9861                           
  9862                           ; BSR set to: 0
  9863                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x01;
  9864  0038E0  010F               	movlb	15	; () banked
  9865  0038E2  8D1D               	bsf	29,6,b	;volatile
  9866  0038E4  D002               	goto	l444
  9867  0038E6                     l443:
  9868                           
  9869                           ; BSR set to: 0
  9870                           ;inc\CANlib.h: 731: else
  9871                           ;inc\CANlib.h: 732: RXM1SIDLbits.SID1 = 0x00;
  9872  0038E6  010F               	movlb	15	; () banked
  9873  0038E8  9D1D               	bcf	29,6,b	;volatile
  9874  0038EA                     l444:
  9875                           
  9876                           ; BSR set to: 15
  9877                           ;inc\CANlib.h: 734: if (mask & 0x00100000)
  9878  0038EA  0100               	movlb	0	; () banked
  9879  0038EC  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
  9880  0038EE  D003               	goto	l445
  9881                           
  9882                           ; BSR set to: 0
  9883                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x01 ;
  9884  0038F0  010F               	movlb	15	; () banked
  9885  0038F2  8F1D               	bsf	29,7,b	;volatile
  9886  0038F4  D002               	goto	l4495
  9887  0038F6                     l445:
  9888                           
  9889                           ; BSR set to: 0
  9890                           ;inc\CANlib.h: 736: else
  9891                           ;inc\CANlib.h: 737: RXM1SIDLbits.SID2 = 0x00 ;
  9892  0038F6  010F               	movlb	15	; () banked
  9893  0038F8  9F1D               	bcf	29,7,b	;volatile
  9894  0038FA                     l4495:
  9895                           
  9896                           ; BSR set to: 15
  9897                           ;inc\CANlib.h: 739: tamp = (mask >> 21);
  9898  0038FA  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
  9899  0038FE  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
  9900  003902  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
  9901  003906  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
  9902  00390A  0E16               	movlw	22
  9903  00390C  D006               	goto	u5180
  9904  00390E                     u5185:
  9905  00390E  0100               	movlb	0	; () banked
  9906  003910  90D8               	bcf	status,0,c
  9907  003912  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
  9908  003914  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
  9909  003916  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
  9910  003918  337C               	rrcf	??_CANSetMask& (0+255),f,b
  9911  00391A                     u5180:
  9912  00391A  2EE8               	decfsz	wreg,f,c
  9913  00391C  D7F8               	goto	u5185
  9914  00391E  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
  9915  003922  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
  9916  003926  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
  9917  00392A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
  9918                           
  9919                           ; BSR set to: 0
  9920                           ;inc\CANlib.h: 740: tamp = tamp & 0x000000FF;
  9921  00392E  0100               	movlb	0	; () banked
  9922  003930  5181               	movf	CANSetMask@tamp& (0+255),w,b
  9923  003932  0100               	movlb	0	; () banked
  9924  003934  6F81               	movwf	CANSetMask@tamp& (0+255),b
  9925  003936  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
  9926  003938  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
  9927  00393A  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
  9928                           
  9929                           ; BSR set to: 0
  9930                           ;inc\CANlib.h: 741: RXM1SIDH = (unsigned char) tamp;
  9931  00393C  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
  9932  003940  0012               	return	
  9933  003942                     __end_of_CANSetMask:
  9934                           	opt stack 0
  9935                           tblptru	equ	0xFF8
  9936                           tblptrh	equ	0xFF7
  9937                           tblptrl	equ	0xFF6
  9938                           tablat	equ	0xFF5
  9939                           prodh	equ	0xFF4
  9940                           prodl	equ	0xFF3
  9941                           intcon	equ	0xFF2
  9942                           intcon2	equ	0xFF1
  9943                           postinc0	equ	0xFEE
  9944                           wreg	equ	0xFE8
  9945                           indf2	equ	0xFDF
  9946                           postinc2	equ	0xFDE
  9947                           postdec2	equ	0xFDD
  9948                           fsr2h	equ	0xFDA
  9949                           fsr2l	equ	0xFD9
  9950                           status	equ	0xFD8
  9951                           
  9952 ;; *************** function _CANSetFilter *****************
  9953 ;; Defined at:
  9954 ;;		line 749 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
  9955 ;; Parameters:    Size  Location     Type
  9956 ;;  numBuffer       1    wreg     enum E16350
  9957 ;;  filter          4   23[BANK0 ] unsigned long 
  9958 ;;  type            1   27[BANK0 ] enum E16313
  9959 ;; Auto vars:     Size  Location     Type
  9960 ;;  numBuffer       1   32[BANK0 ] enum E16350
  9961 ;;  tamp            4   33[BANK0 ] unsigned long 
  9962 ;; Return value:  Size  Location     Type
  9963 ;;		None               void
  9964 ;; Registers used:
  9965 ;;		wreg, status,2, status,0
  9966 ;; Tracked objects:
  9967 ;;		On entry : 0/0
  9968 ;;		On exit  : 0/0
  9969 ;;		Unchanged: 0/0
  9970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9971 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9972 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9973 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9974 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9975 ;;Total ram usage:       14 bytes
  9976 ;; Hardware stack levels used:    1
  9977 ;; Hardware stack levels required when called:    4
  9978 ;; This function calls:
  9979 ;;		Nothing
  9980 ;; This function is called by:
  9981 ;;		_CANInitialize
  9982 ;; This function uses a non-reentrant model
  9983 ;;
  9984                           
  9985                           	psect	text26
  9986  000D2E                     __ptext26:
  9987                           	opt stack 0
  9988  000D2E                     _CANSetFilter:
  9989                           	opt stack 24
  9990                           
  9991                           ; BSR set to: 0
  9992                           ;incstack = 0
  9993                           ;CANSetFilter@numBuffer stored from wreg
  9994  000D2E  0100               	movlb	0	; () banked
  9995  000D30  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
  9996                           
  9997                           ;inc\CANlib.h: 751: unsigned long tamp;
  9998                           ;inc\CANlib.h: 753: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
  9999  000D32  0100               	movlb	0	; () banked
 10000  000D34  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 10001  000D36  0100               	movlb	0	; () banked
 10002  000D38  A4D8               	btfss	status,2,c
 10003  000D3A  D058               	goto	l4519
 10004                           
 10005                           ; BSR set to: 0
 10006  000D3C  0100               	movlb	0	; () banked
 10007  000D3E  297B               	incf	CANSetFilter@type& (0+255),w,b
 10008  000D40  A4D8               	btfss	status,2,c
 10009  000D42  D054               	goto	l4519
 10010                           
 10011                           ; BSR set to: 0
 10012                           ;inc\CANlib.h: 754: {
 10013                           ;inc\CANlib.h: 755: RXF0SIDLbits.EXIDEN = 0x00;
 10014  000D44  010F               	movlb	15	; () banked
 10015  000D46  9701               	bcf	1,3,b	;volatile
 10016                           
 10017                           ; BSR set to: 15
 10018                           ;inc\CANlib.h: 757: tamp = (filter >> 3);
 10019  000D48  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10020  000D4C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10021  000D50  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10022  000D54  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10023  000D58  0E04               	movlw	4
 10024  000D5A  D006               	goto	u5210
 10025  000D5C                     u5215:
 10026  000D5C  0100               	movlb	0	; () banked
 10027  000D5E  90D8               	bcf	status,0,c
 10028  000D60  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10029  000D62  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10030  000D64  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10031  000D66  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10032  000D68                     u5210:
 10033  000D68  2EE8               	decfsz	wreg,f,c
 10034  000D6A  D7F8               	goto	u5215
 10035  000D6C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10036  000D70  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10037  000D74  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10038  000D78  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10039                           
 10040                           ; BSR set to: 0
 10041                           ;inc\CANlib.h: 758: tamp = tamp & 0x000000FF;
 10042  000D7C  0100               	movlb	0	; () banked
 10043  000D7E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10044  000D80  0100               	movlb	0	; () banked
 10045  000D82  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10046  000D84  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10047  000D86  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10048  000D88  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10049                           
 10050                           ; BSR set to: 0
 10051                           ;inc\CANlib.h: 759: RXF0SIDH = (unsigned char) tamp;
 10052  000D8A  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 10053                           
 10054                           ; BSR set to: 0
 10055                           ;inc\CANlib.h: 761: tamp = filter & 0x00000007;
 10056  000D8E  0E07               	movlw	7
 10057  000D90  0100               	movlb	0	; () banked
 10058  000D92  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10059  000D94  0100               	movlb	0	; () banked
 10060  000D96  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10061  000D98  0E00               	movlw	0
 10062  000D9A  0100               	movlb	0	; () banked
 10063  000D9C  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10064  000D9E  0100               	movlb	0	; () banked
 10065  000DA0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10066  000DA2  0E00               	movlw	0
 10067  000DA4  0100               	movlb	0	; () banked
 10068  000DA6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10069  000DA8  0100               	movlb	0	; () banked
 10070  000DAA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10071  000DAC  0E00               	movlw	0
 10072  000DAE  0100               	movlb	0	; () banked
 10073  000DB0  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10074  000DB2  0100               	movlb	0	; () banked
 10075  000DB4  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10076                           
 10077                           ; BSR set to: 0
 10078                           ;inc\CANlib.h: 762: tamp = tamp << 5;
 10079  000DB6  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10080  000DBA  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10081  000DBE  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10082  000DC2  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10083  000DC6  0E05               	movlw	5
 10084  000DC8                     u5225:
 10085  000DC8  90D8               	bcf	status,0,c
 10086  000DCA  0100               	movlb	0	; () banked
 10087  000DCC  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 10088  000DCE  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 10089  000DD0  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 10090  000DD2  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 10091  000DD4  2EE8               	decfsz	wreg,f,c
 10092  000DD6  D7F8               	goto	u5225
 10093  000DD8  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10094  000DDC  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10095  000DE0  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10096  000DE4  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10097                           
 10098                           ; BSR set to: 0
 10099                           ;inc\CANlib.h: 763: RXF0SIDL = (unsigned char) tamp;
 10100  000DE8  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
 10101  000DEC                     l4519:
 10102                           
 10103                           ; BSR set to: 0
 10104                           ;inc\CANlib.h: 764: }
 10105                           ;inc\CANlib.h: 766: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
 10106  000DEC  0100               	movlb	0	; () banked
 10107  000DEE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 10108  000DF0  A4D8               	btfss	status,2,c
 10109  000DF2  D058               	goto	l4537
 10110                           
 10111                           ; BSR set to: 0
 10112  000DF4  0100               	movlb	0	; () banked
 10113  000DF6  297B               	incf	CANSetFilter@type& (0+255),w,b
 10114  000DF8  A4D8               	btfss	status,2,c
 10115  000DFA  D054               	goto	l4537
 10116                           
 10117                           ; BSR set to: 0
 10118                           ;inc\CANlib.h: 767: {
 10119                           ;inc\CANlib.h: 768: RXF1SIDLbits.EXIDEN = 0x00;
 10120  000DFC  010F               	movlb	15	; () banked
 10121  000DFE  9705               	bcf	5,3,b	;volatile
 10122                           
 10123                           ; BSR set to: 15
 10124                           ;inc\CANlib.h: 770: tamp = (filter >> 3);
 10125  000E00  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10126  000E04  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10127  000E08  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10128  000E0C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10129  000E10  0E04               	movlw	4
 10130  000E12  D006               	goto	u5250
 10131  000E14                     u5255:
 10132  000E14  0100               	movlb	0	; () banked
 10133  000E16  90D8               	bcf	status,0,c
 10134  000E18  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10135  000E1A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10136  000E1C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10137  000E1E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10138  000E20                     u5250:
 10139  000E20  2EE8               	decfsz	wreg,f,c
 10140  000E22  D7F8               	goto	u5255
 10141  000E24  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10142  000E28  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10143  000E2C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10144  000E30  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10145                           
 10146                           ; BSR set to: 0
 10147                           ;inc\CANlib.h: 771: tamp = tamp & 0x000000FF;
 10148  000E34  0100               	movlb	0	; () banked
 10149  000E36  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10150  000E38  0100               	movlb	0	; () banked
 10151  000E3A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10152  000E3C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10153  000E3E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10154  000E40  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10155                           
 10156                           ; BSR set to: 0
 10157                           ;inc\CANlib.h: 772: RXF1SIDH = (unsigned char) tamp;
 10158  000E42  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 10159                           
 10160                           ; BSR set to: 0
 10161                           ;inc\CANlib.h: 774: tamp = filter & 0x00000007;
 10162  000E46  0E07               	movlw	7
 10163  000E48  0100               	movlb	0	; () banked
 10164  000E4A  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10165  000E4C  0100               	movlb	0	; () banked
 10166  000E4E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10167  000E50  0E00               	movlw	0
 10168  000E52  0100               	movlb	0	; () banked
 10169  000E54  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10170  000E56  0100               	movlb	0	; () banked
 10171  000E58  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10172  000E5A  0E00               	movlw	0
 10173  000E5C  0100               	movlb	0	; () banked
 10174  000E5E  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10175  000E60  0100               	movlb	0	; () banked
 10176  000E62  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10177  000E64  0E00               	movlw	0
 10178  000E66  0100               	movlb	0	; () banked
 10179  000E68  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10180  000E6A  0100               	movlb	0	; () banked
 10181  000E6C  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10182                           
 10183                           ; BSR set to: 0
 10184                           ;inc\CANlib.h: 775: tamp = tamp << 5;
 10185  000E6E  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10186  000E72  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10187  000E76  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10188  000E7A  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10189  000E7E  0E05               	movlw	5
 10190  000E80                     u5265:
 10191  000E80  90D8               	bcf	status,0,c
 10192  000E82  0100               	movlb	0	; () banked
 10193  000E84  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 10194  000E86  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 10195  000E88  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 10196  000E8A  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 10197  000E8C  2EE8               	decfsz	wreg,f,c
 10198  000E8E  D7F8               	goto	u5265
 10199  000E90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10200  000E94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10201  000E98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10202  000E9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10203                           
 10204                           ; BSR set to: 0
 10205                           ;inc\CANlib.h: 776: RXF1SIDL = (unsigned char) tamp;
 10206  000EA0  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
 10207  000EA4                     l4537:
 10208                           
 10209                           ; BSR set to: 0
 10210                           ;inc\CANlib.h: 777: }
 10211                           ;inc\CANlib.h: 779: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
 10212  000EA4  0E02               	movlw	2
 10213  000EA6  0100               	movlb	0	; () banked
 10214  000EA8  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10215  000EAA  A4D8               	btfss	status,2,c
 10216  000EAC  D058               	goto	l4555
 10217                           
 10218                           ; BSR set to: 0
 10219  000EAE  0100               	movlb	0	; () banked
 10220  000EB0  297B               	incf	CANSetFilter@type& (0+255),w,b
 10221  000EB2  A4D8               	btfss	status,2,c
 10222  000EB4  D054               	goto	l4555
 10223                           
 10224                           ; BSR set to: 0
 10225                           ;inc\CANlib.h: 780: {
 10226                           ;inc\CANlib.h: 781: RXF2SIDLbits.EXIDEN = 0x00;
 10227  000EB6  010F               	movlb	15	; () banked
 10228  000EB8  9709               	bcf	9,3,b	;volatile
 10229                           
 10230                           ; BSR set to: 15
 10231                           ;inc\CANlib.h: 783: tamp = (filter >> 3);
 10232  000EBA  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10233  000EBE  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10234  000EC2  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10235  000EC6  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10236  000ECA  0E04               	movlw	4
 10237  000ECC  D006               	goto	u5290
 10238  000ECE                     u5295:
 10239  000ECE  0100               	movlb	0	; () banked
 10240  000ED0  90D8               	bcf	status,0,c
 10241  000ED2  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10242  000ED4  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10243  000ED6  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10244  000ED8  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10245  000EDA                     u5290:
 10246  000EDA  2EE8               	decfsz	wreg,f,c
 10247  000EDC  D7F8               	goto	u5295
 10248  000EDE  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10249  000EE2  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10250  000EE6  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10251  000EEA  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10252                           
 10253                           ; BSR set to: 0
 10254                           ;inc\CANlib.h: 784: tamp = tamp & 0x000000FF;
 10255  000EEE  0100               	movlb	0	; () banked
 10256  000EF0  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10257  000EF2  0100               	movlb	0	; () banked
 10258  000EF4  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10259  000EF6  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10260  000EF8  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10261  000EFA  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10262                           
 10263                           ; BSR set to: 0
 10264                           ;inc\CANlib.h: 785: RXF2SIDH = (unsigned char) tamp;
 10265  000EFC  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 10266                           
 10267                           ; BSR set to: 0
 10268                           ;inc\CANlib.h: 787: tamp = filter & 0x00000007;
 10269  000F00  0E07               	movlw	7
 10270  000F02  0100               	movlb	0	; () banked
 10271  000F04  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10272  000F06  0100               	movlb	0	; () banked
 10273  000F08  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10274  000F0A  0E00               	movlw	0
 10275  000F0C  0100               	movlb	0	; () banked
 10276  000F0E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10277  000F10  0100               	movlb	0	; () banked
 10278  000F12  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10279  000F14  0E00               	movlw	0
 10280  000F16  0100               	movlb	0	; () banked
 10281  000F18  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10282  000F1A  0100               	movlb	0	; () banked
 10283  000F1C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10284  000F1E  0E00               	movlw	0
 10285  000F20  0100               	movlb	0	; () banked
 10286  000F22  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10287  000F24  0100               	movlb	0	; () banked
 10288  000F26  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10289                           
 10290                           ; BSR set to: 0
 10291                           ;inc\CANlib.h: 788: tamp = tamp << 5;
 10292  000F28  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10293  000F2C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10294  000F30  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10295  000F34  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10296  000F38  0E05               	movlw	5
 10297  000F3A                     u5305:
 10298  000F3A  90D8               	bcf	status,0,c
 10299  000F3C  0100               	movlb	0	; () banked
 10300  000F3E  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 10301  000F40  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 10302  000F42  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 10303  000F44  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 10304  000F46  2EE8               	decfsz	wreg,f,c
 10305  000F48  D7F8               	goto	u5305
 10306  000F4A  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10307  000F4E  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10308  000F52  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10309  000F56  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10310                           
 10311                           ; BSR set to: 0
 10312                           ;inc\CANlib.h: 789: RXF2SIDL = (unsigned char) tamp;
 10313  000F5A  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
 10314  000F5E                     l4555:
 10315                           
 10316                           ; BSR set to: 0
 10317                           ;inc\CANlib.h: 790: }
 10318                           ;inc\CANlib.h: 792: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
 10319  000F5E  0E03               	movlw	3
 10320  000F60  0100               	movlb	0	; () banked
 10321  000F62  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10322  000F64  A4D8               	btfss	status,2,c
 10323  000F66  D058               	goto	l4573
 10324                           
 10325                           ; BSR set to: 0
 10326  000F68  0100               	movlb	0	; () banked
 10327  000F6A  297B               	incf	CANSetFilter@type& (0+255),w,b
 10328  000F6C  A4D8               	btfss	status,2,c
 10329  000F6E  D054               	goto	l4573
 10330                           
 10331                           ; BSR set to: 0
 10332                           ;inc\CANlib.h: 793: {
 10333                           ;inc\CANlib.h: 794: RXF3SIDLbits.EXIDEN = 0x00;
 10334  000F70  010F               	movlb	15	; () banked
 10335  000F72  970D               	bcf	13,3,b	;volatile
 10336                           
 10337                           ; BSR set to: 15
 10338                           ;inc\CANlib.h: 796: tamp = (filter >> 3);
 10339  000F74  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10340  000F78  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10341  000F7C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10342  000F80  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10343  000F84  0E04               	movlw	4
 10344  000F86  D006               	goto	u5330
 10345  000F88                     u5335:
 10346  000F88  0100               	movlb	0	; () banked
 10347  000F8A  90D8               	bcf	status,0,c
 10348  000F8C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10349  000F8E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10350  000F90  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10351  000F92  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10352  000F94                     u5330:
 10353  000F94  2EE8               	decfsz	wreg,f,c
 10354  000F96  D7F8               	goto	u5335
 10355  000F98  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10356  000F9C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10357  000FA0  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10358  000FA4  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10359                           
 10360                           ; BSR set to: 0
 10361                           ;inc\CANlib.h: 797: tamp = tamp & 0x000000FF;
 10362  000FA8  0100               	movlb	0	; () banked
 10363  000FAA  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10364  000FAC  0100               	movlb	0	; () banked
 10365  000FAE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10366  000FB0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10367  000FB2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10368  000FB4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10369                           
 10370                           ; BSR set to: 0
 10371                           ;inc\CANlib.h: 798: RXF3SIDH = (unsigned char) tamp;
 10372  000FB6  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 10373                           
 10374                           ; BSR set to: 0
 10375                           ;inc\CANlib.h: 800: tamp = filter & 0x00000007;
 10376  000FBA  0E07               	movlw	7
 10377  000FBC  0100               	movlb	0	; () banked
 10378  000FBE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10379  000FC0  0100               	movlb	0	; () banked
 10380  000FC2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10381  000FC4  0E00               	movlw	0
 10382  000FC6  0100               	movlb	0	; () banked
 10383  000FC8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10384  000FCA  0100               	movlb	0	; () banked
 10385  000FCC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10386  000FCE  0E00               	movlw	0
 10387  000FD0  0100               	movlb	0	; () banked
 10388  000FD2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10389  000FD4  0100               	movlb	0	; () banked
 10390  000FD6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10391  000FD8  0E00               	movlw	0
 10392  000FDA  0100               	movlb	0	; () banked
 10393  000FDC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10394  000FDE  0100               	movlb	0	; () banked
 10395  000FE0  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10396                           
 10397                           ; BSR set to: 0
 10398                           ;inc\CANlib.h: 801: tamp = tamp << 5;
 10399  000FE2  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10400  000FE6  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10401  000FEA  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10402  000FEE  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10403  000FF2  0E05               	movlw	5
 10404  000FF4                     u5345:
 10405  000FF4  90D8               	bcf	status,0,c
 10406  000FF6  0100               	movlb	0	; () banked
 10407  000FF8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 10408  000FFA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 10409  000FFC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 10410  000FFE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 10411  001000  2EE8               	decfsz	wreg,f,c
 10412  001002  D7F8               	goto	u5345
 10413  001004  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10414  001008  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10415  00100C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10416  001010  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10417                           
 10418                           ; BSR set to: 0
 10419                           ;inc\CANlib.h: 802: RXF3SIDL = (unsigned char) tamp;
 10420  001014  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
 10421  001018                     l4573:
 10422                           
 10423                           ; BSR set to: 0
 10424                           ;inc\CANlib.h: 803: }
 10425                           ;inc\CANlib.h: 805: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
 10426  001018  0E04               	movlw	4
 10427  00101A  0100               	movlb	0	; () banked
 10428  00101C  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10429  00101E  A4D8               	btfss	status,2,c
 10430  001020  D058               	goto	l4591
 10431                           
 10432                           ; BSR set to: 0
 10433  001022  0100               	movlb	0	; () banked
 10434  001024  297B               	incf	CANSetFilter@type& (0+255),w,b
 10435  001026  A4D8               	btfss	status,2,c
 10436  001028  D054               	goto	l4591
 10437                           
 10438                           ; BSR set to: 0
 10439                           ;inc\CANlib.h: 806: {
 10440                           ;inc\CANlib.h: 807: RXF4SIDLbits.EXIDEN = 0x00;
 10441  00102A  010F               	movlb	15	; () banked
 10442  00102C  9711               	bcf	17,3,b	;volatile
 10443                           
 10444                           ; BSR set to: 15
 10445                           ;inc\CANlib.h: 809: tamp = (filter >> 3);
 10446  00102E  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10447  001032  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10448  001036  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10449  00103A  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10450  00103E  0E04               	movlw	4
 10451  001040  D006               	goto	u5370
 10452  001042                     u5375:
 10453  001042  0100               	movlb	0	; () banked
 10454  001044  90D8               	bcf	status,0,c
 10455  001046  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10456  001048  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10457  00104A  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10458  00104C  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10459  00104E                     u5370:
 10460  00104E  2EE8               	decfsz	wreg,f,c
 10461  001050  D7F8               	goto	u5375
 10462  001052  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10463  001056  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10464  00105A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10465  00105E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10466                           
 10467                           ; BSR set to: 0
 10468                           ;inc\CANlib.h: 810: tamp = tamp & 0x000000FF;
 10469  001062  0100               	movlb	0	; () banked
 10470  001064  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10471  001066  0100               	movlb	0	; () banked
 10472  001068  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10473  00106A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10474  00106C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10475  00106E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10476                           
 10477                           ; BSR set to: 0
 10478                           ;inc\CANlib.h: 811: RXF4SIDH = (unsigned char) tamp;
 10479  001070  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 10480                           
 10481                           ; BSR set to: 0
 10482                           ;inc\CANlib.h: 813: tamp = filter & 0x00000007;
 10483  001074  0E07               	movlw	7
 10484  001076  0100               	movlb	0	; () banked
 10485  001078  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10486  00107A  0100               	movlb	0	; () banked
 10487  00107C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10488  00107E  0E00               	movlw	0
 10489  001080  0100               	movlb	0	; () banked
 10490  001082  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10491  001084  0100               	movlb	0	; () banked
 10492  001086  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10493  001088  0E00               	movlw	0
 10494  00108A  0100               	movlb	0	; () banked
 10495  00108C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10496  00108E  0100               	movlb	0	; () banked
 10497  001090  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10498  001092  0E00               	movlw	0
 10499  001094  0100               	movlb	0	; () banked
 10500  001096  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10501  001098  0100               	movlb	0	; () banked
 10502  00109A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10503                           
 10504                           ; BSR set to: 0
 10505                           ;inc\CANlib.h: 814: tamp = tamp << 5;
 10506  00109C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10507  0010A0  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10508  0010A4  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10509  0010A8  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10510  0010AC  0E05               	movlw	5
 10511  0010AE                     u5385:
 10512  0010AE  90D8               	bcf	status,0,c
 10513  0010B0  0100               	movlb	0	; () banked
 10514  0010B2  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 10515  0010B4  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 10516  0010B6  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 10517  0010B8  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 10518  0010BA  2EE8               	decfsz	wreg,f,c
 10519  0010BC  D7F8               	goto	u5385
 10520  0010BE  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10521  0010C2  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10522  0010C6  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10523  0010CA  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10524                           
 10525                           ; BSR set to: 0
 10526                           ;inc\CANlib.h: 815: RXF4SIDL = (unsigned char) tamp;
 10527  0010CE  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 10528  0010D2                     l4591:
 10529                           
 10530                           ; BSR set to: 0
 10531                           ;inc\CANlib.h: 816: }
 10532                           ;inc\CANlib.h: 818: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 10533  0010D2  0E05               	movlw	5
 10534  0010D4  0100               	movlb	0	; () banked
 10535  0010D6  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 10536  0010D8  A4D8               	btfss	status,2,c
 10537  0010DA  D058               	goto	l4609
 10538                           
 10539                           ; BSR set to: 0
 10540  0010DC  0100               	movlb	0	; () banked
 10541  0010DE  297B               	incf	CANSetFilter@type& (0+255),w,b
 10542  0010E0  A4D8               	btfss	status,2,c
 10543  0010E2  D054               	goto	l4609
 10544                           
 10545                           ; BSR set to: 0
 10546                           ;inc\CANlib.h: 819: {
 10547                           ;inc\CANlib.h: 820: RXF5SIDLbits.EXIDEN = 0x00;
 10548  0010E4  010F               	movlb	15	; () banked
 10549  0010E6  9715               	bcf	21,3,b	;volatile
 10550                           
 10551                           ; BSR set to: 15
 10552                           ;inc\CANlib.h: 822: tamp = (filter >> 3);
 10553  0010E8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10554  0010EC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10555  0010F0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10556  0010F4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10557  0010F8  0E04               	movlw	4
 10558  0010FA  D006               	goto	u5410
 10559  0010FC                     u5415:
 10560  0010FC  0100               	movlb	0	; () banked
 10561  0010FE  90D8               	bcf	status,0,c
 10562  001100  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10563  001102  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10564  001104  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10565  001106  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10566  001108                     u5410:
 10567  001108  2EE8               	decfsz	wreg,f,c
 10568  00110A  D7F8               	goto	u5415
 10569  00110C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10570  001110  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10571  001114  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10572  001118  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10573                           
 10574                           ; BSR set to: 0
 10575                           ;inc\CANlib.h: 823: tamp = tamp & 0x000000FF;
 10576  00111C  0100               	movlb	0	; () banked
 10577  00111E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10578  001120  0100               	movlb	0	; () banked
 10579  001122  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10580  001124  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10581  001126  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10582  001128  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10583                           
 10584                           ; BSR set to: 0
 10585                           ;inc\CANlib.h: 824: RXF5SIDH = (unsigned char) tamp;
 10586  00112A  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 10587                           
 10588                           ; BSR set to: 0
 10589                           ;inc\CANlib.h: 826: tamp = filter & 0x00000007;
 10590  00112E  0E07               	movlw	7
 10591  001130  0100               	movlb	0	; () banked
 10592  001132  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10593  001134  0100               	movlb	0	; () banked
 10594  001136  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10595  001138  0E00               	movlw	0
 10596  00113A  0100               	movlb	0	; () banked
 10597  00113C  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10598  00113E  0100               	movlb	0	; () banked
 10599  001140  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10600  001142  0E00               	movlw	0
 10601  001144  0100               	movlb	0	; () banked
 10602  001146  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10603  001148  0100               	movlb	0	; () banked
 10604  00114A  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10605  00114C  0E00               	movlw	0
 10606  00114E  0100               	movlb	0	; () banked
 10607  001150  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10608  001152  0100               	movlb	0	; () banked
 10609  001154  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10610                           
 10611                           ; BSR set to: 0
 10612                           ;inc\CANlib.h: 827: tamp = tamp << 5;
 10613  001156  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10614  00115A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10615  00115E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10616  001162  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10617  001166  0E05               	movlw	5
 10618  001168                     u5425:
 10619  001168  90D8               	bcf	status,0,c
 10620  00116A  0100               	movlb	0	; () banked
 10621  00116C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 10622  00116E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 10623  001170  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 10624  001172  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 10625  001174  2EE8               	decfsz	wreg,f,c
 10626  001176  D7F8               	goto	u5425
 10627  001178  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10628  00117C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10629  001180  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10630  001184  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10631                           
 10632                           ; BSR set to: 0
 10633                           ;inc\CANlib.h: 828: RXF5SIDL = (unsigned char) tamp;
 10634  001188  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 10635  00118C                     l4609:
 10636                           
 10637                           ; BSR set to: 0
 10638                           ;inc\CANlib.h: 829: }
 10639                           ;inc\CANlib.h: 832: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 10640  00118C  0100               	movlb	0	; () banked
 10641  00118E  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 10642  001190  0100               	movlb	0	; () banked
 10643  001192  A4D8               	btfss	status,2,c
 10644  001194  D089               	goto	l4643
 10645                           
 10646                           ; BSR set to: 0
 10647  001196  0EF7               	movlw	247
 10648  001198  0100               	movlb	0	; () banked
 10649  00119A  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 10650  00119C  A4D8               	btfss	status,2,c
 10651  00119E  D084               	goto	l4643
 10652                           
 10653                           ; BSR set to: 0
 10654                           ;inc\CANlib.h: 833: {
 10655                           ;inc\CANlib.h: 834: RXF0SIDLbits.EXIDEN = 0x01;
 10656  0011A0  010F               	movlb	15	; () banked
 10657  0011A2  8701               	bsf	1,3,b	;volatile
 10658                           
 10659                           ; BSR set to: 15
 10660                           ;inc\CANlib.h: 836: tamp = filter & 0x000000FF;
 10661  0011A4  0100               	movlb	0	; () banked
 10662  0011A6  5177               	movf	CANSetFilter@filter& (0+255),w,b
 10663  0011A8  0100               	movlb	0	; () banked
 10664  0011AA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10665  0011AC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10666  0011AE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10667  0011B0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10668                           
 10669                           ; BSR set to: 0
 10670                           ;inc\CANlib.h: 837: RXF0EIDL = (unsigned char) tamp;
 10671  0011B2  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 10672                           
 10673                           ; BSR set to: 0
 10674                           ;inc\CANlib.h: 839: tamp = filter & 0x0000FF00;
 10675  0011B6  0E00               	movlw	0
 10676  0011B8  0100               	movlb	0	; () banked
 10677  0011BA  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10678  0011BC  0100               	movlb	0	; () banked
 10679  0011BE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10680  0011C0  0EFF               	movlw	255
 10681  0011C2  0100               	movlb	0	; () banked
 10682  0011C4  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10683  0011C6  0100               	movlb	0	; () banked
 10684  0011C8  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10685  0011CA  0E00               	movlw	0
 10686  0011CC  0100               	movlb	0	; () banked
 10687  0011CE  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10688  0011D0  0100               	movlb	0	; () banked
 10689  0011D2  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10690  0011D4  0E00               	movlw	0
 10691  0011D6  0100               	movlb	0	; () banked
 10692  0011D8  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10693  0011DA  0100               	movlb	0	; () banked
 10694  0011DC  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10695                           
 10696                           ; BSR set to: 0
 10697                           ;inc\CANlib.h: 840: tamp = tamp >> 8;
 10698  0011DE  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10699  0011E2  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10700  0011E6  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10701  0011EA  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10702  0011EE  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 10703  0011F2  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10704  0011F6  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10705  0011FA  0100               	movlb	0	; () banked
 10706  0011FC  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 10707  0011FE  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10708  001202  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10709  001206  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10710  00120A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10711                           
 10712                           ; BSR set to: 0
 10713                           ;inc\CANlib.h: 841: RXF0EIDH = (unsigned char) tamp;
 10714  00120E  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 10715                           
 10716                           ; BSR set to: 0
 10717                           ;inc\CANlib.h: 843: if (filter & 0x00010000)
 10718  001212  0100               	movlb	0	; () banked
 10719  001214  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10720  001216  D003               	goto	l457
 10721                           
 10722                           ; BSR set to: 0
 10723                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x01;
 10724  001218  010F               	movlb	15	; () banked
 10725  00121A  8101               	bsf	1,0,b	;volatile
 10726  00121C  D002               	goto	l458
 10727  00121E                     l457:
 10728                           
 10729                           ; BSR set to: 0
 10730                           ;inc\CANlib.h: 845: else
 10731                           ;inc\CANlib.h: 846: RXF0SIDLbits.EID16 = 0x00;
 10732  00121E  010F               	movlb	15	; () banked
 10733  001220  9101               	bcf	1,0,b	;volatile
 10734  001222                     l458:
 10735                           
 10736                           ; BSR set to: 15
 10737                           ;inc\CANlib.h: 848: if (filter & 0x00020000)
 10738  001222  0100               	movlb	0	; () banked
 10739  001224  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10740  001226  D003               	goto	l459
 10741                           
 10742                           ; BSR set to: 0
 10743                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x01;
 10744  001228  010F               	movlb	15	; () banked
 10745  00122A  8301               	bsf	1,1,b	;volatile
 10746  00122C  D002               	goto	l460
 10747  00122E                     l459:
 10748                           
 10749                           ; BSR set to: 0
 10750                           ;inc\CANlib.h: 850: else
 10751                           ;inc\CANlib.h: 851: RXF0SIDLbits.EID17 = 0x00;
 10752  00122E  010F               	movlb	15	; () banked
 10753  001230  9301               	bcf	1,1,b	;volatile
 10754  001232                     l460:
 10755                           
 10756                           ; BSR set to: 15
 10757                           ;inc\CANlib.h: 853: if (filter & 0x00040000)
 10758  001232  0100               	movlb	0	; () banked
 10759  001234  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10760  001236  D003               	goto	l461
 10761                           
 10762                           ; BSR set to: 0
 10763                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x01;
 10764  001238  010F               	movlb	15	; () banked
 10765  00123A  8B01               	bsf	1,5,b	;volatile
 10766  00123C  D002               	goto	l462
 10767  00123E                     l461:
 10768                           
 10769                           ; BSR set to: 0
 10770                           ;inc\CANlib.h: 855: else
 10771                           ;inc\CANlib.h: 856: RXF0SIDLbits.SID0 = 0x00;
 10772  00123E  010F               	movlb	15	; () banked
 10773  001240  9B01               	bcf	1,5,b	;volatile
 10774  001242                     l462:
 10775                           
 10776                           ; BSR set to: 15
 10777                           ;inc\CANlib.h: 858: if (filter & 0x00080000)
 10778  001242  0100               	movlb	0	; () banked
 10779  001244  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10780  001246  D003               	goto	l463
 10781                           
 10782                           ; BSR set to: 0
 10783                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x01;
 10784  001248  010F               	movlb	15	; () banked
 10785  00124A  8D01               	bsf	1,6,b	;volatile
 10786  00124C  D002               	goto	l464
 10787  00124E                     l463:
 10788                           
 10789                           ; BSR set to: 0
 10790                           ;inc\CANlib.h: 860: else
 10791                           ;inc\CANlib.h: 861: RXF0SIDLbits.SID1 = 0x00;
 10792  00124E  010F               	movlb	15	; () banked
 10793  001250  9D01               	bcf	1,6,b	;volatile
 10794  001252                     l464:
 10795                           
 10796                           ; BSR set to: 15
 10797                           ;inc\CANlib.h: 863: if (filter & 0x00100000)
 10798  001252  0100               	movlb	0	; () banked
 10799  001254  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 10800  001256  D003               	goto	l465
 10801                           
 10802                           ; BSR set to: 0
 10803                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x01 ;
 10804  001258  010F               	movlb	15	; () banked
 10805  00125A  8F01               	bsf	1,7,b	;volatile
 10806  00125C  D002               	goto	l4637
 10807  00125E                     l465:
 10808                           
 10809                           ; BSR set to: 0
 10810                           ;inc\CANlib.h: 865: else
 10811                           ;inc\CANlib.h: 866: RXF0SIDLbits.SID2 = 0x00 ;
 10812  00125E  010F               	movlb	15	; () banked
 10813  001260  9F01               	bcf	1,7,b	;volatile
 10814  001262                     l4637:
 10815                           
 10816                           ; BSR set to: 15
 10817                           ;inc\CANlib.h: 868: tamp = (filter >> 21);
 10818  001262  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 10819  001266  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 10820  00126A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 10821  00126E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 10822  001272  0E16               	movlw	22
 10823  001274  D006               	goto	u5500
 10824  001276                     u5505:
 10825  001276  0100               	movlb	0	; () banked
 10826  001278  90D8               	bcf	status,0,c
 10827  00127A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 10828  00127C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 10829  00127E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 10830  001280  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 10831  001282                     u5500:
 10832  001282  2EE8               	decfsz	wreg,f,c
 10833  001284  D7F8               	goto	u5505
 10834  001286  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10835  00128A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10836  00128E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10837  001292  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10838                           
 10839                           ; BSR set to: 0
 10840                           ;inc\CANlib.h: 869: tamp = tamp & 0x000000FF;
 10841  001296  0100               	movlb	0	; () banked
 10842  001298  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 10843  00129A  0100               	movlb	0	; () banked
 10844  00129C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10845  00129E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10846  0012A0  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10847  0012A2  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10848                           
 10849                           ; BSR set to: 0
 10850                           ;inc\CANlib.h: 870: RXF0SIDH = (unsigned char) tamp;
 10851  0012A4  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 10852  0012A8                     l4643:
 10853                           
 10854                           ; BSR set to: 0
 10855                           ;inc\CANlib.h: 871: }
 10856                           ;inc\CANlib.h: 873: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 10857  0012A8  0100               	movlb	0	; () banked
 10858  0012AA  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 10859  0012AC  A4D8               	btfss	status,2,c
 10860  0012AE  D089               	goto	l4677
 10861                           
 10862                           ; BSR set to: 0
 10863  0012B0  0EF7               	movlw	247
 10864  0012B2  0100               	movlb	0	; () banked
 10865  0012B4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 10866  0012B6  A4D8               	btfss	status,2,c
 10867  0012B8  D084               	goto	l4677
 10868                           
 10869                           ; BSR set to: 0
 10870                           ;inc\CANlib.h: 874: {
 10871                           ;inc\CANlib.h: 875: RXF1SIDLbits.EXIDEN = 0x01;
 10872  0012BA  010F               	movlb	15	; () banked
 10873  0012BC  8705               	bsf	5,3,b	;volatile
 10874                           
 10875                           ; BSR set to: 15
 10876                           ;inc\CANlib.h: 877: tamp = filter & 0x000000FF;
 10877  0012BE  0100               	movlb	0	; () banked
 10878  0012C0  5177               	movf	CANSetFilter@filter& (0+255),w,b
 10879  0012C2  0100               	movlb	0	; () banked
 10880  0012C4  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10881  0012C6  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 10882  0012C8  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 10883  0012CA  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 10884                           
 10885                           ; BSR set to: 0
 10886                           ;inc\CANlib.h: 878: RXF1EIDL = (unsigned char) tamp;
 10887  0012CC  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 10888                           
 10889                           ; BSR set to: 0
 10890                           ;inc\CANlib.h: 880: tamp = filter & 0x0000FF00;
 10891  0012D0  0E00               	movlw	0
 10892  0012D2  0100               	movlb	0	; () banked
 10893  0012D4  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 10894  0012D6  0100               	movlb	0	; () banked
 10895  0012D8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 10896  0012DA  0EFF               	movlw	255
 10897  0012DC  0100               	movlb	0	; () banked
 10898  0012DE  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 10899  0012E0  0100               	movlb	0	; () banked
 10900  0012E2  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 10901  0012E4  0E00               	movlw	0
 10902  0012E6  0100               	movlb	0	; () banked
 10903  0012E8  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 10904  0012EA  0100               	movlb	0	; () banked
 10905  0012EC  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 10906  0012EE  0E00               	movlw	0
 10907  0012F0  0100               	movlb	0	; () banked
 10908  0012F2  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 10909  0012F4  0100               	movlb	0	; () banked
 10910  0012F6  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 10911                           
 10912                           ; BSR set to: 0
 10913                           ;inc\CANlib.h: 881: tamp = tamp >> 8;
 10914  0012F8  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 10915  0012FC  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 10916  001300  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 10917  001304  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 10918  001308  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 10919  00130C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 10920  001310  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 10921  001314  0100               	movlb	0	; () banked
 10922  001316  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 10923  001318  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 10924  00131C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 10925  001320  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 10926  001324  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 10927                           
 10928                           ; BSR set to: 0
 10929                           ;inc\CANlib.h: 882: RXF1EIDH = (unsigned char) tamp;
 10930  001328  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 10931                           
 10932                           ; BSR set to: 0
 10933                           ;inc\CANlib.h: 884: if (filter & 0x00010000)
 10934  00132C  0100               	movlb	0	; () banked
 10935  00132E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 10936  001330  D003               	goto	l468
 10937                           
 10938                           ; BSR set to: 0
 10939                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x01;
 10940  001332  010F               	movlb	15	; () banked
 10941  001334  8105               	bsf	5,0,b	;volatile
 10942  001336  D002               	goto	l469
 10943  001338                     l468:
 10944                           
 10945                           ; BSR set to: 0
 10946                           ;inc\CANlib.h: 886: else
 10947                           ;inc\CANlib.h: 887: RXF1SIDLbits.EID16 = 0x00;
 10948  001338  010F               	movlb	15	; () banked
 10949  00133A  9105               	bcf	5,0,b	;volatile
 10950  00133C                     l469:
 10951                           
 10952                           ; BSR set to: 15
 10953                           ;inc\CANlib.h: 889: if (filter & 0x00020000)
 10954  00133C  0100               	movlb	0	; () banked
 10955  00133E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 10956  001340  D003               	goto	l470
 10957                           
 10958                           ; BSR set to: 0
 10959                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x01;
 10960  001342  010F               	movlb	15	; () banked
 10961  001344  8305               	bsf	5,1,b	;volatile
 10962  001346  D002               	goto	l471
 10963  001348                     l470:
 10964                           
 10965                           ; BSR set to: 0
 10966                           ;inc\CANlib.h: 891: else
 10967                           ;inc\CANlib.h: 892: RXF1SIDLbits.EID17 = 0x00;
 10968  001348  010F               	movlb	15	; () banked
 10969  00134A  9305               	bcf	5,1,b	;volatile
 10970  00134C                     l471:
 10971                           
 10972                           ; BSR set to: 15
 10973                           ;inc\CANlib.h: 894: if (filter & 0x00040000)
 10974  00134C  0100               	movlb	0	; () banked
 10975  00134E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 10976  001350  D003               	goto	l472
 10977                           
 10978                           ; BSR set to: 0
 10979                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x01;
 10980  001352  010F               	movlb	15	; () banked
 10981  001354  8B05               	bsf	5,5,b	;volatile
 10982  001356  D002               	goto	l473
 10983  001358                     l472:
 10984                           
 10985                           ; BSR set to: 0
 10986                           ;inc\CANlib.h: 896: else
 10987                           ;inc\CANlib.h: 897: RXF1SIDLbits.SID0 = 0x00;
 10988  001358  010F               	movlb	15	; () banked
 10989  00135A  9B05               	bcf	5,5,b	;volatile
 10990  00135C                     l473:
 10991                           
 10992                           ; BSR set to: 15
 10993                           ;inc\CANlib.h: 899: if (filter & 0x00080000)
 10994  00135C  0100               	movlb	0	; () banked
 10995  00135E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 10996  001360  D003               	goto	l474
 10997                           
 10998                           ; BSR set to: 0
 10999                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x01;
 11000  001362  010F               	movlb	15	; () banked
 11001  001364  8D05               	bsf	5,6,b	;volatile
 11002  001366  D002               	goto	l475
 11003  001368                     l474:
 11004                           
 11005                           ; BSR set to: 0
 11006                           ;inc\CANlib.h: 901: else
 11007                           ;inc\CANlib.h: 902: RXF1SIDLbits.SID1 = 0x00;
 11008  001368  010F               	movlb	15	; () banked
 11009  00136A  9D05               	bcf	5,6,b	;volatile
 11010  00136C                     l475:
 11011                           
 11012                           ; BSR set to: 15
 11013                           ;inc\CANlib.h: 904: if (filter & 0x00100000)
 11014  00136C  0100               	movlb	0	; () banked
 11015  00136E  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 11016  001370  D003               	goto	l476
 11017                           
 11018                           ; BSR set to: 0
 11019                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x01 ;
 11020  001372  010F               	movlb	15	; () banked
 11021  001374  8F05               	bsf	5,7,b	;volatile
 11022  001376  D002               	goto	l4671
 11023  001378                     l476:
 11024                           
 11025                           ; BSR set to: 0
 11026                           ;inc\CANlib.h: 906: else
 11027                           ;inc\CANlib.h: 907: RXF1SIDLbits.SID2 = 0x00 ;
 11028  001378  010F               	movlb	15	; () banked
 11029  00137A  9F05               	bcf	5,7,b	;volatile
 11030  00137C                     l4671:
 11031                           
 11032                           ; BSR set to: 15
 11033                           ;inc\CANlib.h: 909: tamp = (filter >> 21);
 11034  00137C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 11035  001380  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 11036  001384  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 11037  001388  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 11038  00138C  0E16               	movlw	22
 11039  00138E  D006               	goto	u5580
 11040  001390                     u5585:
 11041  001390  0100               	movlb	0	; () banked
 11042  001392  90D8               	bcf	status,0,c
 11043  001394  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 11044  001396  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 11045  001398  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 11046  00139A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 11047  00139C                     u5580:
 11048  00139C  2EE8               	decfsz	wreg,f,c
 11049  00139E  D7F8               	goto	u5585
 11050  0013A0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11051  0013A4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11052  0013A8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11053  0013AC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11054                           
 11055                           ; BSR set to: 0
 11056                           ;inc\CANlib.h: 910: tamp = tamp & 0x000000FF;
 11057  0013B0  0100               	movlb	0	; () banked
 11058  0013B2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 11059  0013B4  0100               	movlb	0	; () banked
 11060  0013B6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11061  0013B8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11062  0013BA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11063  0013BC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11064                           
 11065                           ; BSR set to: 0
 11066                           ;inc\CANlib.h: 911: RXF1SIDH = (unsigned char) tamp;
 11067  0013BE  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 11068  0013C2                     l4677:
 11069                           
 11070                           ; BSR set to: 0
 11071                           ;inc\CANlib.h: 912: }
 11072                           ;inc\CANlib.h: 915: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 11073  0013C2  0E02               	movlw	2
 11074  0013C4  0100               	movlb	0	; () banked
 11075  0013C6  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 11076  0013C8  A4D8               	btfss	status,2,c
 11077  0013CA  D089               	goto	l4711
 11078                           
 11079                           ; BSR set to: 0
 11080  0013CC  0EF7               	movlw	247
 11081  0013CE  0100               	movlb	0	; () banked
 11082  0013D0  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 11083  0013D2  A4D8               	btfss	status,2,c
 11084  0013D4  D084               	goto	l4711
 11085                           
 11086                           ; BSR set to: 0
 11087                           ;inc\CANlib.h: 916: {
 11088                           ;inc\CANlib.h: 917: RXF2SIDLbits.EXIDEN = 0x01;
 11089  0013D6  010F               	movlb	15	; () banked
 11090  0013D8  8709               	bsf	9,3,b	;volatile
 11091                           
 11092                           ; BSR set to: 15
 11093                           ;inc\CANlib.h: 919: tamp = filter & 0x000000FF;
 11094  0013DA  0100               	movlb	0	; () banked
 11095  0013DC  5177               	movf	CANSetFilter@filter& (0+255),w,b
 11096  0013DE  0100               	movlb	0	; () banked
 11097  0013E0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11098  0013E2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11099  0013E4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11100  0013E6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11101                           
 11102                           ; BSR set to: 0
 11103                           ;inc\CANlib.h: 920: RXF2EIDL = (unsigned char) tamp;
 11104  0013E8  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 11105                           
 11106                           ; BSR set to: 0
 11107                           ;inc\CANlib.h: 922: tamp = filter & 0x0000FF00;
 11108  0013EC  0E00               	movlw	0
 11109  0013EE  0100               	movlb	0	; () banked
 11110  0013F0  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 11111  0013F2  0100               	movlb	0	; () banked
 11112  0013F4  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11113  0013F6  0EFF               	movlw	255
 11114  0013F8  0100               	movlb	0	; () banked
 11115  0013FA  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 11116  0013FC  0100               	movlb	0	; () banked
 11117  0013FE  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 11118  001400  0E00               	movlw	0
 11119  001402  0100               	movlb	0	; () banked
 11120  001404  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 11121  001406  0100               	movlb	0	; () banked
 11122  001408  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 11123  00140A  0E00               	movlw	0
 11124  00140C  0100               	movlb	0	; () banked
 11125  00140E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 11126  001410  0100               	movlb	0	; () banked
 11127  001412  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 11128                           
 11129                           ; BSR set to: 0
 11130                           ;inc\CANlib.h: 923: tamp = tamp >> 8;
 11131  001414  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 11132  001418  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 11133  00141C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 11134  001420  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 11135  001424  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 11136  001428  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 11137  00142C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 11138  001430  0100               	movlb	0	; () banked
 11139  001432  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 11140  001434  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11141  001438  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11142  00143C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11143  001440  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11144                           
 11145                           ; BSR set to: 0
 11146                           ;inc\CANlib.h: 924: RXF2EIDH = (unsigned char) tamp;
 11147  001444  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 11148                           
 11149                           ; BSR set to: 0
 11150                           ;inc\CANlib.h: 926: if (filter & 0x00010000)
 11151  001448  0100               	movlb	0	; () banked
 11152  00144A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 11153  00144C  D003               	goto	l479
 11154                           
 11155                           ; BSR set to: 0
 11156                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x01;
 11157  00144E  010F               	movlb	15	; () banked
 11158  001450  8109               	bsf	9,0,b	;volatile
 11159  001452  D002               	goto	l480
 11160  001454                     l479:
 11161                           
 11162                           ; BSR set to: 0
 11163                           ;inc\CANlib.h: 928: else
 11164                           ;inc\CANlib.h: 929: RXF2SIDLbits.EID16 = 0x00;
 11165  001454  010F               	movlb	15	; () banked
 11166  001456  9109               	bcf	9,0,b	;volatile
 11167  001458                     l480:
 11168                           
 11169                           ; BSR set to: 15
 11170                           ;inc\CANlib.h: 931: if (filter & 0x00020000)
 11171  001458  0100               	movlb	0	; () banked
 11172  00145A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 11173  00145C  D003               	goto	l481
 11174                           
 11175                           ; BSR set to: 0
 11176                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x01;
 11177  00145E  010F               	movlb	15	; () banked
 11178  001460  8309               	bsf	9,1,b	;volatile
 11179  001462  D002               	goto	l482
 11180  001464                     l481:
 11181                           
 11182                           ; BSR set to: 0
 11183                           ;inc\CANlib.h: 933: else
 11184                           ;inc\CANlib.h: 934: RXF2SIDLbits.EID17 = 0x00;
 11185  001464  010F               	movlb	15	; () banked
 11186  001466  9309               	bcf	9,1,b	;volatile
 11187  001468                     l482:
 11188                           
 11189                           ; BSR set to: 15
 11190                           ;inc\CANlib.h: 936: if (filter & 0x00040000)
 11191  001468  0100               	movlb	0	; () banked
 11192  00146A  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 11193  00146C  D003               	goto	l483
 11194                           
 11195                           ; BSR set to: 0
 11196                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x01;
 11197  00146E  010F               	movlb	15	; () banked
 11198  001470  8B09               	bsf	9,5,b	;volatile
 11199  001472  D002               	goto	l484
 11200  001474                     l483:
 11201                           
 11202                           ; BSR set to: 0
 11203                           ;inc\CANlib.h: 938: else
 11204                           ;inc\CANlib.h: 939: RXF2SIDLbits.SID0 = 0x00;
 11205  001474  010F               	movlb	15	; () banked
 11206  001476  9B09               	bcf	9,5,b	;volatile
 11207  001478                     l484:
 11208                           
 11209                           ; BSR set to: 15
 11210                           ;inc\CANlib.h: 941: if (filter & 0x00080000)
 11211  001478  0100               	movlb	0	; () banked
 11212  00147A  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 11213  00147C  D003               	goto	l485
 11214                           
 11215                           ; BSR set to: 0
 11216                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x01;
 11217  00147E  010F               	movlb	15	; () banked
 11218  001480  8D09               	bsf	9,6,b	;volatile
 11219  001482  D002               	goto	l486
 11220  001484                     l485:
 11221                           
 11222                           ; BSR set to: 0
 11223                           ;inc\CANlib.h: 943: else
 11224                           ;inc\CANlib.h: 944: RXF2SIDLbits.SID1 = 0x00;
 11225  001484  010F               	movlb	15	; () banked
 11226  001486  9D09               	bcf	9,6,b	;volatile
 11227  001488                     l486:
 11228                           
 11229                           ; BSR set to: 15
 11230                           ;inc\CANlib.h: 946: if (filter & 0x00100000)
 11231  001488  0100               	movlb	0	; () banked
 11232  00148A  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 11233  00148C  D003               	goto	l487
 11234                           
 11235                           ; BSR set to: 0
 11236                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x01 ;
 11237  00148E  010F               	movlb	15	; () banked
 11238  001490  8F09               	bsf	9,7,b	;volatile
 11239  001492  D002               	goto	l4705
 11240  001494                     l487:
 11241                           
 11242                           ; BSR set to: 0
 11243                           ;inc\CANlib.h: 948: else
 11244                           ;inc\CANlib.h: 949: RXF2SIDLbits.SID2 = 0x00 ;
 11245  001494  010F               	movlb	15	; () banked
 11246  001496  9F09               	bcf	9,7,b	;volatile
 11247  001498                     l4705:
 11248                           
 11249                           ; BSR set to: 15
 11250                           ;inc\CANlib.h: 951: tamp = (filter >> 21);
 11251  001498  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 11252  00149C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 11253  0014A0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 11254  0014A4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 11255  0014A8  0E16               	movlw	22
 11256  0014AA  D006               	goto	u5660
 11257  0014AC                     u5665:
 11258  0014AC  0100               	movlb	0	; () banked
 11259  0014AE  90D8               	bcf	status,0,c
 11260  0014B0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 11261  0014B2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 11262  0014B4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 11263  0014B6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 11264  0014B8                     u5660:
 11265  0014B8  2EE8               	decfsz	wreg,f,c
 11266  0014BA  D7F8               	goto	u5665
 11267  0014BC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11268  0014C0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11269  0014C4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11270  0014C8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11271                           
 11272                           ; BSR set to: 0
 11273                           ;inc\CANlib.h: 952: tamp = tamp & 0x000000FF;
 11274  0014CC  0100               	movlb	0	; () banked
 11275  0014CE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 11276  0014D0  0100               	movlb	0	; () banked
 11277  0014D2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11278  0014D4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11279  0014D6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11280  0014D8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11281                           
 11282                           ; BSR set to: 0
 11283                           ;inc\CANlib.h: 953: RXF2SIDH = (unsigned char) tamp;
 11284  0014DA  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 11285  0014DE                     l4711:
 11286                           
 11287                           ; BSR set to: 0
 11288                           ;inc\CANlib.h: 954: }
 11289                           ;inc\CANlib.h: 956: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 11290  0014DE  0E03               	movlw	3
 11291  0014E0  0100               	movlb	0	; () banked
 11292  0014E2  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 11293  0014E4  A4D8               	btfss	status,2,c
 11294  0014E6  D089               	goto	l4745
 11295                           
 11296                           ; BSR set to: 0
 11297  0014E8  0EF7               	movlw	247
 11298  0014EA  0100               	movlb	0	; () banked
 11299  0014EC  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 11300  0014EE  A4D8               	btfss	status,2,c
 11301  0014F0  D084               	goto	l4745
 11302                           
 11303                           ; BSR set to: 0
 11304                           ;inc\CANlib.h: 957: {
 11305                           ;inc\CANlib.h: 958: RXF3SIDLbits.EXIDEN = 0x01;
 11306  0014F2  010F               	movlb	15	; () banked
 11307  0014F4  870D               	bsf	13,3,b	;volatile
 11308                           
 11309                           ; BSR set to: 15
 11310                           ;inc\CANlib.h: 960: tamp = filter & 0x000000FF;
 11311  0014F6  0100               	movlb	0	; () banked
 11312  0014F8  5177               	movf	CANSetFilter@filter& (0+255),w,b
 11313  0014FA  0100               	movlb	0	; () banked
 11314  0014FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11315  0014FE  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11316  001500  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11317  001502  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11318                           
 11319                           ; BSR set to: 0
 11320                           ;inc\CANlib.h: 961: RXF3EIDL = (unsigned char) tamp;
 11321  001504  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 11322                           
 11323                           ; BSR set to: 0
 11324                           ;inc\CANlib.h: 963: tamp = filter & 0x0000FF00;
 11325  001508  0E00               	movlw	0
 11326  00150A  0100               	movlb	0	; () banked
 11327  00150C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 11328  00150E  0100               	movlb	0	; () banked
 11329  001510  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11330  001512  0EFF               	movlw	255
 11331  001514  0100               	movlb	0	; () banked
 11332  001516  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 11333  001518  0100               	movlb	0	; () banked
 11334  00151A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 11335  00151C  0E00               	movlw	0
 11336  00151E  0100               	movlb	0	; () banked
 11337  001520  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 11338  001522  0100               	movlb	0	; () banked
 11339  001524  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 11340  001526  0E00               	movlw	0
 11341  001528  0100               	movlb	0	; () banked
 11342  00152A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 11343  00152C  0100               	movlb	0	; () banked
 11344  00152E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 11345                           
 11346                           ; BSR set to: 0
 11347                           ;inc\CANlib.h: 964: tamp = tamp >> 8;
 11348  001530  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 11349  001534  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 11350  001538  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 11351  00153C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 11352  001540  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 11353  001544  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 11354  001548  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 11355  00154C  0100               	movlb	0	; () banked
 11356  00154E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 11357  001550  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11358  001554  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11359  001558  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11360  00155C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11361                           
 11362                           ; BSR set to: 0
 11363                           ;inc\CANlib.h: 965: RXF3EIDH = (unsigned char) tamp;
 11364  001560  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 11365                           
 11366                           ; BSR set to: 0
 11367                           ;inc\CANlib.h: 967: if (filter & 0x00010000)
 11368  001564  0100               	movlb	0	; () banked
 11369  001566  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 11370  001568  D003               	goto	l490
 11371                           
 11372                           ; BSR set to: 0
 11373                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x01;
 11374  00156A  010F               	movlb	15	; () banked
 11375  00156C  810D               	bsf	13,0,b	;volatile
 11376  00156E  D002               	goto	l491
 11377  001570                     l490:
 11378                           
 11379                           ; BSR set to: 0
 11380                           ;inc\CANlib.h: 969: else
 11381                           ;inc\CANlib.h: 970: RXF3SIDLbits.EID16 = 0x00;
 11382  001570  010F               	movlb	15	; () banked
 11383  001572  910D               	bcf	13,0,b	;volatile
 11384  001574                     l491:
 11385                           
 11386                           ; BSR set to: 15
 11387                           ;inc\CANlib.h: 972: if (filter & 0x00020000)
 11388  001574  0100               	movlb	0	; () banked
 11389  001576  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 11390  001578  D003               	goto	l492
 11391                           
 11392                           ; BSR set to: 0
 11393                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x01;
 11394  00157A  010F               	movlb	15	; () banked
 11395  00157C  830D               	bsf	13,1,b	;volatile
 11396  00157E  D002               	goto	l493
 11397  001580                     l492:
 11398                           
 11399                           ; BSR set to: 0
 11400                           ;inc\CANlib.h: 974: else
 11401                           ;inc\CANlib.h: 975: RXF3SIDLbits.EID17 = 0x00;
 11402  001580  010F               	movlb	15	; () banked
 11403  001582  930D               	bcf	13,1,b	;volatile
 11404  001584                     l493:
 11405                           
 11406                           ; BSR set to: 15
 11407                           ;inc\CANlib.h: 977: if (filter & 0x00040000)
 11408  001584  0100               	movlb	0	; () banked
 11409  001586  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 11410  001588  D003               	goto	l494
 11411                           
 11412                           ; BSR set to: 0
 11413                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x01;
 11414  00158A  010F               	movlb	15	; () banked
 11415  00158C  8B0D               	bsf	13,5,b	;volatile
 11416  00158E  D002               	goto	l495
 11417  001590                     l494:
 11418                           
 11419                           ; BSR set to: 0
 11420                           ;inc\CANlib.h: 979: else
 11421                           ;inc\CANlib.h: 980: RXF3SIDLbits.SID0 = 0x00;
 11422  001590  010F               	movlb	15	; () banked
 11423  001592  9B0D               	bcf	13,5,b	;volatile
 11424  001594                     l495:
 11425                           
 11426                           ; BSR set to: 15
 11427                           ;inc\CANlib.h: 982: if (filter & 0x00080000)
 11428  001594  0100               	movlb	0	; () banked
 11429  001596  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 11430  001598  D003               	goto	l496
 11431                           
 11432                           ; BSR set to: 0
 11433                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x01;
 11434  00159A  010F               	movlb	15	; () banked
 11435  00159C  8D0D               	bsf	13,6,b	;volatile
 11436  00159E  D002               	goto	l497
 11437  0015A0                     l496:
 11438                           
 11439                           ; BSR set to: 0
 11440                           ;inc\CANlib.h: 984: else
 11441                           ;inc\CANlib.h: 985: RXF3SIDLbits.SID1 = 0x00;
 11442  0015A0  010F               	movlb	15	; () banked
 11443  0015A2  9D0D               	bcf	13,6,b	;volatile
 11444  0015A4                     l497:
 11445                           
 11446                           ; BSR set to: 15
 11447                           ;inc\CANlib.h: 987: if (filter & 0x00100000)
 11448  0015A4  0100               	movlb	0	; () banked
 11449  0015A6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 11450  0015A8  D003               	goto	l498
 11451                           
 11452                           ; BSR set to: 0
 11453                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x01 ;
 11454  0015AA  010F               	movlb	15	; () banked
 11455  0015AC  8F0D               	bsf	13,7,b	;volatile
 11456  0015AE  D002               	goto	l4739
 11457  0015B0                     l498:
 11458                           
 11459                           ; BSR set to: 0
 11460                           ;inc\CANlib.h: 989: else
 11461                           ;inc\CANlib.h: 990: RXF3SIDLbits.SID2 = 0x00 ;
 11462  0015B0  010F               	movlb	15	; () banked
 11463  0015B2  9F0D               	bcf	13,7,b	;volatile
 11464  0015B4                     l4739:
 11465                           
 11466                           ; BSR set to: 15
 11467                           ;inc\CANlib.h: 992: tamp = (filter >> 21);
 11468  0015B4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 11469  0015B8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 11470  0015BC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 11471  0015C0  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 11472  0015C4  0E16               	movlw	22
 11473  0015C6  D006               	goto	u5740
 11474  0015C8                     u5745:
 11475  0015C8  0100               	movlb	0	; () banked
 11476  0015CA  90D8               	bcf	status,0,c
 11477  0015CC  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 11478  0015CE  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 11479  0015D0  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 11480  0015D2  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 11481  0015D4                     u5740:
 11482  0015D4  2EE8               	decfsz	wreg,f,c
 11483  0015D6  D7F8               	goto	u5745
 11484  0015D8  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11485  0015DC  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11486  0015E0  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11487  0015E4  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11488                           
 11489                           ; BSR set to: 0
 11490                           ;inc\CANlib.h: 993: tamp = tamp & 0x000000FF;
 11491  0015E8  0100               	movlb	0	; () banked
 11492  0015EA  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 11493  0015EC  0100               	movlb	0	; () banked
 11494  0015EE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11495  0015F0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11496  0015F2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11497  0015F4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11498                           
 11499                           ; BSR set to: 0
 11500                           ;inc\CANlib.h: 994: RXF3SIDH = (unsigned char) tamp;
 11501  0015F6  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 11502  0015FA                     l4745:
 11503                           
 11504                           ; BSR set to: 0
 11505                           ;inc\CANlib.h: 995: }
 11506                           ;inc\CANlib.h: 997: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 11507  0015FA  0E04               	movlw	4
 11508  0015FC  0100               	movlb	0	; () banked
 11509  0015FE  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 11510  001600  A4D8               	btfss	status,2,c
 11511  001602  D089               	goto	l4779
 11512                           
 11513                           ; BSR set to: 0
 11514  001604  0EF7               	movlw	247
 11515  001606  0100               	movlb	0	; () banked
 11516  001608  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 11517  00160A  A4D8               	btfss	status,2,c
 11518  00160C  D084               	goto	l4779
 11519                           
 11520                           ; BSR set to: 0
 11521                           ;inc\CANlib.h: 998: {
 11522                           ;inc\CANlib.h: 999: RXF4SIDLbits.EXIDEN = 0x01;
 11523  00160E  010F               	movlb	15	; () banked
 11524  001610  8711               	bsf	17,3,b	;volatile
 11525                           
 11526                           ; BSR set to: 15
 11527                           ;inc\CANlib.h: 1001: tamp = filter & 0x000000FF;
 11528  001612  0100               	movlb	0	; () banked
 11529  001614  5177               	movf	CANSetFilter@filter& (0+255),w,b
 11530  001616  0100               	movlb	0	; () banked
 11531  001618  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11532  00161A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11533  00161C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11534  00161E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11535                           
 11536                           ; BSR set to: 0
 11537                           ;inc\CANlib.h: 1002: RXF4EIDL = (unsigned char) tamp;
 11538  001620  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 11539                           
 11540                           ; BSR set to: 0
 11541                           ;inc\CANlib.h: 1004: tamp = filter & 0x0000FF00;
 11542  001624  0E00               	movlw	0
 11543  001626  0100               	movlb	0	; () banked
 11544  001628  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 11545  00162A  0100               	movlb	0	; () banked
 11546  00162C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11547  00162E  0EFF               	movlw	255
 11548  001630  0100               	movlb	0	; () banked
 11549  001632  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 11550  001634  0100               	movlb	0	; () banked
 11551  001636  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 11552  001638  0E00               	movlw	0
 11553  00163A  0100               	movlb	0	; () banked
 11554  00163C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 11555  00163E  0100               	movlb	0	; () banked
 11556  001640  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 11557  001642  0E00               	movlw	0
 11558  001644  0100               	movlb	0	; () banked
 11559  001646  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 11560  001648  0100               	movlb	0	; () banked
 11561  00164A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 11562                           
 11563                           ; BSR set to: 0
 11564                           ;inc\CANlib.h: 1005: tamp = tamp >> 8;
 11565  00164C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 11566  001650  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 11567  001654  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 11568  001658  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 11569  00165C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 11570  001660  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 11571  001664  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 11572  001668  0100               	movlb	0	; () banked
 11573  00166A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 11574  00166C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11575  001670  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11576  001674  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11577  001678  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11578                           
 11579                           ; BSR set to: 0
 11580                           ;inc\CANlib.h: 1006: RXF4EIDH = (unsigned char) tamp;
 11581  00167C  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 11582                           
 11583                           ; BSR set to: 0
 11584                           ;inc\CANlib.h: 1008: if (filter & 0x00010000)
 11585  001680  0100               	movlb	0	; () banked
 11586  001682  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 11587  001684  D003               	goto	l501
 11588                           
 11589                           ; BSR set to: 0
 11590                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x01;
 11591  001686  010F               	movlb	15	; () banked
 11592  001688  8111               	bsf	17,0,b	;volatile
 11593  00168A  D002               	goto	l502
 11594  00168C                     l501:
 11595                           
 11596                           ; BSR set to: 0
 11597                           ;inc\CANlib.h: 1010: else
 11598                           ;inc\CANlib.h: 1011: RXF4SIDLbits.EID16 = 0x00;
 11599  00168C  010F               	movlb	15	; () banked
 11600  00168E  9111               	bcf	17,0,b	;volatile
 11601  001690                     l502:
 11602                           
 11603                           ; BSR set to: 15
 11604                           ;inc\CANlib.h: 1013: if (filter & 0x00020000)
 11605  001690  0100               	movlb	0	; () banked
 11606  001692  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 11607  001694  D003               	goto	l503
 11608                           
 11609                           ; BSR set to: 0
 11610                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x01;
 11611  001696  010F               	movlb	15	; () banked
 11612  001698  8311               	bsf	17,1,b	;volatile
 11613  00169A  D002               	goto	l504
 11614  00169C                     l503:
 11615                           
 11616                           ; BSR set to: 0
 11617                           ;inc\CANlib.h: 1015: else
 11618                           ;inc\CANlib.h: 1016: RXF4SIDLbits.EID17 = 0x00;
 11619  00169C  010F               	movlb	15	; () banked
 11620  00169E  9311               	bcf	17,1,b	;volatile
 11621  0016A0                     l504:
 11622                           
 11623                           ; BSR set to: 15
 11624                           ;inc\CANlib.h: 1018: if (filter & 0x00040000)
 11625  0016A0  0100               	movlb	0	; () banked
 11626  0016A2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 11627  0016A4  D003               	goto	l505
 11628                           
 11629                           ; BSR set to: 0
 11630                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x01;
 11631  0016A6  010F               	movlb	15	; () banked
 11632  0016A8  8B11               	bsf	17,5,b	;volatile
 11633  0016AA  D002               	goto	l506
 11634  0016AC                     l505:
 11635                           
 11636                           ; BSR set to: 0
 11637                           ;inc\CANlib.h: 1020: else
 11638                           ;inc\CANlib.h: 1021: RXF4SIDLbits.SID0 = 0x00;
 11639  0016AC  010F               	movlb	15	; () banked
 11640  0016AE  9B11               	bcf	17,5,b	;volatile
 11641  0016B0                     l506:
 11642                           
 11643                           ; BSR set to: 15
 11644                           ;inc\CANlib.h: 1023: if (filter & 0x00080000)
 11645  0016B0  0100               	movlb	0	; () banked
 11646  0016B2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 11647  0016B4  D003               	goto	l507
 11648                           
 11649                           ; BSR set to: 0
 11650                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x01;
 11651  0016B6  010F               	movlb	15	; () banked
 11652  0016B8  8D11               	bsf	17,6,b	;volatile
 11653  0016BA  D002               	goto	l508
 11654  0016BC                     l507:
 11655                           
 11656                           ; BSR set to: 0
 11657                           ;inc\CANlib.h: 1025: else
 11658                           ;inc\CANlib.h: 1026: RXF4SIDLbits.SID1 = 0x00;
 11659  0016BC  010F               	movlb	15	; () banked
 11660  0016BE  9D11               	bcf	17,6,b	;volatile
 11661  0016C0                     l508:
 11662                           
 11663                           ; BSR set to: 15
 11664                           ;inc\CANlib.h: 1028: if (filter & 0x00100000)
 11665  0016C0  0100               	movlb	0	; () banked
 11666  0016C2  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 11667  0016C4  D003               	goto	l509
 11668                           
 11669                           ; BSR set to: 0
 11670                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x01 ;
 11671  0016C6  010F               	movlb	15	; () banked
 11672  0016C8  8F11               	bsf	17,7,b	;volatile
 11673  0016CA  D002               	goto	l4773
 11674  0016CC                     l509:
 11675                           
 11676                           ; BSR set to: 0
 11677                           ;inc\CANlib.h: 1030: else
 11678                           ;inc\CANlib.h: 1031: RXF4SIDLbits.SID2 = 0x00 ;
 11679  0016CC  010F               	movlb	15	; () banked
 11680  0016CE  9F11               	bcf	17,7,b	;volatile
 11681  0016D0                     l4773:
 11682                           
 11683                           ; BSR set to: 15
 11684                           ;inc\CANlib.h: 1033: tamp = (filter >> 21);
 11685  0016D0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 11686  0016D4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 11687  0016D8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 11688  0016DC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 11689  0016E0  0E16               	movlw	22
 11690  0016E2  D006               	goto	u5820
 11691  0016E4                     u5825:
 11692  0016E4  0100               	movlb	0	; () banked
 11693  0016E6  90D8               	bcf	status,0,c
 11694  0016E8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 11695  0016EA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 11696  0016EC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 11697  0016EE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 11698  0016F0                     u5820:
 11699  0016F0  2EE8               	decfsz	wreg,f,c
 11700  0016F2  D7F8               	goto	u5825
 11701  0016F4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11702  0016F8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11703  0016FC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11704  001700  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11705                           
 11706                           ; BSR set to: 0
 11707                           ;inc\CANlib.h: 1034: tamp = tamp & 0x000000FF;
 11708  001704  0100               	movlb	0	; () banked
 11709  001706  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 11710  001708  0100               	movlb	0	; () banked
 11711  00170A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11712  00170C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11713  00170E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11714  001710  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11715                           
 11716                           ; BSR set to: 0
 11717                           ;inc\CANlib.h: 1035: RXF4SIDH = (unsigned char) tamp;
 11718  001712  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 11719  001716                     l4779:
 11720                           
 11721                           ; BSR set to: 0
 11722                           ;inc\CANlib.h: 1036: }
 11723                           ;inc\CANlib.h: 1038: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 11724  001716  0E05               	movlw	5
 11725  001718  0100               	movlb	0	; () banked
 11726  00171A  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 11727  00171C  A4D8               	btfss	status,2,c
 11728  00171E  0012               	return	
 11729                           
 11730                           ; BSR set to: 0
 11731  001720  0EF7               	movlw	247
 11732  001722  0100               	movlb	0	; () banked
 11733  001724  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 11734  001726  A4D8               	btfss	status,2,c
 11735  001728  0012               	return	
 11736                           
 11737                           ; BSR set to: 0
 11738                           ;inc\CANlib.h: 1039: {
 11739                           ;inc\CANlib.h: 1040: RXF5SIDLbits.EXIDEN = 0x01;
 11740  00172A  010F               	movlb	15	; () banked
 11741  00172C  8715               	bsf	21,3,b	;volatile
 11742                           
 11743                           ; BSR set to: 15
 11744                           ;inc\CANlib.h: 1042: tamp = filter & 0x000000FF;
 11745  00172E  0100               	movlb	0	; () banked
 11746  001730  5177               	movf	CANSetFilter@filter& (0+255),w,b
 11747  001732  0100               	movlb	0	; () banked
 11748  001734  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11749  001736  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11750  001738  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11751  00173A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11752                           
 11753                           ; BSR set to: 0
 11754                           ;inc\CANlib.h: 1043: RXF5EIDL = (unsigned char) tamp;
 11755  00173C  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 11756                           
 11757                           ; BSR set to: 0
 11758                           ;inc\CANlib.h: 1045: tamp = filter & 0x0000FF00;
 11759  001740  0E00               	movlw	0
 11760  001742  0100               	movlb	0	; () banked
 11761  001744  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 11762  001746  0100               	movlb	0	; () banked
 11763  001748  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11764  00174A  0EFF               	movlw	255
 11765  00174C  0100               	movlb	0	; () banked
 11766  00174E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 11767  001750  0100               	movlb	0	; () banked
 11768  001752  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 11769  001754  0E00               	movlw	0
 11770  001756  0100               	movlb	0	; () banked
 11771  001758  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 11772  00175A  0100               	movlb	0	; () banked
 11773  00175C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 11774  00175E  0E00               	movlw	0
 11775  001760  0100               	movlb	0	; () banked
 11776  001762  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 11777  001764  0100               	movlb	0	; () banked
 11778  001766  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 11779                           
 11780                           ; BSR set to: 0
 11781                           ;inc\CANlib.h: 1046: tamp = tamp >> 8;
 11782  001768  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 11783  00176C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 11784  001770  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 11785  001774  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 11786  001778  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 11787  00177C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 11788  001780  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 11789  001784  0100               	movlb	0	; () banked
 11790  001786  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 11791  001788  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11792  00178C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11793  001790  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11794  001794  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11795                           
 11796                           ; BSR set to: 0
 11797                           ;inc\CANlib.h: 1047: RXF5EIDH = (unsigned char) tamp;
 11798  001798  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 11799                           
 11800                           ; BSR set to: 0
 11801                           ;inc\CANlib.h: 1049: if (filter & 0x00010000)
 11802  00179C  0100               	movlb	0	; () banked
 11803  00179E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 11804  0017A0  D003               	goto	l512
 11805                           
 11806                           ; BSR set to: 0
 11807                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x01;
 11808  0017A2  010F               	movlb	15	; () banked
 11809  0017A4  8115               	bsf	21,0,b	;volatile
 11810  0017A6  D002               	goto	l513
 11811  0017A8                     l512:
 11812                           
 11813                           ; BSR set to: 0
 11814                           ;inc\CANlib.h: 1051: else
 11815                           ;inc\CANlib.h: 1052: RXF5SIDLbits.EID16 = 0x00;
 11816  0017A8  010F               	movlb	15	; () banked
 11817  0017AA  9115               	bcf	21,0,b	;volatile
 11818  0017AC                     l513:
 11819                           
 11820                           ; BSR set to: 15
 11821                           ;inc\CANlib.h: 1054: if (filter & 0x00020000)
 11822  0017AC  0100               	movlb	0	; () banked
 11823  0017AE  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 11824  0017B0  D003               	goto	l514
 11825                           
 11826                           ; BSR set to: 0
 11827                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x01;
 11828  0017B2  010F               	movlb	15	; () banked
 11829  0017B4  8315               	bsf	21,1,b	;volatile
 11830  0017B6  D002               	goto	l515
 11831  0017B8                     l514:
 11832                           
 11833                           ; BSR set to: 0
 11834                           ;inc\CANlib.h: 1056: else
 11835                           ;inc\CANlib.h: 1057: RXF5SIDLbits.EID17 = 0x00;
 11836  0017B8  010F               	movlb	15	; () banked
 11837  0017BA  9315               	bcf	21,1,b	;volatile
 11838  0017BC                     l515:
 11839                           
 11840                           ; BSR set to: 15
 11841                           ;inc\CANlib.h: 1059: if (filter & 0x00040000)
 11842  0017BC  0100               	movlb	0	; () banked
 11843  0017BE  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 11844  0017C0  D003               	goto	l516
 11845                           
 11846                           ; BSR set to: 0
 11847                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x01;
 11848  0017C2  010F               	movlb	15	; () banked
 11849  0017C4  8B15               	bsf	21,5,b	;volatile
 11850  0017C6  D002               	goto	l517
 11851  0017C8                     l516:
 11852                           
 11853                           ; BSR set to: 0
 11854                           ;inc\CANlib.h: 1061: else
 11855                           ;inc\CANlib.h: 1062: RXF5SIDLbits.SID0 = 0x00;
 11856  0017C8  010F               	movlb	15	; () banked
 11857  0017CA  9B15               	bcf	21,5,b	;volatile
 11858  0017CC                     l517:
 11859                           
 11860                           ; BSR set to: 15
 11861                           ;inc\CANlib.h: 1064: if (filter & 0x00080000)
 11862  0017CC  0100               	movlb	0	; () banked
 11863  0017CE  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 11864  0017D0  D003               	goto	l518
 11865                           
 11866                           ; BSR set to: 0
 11867                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x01;
 11868  0017D2  010F               	movlb	15	; () banked
 11869  0017D4  8D15               	bsf	21,6,b	;volatile
 11870  0017D6  D002               	goto	l519
 11871  0017D8                     l518:
 11872                           
 11873                           ; BSR set to: 0
 11874                           ;inc\CANlib.h: 1066: else
 11875                           ;inc\CANlib.h: 1067: RXF5SIDLbits.SID1 = 0x00;
 11876  0017D8  010F               	movlb	15	; () banked
 11877  0017DA  9D15               	bcf	21,6,b	;volatile
 11878  0017DC                     l519:
 11879                           
 11880                           ; BSR set to: 15
 11881                           ;inc\CANlib.h: 1069: if (filter & 0x00100000)
 11882  0017DC  0100               	movlb	0	; () banked
 11883  0017DE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 11884  0017E0  D003               	goto	l520
 11885                           
 11886                           ; BSR set to: 0
 11887                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x01 ;
 11888  0017E2  010F               	movlb	15	; () banked
 11889  0017E4  8F15               	bsf	21,7,b	;volatile
 11890  0017E6  D002               	goto	l4807
 11891  0017E8                     l520:
 11892                           
 11893                           ; BSR set to: 0
 11894                           ;inc\CANlib.h: 1071: else
 11895                           ;inc\CANlib.h: 1072: RXF5SIDLbits.SID2 = 0x00 ;
 11896  0017E8  010F               	movlb	15	; () banked
 11897  0017EA  9F15               	bcf	21,7,b	;volatile
 11898  0017EC                     l4807:
 11899                           
 11900                           ; BSR set to: 15
 11901                           ;inc\CANlib.h: 1074: tamp = (filter >> 21);
 11902  0017EC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 11903  0017F0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 11904  0017F4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 11905  0017F8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 11906  0017FC  0E16               	movlw	22
 11907  0017FE  D006               	goto	u5900
 11908  001800                     u5905:
 11909  001800  0100               	movlb	0	; () banked
 11910  001802  90D8               	bcf	status,0,c
 11911  001804  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 11912  001806  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 11913  001808  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 11914  00180A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 11915  00180C                     u5900:
 11916  00180C  2EE8               	decfsz	wreg,f,c
 11917  00180E  D7F8               	goto	u5905
 11918  001810  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11919  001814  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11920  001818  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11921  00181C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11922                           
 11923                           ; BSR set to: 0
 11924                           ;inc\CANlib.h: 1075: tamp = tamp & 0x000000FF;
 11925  001820  0100               	movlb	0	; () banked
 11926  001822  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 11927  001824  0100               	movlb	0	; () banked
 11928  001826  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11929  001828  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11930  00182A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11931  00182C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11932                           
 11933                           ; BSR set to: 0
 11934                           ;inc\CANlib.h: 1076: RXF5SIDH = (unsigned char) tamp;
 11935  00182E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 11936  001832  0012               	return	
 11937  001834                     __end_of_CANSetFilter:
 11938                           	opt stack 0
 11939                           tblptru	equ	0xFF8
 11940                           tblptrh	equ	0xFF7
 11941                           tblptrl	equ	0xFF6
 11942                           tablat	equ	0xFF5
 11943                           prodh	equ	0xFF4
 11944                           prodl	equ	0xFF3
 11945                           intcon	equ	0xFF2
 11946                           intcon2	equ	0xFF1
 11947                           postinc0	equ	0xFEE
 11948                           wreg	equ	0xFE8
 11949                           indf2	equ	0xFDF
 11950                           postinc2	equ	0xFDE
 11951                           postdec2	equ	0xFDD
 11952                           fsr2h	equ	0xFDA
 11953                           fsr2l	equ	0xFD9
 11954                           status	equ	0xFD8
 11955                           
 11956 ;; *************** function _CANOperationMode *****************
 11957 ;; Defined at:
 11958 ;;		line 207 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 11959 ;; Parameters:    Size  Location     Type
 11960 ;;  mode            1    wreg     enum E16307
 11961 ;; Auto vars:     Size  Location     Type
 11962 ;;  mode            1   23[BANK0 ] enum E16307
 11963 ;; Return value:  Size  Location     Type
 11964 ;;		None               void
 11965 ;; Registers used:
 11966 ;;		wreg, status,2, status,0
 11967 ;; Tracked objects:
 11968 ;;		On entry : 0/0
 11969 ;;		On exit  : 0/0
 11970 ;;		Unchanged: 0/0
 11971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11973 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11975 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11976 ;;Total ram usage:        1 bytes
 11977 ;; Hardware stack levels used:    1
 11978 ;; Hardware stack levels required when called:    4
 11979 ;; This function calls:
 11980 ;;		Nothing
 11981 ;; This function is called by:
 11982 ;;		_CANInitialize
 11983 ;; This function uses a non-reentrant model
 11984 ;;
 11985                           
 11986                           	psect	text27
 11987  004FEA                     __ptext27:
 11988                           	opt stack 0
 11989  004FEA                     _CANOperationMode:
 11990                           	opt stack 24
 11991                           
 11992                           ; BSR set to: 0
 11993                           ;incstack = 0
 11994                           ;CANOperationMode@mode stored from wreg
 11995  004FEA  0100               	movlb	0	; () banked
 11996  004FEC  6F77               	movwf	CANOperationMode@mode& (0+255),b
 11997                           
 11998                           ;inc\CANlib.h: 209: CANCON = mode;
 11999  004FEE  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 12000  004FF2                     l4403:
 12001  004FF2  506E               	movf	3950,w,c	;volatile
 12002  004FF4  0BE0               	andlw	224
 12003  004FF6  0100               	movlb	0	; () banked
 12004  004FF8  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 12005  004FFA  B4D8               	btfsc	status,2,c
 12006  004FFC  0012               	return	
 12007  004FFE  D7F9               	goto	l4403
 12008  005000                     __end_of_CANOperationMode:
 12009                           	opt stack 0
 12010                           tblptru	equ	0xFF8
 12011                           tblptrh	equ	0xFF7
 12012                           tblptrl	equ	0xFF6
 12013                           tablat	equ	0xFF5
 12014                           prodh	equ	0xFF4
 12015                           prodl	equ	0xFF3
 12016                           intcon	equ	0xFF2
 12017                           intcon2	equ	0xFF1
 12018                           postinc0	equ	0xFEE
 12019                           wreg	equ	0xFE8
 12020                           indf2	equ	0xFDF
 12021                           postinc2	equ	0xFDE
 12022                           postdec2	equ	0xFDD
 12023                           fsr2h	equ	0xFDA
 12024                           fsr2l	equ	0xFD9
 12025                           status	equ	0xFD8
 12026                           
 12027 ;; *************** function _can_interpreter *****************
 12028 ;; Defined at:
 12029 ;;		line 312 in file "parcheggio.c"
 12030 ;; Parameters:    Size  Location     Type
 12031 ;;		None
 12032 ;; Auto vars:     Size  Location     Type
 12033 ;;		None
 12034 ;; Return value:  Size  Location     Type
 12035 ;;		None               void
 12036 ;; Registers used:
 12037 ;;		wreg, status,2, status,0
 12038 ;; Tracked objects:
 12039 ;;		On entry : 0/0
 12040 ;;		On exit  : 0/0
 12041 ;;		Unchanged: 0/0
 12042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12045 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12046 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12047 ;;Total ram usage:        4 bytes
 12048 ;; Hardware stack levels used:    1
 12049 ;; Hardware stack levels required when called:    4
 12050 ;; This function calls:
 12051 ;;		Nothing
 12052 ;; This function is called by:
 12053 ;;		_main
 12054 ;; This function uses a non-reentrant model
 12055 ;;
 12056                           
 12057                           	psect	text28
 12058  004DE8                     __ptext28:
 12059                           	opt stack 0
 12060  004DE8                     _can_interpreter:
 12061                           	opt stack 26
 12062                           
 12063                           ;parcheggio.c: 313: left_speed = data_speed_rx[1];
 12064                           
 12065                           ; BSR set to: 0
 12066                           ;incstack = 0
 12067  004DE8  C109  F038         	movff	_data_speed_rx+1,_left_speed
 12068  004DEC  6A39               	clrf	_left_speed+1,c
 12069                           
 12070                           ;parcheggio.c: 314: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 12071  004DEE  5038               	movf	_left_speed,w,c
 12072  004DF0  0100               	movlb	0	; () banked
 12073  004DF2  6F77               	movwf	??_can_interpreter& (0+255),b
 12074  004DF4  0101               	movlb	1	; () banked
 12075  004DF6  5108               	movf	_data_speed_rx& (0+255),w,b
 12076  004DF8  6E38               	movwf	_left_speed,c
 12077  004DFA  C077  F039         	movff	??_can_interpreter,_left_speed+1
 12078                           
 12079                           ; BSR set to: 1
 12080                           ;parcheggio.c: 315: right_speed = data_speed_rx[3];
 12081  004DFE  C10B  F03C         	movff	_data_speed_rx+3,_right_speed
 12082  004E02  6A3D               	clrf	_right_speed+1,c
 12083                           
 12084                           ;parcheggio.c: 316: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 12085  004E04  503C               	movf	_right_speed,w,c
 12086  004E06  0100               	movlb	0	; () banked
 12087  004E08  6F77               	movwf	??_can_interpreter& (0+255),b
 12088  004E0A  0101               	movlb	1	; () banked
 12089  004E0C  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 12090  004E0E  6E3C               	movwf	_right_speed,c
 12091  004E10  C077  F03D         	movff	??_can_interpreter,_right_speed+1
 12092                           
 12093                           ; BSR set to: 1
 12094                           ;parcheggio.c: 317: actual_speed = (right_speed + left_speed) / 2;
 12095  004E14  5038               	movf	_left_speed,w,c
 12096  004E16  243C               	addwf	_right_speed,w,c
 12097  004E18  0100               	movlb	0	; () banked
 12098  004E1A  6F77               	movwf	??_can_interpreter& (0+255),b
 12099  004E1C  5039               	movf	_left_speed+1,w,c
 12100  004E1E  203D               	addwfc	_right_speed+1,w,c
 12101  004E20  0100               	movlb	0	; () banked
 12102  004E22  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 12103  004E24  90D8               	bcf	status,0,c
 12104  004E26  0100               	movlb	0	; () banked
 12105  004E28  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 12106  004E2A  0100               	movlb	0	; () banked
 12107  004E2C  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 12108  004E2E  0100               	movlb	0	; () banked
 12109  004E30  3177               	rrcf	??_can_interpreter& (0+255),w,b
 12110  004E32  0100               	movlb	0	; () banked
 12111  004E34  6FDF               	movwf	_actual_speed& (0+255),b
 12112  004E36  C079  F0E0         	movff	??_can_interpreter+2,_actual_speed+1
 12113                           
 12114                           ; BSR set to: 0
 12115  004E3A  0012               	return		;funcret
 12116  004E3C                     __end_of_can_interpreter:
 12117                           	opt stack 0
 12118                           tblptru	equ	0xFF8
 12119                           tblptrh	equ	0xFF7
 12120                           tblptrl	equ	0xFF6
 12121                           tablat	equ	0xFF5
 12122                           prodh	equ	0xFF4
 12123                           prodl	equ	0xFF3
 12124                           intcon	equ	0xFF2
 12125                           intcon2	equ	0xFF1
 12126                           postinc0	equ	0xFEE
 12127                           wreg	equ	0xFE8
 12128                           indf2	equ	0xFDF
 12129                           postinc2	equ	0xFDE
 12130                           postdec2	equ	0xFDD
 12131                           fsr2h	equ	0xFDA
 12132                           fsr2l	equ	0xFD9
 12133                           status	equ	0xFD8
 12134                           
 12135 ;; *************** function _ISR_Bassa *****************
 12136 ;; Defined at:
 12137 ;;		line 94 in file "parcheggio.c"
 12138 ;; Parameters:    Size  Location     Type
 12139 ;;		None
 12140 ;; Auto vars:     Size  Location     Type
 12141 ;;  i               1   34[COMRAM] unsigned char 
 12142 ;;  gigi            1   33[COMRAM] unsigned char 
 12143 ;; Return value:  Size  Location     Type
 12144 ;;		None               void
 12145 ;; Registers used:
 12146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12147 ;; Tracked objects:
 12148 ;;		On entry : 0/0
 12149 ;;		On exit  : 0/0
 12150 ;;		Unchanged: 0/0
 12151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12153 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12154 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12155 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12156 ;;Total ram usage:       23 bytes
 12157 ;; Hardware stack levels used:    1
 12158 ;; Hardware stack levels required when called:    3
 12159 ;; This function calls:
 12160 ;;		_CANreceiveMessage
 12161 ;; This function is called by:
 12162 ;;		Interrupt level 1
 12163 ;; This function uses a non-reentrant model
 12164 ;;
 12165                           
 12166                           	psect	intcodelo
 12167  000018                     __pintcodelo:
 12168                           	opt stack 0
 12169  000018                     _ISR_Bassa:
 12170                           	opt stack 21
 12171                           
 12172                           ; BSR set to: 0
 12173                           ;incstack = 0
 12174  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 12175  00001A  CFD8 F011          	movff	status,??_ISR_Bassa+4
 12176  00001E  CFE8 F012          	movff	wreg,??_ISR_Bassa+5
 12177  000022  CFE0 F013          	movff	bsr,??_ISR_Bassa+6
 12178  000026  CFFA F014          	movff	pclath,??_ISR_Bassa+7
 12179  00002A  CFFB F015          	movff	pclatu,??_ISR_Bassa+8
 12180  00002E  CFE9 F016          	movff	fsr0l,??_ISR_Bassa+9
 12181  000032  CFEA F017          	movff	fsr0h,??_ISR_Bassa+10
 12182  000036  CFE1 F018          	movff	fsr1l,??_ISR_Bassa+11
 12183  00003A  CFE2 F019          	movff	fsr1h,??_ISR_Bassa+12
 12184  00003E  CFD9 F01A          	movff	fsr2l,??_ISR_Bassa+13
 12185  000042  CFDA F01B          	movff	fsr2h,??_ISR_Bassa+14
 12186  000046  CFF3 F01C          	movff	prodl,??_ISR_Bassa+15
 12187  00004A  CFF4 F01D          	movff	prodh,??_ISR_Bassa+16
 12188  00004E  CFF6 F01E          	movff	tblptrl,??_ISR_Bassa+17
 12189  000052  CFF7 F01F          	movff	tblptrh,??_ISR_Bassa+18
 12190  000056  CFF8 F020          	movff	tblptru,??_ISR_Bassa+19
 12191  00005A  CFF5 F021          	movff	tablat,??_ISR_Bassa+20
 12192                           
 12193                           ;parcheggio.c: 96: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 12194  00005E  A0A4               	btfss	4004,0,c	;volatile
 12195  000060  B2A4               	btfsc	4004,1,c	;volatile
 12196  000062  D001               	goto	i1l5405
 12197  000064  D09C               	goto	i1l661
 12198  000066                     i1l5405:
 12199                           
 12200                           ;parcheggio.c: 97: CANreceiveMessage(&msg);
 12201  000066  0E20               	movlw	low _msg
 12202  000068  6E01               	movwf	CANreceiveMessage@msg,c
 12203  00006A  0E01               	movlw	high _msg
 12204  00006C  6E02               	movwf	CANreceiveMessage@msg+1,c
 12205  00006E  ECE0  F00F         	call	_CANreceiveMessage	;wreg free
 12206                           
 12207                           ;parcheggio.c: 98: if (msg.identifier == 0b00000001101){
 12208  000072  0E0D               	movlw	13
 12209  000074  0101               	movlb	1	; () banked
 12210  000076  1920               	xorwf	_msg& (0+255),w,b
 12211  000078  0101               	movlb	1	; () banked
 12212  00007A  1121               	iorwf	(_msg+1)& (0+255),w,b
 12213  00007C  0101               	movlb	1	; () banked
 12214  00007E  1122               	iorwf	(_msg+2)& (0+255),w,b
 12215  000080  0101               	movlb	1	; () banked
 12216  000082  1123               	iorwf	(_msg+3)& (0+255),w,b
 12217  000084  B4D8               	btfsc	status,2,c
 12218                           
 12219                           ; BSR set to: 1
 12220                           ;parcheggio.c: 99: asd = 0;
 12221  000086  9244               	bcf	_asd/(0+8),_asd& (0+7),c	;volatile
 12222                           
 12223                           ; BSR set to: 1
 12224                           ;parcheggio.c: 100: }
 12225                           ;parcheggio.c: 101: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 12226                           
 12227                           ; BSR set to: 1
 12228  000088  0E07               	movlw	7
 12229  00008A  0101               	movlb	1	; () banked
 12230  00008C  1920               	xorwf	_msg& (0+255),w,b
 12231  00008E  0101               	movlb	1	; () banked
 12232  000090  1121               	iorwf	(_msg+1)& (0+255),w,b
 12233  000092  0101               	movlb	1	; () banked
 12234  000094  1122               	iorwf	(_msg+2)& (0+255),w,b
 12235  000096  0101               	movlb	1	; () banked
 12236  000098  1123               	iorwf	(_msg+3)& (0+255),w,b
 12237  00009A  A4D8               	btfss	status,2,c
 12238  00009C  D02C               	goto	i1l5425
 12239                           
 12240                           ; BSR set to: 1
 12241  00009E  0101               	movlb	1	; () banked
 12242  0000A0  052E               	decf	(_msg+14)& (0+255),w,b
 12243  0000A2  B4D8               	btfsc	status,2,c
 12244  0000A4  D028               	goto	i1l5425
 12245                           
 12246                           ; BSR set to: 1
 12247                           ;parcheggio.c: 102: distance_average = 0;
 12248  0000A6  0E00               	movlw	0
 12249  0000A8  0100               	movlb	0	; () banked
 12250  0000AA  6FE4               	movwf	(_distance_average+1)& (0+255),b	;volatile
 12251  0000AC  0E00               	movlw	0
 12252  0000AE  6FE3               	movwf	_distance_average& (0+255),b	;volatile
 12253                           
 12254                           ; BSR set to: 0
 12255                           ;parcheggio.c: 103: distance_dx = msg.data[1];
 12256  0000B0  C125  F034         	movff	_msg+5,_distance_dx	;volatile
 12257  0000B4  6A35               	clrf	_distance_dx+1,c	;volatile
 12258                           
 12259                           ;parcheggio.c: 104: distance_dx = ((distance_dx << 8) | msg.data[0]);
 12260  0000B6  5034               	movf	_distance_dx,w,c	;volatile
 12261  0000B8  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 12262  0000BA  0101               	movlb	1	; () banked
 12263  0000BC  5124               	movf	(_msg+4)& (0+255),w,b
 12264  0000BE  6E34               	movwf	_distance_dx,c	;volatile
 12265  0000C0  C00D  F035         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 12266                           
 12267                           ; BSR set to: 1
 12268                           ;parcheggio.c: 105: distance_sx = msg.data[3];
 12269  0000C4  C127  F036         	movff	_msg+7,_distance_sx	;volatile
 12270  0000C8  6A37               	clrf	_distance_sx+1,c	;volatile
 12271                           
 12272                           ;parcheggio.c: 106: distance_sx = ((distance_sx << 8) | msg.data[2]);
 12273  0000CA  5036               	movf	_distance_sx,w,c	;volatile
 12274  0000CC  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 12275  0000CE  0101               	movlb	1	; () banked
 12276  0000D0  5126               	movf	(_msg+6)& (0+255),w,b
 12277  0000D2  6E36               	movwf	_distance_sx,c	;volatile
 12278  0000D4  C00D  F037         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 12279                           
 12280                           ; BSR set to: 1
 12281                           ;parcheggio.c: 107: distance_average = (distance_sx + distance_dx) / 2;
 12282  0000D8  5034               	movf	_distance_dx,w,c	;volatile
 12283  0000DA  2436               	addwf	_distance_sx,w,c	;volatile
 12284  0000DC  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 12285  0000DE  5035               	movf	_distance_dx+1,w,c	;volatile
 12286  0000E0  2037               	addwfc	_distance_sx+1,w,c	;volatile
 12287  0000E2  6E0E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 12288  0000E4  90D8               	bcf	status,0,c
 12289  0000E6  300E               	rrcf	??_ISR_Bassa+1,w,c
 12290  0000E8  6E0F               	movwf	(??_ISR_Bassa+2)& (0+255),c
 12291  0000EA  300D               	rrcf	??_ISR_Bassa,w,c
 12292  0000EC  0100               	movlb	0	; () banked
 12293  0000EE  6FE3               	movwf	_distance_average& (0+255),b	;volatile
 12294  0000F0  C00F  F0E4         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 12295                           
 12296                           ; BSR set to: 0
 12297                           ;parcheggio.c: 108: distance_received = 1;
 12298  0000F4  8844               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 12299  0000F6                     i1l5425:
 12300                           
 12301                           ;parcheggio.c: 109: }
 12302                           ;parcheggio.c: 110: if (msg.identifier == 0b00000001010) {
 12303  0000F6  0E0A               	movlw	10
 12304  0000F8  0101               	movlb	1	; () banked
 12305  0000FA  1920               	xorwf	_msg& (0+255),w,b
 12306  0000FC  0101               	movlb	1	; () banked
 12307  0000FE  1121               	iorwf	(_msg+1)& (0+255),w,b
 12308  000100  0101               	movlb	1	; () banked
 12309  000102  1122               	iorwf	(_msg+2)& (0+255),w,b
 12310  000104  0101               	movlb	1	; () banked
 12311  000106  1123               	iorwf	(_msg+3)& (0+255),w,b
 12312  000108  A4D8               	btfss	status,2,c
 12313  00010A  D00C               	goto	i1l5431
 12314                           
 12315                           ; BSR set to: 1
 12316                           ;parcheggio.c: 111: if (msg.data[0] == 1) {
 12317  00010C  0101               	movlb	1	; () banked
 12318  00010E  0524               	decf	(_msg+4)& (0+255),w,b
 12319  000110  A4D8               	btfss	status,2,c
 12320  000112  D003               	goto	i1l667
 12321                           
 12322                           ; BSR set to: 1
 12323                           ;parcheggio.c: 112: activation = 1;
 12324  000114  8044               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 12325                           
 12326                           ;parcheggio.c: 113: PORTBbits.RB6 = 1;
 12327  000116  8C81               	bsf	3969,6,c	;volatile
 12328                           
 12329                           ;parcheggio.c: 114: } else {
 12330  000118  D005               	goto	i1l5431
 12331  00011A                     i1l667:
 12332                           
 12333                           ; BSR set to: 1
 12334                           ;parcheggio.c: 115: activation = 0;
 12335  00011A  9044               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 12336                           
 12337                           ;parcheggio.c: 116: PORTBbits.RB4 = 0;
 12338  00011C  9881               	bcf	3969,4,c	;volatile
 12339                           
 12340                           ;parcheggio.c: 117: PORTBbits.RB5 = 0;
 12341  00011E  9A81               	bcf	3969,5,c	;volatile
 12342                           
 12343                           ;parcheggio.c: 118: PORTBbits.RB6 = 0;
 12344  000120  9C81               	bcf	3969,6,c	;volatile
 12345                           
 12346                           ;parcheggio.c: 119: request_sent = 0;
 12347  000122  9E44               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
 12348  000124                     i1l5431:
 12349                           
 12350                           ; BSR set to: 1
 12351                           ;parcheggio.c: 120: }
 12352                           ;parcheggio.c: 121: }
 12353                           ;parcheggio.c: 122: if (msg.identifier == 0b00000001100) {
 12354  000124  0E0C               	movlw	12
 12355  000126  0101               	movlb	1	; () banked
 12356  000128  1920               	xorwf	_msg& (0+255),w,b
 12357  00012A  0101               	movlb	1	; () banked
 12358  00012C  1121               	iorwf	(_msg+1)& (0+255),w,b
 12359  00012E  0101               	movlb	1	; () banked
 12360  000130  1122               	iorwf	(_msg+2)& (0+255),w,b
 12361  000132  0101               	movlb	1	; () banked
 12362  000134  1123               	iorwf	(_msg+3)& (0+255),w,b
 12363  000136  B4D8               	btfsc	status,2,c
 12364                           
 12365                           ; BSR set to: 1
 12366                           ;parcheggio.c: 123: start_operation = 1;
 12367  000138  8045               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 12368                           
 12369                           ; BSR set to: 1
 12370                           ;parcheggio.c: 124: }
 12371                           ;parcheggio.c: 125: if (msg.identifier == 0b00000000110) {
 12372                           
 12373                           ; BSR set to: 1
 12374  00013A  0E06               	movlw	6
 12375  00013C  0101               	movlb	1	; () banked
 12376  00013E  1920               	xorwf	_msg& (0+255),w,b
 12377  000140  0101               	movlb	1	; () banked
 12378  000142  1121               	iorwf	(_msg+1)& (0+255),w,b
 12379  000144  0101               	movlb	1	; () banked
 12380  000146  1122               	iorwf	(_msg+2)& (0+255),w,b
 12381  000148  0101               	movlb	1	; () banked
 12382  00014A  1123               	iorwf	(_msg+3)& (0+255),w,b
 12383  00014C  A4D8               	btfss	status,2,c
 12384  00014E  D025               	goto	i1l670
 12385                           
 12386                           ; BSR set to: 1
 12387                           ;parcheggio.c: 126: for (unsigned char i = 0; i < 8; i++) {
 12388  000150  0E00               	movlw	0
 12389  000152  6E23               	movwf	ISR_Bassa@i,c
 12390  000154                     i1l5439:
 12391                           
 12392                           ; BSR set to: 1
 12393  000154  0E07               	movlw	7
 12394  000156  6423               	cpfsgt	ISR_Bassa@i,c
 12395  000158  D001               	goto	i1l5443
 12396  00015A  D014               	goto	i1l5449
 12397  00015C                     i1l5443:
 12398                           
 12399                           ;parcheggio.c: 127: data_speed_rx[i] = msg.data[i];
 12400  00015C  5023               	movf	ISR_Bassa@i,w,c
 12401  00015E  0D01               	mullw	1
 12402  000160  0E24               	movlw	low (_msg+4)
 12403  000162  24F3               	addwf	prodl,w,c
 12404  000164  6ED9               	movwf	fsr2l,c
 12405  000166  0E01               	movlw	high (_msg+4)
 12406  000168  20F4               	addwfc	prodh,w,c
 12407  00016A  6EDA               	movwf	fsr2h,c
 12408  00016C  5023               	movf	ISR_Bassa@i,w,c
 12409  00016E  0D01               	mullw	1
 12410  000170  0E08               	movlw	low _data_speed_rx
 12411  000172  24F3               	addwf	prodl,w,c
 12412  000174  6EE1               	movwf	fsr1l,c
 12413  000176  0E01               	movlw	high _data_speed_rx
 12414  000178  20F4               	addwfc	prodh,w,c
 12415  00017A  6EE2               	movwf	fsr1h,c
 12416  00017C  CFDF FFE7          	movff	indf2,indf1
 12417  000180  2A23               	incf	ISR_Bassa@i,f,c
 12418  000182  D7E8               	goto	i1l5439
 12419  000184                     i1l5449:
 12420                           
 12421                           ;parcheggio.c: 128: }
 12422                           ;parcheggio.c: 129: if (msg.identifier == 0b00000001101) {
 12423  000184  0E0D               	movlw	13
 12424  000186  0101               	movlb	1	; () banked
 12425  000188  1920               	xorwf	_msg& (0+255),w,b
 12426  00018A  0101               	movlb	1	; () banked
 12427  00018C  1121               	iorwf	(_msg+1)& (0+255),w,b
 12428  00018E  0101               	movlb	1	; () banked
 12429  000190  1122               	iorwf	(_msg+2)& (0+255),w,b
 12430  000192  0101               	movlb	1	; () banked
 12431  000194  1123               	iorwf	(_msg+3)& (0+255),w,b
 12432  000196  B4D8               	btfsc	status,2,c
 12433                           
 12434                           ; BSR set to: 1
 12435                           ;parcheggio.c: 130: distance_wait = 0;
 12436  000198  9A44               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 12437  00019A                     i1l670:
 12438                           
 12439                           ; BSR set to: 1
 12440                           ;parcheggio.c: 131: }
 12441                           ;parcheggio.c: 133: }
 12442                           ;parcheggio.c: 135: PIR3bits.RXB0IF = 0;
 12443  00019A  90A4               	bcf	4004,0,c	;volatile
 12444                           
 12445                           ;parcheggio.c: 136: PIR3bits.RXB1IF = 0;
 12446  00019C  92A4               	bcf	4004,1,c	;volatile
 12447  00019E                     i1l661:
 12448                           
 12449                           ;parcheggio.c: 137: }
 12450                           ;parcheggio.c: 139: if (INTCONbits.TMR0IF == 1) {
 12451  00019E  A4F2               	btfss	intcon,2,c	;volatile
 12452  0001A0  D033               	goto	i1l677
 12453                           
 12454                           ;parcheggio.c: 140: INTCONbits.INT0IE = 0;
 12455  0001A2  98F2               	bcf	intcon,4,c	;volatile
 12456                           
 12457                           ;parcheggio.c: 141: TMR0H = 0x34;
 12458  0001A4  0E34               	movlw	52
 12459  0001A6  6ED7               	movwf	4055,c	;volatile
 12460                           
 12461                           ;parcheggio.c: 142: TMR0L = 0xE0;
 12462  0001A8  0EE0               	movlw	224
 12463  0001AA  6ED6               	movwf	4054,c	;volatile
 12464                           
 12465                           ;parcheggio.c: 143: if (distance_error == 1) {
 12466  0001AC  A644               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 12467  0001AE  D00C               	goto	i1l5461
 12468                           
 12469                           ;parcheggio.c: 144: sensor_distance[MUX_index] = 5000;
 12470  0001B0  5040               	movf	_MUX_index,w,c	;volatile
 12471  0001B2  0D02               	mullw	2
 12472  0001B4  0E24               	movlw	low _sensor_distance
 12473  0001B6  24F3               	addwf	prodl,w,c
 12474  0001B8  6ED9               	movwf	fsr2l,c
 12475  0001BA  0E00               	movlw	high _sensor_distance
 12476  0001BC  20F4               	addwfc	prodh,w,c
 12477  0001BE  6EDA               	movwf	fsr2h,c
 12478  0001C0  0E88               	movlw	136
 12479  0001C2  6EDE               	movwf	postinc2,c
 12480  0001C4  0E13               	movlw	19
 12481  0001C6  6EDD               	movwf	postdec2,c
 12482  0001C8                     i1l5461:
 12483                           
 12484                           ;parcheggio.c: 145: }
 12485                           ;parcheggio.c: 146: MUX_index++;
 12486  0001C8  2A40               	incf	_MUX_index,f,c	;volatile
 12487                           
 12488                           ;parcheggio.c: 147: if (MUX_index == 9) {
 12489  0001CA  0E09               	movlw	9
 12490  0001CC  1840               	xorwf	_MUX_index,w,c	;volatile
 12491  0001CE  A4D8               	btfss	status,2,c
 12492  0001D0  D002               	goto	i1l676
 12493                           
 12494                           ;parcheggio.c: 148: MUX_index = 0;
 12495  0001D2  0E00               	movlw	0
 12496  0001D4  6E40               	movwf	_MUX_index,c	;volatile
 12497  0001D6                     i1l676:
 12498                           
 12499                           ;parcheggio.c: 149: }
 12500                           ;parcheggio.c: 151: unsigned char gigi = 0;
 12501  0001D6  0E00               	movlw	0
 12502  0001D8  6E22               	movwf	ISR_Bassa@gigi,c
 12503                           
 12504                           ;parcheggio.c: 152: gigi = MUX_select[MUX_index];
 12505  0001DA  5040               	movf	_MUX_index,w,c	;volatile
 12506  0001DC  0D01               	mullw	1
 12507  0001DE  0E00               	movlw	low _MUX_select
 12508  0001E0  24F3               	addwf	prodl,w,c
 12509  0001E2  6ED9               	movwf	fsr2l,c
 12510  0001E4  0E01               	movlw	high _MUX_select
 12511  0001E6  20F4               	addwfc	prodh,w,c
 12512  0001E8  6EDA               	movwf	fsr2h,c
 12513  0001EA  50DF               	movf	indf2,w,c
 12514  0001EC  6E22               	movwf	ISR_Bassa@gigi,c
 12515                           
 12516                           ;parcheggio.c: 153: PORTA = gigi;
 12517  0001EE  C022  FF80         	movff	ISR_Bassa@gigi,3968	;volatile
 12518                           
 12519                           ;parcheggio.c: 154: TRISBbits.RB0 = 0;
 12520  0001F2  9093               	bcf	3987,0,c	;volatile
 12521                           
 12522                           ;parcheggio.c: 155: LATBbits.LATB0 = 1;
 12523  0001F4  808A               	bsf	3978,0,c	;volatile
 12524                           
 12525                           ;parcheggio.c: 156: _delay((unsigned long)((15)*(16000000/4000000.0)));
 12526  0001F6  0E14               	movlw	20
 12527  0001F8                     i1u822_27:
 12528  0001F8  2EE8               	decfsz	wreg,f,c
 12529  0001FA  D7FE               	goto	i1u822_27
 12530                           
 12531                           ;parcheggio.c: 157: distance_error = 1;
 12532  0001FC  8644               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 12533                           
 12534                           ;parcheggio.c: 158: LATBbits.LATB0 = 0;
 12535  0001FE  908A               	bcf	3978,0,c	;volatile
 12536                           
 12537                           ;parcheggio.c: 159: TRISBbits.RB0 = 1;
 12538  000200  8093               	bsf	3987,0,c	;volatile
 12539                           
 12540                           ;parcheggio.c: 160: INTCONbits.INT0IF = 0;
 12541  000202  92F2               	bcf	intcon,1,c	;volatile
 12542                           
 12543                           ;parcheggio.c: 161: INTCONbits.INT0IE = 1;
 12544  000204  88F2               	bsf	intcon,4,c	;volatile
 12545                           
 12546                           ;parcheggio.c: 162: INTCONbits.TMR0IF = 0;
 12547  000206  94F2               	bcf	intcon,2,c	;volatile
 12548  000208                     i1l677:
 12549  000208  C021  FFF5         	movff	??_ISR_Bassa+20,tablat
 12550  00020C  C020  FFF8         	movff	??_ISR_Bassa+19,tblptru
 12551  000210  C01F  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 12552  000214  C01E  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 12553  000218  C01D  FFF4         	movff	??_ISR_Bassa+16,prodh
 12554  00021C  C01C  FFF3         	movff	??_ISR_Bassa+15,prodl
 12555  000220  C01B  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 12556  000224  C01A  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 12557  000228  C019  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 12558  00022C  C018  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 12559  000230  C017  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 12560  000234  C016  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 12561  000238  C015  FFFB         	movff	??_ISR_Bassa+8,pclatu
 12562  00023C  C014  FFFA         	movff	??_ISR_Bassa+7,pclath
 12563  000240  C013  FFE0         	movff	??_ISR_Bassa+6,bsr
 12564  000244  C012  FFE8         	movff	??_ISR_Bassa+5,wreg
 12565  000248  C011  FFD8         	movff	??_ISR_Bassa+4,status
 12566  00024C  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 12567  00024E  0010               	retfie	
 12568  000250                     __end_of_ISR_Bassa:
 12569                           	opt stack 0
 12570                           pclatu	equ	0xFFB
 12571                           pclath	equ	0xFFA
 12572                           tblptru	equ	0xFF8
 12573                           tblptrh	equ	0xFF7
 12574                           tblptrl	equ	0xFF6
 12575                           tablat	equ	0xFF5
 12576                           prodh	equ	0xFF4
 12577                           prodl	equ	0xFF3
 12578                           intcon	equ	0xFF2
 12579                           intcon2	equ	0xFF1
 12580                           postinc0	equ	0xFEE
 12581                           fsr0h	equ	0xFEA
 12582                           fsr0l	equ	0xFE9
 12583                           wreg	equ	0xFE8
 12584                           indf1	equ	0xFE7
 12585                           fsr1h	equ	0xFE2
 12586                           fsr1l	equ	0xFE1
 12587                           bsr	equ	0xFE0
 12588                           indf2	equ	0xFDF
 12589                           postinc2	equ	0xFDE
 12590                           postdec2	equ	0xFDD
 12591                           fsr2h	equ	0xFDA
 12592                           fsr2l	equ	0xFD9
 12593                           status	equ	0xFD8
 12594                           
 12595 ;; *************** function _CANreceiveMessage *****************
 12596 ;; Defined at:
 12597 ;;		line 529 in file "../../LaurTec_PIC_libraries_v_3.3.0/inc\CANlib.h"
 12598 ;; Parameters:    Size  Location     Type
 12599 ;;  msg             2    0[COMRAM] PTR struct .
 12600 ;;		 -> msg(15), 
 12601 ;; Auto vars:     Size  Location     Type
 12602 ;;  tamp            1   11[COMRAM] unsigned char 
 12603 ;;  error           1   10[COMRAM] unsigned char 
 12604 ;; Return value:  Size  Location     Type
 12605 ;;                  1    wreg      unsigned char 
 12606 ;; Registers used:
 12607 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12608 ;; Tracked objects:
 12609 ;;		On entry : 0/0
 12610 ;;		On exit  : 0/0
 12611 ;;		Unchanged: 0/0
 12612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12614 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12615 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12616 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12617 ;;Total ram usage:       12 bytes
 12618 ;; Hardware stack levels used:    1
 12619 ;; Hardware stack levels required when called:    2
 12620 ;; This function calls:
 12621 ;;		Nothing
 12622 ;; This function is called by:
 12623 ;;		_ISR_Bassa
 12624 ;; This function uses a non-reentrant model
 12625 ;;
 12626                           
 12627                           	psect	text30
 12628  001FC0                     __ptext30:
 12629                           	opt stack 0
 12630  001FC0                     _CANreceiveMessage:
 12631                           	opt stack 21
 12632                           
 12633                           ;inc\CANlib.h: 531: BYTE tamp;
 12634                           ;inc\CANlib.h: 532: BYTE error = 0;
 12635                           
 12636                           ;incstack = 0
 12637  001FC0  0E00               	movlw	0
 12638  001FC2  6E0B               	movwf	CANreceiveMessage@error,c
 12639                           
 12640                           ;inc\CANlib.h: 534: if (COMSTATbits.RXB0OVFL == 0x01)
 12641  001FC4  BE74               	btfsc	3956,7,c	;volatile
 12642                           
 12643                           ;inc\CANlib.h: 535: error |= CAN_RX_BUFFER_1_OVFL;
 12644  001FC6  800B               	bsf	CANreceiveMessage@error,0,c
 12645                           
 12646                           ;inc\CANlib.h: 537: if (COMSTATbits.RXB1OVFL == 0x01)
 12647  001FC8  BC74               	btfsc	3956,6,c	;volatile
 12648                           
 12649                           ;inc\CANlib.h: 538: error |= CAN_RX_BUFFER_2_OVFL;
 12650  001FCA  820B               	bsf	CANreceiveMessage@error,1,c
 12651                           
 12652                           ;inc\CANlib.h: 541: if (RXB1CONbits.RXFUL ==0x01)
 12653  001FCC  010F               	movlb	15	; () banked
 12654  001FCE  AF50               	btfss	80,7,b	;volatile
 12655  001FD0  D143               	goto	i1l404
 12656                           
 12657                           ; BSR set to: 15
 12658                           ;inc\CANlib.h: 542: {
 12659                           ;inc\CANlib.h: 543: msg->identifier = 0;
 12660  001FD2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12661  001FD6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12662  001FDA  6ADE               	clrf	postinc2,c
 12663  001FDC  6ADE               	clrf	postinc2,c
 12664  001FDE  6ADE               	clrf	postinc2,c
 12665  001FE0  6ADD               	clrf	postdec2,c
 12666                           
 12667                           ; BSR set to: 15
 12668                           ;inc\CANlib.h: 544: msg->data[0] =RXB1D0;
 12669  001FE2  EE20 F004          	lfsr	2,4
 12670  001FE6  5001               	movf	CANreceiveMessage@msg,w,c
 12671  001FE8  26D9               	addwf	fsr2l,f,c
 12672  001FEA  5002               	movf	CANreceiveMessage@msg+1,w,c
 12673  001FEC  22DA               	addwfc	fsr2h,f,c
 12674  001FEE  CF56 FFDF          	movff	3926,indf2	;volatile
 12675                           
 12676                           ; BSR set to: 15
 12677                           ;inc\CANlib.h: 545: msg->data[1] =RXB1D1;
 12678  001FF2  EE20 F005          	lfsr	2,5
 12679  001FF6  5001               	movf	CANreceiveMessage@msg,w,c
 12680  001FF8  26D9               	addwf	fsr2l,f,c
 12681  001FFA  5002               	movf	CANreceiveMessage@msg+1,w,c
 12682  001FFC  22DA               	addwfc	fsr2h,f,c
 12683  001FFE  CF57 FFDF          	movff	3927,indf2	;volatile
 12684                           
 12685                           ; BSR set to: 15
 12686                           ;inc\CANlib.h: 546: msg->data[2] =RXB1D2;
 12687  002002  EE20 F006          	lfsr	2,6
 12688  002006  5001               	movf	CANreceiveMessage@msg,w,c
 12689  002008  26D9               	addwf	fsr2l,f,c
 12690  00200A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12691  00200C  22DA               	addwfc	fsr2h,f,c
 12692  00200E  CF58 FFDF          	movff	3928,indf2	;volatile
 12693                           
 12694                           ; BSR set to: 15
 12695                           ;inc\CANlib.h: 547: msg->data[3] =RXB1D3;
 12696  002012  EE20 F007          	lfsr	2,7
 12697  002016  5001               	movf	CANreceiveMessage@msg,w,c
 12698  002018  26D9               	addwf	fsr2l,f,c
 12699  00201A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12700  00201C  22DA               	addwfc	fsr2h,f,c
 12701  00201E  CF59 FFDF          	movff	3929,indf2	;volatile
 12702                           
 12703                           ; BSR set to: 15
 12704                           ;inc\CANlib.h: 548: msg->data[4] =RXB1D4;
 12705  002022  EE20 F008          	lfsr	2,8
 12706  002026  5001               	movf	CANreceiveMessage@msg,w,c
 12707  002028  26D9               	addwf	fsr2l,f,c
 12708  00202A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12709  00202C  22DA               	addwfc	fsr2h,f,c
 12710  00202E  CF5A FFDF          	movff	3930,indf2	;volatile
 12711                           
 12712                           ; BSR set to: 15
 12713                           ;inc\CANlib.h: 549: msg->data[5] =RXB1D5;
 12714  002032  EE20 F009          	lfsr	2,9
 12715  002036  5001               	movf	CANreceiveMessage@msg,w,c
 12716  002038  26D9               	addwf	fsr2l,f,c
 12717  00203A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12718  00203C  22DA               	addwfc	fsr2h,f,c
 12719  00203E  CF5B FFDF          	movff	3931,indf2	;volatile
 12720                           
 12721                           ; BSR set to: 15
 12722                           ;inc\CANlib.h: 550: msg->data[6] =RXB1D6;
 12723  002042  EE20 F00A          	lfsr	2,10
 12724  002046  5001               	movf	CANreceiveMessage@msg,w,c
 12725  002048  26D9               	addwf	fsr2l,f,c
 12726  00204A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12727  00204C  22DA               	addwfc	fsr2h,f,c
 12728  00204E  CF5C FFDF          	movff	3932,indf2	;volatile
 12729                           
 12730                           ; BSR set to: 15
 12731                           ;inc\CANlib.h: 551: msg->data[7] =RXB1D7;
 12732  002052  EE20 F00B          	lfsr	2,11
 12733  002056  5001               	movf	CANreceiveMessage@msg,w,c
 12734  002058  26D9               	addwf	fsr2l,f,c
 12735  00205A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12736  00205C  22DA               	addwfc	fsr2h,f,c
 12737  00205E  CF5D FFDF          	movff	3933,indf2	;volatile
 12738                           
 12739                           ; BSR set to: 15
 12740                           ;inc\CANlib.h: 553: msg->RTR = RXB1DLCbits.RXRTR;
 12741  002062  EE20 F00E          	lfsr	2,14
 12742  002066  5001               	movf	CANreceiveMessage@msg,w,c
 12743  002068  26D9               	addwf	fsr2l,f,c
 12744  00206A  5002               	movf	CANreceiveMessage@msg+1,w,c
 12745  00206C  22DA               	addwfc	fsr2h,f,c
 12746  00206E  010F               	movlb	15	; () banked
 12747  002070  AD55               	btfss	85,6,b	;volatile
 12748  002072  D002               	goto	i1u634_20
 12749  002074  0E01               	movlw	1
 12750  002076  D001               	goto	i1u634_26
 12751  002078                     i1u634_20:
 12752  002078  0E00               	movlw	0
 12753  00207A                     i1u634_26:
 12754  00207A  6EDF               	movwf	indf2,c
 12755                           
 12756                           ; BSR set to: 15
 12757                           ;inc\CANlib.h: 555: msg->length = RXB1DLC & 0x0F;
 12758  00207C  EE20 F00D          	lfsr	2,13
 12759  002080  5001               	movf	CANreceiveMessage@msg,w,c
 12760  002082  26D9               	addwf	fsr2l,f,c
 12761  002084  5002               	movf	CANreceiveMessage@msg+1,w,c
 12762  002086  22DA               	addwfc	fsr2h,f,c
 12763  002088  010F               	movlb	15	; () banked
 12764  00208A  5155               	movf	85,w,b	;volatile
 12765  00208C  0B0F               	andlw	15
 12766  00208E  6EDF               	movwf	indf2,c
 12767                           
 12768                           ; BSR set to: 15
 12769                           ;inc\CANlib.h: 557: msg->type = RXB1SIDLbits.EXID;
 12770  002090  EE20 F00C          	lfsr	2,12
 12771  002094  5001               	movf	CANreceiveMessage@msg,w,c
 12772  002096  26D9               	addwf	fsr2l,f,c
 12773  002098  5002               	movf	CANreceiveMessage@msg+1,w,c
 12774  00209A  22DA               	addwfc	fsr2h,f,c
 12775  00209C  010F               	movlb	15	; () banked
 12776  00209E  A752               	btfss	82,3,b	;volatile
 12777  0020A0  D002               	goto	i1u635_20
 12778  0020A2  0E01               	movlw	1
 12779  0020A4  D001               	goto	i1u635_26
 12780  0020A6                     i1u635_20:
 12781  0020A6  0E00               	movlw	0
 12782  0020A8                     i1u635_26:
 12783  0020A8  6EDF               	movwf	indf2,c
 12784                           
 12785                           ; BSR set to: 15
 12786                           ;inc\CANlib.h: 559: if (RXB1SIDLbits.EXID == 0)
 12787  0020AA  010F               	movlb	15	; () banked
 12788  0020AC  B752               	btfsc	82,3,b	;volatile
 12789  0020AE  D044               	goto	i1l5119
 12790                           
 12791                           ; BSR set to: 15
 12792                           ;inc\CANlib.h: 560: {
 12793                           ;inc\CANlib.h: 561: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 12794  0020B0  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 12795  0020B4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12796  0020B6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12797  0020B8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12798  0020BA  0E03               	movlw	3
 12799  0020BC                     i1u637_25:
 12800  0020BC  90D8               	bcf	status,0,c
 12801  0020BE  3603               	rlcf	??_CANreceiveMessage,f,c
 12802  0020C0  3604               	rlcf	??_CANreceiveMessage+1,f,c
 12803  0020C2  3605               	rlcf	??_CANreceiveMessage+2,f,c
 12804  0020C4  3606               	rlcf	??_CANreceiveMessage+3,f,c
 12805  0020C6  2EE8               	decfsz	wreg,f,c
 12806  0020C8  D7F9               	goto	i1u637_25
 12807  0020CA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12808  0020CE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12809  0020D2  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 12810  0020D6  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 12811  0020DA  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 12812  0020DE  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 12813                           
 12814                           ; BSR set to: 15
 12815                           ;inc\CANlib.h: 562: tamp = (RXB1SIDL >> 5 ) & 0x07;
 12816  0020E2  010F               	movlb	15	; () banked
 12817  0020E4  3952               	swapf	82,w,b	;volatile
 12818  0020E6  42E8               	rrncf	wreg,f,c
 12819  0020E8  0B07               	andlw	7
 12820  0020EA  0B07               	andlw	7
 12821  0020EC  6E0C               	movwf	CANreceiveMessage@tamp,c
 12822                           
 12823                           ; BSR set to: 15
 12824                           ;inc\CANlib.h: 563: msg->identifier = msg->identifier + tamp;
 12825  0020EE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12826  0020F2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12827  0020F6  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 12828  0020FA  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 12829  0020FE  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 12830  002102  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 12831  002106  500C               	movf	CANreceiveMessage@tamp,w,c
 12832  002108  2403               	addwf	??_CANreceiveMessage,w,c
 12833  00210A  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 12834  00210C  0E00               	movlw	0
 12835  00210E  2004               	addwfc	??_CANreceiveMessage+1,w,c
 12836  002110  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 12837  002112  0E00               	movlw	0
 12838  002114  2005               	addwfc	??_CANreceiveMessage+2,w,c
 12839  002116  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 12840  002118  0E00               	movlw	0
 12841  00211A  2006               	addwfc	??_CANreceiveMessage+3,w,c
 12842  00211C  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 12843  00211E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12844  002122  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12845  002126  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 12846  00212A  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 12847  00212E  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 12848  002132  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 12849                           
 12850                           ;inc\CANlib.h: 564: }
 12851  002136  D08D               	goto	i1l5145
 12852  002138                     i1l5119:
 12853                           
 12854                           ; BSR set to: 15
 12855                           ;inc\CANlib.h: 565: else
 12856                           ;inc\CANlib.h: 566: {
 12857                           ;inc\CANlib.h: 567: msg->identifier = (unsigned long) RXB1EIDL;
 12858  002138  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
 12859  00213C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12860  00213E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12861  002140  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12862  002142  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12863  002146  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12864  00214A  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 12865  00214E  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 12866  002152  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 12867  002156  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 12868                           
 12869                           ; BSR set to: 15
 12870                           ;inc\CANlib.h: 568: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 12871  00215A  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
 12872  00215E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12873  002160  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12874  002162  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12875  002164  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 12876  002168  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 12877  00216C  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 12878  002170  6A03               	clrf	??_CANreceiveMessage,c
 12879  002172  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12880  002176  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12881  00217A  5003               	movf	??_CANreceiveMessage,w,c
 12882  00217C  26DE               	addwf	postinc2,f,c
 12883  00217E  5004               	movf	??_CANreceiveMessage+1,w,c
 12884  002180  22DE               	addwfc	postinc2,f,c
 12885  002182  5005               	movf	??_CANreceiveMessage+2,w,c
 12886  002184  22DE               	addwfc	postinc2,f,c
 12887  002186  5006               	movf	??_CANreceiveMessage+3,w,c
 12888  002188  22DE               	addwfc	postinc2,f,c
 12889                           
 12890                           ; BSR set to: 15
 12891                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID16)
 12892  00218A  010F               	movlb	15	; () banked
 12893  00218C  A152               	btfss	82,0,b	;volatile
 12894  00218E  D00C               	goto	i1l5127
 12895                           
 12896                           ; BSR set to: 15
 12897                           ;inc\CANlib.h: 571: msg->identifier |= 0x00010000;
 12898  002190  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12899  002194  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12900  002198  0E00               	movlw	0
 12901  00219A  12DE               	iorwf	postinc2,f,c
 12902  00219C  0E00               	movlw	0
 12903  00219E  12DE               	iorwf	postinc2,f,c
 12904  0021A0  0E01               	movlw	1
 12905  0021A2  12DE               	iorwf	postinc2,f,c
 12906  0021A4  0E00               	movlw	0
 12907  0021A6  12DE               	iorwf	postinc2,f,c
 12908  0021A8                     i1l5127:
 12909                           
 12910                           ; BSR set to: 15
 12911                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.EID17)
 12912  0021A8  010F               	movlb	15	; () banked
 12913  0021AA  A352               	btfss	82,1,b	;volatile
 12914  0021AC  D00C               	goto	i1l5131
 12915                           
 12916                           ; BSR set to: 15
 12917                           ;inc\CANlib.h: 573: msg->identifier |= 0x00020000;
 12918  0021AE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12919  0021B2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12920  0021B6  0E00               	movlw	0
 12921  0021B8  12DE               	iorwf	postinc2,f,c
 12922  0021BA  0E00               	movlw	0
 12923  0021BC  12DE               	iorwf	postinc2,f,c
 12924  0021BE  0E02               	movlw	2
 12925  0021C0  12DE               	iorwf	postinc2,f,c
 12926  0021C2  0E00               	movlw	0
 12927  0021C4  12DE               	iorwf	postinc2,f,c
 12928  0021C6                     i1l5131:
 12929                           
 12930                           ; BSR set to: 15
 12931                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID0)
 12932  0021C6  010F               	movlb	15	; () banked
 12933  0021C8  AB52               	btfss	82,5,b	;volatile
 12934  0021CA  D00C               	goto	i1l5135
 12935                           
 12936                           ; BSR set to: 15
 12937                           ;inc\CANlib.h: 575: msg->identifier |= 0x00040000;
 12938  0021CC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12939  0021D0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12940  0021D4  0E00               	movlw	0
 12941  0021D6  12DE               	iorwf	postinc2,f,c
 12942  0021D8  0E00               	movlw	0
 12943  0021DA  12DE               	iorwf	postinc2,f,c
 12944  0021DC  0E04               	movlw	4
 12945  0021DE  12DE               	iorwf	postinc2,f,c
 12946  0021E0  0E00               	movlw	0
 12947  0021E2  12DE               	iorwf	postinc2,f,c
 12948  0021E4                     i1l5135:
 12949                           
 12950                           ; BSR set to: 15
 12951                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID1)
 12952  0021E4  010F               	movlb	15	; () banked
 12953  0021E6  AD52               	btfss	82,6,b	;volatile
 12954  0021E8  D00C               	goto	i1l5139
 12955                           
 12956                           ; BSR set to: 15
 12957                           ;inc\CANlib.h: 577: msg->identifier |= 0x00080000;
 12958  0021EA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12959  0021EE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12960  0021F2  0E00               	movlw	0
 12961  0021F4  12DE               	iorwf	postinc2,f,c
 12962  0021F6  0E00               	movlw	0
 12963  0021F8  12DE               	iorwf	postinc2,f,c
 12964  0021FA  0E08               	movlw	8
 12965  0021FC  12DE               	iorwf	postinc2,f,c
 12966  0021FE  0E00               	movlw	0
 12967  002200  12DE               	iorwf	postinc2,f,c
 12968  002202                     i1l5139:
 12969                           
 12970                           ; BSR set to: 15
 12971                           ;inc\CANlib.h: 578: if (RXB1SIDLbits.SID2)
 12972  002202  010F               	movlb	15	; () banked
 12973  002204  AF52               	btfss	82,7,b	;volatile
 12974  002206  D00C               	goto	i1l5143
 12975                           
 12976                           ; BSR set to: 15
 12977                           ;inc\CANlib.h: 579: msg->identifier |= 0x00100000;
 12978  002208  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 12979  00220C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 12980  002210  0E00               	movlw	0
 12981  002212  12DE               	iorwf	postinc2,f,c
 12982  002214  0E00               	movlw	0
 12983  002216  12DE               	iorwf	postinc2,f,c
 12984  002218  0E10               	movlw	16
 12985  00221A  12DE               	iorwf	postinc2,f,c
 12986  00221C  0E00               	movlw	0
 12987  00221E  12DE               	iorwf	postinc2,f,c
 12988  002220                     i1l5143:
 12989                           
 12990                           ; BSR set to: 15
 12991                           ;inc\CANlib.h: 581: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 12992  002220  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 12993  002224  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 12994  002226  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 12995  002228  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 12996  00222A  0E15               	movlw	21
 12997  00222C                     i1u643_25:
 12998  00222C  90D8               	bcf	status,0,c
 12999  00222E  3603               	rlcf	??_CANreceiveMessage,f,c
 13000  002230  3604               	rlcf	??_CANreceiveMessage+1,f,c
 13001  002232  3605               	rlcf	??_CANreceiveMessage+2,f,c
 13002  002234  3606               	rlcf	??_CANreceiveMessage+3,f,c
 13003  002236  2EE8               	decfsz	wreg,f,c
 13004  002238  D7F9               	goto	i1u643_25
 13005  00223A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13006  00223E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13007  002242  5003               	movf	??_CANreceiveMessage,w,c
 13008  002244  12DE               	iorwf	postinc2,f,c
 13009  002246  5004               	movf	??_CANreceiveMessage+1,w,c
 13010  002248  12DE               	iorwf	postinc2,f,c
 13011  00224A  5005               	movf	??_CANreceiveMessage+2,w,c
 13012  00224C  12DE               	iorwf	postinc2,f,c
 13013  00224E  5006               	movf	??_CANreceiveMessage+3,w,c
 13014  002250  12DE               	iorwf	postinc2,f,c
 13015  002252                     i1l5145:
 13016                           
 13017                           ; BSR set to: 15
 13018                           ;inc\CANlib.h: 582: }
 13019                           ;inc\CANlib.h: 584: RXB1CONbits.RXFUL = 0x00;
 13020  002252  010F               	movlb	15	; () banked
 13021  002254  9F50               	bcf	80,7,b	;volatile
 13022                           
 13023                           ; BSR set to: 15
 13024                           ;inc\CANlib.h: 585: return (error);
 13025                           ;	Return value of _CANreceiveMessage is never used
 13026  002256  0012               	return	
 13027  002258                     i1l404:
 13028                           
 13029                           ; BSR set to: 15
 13030                           ;inc\CANlib.h: 586: }
 13031                           ;inc\CANlib.h: 588: if (RXB0CONbits.RXFUL ==0x01)
 13032  002258  AE60               	btfss	3936,7,c	;volatile
 13033  00225A  0012               	return	
 13034                           
 13035                           ; BSR set to: 15
 13036                           ;inc\CANlib.h: 589: {
 13037                           ;inc\CANlib.h: 590: msg->identifier = 0;
 13038  00225C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13039  002260  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13040  002264  6ADE               	clrf	postinc2,c
 13041  002266  6ADE               	clrf	postinc2,c
 13042  002268  6ADE               	clrf	postinc2,c
 13043  00226A  6ADD               	clrf	postdec2,c
 13044                           
 13045                           ; BSR set to: 15
 13046                           ;inc\CANlib.h: 591: msg->data[0] =RXB0D0;
 13047  00226C  EE20 F004          	lfsr	2,4
 13048  002270  5001               	movf	CANreceiveMessage@msg,w,c
 13049  002272  26D9               	addwf	fsr2l,f,c
 13050  002274  5002               	movf	CANreceiveMessage@msg+1,w,c
 13051  002276  22DA               	addwfc	fsr2h,f,c
 13052  002278  CF66 FFDF          	movff	3942,indf2	;volatile
 13053                           
 13054                           ; BSR set to: 15
 13055                           ;inc\CANlib.h: 592: msg->data[1] =RXB0D1;
 13056  00227C  EE20 F005          	lfsr	2,5
 13057  002280  5001               	movf	CANreceiveMessage@msg,w,c
 13058  002282  26D9               	addwf	fsr2l,f,c
 13059  002284  5002               	movf	CANreceiveMessage@msg+1,w,c
 13060  002286  22DA               	addwfc	fsr2h,f,c
 13061  002288  CF67 FFDF          	movff	3943,indf2	;volatile
 13062                           
 13063                           ; BSR set to: 15
 13064                           ;inc\CANlib.h: 593: msg->data[2] =RXB0D2;
 13065  00228C  EE20 F006          	lfsr	2,6
 13066  002290  5001               	movf	CANreceiveMessage@msg,w,c
 13067  002292  26D9               	addwf	fsr2l,f,c
 13068  002294  5002               	movf	CANreceiveMessage@msg+1,w,c
 13069  002296  22DA               	addwfc	fsr2h,f,c
 13070  002298  CF68 FFDF          	movff	3944,indf2	;volatile
 13071                           
 13072                           ; BSR set to: 15
 13073                           ;inc\CANlib.h: 594: msg->data[3] =RXB0D3;
 13074  00229C  EE20 F007          	lfsr	2,7
 13075  0022A0  5001               	movf	CANreceiveMessage@msg,w,c
 13076  0022A2  26D9               	addwf	fsr2l,f,c
 13077  0022A4  5002               	movf	CANreceiveMessage@msg+1,w,c
 13078  0022A6  22DA               	addwfc	fsr2h,f,c
 13079  0022A8  CF69 FFDF          	movff	3945,indf2	;volatile
 13080                           
 13081                           ; BSR set to: 15
 13082                           ;inc\CANlib.h: 595: msg->data[4] =RXB0D4;
 13083  0022AC  EE20 F008          	lfsr	2,8
 13084  0022B0  5001               	movf	CANreceiveMessage@msg,w,c
 13085  0022B2  26D9               	addwf	fsr2l,f,c
 13086  0022B4  5002               	movf	CANreceiveMessage@msg+1,w,c
 13087  0022B6  22DA               	addwfc	fsr2h,f,c
 13088  0022B8  CF6A FFDF          	movff	3946,indf2	;volatile
 13089                           
 13090                           ; BSR set to: 15
 13091                           ;inc\CANlib.h: 596: msg->data[5] =RXB0D5;
 13092  0022BC  EE20 F009          	lfsr	2,9
 13093  0022C0  5001               	movf	CANreceiveMessage@msg,w,c
 13094  0022C2  26D9               	addwf	fsr2l,f,c
 13095  0022C4  5002               	movf	CANreceiveMessage@msg+1,w,c
 13096  0022C6  22DA               	addwfc	fsr2h,f,c
 13097  0022C8  CF6B FFDF          	movff	3947,indf2	;volatile
 13098                           
 13099                           ; BSR set to: 15
 13100                           ;inc\CANlib.h: 597: msg->data[6] =RXB0D6;
 13101  0022CC  EE20 F00A          	lfsr	2,10
 13102  0022D0  5001               	movf	CANreceiveMessage@msg,w,c
 13103  0022D2  26D9               	addwf	fsr2l,f,c
 13104  0022D4  5002               	movf	CANreceiveMessage@msg+1,w,c
 13105  0022D6  22DA               	addwfc	fsr2h,f,c
 13106  0022D8  CF6C FFDF          	movff	3948,indf2	;volatile
 13107                           
 13108                           ; BSR set to: 15
 13109                           ;inc\CANlib.h: 598: msg->data[7] =RXB0D7;
 13110  0022DC  EE20 F00B          	lfsr	2,11
 13111  0022E0  5001               	movf	CANreceiveMessage@msg,w,c
 13112  0022E2  26D9               	addwf	fsr2l,f,c
 13113  0022E4  5002               	movf	CANreceiveMessage@msg+1,w,c
 13114  0022E6  22DA               	addwfc	fsr2h,f,c
 13115  0022E8  CF6D FFDF          	movff	3949,indf2	;volatile
 13116                           
 13117                           ; BSR set to: 15
 13118                           ;inc\CANlib.h: 600: msg->RTR = RXB0DLCbits.RXRTR;
 13119  0022EC  EE20 F00E          	lfsr	2,14
 13120  0022F0  5001               	movf	CANreceiveMessage@msg,w,c
 13121  0022F2  26D9               	addwf	fsr2l,f,c
 13122  0022F4  5002               	movf	CANreceiveMessage@msg+1,w,c
 13123  0022F6  22DA               	addwfc	fsr2h,f,c
 13124  0022F8  AC65               	btfss	3941,6,c	;volatile
 13125  0022FA  D002               	goto	i1u645_20
 13126  0022FC  0E01               	movlw	1
 13127  0022FE  D001               	goto	i1u645_26
 13128  002300                     i1u645_20:
 13129  002300  0E00               	movlw	0
 13130  002302                     i1u645_26:
 13131  002302  6EDF               	movwf	indf2,c
 13132                           
 13133                           ; BSR set to: 15
 13134                           ;inc\CANlib.h: 602: msg->length = RXB0DLC & 0x0F;
 13135  002304  EE20 F00D          	lfsr	2,13
 13136  002308  5001               	movf	CANreceiveMessage@msg,w,c
 13137  00230A  26D9               	addwf	fsr2l,f,c
 13138  00230C  5002               	movf	CANreceiveMessage@msg+1,w,c
 13139  00230E  22DA               	addwfc	fsr2h,f,c
 13140  002310  5065               	movf	3941,w,c	;volatile
 13141  002312  0B0F               	andlw	15
 13142  002314  6EDF               	movwf	indf2,c
 13143                           
 13144                           ; BSR set to: 15
 13145                           ;inc\CANlib.h: 604: msg->type = RXB0SIDLbits.EXID;
 13146  002316  EE20 F00C          	lfsr	2,12
 13147  00231A  5001               	movf	CANreceiveMessage@msg,w,c
 13148  00231C  26D9               	addwf	fsr2l,f,c
 13149  00231E  5002               	movf	CANreceiveMessage@msg+1,w,c
 13150  002320  22DA               	addwfc	fsr2h,f,c
 13151  002322  A662               	btfss	3938,3,c	;volatile
 13152  002324  D002               	goto	i1u646_20
 13153  002326  0E01               	movlw	1
 13154  002328  D001               	goto	i1u646_26
 13155  00232A                     i1u646_20:
 13156  00232A  0E00               	movlw	0
 13157  00232C                     i1u646_26:
 13158  00232C  6EDF               	movwf	indf2,c
 13159                           
 13160                           ; BSR set to: 15
 13161                           ;inc\CANlib.h: 606: if (RXB0SIDLbits.EXID == 0)
 13162  00232E  B662               	btfsc	3938,3,c	;volatile
 13163  002330  D043               	goto	i1l5181
 13164                           
 13165                           ; BSR set to: 15
 13166                           ;inc\CANlib.h: 607: {
 13167                           ;inc\CANlib.h: 608: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 13168  002332  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 13169  002336  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13170  002338  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13171  00233A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13172  00233C  0E03               	movlw	3
 13173  00233E                     i1u648_25:
 13174  00233E  90D8               	bcf	status,0,c
 13175  002340  3603               	rlcf	??_CANreceiveMessage,f,c
 13176  002342  3604               	rlcf	??_CANreceiveMessage+1,f,c
 13177  002344  3605               	rlcf	??_CANreceiveMessage+2,f,c
 13178  002346  3606               	rlcf	??_CANreceiveMessage+3,f,c
 13179  002348  2EE8               	decfsz	wreg,f,c
 13180  00234A  D7F9               	goto	i1u648_25
 13181  00234C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13182  002350  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13183  002354  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 13184  002358  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 13185  00235C  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 13186  002360  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 13187                           
 13188                           ; BSR set to: 15
 13189                           ;inc\CANlib.h: 609: tamp = (RXB0SIDL >> 5 ) & 0x07;
 13190  002364  3862               	swapf	3938,w,c	;volatile
 13191  002366  42E8               	rrncf	wreg,f,c
 13192  002368  0B07               	andlw	7
 13193  00236A  0B07               	andlw	7
 13194  00236C  6E0C               	movwf	CANreceiveMessage@tamp,c
 13195                           
 13196                           ; BSR set to: 15
 13197                           ;inc\CANlib.h: 610: msg->identifier = msg->identifier + tamp;
 13198  00236E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13199  002372  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13200  002376  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 13201  00237A  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 13202  00237E  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 13203  002382  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 13204  002386  500C               	movf	CANreceiveMessage@tamp,w,c
 13205  002388  2403               	addwf	??_CANreceiveMessage,w,c
 13206  00238A  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 13207  00238C  0E00               	movlw	0
 13208  00238E  2004               	addwfc	??_CANreceiveMessage+1,w,c
 13209  002390  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 13210  002392  0E00               	movlw	0
 13211  002394  2005               	addwfc	??_CANreceiveMessage+2,w,c
 13212  002396  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 13213  002398  0E00               	movlw	0
 13214  00239A  2006               	addwfc	??_CANreceiveMessage+3,w,c
 13215  00239C  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 13216  00239E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13217  0023A2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13218  0023A6  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 13219  0023AA  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 13220  0023AE  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 13221  0023B2  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 13222                           
 13223                           ;inc\CANlib.h: 611: }
 13224  0023B6  D088               	goto	i1l5207
 13225  0023B8                     i1l5181:
 13226                           
 13227                           ; BSR set to: 15
 13228                           ;inc\CANlib.h: 612: else
 13229                           ;inc\CANlib.h: 613: {
 13230                           ;inc\CANlib.h: 614: msg->identifier = (unsigned long) RXB0EIDL;
 13231  0023B8  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
 13232  0023BC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13233  0023BE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13234  0023C0  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13235  0023C2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13236  0023C6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13237  0023CA  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 13238  0023CE  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 13239  0023D2  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 13240  0023D6  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 13241                           
 13242                           ; BSR set to: 15
 13243                           ;inc\CANlib.h: 615: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 13244  0023DA  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
 13245  0023DE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13246  0023E0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13247  0023E2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13248  0023E4  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 13249  0023E8  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 13250  0023EC  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 13251  0023F0  6A03               	clrf	??_CANreceiveMessage,c
 13252  0023F2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13253  0023F6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13254  0023FA  5003               	movf	??_CANreceiveMessage,w,c
 13255  0023FC  26DE               	addwf	postinc2,f,c
 13256  0023FE  5004               	movf	??_CANreceiveMessage+1,w,c
 13257  002400  22DE               	addwfc	postinc2,f,c
 13258  002402  5005               	movf	??_CANreceiveMessage+2,w,c
 13259  002404  22DE               	addwfc	postinc2,f,c
 13260  002406  5006               	movf	??_CANreceiveMessage+3,w,c
 13261  002408  22DE               	addwfc	postinc2,f,c
 13262                           
 13263                           ; BSR set to: 15
 13264                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID16)
 13265  00240A  A062               	btfss	3938,0,c	;volatile
 13266  00240C  D00C               	goto	i1l5189
 13267                           
 13268                           ; BSR set to: 15
 13269                           ;inc\CANlib.h: 618: msg->identifier |= 0x00010000;
 13270  00240E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13271  002412  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13272  002416  0E00               	movlw	0
 13273  002418  12DE               	iorwf	postinc2,f,c
 13274  00241A  0E00               	movlw	0
 13275  00241C  12DE               	iorwf	postinc2,f,c
 13276  00241E  0E01               	movlw	1
 13277  002420  12DE               	iorwf	postinc2,f,c
 13278  002422  0E00               	movlw	0
 13279  002424  12DE               	iorwf	postinc2,f,c
 13280  002426                     i1l5189:
 13281                           
 13282                           ; BSR set to: 15
 13283                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.EID17)
 13284  002426  A262               	btfss	3938,1,c	;volatile
 13285  002428  D00C               	goto	i1l5193
 13286                           
 13287                           ; BSR set to: 15
 13288                           ;inc\CANlib.h: 620: msg->identifier |= 0x00020000;
 13289  00242A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13290  00242E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13291  002432  0E00               	movlw	0
 13292  002434  12DE               	iorwf	postinc2,f,c
 13293  002436  0E00               	movlw	0
 13294  002438  12DE               	iorwf	postinc2,f,c
 13295  00243A  0E02               	movlw	2
 13296  00243C  12DE               	iorwf	postinc2,f,c
 13297  00243E  0E00               	movlw	0
 13298  002440  12DE               	iorwf	postinc2,f,c
 13299  002442                     i1l5193:
 13300                           
 13301                           ; BSR set to: 15
 13302                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID0)
 13303  002442  AA62               	btfss	3938,5,c	;volatile
 13304  002444  D00C               	goto	i1l5197
 13305                           
 13306                           ; BSR set to: 15
 13307                           ;inc\CANlib.h: 622: msg->identifier |= 0x00040000;
 13308  002446  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13309  00244A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13310  00244E  0E00               	movlw	0
 13311  002450  12DE               	iorwf	postinc2,f,c
 13312  002452  0E00               	movlw	0
 13313  002454  12DE               	iorwf	postinc2,f,c
 13314  002456  0E04               	movlw	4
 13315  002458  12DE               	iorwf	postinc2,f,c
 13316  00245A  0E00               	movlw	0
 13317  00245C  12DE               	iorwf	postinc2,f,c
 13318  00245E                     i1l5197:
 13319                           
 13320                           ; BSR set to: 15
 13321                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID1)
 13322  00245E  AC62               	btfss	3938,6,c	;volatile
 13323  002460  D00C               	goto	i1l5201
 13324                           
 13325                           ; BSR set to: 15
 13326                           ;inc\CANlib.h: 624: msg->identifier |= 0x00080000;
 13327  002462  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13328  002466  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13329  00246A  0E00               	movlw	0
 13330  00246C  12DE               	iorwf	postinc2,f,c
 13331  00246E  0E00               	movlw	0
 13332  002470  12DE               	iorwf	postinc2,f,c
 13333  002472  0E08               	movlw	8
 13334  002474  12DE               	iorwf	postinc2,f,c
 13335  002476  0E00               	movlw	0
 13336  002478  12DE               	iorwf	postinc2,f,c
 13337  00247A                     i1l5201:
 13338                           
 13339                           ; BSR set to: 15
 13340                           ;inc\CANlib.h: 625: if (RXB0SIDLbits.SID2)
 13341  00247A  AE62               	btfss	3938,7,c	;volatile
 13342  00247C  D00C               	goto	i1l5205
 13343                           
 13344                           ; BSR set to: 15
 13345                           ;inc\CANlib.h: 626: msg->identifier |= 0x00100000;
 13346  00247E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13347  002482  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13348  002486  0E00               	movlw	0
 13349  002488  12DE               	iorwf	postinc2,f,c
 13350  00248A  0E00               	movlw	0
 13351  00248C  12DE               	iorwf	postinc2,f,c
 13352  00248E  0E10               	movlw	16
 13353  002490  12DE               	iorwf	postinc2,f,c
 13354  002492  0E00               	movlw	0
 13355  002494  12DE               	iorwf	postinc2,f,c
 13356  002496                     i1l5205:
 13357                           
 13358                           ; BSR set to: 15
 13359                           ;inc\CANlib.h: 628: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 13360  002496  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 13361  00249A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 13362  00249C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 13363  00249E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 13364  0024A0  0E15               	movlw	21
 13365  0024A2                     i1u654_25:
 13366  0024A2  90D8               	bcf	status,0,c
 13367  0024A4  3603               	rlcf	??_CANreceiveMessage,f,c
 13368  0024A6  3604               	rlcf	??_CANreceiveMessage+1,f,c
 13369  0024A8  3605               	rlcf	??_CANreceiveMessage+2,f,c
 13370  0024AA  3606               	rlcf	??_CANreceiveMessage+3,f,c
 13371  0024AC  2EE8               	decfsz	wreg,f,c
 13372  0024AE  D7F9               	goto	i1u654_25
 13373  0024B0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 13374  0024B4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 13375  0024B8  5003               	movf	??_CANreceiveMessage,w,c
 13376  0024BA  12DE               	iorwf	postinc2,f,c
 13377  0024BC  5004               	movf	??_CANreceiveMessage+1,w,c
 13378  0024BE  12DE               	iorwf	postinc2,f,c
 13379  0024C0  5005               	movf	??_CANreceiveMessage+2,w,c
 13380  0024C2  12DE               	iorwf	postinc2,f,c
 13381  0024C4  5006               	movf	??_CANreceiveMessage+3,w,c
 13382  0024C6  12DE               	iorwf	postinc2,f,c
 13383  0024C8                     i1l5207:
 13384                           
 13385                           ; BSR set to: 15
 13386                           ;inc\CANlib.h: 630: }
 13387                           ;inc\CANlib.h: 631: RXB0CONbits.RXFUL = 0x00;
 13388  0024C8  9E60               	bcf	3936,7,c	;volatile
 13389                           
 13390                           ; BSR set to: 15
 13391                           ;inc\CANlib.h: 633: return (error);
 13392                           ;	Return value of _CANreceiveMessage is never used
 13393  0024CA  0012               	return	
 13394  0024CC                     __end_of_CANreceiveMessage:
 13395                           	opt stack 0
 13396                           pclatu	equ	0xFFB
 13397                           pclath	equ	0xFFA
 13398                           tblptru	equ	0xFF8
 13399                           tblptrh	equ	0xFF7
 13400                           tblptrl	equ	0xFF6
 13401                           tablat	equ	0xFF5
 13402                           prodh	equ	0xFF4
 13403                           prodl	equ	0xFF3
 13404                           intcon	equ	0xFF2
 13405                           intcon2	equ	0xFF1
 13406                           postinc0	equ	0xFEE
 13407                           fsr0h	equ	0xFEA
 13408                           fsr0l	equ	0xFE9
 13409                           wreg	equ	0xFE8
 13410                           indf1	equ	0xFE7
 13411                           fsr1h	equ	0xFE2
 13412                           fsr1l	equ	0xFE1
 13413                           bsr	equ	0xFE0
 13414                           indf2	equ	0xFDF
 13415                           postinc2	equ	0xFDE
 13416                           postdec2	equ	0xFDD
 13417                           fsr2h	equ	0xFDA
 13418                           fsr2l	equ	0xFD9
 13419                           status	equ	0xFD8
 13420                           
 13421 ;; *************** function _ISR_Alta *****************
 13422 ;; Defined at:
 13423 ;;		line 75 in file "parcheggio.c"
 13424 ;; Parameters:    Size  Location     Type
 13425 ;;		None
 13426 ;; Auto vars:     Size  Location     Type
 13427 ;;		None
 13428 ;; Return value:  Size  Location     Type
 13429 ;;		None               void
 13430 ;; Registers used:
 13431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13432 ;; Tracked objects:
 13433 ;;		On entry : 0/0
 13434 ;;		On exit  : 0/0
 13435 ;;		Unchanged: 0/0
 13436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13439 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13440 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13441 ;;Total ram usage:       16 bytes
 13442 ;; Hardware stack levels used:    1
 13443 ;; Hardware stack levels required when called:    1
 13444 ;; This function calls:
 13445 ;;		___lwdiv
 13446 ;; This function is called by:
 13447 ;;		Interrupt level 2
 13448 ;; This function uses a non-reentrant model
 13449 ;;
 13450                           
 13451                           	psect	intcode
 13452  000008                     __pintcode:
 13453                           	opt stack 0
 13454  000008                     _ISR_Alta:
 13455                           	opt stack 21
 13456                           
 13457                           ; BSR set to: 15
 13458                           ;incstack = 0
 13459  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 13460  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 13461  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 13462  000012  EF7B  F025         	goto	int_func
 13463                           pclatu	equ	0xFFB
 13464                           pclath	equ	0xFFA
 13465                           tblptru	equ	0xFF8
 13466                           tblptrh	equ	0xFF7
 13467                           tblptrl	equ	0xFF6
 13468                           tablat	equ	0xFF5
 13469                           prodh	equ	0xFF4
 13470                           prodl	equ	0xFF3
 13471                           intcon	equ	0xFF2
 13472                           intcon2	equ	0xFF1
 13473                           postinc0	equ	0xFEE
 13474                           fsr0h	equ	0xFEA
 13475                           fsr0l	equ	0xFE9
 13476                           wreg	equ	0xFE8
 13477                           indf1	equ	0xFE7
 13478                           fsr1h	equ	0xFE2
 13479                           fsr1l	equ	0xFE1
 13480                           bsr	equ	0xFE0
 13481                           indf2	equ	0xFDF
 13482                           postinc2	equ	0xFDE
 13483                           postdec2	equ	0xFDD
 13484                           fsr2h	equ	0xFDA
 13485                           fsr2l	equ	0xFD9
 13486                           status	equ	0xFD8
 13487                           
 13488                           	psect	intcode_body
 13489  004AF6                     __pintcode_body:
 13490                           	opt stack 21
 13491  004AF6                     int_func:
 13492                           	opt stack 21
 13493  004AF6  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 13494  004AFA  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 13495  004AFE  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 13496  004B02  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 13497  004B06  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 13498  004B0A  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 13499  004B0E  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 13500  004B12  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 13501  004B16  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 13502  004B1A  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 13503  004B1E  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 13504  004B22  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 13505                           
 13506                           ;parcheggio.c: 77: if (INTCON2bits.INTEDG0 == 1) {
 13507  004B26  ACF1               	btfss	intcon2,6,c	;volatile
 13508  004B28  D007               	goto	i2l656
 13509                           
 13510                           ;parcheggio.c: 78: INTCON2bits.INTEDG0 = 0;
 13511  004B2A  9CF1               	bcf	intcon2,6,c	;volatile
 13512                           
 13513                           ;parcheggio.c: 79: TMR3H = 0;
 13514  004B2C  0E00               	movlw	0
 13515  004B2E  6EB3               	movwf	4019,c	;volatile
 13516                           
 13517                           ;parcheggio.c: 80: TMR3L = 0;
 13518  004B30  0E00               	movlw	0
 13519  004B32  6EB2               	movwf	4018,c	;volatile
 13520                           
 13521                           ;parcheggio.c: 81: distance_error = 0;
 13522  004B34  9644               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 13523                           
 13524                           ;parcheggio.c: 82: } else {
 13525  004B36  D030               	goto	i2l6345
 13526  004B38                     i2l656:
 13527                           
 13528                           ;parcheggio.c: 83: gianni = TMR3H;
 13529  004B38  CFB3 F042          	movff	4019,_gianni	;volatile
 13530                           
 13531                           ;parcheggio.c: 84: asus = TMR3L;
 13532  004B3C  CFB2 F041          	movff	4018,_asus	;volatile
 13533                           
 13534                           ;parcheggio.c: 85: timerValue2 = gianni;
 13535  004B40  C042  F03E         	movff	_gianni,_timerValue2	;volatile
 13536  004B44  6A3F               	clrf	_timerValue2+1,c	;volatile
 13537                           
 13538                           ;parcheggio.c: 86: timerValue2 = ((timerValue2 << 8) | (asus));
 13539  004B46  503E               	movf	_timerValue2,w,c	;volatile
 13540  004B48  0100               	movlb	0	; () banked
 13541  004B4A  6F67               	movwf	??_ISR_Alta& (0+255),b
 13542  004B4C  5041               	movf	_asus,w,c	;volatile
 13543  004B4E  6E3E               	movwf	_timerValue2,c	;volatile
 13544  004B50  C067  F03F         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 13545                           
 13546                           ; BSR set to: 0
 13547                           ;parcheggio.c: 87: pulse_time = timerValue2 / 2;
 13548  004B54  90D8               	bcf	status,0,c
 13549  004B56  303F               	rrcf	_timerValue2+1,w,c	;volatile
 13550  004B58  0100               	movlb	0	; () banked
 13551  004B5A  6F67               	movwf	??_ISR_Alta& (0+255),b
 13552  004B5C  303E               	rrcf	_timerValue2,w,c	;volatile
 13553  004B5E  6E3A               	movwf	_pulse_time,c	;volatile
 13554  004B60  C067  F03B         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 13555                           
 13556                           ; BSR set to: 0
 13557                           ;parcheggio.c: 88: sensor_distance[MUX_index] = pulse_time / 58;
 13558  004B64  C03A  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 13559  004B68  C03B  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 13560  004B6C  0E00               	movlw	0
 13561  004B6E  0100               	movlb	0	; () banked
 13562  004B70  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 13563  004B72  0E3A               	movlw	58
 13564  004B74  6F62               	movwf	___lwdiv@divisor& (0+255),b
 13565  004B76  EC54  F026         	call	___lwdiv	;wreg free
 13566  004B7A  5040               	movf	_MUX_index,w,c	;volatile
 13567  004B7C  0D02               	mullw	2
 13568  004B7E  0E24               	movlw	low _sensor_distance
 13569  004B80  24F3               	addwf	prodl,w,c
 13570  004B82  6ED9               	movwf	fsr2l,c
 13571  004B84  0E00               	movlw	high _sensor_distance
 13572  004B86  20F4               	addwfc	prodh,w,c
 13573  004B88  6EDA               	movwf	fsr2h,c
 13574  004B8A  0100               	movlb	0	; () banked
 13575  004B8C  C060  FFDE         	movff	?___lwdiv,postinc2
 13576  004B90  0100               	movlb	0	; () banked
 13577  004B92  C061  FFDD         	movff	?___lwdiv+1,postdec2
 13578                           
 13579                           ; BSR set to: 0
 13580                           ;parcheggio.c: 89: INTCON2bits.INTEDG0 = 1;
 13581  004B96  8CF1               	bsf	intcon2,6,c	;volatile
 13582  004B98                     i2l6345:
 13583                           
 13584                           ;parcheggio.c: 90: }
 13585                           ;parcheggio.c: 91: INTCONbits.INT0IF = 0;
 13586  004B98  92F2               	bcf	intcon,1,c	;volatile
 13587  004B9A  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 13588  004B9E  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 13589  004BA2  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 13590  004BA6  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 13591  004BAA  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 13592  004BAE  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 13593  004BB2  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 13594  004BB6  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 13595  004BBA  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 13596  004BBE  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 13597  004BC2  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 13598  004BC6  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 13599  004BCA  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 13600  004BCE  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 13601  004BD2  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 13602  004BD4  0011               	retfie		f
 13603  004BD6                     __end_of_ISR_Alta:
 13604                           	opt stack 0
 13605                           pclatu	equ	0xFFB
 13606                           pclath	equ	0xFFA
 13607                           tblptru	equ	0xFF8
 13608                           tblptrh	equ	0xFF7
 13609                           tblptrl	equ	0xFF6
 13610                           tablat	equ	0xFF5
 13611                           prodh	equ	0xFF4
 13612                           prodl	equ	0xFF3
 13613                           intcon	equ	0xFF2
 13614                           intcon2	equ	0xFF1
 13615                           postinc0	equ	0xFEE
 13616                           fsr0h	equ	0xFEA
 13617                           fsr0l	equ	0xFE9
 13618                           wreg	equ	0xFE8
 13619                           indf1	equ	0xFE7
 13620                           fsr1h	equ	0xFE2
 13621                           fsr1l	equ	0xFE1
 13622                           bsr	equ	0xFE0
 13623                           indf2	equ	0xFDF
 13624                           postinc2	equ	0xFDE
 13625                           postdec2	equ	0xFDD
 13626                           fsr2h	equ	0xFDA
 13627                           fsr2l	equ	0xFD9
 13628                           status	equ	0xFD8
 13629                           
 13630 ;; *************** function ___lwdiv *****************
 13631 ;; Defined at:
 13632 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 13633 ;; Parameters:    Size  Location     Type
 13634 ;;  dividend        2    0[BANK0 ] unsigned int 
 13635 ;;  divisor         2    2[BANK0 ] unsigned int 
 13636 ;; Auto vars:     Size  Location     Type
 13637 ;;  quotient        2    5[BANK0 ] unsigned int 
 13638 ;;  counter         1    4[BANK0 ] unsigned char 
 13639 ;; Return value:  Size  Location     Type
 13640 ;;                  2    0[BANK0 ] unsigned int 
 13641 ;; Registers used:
 13642 ;;		wreg, status,2, status,0
 13643 ;; Tracked objects:
 13644 ;;		On entry : 0/0
 13645 ;;		On exit  : 0/0
 13646 ;;		Unchanged: 0/0
 13647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13648 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13649 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13651 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13652 ;;Total ram usage:        7 bytes
 13653 ;; Hardware stack levels used:    1
 13654 ;; This function calls:
 13655 ;;		Nothing
 13656 ;; This function is called by:
 13657 ;;		_ISR_Alta
 13658 ;; This function uses a non-reentrant model
 13659 ;;
 13660                           
 13661                           	psect	text32
 13662  004CA8                     __ptext32:
 13663                           	opt stack 0
 13664  004CA8                     ___lwdiv:
 13665                           	opt stack 21
 13666                           
 13667                           ;incstack = 0
 13668  004CA8  0E00               	movlw	0
 13669  004CAA  0100               	movlb	0	; () banked
 13670  004CAC  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 13671  004CAE  0E00               	movlw	0
 13672  004CB0  6F65               	movwf	___lwdiv@quotient& (0+255),b
 13673                           
 13674                           ; BSR set to: 0
 13675  004CB2  0100               	movlb	0	; () banked
 13676  004CB4  5162               	movf	___lwdiv@divisor& (0+255),w,b
 13677  004CB6  0100               	movlb	0	; () banked
 13678  004CB8  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 13679  004CBA  B4D8               	btfsc	status,2,c
 13680  004CBC  D02C               	goto	i2l1204
 13681                           
 13682                           ; BSR set to: 0
 13683  004CBE  0E01               	movlw	1
 13684  004CC0  0100               	movlb	0	; () banked
 13685  004CC2  6F64               	movwf	___lwdiv@counter& (0+255),b
 13686  004CC4  D006               	goto	i2l6315
 13687  004CC6                     i2l6313:
 13688                           
 13689                           ; BSR set to: 0
 13690  004CC6  0100               	movlb	0	; () banked
 13691  004CC8  90D8               	bcf	status,0,c
 13692  004CCA  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 13693  004CCC  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 13694  004CCE  0100               	movlb	0	; () banked
 13695  004CD0  2B64               	incf	___lwdiv@counter& (0+255),f,b
 13696  004CD2                     i2l6315:
 13697                           
 13698                           ; BSR set to: 0
 13699  004CD2  0100               	movlb	0	; () banked
 13700  004CD4  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 13701  004CD6  D7F7               	goto	i2l6313
 13702  004CD8                     i2l6317:
 13703                           
 13704                           ; BSR set to: 0
 13705  004CD8  0100               	movlb	0	; () banked
 13706  004CDA  90D8               	bcf	status,0,c
 13707  004CDC  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 13708  004CDE  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 13709                           
 13710                           ; BSR set to: 0
 13711  004CE0  0100               	movlb	0	; () banked
 13712  004CE2  5162               	movf	___lwdiv@divisor& (0+255),w,b
 13713  004CE4  0100               	movlb	0	; () banked
 13714  004CE6  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 13715  004CE8  0100               	movlb	0	; () banked
 13716  004CEA  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 13717  004CEC  0100               	movlb	0	; () banked
 13718  004CEE  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 13719  004CF0  A0D8               	btfss	status,0,c
 13720  004CF2  D00A               	goto	i2l6325
 13721                           
 13722                           ; BSR set to: 0
 13723  004CF4  0100               	movlb	0	; () banked
 13724  004CF6  5162               	movf	___lwdiv@divisor& (0+255),w,b
 13725  004CF8  0100               	movlb	0	; () banked
 13726  004CFA  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 13727  004CFC  0100               	movlb	0	; () banked
 13728  004CFE  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 13729  004D00  0100               	movlb	0	; () banked
 13730  004D02  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 13731                           
 13732                           ; BSR set to: 0
 13733  004D04  0100               	movlb	0	; () banked
 13734  004D06  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 13735  004D08                     i2l6325:
 13736                           
 13737                           ; BSR set to: 0
 13738  004D08  0100               	movlb	0	; () banked
 13739  004D0A  90D8               	bcf	status,0,c
 13740  004D0C  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 13741  004D0E  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 13742                           
 13743                           ; BSR set to: 0
 13744  004D10  0100               	movlb	0	; () banked
 13745  004D12  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 13746  004D14  D7E1               	goto	i2l6317
 13747  004D16                     i2l1204:
 13748                           
 13749                           ; BSR set to: 0
 13750  004D16  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 13751  004D1A  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 13752                           
 13753                           ; BSR set to: 0
 13754  004D1E  0012               	return		;funcret
 13755  004D20                     __end_of___lwdiv:
 13756                           	opt stack 0
 13757                           pclatu	equ	0xFFB
 13758                           pclath	equ	0xFFA
 13759                           tblptru	equ	0xFF8
 13760                           tblptrh	equ	0xFF7
 13761                           tblptrl	equ	0xFF6
 13762                           tablat	equ	0xFF5
 13763                           prodh	equ	0xFF4
 13764                           prodl	equ	0xFF3
 13765                           intcon	equ	0xFF2
 13766                           intcon2	equ	0xFF1
 13767                           postinc0	equ	0xFEE
 13768                           fsr0h	equ	0xFEA
 13769                           fsr0l	equ	0xFE9
 13770                           wreg	equ	0xFE8
 13771                           indf1	equ	0xFE7
 13772                           fsr1h	equ	0xFE2
 13773                           fsr1l	equ	0xFE1
 13774                           bsr	equ	0xFE0
 13775                           indf2	equ	0xFDF
 13776                           postinc2	equ	0xFDE
 13777                           postdec2	equ	0xFDD
 13778                           fsr2h	equ	0xFDA
 13779                           fsr2l	equ	0xFD9
 13780                           status	equ	0xFD8
 13781                           pclatu	equ	0xFFB
 13782                           pclath	equ	0xFFA
 13783                           tblptru	equ	0xFF8
 13784                           tblptrh	equ	0xFF7
 13785                           tblptrl	equ	0xFF6
 13786                           tablat	equ	0xFF5
 13787                           prodh	equ	0xFF4
 13788                           prodl	equ	0xFF3
 13789                           intcon	equ	0xFF2
 13790                           intcon2	equ	0xFF1
 13791                           postinc0	equ	0xFEE
 13792                           fsr0h	equ	0xFEA
 13793                           fsr0l	equ	0xFE9
 13794                           wreg	equ	0xFE8
 13795                           indf1	equ	0xFE7
 13796                           fsr1h	equ	0xFE2
 13797                           fsr1l	equ	0xFE1
 13798                           bsr	equ	0xFE0
 13799                           indf2	equ	0xFDF
 13800                           postinc2	equ	0xFDE
 13801                           postdec2	equ	0xFDD
 13802                           fsr2h	equ	0xFDA
 13803                           fsr2l	equ	0xFD9
 13804                           status	equ	0xFD8
 13805                           
 13806                           	psect	param0
 13807  0000                     pclatu	equ	0xFFB
 13808                           pclath	equ	0xFFA
 13809                           tblptru	equ	0xFF8
 13810                           tblptrh	equ	0xFF7
 13811                           tblptrl	equ	0xFF6
 13812                           tablat	equ	0xFF5
 13813                           prodh	equ	0xFF4
 13814                           prodl	equ	0xFF3
 13815                           intcon	equ	0xFF2
 13816                           intcon2	equ	0xFF1
 13817                           postinc0	equ	0xFEE
 13818                           fsr0h	equ	0xFEA
 13819                           fsr0l	equ	0xFE9
 13820                           wreg	equ	0xFE8
 13821                           indf1	equ	0xFE7
 13822                           fsr1h	equ	0xFE2
 13823                           fsr1l	equ	0xFE1
 13824                           bsr	equ	0xFE0
 13825                           indf2	equ	0xFDF
 13826                           postinc2	equ	0xFDE
 13827                           postdec2	equ	0xFDD
 13828                           fsr2h	equ	0xFDA
 13829                           fsr2l	equ	0xFD9
 13830                           status	equ	0xFD8
 13831                           
 13832                           	psect	temp
 13833  000048                     btemp:
 13834                           	opt stack 0
 13835  000048                     	ds	1
 13836  0000                     int$flags	set	btemp
 13837                           pclatu	equ	0xFFB
 13838                           pclath	equ	0xFFA
 13839                           tblptru	equ	0xFF8
 13840                           tblptrh	equ	0xFF7
 13841                           tblptrl	equ	0xFF6
 13842                           tablat	equ	0xFF5
 13843                           prodh	equ	0xFF4
 13844                           prodl	equ	0xFF3
 13845                           intcon	equ	0xFF2
 13846                           intcon2	equ	0xFF1
 13847                           postinc0	equ	0xFEE
 13848                           fsr0h	equ	0xFEA
 13849                           fsr0l	equ	0xFE9
 13850                           wreg	equ	0xFE8
 13851                           indf1	equ	0xFE7
 13852                           fsr1h	equ	0xFE2
 13853                           fsr1l	equ	0xFE1
 13854                           bsr	equ	0xFE0
 13855                           indf2	equ	0xFDF
 13856                           postinc2	equ	0xFDE
 13857                           postdec2	equ	0xFDD
 13858                           fsr2h	equ	0xFDA
 13859                           fsr2l	equ	0xFD9
 13860                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    44
    Data        3
    BSS         139
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      71
    BANK0           160    115     136
    BANK1           256     47     134
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> can_send@data_correction1(BANK0[0]), data_correction(BANK1[8]), data_speed(BANK1[8]), park_routine@data_test(BANK0[8]), 
		 -> data_steering(BANK1[8]), data_brake(BANK1[8]), data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _park_search->_parallelo
    _sqrt->___fladd
    _atan->_eval_poly
    _fabs->___flneg
    ___flneg->___flmul
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flneg
    ___flge->_fabs
    ___xxtofl->_abs
    _park_routine->_CANsendMessage
    _delay_s->_delay_ms
    _delay_ms->___wmul
    _can_send->_CANsendMessage
    _configurazione->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_park_search
    _parallelo->_asin
    _asin->_atan
    _asin->_sqrt

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   74977
                    _can_interpreter
                     _configurazione
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   59595
                                             45 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   54484
                                            113 BANK0      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   36528
                                             21 BANK1     24    20      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0      8     4      4
                                              0 BANK1     21    21      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   21461
                                              0 BANK1     21    17      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1005
                                             77 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     681
                                             73 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8    8041
                                             97 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3231
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    4094
                                             77 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     882
                                             81 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2807
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     194
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     450
                                             27 BANK0     14    10      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     293
                                             23 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _park_routine                                         8     8      0    9448
                                             39 BANK0      8     8      0
                     _CANsendMessage
                           _can_send
                            _delay_s
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0     419
                                             31 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     373
                                             29 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    4538
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    4443
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      24
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    5934
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    1251
                                             12 COMRAM    23    23      0
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_interpreter
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _park_routine
     _CANsendMessage
     _can_send
       _CANisTxReady
       _CANsendMessage
     _delay_s
       _delay_ms
         ___wmul
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       _abs (ARG)
     _abs
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
       ___xxtofl
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     2F      86       7       52.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     73      88       5       85.0%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     23      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     155      20        0.0%
DATA                 0      0     155       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sun Apr 24 23:05:22 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _x 00D7  
                           _z 00DB          __end_of_CANSetFilter 1834                  ___fldiv@sign 0083  
          delay_s@repeat_loop 0080                            bsr 000FE0           ___wmul@multiplicand 0079  
                 __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                   __CFG_OSC$HS 000000  
                  _MUX_select 0100                           l501 168C                           l502 1690  
                         l430 37BE                           l503 169C                           l431 37C2  
                         l520 17E8                           l512 17A8                           l504 16A0  
                         l440 38CA                           l432 37CE                           l352 43A2  
                         l360 1946                           l513 17AC                           l505 16AC  
                         l441 38D6                           l433 37D2                           l353 43AC  
                         l361 18D6                           l514 17B8                           l506 16B0  
                         l442 38DA                           l434 37DE                           l426 379E  
                         l362 18E0                           l515 17BC                           l507 16BC  
                         l443 38E6                           l427 37A2                           l363 18EA  
                         l516 17C8                           l508 16C0                           l460 1232  
                         l444 38EA                           l428 37AE                           l372 1D3C  
                         l364 18F4                           l517 17CC                           l509 16CC  
                         l461 123E                           l445 38F6                           l437 38B6  
                         l429 37B2                           l373 1ACE                           l357 1AB8  
                         l518 17D8                           l470 1348                           l462 1242  
                         l438 38BA                           l550 4FE4                           l390 1DDE  
                         l382 1C88                           l374 1AD2                           l358 184A  
                         l519 17DC                           l471 134C                           l463 124E  
                         l439 38C6                           l391 1DE8                           l383 1C8C  
                         l375 1BCA                           l367 1A04                           l359 184E  
                         l480 1458                           l472 1358                           l464 1252  
                         l392 1DF2                           l384 1C98                           l376 1B5A  
                         l368 1A08                           l712 4C86                           l481 1464  
                         l473 135C                           l465 125E                           l457 121E  
                         l393 1DFC                           l377 1B64                           l369 1A14  
                         l490 1570                           l482 1468                           l474 1368  
                         l458 1222                           l378 1B6E                           l491 1574  
                         l483 1474                           l475 136C                           l459 122E  
                         l387 1D52                           l379 1B78                           l563 4EF2  
                         l707 4C9A                           l803 4F90                           l492 1580  
                         l484 1478                           l476 1378                           l468 1338  
                         l396 1F0C                           l388 1D56                           l716 4C98  
                         l493 1584                           l485 1484                           l469 133C  
                         l397 1F10                           l389 1E4E                           l494 1590  
                         l486 1488                           l398 1F1C                           l495 1594  
                         l487 1494                           l479 1454                           l496 15A0  
                         l744 3E90                           l497 15A4                           l498 15B0  
                         l686 4798                           l699 4794                           l997 4EB4  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           _abs 4F6E  
                         _asd 0221                           _dir 0222                           _msg 0120  
                         prod 000FF3                           wreg 000FE8                  ___flmul@aexp 009D  
                ___flmul@bexp 00A2               ?_configurazione 0001                  ___flmul@sign 009C  
                ___flmul@temp 00A7                  ___flmul@prod 00A3                  __CFG_LVP$OFF 000000  
                ___fltol@exp1 0080                  __CFG_WDT$OFF 000000                          l1004 45EC  
                        ?_abs 0077                          l1300 33BA                          l1241 26AC  
                        l1306 344A                          l1242 26A0                          l1243 266C  
                        l1308 34B8                          l1334 2CC4                          l1327 2A28  
                        l1344 2DD6                          l1336 2D32                          l1258 2820  
                        l1267 28B4                          l1383 426A                          l1384 4282  
                        l1376 420E                          l1369 4162                          l1297 3412  
                        l5021 43B8                          l4133 1B82                          l5023 43FC  
                        l5015 439A                          l5031 4FA6                          l5017 43B0  
                        l4209 1E06                          l4153 1C7C                          l4057 18FE  
                        l4403 4FF2                          l4235 1F20                          l4083 1A18  
                        l5035 4FB8                          l6003 3536                          l4421 365C  
                        l4229 1F00                          l4077 19F8                          l6013 357C  
                        l6005 354A                          l4159 1C9C                          l6015 3580  
                        l6007 356C                          l6031 4928                          l6103 2F28  
                        l5313 4BD8                          l6033 49CC                          l6121 3072  
                        l6113 2FAA                          l5331 4C20                          l6043 4548  
                        l6115 2FB2                          l6203 3ACE                          l4437 3712  
                        l6053 4638                          l4711 14DE                          l4519 0DEC  
                        l4463 37E2                          l6047 459A                          l6039 44FA  
                        l6119 3038                          l6127 30AE                          l6063 2E38  
                        l6215 3BB0                          l4705 1498                          l4609 118C  
                        l4537 0EA4                          l5329 4C14                          l6161 3F12  
                        l4643 12A8                          l4555 0F5E                          l6147 31C4  
                        l6139 318E                          l6083 2EB6                          l6075 2E84  
                        l4637 1262                          l4573 1018                          l4469 3828  
                        l6181 40F2                          l6165 3F86                          l6077 2E96  
                        l6253 3EAC                          l4807 17EC                          l4671 137C  
                        l4591 10D2                          l4495 38FA                          l4815 4EE4  
                        l6095 2EF8                          l6191 39A0                          l6247 3E52  
                        l6255 3EB2                          l6271 4652                          l6263 463E  
                        l4745 15FA                          l4841 482C                          l4913 4A7E  
                        l5705 2888                          l5625 25EC                          l5553 24EA  
                        l6177 40DA                          l6281 46A2                          l4739 15B4  
                        l4827 47A6                          l4931 4AE4                          l4923 4AAE  
                        l5715 28AE                          l5707 288E                          l5643 2690  
                        l5571 2544                          l5563 2518                          l6283 46FE  
                        l4773 16D0                          l4677 13C2                          l4837 47F4  
                        l4845 4866                          l4925 4ABE                          l4917 4A92  
                        l4941 4172                          l5733 293E                          l5725 290A  
                        l5661 270E                          l5653 26D0                          l5637 2680  
                        l6293 4746                          l4927 4AC8                          l4951 41B2  
                        l5903 3230                          l5663 2714                          l5671 2730  
                        l5639 2686                          l5583 257C                          l5559 250E  
                        l5831 2CAE                          l6375 4E7A                          l4961 425C  
                        l4953 41F0                          l5913 3260                          l5745 2962  
                        l5737 294A                          l5729 291C                          l5681 2800  
                        l5577 2558                          l5761 29B6                          l6289 470E  
                        l4779 1716                          l4947 419A                          l5923 328E  
                        l5739 294E                          l5667 271E                          l5595 25B0  
                        l5587 2586                          l5763 29BC                          l5755 2992  
                        l4973 42D4                          l4949 41A2                          l5861 2DA8  
                        l5837 2CD8                          l5781 2A16                          l5773 29EC  
                        l5765 29CE                          l4959 424C                          l5943 3310  
                        l5935 32E2                          l5919 3284                          l5695 2868  
                        l5871 2DF6                          l5863 2DBC                          l5847 2D2C  
                        l4897 4A10                          l5961 33C6                          l5953 338E  
                        l5689 2852                          l5873 2E00                          l5857 2D82  
                        l5785 2A3C                          l5699 2874                          l5779 2A10  
                        l5883 4F26                          l5973 3434                          l5893 3202  
                        l5789 2A50                          l5967 340E                          l5979 345E  
                        l5899 3226                          l5989 34B2                          l5999 3508  
                        _LATA 000F89                          _LATB 000F8A                          _LATC 000F8B  
                        u5010 368E                          u5100 3802                          u5015 3682  
                        u5105 37F6                          u5025 36EE                          u5210 0D68  
                        u6010 4A30                          u4430 191E                          u5215 0D5C  
                        u6015 4A24                          u4440 196A                          u7000 2650  
                        u5305 0F3A                          u5225 0DC8                          u5410 1108  
                        u5330 0F94                          u5250 0E20                          u4435 1912  
                        u5500 1282                          u5180 391A                          u4700 1E72  
                        u4445 195E                          u5415 10FC                          u5335 0F88  
                        u5255 0E14                          u4455 19CA                          u4560 1BA2  
                        u5505 1276                          u5425 1168                          u5345 0FF4  
                        u5265 0E80                          u5185 390E                          u4705 1E66  
                        u8001 3CF2                          u5370 104E                          u5290 0EDA  
                        u4570 1BEE                          u4715 1ED2                          u4565 1B96  
                        u5375 1042                          u5295 0ECE                          u4575 1BE2  
                        u8040 3EAA                          u5385 10AE                          u4585 1C4E  
                        u4690 1E26                          u5900 180C                          u5820 16F0  
                        u5740 15D4                          u5660 14B8                          u5580 139C  
                        u8140 475A                          u8070 464E                          u4695 1E1A  
                        u7440 2D96                          u7360 2C50                          u5905 1800  
                        u5825 16E4                          u5745 15C8                          u5665 14AC  
                        u5585 1390                          u8217 4EE6                          u4970 35D8  
                        u7365 2C44                          u4975 35CC                          u4985 3638  
                        u7900 3F42                          u7910 3F44                          u7680 351C  
                        u6980 2636                          u6990 264E                          u7991 3CE6  
         __size_of_CANSetMask 039E                          abs@a 0077                          _fabs 4E88  
                        _data 012F                          _atan 3EC6                          _asin 3942  
                        _main 4E3C                          _asus 0041                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr0l 000FE9                          fsr2h 000FDA  
                        indf1 000FE7                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          btemp 0048                          _sqrt 2E1A  
                        pclat 000FFA                          prodh 000FF4                          prodl 000FF3  
                        start 0250                 __CFG_IESO$OFF 000000               ___fldiv@new_exp 0088  
              delay_s@value_s 007F                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
            _CANOperationMode 4FEA                         ??_abs 0079    __size_of_CANreceiveMessage 050C  
                       ?_fabs 00AD                 ___fltol@sign1 007F                         ?_atan 0157  
                       ?_asin 016C               __end_of___fladd 2974                         ?_main 0001  
             __end_of___fldiv 35A4               __end_of___flneg 4F38               __end_of___flmul 2E1A  
             __end_of___fltol 4AF6                         ?_sqrt 00C1                         _T0CON 000FD5  
                       _T3CON 000FB1            __size_of_ISR_Bassa 0238               __end_of___lwdiv 4D20  
                       i1l404 2258                         i1l661 019E                         i1l670 019A  
                       i1l667 011A                         i1l676 01D6                         i1l677 0208  
                       i2l656 4B38                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _TMR3H 000FB3                         _TMR3L 000FB2                         _PORTA 000F80  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
               __CFG_PWRT$OFF 000000              __end_of_ISR_Alta 4BD6               __end_of_delay_s 4FC6  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000            CANInitialize@flags 0089                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                         fabs@d 00AD  
                       _errno 011E                         atan@f 0157                         atan@x 015F  
                       atan@y 015B                         asin@x 016C                         asin@y 017C  
    can_send@data_correction1 0087                __pbitbssCOMRAM 0220                         tablat 000FF5  
        __end_of_CANisTxReady 4FEA                         sqrt@a 00C1                         sqrt@i 0158  
                       sqrt@p 015D                         status 000FD8                  ?_park_search 0001  
             __initialization 4D8C                  __end_of_fabs 4EC6                  __end_of_atan 4118  
                __end_of_asin 3C54                  __end_of_main 4E88                  __end_of_sqrt 31E4  
                      ??_fabs 00B1                        ??_atan 00D1                        ??_asin 00D1  
                      ??_main 00D3                        ??_sqrt 00C5                 __activetblptr 000003  
           _CANisTxReady$2808 0077                        _ADCON1 000FC1                        _CANCON 000F6F  
             __CFG_BBSIZ$1024 000000             _spazio_parcheggio 0046                        i1l5201 247A  
                      i1l5131 21C6                        i2l1204 4D16                        i1l5205 2496  
                      i1l5207 24C8                        i1l5143 2220                        i1l5135 21E4  
                      i1l5127 21A8                        i1l5119 2138                        i1l5145 2252  
                      i1l5139 2202                        i1l5181 23B8                        i1l5405 0066  
                      i1l5431 0124                        i1l5193 2442                        i1l5425 00F6  
                      i1l5443 015C                        i1l5197 245E                        i1l5189 2426  
                      i1l5461 01C8                        i1l5439 0154                        i1l5449 0184  
                      i2l6313 4CC6                        i2l6315 4CD2                        i2l6325 4D08  
                      i2l6317 4CD8                        i2l6345 4B98                        _RXB0D0 000F66  
                      _RXB0D1 000F67                        _RXB0D2 000F68                        _RXB0D3 000F69  
                      _RXB0D4 000F6A                        _RXB1D0 000F56                        _RXB0D5 000F6B  
                      _RXB1D1 000F57                        _RXB0D6 000F6C                        _RXB1D2 000F58  
                      _RXB0D7 000F6D                        _RXB1D3 000F59                        _RXB1D4 000F5A  
                      _RXB1D5 000F5B                        _RXB1D6 000F5C                        _RXB1D7 000F5D  
                      _TXB0D0 000F46                        _TXB0D1 000F47                        _TXB0D2 000F48  
                      _TXB0D3 000F49                        _TXB1D0 000F36                        _TXB0D4 000F4A  
                      _TXB1D1 000F37                        _TXB0D5 000F4B                        _TXB1D2 000F38  
                      _TXB0D6 000F4C                        _TXB1D3 000F39                        _TXB0D7 000F4D  
                      _TXB2D0 000F26                        _TXB1D4 000F3A                        _TXB2D1 000F27  
                      _TXB1D5 000F3B                        _TXB2D2 000F28                        _TXB1D6 000F3C  
                      _TXB2D3 000F29                        _TXB1D7 000F3D                        _TXB2D4 000F2A  
                      _TXB2D5 000F2B                        _TXB2D6 000F2C                        _TXB2D7 000F2D  
          CANsendMessage@data 007B              __end_of_can_send 48D2            CANsendMessage@tamp 0083  
            __end_of___xxtofl 42E6             __end_of_ISR_Bassa 0250              __end_of_delay_ms 4F00  
       __size_of_CANSetFilter 0B06                __CFG_XINST$OFF 000000                        ___flge 44AC  
             _data_correction 013F                     ??___fladd 00B5                        ___wmul 4F38  
                   ??___fldiv 007F                     ??___flneg 00AD                __CFG_STVREN$ON 000000  
                   ??___flmul 0098                     ??___fltol 007B                     ??___lwdiv 0064  
                ??_CANSetMask 007C                        _gianni 0042                        clear_0 4D92  
                      clear_1 4D9E                        clear_2 4DAE                     ??_delay_s 007F  
             __CFG_BOREN$BOHW 000000                  __pdataCOMRAM 0046                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                _CANSetFilter 0D2E                    ___flge@ff1 00B1                    ___flge@ff2 00B5  
                ___xxtofl@arg 0085                  ___xxtofl@exp 0084                  ___xxtofl@val 007B  
                  __accesstop 0060       __end_of__initialization 4DDE            __end_of_CANSetMask 3942  
             __CFG_PBADEN$OFF 000000                    ___flneg@f1 00A9                 ?_park_routine 0001  
                eval_poly@res 00CD                 ___rparam_used 000000                    ___fltol@f1 0077  
              __pcstackCOMRAM 0001                     ?_ISR_Alta 0001                  __pidataBANK0 5002  
            ??_configurazione 0091         CANSetFilter@numBuffer 0080                  _actual_speed 00DF  
       __size_of_CANisTxReady 0024      __end_of_CANOperationMode 5000                    __pbssBANK0 00D3  
                  __pbssBANK1 0100               _sensor_distance 0024            __size_of_eval_poly 0118  
                  _data_brake 0137                ??_park_routine 0087                 ISR_Bassa@gigi 0022  
     __size_of_CANsendMessage 078C                    _data_speed 0147                    _activation 0220  
    __size_of_can_interpreter 0054            __size_of_parallelo 0272          __size_of_park_search 0166  
           _old_alignment_gap 0118                    ??_ISR_Alta 0067                       ?___flge 00B1  
                     ?___wmul 0077                       _CANSTAT 000F6E                  _CANisTxReady 4FC6  
                     _BRGCON1 000F70                       _BRGCON2 000F71                       _BRGCON3 000F72  
                   ?_can_send 0001                     ?___xxtofl 007B        __size_of_CANInitialize 01C6  
                   ?_delay_ms 007D                       _RXB0DLC 000F65                       _RXB1DLC 000F55  
                     _RXB0CON 000F60                       _RXB1CON 000F50                       _TXB0DLC 000F45  
                     _TXB1DLC 000F35                       _TXB2DLC 000F25           CANsendMessage@flags 007E  
                     __Hparam 0000                    _left_speed 0038                       __Lparam 0000  
            delay_ms@value_ms 007D               __size_of___flge 0190                       ___fladd 24CC  
                     ___fldiv 31E4                       ___flneg 4F00                       ___flmul 2974  
                     ___fltol 49EA               __size_of___wmul 0036                       ___lwdiv 4CA8  
                __psmallconst 0D00          CANInitialize@propSeg 008E                       __pcinit 4D8C  
           __end_of_eval_poly 49EA                       _delay_s 4F9A                       __ramtop 0D00  
                     __ptext0 4E3C                       __ptext1 463C                       __ptext2 3C54  
                     __ptext3 3942                       __ptext4 2E1A                       __ptext5 3EC6  
                     __ptext6 4E88                       __ptext7 4F00                       __ptext8 48D2  
                     __ptext9 2974                    ??_can_send 0087                  __size_of_abs 002C  
             atan@val_squared 0164                    ??___xxtofl 007F                       atan@val 0168  
           __end_of_parallelo 3EC6                    ??_delay_ms 007F                       asin@sgn 0170  
      CANreceiveMessage@error 000B               _start_operation 0228                __pintcode_body 4AF6  
        end_of_initialization 4DDE                       int_func 4AF6                 _CANInitialize 42E6  
                   _ISR_Bassa 0018                       postdec2 000FDD                       postinc0 000FEE  
                     postinc2 000FDE                       sqrt@grs 015E                       sqrt@exp 0162  
           ??_can_interpreter 0077       _steering_correction_dir 0229                     _PORTBbits 000F81  
              CANSetMask@mask 0077                CANSetMask@tamp 0081                  _distance_set 0110  
              CANSetMask@type 007B          __end_of_park_routine 4CA8                   ___fladd@grs 00C0  
               ___xxtofl@sign 0083                     _TRISBbits 000F93                   ___fldiv@grs 008A  
                 ___fldiv@rem 0084                     _MUX_index 0040                    _pulse_time 003A  
     _clock_counter_reference 00E1                   ___flmul@grs 009E                _CANsendMessage 1834  
            CANInitialize@BRP 0088              CANInitialize@SJW 0087                ?_CANInitialize 0085  
                  ?_ISR_Bassa 0001                __end_of___flge 463C             __size_of_ISR_Alta 4BCE  
              __end_of___wmul 4F6E                 __pidataCOMRAM 5000           start_initialization 4D8C  
                  eval_poly@d 00C5                    eval_poly@n 00C7                    eval_poly@x 00C1  
                 __end_of_abs 4F9A           CANSetMask@numBuffer 0080                 _data_speed_rx 0108  
      __end_of_CANsendMessage 1FC0             ?_CANOperationMode 0001                 _data_steering 014F  
          ??_CANOperationMode 0077             _distance_received 0224    CANInitialize@FilterConfig1 008F  
  CANInitialize@FilterConfig2 0090           _steering_correction 0043                      ??___flge 00B9  
                    ??___wmul 007B                   __pdataBANK0 00E7              __CFG_LPT1OSC$OFF 000000  
                   ___fladd@a 00B1                     ___fladd@b 00AD        CANInitialize@phaseSeg1 0085  
      CANInitialize@phaseSeg2 0086                     ___fldiv@a 007B                     ___fldiv@b 0077  
                   ___flmul@a 0094                     ___flmul@b 0090                   __pbssCOMRAM 0024  
               __pcstackBANK0 0060                 __pcstackBANK1 0157                   _BRGCON2bits 000F71  
                 _BRGCON3bits 000F72             __size_of_can_send 0130             __size_of___xxtofl 01CE  
           __size_of_delay_ms 003A               ?_CANsendMessage 0077               ??_CANInitialize 008A  
                   _asin$3623 0180                     _asin$3624 0178                     _asin$3625 0174  
               ??_park_search 0184                 _alignment_gap 00D3            CANSetFilter@filter 0077  
            ___lwdiv@dividend 0060                    ISR_Bassa@i 0023                   ??_ISR_Bassa 000D  
                   __pintcode 0008                      ?___fladd 00AD                      ?___fldiv 0077  
                    ?___flneg 00A9                      ?___flmul 0090                      ?___fltol 0077  
       __size_of_park_routine 00D2                      ?___lwdiv 0060         park_routine@data_test 0087  
                 __pintcodelo 0018                      ?_delay_s 0001                   __smallconst 0D00  
                 _COMSTATbits 000F74                     _eval_poly 48D2              ___lwdiv@quotient 0065  
     __size_of_configurazione 006C                     _parallelo 3C54         CANreceiveMessage@tamp 000C  
              ___wmul@product 007B                      _LATBbits 000F8A               _can_interpreter 4DE8  
                   atan@recip 0163                  _park_routine 4BD6  _delay_quartz_frequency_value 00E7  
                    _IPR3bits 000FA5                      _PIE3bits 000FA3                      i1u634_20 2078  
                    i1u634_26 207A                      i1u635_20 20A6                      i1u643_25 222C  
                    i1u635_26 20A8                      i1u645_20 2300                      i1u637_25 20BC  
                    i1u645_26 2302                      i1u646_20 232A                      i1u654_25 24A2  
                    i1u646_26 232C                      i1u822_27 01F8                      i1u648_25 233E  
                    _PIR3bits 000FA4                      _RXB0EIDH 000F63                      _RXB0EIDL 000F64  
                    _RXB1EIDH 000F53                      _RXB1EIDL 000F54                      _ISR_Alta 0008  
                   _set_speed 00E5                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
                    _RXB0SIDH 000F61                      _RXB0SIDL 000F62                      _RXF0EIDH 000F02  
                    _RXB1SIDH 000F51                      _RXF0EIDL 000F03                      _RXB1SIDL 000F52  
                    _RXF1EIDH 000F06                      _RXF1EIDL 000F07                      _RXF2EIDH 000F0A  
                    _RXF2EIDL 000F0B                      _RXF3EIDH 000F0E                      _RXF3EIDL 000F0F  
                    _RXF4EIDH 000F12                      _RXF4EIDL 000F13                      _RXF5EIDH 000F16  
                    _RXF5EIDL 000F17                      _RXF0SIDH 000F00                      _RXF0SIDL 000F01  
         __end_of_park_search 47A2                      _TXB0EIDH 000F43                      _RXF1SIDH 000F04  
                    _TXB0EIDL 000F44                      _RXF1SIDL 000F05                      _TXB1EIDH 000F33  
                    _RXF2SIDH 000F08                      _TXB1EIDL 000F34                      _RXF2SIDL 000F09  
                    _TXB2EIDH 000F23                      _RXF3SIDH 000F0C                      _TXB2EIDL 000F24  
                    _RXF3SIDL 000F0D                      _RXF4SIDH 000F10                      _RXF4SIDL 000F11  
                    _RXF5SIDH 000F14                      _RXF5SIDL 000F15                      _RXM0EIDH 000F1A  
                    _RXM0EIDL 000F1B                      _TXB0SIDH 000F41                      _RXM1EIDH 000F1E  
                    _TXB0SIDL 000F42                      _RXM1EIDL 000F1F                      _TXB1SIDH 000F31  
                    _TXB1SIDL 000F32                      _TXB2SIDH 000F21                      _TXB2SIDL 000F22  
                    _RXM0SIDH 000F18                      _RXM0SIDL 000F19                      _RXM1SIDH 000F1C  
                    _RXM1SIDL 000F1D                   _distance_dx 0034                   _distance_sx 0036  
                    _RXERRCNT 000F75                      _TXERRCNT 000F76             ___wmul@multiplier 0077  
                  ?_eval_poly 00C1           __end_ofatan@coeff_a 0D19           __end_ofatan@coeff_b 0D2D  
               ?_CANSetFilter 0077                   _INTCON2bits 000FF1                    _CANCONbits 000F6F  
                  ?_parallelo 0001              _distance_average 00E3                      __Hparam0 0000  
                    __Lparam0 0000                  _RXB0SIDLbits 000F62                  _RXB1SIDLbits 000F52  
            __size_of___fladd 04A8                    _CANSetMask 35A4              __size_of___fldiv 03C0  
            __size_of___flneg 0038              __size_of___flmul 04A6              __size_of___fltol 010C  
            __size_of___lwdiv 0078              __size_of_delay_s 002C                      _can_send 47A2  
                    ___xxtofl 4118                  _RXF0SIDLbits 000F01                      _delay_ms 4EC6  
             ___lwdiv@divisor 0062                  _RXF1SIDLbits 000F05               ___lwdiv@counter 0064  
              ??_CANSetFilter 007C                      __ptext10 24CC                      __ptext11 44AC  
                    __ptext20 47A2                      __ptext12 31E4                      __ptext21 1834  
                    __ptext13 4F6E                      __ptext30 1FC0                      __ptext22 4FC6  
                    __ptext14 4118                      __ptext23 4D20                      __ptext15 49EA  
                    __ptext32 4CA8                      __ptext24 42E6                      __ptext16 4BD6  
                    __ptext25 35A4                      __ptext17 4F9A                      __ptext26 0D2E  
                    __ptext18 4EC6                      __ptext27 4FEA                      __ptext19 4F38  
                    __ptext28 4DE8                  _RXF2SIDLbits 000F09       __end_of_can_interpreter 4E3C  
                _RXF3SIDLbits 000F0D                      _distance 011C                  _RXF4SIDLbits 000F11  
                _RXF5SIDLbits 000F15      CANsendMessage@dataLength 007D                 __size_of_fabs 003E  
               __size_of_atan 0252                 __size_of_asin 0312                 __size_of_main 004C  
               __size_of_sqrt 03CA                   _park_search 463C          CANreceiveMessage@msg 0001  
                _TXB0SIDLbits 000F42                  _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22  
                    int$flags 0048     __size_of_CANOperationMode 0016                 ?_CANisTxReady 0001  
                 atan@coeff_a 0D01                   atan@coeff_b 0D19                   _RXB0DLCbits 000F65  
                 _RXB1DLCbits 000F55                  _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60  
                 _RXB1CONbits 000F50             _CANreceiveMessage 1FC0                  _RXM1SIDLbits 000F1D  
                  _INTCONbits 000FF2                   ??_eval_poly 00C9              ??_CANsendMessage 007F  
          ?_CANreceiveMessage 0001                  _request_sent 0227                     sqrt@tfrac 0159  
              _configurazione 4D20      CANsendMessage@identifier 0077                   ??_parallelo 00D1  
                    intlevel1 0000                      intlevel2 0000              CANSetFilter@tamp 0081  
            CANSetFilter@type 007B           ??_CANreceiveMessage 0003           _old_data_correction 0226  
                 _TXB0DLCbits 000F45                   _right_speed 003C                   _TXB1DLCbits 000F35  
                 _TXB0CONbits 000F40                   _TXB2DLCbits 000F25                   _TXB1CONbits 000F30  
                 _TXB2CONbits 000F20          CANOperationMode@mode 0077                   ?_CANSetMask 0077  
              ??_CANisTxReady 0077                _distance_error 0223     __end_of_CANreceiveMessage 24CC  
                    sqrt@frac 0168                      sqrt@sign 0157                      sqrt@root 0164  
                 _timerValue2 003E        __end_of_configurazione 4D8C                 ___fladd@signs 00BD  
               _distance_wait 0225              ?_can_interpreter 0001                  ___fladd@aexp 00BE  
                ___fladd@bexp 00BF         __end_of_CANInitialize 44AC  
