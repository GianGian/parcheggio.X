

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed May 04 19:01:57 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    59                           	psect	param0,global,class=BANK0,space=1,delta=1
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61  0000                     
    62                           	psect	idataBANK0
    63  005EC6                     __pidataBANK0:
    64                           	opt stack 0
    65                           
    66                           ;initializer for _delay_quartz_frequency_value
    67  005EC6  10                 	db	16
    68                           
    69                           	psect	idataBANK1
    70  005EBC                     __pidataBANK1:
    71                           	opt stack 0
    72                           
    73                           ;initializer for _larghezza
    74  005EBC  0000               	dw	0
    75  005EBE  4200               	dw	16896
    76                           
    77                           ;initializer for _spazio_parcheggio
    78  005EC0  0064               	dw	100
    79                           
    80                           ;initializer for _raggio
    81  005EC2  0000               	dw	0
    82  005EC4  4260               	dw	16992
    83                           
    84                           	psect	smallconst
    85  000D00                     __psmallconst:
    86                           	opt stack 0
    87  000D00  00                 	db	0
    88  000D01                     atan@coeff_a:
    89                           	opt stack 0
    90  000D01  3C06               	dw	15366
    91  000D03  4204               	dw	16900
    92  000D05  9F7D               	dw	40829
    93  000D07  426A               	dw	17002
    94  000D09  905C               	dw	36956
    95  000D0B  4201               	dw	16897
    96  000D0D  4D60               	dw	19808
    97  000D0F  40BB               	dw	16571
    98  000D11  EC51               	dw	60497
    99  000D13  3E47               	dw	15943
   100  000D15  8DDE               	dw	36318
   101  000D17  BB1F               	dw	47903
   102  000D19                     __end_ofatan@coeff_a:
   103                           	opt stack 0
   104  000D19                     atan@coeff_b:
   105                           	opt stack 0
   106  000D19  3C06               	dw	15366
   107  000D1B  4204               	dw	16900
   108  000D1D  59C0               	dw	22976
   109  000D1F  428B               	dw	17035
   110  000D21  0474               	dw	1140
   111  000D23  4244               	dw	16964
   112  000D25  9BF9               	dw	39929
   113  000D27  414F               	dw	16719
   114  000D29  0000               	dw	0
   115  000D2B  3F80               	dw	16256
   116  000D2D                     __end_ofatan@coeff_b:
   117                           	opt stack 0
   118  000D2D                     sin@coeff_a:
   119                           	opt stack 0
   120  000D2D  F3EC               	dw	62444
   121  000D2F  484A               	dw	18506
   122  000D31  9535               	dw	38197
   123  000D33  C795               	dw	51093
   124  000D35  C117               	dw	49431
   125  000D37  45DC               	dw	17884
   126  000D39  DBFD               	dw	56317
   127  000D3B  C36D               	dw	50029
   128  000D3D  B372               	dw	45938
   129  000D3F  4033               	dw	16435
   130  000D41                     __end_ofsin@coeff_a:
   131                           	opt stack 0
   132  000D41                     sin@coeff_b:
   133                           	opt stack 0
   134  000D41  342B               	dw	13355
   135  000D43  4801               	dw	18433
   136  000D45  9D7F               	dw	40319
   137  000D47  45B0               	dw	17840
   138  000D49  FFE7               	dw	65511
   139  000D4B  42D9               	dw	17113
   140  000D4D  0000               	dw	0
   141  000D4F  3F80               	dw	16256
   142  000D51                     __end_ofsin@coeff_b:
   143                           	opt stack 0
   144  0000                     _RXB1CON	set	3920
   145  0000                     _RXB1CONbits	set	3920
   146  0000                     _RXB1D0	set	3926
   147  0000                     _RXB1D1	set	3927
   148  0000                     _RXB1D2	set	3928
   149  0000                     _RXB1D3	set	3929
   150  0000                     _RXB1D4	set	3930
   151  0000                     _RXB1D5	set	3931
   152  0000                     _RXB1D6	set	3932
   153  0000                     _RXB1D7	set	3933
   154  0000                     _RXB1DLC	set	3925
   155  0000                     _RXB1DLCbits	set	3925
   156  0000                     _RXB1EIDH	set	3923
   157  0000                     _RXB1EIDL	set	3924
   158  0000                     _RXB1SIDH	set	3921
   159  0000                     _RXB1SIDL	set	3922
   160  0000                     _RXB1SIDLbits	set	3922
   161  0000                     _RXF0EIDH	set	3842
   162  0000                     _RXF0EIDL	set	3843
   163  0000                     _RXF0SIDH	set	3840
   164  0000                     _RXF0SIDL	set	3841
   165  0000                     _RXF0SIDLbits	set	3841
   166  0000                     _RXF1EIDH	set	3846
   167  0000                     _RXF1EIDL	set	3847
   168  0000                     _RXF1SIDH	set	3844
   169  0000                     _RXF1SIDL	set	3845
   170  0000                     _RXF1SIDLbits	set	3845
   171  0000                     _RXF2EIDH	set	3850
   172  0000                     _RXF2EIDL	set	3851
   173  0000                     _RXF2SIDH	set	3848
   174  0000                     _RXF2SIDL	set	3849
   175  0000                     _RXF2SIDLbits	set	3849
   176  0000                     _RXF3EIDH	set	3854
   177  0000                     _RXF3EIDL	set	3855
   178  0000                     _RXF3SIDH	set	3852
   179  0000                     _RXF3SIDL	set	3853
   180  0000                     _RXF3SIDLbits	set	3853
   181  0000                     _RXF4EIDH	set	3858
   182  0000                     _RXF4EIDL	set	3859
   183  0000                     _RXF4SIDH	set	3856
   184  0000                     _RXF4SIDL	set	3857
   185  0000                     _RXF4SIDLbits	set	3857
   186  0000                     _RXF5EIDH	set	3862
   187  0000                     _RXF5EIDL	set	3863
   188  0000                     _RXF5SIDH	set	3860
   189  0000                     _RXF5SIDL	set	3861
   190  0000                     _RXF5SIDLbits	set	3861
   191  0000                     _RXM0EIDH	set	3866
   192  0000                     _RXM0EIDL	set	3867
   193  0000                     _RXM0SIDH	set	3864
   194  0000                     _RXM0SIDL	set	3865
   195  0000                     _RXM0SIDLbits	set	3865
   196  0000                     _RXM1EIDH	set	3870
   197  0000                     _RXM1EIDL	set	3871
   198  0000                     _RXM1SIDH	set	3868
   199  0000                     _RXM1SIDL	set	3869
   200  0000                     _RXM1SIDLbits	set	3869
   201  0000                     _TXB0CONbits	set	3904
   202  0000                     _TXB0D0	set	3910
   203  0000                     _TXB0D1	set	3911
   204  0000                     _TXB0D2	set	3912
   205  0000                     _TXB0D3	set	3913
   206  0000                     _TXB0D4	set	3914
   207  0000                     _TXB0D5	set	3915
   208  0000                     _TXB0D6	set	3916
   209  0000                     _TXB0D7	set	3917
   210  0000                     _TXB0DLC	set	3909
   211  0000                     _TXB0DLCbits	set	3909
   212  0000                     _TXB0EIDH	set	3907
   213  0000                     _TXB0EIDL	set	3908
   214  0000                     _TXB0SIDH	set	3905
   215  0000                     _TXB0SIDL	set	3906
   216  0000                     _TXB0SIDLbits	set	3906
   217  0000                     _TXB1CONbits	set	3888
   218  0000                     _TXB1D0	set	3894
   219  0000                     _TXB1D1	set	3895
   220  0000                     _TXB1D2	set	3896
   221  0000                     _TXB1D3	set	3897
   222  0000                     _TXB1D4	set	3898
   223  0000                     _TXB1D5	set	3899
   224  0000                     _TXB1D6	set	3900
   225  0000                     _TXB1D7	set	3901
   226  0000                     _TXB1DLC	set	3893
   227  0000                     _TXB1DLCbits	set	3893
   228  0000                     _TXB1EIDH	set	3891
   229  0000                     _TXB1EIDL	set	3892
   230  0000                     _TXB1SIDH	set	3889
   231  0000                     _TXB1SIDL	set	3890
   232  0000                     _TXB1SIDLbits	set	3890
   233  0000                     _TXB2CONbits	set	3872
   234  0000                     _TXB2D0	set	3878
   235  0000                     _TXB2D1	set	3879
   236  0000                     _TXB2D2	set	3880
   237  0000                     _TXB2D3	set	3881
   238  0000                     _TXB2D4	set	3882
   239  0000                     _TXB2D5	set	3883
   240  0000                     _TXB2D6	set	3884
   241  0000                     _TXB2D7	set	3885
   242  0000                     _TXB2DLC	set	3877
   243  0000                     _TXB2DLCbits	set	3877
   244  0000                     _TXB2EIDH	set	3875
   245  0000                     _TXB2EIDL	set	3876
   246  0000                     _TXB2SIDH	set	3873
   247  0000                     _TXB2SIDL	set	3874
   248  0000                     _TXB2SIDLbits	set	3874
   249  0000                     _ADCON1	set	4033
   250  0000                     _BRGCON1	set	3952
   251  0000                     _BRGCON2	set	3953
   252  0000                     _BRGCON2bits	set	3953
   253  0000                     _BRGCON3	set	3954
   254  0000                     _BRGCON3bits	set	3954
   255  0000                     _CANCON	set	3951
   256  0000                     _CANCONbits	set	3951
   257  0000                     _CANSTAT	set	3950
   258  0000                     _COMSTATbits	set	3956
   259  0000                     _INTCON2bits	set	4081
   260  0000                     _INTCONbits	set	4082
   261  0000                     _IPR3bits	set	4005
   262  0000                     _LATA	set	3977
   263  0000                     _LATB	set	3978
   264  0000                     _LATBbits	set	3978
   265  0000                     _LATC	set	3979
   266  0000                     _PIE3bits	set	4003
   267  0000                     _PIR3bits	set	4004
   268  0000                     _PORTA	set	3968
   269  0000                     _PORTBbits	set	3969
   270  0000                     _RCONbits	set	4048
   271  0000                     _RXB0CON	set	3936
   272  0000                     _RXB0CONbits	set	3936
   273  0000                     _RXB0D0	set	3942
   274  0000                     _RXB0D1	set	3943
   275  0000                     _RXB0D2	set	3944
   276  0000                     _RXB0D3	set	3945
   277  0000                     _RXB0D4	set	3946
   278  0000                     _RXB0D5	set	3947
   279  0000                     _RXB0D6	set	3948
   280  0000                     _RXB0D7	set	3949
   281  0000                     _RXB0DLC	set	3941
   282  0000                     _RXB0DLCbits	set	3941
   283  0000                     _RXB0EIDH	set	3939
   284  0000                     _RXB0EIDL	set	3940
   285  0000                     _RXB0SIDH	set	3937
   286  0000                     _RXB0SIDL	set	3938
   287  0000                     _RXB0SIDLbits	set	3938
   288  0000                     _RXERRCNT	set	3957
   289  0000                     _T0CON	set	4053
   290  0000                     _T0CONbits	set	4053
   291  0000                     _T3CON	set	4017
   292  0000                     _TMR0H	set	4055
   293  0000                     _TMR0L	set	4054
   294  0000                     _TMR3H	set	4019
   295  0000                     _TMR3L	set	4018
   296  0000                     _TRISA	set	3986
   297  0000                     _TRISB	set	3987
   298  0000                     _TRISBbits	set	3987
   299  0000                     _TRISC	set	3988
   300  0000                     _TXERRCNT	set	3958
   301                           
   302                           ; #config settings
   303  000D51  00                 	db	0	; dummy byte at the end
   304  0000                     
   305                           	psect	cinit
   306  005BF8                     __pcinit:
   307                           	opt stack 0
   308  005BF8                     start_initialization:
   309                           	opt stack 0
   310  005BF8                     __initialization:
   311                           	opt stack 0
   312                           
   313                           ; Clear objects allocated to BANK1 (137 bytes)
   314  005BF8  EE01  F000         	lfsr	0,__pbssBANK1
   315  005BFC  0E89               	movlw	137
   316  005BFE                     clear_0:
   317  005BFE  6AEE               	clrf	postinc0,c
   318  005C00  06E8               	decf	wreg,f,c
   319  005C02  E1FD               	bnz	clear_0
   320                           
   321                           ; Clear objects allocated to BANK0 (8 bytes)
   322  005C04  EE00  F0E0         	lfsr	0,__pbssBANK0
   323  005C08  0E08               	movlw	8
   324  005C0A                     clear_1:
   325  005C0A  6AEE               	clrf	postinc0,c
   326  005C0C  06E8               	decf	wreg,f,c
   327  005C0E  E1FD               	bnz	clear_1
   328                           
   329                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   330  005C10  6A47               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   331  005C12  6A46               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   332                           
   333                           ; Clear objects allocated to COMRAM (34 bytes)
   334  005C14  EE00  F024         	lfsr	0,__pbssCOMRAM
   335  005C18  0E22               	movlw	34
   336  005C1A                     clear_2:
   337  005C1A  6AEE               	clrf	postinc0,c
   338  005C1C  06E8               	decf	wreg,f,c
   339  005C1E  E1FD               	bnz	clear_2
   340                           
   341                           ; Initialize objects allocated to BANK1 (10 bytes)
   342                           ; load TBLPTR registers with __pidataBANK1
   343  005C20  0EBC               	movlw	low __pidataBANK1
   344  005C22  6EF6               	movwf	tblptrl,c
   345  005C24  0E5E               	movlw	high __pidataBANK1
   346  005C26  6EF7               	movwf	tblptrh,c
   347  005C28  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   348  005C2A  6EF8               	movwf	tblptru,c
   349  005C2C  EE01  F0E6         	lfsr	0,__pdataBANK1
   350  005C30  EE10 F00A          	lfsr	1,10
   351  005C34                     copy_data0:
   352  005C34  0009               	tblrd		*+
   353  005C36  CFF5 FFEE          	movff	tablat,postinc0
   354  005C3A  50E5               	movf	postdec1,w,c
   355  005C3C  50E1               	movf	fsr1l,w,c
   356  005C3E  E1FA               	bnz	copy_data0
   357                           
   358                           ; Initialize objects allocated to BANK0 (1 bytes)
   359                           ; load TBLPTR registers with __pidataBANK0
   360  005C40  0EC6               	movlw	low __pidataBANK0
   361  005C42  6EF6               	movwf	tblptrl,c
   362  005C44  0E5E               	movlw	high __pidataBANK0
   363  005C46  6EF7               	movwf	tblptrh,c
   364  005C48  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   365  005C4A  6EF8               	movwf	tblptru,c
   366  005C4C  0009               	tblrd		*+	;fetch initializer
   367  005C4E  CFF5 F0E8          	movff	tablat,__pdataBANK0
   368  005C52                     end_of_initialization:
   369                           	opt stack 0
   370  005C52                     __end_of__initialization:
   371                           	opt stack 0
   372  005C52  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   373  005C54  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   374  005C56  0100               	movlb	0
   375  005C58  EF58  F02E         	goto	_main	;jump to C main() function
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           postdec1	equ	0xFE5
   383                           fsr1l	equ	0xFE1
   384                           
   385                           	psect	bitbssCOMRAM
   386  000230                     __pbitbssCOMRAM:
   387                           	opt stack 0
   388  000230                     _activation:
   389                           	opt stack 0
   390  000230                     	ds	1
   391  000231                     _asd:
   392                           	opt stack 0
   393  000231                     	ds	1
   394  000232                     _dir:
   395                           	opt stack 0
   396  000232                     	ds	1
   397  000233                     _distance_error:
   398                           	opt stack 0
   399  000233                     	ds	1
   400  000234                     _distance_received:
   401                           	opt stack 0
   402  000234                     	ds	1
   403  000235                     _distance_received1:
   404                           	opt stack 0
   405  000235                     	ds	1
   406  000236                     _distance_wait:
   407                           	opt stack 0
   408  000236                     	ds	1
   409  000237                     _old_data_correction:
   410                           	opt stack 0
   411  000237                     	ds	1
   412  000238                     _request_sent:
   413                           	opt stack 0
   414  000238                     	ds	1
   415  000239                     _request_sent1:
   416                           	opt stack 0
   417  000239                     	ds	1
   418  00023A                     _start_operation:
   419                           	opt stack 0
   420  00023A                     	ds	1
   421  00023B                     _steering_correction_dir:
   422                           	opt stack 0
   423  00023B                     	ds	1
   424                           tblptru	equ	0xFF8
   425                           tblptrh	equ	0xFF7
   426                           tblptrl	equ	0xFF6
   427                           tablat	equ	0xFF5
   428                           postinc0	equ	0xFEE
   429                           wreg	equ	0xFE8
   430                           postdec1	equ	0xFE5
   431                           fsr1l	equ	0xFE1
   432                           
   433                           	psect	bssCOMRAM
   434  000024                     __pbssCOMRAM:
   435                           	opt stack 0
   436  000024                     _sensor_distance:
   437                           	opt stack 0
   438  000024                     	ds	16
   439  000034                     _distance_average:
   440                           	opt stack 0
   441  000034                     	ds	2
   442  000036                     _distance_dx:
   443                           	opt stack 0
   444  000036                     	ds	2
   445  000038                     _distance_sx:
   446                           	opt stack 0
   447  000038                     	ds	2
   448  00003A                     _left_speed:
   449                           	opt stack 0
   450  00003A                     	ds	2
   451  00003C                     _pulse_time:
   452                           	opt stack 0
   453  00003C                     	ds	2
   454  00003E                     _right_speed:
   455                           	opt stack 0
   456  00003E                     	ds	2
   457  000040                     _timerValue2:
   458                           	opt stack 0
   459  000040                     	ds	2
   460  000042                     _MUX_index:
   461                           	opt stack 0
   462  000042                     	ds	1
   463  000043                     _asus:
   464                           	opt stack 0
   465  000043                     	ds	1
   466  000044                     _gianni:
   467                           	opt stack 0
   468  000044                     	ds	1
   469  000045                     _steering_correction:
   470                           	opt stack 0
   471  000045                     	ds	1
   472                           tblptru	equ	0xFF8
   473                           tblptrh	equ	0xFF7
   474                           tblptrl	equ	0xFF6
   475                           tablat	equ	0xFF5
   476                           postinc0	equ	0xFEE
   477                           wreg	equ	0xFE8
   478                           postdec1	equ	0xFE5
   479                           fsr1l	equ	0xFE1
   480                           
   481                           	psect	bssBANK0
   482  0000E0                     __pbssBANK0:
   483                           	opt stack 0
   484  0000E0                     _alignment_gap:
   485                           	opt stack 0
   486  0000E0                     	ds	4
   487  0000E4                     _clock_counter_reference:
   488                           	opt stack 0
   489  0000E4                     	ds	2
   490  0000E6                     _set_speed:
   491                           	opt stack 0
   492  0000E6                     	ds	2
   493                           tblptru	equ	0xFF8
   494                           tblptrh	equ	0xFF7
   495                           tblptrl	equ	0xFF6
   496                           tablat	equ	0xFF5
   497                           postinc0	equ	0xFEE
   498                           wreg	equ	0xFE8
   499                           postdec1	equ	0xFE5
   500                           fsr1l	equ	0xFE1
   501                           
   502                           	psect	dataBANK0
   503  0000E8                     __pdataBANK0:
   504                           	opt stack 0
   505  0000E8                     _delay_quartz_frequency_value:
   506                           	opt stack 0
   507  0000E8                     	ds	1
   508                           tblptru	equ	0xFF8
   509                           tblptrh	equ	0xFF7
   510                           tblptrl	equ	0xFF6
   511                           tablat	equ	0xFF5
   512                           postinc0	equ	0xFEE
   513                           wreg	equ	0xFE8
   514                           postdec1	equ	0xFE5
   515                           fsr1l	equ	0xFE1
   516                           
   517                           	psect	bssBANK1
   518  000100                     __pbssBANK1:
   519                           	opt stack 0
   520  000100                     _MUX_select:
   521                           	opt stack 0
   522  000100                     	ds	8
   523  000108                     _data_speed_rx:
   524                           	opt stack 0
   525  000108                     	ds	8
   526  000110                     _distance_set:
   527                           	opt stack 0
   528  000110                     	ds	8
   529  000118                     _Pminimo:
   530                           	opt stack 0
   531  000118                     	ds	4
   532  00011C                     _alfa:
   533                           	opt stack 0
   534  00011C                     	ds	4
   535  000120                     _beta:
   536                           	opt stack 0
   537  000120                     	ds	4
   538  000124                     _bordo:
   539                           	opt stack 0
   540  000124                     	ds	4
   541  000128                     _jjj:
   542                           	opt stack 0
   543  000128                     	ds	4
   544  00012C                     _kkk:
   545                           	opt stack 0
   546  00012C                     	ds	4
   547  000130                     _n:
   548                           	opt stack 0
   549  000130                     	ds	4
   550  000134                     _old_alignment_gap:
   551                           	opt stack 0
   552  000134                     	ds	4
   553  000138                     _prima_sterzata:
   554                           	opt stack 0
   555  000138                     	ds	4
   556  00013C                     _x:
   557                           	opt stack 0
   558  00013C                     	ds	4
   559  000140                     _z:
   560                           	opt stack 0
   561  000140                     	ds	4
   562  000144                     _actual_speed:
   563                           	opt stack 0
   564  000144                     	ds	2
   565  000146                     _distance:
   566                           	opt stack 0
   567  000146                     	ds	2
   568  000148                     _errno:
   569                           	opt stack 0
   570  000148                     	ds	2
   571  00014A                     _msg:
   572                           	opt stack 0
   573  00014A                     	ds	15
   574  000159                     _data:
   575                           	opt stack 0
   576  000159                     	ds	8
   577  000161                     _data_brake:
   578                           	opt stack 0
   579  000161                     	ds	8
   580  000169                     _data_correction:
   581                           	opt stack 0
   582  000169                     	ds	8
   583  000171                     _data_speed:
   584                           	opt stack 0
   585  000171                     	ds	8
   586  000179                     _data_steering:
   587                           	opt stack 0
   588  000179                     	ds	8
   589  000181                     _data_test:
   590                           	opt stack 0
   591  000181                     	ds	8
   592                           tblptru	equ	0xFF8
   593                           tblptrh	equ	0xFF7
   594                           tblptrl	equ	0xFF6
   595                           tablat	equ	0xFF5
   596                           postinc0	equ	0xFEE
   597                           wreg	equ	0xFE8
   598                           postdec1	equ	0xFE5
   599                           fsr1l	equ	0xFE1
   600                           
   601                           	psect	dataBANK1
   602  0001E6                     __pdataBANK1:
   603                           	opt stack 0
   604  0001E6                     _larghezza:
   605                           	opt stack 0
   606  0001E6                     	ds	4
   607  0001EA                     _spazio_parcheggio:
   608                           	opt stack 0
   609  0001EA                     	ds	2
   610  0001EC                     _raggio:
   611                           	opt stack 0
   612  0001EC                     	ds	4
   613                           tblptru	equ	0xFF8
   614                           tblptrh	equ	0xFF7
   615                           tblptrl	equ	0xFF6
   616                           tablat	equ	0xFF5
   617                           postinc0	equ	0xFEE
   618                           wreg	equ	0xFE8
   619                           postdec1	equ	0xFE5
   620                           fsr1l	equ	0xFE1
   621                           
   622                           	psect	cstackBANK1
   623  000189                     __pcstackBANK1:
   624                           	opt stack 0
   625  000189                     atan@y:
   626                           	opt stack 0
   627  000189                     sin@y:
   628                           	opt stack 0
   629                           
   630                           ; 4 bytes @ 0x0
   631  000189                     	ds	4
   632  00018D                     atan@x:
   633                           	opt stack 0
   634  00018D                     _sin$3752:
   635                           	opt stack 0
   636                           
   637                           ; 4 bytes @ 0x4
   638  00018D                     	ds	4
   639  000191                     atan@recip:
   640                           	opt stack 0
   641  000191                     sin@x2:
   642                           	opt stack 0
   643                           
   644                           ; 4 bytes @ 0x8
   645  000191                     	ds	1
   646  000192                     atan@val_squared:
   647                           	opt stack 0
   648                           
   649                           ; 4 bytes @ 0x9
   650  000192                     	ds	3
   651  000195                     sin@sgn:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0xC
   655  000195                     	ds	1
   656  000196                     atan@val:
   657                           	opt stack 0
   658                           
   659                           ; 4 bytes @ 0xD
   660  000196                     	ds	4
   661  00019A                     ?_asin:
   662                           	opt stack 0
   663  00019A                     asin@x:
   664                           	opt stack 0
   665                           
   666                           ; 4 bytes @ 0x11
   667  00019A                     	ds	4
   668  00019E                     asin@sgn:
   669                           	opt stack 0
   670                           
   671                           ; 4 bytes @ 0x15
   672  00019E                     	ds	4
   673  0001A2                     _asin$3750:
   674                           	opt stack 0
   675                           
   676                           ; 4 bytes @ 0x19
   677  0001A2                     	ds	4
   678  0001A6                     _asin$3749:
   679                           	opt stack 0
   680                           
   681                           ; 4 bytes @ 0x1D
   682  0001A6                     	ds	4
   683  0001AA                     asin@y:
   684                           	opt stack 0
   685                           
   686                           ; 4 bytes @ 0x21
   687  0001AA                     	ds	4
   688  0001AE                     _asin$3748:
   689                           	opt stack 0
   690                           
   691                           ; 4 bytes @ 0x25
   692  0001AE                     	ds	4
   693  0001B2                     ??_park_search:
   694  0001B2                     ?_cos:
   695                           	opt stack 0
   696  0001B2                     cos@f:
   697                           	opt stack 0
   698                           
   699                           ; 4 bytes @ 0x29
   700  0001B2                     	ds	4
   701  0001B6                     _cos$3751:
   702                           	opt stack 0
   703                           
   704                           ; 4 bytes @ 0x2D
   705  0001B6                     	ds	4
   706  0001BA                     _matematica$3739:
   707                           	opt stack 0
   708                           
   709                           ; 4 bytes @ 0x31
   710  0001BA                     	ds	4
   711  0001BE                     _matematica$3740:
   712                           	opt stack 0
   713                           
   714                           ; 4 bytes @ 0x35
   715  0001BE                     	ds	4
   716  0001C2                     _matematica$3741:
   717                           	opt stack 0
   718                           
   719                           ; 4 bytes @ 0x39
   720  0001C2                     	ds	4
   721  0001C6                     _matematica$3742:
   722                           	opt stack 0
   723                           
   724                           ; 4 bytes @ 0x3D
   725  0001C6                     	ds	4
   726  0001CA                     _matematica$3743:
   727                           	opt stack 0
   728                           
   729                           ; 4 bytes @ 0x41
   730  0001CA                     	ds	4
   731  0001CE                     _matematica$3744:
   732                           	opt stack 0
   733                           
   734                           ; 4 bytes @ 0x45
   735  0001CE                     	ds	4
   736  0001D2                     _matematica$3745:
   737                           	opt stack 0
   738                           
   739                           ; 4 bytes @ 0x49
   740  0001D2                     	ds	4
   741  0001D6                     _matematica$3746:
   742                           	opt stack 0
   743                           
   744                           ; 4 bytes @ 0x4D
   745  0001D6                     	ds	4
   746  0001DA                     _matematica$3747:
   747                           	opt stack 0
   748                           
   749                           ; 4 bytes @ 0x51
   750  0001DA                     	ds	4
   751  0001DE                     ??_park_routine:
   752                           
   753                           ; 0 bytes @ 0x55
   754  0001DE                     	ds	4
   755  0001E2                     _park_routine$3738:
   756                           	opt stack 0
   757                           
   758                           ; 4 bytes @ 0x59
   759  0001E2                     	ds	4
   760                           tblptru	equ	0xFF8
   761                           tblptrh	equ	0xFF7
   762                           tblptrl	equ	0xFF6
   763                           tablat	equ	0xFF5
   764                           postinc0	equ	0xFEE
   765                           wreg	equ	0xFE8
   766                           postdec1	equ	0xFE5
   767                           fsr1l	equ	0xFE1
   768                           
   769                           	psect	cstackBANK0
   770  000060                     __pcstackBANK0:
   771                           	opt stack 0
   772  000060                     ?___lwdiv:
   773                           	opt stack 0
   774  000060                     ___lwdiv@dividend:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x0
   778  000060                     	ds	2
   779  000062                     ___lwdiv@divisor:
   780                           	opt stack 0
   781                           
   782                           ; 2 bytes @ 0x2
   783  000062                     	ds	2
   784  000064                     ___lwdiv@counter:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0x4
   788  000064                     	ds	1
   789  000065                     ___lwdiv@quotient:
   790                           	opt stack 0
   791                           
   792                           ; 2 bytes @ 0x5
   793  000065                     	ds	2
   794  000067                     ??_ISR_Alta:
   795                           
   796                           ; 0 bytes @ 0x7
   797  000067                     	ds	16
   798  000077                     ??_can_interpreter:
   799  000077                     ?___wmul:
   800                           	opt stack 0
   801  000077                     ?___fldiv:
   802                           	opt stack 0
   803  000077                     ?___fltol:
   804                           	opt stack 0
   805  000077                     CANOperationMode@mode:
   806                           	opt stack 0
   807  000077                     _CANisTxReady$2845:
   808                           	opt stack 0
   809  000077                     ___wmul@multiplier:
   810                           	opt stack 0
   811  000077                     CANsendMessage@identifier:
   812                           	opt stack 0
   813  000077                     CANSetMask@mask:
   814                           	opt stack 0
   815  000077                     CANSetFilter@filter:
   816                           	opt stack 0
   817  000077                     ___fltol@f1:
   818                           	opt stack 0
   819  000077                     ___fldiv@b:
   820                           	opt stack 0
   821  000077                     frexp@value:
   822                           	opt stack 0
   823                           
   824                           ; 4 bytes @ 0x17
   825  000077                     	ds	2
   826  000079                     ___wmul@multiplicand:
   827                           	opt stack 0
   828                           
   829                           ; 2 bytes @ 0x19
   830  000079                     	ds	2
   831  00007B                     ??___fltol:
   832  00007B                     CANSetMask@type:
   833                           	opt stack 0
   834  00007B                     CANSetFilter@type:
   835                           	opt stack 0
   836  00007B                     CANsendMessage@data:
   837                           	opt stack 0
   838  00007B                     ___wmul@product:
   839                           	opt stack 0
   840  00007B                     frexp@eptr:
   841                           	opt stack 0
   842  00007B                     ___fldiv@a:
   843                           	opt stack 0
   844                           
   845                           ; 4 bytes @ 0x1B
   846  00007B                     	ds	1
   847  00007C                     ??_CANSetMask:
   848  00007C                     ??_CANSetFilter:
   849                           
   850                           ; 0 bytes @ 0x1C
   851  00007C                     	ds	1
   852  00007D                     ??_frexp:
   853  00007D                     CANsendMessage@dataLength:
   854                           	opt stack 0
   855  00007D                     delay_ms@value_ms:
   856                           	opt stack 0
   857                           
   858                           ; 2 bytes @ 0x1D
   859  00007D                     	ds	1
   860  00007E                     CANsendMessage@flags:
   861                           	opt stack 0
   862                           
   863                           ; 1 bytes @ 0x1E
   864  00007E                     	ds	1
   865  00007F                     ??___fldiv:
   866  00007F                     ??_CANsendMessage:
   867  00007F                     delay_s@value_s:
   868                           	opt stack 0
   869  00007F                     ___fltol@sign1:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0x1F
   873  00007F                     	ds	1
   874  000080                     CANSetMask@numBuffer:
   875                           	opt stack 0
   876  000080                     CANSetFilter@numBuffer:
   877                           	opt stack 0
   878  000080                     delay_s@repeat_loop:
   879                           	opt stack 0
   880  000080                     ___fltol@exp1:
   881                           	opt stack 0
   882                           
   883                           ; 1 bytes @ 0x20
   884  000080                     	ds	1
   885  000081                     ?_abs:
   886                           	opt stack 0
   887  000081                     abs@a:
   888                           	opt stack 0
   889  000081                     CANSetMask@tamp:
   890                           	opt stack 0
   891  000081                     CANSetFilter@tamp:
   892                           	opt stack 0
   893                           
   894                           ; 4 bytes @ 0x21
   895  000081                     	ds	2
   896  000083                     ??_abs:
   897  000083                     ___fldiv@sign:
   898                           	opt stack 0
   899  000083                     CANsendMessage@tamp:
   900                           	opt stack 0
   901                           
   902                           ; 4 bytes @ 0x23
   903  000083                     	ds	1
   904  000084                     ___fldiv@rem:
   905                           	opt stack 0
   906                           
   907                           ; 4 bytes @ 0x24
   908  000084                     	ds	1
   909  000085                     ?___xxtofl:
   910                           	opt stack 0
   911  000085                     CANInitialize@phaseSeg1:
   912                           	opt stack 0
   913  000085                     ___xxtofl@val:
   914                           	opt stack 0
   915                           
   916                           ; 4 bytes @ 0x25
   917  000085                     	ds	1
   918  000086                     CANInitialize@phaseSeg2:
   919                           	opt stack 0
   920                           
   921                           ; 1 bytes @ 0x26
   922  000086                     	ds	1
   923  000087                     can_send@data_correction1:
   924                           	opt stack 0
   925  000087                     CANInitialize@SJW:
   926                           	opt stack 0
   927                           
   928                           ; 1 bytes @ 0x27
   929  000087                     	ds	1
   930  000088                     CANInitialize@BRP:
   931                           	opt stack 0
   932  000088                     ___fldiv@new_exp:
   933                           	opt stack 0
   934                           
   935                           ; 2 bytes @ 0x28
   936  000088                     	ds	1
   937  000089                     ??___xxtofl:
   938  000089                     CANInitialize@flags:
   939                           	opt stack 0
   940                           
   941                           ; 1 bytes @ 0x29
   942  000089                     	ds	1
   943  00008A                     ??_CANInitialize:
   944  00008A                     ___fldiv@grs:
   945                           	opt stack 0
   946                           
   947                           ; 4 bytes @ 0x2A
   948  00008A                     	ds	3
   949  00008D                     ___xxtofl@sign:
   950                           	opt stack 0
   951                           
   952                           ; 1 bytes @ 0x2D
   953  00008D                     	ds	1
   954  00008E                     CANInitialize@propSeg:
   955                           	opt stack 0
   956  00008E                     ___fldiv@bexp:
   957                           	opt stack 0
   958  00008E                     ___xxtofl@exp:
   959                           	opt stack 0
   960                           
   961                           ; 1 bytes @ 0x2E
   962  00008E                     	ds	1
   963  00008F                     CANInitialize@FilterConfig1:
   964                           	opt stack 0
   965  00008F                     ___fldiv@aexp:
   966                           	opt stack 0
   967  00008F                     ___xxtofl@arg:
   968                           	opt stack 0
   969                           
   970                           ; 4 bytes @ 0x2F
   971  00008F                     	ds	1
   972  000090                     ?___flmul:
   973                           	opt stack 0
   974  000090                     CANInitialize@FilterConfig2:
   975                           	opt stack 0
   976  000090                     ___flmul@b:
   977                           	opt stack 0
   978                           
   979                           ; 4 bytes @ 0x30
   980  000090                     	ds	1
   981  000091                     
   982                           ; 0 bytes @ 0x31
   983  000091                     	ds	3
   984  000094                     ___flmul@a:
   985                           	opt stack 0
   986                           
   987                           ; 4 bytes @ 0x34
   988  000094                     	ds	4
   989  000098                     ??___flmul:
   990                           
   991                           ; 0 bytes @ 0x38
   992  000098                     	ds	4
   993  00009C                     ___flmul@sign:
   994                           	opt stack 0
   995                           
   996                           ; 1 bytes @ 0x3C
   997  00009C                     	ds	1
   998  00009D                     ___flmul@aexp:
   999                           	opt stack 0
  1000                           
  1001                           ; 1 bytes @ 0x3D
  1002  00009D                     	ds	1
  1003  00009E                     ___flmul@grs:
  1004                           	opt stack 0
  1005                           
  1006                           ; 4 bytes @ 0x3E
  1007  00009E                     	ds	4
  1008  0000A2                     ___flmul@bexp:
  1009                           	opt stack 0
  1010                           
  1011                           ; 1 bytes @ 0x42
  1012  0000A2                     	ds	1
  1013  0000A3                     ___flmul@prod:
  1014                           	opt stack 0
  1015                           
  1016                           ; 4 bytes @ 0x43
  1017  0000A3                     	ds	4
  1018  0000A7                     ___flmul@temp:
  1019                           	opt stack 0
  1020                           
  1021                           ; 2 bytes @ 0x47
  1022  0000A7                     	ds	2
  1023  0000A9                     ?___flneg:
  1024                           	opt stack 0
  1025  0000A9                     ___flneg@f1:
  1026                           	opt stack 0
  1027                           
  1028                           ; 4 bytes @ 0x49
  1029  0000A9                     	ds	4
  1030  0000AD                     ?___fladd:
  1031                           	opt stack 0
  1032  0000AD                     ?_fabs:
  1033                           	opt stack 0
  1034  0000AD                     fabs@d:
  1035                           	opt stack 0
  1036  0000AD                     ___fladd@b:
  1037                           	opt stack 0
  1038                           
  1039                           ; 4 bytes @ 0x4D
  1040  0000AD                     	ds	4
  1041  0000B1                     ___flge@ff1:
  1042                           	opt stack 0
  1043  0000B1                     ___fladd@a:
  1044                           	opt stack 0
  1045                           
  1046                           ; 4 bytes @ 0x51
  1047  0000B1                     	ds	4
  1048  0000B5                     ??___fladd:
  1049  0000B5                     ___flge@ff2:
  1050                           	opt stack 0
  1051                           
  1052                           ; 4 bytes @ 0x55
  1053  0000B5                     	ds	4
  1054  0000B9                     ??___flge:
  1055                           
  1056                           ; 0 bytes @ 0x59
  1057  0000B9                     	ds	4
  1058  0000BD                     ___fladd@signs:
  1059                           	opt stack 0
  1060                           
  1061                           ; 1 bytes @ 0x5D
  1062  0000BD                     	ds	1
  1063  0000BE                     ___fladd@aexp:
  1064                           	opt stack 0
  1065                           
  1066                           ; 1 bytes @ 0x5E
  1067  0000BE                     	ds	1
  1068  0000BF                     ___fladd@bexp:
  1069                           	opt stack 0
  1070                           
  1071                           ; 1 bytes @ 0x5F
  1072  0000BF                     	ds	1
  1073  0000C0                     ___fladd@grs:
  1074                           	opt stack 0
  1075                           
  1076                           ; 1 bytes @ 0x60
  1077  0000C0                     	ds	1
  1078  0000C1                     ?_sqrt:
  1079                           	opt stack 0
  1080  0000C1                     ?_eval_poly:
  1081                           	opt stack 0
  1082  0000C1                     ?_floor:
  1083                           	opt stack 0
  1084  0000C1                     eval_poly@x:
  1085                           	opt stack 0
  1086  0000C1                     sqrt@a:
  1087                           	opt stack 0
  1088  0000C1                     floor@x:
  1089                           	opt stack 0
  1090                           
  1091                           ; 4 bytes @ 0x61
  1092  0000C1                     	ds	4
  1093  0000C5                     ??_sqrt:
  1094  0000C5                     eval_poly@d:
  1095                           	opt stack 0
  1096  0000C5                     floor@i:
  1097                           	opt stack 0
  1098                           
  1099                           ; 4 bytes @ 0x65
  1100  0000C5                     	ds	2
  1101  0000C7                     eval_poly@n:
  1102                           	opt stack 0
  1103                           
  1104                           ; 2 bytes @ 0x67
  1105  0000C7                     	ds	2
  1106  0000C9                     ??_eval_poly:
  1107  0000C9                     sqrt@sign:
  1108                           	opt stack 0
  1109  0000C9                     floor@expon:
  1110                           	opt stack 0
  1111                           
  1112                           ; 2 bytes @ 0x69
  1113  0000C9                     	ds	1
  1114  0000CA                     sqrt@i:
  1115                           	opt stack 0
  1116                           
  1117                           ; 1 bytes @ 0x6A
  1118  0000CA                     	ds	1
  1119  0000CB                     ?___flsub:
  1120                           	opt stack 0
  1121  0000CB                     ___flsub@b:
  1122                           	opt stack 0
  1123  0000CB                     sqrt@tfrac:
  1124                           	opt stack 0
  1125                           
  1126                           ; 4 bytes @ 0x6B
  1127  0000CB                     	ds	2
  1128  0000CD                     eval_poly@res:
  1129                           	opt stack 0
  1130                           
  1131                           ; 4 bytes @ 0x6D
  1132  0000CD                     	ds	2
  1133  0000CF                     sqrt@p:
  1134                           	opt stack 0
  1135  0000CF                     ___flsub@a:
  1136                           	opt stack 0
  1137                           
  1138                           ; 4 bytes @ 0x6F
  1139  0000CF                     	ds	1
  1140  0000D0                     sqrt@grs:
  1141                           	opt stack 0
  1142                           
  1143                           ; 4 bytes @ 0x70
  1144  0000D0                     	ds	1
  1145  0000D1                     ?_atan:
  1146                           	opt stack 0
  1147  0000D1                     atan@f:
  1148                           	opt stack 0
  1149                           
  1150                           ; 4 bytes @ 0x71
  1151  0000D1                     	ds	2
  1152  0000D3                     ?_sin:
  1153                           	opt stack 0
  1154  0000D3                     sin@f:
  1155                           	opt stack 0
  1156                           
  1157                           ; 4 bytes @ 0x73
  1158  0000D3                     	ds	1
  1159  0000D4                     sqrt@exp:
  1160                           	opt stack 0
  1161                           
  1162                           ; 2 bytes @ 0x74
  1163  0000D4                     	ds	1
  1164  0000D5                     
  1165                           ; 0 bytes @ 0x75
  1166  0000D5                     	ds	1
  1167  0000D6                     sqrt@root:
  1168                           	opt stack 0
  1169                           
  1170                           ; 4 bytes @ 0x76
  1171  0000D6                     	ds	1
  1172  0000D7                     
  1173                           ; 0 bytes @ 0x77
  1174  0000D7                     	ds	3
  1175  0000DA                     sqrt@frac:
  1176                           	opt stack 0
  1177                           
  1178                           ; 4 bytes @ 0x7A
  1179  0000DA                     	ds	4
  1180  0000DE                     ??_parallelo:
  1181  0000DE                     
  1182                           ; 0 bytes @ 0x7E
  1183  0000DE                     	ds	2
  1184  0000E0                     tblptru	equ	0xFF8
  1185                           tblptrh	equ	0xFF7
  1186                           tblptrl	equ	0xFF6
  1187                           tablat	equ	0xFF5
  1188                           postinc0	equ	0xFEE
  1189                           wreg	equ	0xFE8
  1190                           postdec1	equ	0xFE5
  1191                           fsr1l	equ	0xFE1
  1192                           
  1193                           ; 0 bytes @ 0x80
  1194                           
  1195                           	psect	cstackCOMRAM
  1196  000001                     __pcstackCOMRAM:
  1197                           	opt stack 0
  1198  000001                     CANreceiveMessage@msg:
  1199                           	opt stack 0
  1200                           
  1201                           ; 2 bytes @ 0x0
  1202  000001                     	ds	2
  1203  000003                     ??_CANreceiveMessage:
  1204                           
  1205                           ; 0 bytes @ 0x2
  1206  000003                     	ds	8
  1207  00000B                     CANreceiveMessage@error:
  1208                           	opt stack 0
  1209                           
  1210                           ; 1 bytes @ 0xA
  1211  00000B                     	ds	1
  1212  00000C                     CANreceiveMessage@tamp:
  1213                           	opt stack 0
  1214                           
  1215                           ; 1 bytes @ 0xB
  1216  00000C                     	ds	1
  1217  00000D                     ??_ISR_Bassa:
  1218                           
  1219                           ; 0 bytes @ 0xC
  1220  00000D                     	ds	21
  1221  000022                     ISR_Bassa@gigi:
  1222                           	opt stack 0
  1223                           
  1224                           ; 1 bytes @ 0x21
  1225  000022                     	ds	1
  1226  000023                     ISR_Bassa@i:
  1227                           	opt stack 0
  1228                           
  1229                           ; 1 bytes @ 0x22
  1230  000023                     	ds	1
  1231                           tblptru	equ	0xFF8
  1232                           tblptrh	equ	0xFF7
  1233                           tblptrl	equ	0xFF6
  1234                           tablat	equ	0xFF5
  1235                           postinc0	equ	0xFEE
  1236                           wreg	equ	0xFE8
  1237                           postdec1	equ	0xFE5
  1238                           fsr1l	equ	0xFE1
  1239                           
  1240 ;;
  1241 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1242 ;;
  1243 ;; *************** function _main *****************
  1244 ;; Defined at:
  1245 ;;		line 187 in file "parcheggio.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;		None
  1250 ;; Return value:  Size  Location     Type
  1251 ;;		None               void
  1252 ;; Registers used:
  1253 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1263 ;;Total ram usage:        0 bytes
  1264 ;; Hardware stack levels required when called:   10
  1265 ;; This function calls:
  1266 ;;		_can_interpreter
  1267 ;;		_configurazione
  1268 ;;		_park_routine
  1269 ;;		_park_search
  1270 ;; This function is called by:
  1271 ;;		Startup code after reset
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           	psect	text0
  1276  005CB0                     __ptext0:
  1277                           	opt stack 0
  1278  005CB0                     _main:
  1279                           	opt stack 21
  1280                           
  1281                           ;parcheggio.c: 188: MUX_select[0] = 0b00000000;
  1282                           
  1283                           ; BSR set to: 15
  1284                           ;incstack = 0
  1285  005CB0  0E00               	movlw	0
  1286  005CB2  0101               	movlb	1	; () banked
  1287  005CB4  6F00               	movwf	_MUX_select& (0+255),b
  1288                           
  1289                           ;parcheggio.c: 189: MUX_select[1] = 0b00000001;
  1290  005CB6  0E01               	movlw	1
  1291  005CB8  0101               	movlb	1	; () banked
  1292  005CBA  6F01               	movwf	(_MUX_select+1)& (0+255),b
  1293                           
  1294                           ;parcheggio.c: 190: MUX_select[2] = 0b00000010;
  1295  005CBC  0E02               	movlw	2
  1296  005CBE  0101               	movlb	1	; () banked
  1297  005CC0  6F02               	movwf	(_MUX_select+2)& (0+255),b
  1298                           
  1299                           ;parcheggio.c: 191: MUX_select[3] = 0b00000011;
  1300  005CC2  0E03               	movlw	3
  1301  005CC4  0101               	movlb	1	; () banked
  1302  005CC6  6F03               	movwf	(_MUX_select+3)& (0+255),b
  1303                           
  1304                           ;parcheggio.c: 192: MUX_select[4] = 0b00000100;
  1305  005CC8  0E04               	movlw	4
  1306  005CCA  0101               	movlb	1	; () banked
  1307  005CCC  6F04               	movwf	(_MUX_select+4)& (0+255),b
  1308                           
  1309                           ;parcheggio.c: 193: MUX_select[5] = 0b00000101;
  1310  005CCE  0E05               	movlw	5
  1311  005CD0  0101               	movlb	1	; () banked
  1312  005CD2  6F05               	movwf	(_MUX_select+5)& (0+255),b
  1313                           
  1314                           ;parcheggio.c: 194: MUX_select[6] = 0b00000110;
  1315  005CD4  0E06               	movlw	6
  1316  005CD6  0101               	movlb	1	; () banked
  1317  005CD8  6F06               	movwf	(_MUX_select+6)& (0+255),b
  1318                           
  1319                           ;parcheggio.c: 195: MUX_select[7] = 0b00000111;
  1320  005CDA  0E07               	movlw	7
  1321  005CDC  0101               	movlb	1	; () banked
  1322  005CDE  6F07               	movwf	(_MUX_select+7)& (0+255),b
  1323                           
  1324                           ; BSR set to: 1
  1325                           ;parcheggio.c: 196: configurazione();
  1326  005CE0  ECC6  F02D         	call	_configurazione	;wreg free
  1327                           
  1328                           ;parcheggio.c: 197: PORTBbits.RB4 = 0;
  1329  005CE4  9881               	bcf	3969,4,c	;volatile
  1330                           
  1331                           ;parcheggio.c: 198: PORTBbits.RB5 = 0;
  1332  005CE6  9A81               	bcf	3969,5,c	;volatile
  1333                           
  1334                           ;parcheggio.c: 199: PORTBbits.RB6 = 0;
  1335  005CE8  9C81               	bcf	3969,6,c	;volatile
  1336                           
  1337                           ;parcheggio.c: 200: request_sent = 0;
  1338  005CEA  9047               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1339                           
  1340                           ;parcheggio.c: 201: start_operation = 0;
  1341  005CEC  9447               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1342  005CEE                     l7588:
  1343                           
  1344                           ;parcheggio.c: 217: park_search();
  1345  005CEE  EC81  F028         	call	_park_search	;wreg free
  1346                           
  1347                           ;parcheggio.c: 218: can_interpreter();
  1348  005CF2  EC2E  F02E         	call	_can_interpreter	;wreg free
  1349                           
  1350                           ;parcheggio.c: 219: park_routine();
  1351  005CF6  ECB6  F019         	call	_park_routine	;wreg free
  1352  005CFA  D7F9               	goto	l7588
  1353  005CFC                     __end_of_main:
  1354                           	opt stack 0
  1355                           tblptru	equ	0xFF8
  1356                           tblptrh	equ	0xFF7
  1357                           tblptrl	equ	0xFF6
  1358                           tablat	equ	0xFF5
  1359                           postinc0	equ	0xFEE
  1360                           wreg	equ	0xFE8
  1361                           postdec1	equ	0xFE5
  1362                           fsr1l	equ	0xFE1
  1363                           
  1364 ;; *************** function _park_search *****************
  1365 ;; Defined at:
  1366 ;;		line 223 in file "parcheggio.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;		None               void
  1373 ;; Registers used:
  1374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1382 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1383 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1384 ;;Total ram usage:        2 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    9
  1387 ;; This function calls:
  1388 ;;		_CANisTxReady
  1389 ;;		_CANsendMessage
  1390 ;;		___xxtofl
  1391 ;;		_abs
  1392 ;;		_parallelo
  1393 ;; This function is called by:
  1394 ;;		_main
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           	psect	text1
  1399  005102                     __ptext1:
  1400                           	opt stack 0
  1401  005102                     _park_search:
  1402                           	opt stack 21
  1403                           
  1404                           ;parcheggio.c: 224: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1405                           
  1406                           ;incstack = 0
  1407  005102  D0D0               	goto	l718
  1408  005104                     l7344:
  1409                           
  1410                           ;parcheggio.c: 225: parallelo();
  1411  005104  EC48  F024         	call	_parallelo	;wreg free
  1412                           
  1413                           ;parcheggio.c: 226: if (sensor_distance[0] > 50) {
  1414  005108  5025               	movf	_sensor_distance+1,w,c	;volatile
  1415  00510A  E104               	bnz	u9350
  1416  00510C  0E33               	movlw	51
  1417  00510E  5C24               	subwf	_sensor_distance,w,c	;volatile
  1418  005110  A0D8               	btfss	status,0,c
  1419  005112  D02A               	goto	l720
  1420  005114                     u9350:
  1421                           
  1422                           ;parcheggio.c: 227: if (request_sent == 0) {
  1423  005114  B047               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1424  005116  D057               	goto	l7364
  1425  005118                     l7352:
  1426  005118  EC41  F02F         	call	_CANisTxReady	;wreg free
  1427  00511C  0900               	iorlw	0
  1428  00511E  B4D8               	btfsc	status,2,c
  1429  005120  D7FB               	goto	l7352
  1430                           
  1431                           ;parcheggio.c: 229: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1432  005122  0E08               	movlw	8
  1433  005124  0100               	movlb	0	; () banked
  1434  005126  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1435  005128  0E00               	movlw	0
  1436  00512A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1437  00512C  0E00               	movlw	0
  1438  00512E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1439  005130  0E00               	movlw	0
  1440  005132  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1441  005134  0E59               	movlw	low _data
  1442  005136  0100               	movlb	0	; () banked
  1443  005138  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1444  00513A  0E01               	movlw	high _data
  1445  00513C  0100               	movlb	0	; () banked
  1446  00513E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1447  005140  0E08               	movlw	8
  1448  005142  0100               	movlb	0	; () banked
  1449  005144  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1450  005146  0EFC               	movlw	252
  1451  005148  0100               	movlb	0	; () banked
  1452  00514A  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1453  00514C  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1454                           
  1455                           ;parcheggio.c: 230: request_sent = 1;
  1456  005150  8047               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1457                           
  1458                           ;parcheggio.c: 231: alignment_gap = 0;
  1459  005152  0E00               	movlw	0
  1460  005154  0100               	movlb	0	; () banked
  1461  005156  6FE0               	movwf	_alignment_gap& (0+255),b
  1462  005158  0E00               	movlw	0
  1463  00515A  6FE1               	movwf	(_alignment_gap+1)& (0+255),b
  1464  00515C  0E00               	movlw	0
  1465  00515E  6FE2               	movwf	(_alignment_gap+2)& (0+255),b
  1466  005160  0E00               	movlw	0
  1467  005162  6FE3               	movwf	(_alignment_gap+3)& (0+255),b
  1468                           
  1469                           ; BSR set to: 0
  1470                           ;parcheggio.c: 232: LATBbits.LATB4 = 1;
  1471  005164  888A               	bsf	3978,4,c	;volatile
  1472                           
  1473                           ; BSR set to: 0
  1474                           ;parcheggio.c: 233: }
  1475                           ;parcheggio.c: 234: } else {
  1476  005166  D02F               	goto	l7364
  1477  005168                     l720:
  1478                           
  1479                           ;parcheggio.c: 235: LATBbits.LATB4 = 0;
  1480  005168  988A               	bcf	3978,4,c	;volatile
  1481                           
  1482                           ;parcheggio.c: 236: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1483  00516A  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1484  00516E  CFDE F1B2          	movff	postinc2,??_park_search
  1485  005172  CFDD F1B3          	movff	postdec2,??_park_search+1
  1486  005176  0101               	movlb	1	; () banked
  1487  005178  1FB2               	comf	??_park_search& (0+255),f,b
  1488  00517A  1FB3               	comf	(??_park_search+1)& (0+255),f,b
  1489  00517C  4BB2               	infsnz	??_park_search& (0+255),f,b
  1490  00517E  2BB3               	incf	(??_park_search+1)& (0+255),f,b
  1491  005180  5024               	movf	_sensor_distance,w,c	;volatile
  1492  005182  0101               	movlb	1	; () banked
  1493  005184  25B2               	addwf	??_park_search& (0+255),w,b
  1494  005186  0100               	movlb	0	; () banked
  1495  005188  6F81               	movwf	abs@a& (0+255),b
  1496  00518A  5025               	movf	_sensor_distance+1,w,c	;volatile
  1497  00518C  0101               	movlb	1	; () banked
  1498  00518E  21B3               	addwfc	(??_park_search+1)& (0+255),w,b
  1499  005190  0100               	movlb	0	; () banked
  1500  005192  6F82               	movwf	(abs@a+1)& (0+255),b
  1501  005194  EC15  F02F         	call	_abs	;wreg free
  1502  005198  0100               	movlb	0	; () banked
  1503  00519A  C081  F085         	movff	?_abs,___xxtofl@val
  1504  00519E  0100               	movlb	0	; () banked
  1505  0051A0  C082  F086         	movff	?_abs+1,___xxtofl@val+1
  1506  0051A4  0100               	movlb	0	; () banked
  1507  0051A6  0E00               	movlw	0
  1508  0051A8  BF86               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1509  0051AA  0EFF               	movlw	-1
  1510  0051AC  6F87               	movwf	(___xxtofl@val+2)& (0+255),b
  1511  0051AE  6F88               	movwf	(___xxtofl@val+3)& (0+255),b
  1512  0051B0  0E01               	movlw	1
  1513  0051B2  ECB7  F026         	call	___xxtofl
  1514  0051B6  C085  F0E0         	movff	?___xxtofl,_alignment_gap
  1515  0051BA  C086  F0E1         	movff	?___xxtofl+1,_alignment_gap+1
  1516  0051BE  C087  F0E2         	movff	?___xxtofl+2,_alignment_gap+2
  1517  0051C2  C088  F0E3         	movff	?___xxtofl+3,_alignment_gap+3
  1518  0051C6                     l7364:
  1519                           
  1520                           ;parcheggio.c: 237: }
  1521                           ;parcheggio.c: 238: if ((sensor_distance[0] < 50) && (request_sent == 1)) {
  1522  0051C6  5025               	movf	_sensor_distance+1,w,c	;volatile
  1523  0051C8  E122               	bnz	l7374
  1524  0051CA  0E32               	movlw	50
  1525  0051CC  5C24               	subwf	_sensor_distance,w,c	;volatile
  1526  0051CE  A0D8               	btfss	status,0,c
  1527  0051D0  A047               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1528  0051D2  D01D               	goto	l7374
  1529                           
  1530                           ;parcheggio.c: 239: request_sent = 0;
  1531  0051D4  9047               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1532  0051D6                     l7370:
  1533  0051D6  EC41  F02F         	call	_CANisTxReady	;wreg free
  1534  0051DA  0900               	iorlw	0
  1535  0051DC  B4D8               	btfsc	status,2,c
  1536  0051DE  D7FB               	goto	l7370
  1537                           
  1538                           ;parcheggio.c: 241: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1539  0051E0  0E07               	movlw	7
  1540  0051E2  0100               	movlb	0	; () banked
  1541  0051E4  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1542  0051E6  0E00               	movlw	0
  1543  0051E8  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1544  0051EA  0E00               	movlw	0
  1545  0051EC  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1546  0051EE  0E00               	movlw	0
  1547  0051F0  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1548  0051F2  0E59               	movlw	low _data
  1549  0051F4  0100               	movlb	0	; () banked
  1550  0051F6  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1551  0051F8  0E01               	movlw	high _data
  1552  0051FA  0100               	movlb	0	; () banked
  1553  0051FC  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1554  0051FE  0E08               	movlw	8
  1555  005200  0100               	movlb	0	; () banked
  1556  005202  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1557  005204  0EFC               	movlw	252
  1558  005206  0100               	movlb	0	; () banked
  1559  005208  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1560  00520A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1561  00520E                     l7374:
  1562                           
  1563                           ;parcheggio.c: 242: }
  1564                           ;parcheggio.c: 243: if (distance_received == 1) {
  1565  00520E  A846               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1566  005210  D049               	goto	l718
  1567                           
  1568                           ;parcheggio.c: 244: if (distance_average > 55) {
  1569  005212  5035               	movf	_distance_average+1,w,c	;volatile
  1570  005214  E104               	bnz	u9420
  1571  005216  0E38               	movlw	56
  1572  005218  5C34               	subwf	_distance_average,w,c	;volatile
  1573  00521A  A0D8               	btfss	status,0,c
  1574  00521C  D041               	goto	l731
  1575  00521E                     u9420:
  1576                           
  1577                           ;parcheggio.c: 245: PORTBbits.RB5 = 1;
  1578  00521E  8A81               	bsf	3969,5,c	;volatile
  1579                           
  1580                           ;parcheggio.c: 246: data[0] = 1;
  1581  005220  0E01               	movlw	1
  1582  005222  0101               	movlb	1	; () banked
  1583  005224  6F59               	movwf	_data& (0+255),b
  1584                           
  1585                           ; BSR set to: 1
  1586                           ;parcheggio.c: 247: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1587  005226  0E0B               	movlw	11
  1588  005228  0100               	movlb	0	; () banked
  1589  00522A  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1590  00522C  0E00               	movlw	0
  1591  00522E  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1592  005230  0E00               	movlw	0
  1593  005232  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1594  005234  0E00               	movlw	0
  1595  005236  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1596  005238  0E59               	movlw	low _data
  1597  00523A  0100               	movlb	0	; () banked
  1598  00523C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1599  00523E  0E01               	movlw	high _data
  1600  005240  0100               	movlb	0	; () banked
  1601  005242  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1602  005244  0E01               	movlw	1
  1603  005246  0100               	movlb	0	; () banked
  1604  005248  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1605  00524A  0EBC               	movlw	188
  1606  00524C  0100               	movlb	0	; () banked
  1607  00524E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1608  005250  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1609                           
  1610                           ;parcheggio.c: 248: if ((request_sent1 == 0)&&(sensor_distance[0] < 40)) {
  1611  005254  B247               	btfsc	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1612  005256  D026               	goto	l718
  1613  005258  5025               	movf	_sensor_distance+1,w,c	;volatile
  1614  00525A  E124               	bnz	l718
  1615  00525C  0E28               	movlw	40
  1616  00525E  5C24               	subwf	_sensor_distance,w,c	;volatile
  1617  005260  B0D8               	btfsc	status,0,c
  1618  005262  D020               	goto	l718
  1619                           
  1620                           ;parcheggio.c: 249: data_test[0] = 130;
  1621  005264  0E82               	movlw	130
  1622  005266  0101               	movlb	1	; () banked
  1623  005268  6F81               	movwf	_data_test& (0+255),b
  1624                           
  1625                           ; BSR set to: 1
  1626                           ;parcheggio.c: 250: asd = 1;
  1627  00526A  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  1628                           
  1629                           ; BSR set to: 1
  1630                           ;parcheggio.c: 251: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1631  00526C  0E0D               	movlw	13
  1632  00526E  0100               	movlb	0	; () banked
  1633  005270  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1634  005272  0E00               	movlw	0
  1635  005274  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1636  005276  0E00               	movlw	0
  1637  005278  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1638  00527A  0E00               	movlw	0
  1639  00527C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1640  00527E  0E81               	movlw	low _data_test
  1641  005280  0100               	movlb	0	; () banked
  1642  005282  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1643  005284  0E01               	movlw	high _data_test
  1644  005286  0100               	movlb	0	; () banked
  1645  005288  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1646  00528A  0E08               	movlw	8
  1647  00528C  0100               	movlb	0	; () banked
  1648  00528E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1649  005290  0EBC               	movlw	188
  1650  005292  0100               	movlb	0	; () banked
  1651  005294  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1652  005296  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1653                           
  1654                           ;parcheggio.c: 253: distance_received1 = 0;
  1655  00529A  9A46               	bcf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  1656                           
  1657                           ;parcheggio.c: 254: request_sent1 = 1;
  1658  00529C  8247               	bsf	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1659                           
  1660                           ;parcheggio.c: 255: }
  1661                           ;parcheggio.c: 256: } else {
  1662  00529E  D002               	goto	l718
  1663  0052A0                     l731:
  1664                           
  1665                           ;parcheggio.c: 257: distance_received = 0;
  1666  0052A0  9846               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1667                           
  1668                           ;parcheggio.c: 258: PORTBbits.RB5 = 0;
  1669  0052A2  9A81               	bcf	3969,5,c	;volatile
  1670  0052A4                     l718:
  1671  0052A4  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1672  0052A6  0012               	return	
  1673  0052A8  BA81               	btfsc	3969,5,c	;volatile
  1674  0052AA  0012               	return	
  1675  0052AC  D72B               	goto	l7344
  1676  0052AE                     __end_of_park_search:
  1677                           	opt stack 0
  1678                           tblptru	equ	0xFF8
  1679                           tblptrh	equ	0xFF7
  1680                           tblptrl	equ	0xFF6
  1681                           tablat	equ	0xFF5
  1682                           postinc0	equ	0xFEE
  1683                           wreg	equ	0xFE8
  1684                           postdec1	equ	0xFE5
  1685                           fsr1l	equ	0xFE1
  1686                           postinc2	equ	0xFDE
  1687                           postdec2	equ	0xFDD
  1688                           status	equ	0xFD8
  1689                           
  1690 ;; *************** function _park_routine *****************
  1691 ;; Defined at:
  1692 ;;		line 264 in file "parcheggio.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;		None
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;		None
  1697 ;; Return value:  Size  Location     Type
  1698 ;;		None               void
  1699 ;; Registers used:
  1700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1707 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1708 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1709 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1710 ;;Total ram usage:        8 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    9
  1713 ;; This function calls:
  1714 ;;		_CANsendMessage
  1715 ;;		___fladd
  1716 ;;		___flneg
  1717 ;;		___fltol
  1718 ;;		___xxtofl
  1719 ;;		_abs
  1720 ;;		_can_send
  1721 ;;		_delay_ms
  1722 ;;		_delay_s
  1723 ;;		_matematica
  1724 ;;		_parallelo
  1725 ;; This function is called by:
  1726 ;;		_main
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text2
  1731  00336C                     __ptext2:
  1732                           	opt stack 0
  1733  00336C                     _park_routine:
  1734                           	opt stack 21
  1735                           
  1736                           ;parcheggio.c: 265: while ((asd == 1)&&(PORTBbits.RB5 == 1) && (activation == 1)&&(start
      +                          _operation == 1)) {
  1737                           
  1738                           ;incstack = 0
  1739  00336C  D01E               	goto	l7420
  1740  00336E                     l7402:
  1741                           
  1742                           ;parcheggio.c: 266: data_brake [0] = 3;
  1743  00336E  0E03               	movlw	3
  1744  003370  0101               	movlb	1	; () banked
  1745  003372  6F61               	movwf	_data_brake& (0+255),b
  1746                           
  1747                           ;parcheggio.c: 267: data_brake [1] = 1;
  1748  003374  0E01               	movlw	1
  1749  003376  0101               	movlb	1	; () banked
  1750  003378  6F62               	movwf	(_data_brake+1)& (0+255),b
  1751                           
  1752                           ; BSR set to: 1
  1753                           ;parcheggio.c: 268: parallelo();
  1754  00337A  EC48  F024         	call	_parallelo	;wreg free
  1755                           
  1756                           ;parcheggio.c: 269: if (data_correction[1] == 1)
  1757  00337E  0101               	movlb	1	; () banked
  1758  003380  056A               	decf	(_data_correction+1)& (0+255),w,b
  1759                           
  1760                           ; BSR set to: 1
  1761                           ;parcheggio.c: 271: else {
  1762                           ;parcheggio.c: 272: data_steering[0] = (90 + data_correction[0]);
  1763                           
  1764                           ; BSR set to: 1
  1765                           
  1766                           ; BSR set to: 1
  1767                           ;parcheggio.c: 270: data_steering[0] = (90 + data_correction[0]);
  1768  003382  0101               	movlb	1	; () banked
  1769  003384  5169               	movf	_data_correction& (0+255),w,b
  1770  003386  0F5A               	addlw	90
  1771  003388  0101               	movlb	1	; () banked
  1772  00338A  6F79               	movwf	_data_steering& (0+255),b
  1773                           
  1774                           ; BSR set to: 1
  1775                           ;parcheggio.c: 273: }
  1776                           ;parcheggio.c: 274: set_speed = 1000;
  1777                           
  1778                           ; BSR set to: 1
  1779  00338C  0E03               	movlw	3
  1780  00338E  0100               	movlb	0	; () banked
  1781  003390  6FE7               	movwf	(_set_speed+1)& (0+255),b
  1782  003392  0EE8               	movlw	232
  1783  003394  6FE6               	movwf	_set_speed& (0+255),b
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;parcheggio.c: 275: dir = 1;
  1787  003396  8446               	bsf	_dir/(0+8),_dir& (0+7),c
  1788                           
  1789                           ; BSR set to: 0
  1790                           ;parcheggio.c: 276: can_send();
  1791  003398  EC1F  F02A         	call	_can_send	;wreg free
  1792                           
  1793                           ;parcheggio.c: 277: delay_ms(50);
  1794  00339C  0E00               	movlw	0
  1795  00339E  0100               	movlb	0	; () banked
  1796  0033A0  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1797  0033A2  0E32               	movlw	50
  1798  0033A4  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1799  0033A6  ECC1  F02E         	call	_delay_ms	;wreg free
  1800  0033AA                     l7420:
  1801  0033AA  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  1802  0033AC  AA81               	btfss	3969,5,c	;volatile
  1803  0033AE  D1C0               	goto	l7528
  1804  0033B0  B046               	btfsc	_activation/(0+8),_activation& (0+7),c	;volatile
  1805  0033B2  A447               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1806  0033B4  D1BD               	goto	l7528
  1807  0033B6  D7DB               	goto	l7402
  1808  0033B8                     l7428:
  1809                           
  1810                           ;parcheggio.c: 282: bordo = (sensor_distance[0]+sensor_distance[1])/2;
  1811  0033B8  5024               	movf	_sensor_distance,w,c	;volatile
  1812  0033BA  2426               	addwf	_sensor_distance+2,w,c	;volatile
  1813  0033BC  0101               	movlb	1	; () banked
  1814  0033BE  6FDE               	movwf	??_park_routine& (0+255),b
  1815  0033C0  5025               	movf	_sensor_distance+1,w,c	;volatile
  1816  0033C2  2027               	addwfc	_sensor_distance+3,w,c	;volatile
  1817  0033C4  0101               	movlb	1	; () banked
  1818  0033C6  6FDF               	movwf	(??_park_routine+1)& (0+255),b
  1819  0033C8  90D8               	bcf	status,0,c
  1820  0033CA  0101               	movlb	1	; () banked
  1821  0033CC  31DF               	rrcf	(??_park_routine+1)& (0+255),w,b
  1822  0033CE  0101               	movlb	1	; () banked
  1823  0033D0  6FE1               	movwf	(??_park_routine+3)& (0+255),b
  1824  0033D2  0101               	movlb	1	; () banked
  1825  0033D4  31DE               	rrcf	??_park_routine& (0+255),w,b
  1826  0033D6  0101               	movlb	1	; () banked
  1827  0033D8  6FE0               	movwf	(??_park_routine+2)& (0+255),b
  1828  0033DA  C1E0  F085         	movff	??_park_routine+2,___xxtofl@val
  1829  0033DE  C1E1  F086         	movff	??_park_routine+3,___xxtofl@val+1
  1830  0033E2  0100               	movlb	0	; () banked
  1831  0033E4  6B87               	clrf	(___xxtofl@val+2)& (0+255),b
  1832  0033E6  6B88               	clrf	(___xxtofl@val+3)& (0+255),b
  1833  0033E8  0E00               	movlw	0
  1834  0033EA  ECB7  F026         	call	___xxtofl
  1835  0033EE  C085  F124         	movff	?___xxtofl,_bordo	;volatile
  1836  0033F2  C086  F125         	movff	?___xxtofl+1,_bordo+1	;volatile
  1837  0033F6  C087  F126         	movff	?___xxtofl+2,_bordo+2	;volatile
  1838  0033FA  C088  F127         	movff	?___xxtofl+3,_bordo+3	;volatile
  1839                           
  1840                           ;parcheggio.c: 283: matematica();
  1841  0033FE  ECF2  F00F         	call	_matematica	;wreg free
  1842                           
  1843                           ;parcheggio.c: 284: set_speed = 0;
  1844  003402  0E00               	movlw	0
  1845  003404  0100               	movlb	0	; () banked
  1846  003406  6FE7               	movwf	(_set_speed+1)& (0+255),b
  1847  003408  0E00               	movlw	0
  1848  00340A  6FE6               	movwf	_set_speed& (0+255),b
  1849                           
  1850                           ; BSR set to: 0
  1851                           ;parcheggio.c: 285: data_steering[0] = 90;
  1852  00340C  0E5A               	movlw	90
  1853  00340E  0101               	movlb	1	; () banked
  1854  003410  6F79               	movwf	_data_steering& (0+255),b
  1855                           
  1856                           ; BSR set to: 1
  1857                           ;parcheggio.c: 286: data_brake [0] = 0;
  1858  003412  0E00               	movlw	0
  1859  003414  0101               	movlb	1	; () banked
  1860  003416  6F61               	movwf	_data_brake& (0+255),b
  1861                           
  1862                           ; BSR set to: 1
  1863                           ;parcheggio.c: 287: data_brake [1] = 1;
  1864  003418  0E01               	movlw	1
  1865  00341A  0101               	movlb	1	; () banked
  1866  00341C  6F62               	movwf	(_data_brake+1)& (0+255),b
  1867                           
  1868                           ; BSR set to: 1
  1869                           ;parcheggio.c: 288: can_send();
  1870  00341E  EC1F  F02A         	call	_can_send	;wreg free
  1871                           
  1872                           ;parcheggio.c: 289: delay_s(1);
  1873  003422  0E01               	movlw	1
  1874  003424  EC2B  F02F         	call	_delay_s
  1875                           
  1876                           ;parcheggio.c: 291: data_brake [0] = 3;
  1877  003428  0E03               	movlw	3
  1878  00342A  0101               	movlb	1	; () banked
  1879  00342C  6F61               	movwf	_data_brake& (0+255),b
  1880                           
  1881                           ; BSR set to: 1
  1882                           ;parcheggio.c: 292: data_brake [1] = 1;
  1883  00342E  0E01               	movlw	1
  1884  003430  0101               	movlb	1	; () banked
  1885  003432  6F62               	movwf	(_data_brake+1)& (0+255),b
  1886                           
  1887                           ; BSR set to: 1
  1888                           ;parcheggio.c: 294: set_speed = 1000;
  1889  003434  0E03               	movlw	3
  1890  003436  0100               	movlb	0	; () banked
  1891  003438  6FE7               	movwf	(_set_speed+1)& (0+255),b
  1892  00343A  0EE8               	movlw	232
  1893  00343C  6FE6               	movwf	_set_speed& (0+255),b
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;parcheggio.c: 295: dir = 0;
  1897  00343E  9446               	bcf	_dir/(0+8),_dir& (0+7),c
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;parcheggio.c: 296: data_steering[0] = 90;
  1901  003440  0E5A               	movlw	90
  1902  003442  0101               	movlb	1	; () banked
  1903  003444  6F79               	movwf	_data_steering& (0+255),b
  1904                           
  1905                           ; BSR set to: 1
  1906                           ;parcheggio.c: 297: data_test[0] = ((130 + Pminimo)-(abs(n) + 10 + 45));
  1907  003446  C118  F0B1         	movff	_Pminimo,___fladd@a
  1908  00344A  C119  F0B2         	movff	_Pminimo+1,___fladd@a+1
  1909  00344E  C11A  F0B3         	movff	_Pminimo+2,___fladd@a+2
  1910  003452  C11B  F0B4         	movff	_Pminimo+3,___fladd@a+3
  1911  003456  C130  F077         	movff	_n,___fltol@f1
  1912  00345A  C131  F078         	movff	_n+1,___fltol@f1+1
  1913  00345E  C132  F079         	movff	_n+2,___fltol@f1+2
  1914  003462  C133  F07A         	movff	_n+3,___fltol@f1+3
  1915  003466  ECD8  F02B         	call	___fltol	;wreg free
  1916  00346A  C077  F081         	movff	?___fltol,abs@a
  1917  00346E  C078  F082         	movff	?___fltol+1,abs@a+1
  1918  003472  EC15  F02F         	call	_abs	;wreg free
  1919  003476  0E37               	movlw	55
  1920  003478  0100               	movlb	0	; () banked
  1921  00347A  2781               	addwf	?_abs& (0+255),f,b
  1922  00347C  0E00               	movlw	0
  1923  00347E  0100               	movlb	0	; () banked
  1924  003480  2382               	addwfc	(?_abs+1)& (0+255),f,b
  1925  003482  0100               	movlb	0	; () banked
  1926  003484  C081  F085         	movff	?_abs,___xxtofl@val
  1927  003488  0100               	movlb	0	; () banked
  1928  00348A  C082  F086         	movff	?_abs+1,___xxtofl@val+1
  1929  00348E  0100               	movlb	0	; () banked
  1930  003490  0E00               	movlw	0
  1931  003492  BF86               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1932  003494  0EFF               	movlw	-1
  1933  003496  6F87               	movwf	(___xxtofl@val+2)& (0+255),b
  1934  003498  6F88               	movwf	(___xxtofl@val+3)& (0+255),b
  1935  00349A  0E01               	movlw	1
  1936  00349C  ECB7  F026         	call	___xxtofl
  1937  0034A0  C085  F0A9         	movff	?___xxtofl,___flneg@f1
  1938  0034A4  C086  F0AA         	movff	?___xxtofl+1,___flneg@f1+1
  1939  0034A8  C087  F0AB         	movff	?___xxtofl+2,___flneg@f1+2
  1940  0034AC  C088  F0AC         	movff	?___xxtofl+3,___flneg@f1+3
  1941  0034B0  ECDE  F02E         	call	___flneg	;wreg free
  1942  0034B4  C0A9  F0AD         	movff	?___flneg,___fladd@b
  1943  0034B8  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  1944  0034BC  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  1945  0034C0  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  1946  0034C4  EC0F  F015         	call	___fladd	;wreg free
  1947  0034C8  C0AD  F1E2         	movff	?___fladd,_park_routine$3738
  1948  0034CC  C0AE  F1E3         	movff	?___fladd+1,_park_routine$3738+1
  1949  0034D0  C0AF  F1E4         	movff	?___fladd+2,_park_routine$3738+2
  1950  0034D4  C0B0  F1E5         	movff	?___fladd+3,_park_routine$3738+3
  1951                           
  1952                           ;parcheggio.c: 297: data_test[0] = ((130 + Pminimo)-(abs(n) + 10 + 45));
  1953  0034D8  0E00               	movlw	0
  1954  0034DA  0100               	movlb	0	; () banked
  1955  0034DC  6FB1               	movwf	___fladd@a& (0+255),b
  1956  0034DE  0E00               	movlw	0
  1957  0034E0  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  1958  0034E2  0E02               	movlw	2
  1959  0034E4  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  1960  0034E6  0E43               	movlw	67
  1961  0034E8  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  1962  0034EA  C1E2  F0AD         	movff	_park_routine$3738,___fladd@b
  1963  0034EE  C1E3  F0AE         	movff	_park_routine$3738+1,___fladd@b+1
  1964  0034F2  C1E4  F0AF         	movff	_park_routine$3738+2,___fladd@b+2
  1965  0034F6  C1E5  F0B0         	movff	_park_routine$3738+3,___fladd@b+3
  1966  0034FA  EC0F  F015         	call	___fladd	;wreg free
  1967  0034FE  C0AD  F077         	movff	?___fladd,___fltol@f1
  1968  003502  C0AE  F078         	movff	?___fladd+1,___fltol@f1+1
  1969  003506  C0AF  F079         	movff	?___fladd+2,___fltol@f1+2
  1970  00350A  C0B0  F07A         	movff	?___fladd+3,___fltol@f1+3
  1971  00350E  ECD8  F02B         	call	___fltol	;wreg free
  1972  003512  0100               	movlb	0	; () banked
  1973  003514  5177               	movf	?___fltol& (0+255),w,b
  1974  003516  0101               	movlb	1	; () banked
  1975  003518  6F81               	movwf	_data_test& (0+255),b
  1976                           
  1977                           ; BSR set to: 1
  1978                           ;parcheggio.c: 298: asd = 1;
  1979  00351A  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  1980                           
  1981                           ; BSR set to: 1
  1982                           ;parcheggio.c: 299: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1983  00351C  0E0D               	movlw	13
  1984  00351E  0100               	movlb	0	; () banked
  1985  003520  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1986  003522  0E00               	movlw	0
  1987  003524  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1988  003526  0E00               	movlw	0
  1989  003528  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1990  00352A  0E00               	movlw	0
  1991  00352C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1992  00352E  0E81               	movlw	low _data_test
  1993  003530  0100               	movlb	0	; () banked
  1994  003532  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1995  003534  0E01               	movlw	high _data_test
  1996  003536  0100               	movlb	0	; () banked
  1997  003538  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1998  00353A  0E08               	movlw	8
  1999  00353C  0100               	movlb	0	; () banked
  2000  00353E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2001  003540  0EBC               	movlw	188
  2002  003542  0100               	movlb	0	; () banked
  2003  003544  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2004  003546  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2005                           
  2006                           ;parcheggio.c: 300: can_send();
  2007  00354A  EC1F  F02A         	call	_can_send	;wreg free
  2008  00354E                     l749:
  2009  00354E  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2010  003550  D7FE               	goto	l749
  2011                           
  2012                           ;parcheggio.c: 303: set_speed = 0;
  2013  003552  0E00               	movlw	0
  2014  003554  0100               	movlb	0	; () banked
  2015  003556  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2016  003558  0E00               	movlw	0
  2017  00355A  6FE6               	movwf	_set_speed& (0+255),b
  2018                           
  2019                           ;parcheggio.c: 304: data_steering[0] = 90;
  2020  00355C  0E5A               	movlw	90
  2021  00355E  0101               	movlb	1	; () banked
  2022  003560  6F79               	movwf	_data_steering& (0+255),b
  2023                           
  2024                           ;parcheggio.c: 305: data_brake [0] = 0;
  2025  003562  0E00               	movlw	0
  2026  003564  0101               	movlb	1	; () banked
  2027  003566  6F61               	movwf	_data_brake& (0+255),b
  2028                           
  2029                           ;parcheggio.c: 306: data_brake [1] = 1;
  2030  003568  0E01               	movlw	1
  2031  00356A  0101               	movlb	1	; () banked
  2032  00356C  6F62               	movwf	(_data_brake+1)& (0+255),b
  2033                           
  2034                           ; BSR set to: 1
  2035                           ;parcheggio.c: 307: can_send();
  2036  00356E  EC1F  F02A         	call	_can_send	;wreg free
  2037                           
  2038                           ;parcheggio.c: 308: delay_s(1);
  2039  003572  0E01               	movlw	1
  2040  003574  EC2B  F02F         	call	_delay_s
  2041                           
  2042                           ;parcheggio.c: 310: data_brake [0] = 3;
  2043  003578  0E03               	movlw	3
  2044  00357A  0101               	movlb	1	; () banked
  2045  00357C  6F61               	movwf	_data_brake& (0+255),b
  2046                           
  2047                           ; BSR set to: 1
  2048                           ;parcheggio.c: 311: data_brake [1] = 1;
  2049  00357E  0E01               	movlw	1
  2050  003580  0101               	movlb	1	; () banked
  2051  003582  6F62               	movwf	(_data_brake+1)& (0+255),b
  2052                           
  2053                           ; BSR set to: 1
  2054                           ;parcheggio.c: 312: set_speed = 1000;
  2055  003584  0E03               	movlw	3
  2056  003586  0100               	movlb	0	; () banked
  2057  003588  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2058  00358A  0EE8               	movlw	232
  2059  00358C  6FE6               	movwf	_set_speed& (0+255),b
  2060                           
  2061                           ; BSR set to: 0
  2062                           ;parcheggio.c: 313: dir = 0;
  2063  00358E  9446               	bcf	_dir/(0+8),_dir& (0+7),c
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;parcheggio.c: 314: data_steering[0] = 180;
  2067  003590  0EB4               	movlw	180
  2068  003592  0101               	movlb	1	; () banked
  2069  003594  6F79               	movwf	_data_steering& (0+255),b
  2070                           
  2071                           ; BSR set to: 1
  2072                           ;parcheggio.c: 315: data_test[0] = prima_sterzata;
  2073  003596  C138  F077         	movff	_prima_sterzata,___fltol@f1
  2074  00359A  C139  F078         	movff	_prima_sterzata+1,___fltol@f1+1
  2075  00359E  C13A  F079         	movff	_prima_sterzata+2,___fltol@f1+2
  2076  0035A2  C13B  F07A         	movff	_prima_sterzata+3,___fltol@f1+3
  2077  0035A6  ECD8  F02B         	call	___fltol	;wreg free
  2078  0035AA  0100               	movlb	0	; () banked
  2079  0035AC  5177               	movf	?___fltol& (0+255),w,b
  2080  0035AE  0101               	movlb	1	; () banked
  2081  0035B0  6F81               	movwf	_data_test& (0+255),b
  2082                           
  2083                           ; BSR set to: 1
  2084                           ;parcheggio.c: 316: asd = 1;
  2085  0035B2  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2086                           
  2087                           ; BSR set to: 1
  2088                           ;parcheggio.c: 317: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2089  0035B4  0E0D               	movlw	13
  2090  0035B6  0100               	movlb	0	; () banked
  2091  0035B8  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2092  0035BA  0E00               	movlw	0
  2093  0035BC  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2094  0035BE  0E00               	movlw	0
  2095  0035C0  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2096  0035C2  0E00               	movlw	0
  2097  0035C4  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2098  0035C6  0E81               	movlw	low _data_test
  2099  0035C8  0100               	movlb	0	; () banked
  2100  0035CA  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2101  0035CC  0E01               	movlw	high _data_test
  2102  0035CE  0100               	movlb	0	; () banked
  2103  0035D0  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2104  0035D2  0E08               	movlw	8
  2105  0035D4  0100               	movlb	0	; () banked
  2106  0035D6  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2107  0035D8  0EBC               	movlw	188
  2108  0035DA  0100               	movlb	0	; () banked
  2109  0035DC  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2110  0035DE  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2111                           
  2112                           ;parcheggio.c: 318: can_send();
  2113  0035E2  EC1F  F02A         	call	_can_send	;wreg free
  2114  0035E6                     l752:
  2115  0035E6  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2116  0035E8  D7FE               	goto	l752
  2117                           
  2118                           ;parcheggio.c: 320: set_speed = 1000;
  2119  0035EA  0E03               	movlw	3
  2120  0035EC  0100               	movlb	0	; () banked
  2121  0035EE  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2122  0035F0  0EE8               	movlw	232
  2123  0035F2  6FE6               	movwf	_set_speed& (0+255),b
  2124                           
  2125                           ;parcheggio.c: 321: data_steering[0] = 0;
  2126  0035F4  0E00               	movlw	0
  2127  0035F6  0101               	movlb	1	; () banked
  2128  0035F8  6F79               	movwf	_data_steering& (0+255),b
  2129                           
  2130                           ; BSR set to: 1
  2131                           ;parcheggio.c: 322: asd = 1;
  2132  0035FA  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2133                           
  2134                           ; BSR set to: 1
  2135                           ;parcheggio.c: 323: data_test[0] = prima_sterzata + 10;
  2136  0035FC  0E00               	movlw	0
  2137  0035FE  0100               	movlb	0	; () banked
  2138  003600  6FB1               	movwf	___fladd@a& (0+255),b
  2139  003602  0E00               	movlw	0
  2140  003604  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  2141  003606  0E20               	movlw	32
  2142  003608  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  2143  00360A  0E41               	movlw	65
  2144  00360C  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  2145  00360E  C138  F0AD         	movff	_prima_sterzata,___fladd@b
  2146  003612  C139  F0AE         	movff	_prima_sterzata+1,___fladd@b+1
  2147  003616  C13A  F0AF         	movff	_prima_sterzata+2,___fladd@b+2
  2148  00361A  C13B  F0B0         	movff	_prima_sterzata+3,___fladd@b+3
  2149  00361E  EC0F  F015         	call	___fladd	;wreg free
  2150  003622  C0AD  F077         	movff	?___fladd,___fltol@f1
  2151  003626  C0AE  F078         	movff	?___fladd+1,___fltol@f1+1
  2152  00362A  C0AF  F079         	movff	?___fladd+2,___fltol@f1+2
  2153  00362E  C0B0  F07A         	movff	?___fladd+3,___fltol@f1+3
  2154  003632  ECD8  F02B         	call	___fltol	;wreg free
  2155  003636  0100               	movlb	0	; () banked
  2156  003638  5177               	movf	?___fltol& (0+255),w,b
  2157  00363A  0101               	movlb	1	; () banked
  2158  00363C  6F81               	movwf	_data_test& (0+255),b
  2159                           
  2160                           ; BSR set to: 1
  2161                           ;parcheggio.c: 324: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2162  00363E  0E0D               	movlw	13
  2163  003640  0100               	movlb	0	; () banked
  2164  003642  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2165  003644  0E00               	movlw	0
  2166  003646  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2167  003648  0E00               	movlw	0
  2168  00364A  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2169  00364C  0E00               	movlw	0
  2170  00364E  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2171  003650  0E81               	movlw	low _data_test
  2172  003652  0100               	movlb	0	; () banked
  2173  003654  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2174  003656  0E01               	movlw	high _data_test
  2175  003658  0100               	movlb	0	; () banked
  2176  00365A  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2177  00365C  0E08               	movlw	8
  2178  00365E  0100               	movlb	0	; () banked
  2179  003660  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2180  003662  0EBC               	movlw	188
  2181  003664  0100               	movlb	0	; () banked
  2182  003666  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2183  003668  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2184                           
  2185                           ;parcheggio.c: 325: can_send();
  2186  00366C  EC1F  F02A         	call	_can_send	;wreg free
  2187  003670                     l755:
  2188  003670  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2189  003672  D7FE               	goto	l755
  2190                           
  2191                           ;parcheggio.c: 327: data_brake [0] = 0;
  2192  003674  0E00               	movlw	0
  2193  003676  0101               	movlb	1	; () banked
  2194  003678  6F61               	movwf	_data_brake& (0+255),b
  2195                           
  2196                           ;parcheggio.c: 328: data_brake [1] = 1;
  2197  00367A  0E01               	movlw	1
  2198  00367C  0101               	movlb	1	; () banked
  2199  00367E  6F62               	movwf	(_data_brake+1)& (0+255),b
  2200                           
  2201                           ;parcheggio.c: 329: set_speed = 0;
  2202  003680  0E00               	movlw	0
  2203  003682  0100               	movlb	0	; () banked
  2204  003684  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2205  003686  0E00               	movlw	0
  2206  003688  6FE6               	movwf	_set_speed& (0+255),b
  2207                           
  2208                           ;parcheggio.c: 330: data_steering[0] = 90;
  2209  00368A  0E5A               	movlw	90
  2210  00368C  0101               	movlb	1	; () banked
  2211  00368E  6F79               	movwf	_data_steering& (0+255),b
  2212                           
  2213                           ; BSR set to: 1
  2214                           ;parcheggio.c: 331: can_send();
  2215  003690  EC1F  F02A         	call	_can_send	;wreg free
  2216                           
  2217                           ;parcheggio.c: 332: delay_s(1);
  2218  003694  0E01               	movlw	1
  2219  003696  EC2B  F02F         	call	_delay_s
  2220                           
  2221                           ;parcheggio.c: 333: if (sensor_distance [2] > 20) {
  2222  00369A  5029               	movf	_sensor_distance+5,w,c	;volatile
  2223  00369C  E104               	bnz	u9550
  2224  00369E  0E15               	movlw	21
  2225  0036A0  5C28               	subwf	_sensor_distance+4,w,c	;volatile
  2226  0036A2  A0D8               	btfss	status,0,c
  2227  0036A4  D017               	goto	l7514
  2228  0036A6                     u9550:
  2229                           
  2230                           ;parcheggio.c: 334: data_brake [0] = 3;
  2231  0036A6  0E03               	movlw	3
  2232  0036A8  0101               	movlb	1	; () banked
  2233  0036AA  6F61               	movwf	_data_brake& (0+255),b
  2234                           
  2235                           ;parcheggio.c: 335: data_brake [1] = 1;
  2236  0036AC  0E01               	movlw	1
  2237  0036AE  0101               	movlb	1	; () banked
  2238  0036B0  6F62               	movwf	(_data_brake+1)& (0+255),b
  2239                           
  2240                           ;parcheggio.c: 336: set_speed = 1000;
  2241  0036B2  0E03               	movlw	3
  2242  0036B4  0100               	movlb	0	; () banked
  2243  0036B6  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2244  0036B8  0EE8               	movlw	232
  2245  0036BA  6FE6               	movwf	_set_speed& (0+255),b
  2246                           
  2247                           ;parcheggio.c: 337: data_steering[0] = 90;
  2248  0036BC  0E5A               	movlw	90
  2249  0036BE  0101               	movlb	1	; () banked
  2250  0036C0  6F79               	movwf	_data_steering& (0+255),b
  2251                           
  2252                           ; BSR set to: 1
  2253                           ;parcheggio.c: 338: dir = 1;
  2254  0036C2  8446               	bsf	_dir/(0+8),_dir& (0+7),c
  2255                           
  2256                           ; BSR set to: 1
  2257                           ;parcheggio.c: 339: can_send();
  2258  0036C4  EC1F  F02A         	call	_can_send	;wreg free
  2259  0036C8                     l7512:
  2260  0036C8  5029               	movf	_sensor_distance+5,w,c	;volatile
  2261  0036CA  E1FE               	bnz	l7512
  2262  0036CC  0E15               	movlw	21
  2263  0036CE  5C28               	subwf	_sensor_distance+4,w,c	;volatile
  2264  0036D0  B0D8               	btfsc	status,0,c
  2265  0036D2  D7FA               	goto	l7512
  2266  0036D4                     l7514:
  2267                           
  2268                           ;parcheggio.c: 341: }
  2269                           ;parcheggio.c: 342: data_brake [0] = 0;
  2270  0036D4  0E00               	movlw	0
  2271  0036D6  0101               	movlb	1	; () banked
  2272  0036D8  6F61               	movwf	_data_brake& (0+255),b
  2273                           
  2274                           ;parcheggio.c: 343: data_brake [1] = 1;
  2275  0036DA  0E01               	movlw	1
  2276  0036DC  0101               	movlb	1	; () banked
  2277  0036DE  6F62               	movwf	(_data_brake+1)& (0+255),b
  2278                           
  2279                           ;parcheggio.c: 344: set_speed = 0;
  2280  0036E0  0E00               	movlw	0
  2281  0036E2  0100               	movlb	0	; () banked
  2282  0036E4  6FE7               	movwf	(_set_speed+1)& (0+255),b
  2283  0036E6  0E00               	movlw	0
  2284  0036E8  6FE6               	movwf	_set_speed& (0+255),b
  2285                           
  2286                           ;parcheggio.c: 345: data_steering[0] = 90;
  2287  0036EA  0E5A               	movlw	90
  2288  0036EC  0101               	movlb	1	; () banked
  2289  0036EE  6F79               	movwf	_data_steering& (0+255),b
  2290                           
  2291                           ; BSR set to: 1
  2292                           ;parcheggio.c: 346: dir = 0;
  2293  0036F0  9446               	bcf	_dir/(0+8),_dir& (0+7),c
  2294                           
  2295                           ; BSR set to: 1
  2296                           ;parcheggio.c: 348: can_send();
  2297  0036F2  EC1F  F02A         	call	_can_send	;wreg free
  2298                           
  2299                           ;parcheggio.c: 349: activation = 0;
  2300  0036F6  9046               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
  2301                           
  2302                           ;parcheggio.c: 350: PORTBbits.RB5 = 0;
  2303  0036F8  9A81               	bcf	3969,5,c	;volatile
  2304                           
  2305                           ;parcheggio.c: 351: start_operation = 0;
  2306  0036FA  9447               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2307                           
  2308                           ;parcheggio.c: 352: data[0] = 3;
  2309  0036FC  0E03               	movlw	3
  2310  0036FE  0101               	movlb	1	; () banked
  2311  003700  6F59               	movwf	_data& (0+255),b
  2312                           
  2313                           ;parcheggio.c: 353: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2314  003702  0E0B               	movlw	11
  2315  003704  0100               	movlb	0	; () banked
  2316  003706  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2317  003708  0E00               	movlw	0
  2318  00370A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2319  00370C  0E00               	movlw	0
  2320  00370E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2321  003710  0E00               	movlw	0
  2322  003712  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2323  003714  0E59               	movlw	low _data
  2324  003716  0100               	movlb	0	; () banked
  2325  003718  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2326  00371A  0E01               	movlw	high _data
  2327  00371C  0100               	movlb	0	; () banked
  2328  00371E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2329  003720  0E01               	movlw	1
  2330  003722  0100               	movlb	0	; () banked
  2331  003724  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2332  003726  0EBC               	movlw	188
  2333  003728  0100               	movlb	0	; () banked
  2334  00372A  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2335  00372C  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2336  003730                     l7528:
  2337  003730  AA81               	btfss	3969,5,c	;volatile
  2338  003732  0012               	return	
  2339  003734  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2340  003736  0012               	return	
  2341  003738  A447               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2342  00373A  0012               	return	
  2343  00373C  D63D               	goto	l7428
  2344  00373E                     __end_of_park_routine:
  2345                           	opt stack 0
  2346                           tblptru	equ	0xFF8
  2347                           tblptrh	equ	0xFF7
  2348                           tblptrl	equ	0xFF6
  2349                           tablat	equ	0xFF5
  2350                           postinc0	equ	0xFEE
  2351                           wreg	equ	0xFE8
  2352                           postdec1	equ	0xFE5
  2353                           fsr1l	equ	0xFE1
  2354                           postinc2	equ	0xFDE
  2355                           postdec2	equ	0xFDD
  2356                           status	equ	0xFD8
  2357                           
  2358 ;; *************** function _parallelo *****************
  2359 ;; Defined at:
  2360 ;;		line 379 in file "parcheggio.c"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;		None               void
  2367 ;; Registers used:
  2368 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2376 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2377 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2378 ;;Total ram usage:        2 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    8
  2381 ;; This function calls:
  2382 ;;		___fladd
  2383 ;;		___fldiv
  2384 ;;		___flge
  2385 ;;		___flmul
  2386 ;;		___fltol
  2387 ;;		___xxtofl
  2388 ;;		_abs
  2389 ;;		_asin
  2390 ;;		_can_send
  2391 ;;		_sqrt
  2392 ;; This function is called by:
  2393 ;;		_park_search
  2394 ;;		_park_routine
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           	psect	text3
  2399  004890                     __ptext3:
  2400                           	opt stack 0
  2401  004890                     _parallelo:
  2402                           	opt stack 21
  2403                           
  2404                           ;parcheggio.c: 380: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  2405                           
  2406                           ;incstack = 0
  2407  004890  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  2408  004894  CFDE F0DE          	movff	postinc2,??_parallelo
  2409  004898  CFDD F0DF          	movff	postdec2,??_parallelo+1
  2410  00489C  0100               	movlb	0	; () banked
  2411  00489E  1FDE               	comf	??_parallelo& (0+255),f,b
  2412  0048A0  1FDF               	comf	(??_parallelo+1)& (0+255),f,b
  2413  0048A2  4BDE               	infsnz	??_parallelo& (0+255),f,b
  2414  0048A4  2BDF               	incf	(??_parallelo+1)& (0+255),f,b
  2415  0048A6  5024               	movf	_sensor_distance,w,c	;volatile
  2416  0048A8  0100               	movlb	0	; () banked
  2417  0048AA  25DE               	addwf	??_parallelo& (0+255),w,b
  2418  0048AC  0100               	movlb	0	; () banked
  2419  0048AE  6F81               	movwf	abs@a& (0+255),b
  2420  0048B0  5025               	movf	_sensor_distance+1,w,c	;volatile
  2421  0048B2  0100               	movlb	0	; () banked
  2422  0048B4  21DF               	addwfc	(??_parallelo+1)& (0+255),w,b
  2423  0048B6  0100               	movlb	0	; () banked
  2424  0048B8  6F82               	movwf	(abs@a+1)& (0+255),b
  2425  0048BA  EC15  F02F         	call	_abs	;wreg free
  2426  0048BE  0100               	movlb	0	; () banked
  2427  0048C0  C081  F085         	movff	?_abs,___xxtofl@val
  2428  0048C4  0100               	movlb	0	; () banked
  2429  0048C6  C082  F086         	movff	?_abs+1,___xxtofl@val+1
  2430  0048CA  0100               	movlb	0	; () banked
  2431  0048CC  0E00               	movlw	0
  2432  0048CE  BF86               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2433  0048D0  0EFF               	movlw	-1
  2434  0048D2  6F87               	movwf	(___xxtofl@val+2)& (0+255),b
  2435  0048D4  6F88               	movwf	(___xxtofl@val+3)& (0+255),b
  2436  0048D6  0E01               	movlw	1
  2437  0048D8  ECB7  F026         	call	___xxtofl
  2438  0048DC  C085  F0E0         	movff	?___xxtofl,_alignment_gap
  2439  0048E0  C086  F0E1         	movff	?___xxtofl+1,_alignment_gap+1
  2440  0048E4  C087  F0E2         	movff	?___xxtofl+2,_alignment_gap+2
  2441  0048E8  C088  F0E3         	movff	?___xxtofl+3,_alignment_gap+3
  2442                           
  2443                           ;parcheggio.c: 382: if (alignment_gap < 30) {
  2444  0048EC  C0E0  F0B1         	movff	_alignment_gap,___flge@ff1
  2445  0048F0  C0E1  F0B2         	movff	_alignment_gap+1,___flge@ff1+1
  2446  0048F4  C0E2  F0B3         	movff	_alignment_gap+2,___flge@ff1+2
  2447  0048F8  C0E3  F0B4         	movff	_alignment_gap+3,___flge@ff1+3
  2448  0048FC  0E00               	movlw	0
  2449  0048FE  0100               	movlb	0	; () banked
  2450  004900  6FB5               	movwf	___flge@ff2& (0+255),b
  2451  004902  0E00               	movlw	0
  2452  004904  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  2453  004906  0EF0               	movlw	240
  2454  004908  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  2455  00490A  0E41               	movlw	65
  2456  00490C  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  2457  00490E  EC57  F029         	call	___flge	;wreg free
  2458  004912  0100               	movlb	0	; () banked
  2459  004914  B0D8               	btfsc	status,0,c
  2460  004916  D0F9               	goto	l782
  2461                           
  2462                           ; BSR set to: 0
  2463                           ;parcheggio.c: 383: if ((sensor_distance[0] < 40) && (sensor_distance[1] < 40)) {
  2464  004918  5025               	movf	_sensor_distance+1,w,c	;volatile
  2465  00491A  E103               	bnz	u9261
  2466  00491C  0E28               	movlw	40
  2467  00491E  5C24               	subwf	_sensor_distance,w,c	;volatile
  2468  004920  B0D8               	btfsc	status,0,c
  2469  004922                     u9261:
  2470  004922  D0E5               	goto	l7296
  2471                           
  2472                           ; BSR set to: 0
  2473  004924  5027               	movf	_sensor_distance+3,w,c	;volatile
  2474  004926  E103               	bnz	u9271
  2475  004928  0E28               	movlw	40
  2476  00492A  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  2477  00492C  B0D8               	btfsc	status,0,c
  2478  00492E                     u9271:
  2479  00492E  D0DF               	goto	l7296
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;parcheggio.c: 387: x = ((100) + (alignment_gap * alignment_gap));
  2483  004930  C0E0  F094         	movff	_alignment_gap,___flmul@a
  2484  004934  C0E1  F095         	movff	_alignment_gap+1,___flmul@a+1
  2485  004938  C0E2  F096         	movff	_alignment_gap+2,___flmul@a+2
  2486  00493C  C0E3  F097         	movff	_alignment_gap+3,___flmul@a+3
  2487  004940  C0E0  F090         	movff	_alignment_gap,___flmul@b
  2488  004944  C0E1  F091         	movff	_alignment_gap+1,___flmul@b+1
  2489  004948  C0E2  F092         	movff	_alignment_gap+2,___flmul@b+2
  2490  00494C  C0E3  F093         	movff	_alignment_gap+3,___flmul@b+3
  2491  004950  EC63  F017         	call	___flmul	;wreg free
  2492  004954  C090  F0AD         	movff	?___flmul,___fladd@b
  2493  004958  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  2494  00495C  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  2495  004960  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  2496  004964  0E00               	movlw	0
  2497  004966  0100               	movlb	0	; () banked
  2498  004968  6FB1               	movwf	___fladd@a& (0+255),b
  2499  00496A  0E00               	movlw	0
  2500  00496C  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  2501  00496E  0EC8               	movlw	200
  2502  004970  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  2503  004972  0E42               	movlw	66
  2504  004974  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  2505  004976  EC0F  F015         	call	___fladd	;wreg free
  2506  00497A  C0AD  F13C         	movff	?___fladd,_x
  2507  00497E  C0AE  F13D         	movff	?___fladd+1,_x+1
  2508  004982  C0AF  F13E         	movff	?___fladd+2,_x+2
  2509  004986  C0B0  F13F         	movff	?___fladd+3,_x+3
  2510                           
  2511                           ;parcheggio.c: 388: x = sqrt(x);
  2512  00498A  C13C  F0C1         	movff	_x,sqrt@a
  2513  00498E  C13D  F0C2         	movff	_x+1,sqrt@a+1
  2514  004992  C13E  F0C3         	movff	_x+2,sqrt@a+2
  2515  004996  C13F  F0C4         	movff	_x+3,sqrt@a+3
  2516  00499A  EC9F  F01B         	call	_sqrt	;wreg free
  2517  00499E  C0C1  F13C         	movff	?_sqrt,_x
  2518  0049A2  C0C2  F13D         	movff	?_sqrt+1,_x+1
  2519  0049A6  C0C3  F13E         	movff	?_sqrt+2,_x+2
  2520  0049AA  C0C4  F13F         	movff	?_sqrt+3,_x+3
  2521                           
  2522                           ;parcheggio.c: 389: z = alignment_gap / x;
  2523  0049AE  C0E0  F077         	movff	_alignment_gap,___fldiv@b
  2524  0049B2  C0E1  F078         	movff	_alignment_gap+1,___fldiv@b+1
  2525  0049B6  C0E2  F079         	movff	_alignment_gap+2,___fldiv@b+2
  2526  0049BA  C0E3  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  2527  0049BE  C13C  F07B         	movff	_x,___fldiv@a
  2528  0049C2  C13D  F07C         	movff	_x+1,___fldiv@a+1
  2529  0049C6  C13E  F07D         	movff	_x+2,___fldiv@a+2
  2530  0049CA  C13F  F07E         	movff	_x+3,___fldiv@a+3
  2531  0049CE  EC84  F01D         	call	___fldiv	;wreg free
  2532  0049D2  C077  F140         	movff	?___fldiv,_z
  2533  0049D6  C078  F141         	movff	?___fldiv+1,_z+1
  2534  0049DA  C079  F142         	movff	?___fldiv+2,_z+2
  2535  0049DE  C07A  F143         	movff	?___fldiv+3,_z+3
  2536                           
  2537                           ;parcheggio.c: 390: z = asin(z);
  2538  0049E2  C140  F19A         	movff	_z,asin@x
  2539  0049E6  C141  F19B         	movff	_z+1,asin@x+1
  2540  0049EA  C142  F19C         	movff	_z+2,asin@x+2
  2541  0049EE  C143  F19D         	movff	_z+3,asin@x+3
  2542  0049F2  ECBF  F022         	call	_asin	;wreg free
  2543  0049F6  C19A  F140         	movff	?_asin,_z
  2544  0049FA  C19B  F141         	movff	?_asin+1,_z+1
  2545  0049FE  C19C  F142         	movff	?_asin+2,_z+2
  2546  004A02  C19D  F143         	movff	?_asin+3,_z+3
  2547                           
  2548                           ;parcheggio.c: 391: z = z / 3.14159265358979323846 * 180;
  2549  004A06  0EDB               	movlw	219
  2550  004A08  0100               	movlb	0	; () banked
  2551  004A0A  6F7B               	movwf	___fldiv@a& (0+255),b
  2552  004A0C  0E0F               	movlw	15
  2553  004A0E  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2554  004A10  0E49               	movlw	73
  2555  004A12  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2556  004A14  0E40               	movlw	64
  2557  004A16  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2558  004A18  C140  F077         	movff	_z,___fldiv@b
  2559  004A1C  C141  F078         	movff	_z+1,___fldiv@b+1
  2560  004A20  C142  F079         	movff	_z+2,___fldiv@b+2
  2561  004A24  C143  F07A         	movff	_z+3,___fldiv@b+3
  2562  004A28  EC84  F01D         	call	___fldiv	;wreg free
  2563  004A2C  C077  F090         	movff	?___fldiv,___flmul@b
  2564  004A30  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  2565  004A34  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  2566  004A38  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  2567  004A3C  0E00               	movlw	0
  2568  004A3E  0100               	movlb	0	; () banked
  2569  004A40  6F94               	movwf	___flmul@a& (0+255),b
  2570  004A42  0E00               	movlw	0
  2571  004A44  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2572  004A46  0E34               	movlw	52
  2573  004A48  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2574  004A4A  0E43               	movlw	67
  2575  004A4C  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2576  004A4E  EC63  F017         	call	___flmul	;wreg free
  2577  004A52  C090  F140         	movff	?___flmul,_z
  2578  004A56  C091  F141         	movff	?___flmul+1,_z+1
  2579  004A5A  C092  F142         	movff	?___flmul+2,_z+2
  2580  004A5E  C093  F143         	movff	?___flmul+3,_z+3
  2581                           
  2582                           ;parcheggio.c: 392: data_correction[0] = z;
  2583  004A62  C140  F077         	movff	_z,___fltol@f1
  2584  004A66  C141  F078         	movff	_z+1,___fltol@f1+1
  2585  004A6A  C142  F079         	movff	_z+2,___fltol@f1+2
  2586  004A6E  C143  F07A         	movff	_z+3,___fltol@f1+3
  2587  004A72  ECD8  F02B         	call	___fltol	;wreg free
  2588  004A76  0100               	movlb	0	; () banked
  2589  004A78  5177               	movf	?___fltol& (0+255),w,b
  2590  004A7A  0101               	movlb	1	; () banked
  2591  004A7C  6F69               	movwf	_data_correction& (0+255),b
  2592                           
  2593                           ; BSR set to: 1
  2594                           ;parcheggio.c: 394: if (sensor_distance[0] < sensor_distance[1]) {
  2595  004A7E  5026               	movf	_sensor_distance+2,w,c	;volatile
  2596  004A80  5C24               	subwf	_sensor_distance,w,c	;volatile
  2597  004A82  5027               	movf	_sensor_distance+3,w,c	;volatile
  2598  004A84  5825               	subwfb	_sensor_distance+1,w,c	;volatile
  2599  004A86  B0D8               	btfsc	status,0,c
  2600  004A88  D002               	goto	l7288
  2601                           
  2602                           ; BSR set to: 1
  2603                           ;parcheggio.c: 395: data_correction[1] = 0;
  2604  004A8A  0E00               	movlw	0
  2605  004A8C  D001               	goto	L1
  2606  004A8E                     l7288:
  2607                           
  2608                           ; BSR set to: 1
  2609                           ;parcheggio.c: 397: data_correction[1] = 1;
  2610  004A8E  0E01               	movlw	1
  2611  004A90                     L1:
  2612  004A90  0101               	movlb	1	; () banked
  2613  004A92  6F6A               	movwf	(_data_correction+1)& (0+255),b
  2614                           
  2615                           ; BSR set to: 1
  2616                           ;parcheggio.c: 398: }
  2617                           ;parcheggio.c: 399: if ((old_alignment_gap != alignment_gap) || (old_data_correction != 
      +                          data_correction[1])) {
  2618                           
  2619                           ; BSR set to: 1
  2620  004A94  0100               	movlb	0	; () banked
  2621  004A96  51E0               	movf	_alignment_gap& (0+255),w,b
  2622  004A98  0101               	movlb	1	; () banked
  2623  004A9A  1934               	xorwf	_old_alignment_gap& (0+255),w,b
  2624  004A9C  E117               	bnz	l788
  2625  004A9E  0100               	movlb	0	; () banked
  2626  004AA0  51E1               	movf	(_alignment_gap+1)& (0+255),w,b
  2627  004AA2  0101               	movlb	1	; () banked
  2628  004AA4  1935               	xorwf	(_old_alignment_gap+1)& (0+255),w,b
  2629  004AA6  E112               	bnz	l788
  2630  004AA8  0100               	movlb	0	; () banked
  2631  004AAA  51E2               	movf	(_alignment_gap+2)& (0+255),w,b
  2632  004AAC  0101               	movlb	1	; () banked
  2633  004AAE  1936               	xorwf	(_old_alignment_gap+2)& (0+255),w,b
  2634  004AB0  E10D               	bnz	l788
  2635  004AB2  0100               	movlb	0	; () banked
  2636  004AB4  51E3               	movf	(_alignment_gap+3)& (0+255),w,b
  2637  004AB6  0101               	movlb	1	; () banked
  2638  004AB8  1937               	xorwf	(_old_alignment_gap+3)& (0+255),w,b
  2639  004ABA  A4D8               	btfss	status,2,c
  2640  004ABC  D007               	goto	l788
  2641                           
  2642                           ; BSR set to: 1
  2643  004ABE  0E00               	movlw	0
  2644  004AC0  BE46               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2645  004AC2  0E01               	movlw	1
  2646  004AC4  0101               	movlb	1	; () banked
  2647  004AC6  196A               	xorwf	(_data_correction+1)& (0+255),w,b
  2648  004AC8  B4D8               	btfsc	status,2,c
  2649  004ACA  0012               	return	
  2650  004ACC                     l788:
  2651                           
  2652                           ; BSR set to: 1
  2653                           ;parcheggio.c: 400: old_alignment_gap = alignment_gap;
  2654  004ACC  C0E0  F134         	movff	_alignment_gap,_old_alignment_gap
  2655  004AD0  C0E1  F135         	movff	_alignment_gap+1,_old_alignment_gap+1
  2656  004AD4  C0E2  F136         	movff	_alignment_gap+2,_old_alignment_gap+2
  2657  004AD8  C0E3  F137         	movff	_alignment_gap+3,_old_alignment_gap+3
  2658                           
  2659                           ;parcheggio.c: 401: old_data_correction = data_correction[1];
  2660  004ADC  0101               	movlb	1	; () banked
  2661  004ADE  A16A               	btfss	(_data_correction+1)& (0+255),0,b
  2662  004AE0  D002               	goto	u9310
  2663  004AE2  8E46               	bsf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2664  004AE4  D001               	goto	l7294
  2665  004AE6                     u9310:
  2666  004AE6  9E46               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2667  004AE8                     l7294:
  2668                           
  2669                           ;parcheggio.c: 402: can_send();
  2670  004AE8  EC1F  F02A         	call	_can_send	;wreg free
  2671                           
  2672                           ;parcheggio.c: 403: }
  2673                           ;parcheggio.c: 404: } else if (data_correction[0] != old_data_correction) {
  2674  004AEC  0012               	return	
  2675  004AEE                     l7296:
  2676  004AEE  0E00               	movlw	0
  2677  004AF0  BE46               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2678  004AF2  0E01               	movlw	1
  2679  004AF4  0101               	movlb	1	; () banked
  2680  004AF6  1969               	xorwf	_data_correction& (0+255),w,b
  2681  004AF8  B4D8               	btfsc	status,2,c
  2682  004AFA  0012               	return	
  2683                           
  2684                           ; BSR set to: 1
  2685                           ;parcheggio.c: 405: data_correction[0] = 0;
  2686  004AFC  0E00               	movlw	0
  2687  004AFE  0101               	movlb	1	; () banked
  2688  004B00  6F69               	movwf	_data_correction& (0+255),b
  2689                           
  2690                           ; BSR set to: 1
  2691                           ;parcheggio.c: 406: old_data_correction = 0;
  2692  004B02  9E46               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2693                           
  2694                           ; BSR set to: 1
  2695                           ;parcheggio.c: 407: can_send();
  2696  004B04  EC1F  F02A         	call	_can_send	;wreg free
  2697                           
  2698                           ;parcheggio.c: 408: }
  2699                           ;parcheggio.c: 409: } else {
  2700  004B08  0012               	return	
  2701  004B0A                     l782:
  2702                           
  2703                           ; BSR set to: 0
  2704                           ;parcheggio.c: 410: if (old_data_correction != 0) {
  2705  004B0A  AE46               	btfss	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2706  004B0C  0012               	return	
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;parcheggio.c: 411: data_correction[0] = 0;
  2710  004B0E  0E00               	movlw	0
  2711  004B10  0101               	movlb	1	; () banked
  2712  004B12  6F69               	movwf	_data_correction& (0+255),b
  2713                           
  2714                           ; BSR set to: 1
  2715                           ;parcheggio.c: 412: old_data_correction = 0;
  2716  004B14  9E46               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2717                           
  2718                           ; BSR set to: 1
  2719                           ;parcheggio.c: 413: can_send();
  2720  004B16  EC1F  F02A         	call	_can_send	;wreg free
  2721  004B1A  0012               	return	
  2722  004B1C                     __end_of_parallelo:
  2723                           	opt stack 0
  2724                           tblptru	equ	0xFF8
  2725                           tblptrh	equ	0xFF7
  2726                           tblptrl	equ	0xFF6
  2727                           tablat	equ	0xFF5
  2728                           postinc0	equ	0xFEE
  2729                           wreg	equ	0xFE8
  2730                           postdec1	equ	0xFE5
  2731                           fsr1l	equ	0xFE1
  2732                           postinc2	equ	0xFDE
  2733                           postdec2	equ	0xFDD
  2734                           status	equ	0xFD8
  2735                           
  2736 ;; *************** function _can_send *****************
  2737 ;; Defined at:
  2738 ;;		line 358 in file "parcheggio.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;		None
  2741 ;; Auto vars:     Size  Location     Type
  2742 ;;  data_correct    0   39[BANK0 ] unsigned char [0]
  2743 ;; Return value:  Size  Location     Type
  2744 ;;		None               void
  2745 ;; Registers used:
  2746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2756 ;;Total ram usage:        0 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    5
  2759 ;; This function calls:
  2760 ;;		_CANisTxReady
  2761 ;;		_CANsendMessage
  2762 ;; This function is called by:
  2763 ;;		_park_routine
  2764 ;;		_parallelo
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           	psect	text4
  2769  00543E                     __ptext4:
  2770                           	opt stack 0
  2771  00543E                     _can_send:
  2772                           	opt stack 23
  2773                           
  2774                           ;parcheggio.c: 359: if (PORTBbits.RB5 == 1) {
  2775                           
  2776                           ;incstack = 0
  2777  00543E  AA81               	btfss	3969,5,c	;volatile
  2778  005440  D063               	goto	l7196
  2779  005442                     l7176:
  2780  005442  EC41  F02F         	call	_CANisTxReady	;wreg free
  2781  005446  06E8               	decf	wreg,f,c
  2782  005448  A4D8               	btfss	status,2,c
  2783  00544A  D7FB               	goto	l7176
  2784                           
  2785                           ;parcheggio.c: 361: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2786  00544C  0E05               	movlw	5
  2787  00544E  0100               	movlb	0	; () banked
  2788  005450  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2789  005452  0E00               	movlw	0
  2790  005454  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2791  005456  0E00               	movlw	0
  2792  005458  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2793  00545A  0E00               	movlw	0
  2794  00545C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2795  00545E  0E79               	movlw	low _data_steering
  2796  005460  0100               	movlb	0	; () banked
  2797  005462  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2798  005464  0E01               	movlw	high _data_steering
  2799  005466  0100               	movlb	0	; () banked
  2800  005468  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2801  00546A  0E08               	movlw	8
  2802  00546C  0100               	movlb	0	; () banked
  2803  00546E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2804  005470  0EBC               	movlw	188
  2805  005472  0100               	movlb	0	; () banked
  2806  005474  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2807  005476  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2808                           
  2809                           ;parcheggio.c: 362: data_speed[0] = set_speed;
  2810  00547A  C0E6  F171         	movff	_set_speed,_data_speed
  2811                           
  2812                           ;parcheggio.c: 363: data_speed[1] = (set_speed >> 8);
  2813  00547E  0100               	movlb	0	; () banked
  2814  005480  51E7               	movf	(_set_speed+1)& (0+255),w,b
  2815  005482  0101               	movlb	1	; () banked
  2816  005484  6F72               	movwf	(_data_speed+1)& (0+255),b
  2817                           
  2818                           ; BSR set to: 1
  2819                           ;parcheggio.c: 364: data_speed[2] = dir;
  2820  005486  0E00               	movlw	0
  2821  005488  B446               	btfsc	_dir/(0+8),_dir& (0+7),c
  2822  00548A  0E01               	movlw	1
  2823  00548C  0101               	movlb	1	; () banked
  2824  00548E  6F73               	movwf	(_data_speed+2)& (0+255),b
  2825  005490                     l7186:
  2826  005490  EC41  F02F         	call	_CANisTxReady	;wreg free
  2827  005494  06E8               	decf	wreg,f,c
  2828  005496  A4D8               	btfss	status,2,c
  2829  005498  D7FB               	goto	l7186
  2830                           
  2831                           ;parcheggio.c: 366: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2832  00549A  0E03               	movlw	3
  2833  00549C  0100               	movlb	0	; () banked
  2834  00549E  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2835  0054A0  0E00               	movlw	0
  2836  0054A2  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2837  0054A4  0E00               	movlw	0
  2838  0054A6  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2839  0054A8  0E00               	movlw	0
  2840  0054AA  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2841  0054AC  0E71               	movlw	low _data_speed
  2842  0054AE  0100               	movlb	0	; () banked
  2843  0054B0  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2844  0054B2  0E01               	movlw	high _data_speed
  2845  0054B4  0100               	movlb	0	; () banked
  2846  0054B6  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2847  0054B8  0E08               	movlw	8
  2848  0054BA  0100               	movlb	0	; () banked
  2849  0054BC  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2850  0054BE  0EBC               	movlw	188
  2851  0054C0  0100               	movlb	0	; () banked
  2852  0054C2  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2853  0054C4  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2854  0054C8                     l7190:
  2855  0054C8  EC41  F02F         	call	_CANisTxReady	;wreg free
  2856  0054CC  06E8               	decf	wreg,f,c
  2857  0054CE  A4D8               	btfss	status,2,c
  2858  0054D0  D7FB               	goto	l7190
  2859                           
  2860                           ;parcheggio.c: 368: data_brake[1] = 0;
  2861  0054D2  0E00               	movlw	0
  2862  0054D4  0101               	movlb	1	; () banked
  2863  0054D6  6F62               	movwf	(_data_brake+1)& (0+255),b
  2864                           
  2865                           ; BSR set to: 1
  2866                           ;parcheggio.c: 369: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2867  0054D8  0E04               	movlw	4
  2868  0054DA  0100               	movlb	0	; () banked
  2869  0054DC  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2870  0054DE  0E00               	movlw	0
  2871  0054E0  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2872  0054E2  0E00               	movlw	0
  2873  0054E4  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2874  0054E6  0E00               	movlw	0
  2875  0054E8  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2876  0054EA  0E61               	movlw	low _data_brake
  2877  0054EC  0100               	movlb	0	; () banked
  2878  0054EE  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2879  0054F0  0E01               	movlw	high _data_brake
  2880  0054F2  0100               	movlb	0	; () banked
  2881  0054F4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2882  0054F6  0E08               	movlw	8
  2883  0054F8  0100               	movlb	0	; () banked
  2884  0054FA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2885  0054FC  0EBC               	movlw	188
  2886  0054FE  0100               	movlb	0	; () banked
  2887  005500  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2888  005502  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2889                           
  2890                           ;parcheggio.c: 370: } else {
  2891  005506  0012               	return	
  2892  005508                     l7196:
  2893                           
  2894                           ;parcheggio.c: 371: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2895  005508  0E0E               	movlw	14
  2896  00550A  0100               	movlb	0	; () banked
  2897  00550C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2898  00550E  0E00               	movlw	0
  2899  005510  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2900  005512  0E00               	movlw	0
  2901  005514  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2902  005516  0E00               	movlw	0
  2903  005518  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2904  00551A  0E69               	movlw	low _data_correction
  2905  00551C  0100               	movlb	0	; () banked
  2906  00551E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2907  005520  0E01               	movlw	high _data_correction
  2908  005522  0100               	movlb	0	; () banked
  2909  005524  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2910  005526  0E08               	movlw	8
  2911  005528  0100               	movlb	0	; () banked
  2912  00552A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2913  00552C  0EBC               	movlw	188
  2914  00552E  0100               	movlb	0	; () banked
  2915  005530  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2916  005532  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2917                           
  2918                           ;parcheggio.c: 372: unsigned char data_correction1[];
  2919                           ;parcheggio.c: 373: data_correction1[0] = data_correction[0];
  2920  005536  EE20  F087         	lfsr	2,can_send@data_correction1
  2921  00553A  C169  FFDF         	movff	_data_correction,indf2
  2922                           
  2923                           ;parcheggio.c: 374: data_correction1[1] = 0;
  2924  00553E  0E00               	movlw	0
  2925  005540  CFE8 F088          	movff	wreg,can_send@data_correction1+1
  2926                           
  2927                           ;parcheggio.c: 375: CANsendMessage(0xAA, data_correction1, 8, CAN_CONFIG_STD_MSG & CAN_N
      +                          ORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2928  005544  0EAA               	movlw	170
  2929  005546  0100               	movlb	0	; () banked
  2930  005548  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2931  00554A  0E00               	movlw	0
  2932  00554C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2933  00554E  0E00               	movlw	0
  2934  005550  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2935  005552  0E00               	movlw	0
  2936  005554  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2937  005556  0E87               	movlw	low can_send@data_correction1
  2938  005558  0100               	movlb	0	; () banked
  2939  00555A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2940  00555C  0E00               	movlw	high can_send@data_correction1
  2941  00555E  0100               	movlb	0	; () banked
  2942  005560  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2943  005562  0E08               	movlw	8
  2944  005564  0100               	movlb	0	; () banked
  2945  005566  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2946  005568  0EBC               	movlw	188
  2947  00556A  0100               	movlb	0	; () banked
  2948  00556C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2949  00556E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2950  005572  0012               	return	
  2951  005574                     __end_of_can_send:
  2952                           	opt stack 0
  2953                           tblptru	equ	0xFF8
  2954                           tblptrh	equ	0xFF7
  2955                           tblptrl	equ	0xFF6
  2956                           tablat	equ	0xFF5
  2957                           postinc0	equ	0xFEE
  2958                           wreg	equ	0xFE8
  2959                           postdec1	equ	0xFE5
  2960                           fsr1l	equ	0xFE1
  2961                           indf2	equ	0xFDF
  2962                           postinc2	equ	0xFDE
  2963                           postdec2	equ	0xFDD
  2964                           status	equ	0xFD8
  2965                           
  2966 ;; *************** function _CANsendMessage *****************
  2967 ;; Defined at:
  2968 ;;		line 294 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;  identifier      4   23[BANK0 ] unsigned long 
  2971 ;;  data            2   27[BANK0 ] PTR unsigned char 
  2972 ;;		 -> can_send@data_correction1(0), data_speed(8), data_steering(8), data_correction(8), 
  2973 ;;		 -> data_brake(8), data_test(8), data(8), 
  2974 ;;  dataLength      1   29[BANK0 ] unsigned char 
  2975 ;;  flags           1   30[BANK0 ] enum E16335
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  tamp            4   35[BANK0 ] unsigned long 
  2978 ;; Return value:  Size  Location     Type
  2979 ;;		None               void
  2980 ;; Registers used:
  2981 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2982 ;; Tracked objects:
  2983 ;;		On entry : 0/0
  2984 ;;		On exit  : 0/0
  2985 ;;		Unchanged: 0/0
  2986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2987 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2988 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2989 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2990 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2991 ;;Total ram usage:       16 bytes
  2992 ;; Hardware stack levels used:    1
  2993 ;; Hardware stack levels required when called:    4
  2994 ;; This function calls:
  2995 ;;		Nothing
  2996 ;; This function is called by:
  2997 ;;		_park_search
  2998 ;;		_park_routine
  2999 ;;		_can_send
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text5
  3004  001858                     __ptext5:
  3005                           	opt stack 0
  3006  001858                     _CANsendMessage:
  3007                           	opt stack 23
  3008                           
  3009                           ;inc\CANlib.h: 296: unsigned long tamp;
  3010                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  3011                           
  3012                           ;incstack = 0
  3013  001858  010F               	movlb	15	; () banked
  3014  00185A  B740               	btfsc	64,3,b	;volatile
  3015  00185C  D13F               	goto	l363
  3016                           
  3017                           ; BSR set to: 15
  3018                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  3019  00185E  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  3020                           
  3021                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  3022  001862  0100               	movlb	0	; () banked
  3023  001864  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3024  001866  D003               	goto	l364
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  3028  001868  010F               	movlb	15	; () banked
  3029  00186A  8D45               	bsf	69,6,b	;volatile
  3030  00186C  D002               	goto	l365
  3031  00186E                     l364:
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;inc\CANlib.h: 302: else
  3035                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  3036  00186E  010F               	movlb	15	; () banked
  3037  001870  9D45               	bcf	69,6,b	;volatile
  3038  001872                     l365:
  3039                           
  3040                           ; BSR set to: 15
  3041                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  3042  001872  0100               	movlb	0	; () banked
  3043  001874  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3044  001876  D079               	goto	l366
  3045                           
  3046                           ; BSR set to: 0
  3047                           ;inc\CANlib.h: 306: {
  3048                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  3049  001878  0100               	movlb	0	; () banked
  3050  00187A  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3051  00187C  0100               	movlb	0	; () banked
  3052  00187E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3053  001880  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3054  001882  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3055  001884  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3056                           
  3057                           ; BSR set to: 0
  3058                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  3059  001886  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  3060                           
  3061                           ; BSR set to: 0
  3062                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  3063  00188A  0E00               	movlw	0
  3064  00188C  0100               	movlb	0	; () banked
  3065  00188E  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3066  001890  0100               	movlb	0	; () banked
  3067  001892  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3068  001894  0EFF               	movlw	255
  3069  001896  0100               	movlb	0	; () banked
  3070  001898  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3071  00189A  0100               	movlb	0	; () banked
  3072  00189C  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3073  00189E  0E00               	movlw	0
  3074  0018A0  0100               	movlb	0	; () banked
  3075  0018A2  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3076  0018A4  0100               	movlb	0	; () banked
  3077  0018A6  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3078  0018A8  0E00               	movlw	0
  3079  0018AA  0100               	movlb	0	; () banked
  3080  0018AC  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3081  0018AE  0100               	movlb	0	; () banked
  3082  0018B0  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3083                           
  3084                           ; BSR set to: 0
  3085                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  3086  0018B2  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3087  0018B6  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3088  0018BA  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3089  0018BE  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3090  0018C2  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3091  0018C6  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3092  0018CA  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3093  0018CE  0100               	movlb	0	; () banked
  3094  0018D0  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3095  0018D2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3096  0018D6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3097  0018DA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3098  0018DE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  3102  0018E2  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  3103                           
  3104                           ; BSR set to: 0
  3105                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  3106  0018E6  0E00               	movlw	0
  3107  0018E8  010F               	movlb	15	; () banked
  3108  0018EA  6F42               	movwf	66,b	;volatile
  3109                           
  3110                           ; BSR set to: 15
  3111                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  3112  0018EC  010F               	movlb	15	; () banked
  3113  0018EE  8742               	bsf	66,3,b	;volatile
  3114                           
  3115                           ; BSR set to: 15
  3116                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  3117  0018F0  0100               	movlb	0	; () banked
  3118  0018F2  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3119  0018F4  D002               	goto	l367
  3120                           
  3121                           ; BSR set to: 0
  3122                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  3123  0018F6  010F               	movlb	15	; () banked
  3124  0018F8  8142               	bsf	66,0,b	;volatile
  3125  0018FA                     l367:
  3126                           
  3127                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  3128  0018FA  0100               	movlb	0	; () banked
  3129  0018FC  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3130  0018FE  D002               	goto	l368
  3131                           
  3132                           ; BSR set to: 0
  3133                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  3134  001900  010F               	movlb	15	; () banked
  3135  001902  8342               	bsf	66,1,b	;volatile
  3136  001904                     l368:
  3137                           
  3138                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  3139  001904  0100               	movlb	0	; () banked
  3140  001906  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3141  001908  D002               	goto	l369
  3142                           
  3143                           ; BSR set to: 0
  3144                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  3145  00190A  010F               	movlb	15	; () banked
  3146  00190C  8B42               	bsf	66,5,b	;volatile
  3147  00190E                     l369:
  3148                           
  3149                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  3150  00190E  0100               	movlb	0	; () banked
  3151  001910  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3152  001912  D002               	goto	l370
  3153                           
  3154                           ; BSR set to: 0
  3155                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  3156  001914  010F               	movlb	15	; () banked
  3157  001916  8D42               	bsf	66,6,b	;volatile
  3158  001918                     l370:
  3159                           
  3160                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  3161  001918  0100               	movlb	0	; () banked
  3162  00191A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3163  00191C  D002               	goto	l6780
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  3167  00191E  010F               	movlb	15	; () banked
  3168  001920  8F42               	bsf	66,7,b	;volatile
  3169  001922                     l6780:
  3170                           
  3171                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  3172  001922  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3173  001926  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3174  00192A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3175  00192E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3176  001932  0E16               	movlw	22
  3177  001934  D006               	goto	u8570
  3178  001936                     u8575:
  3179  001936  0100               	movlb	0	; () banked
  3180  001938  90D8               	bcf	status,0,c
  3181  00193A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3182  00193C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3183  00193E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3184  001940  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3185  001942                     u8570:
  3186  001942  2EE8               	decfsz	wreg,f,c
  3187  001944  D7F8               	goto	u8575
  3188  001946  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3189  00194A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3190  00194E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3191  001952  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3192                           
  3193                           ; BSR set to: 0
  3194                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  3195  001956  0100               	movlb	0	; () banked
  3196  001958  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3197  00195A  0100               	movlb	0	; () banked
  3198  00195C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3199  00195E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3200  001960  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3201  001962  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3202                           
  3203                           ; BSR set to: 0
  3204                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  3205  001964  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3206                           
  3207                           ;inc\CANlib.h: 332: }
  3208  001968  D059               	goto	l6800
  3209  00196A                     l366:
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;inc\CANlib.h: 334: else
  3213                           ;inc\CANlib.h: 336: {
  3214                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  3215  00196A  010F               	movlb	15	; () banked
  3216  00196C  9742               	bcf	66,3,b	;volatile
  3217                           
  3218                           ; BSR set to: 15
  3219                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  3220  00196E  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3221  001972  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3222  001976  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3223  00197A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3224  00197E  0E04               	movlw	4
  3225  001980  D006               	goto	u8580
  3226  001982                     u8585:
  3227  001982  0100               	movlb	0	; () banked
  3228  001984  90D8               	bcf	status,0,c
  3229  001986  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3230  001988  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3231  00198A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3232  00198C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3233  00198E                     u8580:
  3234  00198E  2EE8               	decfsz	wreg,f,c
  3235  001990  D7F8               	goto	u8585
  3236  001992  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3237  001996  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3238  00199A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3239  00199E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  3243  0019A2  0100               	movlb	0	; () banked
  3244  0019A4  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3245  0019A6  0100               	movlb	0	; () banked
  3246  0019A8  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3247  0019AA  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3248  0019AC  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3249  0019AE  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  3253  0019B0  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  3257  0019B4  0E07               	movlw	7
  3258  0019B6  0100               	movlb	0	; () banked
  3259  0019B8  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3260  0019BA  0100               	movlb	0	; () banked
  3261  0019BC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3262  0019BE  0E00               	movlw	0
  3263  0019C0  0100               	movlb	0	; () banked
  3264  0019C2  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3265  0019C4  0100               	movlb	0	; () banked
  3266  0019C6  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3267  0019C8  0E00               	movlw	0
  3268  0019CA  0100               	movlb	0	; () banked
  3269  0019CC  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3270  0019CE  0100               	movlb	0	; () banked
  3271  0019D0  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3272  0019D2  0E00               	movlw	0
  3273  0019D4  0100               	movlb	0	; () banked
  3274  0019D6  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3275  0019D8  0100               	movlb	0	; () banked
  3276  0019DA  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3277                           
  3278                           ; BSR set to: 0
  3279                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  3280  0019DC  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3281  0019E0  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3282  0019E4  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3283  0019E8  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3284  0019EC  0E05               	movlw	5
  3285  0019EE                     u8595:
  3286  0019EE  90D8               	bcf	status,0,c
  3287  0019F0  0100               	movlb	0	; () banked
  3288  0019F2  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3289  0019F4  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3290  0019F6  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3291  0019F8  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3292  0019FA  2EE8               	decfsz	wreg,f,c
  3293  0019FC  D7F8               	goto	u8595
  3294  0019FE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3295  001A02  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3296  001A06  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3297  001A0A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  3301  001A0E  010F               	movlb	15	; () banked
  3302  001A10  5142               	movf	66,w,b	;volatile
  3303  001A12  0B1F               	andlw	31
  3304  001A14  010F               	movlb	15	; () banked
  3305  001A16  6F42               	movwf	66,b	;volatile
  3306                           
  3307                           ; BSR set to: 15
  3308                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  3309  001A18  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  3310  001A1C                     l6800:
  3311                           
  3312                           ;inc\CANlib.h: 347: }
  3313                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  3314  001A1C  0100               	movlb	0	; () banked
  3315  001A1E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3316  001A20  D003               	goto	l373
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  3320  001A22  010F               	movlb	15	; () banked
  3321  001A24  8140               	bsf	64,0,b	;volatile
  3322  001A26  D002               	goto	l374
  3323  001A28                     l373:
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;inc\CANlib.h: 351: else
  3327                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  3328  001A28  010F               	movlb	15	; () banked
  3329  001A2A  9140               	bcf	64,0,b	;volatile
  3330  001A2C                     l374:
  3331                           
  3332                           ; BSR set to: 15
  3333                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  3334  001A2C  0100               	movlb	0	; () banked
  3335  001A2E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  3336  001A30  D003               	goto	l375
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  3340  001A32  010F               	movlb	15	; () banked
  3341  001A34  8340               	bsf	64,1,b	;volatile
  3342  001A36  D002               	goto	l6806
  3343  001A38                     l375:
  3344                           
  3345                           ; BSR set to: 0
  3346                           ;inc\CANlib.h: 355: else
  3347                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  3348  001A38  010F               	movlb	15	; () banked
  3349  001A3A  9340               	bcf	64,1,b	;volatile
  3350  001A3C                     l6806:
  3351                           
  3352                           ; BSR set to: 15
  3353                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  3354  001A3C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  3355  001A40  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3356  001A44  50DF               	movf	indf2,w,c
  3357  001A46  010F               	movlb	15	; () banked
  3358  001A48  6F46               	movwf	70,b	;volatile
  3359                           
  3360                           ; BSR set to: 15
  3361                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  3362  001A4A  0100               	movlb	0	; () banked
  3363  001A4C  EE20 F001          	lfsr	2,1
  3364  001A50  517B               	movf	CANsendMessage@data& (0+255),w,b
  3365  001A52  26D9               	addwf	fsr2l,f,c
  3366  001A54  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3367  001A56  22DA               	addwfc	fsr2h,f,c
  3368  001A58  50DF               	movf	indf2,w,c
  3369  001A5A  010F               	movlb	15	; () banked
  3370  001A5C  6F47               	movwf	71,b	;volatile
  3371                           
  3372                           ; BSR set to: 15
  3373                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  3374  001A5E  0100               	movlb	0	; () banked
  3375  001A60  EE20 F002          	lfsr	2,2
  3376  001A64  517B               	movf	CANsendMessage@data& (0+255),w,b
  3377  001A66  26D9               	addwf	fsr2l,f,c
  3378  001A68  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3379  001A6A  22DA               	addwfc	fsr2h,f,c
  3380  001A6C  50DF               	movf	indf2,w,c
  3381  001A6E  010F               	movlb	15	; () banked
  3382  001A70  6F48               	movwf	72,b	;volatile
  3383                           
  3384                           ; BSR set to: 15
  3385                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  3386  001A72  0100               	movlb	0	; () banked
  3387  001A74  EE20 F003          	lfsr	2,3
  3388  001A78  517B               	movf	CANsendMessage@data& (0+255),w,b
  3389  001A7A  26D9               	addwf	fsr2l,f,c
  3390  001A7C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3391  001A7E  22DA               	addwfc	fsr2h,f,c
  3392  001A80  50DF               	movf	indf2,w,c
  3393  001A82  010F               	movlb	15	; () banked
  3394  001A84  6F49               	movwf	73,b	;volatile
  3395                           
  3396                           ; BSR set to: 15
  3397                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  3398  001A86  0100               	movlb	0	; () banked
  3399  001A88  EE20 F004          	lfsr	2,4
  3400  001A8C  517B               	movf	CANsendMessage@data& (0+255),w,b
  3401  001A8E  26D9               	addwf	fsr2l,f,c
  3402  001A90  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3403  001A92  22DA               	addwfc	fsr2h,f,c
  3404  001A94  50DF               	movf	indf2,w,c
  3405  001A96  010F               	movlb	15	; () banked
  3406  001A98  6F4A               	movwf	74,b	;volatile
  3407                           
  3408                           ; BSR set to: 15
  3409                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  3410  001A9A  0100               	movlb	0	; () banked
  3411  001A9C  EE20 F005          	lfsr	2,5
  3412  001AA0  517B               	movf	CANsendMessage@data& (0+255),w,b
  3413  001AA2  26D9               	addwf	fsr2l,f,c
  3414  001AA4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3415  001AA6  22DA               	addwfc	fsr2h,f,c
  3416  001AA8  50DF               	movf	indf2,w,c
  3417  001AAA  010F               	movlb	15	; () banked
  3418  001AAC  6F4B               	movwf	75,b	;volatile
  3419                           
  3420                           ; BSR set to: 15
  3421                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  3422  001AAE  0100               	movlb	0	; () banked
  3423  001AB0  EE20 F006          	lfsr	2,6
  3424  001AB4  517B               	movf	CANsendMessage@data& (0+255),w,b
  3425  001AB6  26D9               	addwf	fsr2l,f,c
  3426  001AB8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3427  001ABA  22DA               	addwfc	fsr2h,f,c
  3428  001ABC  50DF               	movf	indf2,w,c
  3429  001ABE  010F               	movlb	15	; () banked
  3430  001AC0  6F4C               	movwf	76,b	;volatile
  3431                           
  3432                           ; BSR set to: 15
  3433                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  3434  001AC2  0100               	movlb	0	; () banked
  3435  001AC4  EE20 F007          	lfsr	2,7
  3436  001AC8  517B               	movf	CANsendMessage@data& (0+255),w,b
  3437  001ACA  26D9               	addwf	fsr2l,f,c
  3438  001ACC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3439  001ACE  22DA               	addwfc	fsr2h,f,c
  3440  001AD0  50DF               	movf	indf2,w,c
  3441  001AD2  010F               	movlb	15	; () banked
  3442  001AD4  6F4D               	movwf	77,b	;volatile
  3443                           
  3444                           ; BSR set to: 15
  3445                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  3446  001AD6  010F               	movlb	15	; () banked
  3447  001AD8  8740               	bsf	64,3,b	;volatile
  3448                           
  3449                           ; BSR set to: 15
  3450                           ;inc\CANlib.h: 368: return;
  3451  001ADA  0012               	return	
  3452  001ADC                     l363:
  3453                           
  3454                           ; BSR set to: 15
  3455                           ;inc\CANlib.h: 369: }
  3456                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  3457  001ADC  010F               	movlb	15	; () banked
  3458  001ADE  B730               	btfsc	48,3,b	;volatile
  3459  001AE0  D13F               	goto	l378
  3460                           
  3461                           ; BSR set to: 15
  3462                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  3463  001AE2  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  3464                           
  3465                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  3466  001AE6  0100               	movlb	0	; () banked
  3467  001AE8  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3468  001AEA  D003               	goto	l379
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  3472  001AEC  010F               	movlb	15	; () banked
  3473  001AEE  8D35               	bsf	53,6,b	;volatile
  3474  001AF0  D002               	goto	l380
  3475  001AF2                     l379:
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;inc\CANlib.h: 378: else
  3479                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  3480  001AF2  010F               	movlb	15	; () banked
  3481  001AF4  9D35               	bcf	53,6,b	;volatile
  3482  001AF6                     l380:
  3483                           
  3484                           ; BSR set to: 15
  3485                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  3486  001AF6  0100               	movlb	0	; () banked
  3487  001AF8  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3488  001AFA  D079               	goto	l381
  3489                           
  3490                           ; BSR set to: 0
  3491                           ;inc\CANlib.h: 382: {
  3492                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  3493  001AFC  0100               	movlb	0	; () banked
  3494  001AFE  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3495  001B00  0100               	movlb	0	; () banked
  3496  001B02  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3497  001B04  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3498  001B06  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3499  001B08  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3500                           
  3501                           ; BSR set to: 0
  3502                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  3503  001B0A  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  3507  001B0E  0E00               	movlw	0
  3508  001B10  0100               	movlb	0	; () banked
  3509  001B12  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3510  001B14  0100               	movlb	0	; () banked
  3511  001B16  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3512  001B18  0EFF               	movlw	255
  3513  001B1A  0100               	movlb	0	; () banked
  3514  001B1C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3515  001B1E  0100               	movlb	0	; () banked
  3516  001B20  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3517  001B22  0E00               	movlw	0
  3518  001B24  0100               	movlb	0	; () banked
  3519  001B26  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3520  001B28  0100               	movlb	0	; () banked
  3521  001B2A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3522  001B2C  0E00               	movlw	0
  3523  001B2E  0100               	movlb	0	; () banked
  3524  001B30  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3525  001B32  0100               	movlb	0	; () banked
  3526  001B34  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3527                           
  3528                           ; BSR set to: 0
  3529                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  3530  001B36  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3531  001B3A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3532  001B3E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3533  001B42  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3534  001B46  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3535  001B4A  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3536  001B4E  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3537  001B52  0100               	movlb	0	; () banked
  3538  001B54  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3539  001B56  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3540  001B5A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3541  001B5E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3542  001B62  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3543                           
  3544                           ; BSR set to: 0
  3545                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  3546  001B66  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  3547                           
  3548                           ; BSR set to: 0
  3549                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  3550  001B6A  0E00               	movlw	0
  3551  001B6C  010F               	movlb	15	; () banked
  3552  001B6E  6F32               	movwf	50,b	;volatile
  3553                           
  3554                           ; BSR set to: 15
  3555                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  3556  001B70  010F               	movlb	15	; () banked
  3557  001B72  8732               	bsf	50,3,b	;volatile
  3558                           
  3559                           ; BSR set to: 15
  3560                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  3561  001B74  0100               	movlb	0	; () banked
  3562  001B76  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3563  001B78  D002               	goto	l382
  3564                           
  3565                           ; BSR set to: 0
  3566                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  3567  001B7A  010F               	movlb	15	; () banked
  3568  001B7C  8132               	bsf	50,0,b	;volatile
  3569  001B7E                     l382:
  3570                           
  3571                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  3572  001B7E  0100               	movlb	0	; () banked
  3573  001B80  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3574  001B82  D002               	goto	l383
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  3578  001B84  010F               	movlb	15	; () banked
  3579  001B86  8332               	bsf	50,1,b	;volatile
  3580  001B88                     l383:
  3581                           
  3582                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  3583  001B88  0100               	movlb	0	; () banked
  3584  001B8A  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3585  001B8C  D002               	goto	l384
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  3589  001B8E  010F               	movlb	15	; () banked
  3590  001B90  8B32               	bsf	50,5,b	;volatile
  3591  001B92                     l384:
  3592                           
  3593                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  3594  001B92  0100               	movlb	0	; () banked
  3595  001B94  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3596  001B96  D002               	goto	l385
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  3600  001B98  010F               	movlb	15	; () banked
  3601  001B9A  8D32               	bsf	50,6,b	;volatile
  3602  001B9C                     l385:
  3603                           
  3604                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  3605  001B9C  0100               	movlb	0	; () banked
  3606  001B9E  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3607  001BA0  D002               	goto	l6856
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  3611  001BA2  010F               	movlb	15	; () banked
  3612  001BA4  8F32               	bsf	50,7,b	;volatile
  3613  001BA6                     l6856:
  3614                           
  3615                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  3616  001BA6  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3617  001BAA  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3618  001BAE  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3619  001BB2  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3620  001BB6  0E16               	movlw	22
  3621  001BB8  D006               	goto	u8700
  3622  001BBA                     u8705:
  3623  001BBA  0100               	movlb	0	; () banked
  3624  001BBC  90D8               	bcf	status,0,c
  3625  001BBE  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3626  001BC0  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3627  001BC2  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3628  001BC4  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3629  001BC6                     u8700:
  3630  001BC6  2EE8               	decfsz	wreg,f,c
  3631  001BC8  D7F8               	goto	u8705
  3632  001BCA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3633  001BCE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3634  001BD2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3635  001BD6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  3639  001BDA  0100               	movlb	0	; () banked
  3640  001BDC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3641  001BDE  0100               	movlb	0	; () banked
  3642  001BE0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3643  001BE2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3644  001BE4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3645  001BE6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  3649  001BE8  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3650                           
  3651                           ;inc\CANlib.h: 407: }
  3652  001BEC  D059               	goto	l6876
  3653  001BEE                     l381:
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;inc\CANlib.h: 409: else
  3657                           ;inc\CANlib.h: 411: {
  3658                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  3659  001BEE  010F               	movlb	15	; () banked
  3660  001BF0  9732               	bcf	50,3,b	;volatile
  3661                           
  3662                           ; BSR set to: 15
  3663                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  3664  001BF2  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3665  001BF6  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3666  001BFA  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3667  001BFE  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3668  001C02  0E04               	movlw	4
  3669  001C04  D006               	goto	u8710
  3670  001C06                     u8715:
  3671  001C06  0100               	movlb	0	; () banked
  3672  001C08  90D8               	bcf	status,0,c
  3673  001C0A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3674  001C0C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3675  001C0E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3676  001C10  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3677  001C12                     u8710:
  3678  001C12  2EE8               	decfsz	wreg,f,c
  3679  001C14  D7F8               	goto	u8715
  3680  001C16  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3681  001C1A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3682  001C1E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3683  001C22  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3684                           
  3685                           ; BSR set to: 0
  3686                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  3687  001C26  0100               	movlb	0	; () banked
  3688  001C28  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3689  001C2A  0100               	movlb	0	; () banked
  3690  001C2C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3691  001C2E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3692  001C30  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3693  001C32  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  3697  001C34  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  3701  001C38  0E07               	movlw	7
  3702  001C3A  0100               	movlb	0	; () banked
  3703  001C3C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3704  001C3E  0100               	movlb	0	; () banked
  3705  001C40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3706  001C42  0E00               	movlw	0
  3707  001C44  0100               	movlb	0	; () banked
  3708  001C46  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3709  001C48  0100               	movlb	0	; () banked
  3710  001C4A  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3711  001C4C  0E00               	movlw	0
  3712  001C4E  0100               	movlb	0	; () banked
  3713  001C50  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3714  001C52  0100               	movlb	0	; () banked
  3715  001C54  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3716  001C56  0E00               	movlw	0
  3717  001C58  0100               	movlb	0	; () banked
  3718  001C5A  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3719  001C5C  0100               	movlb	0	; () banked
  3720  001C5E  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  3724  001C60  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3725  001C64  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3726  001C68  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3727  001C6C  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3728  001C70  0E05               	movlw	5
  3729  001C72                     u8725:
  3730  001C72  90D8               	bcf	status,0,c
  3731  001C74  0100               	movlb	0	; () banked
  3732  001C76  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3733  001C78  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3734  001C7A  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3735  001C7C  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3736  001C7E  2EE8               	decfsz	wreg,f,c
  3737  001C80  D7F8               	goto	u8725
  3738  001C82  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3739  001C86  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3740  001C8A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3741  001C8E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  3745  001C92  010F               	movlb	15	; () banked
  3746  001C94  5132               	movf	50,w,b	;volatile
  3747  001C96  0B1F               	andlw	31
  3748  001C98  010F               	movlb	15	; () banked
  3749  001C9A  6F32               	movwf	50,b	;volatile
  3750                           
  3751                           ; BSR set to: 15
  3752                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  3753  001C9C  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  3754  001CA0                     l6876:
  3755                           
  3756                           ;inc\CANlib.h: 422: }
  3757                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  3758  001CA0  0100               	movlb	0	; () banked
  3759  001CA2  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3760  001CA4  D003               	goto	l388
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  3764  001CA6  010F               	movlb	15	; () banked
  3765  001CA8  8130               	bsf	48,0,b	;volatile
  3766  001CAA  D002               	goto	l389
  3767  001CAC                     l388:
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;inc\CANlib.h: 426: else
  3771                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  3772  001CAC  010F               	movlb	15	; () banked
  3773  001CAE  9130               	bcf	48,0,b	;volatile
  3774  001CB0                     l389:
  3775                           
  3776                           ; BSR set to: 15
  3777                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  3778  001CB0  0100               	movlb	0	; () banked
  3779  001CB2  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  3780  001CB4  D003               	goto	l390
  3781                           
  3782                           ; BSR set to: 0
  3783                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  3784  001CB6  010F               	movlb	15	; () banked
  3785  001CB8  8330               	bsf	48,1,b	;volatile
  3786  001CBA  D002               	goto	l6882
  3787  001CBC                     l390:
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;inc\CANlib.h: 430: else
  3791                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  3792  001CBC  010F               	movlb	15	; () banked
  3793  001CBE  9330               	bcf	48,1,b	;volatile
  3794  001CC0                     l6882:
  3795                           
  3796                           ; BSR set to: 15
  3797                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  3798  001CC0  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  3799  001CC4  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3800  001CC8  50DF               	movf	indf2,w,c
  3801  001CCA  010F               	movlb	15	; () banked
  3802  001CCC  6F36               	movwf	54,b	;volatile
  3803                           
  3804                           ; BSR set to: 15
  3805                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  3806  001CCE  0100               	movlb	0	; () banked
  3807  001CD0  EE20 F001          	lfsr	2,1
  3808  001CD4  517B               	movf	CANsendMessage@data& (0+255),w,b
  3809  001CD6  26D9               	addwf	fsr2l,f,c
  3810  001CD8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3811  001CDA  22DA               	addwfc	fsr2h,f,c
  3812  001CDC  50DF               	movf	indf2,w,c
  3813  001CDE  010F               	movlb	15	; () banked
  3814  001CE0  6F37               	movwf	55,b	;volatile
  3815                           
  3816                           ; BSR set to: 15
  3817                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  3818  001CE2  0100               	movlb	0	; () banked
  3819  001CE4  EE20 F002          	lfsr	2,2
  3820  001CE8  517B               	movf	CANsendMessage@data& (0+255),w,b
  3821  001CEA  26D9               	addwf	fsr2l,f,c
  3822  001CEC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3823  001CEE  22DA               	addwfc	fsr2h,f,c
  3824  001CF0  50DF               	movf	indf2,w,c
  3825  001CF2  010F               	movlb	15	; () banked
  3826  001CF4  6F38               	movwf	56,b	;volatile
  3827                           
  3828                           ; BSR set to: 15
  3829                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  3830  001CF6  0100               	movlb	0	; () banked
  3831  001CF8  EE20 F003          	lfsr	2,3
  3832  001CFC  517B               	movf	CANsendMessage@data& (0+255),w,b
  3833  001CFE  26D9               	addwf	fsr2l,f,c
  3834  001D00  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3835  001D02  22DA               	addwfc	fsr2h,f,c
  3836  001D04  50DF               	movf	indf2,w,c
  3837  001D06  010F               	movlb	15	; () banked
  3838  001D08  6F39               	movwf	57,b	;volatile
  3839                           
  3840                           ; BSR set to: 15
  3841                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  3842  001D0A  0100               	movlb	0	; () banked
  3843  001D0C  EE20 F004          	lfsr	2,4
  3844  001D10  517B               	movf	CANsendMessage@data& (0+255),w,b
  3845  001D12  26D9               	addwf	fsr2l,f,c
  3846  001D14  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3847  001D16  22DA               	addwfc	fsr2h,f,c
  3848  001D18  50DF               	movf	indf2,w,c
  3849  001D1A  010F               	movlb	15	; () banked
  3850  001D1C  6F3A               	movwf	58,b	;volatile
  3851                           
  3852                           ; BSR set to: 15
  3853                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  3854  001D1E  0100               	movlb	0	; () banked
  3855  001D20  EE20 F005          	lfsr	2,5
  3856  001D24  517B               	movf	CANsendMessage@data& (0+255),w,b
  3857  001D26  26D9               	addwf	fsr2l,f,c
  3858  001D28  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3859  001D2A  22DA               	addwfc	fsr2h,f,c
  3860  001D2C  50DF               	movf	indf2,w,c
  3861  001D2E  010F               	movlb	15	; () banked
  3862  001D30  6F3B               	movwf	59,b	;volatile
  3863                           
  3864                           ; BSR set to: 15
  3865                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  3866  001D32  0100               	movlb	0	; () banked
  3867  001D34  EE20 F006          	lfsr	2,6
  3868  001D38  517B               	movf	CANsendMessage@data& (0+255),w,b
  3869  001D3A  26D9               	addwf	fsr2l,f,c
  3870  001D3C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3871  001D3E  22DA               	addwfc	fsr2h,f,c
  3872  001D40  50DF               	movf	indf2,w,c
  3873  001D42  010F               	movlb	15	; () banked
  3874  001D44  6F3C               	movwf	60,b	;volatile
  3875                           
  3876                           ; BSR set to: 15
  3877                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  3878  001D46  0100               	movlb	0	; () banked
  3879  001D48  EE20 F007          	lfsr	2,7
  3880  001D4C  517B               	movf	CANsendMessage@data& (0+255),w,b
  3881  001D4E  26D9               	addwf	fsr2l,f,c
  3882  001D50  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3883  001D52  22DA               	addwfc	fsr2h,f,c
  3884  001D54  50DF               	movf	indf2,w,c
  3885  001D56  010F               	movlb	15	; () banked
  3886  001D58  6F3D               	movwf	61,b	;volatile
  3887                           
  3888                           ; BSR set to: 15
  3889                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  3890  001D5A  010F               	movlb	15	; () banked
  3891  001D5C  8730               	bsf	48,3,b	;volatile
  3892                           
  3893                           ; BSR set to: 15
  3894                           ;inc\CANlib.h: 444: return;
  3895  001D5E  0012               	return	
  3896  001D60                     l378:
  3897                           
  3898                           ; BSR set to: 15
  3899                           ;inc\CANlib.h: 445: }
  3900                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  3901  001D60  010F               	movlb	15	; () banked
  3902  001D62  B720               	btfsc	32,3,b	;volatile
  3903  001D64  0012               	return	
  3904                           
  3905                           ; BSR set to: 15
  3906                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  3907  001D66  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  3908                           
  3909                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  3910  001D6A  0100               	movlb	0	; () banked
  3911  001D6C  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3912  001D6E  D003               	goto	l393
  3913                           
  3914                           ; BSR set to: 0
  3915                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  3916  001D70  010F               	movlb	15	; () banked
  3917  001D72  8D25               	bsf	37,6,b	;volatile
  3918  001D74  D002               	goto	l394
  3919  001D76                     l393:
  3920                           
  3921                           ; BSR set to: 0
  3922                           ;inc\CANlib.h: 454: else
  3923                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  3924  001D76  010F               	movlb	15	; () banked
  3925  001D78  9D25               	bcf	37,6,b	;volatile
  3926  001D7A                     l394:
  3927                           
  3928                           ; BSR set to: 15
  3929                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  3930  001D7A  0100               	movlb	0	; () banked
  3931  001D7C  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3932  001D7E  D079               	goto	l395
  3933                           
  3934                           ; BSR set to: 0
  3935                           ;inc\CANlib.h: 458: {
  3936                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
  3937  001D80  0100               	movlb	0	; () banked
  3938  001D82  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3939  001D84  0100               	movlb	0	; () banked
  3940  001D86  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3941  001D88  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3942  001D8A  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3943  001D8C  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
  3947  001D8E  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  3948                           
  3949                           ; BSR set to: 0
  3950                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
  3951  001D92  0E00               	movlw	0
  3952  001D94  0100               	movlb	0	; () banked
  3953  001D96  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3954  001D98  0100               	movlb	0	; () banked
  3955  001D9A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3956  001D9C  0EFF               	movlw	255
  3957  001D9E  0100               	movlb	0	; () banked
  3958  001DA0  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3959  001DA2  0100               	movlb	0	; () banked
  3960  001DA4  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3961  001DA6  0E00               	movlw	0
  3962  001DA8  0100               	movlb	0	; () banked
  3963  001DAA  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3964  001DAC  0100               	movlb	0	; () banked
  3965  001DAE  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3966  001DB0  0E00               	movlw	0
  3967  001DB2  0100               	movlb	0	; () banked
  3968  001DB4  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3969  001DB6  0100               	movlb	0	; () banked
  3970  001DB8  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
  3974  001DBA  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3975  001DBE  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3976  001DC2  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3977  001DC6  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3978  001DCA  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3979  001DCE  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3980  001DD2  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3981  001DD6  0100               	movlb	0	; () banked
  3982  001DD8  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3983  001DDA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3984  001DDE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3985  001DE2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3986  001DE6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3987                           
  3988                           ; BSR set to: 0
  3989                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
  3990  001DEA  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  3991                           
  3992                           ; BSR set to: 0
  3993                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
  3994  001DEE  0E00               	movlw	0
  3995  001DF0  010F               	movlb	15	; () banked
  3996  001DF2  6F22               	movwf	34,b	;volatile
  3997                           
  3998                           ; BSR set to: 15
  3999                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
  4000  001DF4  010F               	movlb	15	; () banked
  4001  001DF6  8722               	bsf	34,3,b	;volatile
  4002                           
  4003                           ; BSR set to: 15
  4004                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
  4005  001DF8  0100               	movlb	0	; () banked
  4006  001DFA  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  4007  001DFC  D002               	goto	l396
  4008                           
  4009                           ; BSR set to: 0
  4010                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
  4011  001DFE  010F               	movlb	15	; () banked
  4012  001E00  8122               	bsf	34,0,b	;volatile
  4013  001E02                     l396:
  4014                           
  4015                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
  4016  001E02  0100               	movlb	0	; () banked
  4017  001E04  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  4018  001E06  D002               	goto	l397
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
  4022  001E08  010F               	movlb	15	; () banked
  4023  001E0A  8322               	bsf	34,1,b	;volatile
  4024  001E0C                     l397:
  4025                           
  4026                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
  4027  001E0C  0100               	movlb	0	; () banked
  4028  001E0E  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  4029  001E10  D002               	goto	l398
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
  4033  001E12  010F               	movlb	15	; () banked
  4034  001E14  8B22               	bsf	34,5,b	;volatile
  4035  001E16                     l398:
  4036                           
  4037                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
  4038  001E16  0100               	movlb	0	; () banked
  4039  001E18  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  4040  001E1A  D002               	goto	l399
  4041                           
  4042                           ; BSR set to: 0
  4043                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
  4044  001E1C  010F               	movlb	15	; () banked
  4045  001E1E  8D22               	bsf	34,6,b	;volatile
  4046  001E20                     l399:
  4047                           
  4048                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
  4049  001E20  0100               	movlb	0	; () banked
  4050  001E22  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  4051  001E24  D002               	goto	l6932
  4052                           
  4053                           ; BSR set to: 0
  4054                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
  4055  001E26  010F               	movlb	15	; () banked
  4056  001E28  8F22               	bsf	34,7,b	;volatile
  4057  001E2A                     l6932:
  4058                           
  4059                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
  4060  001E2A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4061  001E2E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4062  001E32  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4063  001E36  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4064  001E3A  0E16               	movlw	22
  4065  001E3C  D006               	goto	u8830
  4066  001E3E                     u8835:
  4067  001E3E  0100               	movlb	0	; () banked
  4068  001E40  90D8               	bcf	status,0,c
  4069  001E42  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4070  001E44  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4071  001E46  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4072  001E48  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4073  001E4A                     u8830:
  4074  001E4A  2EE8               	decfsz	wreg,f,c
  4075  001E4C  D7F8               	goto	u8835
  4076  001E4E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4077  001E52  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4078  001E56  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4079  001E5A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
  4083  001E5E  0100               	movlb	0	; () banked
  4084  001E60  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4085  001E62  0100               	movlb	0	; () banked
  4086  001E64  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4087  001E66  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4088  001E68  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4089  001E6A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4090                           
  4091                           ; BSR set to: 0
  4092                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
  4093  001E6C  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4094                           
  4095                           ;inc\CANlib.h: 483: }
  4096  001E70  D059               	goto	l6952
  4097  001E72                     l395:
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;inc\CANlib.h: 485: else
  4101                           ;inc\CANlib.h: 487: {
  4102                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
  4103  001E72  010F               	movlb	15	; () banked
  4104  001E74  9722               	bcf	34,3,b	;volatile
  4105                           
  4106                           ; BSR set to: 15
  4107                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
  4108  001E76  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4109  001E7A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4110  001E7E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4111  001E82  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4112  001E86  0E04               	movlw	4
  4113  001E88  D006               	goto	u8840
  4114  001E8A                     u8845:
  4115  001E8A  0100               	movlb	0	; () banked
  4116  001E8C  90D8               	bcf	status,0,c
  4117  001E8E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4118  001E90  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4119  001E92  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4120  001E94  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4121  001E96                     u8840:
  4122  001E96  2EE8               	decfsz	wreg,f,c
  4123  001E98  D7F8               	goto	u8845
  4124  001E9A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4125  001E9E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4126  001EA2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4127  001EA6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4128                           
  4129                           ; BSR set to: 0
  4130                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
  4131  001EAA  0100               	movlb	0	; () banked
  4132  001EAC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4133  001EAE  0100               	movlb	0	; () banked
  4134  001EB0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4135  001EB2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4136  001EB4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4137  001EB6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
  4141  001EB8  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
  4145  001EBC  0E07               	movlw	7
  4146  001EBE  0100               	movlb	0	; () banked
  4147  001EC0  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4148  001EC2  0100               	movlb	0	; () banked
  4149  001EC4  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4150  001EC6  0E00               	movlw	0
  4151  001EC8  0100               	movlb	0	; () banked
  4152  001ECA  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4153  001ECC  0100               	movlb	0	; () banked
  4154  001ECE  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4155  001ED0  0E00               	movlw	0
  4156  001ED2  0100               	movlb	0	; () banked
  4157  001ED4  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4158  001ED6  0100               	movlb	0	; () banked
  4159  001ED8  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4160  001EDA  0E00               	movlw	0
  4161  001EDC  0100               	movlb	0	; () banked
  4162  001EDE  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4163  001EE0  0100               	movlb	0	; () banked
  4164  001EE2  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;inc\CANlib.h: 495: tamp = tamp << 5;
  4168  001EE4  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4169  001EE8  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4170  001EEC  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4171  001EF0  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4172  001EF4  0E05               	movlw	5
  4173  001EF6                     u8855:
  4174  001EF6  90D8               	bcf	status,0,c
  4175  001EF8  0100               	movlb	0	; () banked
  4176  001EFA  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  4177  001EFC  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  4178  001EFE  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  4179  001F00  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  4180  001F02  2EE8               	decfsz	wreg,f,c
  4181  001F04  D7F8               	goto	u8855
  4182  001F06  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4183  001F0A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4184  001F0E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4185  001F12  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
  4189  001F16  010F               	movlb	15	; () banked
  4190  001F18  5122               	movf	34,w,b	;volatile
  4191  001F1A  0B1F               	andlw	31
  4192  001F1C  010F               	movlb	15	; () banked
  4193  001F1E  6F22               	movwf	34,b	;volatile
  4194                           
  4195                           ; BSR set to: 15
  4196                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
  4197  001F20  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  4198  001F24                     l6952:
  4199                           
  4200                           ;inc\CANlib.h: 498: }
  4201                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
  4202  001F24  0100               	movlb	0	; () banked
  4203  001F26  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  4204  001F28  D003               	goto	l402
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
  4208  001F2A  010F               	movlb	15	; () banked
  4209  001F2C  8120               	bsf	32,0,b	;volatile
  4210  001F2E  D002               	goto	l403
  4211  001F30                     l402:
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;inc\CANlib.h: 502: else
  4215                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
  4216  001F30  010F               	movlb	15	; () banked
  4217  001F32  9120               	bcf	32,0,b	;volatile
  4218  001F34                     l403:
  4219                           
  4220                           ; BSR set to: 15
  4221                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
  4222  001F34  0100               	movlb	0	; () banked
  4223  001F36  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  4224  001F38  D003               	goto	l404
  4225                           
  4226                           ; BSR set to: 0
  4227                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
  4228  001F3A  010F               	movlb	15	; () banked
  4229  001F3C  8320               	bsf	32,1,b	;volatile
  4230  001F3E  D002               	goto	l6958
  4231  001F40                     l404:
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;inc\CANlib.h: 506: else
  4235                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
  4236  001F40  010F               	movlb	15	; () banked
  4237  001F42  9320               	bcf	32,1,b	;volatile
  4238  001F44                     l6958:
  4239                           
  4240                           ; BSR set to: 15
  4241                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
  4242  001F44  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  4243  001F48  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4244  001F4C  50DF               	movf	indf2,w,c
  4245  001F4E  010F               	movlb	15	; () banked
  4246  001F50  6F26               	movwf	38,b	;volatile
  4247                           
  4248                           ; BSR set to: 15
  4249                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
  4250  001F52  0100               	movlb	0	; () banked
  4251  001F54  EE20 F001          	lfsr	2,1
  4252  001F58  517B               	movf	CANsendMessage@data& (0+255),w,b
  4253  001F5A  26D9               	addwf	fsr2l,f,c
  4254  001F5C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4255  001F5E  22DA               	addwfc	fsr2h,f,c
  4256  001F60  50DF               	movf	indf2,w,c
  4257  001F62  010F               	movlb	15	; () banked
  4258  001F64  6F27               	movwf	39,b	;volatile
  4259                           
  4260                           ; BSR set to: 15
  4261                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
  4262  001F66  0100               	movlb	0	; () banked
  4263  001F68  EE20 F002          	lfsr	2,2
  4264  001F6C  517B               	movf	CANsendMessage@data& (0+255),w,b
  4265  001F6E  26D9               	addwf	fsr2l,f,c
  4266  001F70  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4267  001F72  22DA               	addwfc	fsr2h,f,c
  4268  001F74  50DF               	movf	indf2,w,c
  4269  001F76  010F               	movlb	15	; () banked
  4270  001F78  6F28               	movwf	40,b	;volatile
  4271                           
  4272                           ; BSR set to: 15
  4273                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
  4274  001F7A  0100               	movlb	0	; () banked
  4275  001F7C  EE20 F003          	lfsr	2,3
  4276  001F80  517B               	movf	CANsendMessage@data& (0+255),w,b
  4277  001F82  26D9               	addwf	fsr2l,f,c
  4278  001F84  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4279  001F86  22DA               	addwfc	fsr2h,f,c
  4280  001F88  50DF               	movf	indf2,w,c
  4281  001F8A  010F               	movlb	15	; () banked
  4282  001F8C  6F29               	movwf	41,b	;volatile
  4283                           
  4284                           ; BSR set to: 15
  4285                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
  4286  001F8E  0100               	movlb	0	; () banked
  4287  001F90  EE20 F004          	lfsr	2,4
  4288  001F94  517B               	movf	CANsendMessage@data& (0+255),w,b
  4289  001F96  26D9               	addwf	fsr2l,f,c
  4290  001F98  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4291  001F9A  22DA               	addwfc	fsr2h,f,c
  4292  001F9C  50DF               	movf	indf2,w,c
  4293  001F9E  010F               	movlb	15	; () banked
  4294  001FA0  6F2A               	movwf	42,b	;volatile
  4295                           
  4296                           ; BSR set to: 15
  4297                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
  4298  001FA2  0100               	movlb	0	; () banked
  4299  001FA4  EE20 F005          	lfsr	2,5
  4300  001FA8  517B               	movf	CANsendMessage@data& (0+255),w,b
  4301  001FAA  26D9               	addwf	fsr2l,f,c
  4302  001FAC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4303  001FAE  22DA               	addwfc	fsr2h,f,c
  4304  001FB0  50DF               	movf	indf2,w,c
  4305  001FB2  010F               	movlb	15	; () banked
  4306  001FB4  6F2B               	movwf	43,b	;volatile
  4307                           
  4308                           ; BSR set to: 15
  4309                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
  4310  001FB6  0100               	movlb	0	; () banked
  4311  001FB8  EE20 F006          	lfsr	2,6
  4312  001FBC  517B               	movf	CANsendMessage@data& (0+255),w,b
  4313  001FBE  26D9               	addwf	fsr2l,f,c
  4314  001FC0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4315  001FC2  22DA               	addwfc	fsr2h,f,c
  4316  001FC4  50DF               	movf	indf2,w,c
  4317  001FC6  010F               	movlb	15	; () banked
  4318  001FC8  6F2C               	movwf	44,b	;volatile
  4319                           
  4320                           ; BSR set to: 15
  4321                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
  4322  001FCA  0100               	movlb	0	; () banked
  4323  001FCC  EE20 F007          	lfsr	2,7
  4324  001FD0  517B               	movf	CANsendMessage@data& (0+255),w,b
  4325  001FD2  26D9               	addwf	fsr2l,f,c
  4326  001FD4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4327  001FD6  22DA               	addwfc	fsr2h,f,c
  4328  001FD8  50DF               	movf	indf2,w,c
  4329  001FDA  010F               	movlb	15	; () banked
  4330  001FDC  6F2D               	movwf	45,b	;volatile
  4331                           
  4332                           ; BSR set to: 15
  4333                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
  4334  001FDE  010F               	movlb	15	; () banked
  4335  001FE0  8720               	bsf	32,3,b	;volatile
  4336                           
  4337                           ; BSR set to: 15
  4338                           ;inc\CANlib.h: 520: return;
  4339  001FE2  0012               	return	
  4340  001FE4                     __end_of_CANsendMessage:
  4341                           	opt stack 0
  4342                           tblptru	equ	0xFF8
  4343                           tblptrh	equ	0xFF7
  4344                           tblptrl	equ	0xFF6
  4345                           tablat	equ	0xFF5
  4346                           postinc0	equ	0xFEE
  4347                           wreg	equ	0xFE8
  4348                           postdec1	equ	0xFE5
  4349                           fsr1l	equ	0xFE1
  4350                           indf2	equ	0xFDF
  4351                           postinc2	equ	0xFDE
  4352                           postdec2	equ	0xFDD
  4353                           fsr2h	equ	0xFDA
  4354                           fsr2l	equ	0xFD9
  4355                           status	equ	0xFD8
  4356                           
  4357 ;; *************** function _CANisTxReady *****************
  4358 ;; Defined at:
  4359 ;;		line 1154 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  4360 ;; Parameters:    Size  Location     Type
  4361 ;;		None
  4362 ;; Auto vars:     Size  Location     Type
  4363 ;;		None
  4364 ;; Return value:  Size  Location     Type
  4365 ;;                  1    wreg      unsigned char 
  4366 ;; Registers used:
  4367 ;;		wreg, status,2
  4368 ;; Tracked objects:
  4369 ;;		On entry : 0/0
  4370 ;;		On exit  : 0/0
  4371 ;;		Unchanged: 0/0
  4372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4374 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4376 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;Total ram usage:        1 bytes
  4378 ;; Hardware stack levels used:    1
  4379 ;; Hardware stack levels required when called:    4
  4380 ;; This function calls:
  4381 ;;		Nothing
  4382 ;; This function is called by:
  4383 ;;		_park_search
  4384 ;;		_can_send
  4385 ;; This function uses a non-reentrant model
  4386 ;;
  4387                           
  4388                           	psect	text6
  4389  005E82                     __ptext6:
  4390                           	opt stack 0
  4391  005E82                     _CANisTxReady:
  4392                           	opt stack 23
  4393                           
  4394                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  4395                           
  4396                           ; BSR set to: 15
  4397                           ;incstack = 0
  4398  005E82  0E01               	movlw	1
  4399  005E84  0100               	movlb	0	; () banked
  4400  005E86  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4401                           
  4402                           ; BSR set to: 0
  4403  005E88  010F               	movlb	15	; () banked
  4404  005E8A  A740               	btfss	64,3,b	;volatile
  4405  005E8C  D009               	goto	l556
  4406                           
  4407                           ; BSR set to: 15
  4408  005E8E  010F               	movlb	15	; () banked
  4409  005E90  A730               	btfss	48,3,b	;volatile
  4410  005E92  D006               	goto	l556
  4411                           
  4412                           ; BSR set to: 15
  4413  005E94  010F               	movlb	15	; () banked
  4414  005E96  A720               	btfss	32,3,b	;volatile
  4415  005E98  D003               	goto	l556
  4416                           
  4417                           ; BSR set to: 15
  4418  005E9A  0E00               	movlw	0
  4419  005E9C  0100               	movlb	0	; () banked
  4420  005E9E  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4421  005EA0                     l556:
  4422  005EA0  0100               	movlb	0	; () banked
  4423  005EA2  5177               	movf	_CANisTxReady$2845& (0+255),w,b
  4424  005EA4  0012               	return	
  4425  005EA6                     __end_of_CANisTxReady:
  4426                           	opt stack 0
  4427                           tblptru	equ	0xFF8
  4428                           tblptrh	equ	0xFF7
  4429                           tblptrl	equ	0xFF6
  4430                           tablat	equ	0xFF5
  4431                           postinc0	equ	0xFEE
  4432                           wreg	equ	0xFE8
  4433                           postdec1	equ	0xFE5
  4434                           fsr1l	equ	0xFE1
  4435                           indf2	equ	0xFDF
  4436                           postinc2	equ	0xFDE
  4437                           postdec2	equ	0xFDD
  4438                           fsr2h	equ	0xFDA
  4439                           fsr2l	equ	0xFD9
  4440                           status	equ	0xFD8
  4441                           
  4442 ;; *************** function _abs *****************
  4443 ;; Defined at:
  4444 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  4445 ;; Parameters:    Size  Location     Type
  4446 ;;  a               2   33[BANK0 ] int 
  4447 ;; Auto vars:     Size  Location     Type
  4448 ;;		None
  4449 ;; Return value:  Size  Location     Type
  4450 ;;                  2   33[BANK0 ] int 
  4451 ;; Registers used:
  4452 ;;		wreg, status,2, status,0
  4453 ;; Tracked objects:
  4454 ;;		On entry : 0/0
  4455 ;;		On exit  : 0/0
  4456 ;;		Unchanged: 0/0
  4457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4458 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4460 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4461 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4462 ;;Total ram usage:        4 bytes
  4463 ;; Hardware stack levels used:    1
  4464 ;; Hardware stack levels required when called:    4
  4465 ;; This function calls:
  4466 ;;		Nothing
  4467 ;; This function is called by:
  4468 ;;		_park_search
  4469 ;;		_park_routine
  4470 ;;		_parallelo
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           	psect	text7
  4475  005E2A                     __ptext7:
  4476                           	opt stack 0
  4477  005E2A                     _abs:
  4478                           	opt stack 24
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;incstack = 0
  4482  005E2A  0100               	movlb	0	; () banked
  4483  005E2C  AF82               	btfss	(abs@a+1)& (0+255),7,b
  4484  005E2E  D00E               	goto	l852
  4485                           
  4486                           ; BSR set to: 0
  4487  005E30  C081  F083         	movff	abs@a,??_abs
  4488  005E34  C082  F084         	movff	abs@a+1,??_abs+1
  4489  005E38  0100               	movlb	0	; () banked
  4490  005E3A  1F83               	comf	??_abs& (0+255),f,b
  4491  005E3C  1F84               	comf	(??_abs+1)& (0+255),f,b
  4492  005E3E  4B83               	infsnz	??_abs& (0+255),f,b
  4493  005E40  2B84               	incf	(??_abs+1)& (0+255),f,b
  4494  005E42  C083  F081         	movff	??_abs,?_abs
  4495  005E46  C084  F082         	movff	??_abs+1,?_abs+1
  4496  005E4A  0012               	return	
  4497  005E4C                     l852:
  4498                           
  4499                           ; BSR set to: 0
  4500  005E4C  C081  F081         	movff	abs@a,?_abs
  4501  005E50  C082  F082         	movff	abs@a+1,?_abs+1
  4502                           
  4503                           ; BSR set to: 0
  4504  005E54  0012               	return		;funcret
  4505  005E56                     __end_of_abs:
  4506                           	opt stack 0
  4507                           tblptru	equ	0xFF8
  4508                           tblptrh	equ	0xFF7
  4509                           tblptrl	equ	0xFF6
  4510                           tablat	equ	0xFF5
  4511                           postinc0	equ	0xFEE
  4512                           wreg	equ	0xFE8
  4513                           postdec1	equ	0xFE5
  4514                           fsr1l	equ	0xFE1
  4515                           indf2	equ	0xFDF
  4516                           postinc2	equ	0xFDE
  4517                           postdec2	equ	0xFDD
  4518                           fsr2h	equ	0xFDA
  4519                           fsr2l	equ	0xFD9
  4520                           status	equ	0xFD8
  4521                           
  4522 ;; *************** function _matematica *****************
  4523 ;; Defined at:
  4524 ;;		line 419 in file "parcheggio.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;		None
  4527 ;; Auto vars:     Size  Location     Type
  4528 ;;		None
  4529 ;; Return value:  Size  Location     Type
  4530 ;;		None               void
  4531 ;; Registers used:
  4532 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4539 ;;      Locals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0
  4540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4541 ;;      Totals:         0       0      36       0       0       0       0       0       0       0       0       0       
      +0       0
  4542 ;;Total ram usage:       36 bytes
  4543 ;; Hardware stack levels used:    1
  4544 ;; Hardware stack levels required when called:    8
  4545 ;; This function calls:
  4546 ;;		___fladd
  4547 ;;		___fldiv
  4548 ;;		___flmul
  4549 ;;		___flneg
  4550 ;;		_asin
  4551 ;;		_cos
  4552 ;; This function is called by:
  4553 ;;		_park_routine
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           	psect	text8
  4558  001FE4                     __ptext8:
  4559                           	opt stack 0
  4560  001FE4                     _matematica:
  4561                           	opt stack 21
  4562                           
  4563                           ;parcheggio.c: 421: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;incstack = 0
  4567  001FE4  C124  F0B1         	movff	_bordo,___fladd@a	;volatile
  4568  001FE8  C125  F0B2         	movff	_bordo+1,___fladd@a+1	;volatile
  4569  001FEC  C126  F0B3         	movff	_bordo+2,___fladd@a+2	;volatile
  4570  001FF0  C127  F0B4         	movff	_bordo+3,___fladd@a+3	;volatile
  4571  001FF4  0E00               	movlw	0
  4572  001FF6  0100               	movlb	0	; () banked
  4573  001FF8  6F7B               	movwf	___fldiv@a& (0+255),b
  4574  001FFA  0E00               	movlw	0
  4575  001FFC  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4576  001FFE  0E00               	movlw	0
  4577  002000  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4578  002002  0E40               	movlw	64
  4579  002004  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4580  002006  C1E6  F077         	movff	_larghezza,___fldiv@b
  4581  00200A  C1E7  F078         	movff	_larghezza+1,___fldiv@b+1
  4582  00200E  C1E8  F079         	movff	_larghezza+2,___fldiv@b+2
  4583  002012  C1E9  F07A         	movff	_larghezza+3,___fldiv@b+3
  4584  002016  EC84  F01D         	call	___fldiv	;wreg free
  4585  00201A  C077  F0AD         	movff	?___fldiv,___fladd@b
  4586  00201E  C078  F0AE         	movff	?___fldiv+1,___fladd@b+1
  4587  002022  C079  F0AF         	movff	?___fldiv+2,___fladd@b+2
  4588  002026  C07A  F0B0         	movff	?___fldiv+3,___fladd@b+3
  4589  00202A  EC0F  F015         	call	___fladd	;wreg free
  4590  00202E  C0AD  F0A9         	movff	?___fladd,___flneg@f1
  4591  002032  C0AE  F0AA         	movff	?___fladd+1,___flneg@f1+1
  4592  002036  C0AF  F0AB         	movff	?___fladd+2,___flneg@f1+2
  4593  00203A  C0B0  F0AC         	movff	?___fladd+3,___flneg@f1+3
  4594  00203E  ECDE  F02E         	call	___flneg	;wreg free
  4595  002042  C0A9  F1BA         	movff	?___flneg,_matematica$3739
  4596  002046  C0AA  F1BB         	movff	?___flneg+1,_matematica$3739+1
  4597  00204A  C0AB  F1BC         	movff	?___flneg+2,_matematica$3739+2
  4598  00204E  C0AC  F1BD         	movff	?___flneg+3,_matematica$3739+3
  4599                           
  4600                           ;parcheggio.c: 421: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4601  002052  C1BA  F0B1         	movff	_matematica$3739,___fladd@a
  4602  002056  C1BB  F0B2         	movff	_matematica$3739+1,___fladd@a+1
  4603  00205A  C1BC  F0B3         	movff	_matematica$3739+2,___fladd@a+2
  4604  00205E  C1BD  F0B4         	movff	_matematica$3739+3,___fladd@a+3
  4605  002062  0E00               	movlw	0
  4606  002064  0100               	movlb	0	; () banked
  4607  002066  6F94               	movwf	___flmul@a& (0+255),b
  4608  002068  0E00               	movlw	0
  4609  00206A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4610  00206C  0E00               	movlw	0
  4611  00206E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4612  002070  0E40               	movlw	64
  4613  002072  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4614  002074  C1EC  F090         	movff	_raggio,___flmul@b
  4615  002078  C1ED  F091         	movff	_raggio+1,___flmul@b+1
  4616  00207C  C1EE  F092         	movff	_raggio+2,___flmul@b+2
  4617  002080  C1EF  F093         	movff	_raggio+3,___flmul@b+3
  4618  002084  EC63  F017         	call	___flmul	;wreg free
  4619  002088  C090  F0AD         	movff	?___flmul,___fladd@b
  4620  00208C  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  4621  002090  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  4622  002094  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  4623  002098  EC0F  F015         	call	___fladd	;wreg free
  4624  00209C  C0AD  F1BE         	movff	?___fladd,_matematica$3740
  4625  0020A0  C0AE  F1BF         	movff	?___fladd+1,_matematica$3740+1
  4626  0020A4  C0AF  F1C0         	movff	?___fladd+2,_matematica$3740+2
  4627  0020A8  C0B0  F1C1         	movff	?___fladd+3,_matematica$3740+3
  4628                           
  4629                           ;parcheggio.c: 421: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4630  0020AC  0E00               	movlw	0
  4631  0020AE  0100               	movlb	0	; () banked
  4632  0020B0  6F7B               	movwf	___fldiv@a& (0+255),b
  4633  0020B2  0E00               	movlw	0
  4634  0020B4  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4635  0020B6  0E00               	movlw	0
  4636  0020B8  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4637  0020BA  0E40               	movlw	64
  4638  0020BC  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4639  0020BE  C1E6  F077         	movff	_larghezza,___fldiv@b
  4640  0020C2  C1E7  F078         	movff	_larghezza+1,___fldiv@b+1
  4641  0020C6  C1E8  F079         	movff	_larghezza+2,___fldiv@b+2
  4642  0020CA  C1E9  F07A         	movff	_larghezza+3,___fldiv@b+3
  4643  0020CE  EC84  F01D         	call	___fldiv	;wreg free
  4644  0020D2  C077  F0A9         	movff	?___fldiv,___flneg@f1
  4645  0020D6  C078  F0AA         	movff	?___fldiv+1,___flneg@f1+1
  4646  0020DA  C079  F0AB         	movff	?___fldiv+2,___flneg@f1+2
  4647  0020DE  C07A  F0AC         	movff	?___fldiv+3,___flneg@f1+3
  4648  0020E2  ECDE  F02E         	call	___flneg	;wreg free
  4649  0020E6  C0A9  F0B1         	movff	?___flneg,___fladd@a
  4650  0020EA  C0AA  F0B2         	movff	?___flneg+1,___fladd@a+1
  4651  0020EE  C0AB  F0B3         	movff	?___flneg+2,___fladd@a+2
  4652  0020F2  C0AC  F0B4         	movff	?___flneg+3,___fladd@a+3
  4653  0020F6  C1BE  F0AD         	movff	_matematica$3740,___fladd@b
  4654  0020FA  C1BF  F0AE         	movff	_matematica$3740+1,___fladd@b+1
  4655  0020FE  C1C0  F0AF         	movff	_matematica$3740+2,___fladd@b+2
  4656  002102  C1C1  F0B0         	movff	_matematica$3740+3,___fladd@b+3
  4657  002106  EC0F  F015         	call	___fladd	;wreg free
  4658  00210A  C0AD  F1C2         	movff	?___fladd,_matematica$3741
  4659  00210E  C0AE  F1C3         	movff	?___fladd+1,_matematica$3741+1
  4660  002112  C0AF  F1C4         	movff	?___fladd+2,_matematica$3741+2
  4661  002116  C0B0  F1C5         	movff	?___fladd+3,_matematica$3741+3
  4662                           
  4663                           ;parcheggio.c: 421: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4664  00211A  C1C2  F077         	movff	_matematica$3741,___fldiv@b
  4665  00211E  C1C3  F078         	movff	_matematica$3741+1,___fldiv@b+1
  4666  002122  C1C4  F079         	movff	_matematica$3741+2,___fldiv@b+2
  4667  002126  C1C5  F07A         	movff	_matematica$3741+3,___fldiv@b+3
  4668  00212A  0E00               	movlw	0
  4669  00212C  0100               	movlb	0	; () banked
  4670  00212E  6F94               	movwf	___flmul@a& (0+255),b
  4671  002130  0E00               	movlw	0
  4672  002132  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4673  002134  0E00               	movlw	0
  4674  002136  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4675  002138  0E40               	movlw	64
  4676  00213A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4677  00213C  C1EC  F090         	movff	_raggio,___flmul@b
  4678  002140  C1ED  F091         	movff	_raggio+1,___flmul@b+1
  4679  002144  C1EE  F092         	movff	_raggio+2,___flmul@b+2
  4680  002148  C1EF  F093         	movff	_raggio+3,___flmul@b+3
  4681  00214C  EC63  F017         	call	___flmul	;wreg free
  4682  002150  C090  F07B         	movff	?___flmul,___fldiv@a
  4683  002154  C091  F07C         	movff	?___flmul+1,___fldiv@a+1
  4684  002158  C092  F07D         	movff	?___flmul+2,___fldiv@a+2
  4685  00215C  C093  F07E         	movff	?___flmul+3,___fldiv@a+3
  4686  002160  EC84  F01D         	call	___fldiv	;wreg free
  4687  002164  C077  F1C6         	movff	?___fldiv,_matematica$3742
  4688  002168  C078  F1C7         	movff	?___fldiv+1,_matematica$3742+1
  4689  00216C  C079  F1C8         	movff	?___fldiv+2,_matematica$3742+2
  4690  002170  C07A  F1C9         	movff	?___fldiv+3,_matematica$3742+3
  4691                           
  4692                           ;parcheggio.c: 421: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4693  002174  C1C6  F19A         	movff	_matematica$3742,asin@x
  4694  002178  C1C7  F19B         	movff	_matematica$3742+1,asin@x+1
  4695  00217C  C1C8  F19C         	movff	_matematica$3742+2,asin@x+2
  4696  002180  C1C9  F19D         	movff	_matematica$3742+3,asin@x+3
  4697  002184  ECBF  F022         	call	_asin	;wreg free
  4698  002188  C19A  F11C         	movff	?_asin,_alfa
  4699  00218C  C19B  F11D         	movff	?_asin+1,_alfa+1
  4700  002190  C19C  F11E         	movff	?_asin+2,_alfa+2
  4701  002194  C19D  F11F         	movff	?_asin+3,_alfa+3
  4702                           
  4703                           ;parcheggio.c: 422: alfa = alfa / 3.14159265358979323846 * 180;
  4704  002198  0EDB               	movlw	219
  4705  00219A  0100               	movlb	0	; () banked
  4706  00219C  6F7B               	movwf	___fldiv@a& (0+255),b
  4707  00219E  0E0F               	movlw	15
  4708  0021A0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4709  0021A2  0E49               	movlw	73
  4710  0021A4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4711  0021A6  0E40               	movlw	64
  4712  0021A8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4713  0021AA  C11C  F077         	movff	_alfa,___fldiv@b
  4714  0021AE  C11D  F078         	movff	_alfa+1,___fldiv@b+1
  4715  0021B2  C11E  F079         	movff	_alfa+2,___fldiv@b+2
  4716  0021B6  C11F  F07A         	movff	_alfa+3,___fldiv@b+3
  4717  0021BA  EC84  F01D         	call	___fldiv	;wreg free
  4718  0021BE  C077  F090         	movff	?___fldiv,___flmul@b
  4719  0021C2  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  4720  0021C6  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  4721  0021CA  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  4722  0021CE  0E00               	movlw	0
  4723  0021D0  0100               	movlb	0	; () banked
  4724  0021D2  6F94               	movwf	___flmul@a& (0+255),b
  4725  0021D4  0E00               	movlw	0
  4726  0021D6  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4727  0021D8  0E34               	movlw	52
  4728  0021DA  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4729  0021DC  0E43               	movlw	67
  4730  0021DE  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4731  0021E0  EC63  F017         	call	___flmul	;wreg free
  4732  0021E4  C090  F11C         	movff	?___flmul,_alfa
  4733  0021E8  C091  F11D         	movff	?___flmul+1,_alfa+1
  4734  0021EC  C092  F11E         	movff	?___flmul+2,_alfa+2
  4735  0021F0  C093  F11F         	movff	?___flmul+3,_alfa+3
  4736                           
  4737                           ;parcheggio.c: 423: beta = 90 - alfa;
  4738  0021F4  C11C  F0A9         	movff	_alfa,___flneg@f1
  4739  0021F8  C11D  F0AA         	movff	_alfa+1,___flneg@f1+1
  4740  0021FC  C11E  F0AB         	movff	_alfa+2,___flneg@f1+2
  4741  002200  C11F  F0AC         	movff	_alfa+3,___flneg@f1+3
  4742  002204  ECDE  F02E         	call	___flneg	;wreg free
  4743  002208  C0A9  F0AD         	movff	?___flneg,___fladd@b
  4744  00220C  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  4745  002210  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  4746  002214  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  4747  002218  0E00               	movlw	0
  4748  00221A  0100               	movlb	0	; () banked
  4749  00221C  6FB1               	movwf	___fladd@a& (0+255),b
  4750  00221E  0E00               	movlw	0
  4751  002220  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4752  002222  0EB4               	movlw	180
  4753  002224  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4754  002226  0E42               	movlw	66
  4755  002228  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4756  00222A  EC0F  F015         	call	___fladd	;wreg free
  4757  00222E  C0AD  F120         	movff	?___fladd,_beta
  4758  002232  C0AE  F121         	movff	?___fladd+1,_beta+1
  4759  002236  C0AF  F122         	movff	?___fladd+2,_beta+2
  4760  00223A  C0B0  F123         	movff	?___fladd+3,_beta+3
  4761                           
  4762                           ;parcheggio.c: 424: n = 2 * raggio * cos(alfa);
  4763  00223E  C11C  F1B2         	movff	_alfa,cos@f
  4764  002242  C11D  F1B3         	movff	_alfa+1,cos@f+1
  4765  002246  C11E  F1B4         	movff	_alfa+2,cos@f+2
  4766  00224A  C11F  F1B5         	movff	_alfa+3,cos@f+3
  4767  00224E  EC5E  F02C         	call	_cos	;wreg free
  4768  002252  C1B2  F1CA         	movff	?_cos,_matematica$3743
  4769  002256  C1B3  F1CB         	movff	?_cos+1,_matematica$3743+1
  4770  00225A  C1B4  F1CC         	movff	?_cos+2,_matematica$3743+2
  4771  00225E  C1B5  F1CD         	movff	?_cos+3,_matematica$3743+3
  4772                           
  4773                           ;parcheggio.c: 424: n = 2 * raggio * cos(alfa);
  4774  002262  C1EC  F094         	movff	_raggio,___flmul@a
  4775  002266  C1ED  F095         	movff	_raggio+1,___flmul@a+1
  4776  00226A  C1EE  F096         	movff	_raggio+2,___flmul@a+2
  4777  00226E  C1EF  F097         	movff	_raggio+3,___flmul@a+3
  4778  002272  C1CA  F090         	movff	_matematica$3743,___flmul@b
  4779  002276  C1CB  F091         	movff	_matematica$3743+1,___flmul@b+1
  4780  00227A  C1CC  F092         	movff	_matematica$3743+2,___flmul@b+2
  4781  00227E  C1CD  F093         	movff	_matematica$3743+3,___flmul@b+3
  4782  002282  EC63  F017         	call	___flmul	;wreg free
  4783  002286  C090  F1CE         	movff	?___flmul,_matematica$3744
  4784  00228A  C091  F1CF         	movff	?___flmul+1,_matematica$3744+1
  4785  00228E  C092  F1D0         	movff	?___flmul+2,_matematica$3744+2
  4786  002292  C093  F1D1         	movff	?___flmul+3,_matematica$3744+3
  4787                           
  4788                           ;parcheggio.c: 424: n = 2 * raggio * cos(alfa);
  4789  002296  C1CE  F090         	movff	_matematica$3744,___flmul@b
  4790  00229A  C1CF  F091         	movff	_matematica$3744+1,___flmul@b+1
  4791  00229E  C1D0  F092         	movff	_matematica$3744+2,___flmul@b+2
  4792  0022A2  C1D1  F093         	movff	_matematica$3744+3,___flmul@b+3
  4793  0022A6  0E00               	movlw	0
  4794  0022A8  0100               	movlb	0	; () banked
  4795  0022AA  6F94               	movwf	___flmul@a& (0+255),b
  4796  0022AC  0E00               	movlw	0
  4797  0022AE  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4798  0022B0  0E00               	movlw	0
  4799  0022B2  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4800  0022B4  0E40               	movlw	64
  4801  0022B6  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4802  0022B8  EC63  F017         	call	___flmul	;wreg free
  4803  0022BC  C090  F130         	movff	?___flmul,_n
  4804  0022C0  C091  F131         	movff	?___flmul+1,_n+1
  4805  0022C4  C092  F132         	movff	?___flmul+2,_n+2
  4806  0022C8  C093  F133         	movff	?___flmul+3,_n+3
  4807                           
  4808                           ;parcheggio.c: 425: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  4809  0022CC  C120  F094         	movff	_beta,___flmul@a
  4810  0022D0  C121  F095         	movff	_beta+1,___flmul@a+1
  4811  0022D4  C122  F096         	movff	_beta+2,___flmul@a+2
  4812  0022D8  C123  F097         	movff	_beta+3,___flmul@a+3
  4813  0022DC  C1EC  F090         	movff	_raggio,___flmul@b
  4814  0022E0  C1ED  F091         	movff	_raggio+1,___flmul@b+1
  4815  0022E4  C1EE  F092         	movff	_raggio+2,___flmul@b+2
  4816  0022E8  C1EF  F093         	movff	_raggio+3,___flmul@b+3
  4817  0022EC  EC63  F017         	call	___flmul	;wreg free
  4818  0022F0  C090  F1D2         	movff	?___flmul,_matematica$3745
  4819  0022F4  C091  F1D3         	movff	?___flmul+1,_matematica$3745+1
  4820  0022F8  C092  F1D4         	movff	?___flmul+2,_matematica$3745+2
  4821  0022FC  C093  F1D5         	movff	?___flmul+3,_matematica$3745+3
  4822                           
  4823                           ;parcheggio.c: 425: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  4824  002300  0EDB               	movlw	219
  4825  002302  0100               	movlb	0	; () banked
  4826  002304  6F94               	movwf	___flmul@a& (0+255),b
  4827  002306  0E0F               	movlw	15
  4828  002308  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4829  00230A  0EC9               	movlw	201
  4830  00230C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4831  00230E  0E40               	movlw	64
  4832  002310  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4833  002312  C1D2  F090         	movff	_matematica$3745,___flmul@b
  4834  002316  C1D3  F091         	movff	_matematica$3745+1,___flmul@b+1
  4835  00231A  C1D4  F092         	movff	_matematica$3745+2,___flmul@b+2
  4836  00231E  C1D5  F093         	movff	_matematica$3745+3,___flmul@b+3
  4837  002322  EC63  F017         	call	___flmul	;wreg free
  4838  002326  C090  F077         	movff	?___flmul,___fldiv@b
  4839  00232A  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  4840  00232E  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  4841  002332  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  4842  002336  0E00               	movlw	0
  4843  002338  0100               	movlb	0	; () banked
  4844  00233A  6F7B               	movwf	___fldiv@a& (0+255),b
  4845  00233C  0E00               	movlw	0
  4846  00233E  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4847  002340  0EB4               	movlw	180
  4848  002342  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4849  002344  0E43               	movlw	67
  4850  002346  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4851  002348  EC84  F01D         	call	___fldiv	;wreg free
  4852  00234C  C077  F138         	movff	?___fldiv,_prima_sterzata
  4853  002350  C078  F139         	movff	?___fldiv+1,_prima_sterzata+1
  4854  002354  C079  F13A         	movff	?___fldiv+2,_prima_sterzata+2
  4855  002358  C07A  F13B         	movff	?___fldiv+3,_prima_sterzata+3
  4856                           
  4857                           ;parcheggio.c: 426: kkk = raggio + (2 * larghezza / 3);
  4858  00235C  0E00               	movlw	0
  4859  00235E  0100               	movlb	0	; () banked
  4860  002360  6F7B               	movwf	___fldiv@a& (0+255),b
  4861  002362  0E00               	movlw	0
  4862  002364  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4863  002366  0E40               	movlw	64
  4864  002368  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4865  00236A  0E40               	movlw	64
  4866  00236C  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4867  00236E  0E00               	movlw	0
  4868  002370  0100               	movlb	0	; () banked
  4869  002372  6F94               	movwf	___flmul@a& (0+255),b
  4870  002374  0E00               	movlw	0
  4871  002376  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4872  002378  0E00               	movlw	0
  4873  00237A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4874  00237C  0E40               	movlw	64
  4875  00237E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4876  002380  C1E6  F090         	movff	_larghezza,___flmul@b
  4877  002384  C1E7  F091         	movff	_larghezza+1,___flmul@b+1
  4878  002388  C1E8  F092         	movff	_larghezza+2,___flmul@b+2
  4879  00238C  C1E9  F093         	movff	_larghezza+3,___flmul@b+3
  4880  002390  EC63  F017         	call	___flmul	;wreg free
  4881  002394  C090  F077         	movff	?___flmul,___fldiv@b
  4882  002398  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  4883  00239C  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  4884  0023A0  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  4885  0023A4  EC84  F01D         	call	___fldiv	;wreg free
  4886  0023A8  C077  F0AD         	movff	?___fldiv,___fladd@b
  4887  0023AC  C078  F0AE         	movff	?___fldiv+1,___fladd@b+1
  4888  0023B0  C079  F0AF         	movff	?___fldiv+2,___fladd@b+2
  4889  0023B4  C07A  F0B0         	movff	?___fldiv+3,___fladd@b+3
  4890  0023B8  C1EC  F0B1         	movff	_raggio,___fladd@a
  4891  0023BC  C1ED  F0B2         	movff	_raggio+1,___fladd@a+1
  4892  0023C0  C1EE  F0B3         	movff	_raggio+2,___fladd@a+2
  4893  0023C4  C1EF  F0B4         	movff	_raggio+3,___fladd@a+3
  4894  0023C8  EC0F  F015         	call	___fladd	;wreg free
  4895  0023CC  C0AD  F12C         	movff	?___fladd,_kkk
  4896  0023D0  C0AE  F12D         	movff	?___fladd+1,_kkk+1
  4897  0023D4  C0AF  F12E         	movff	?___fladd+2,_kkk+2
  4898  0023D8  C0B0  F12F         	movff	?___fladd+3,_kkk+3
  4899                           
  4900                           ;parcheggio.c: 427: jjj = raggio - (2 * larghezza / 3);
  4901  0023DC  0E00               	movlw	0
  4902  0023DE  0100               	movlb	0	; () banked
  4903  0023E0  6F7B               	movwf	___fldiv@a& (0+255),b
  4904  0023E2  0E00               	movlw	0
  4905  0023E4  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4906  0023E6  0E40               	movlw	64
  4907  0023E8  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4908  0023EA  0E40               	movlw	64
  4909  0023EC  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4910  0023EE  0E00               	movlw	0
  4911  0023F0  0100               	movlb	0	; () banked
  4912  0023F2  6F94               	movwf	___flmul@a& (0+255),b
  4913  0023F4  0E00               	movlw	0
  4914  0023F6  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4915  0023F8  0E00               	movlw	0
  4916  0023FA  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4917  0023FC  0E40               	movlw	64
  4918  0023FE  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4919  002400  C1E6  F090         	movff	_larghezza,___flmul@b
  4920  002404  C1E7  F091         	movff	_larghezza+1,___flmul@b+1
  4921  002408  C1E8  F092         	movff	_larghezza+2,___flmul@b+2
  4922  00240C  C1E9  F093         	movff	_larghezza+3,___flmul@b+3
  4923  002410  EC63  F017         	call	___flmul	;wreg free
  4924  002414  C090  F077         	movff	?___flmul,___fldiv@b
  4925  002418  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  4926  00241C  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  4927  002420  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  4928  002424  EC84  F01D         	call	___fldiv	;wreg free
  4929  002428  C077  F0A9         	movff	?___fldiv,___flneg@f1
  4930  00242C  C078  F0AA         	movff	?___fldiv+1,___flneg@f1+1
  4931  002430  C079  F0AB         	movff	?___fldiv+2,___flneg@f1+2
  4932  002434  C07A  F0AC         	movff	?___fldiv+3,___flneg@f1+3
  4933  002438  ECDE  F02E         	call	___flneg	;wreg free
  4934  00243C  C0A9  F0AD         	movff	?___flneg,___fladd@b
  4935  002440  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  4936  002444  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  4937  002448  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  4938  00244C  C1EC  F0B1         	movff	_raggio,___fladd@a
  4939  002450  C1ED  F0B2         	movff	_raggio+1,___fladd@a+1
  4940  002454  C1EE  F0B3         	movff	_raggio+2,___fladd@a+2
  4941  002458  C1EF  F0B4         	movff	_raggio+3,___fladd@a+3
  4942  00245C  EC0F  F015         	call	___fladd	;wreg free
  4943  002460  C0AD  F128         	movff	?___fladd,_jjj
  4944  002464  C0AE  F129         	movff	?___fladd+1,_jjj+1
  4945  002468  C0AF  F12A         	movff	?___fladd+2,_jjj+2
  4946  00246C  C0B0  F12B         	movff	?___fladd+3,_jjj+3
  4947                           
  4948                           ;parcheggio.c: 428: Pminimo = kkk * cos(asin((jjj / kkk)));
  4949  002470  C12C  F07B         	movff	_kkk,___fldiv@a
  4950  002474  C12D  F07C         	movff	_kkk+1,___fldiv@a+1
  4951  002478  C12E  F07D         	movff	_kkk+2,___fldiv@a+2
  4952  00247C  C12F  F07E         	movff	_kkk+3,___fldiv@a+3
  4953  002480  C128  F077         	movff	_jjj,___fldiv@b
  4954  002484  C129  F078         	movff	_jjj+1,___fldiv@b+1
  4955  002488  C12A  F079         	movff	_jjj+2,___fldiv@b+2
  4956  00248C  C12B  F07A         	movff	_jjj+3,___fldiv@b+3
  4957  002490  EC84  F01D         	call	___fldiv	;wreg free
  4958  002494  C077  F1D6         	movff	?___fldiv,_matematica$3746
  4959  002498  C078  F1D7         	movff	?___fldiv+1,_matematica$3746+1
  4960  00249C  C079  F1D8         	movff	?___fldiv+2,_matematica$3746+2
  4961  0024A0  C07A  F1D9         	movff	?___fldiv+3,_matematica$3746+3
  4962                           
  4963                           ;parcheggio.c: 428: Pminimo = kkk * cos(asin((jjj / kkk)));
  4964  0024A4  C1D6  F19A         	movff	_matematica$3746,asin@x
  4965  0024A8  C1D7  F19B         	movff	_matematica$3746+1,asin@x+1
  4966  0024AC  C1D8  F19C         	movff	_matematica$3746+2,asin@x+2
  4967  0024B0  C1D9  F19D         	movff	_matematica$3746+3,asin@x+3
  4968  0024B4  ECBF  F022         	call	_asin	;wreg free
  4969  0024B8  C19A  F1B2         	movff	?_asin,cos@f
  4970  0024BC  C19B  F1B3         	movff	?_asin+1,cos@f+1
  4971  0024C0  C19C  F1B4         	movff	?_asin+2,cos@f+2
  4972  0024C4  C19D  F1B5         	movff	?_asin+3,cos@f+3
  4973  0024C8  EC5E  F02C         	call	_cos	;wreg free
  4974  0024CC  C1B2  F1DA         	movff	?_cos,_matematica$3747
  4975  0024D0  C1B3  F1DB         	movff	?_cos+1,_matematica$3747+1
  4976  0024D4  C1B4  F1DC         	movff	?_cos+2,_matematica$3747+2
  4977  0024D8  C1B5  F1DD         	movff	?_cos+3,_matematica$3747+3
  4978                           
  4979                           ;parcheggio.c: 428: Pminimo = kkk * cos(asin((jjj / kkk)));
  4980  0024DC  C1DA  F090         	movff	_matematica$3747,___flmul@b
  4981  0024E0  C1DB  F091         	movff	_matematica$3747+1,___flmul@b+1
  4982  0024E4  C1DC  F092         	movff	_matematica$3747+2,___flmul@b+2
  4983  0024E8  C1DD  F093         	movff	_matematica$3747+3,___flmul@b+3
  4984  0024EC  C12C  F094         	movff	_kkk,___flmul@a
  4985  0024F0  C12D  F095         	movff	_kkk+1,___flmul@a+1
  4986  0024F4  C12E  F096         	movff	_kkk+2,___flmul@a+2
  4987  0024F8  C12F  F097         	movff	_kkk+3,___flmul@a+3
  4988  0024FC  EC63  F017         	call	___flmul	;wreg free
  4989  002500  C090  F118         	movff	?___flmul,_Pminimo
  4990  002504  C091  F119         	movff	?___flmul+1,_Pminimo+1
  4991  002508  C092  F11A         	movff	?___flmul+2,_Pminimo+2
  4992  00250C  C093  F11B         	movff	?___flmul+3,_Pminimo+3
  4993  002510  0012               	return		;funcret
  4994  002512                     __end_of_matematica:
  4995                           	opt stack 0
  4996                           tblptru	equ	0xFF8
  4997                           tblptrh	equ	0xFF7
  4998                           tblptrl	equ	0xFF6
  4999                           tablat	equ	0xFF5
  5000                           postinc0	equ	0xFEE
  5001                           wreg	equ	0xFE8
  5002                           postdec1	equ	0xFE5
  5003                           fsr1l	equ	0xFE1
  5004                           indf2	equ	0xFDF
  5005                           postinc2	equ	0xFDE
  5006                           postdec2	equ	0xFDD
  5007                           fsr2h	equ	0xFDA
  5008                           fsr2l	equ	0xFD9
  5009                           status	equ	0xFD8
  5010                           
  5011 ;; *************** function _cos *****************
  5012 ;; Defined at:
  5013 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\cos.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;  f               4   41[BANK1 ] int 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;		None
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  4   41[BANK1 ] int 
  5020 ;; Registers used:
  5021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5027 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5028 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5030 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;Total ram usage:        8 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    7
  5034 ;; This function calls:
  5035 ;;		___fladd
  5036 ;;		___flge
  5037 ;;		_sin
  5038 ;; This function is called by:
  5039 ;;		_matematica
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           	psect	text9
  5044  0058BC                     __ptext9:
  5045                           	opt stack 0
  5046  0058BC                     _cos:
  5047                           	opt stack 21
  5048                           
  5049                           ;incstack = 0
  5050  0058BC  0EDB               	movlw	219
  5051  0058BE  0100               	movlb	0	; () banked
  5052  0058C0  6FB1               	movwf	___flge@ff1& (0+255),b
  5053  0058C2  0E0F               	movlw	15
  5054  0058C4  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  5055  0058C6  0E49               	movlw	73
  5056  0058C8  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  5057  0058CA  0E40               	movlw	64
  5058  0058CC  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  5059  0058CE  C1B2  F0B5         	movff	cos@f,___flge@ff2
  5060  0058D2  C1B3  F0B6         	movff	cos@f+1,___flge@ff2+1
  5061  0058D6  C1B4  F0B7         	movff	cos@f+2,___flge@ff2+2
  5062  0058DA  C1B5  F0B8         	movff	cos@f+3,___flge@ff2+3
  5063  0058DE  EC57  F029         	call	___flge	;wreg free
  5064  0058E2  0100               	movlb	0	; () banked
  5065  0058E4  B0D8               	btfsc	status,0,c
  5066  0058E6  D02E               	goto	l7250
  5067                           
  5068                           ; BSR set to: 0
  5069  0058E8  C1B2  F0AD         	movff	cos@f,___fladd@b
  5070  0058EC  C1B3  F0AE         	movff	cos@f+1,___fladd@b+1
  5071  0058F0  C1B4  F0AF         	movff	cos@f+2,___fladd@b+2
  5072  0058F4  C1B5  F0B0         	movff	cos@f+3,___fladd@b+3
  5073  0058F8  0EE4               	movlw	228
  5074  0058FA  0100               	movlb	0	; () banked
  5075  0058FC  6FB1               	movwf	___fladd@a& (0+255),b
  5076  0058FE  0ECB               	movlw	203
  5077  005900  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  5078  005902  0E96               	movlw	150
  5079  005904  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  5080  005906  0EC0               	movlw	192
  5081  005908  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  5082  00590A  EC0F  F015         	call	___fladd	;wreg free
  5083  00590E  C0AD  F1B6         	movff	?___fladd,_cos$3751
  5084  005912  C0AE  F1B7         	movff	?___fladd+1,_cos$3751+1
  5085  005916  C0AF  F1B8         	movff	?___fladd+2,_cos$3751+2
  5086  00591A  C0B0  F1B9         	movff	?___fladd+3,_cos$3751+3
  5087  00591E  C1B6  F0D3         	movff	_cos$3751,sin@f
  5088  005922  C1B7  F0D4         	movff	_cos$3751+1,sin@f+1
  5089  005926  C1B8  F0D5         	movff	_cos$3751+2,sin@f+2
  5090  00592A  C1B9  F0D6         	movff	_cos$3751+3,sin@f+3
  5091  00592E  EC33  F021         	call	_sin	;wreg free
  5092  005932  C0D3  F1B2         	movff	?_sin,?_cos
  5093  005936  C0D4  F1B3         	movff	?_sin+1,?_cos+1
  5094  00593A  C0D5  F1B4         	movff	?_sin+2,?_cos+2
  5095  00593E  C0D6  F1B5         	movff	?_sin+3,?_cos+3
  5096  005942  0012               	return	
  5097  005944                     l7250:
  5098  005944  C1B2  F0AD         	movff	cos@f,___fladd@b
  5099  005948  C1B3  F0AE         	movff	cos@f+1,___fladd@b+1
  5100  00594C  C1B4  F0AF         	movff	cos@f+2,___fladd@b+2
  5101  005950  C1B5  F0B0         	movff	cos@f+3,___fladd@b+3
  5102  005954  0EDB               	movlw	219
  5103  005956  0100               	movlb	0	; () banked
  5104  005958  6FB1               	movwf	___fladd@a& (0+255),b
  5105  00595A  0E0F               	movlw	15
  5106  00595C  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  5107  00595E  0EC9               	movlw	201
  5108  005960  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  5109  005962  0E3F               	movlw	63
  5110  005964  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  5111  005966  EC0F  F015         	call	___fladd	;wreg free
  5112  00596A  C0AD  F1B6         	movff	?___fladd,_cos$3751
  5113  00596E  C0AE  F1B7         	movff	?___fladd+1,_cos$3751+1
  5114  005972  C0AF  F1B8         	movff	?___fladd+2,_cos$3751+2
  5115  005976  C0B0  F1B9         	movff	?___fladd+3,_cos$3751+3
  5116  00597A  C1B6  F0D3         	movff	_cos$3751,sin@f
  5117  00597E  C1B7  F0D4         	movff	_cos$3751+1,sin@f+1
  5118  005982  C1B8  F0D5         	movff	_cos$3751+2,sin@f+2
  5119  005986  C1B9  F0D6         	movff	_cos$3751+3,sin@f+3
  5120  00598A  EC33  F021         	call	_sin	;wreg free
  5121  00598E  C0D3  F1B2         	movff	?_sin,?_cos
  5122  005992  C0D4  F1B3         	movff	?_sin+1,?_cos+1
  5123  005996  C0D5  F1B4         	movff	?_sin+2,?_cos+2
  5124  00599A  C0D6  F1B5         	movff	?_sin+3,?_cos+3
  5125  00599E  0012               	return	
  5126  0059A0                     __end_of_cos:
  5127                           	opt stack 0
  5128                           tblptru	equ	0xFF8
  5129                           tblptrh	equ	0xFF7
  5130                           tblptrl	equ	0xFF6
  5131                           tablat	equ	0xFF5
  5132                           postinc0	equ	0xFEE
  5133                           wreg	equ	0xFE8
  5134                           postdec1	equ	0xFE5
  5135                           fsr1l	equ	0xFE1
  5136                           indf2	equ	0xFDF
  5137                           postinc2	equ	0xFDE
  5138                           postdec2	equ	0xFDD
  5139                           fsr2h	equ	0xFDA
  5140                           fsr2l	equ	0xFD9
  5141                           status	equ	0xFD8
  5142                           
  5143 ;; *************** function _sin *****************
  5144 ;; Defined at:
  5145 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sin.c"
  5146 ;; Parameters:    Size  Location     Type
  5147 ;;  f               4  115[BANK0 ] int 
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;  x2              4    8[BANK1 ] int 
  5150 ;;  y               4    0[BANK1 ] int 
  5151 ;;  sgn             1   12[BANK1 ] unsigned char 
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  4  115[BANK0 ] unsigned char 
  5154 ;; Registers used:
  5155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5161 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5162 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5164 ;;      Totals:         0       4      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5165 ;;Total ram usage:       17 bytes
  5166 ;; Hardware stack levels used:    1
  5167 ;; Hardware stack levels required when called:    6
  5168 ;; This function calls:
  5169 ;;		___fladd
  5170 ;;		___fldiv
  5171 ;;		___flge
  5172 ;;		___flmul
  5173 ;;		___flneg
  5174 ;;		___flsub
  5175 ;;		_eval_poly
  5176 ;;		_floor
  5177 ;; This function is called by:
  5178 ;;		_cos
  5179 ;; This function uses a non-reentrant model
  5180 ;;
  5181                           
  5182                           	psect	text10
  5183  004266                     __ptext10:
  5184                           	opt stack 0
  5185  004266                     _sin:
  5186                           	opt stack 21
  5187                           
  5188                           ;incstack = 0
  5189  004266  0E00               	movlw	0
  5190  004268  0101               	movlb	1	; () banked
  5191  00426A  6F95               	movwf	sin@sgn& (0+255),b
  5192                           
  5193                           ; BSR set to: 1
  5194  00426C  0100               	movlb	0	; () banked
  5195  00426E  AFD6               	btfss	(sin@f+3)& (0+255),7,b
  5196  004270  D015               	goto	l7132
  5197                           
  5198                           ; BSR set to: 0
  5199  004272  C0D3  F0A9         	movff	sin@f,___flneg@f1
  5200  004276  C0D4  F0AA         	movff	sin@f+1,___flneg@f1+1
  5201  00427A  C0D5  F0AB         	movff	sin@f+2,___flneg@f1+2
  5202  00427E  C0D6  F0AC         	movff	sin@f+3,___flneg@f1+3
  5203  004282  ECDE  F02E         	call	___flneg	;wreg free
  5204  004286  C0A9  F0D3         	movff	?___flneg,sin@f
  5205  00428A  C0AA  F0D4         	movff	?___flneg+1,sin@f+1
  5206  00428E  C0AB  F0D5         	movff	?___flneg+2,sin@f+2
  5207  004292  C0AC  F0D6         	movff	?___flneg+3,sin@f+3
  5208  004296  0E01               	movlw	1
  5209  004298  0101               	movlb	1	; () banked
  5210  00429A  6F95               	movwf	sin@sgn& (0+255),b
  5211  00429C                     l7132:
  5212  00429C  C0D3  F090         	movff	sin@f,___flmul@b
  5213  0042A0  C0D4  F091         	movff	sin@f+1,___flmul@b+1
  5214  0042A4  C0D5  F092         	movff	sin@f+2,___flmul@b+2
  5215  0042A8  C0D6  F093         	movff	sin@f+3,___flmul@b+3
  5216  0042AC  0E83               	movlw	131
  5217  0042AE  0100               	movlb	0	; () banked
  5218  0042B0  6F94               	movwf	___flmul@a& (0+255),b
  5219  0042B2  0EF9               	movlw	249
  5220  0042B4  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5221  0042B6  0E22               	movlw	34
  5222  0042B8  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5223  0042BA  0E3E               	movlw	62
  5224  0042BC  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5225  0042BE  EC63  F017         	call	___flmul	;wreg free
  5226  0042C2  C090  F0D3         	movff	?___flmul,sin@f
  5227  0042C6  C091  F0D4         	movff	?___flmul+1,sin@f+1
  5228  0042CA  C092  F0D5         	movff	?___flmul+2,sin@f+2
  5229  0042CE  C093  F0D6         	movff	?___flmul+3,sin@f+3
  5230  0042D2  C0D3  F0CB         	movff	sin@f,___flsub@b
  5231  0042D6  C0D4  F0CC         	movff	sin@f+1,___flsub@b+1
  5232  0042DA  C0D5  F0CD         	movff	sin@f+2,___flsub@b+2
  5233  0042DE  C0D6  F0CE         	movff	sin@f+3,___flsub@b+3
  5234  0042E2  C0D3  F0C1         	movff	sin@f,floor@x
  5235  0042E6  C0D4  F0C2         	movff	sin@f+1,floor@x+1
  5236  0042EA  C0D5  F0C3         	movff	sin@f+2,floor@x+2
  5237  0042EE  C0D6  F0C4         	movff	sin@f+3,floor@x+3
  5238  0042F2  ECBA  F02A         	call	_floor	;wreg free
  5239  0042F6  C0C1  F0CF         	movff	?_floor,___flsub@a
  5240  0042FA  C0C2  F0D0         	movff	?_floor+1,___flsub@a+1
  5241  0042FE  C0C3  F0D1         	movff	?_floor+2,___flsub@a+2
  5242  004302  C0C4  F0D2         	movff	?_floor+3,___flsub@a+3
  5243  004306  EC7E  F02E         	call	___flsub	;wreg free
  5244  00430A  C0CB  F0D3         	movff	?___flsub,sin@f
  5245  00430E  C0CC  F0D4         	movff	?___flsub+1,sin@f+1
  5246  004312  C0CD  F0D5         	movff	?___flsub+2,sin@f+2
  5247  004316  C0CE  F0D6         	movff	?___flsub+3,sin@f+3
  5248  00431A  C0D3  F090         	movff	sin@f,___flmul@b
  5249  00431E  C0D4  F091         	movff	sin@f+1,___flmul@b+1
  5250  004322  C0D5  F092         	movff	sin@f+2,___flmul@b+2
  5251  004326  C0D6  F093         	movff	sin@f+3,___flmul@b+3
  5252  00432A  0E00               	movlw	0
  5253  00432C  0100               	movlb	0	; () banked
  5254  00432E  6F94               	movwf	___flmul@a& (0+255),b
  5255  004330  0E00               	movlw	0
  5256  004332  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5257  004334  0E80               	movlw	128
  5258  004336  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5259  004338  0E40               	movlw	64
  5260  00433A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5261  00433C  EC63  F017         	call	___flmul	;wreg free
  5262  004340  C090  F0D3         	movff	?___flmul,sin@f
  5263  004344  C091  F0D4         	movff	?___flmul+1,sin@f+1
  5264  004348  C092  F0D5         	movff	?___flmul+2,sin@f+2
  5265  00434C  C093  F0D6         	movff	?___flmul+3,sin@f+3
  5266  004350  0E00               	movlw	0
  5267  004352  0100               	movlb	0	; () banked
  5268  004354  6FB1               	movwf	___flge@ff1& (0+255),b
  5269  004356  0E00               	movlw	0
  5270  004358  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  5271  00435A  0E00               	movlw	0
  5272  00435C  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  5273  00435E  0E40               	movlw	64
  5274  004360  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  5275  004362  C0D3  F0B5         	movff	sin@f,___flge@ff2
  5276  004366  C0D4  F0B6         	movff	sin@f+1,___flge@ff2+1
  5277  00436A  C0D5  F0B7         	movff	sin@f+2,___flge@ff2+2
  5278  00436E  C0D6  F0B8         	movff	sin@f+3,___flge@ff2+3
  5279  004372  EC57  F029         	call	___flge	;wreg free
  5280  004376  0100               	movlb	0	; () banked
  5281  004378  B0D8               	btfsc	status,0,c
  5282  00437A  D025               	goto	l7144
  5283                           
  5284                           ; BSR set to: 0
  5285  00437C  C0D3  F0CB         	movff	sin@f,___flsub@b
  5286  004380  C0D4  F0CC         	movff	sin@f+1,___flsub@b+1
  5287  004384  C0D5  F0CD         	movff	sin@f+2,___flsub@b+2
  5288  004388  C0D6  F0CE         	movff	sin@f+3,___flsub@b+3
  5289  00438C  0E00               	movlw	0
  5290  00438E  0100               	movlb	0	; () banked
  5291  004390  6FCF               	movwf	___flsub@a& (0+255),b
  5292  004392  0E00               	movlw	0
  5293  004394  6FD0               	movwf	(___flsub@a+1)& (0+255),b
  5294  004396  0E00               	movlw	0
  5295  004398  6FD1               	movwf	(___flsub@a+2)& (0+255),b
  5296  00439A  0E40               	movlw	64
  5297  00439C  6FD2               	movwf	(___flsub@a+3)& (0+255),b
  5298  00439E  EC7E  F02E         	call	___flsub	;wreg free
  5299  0043A2  C0CB  F0D3         	movff	?___flsub,sin@f
  5300  0043A6  C0CC  F0D4         	movff	?___flsub+1,sin@f+1
  5301  0043AA  C0CD  F0D5         	movff	?___flsub+2,sin@f+2
  5302  0043AE  C0CE  F0D6         	movff	?___flsub+3,sin@f+3
  5303  0043B2  0101               	movlb	1	; () banked
  5304  0043B4  5195               	movf	sin@sgn& (0+255),w,b
  5305  0043B6  0101               	movlb	1	; () banked
  5306  0043B8  A4D8               	btfss	status,2,c
  5307  0043BA  D002               	goto	u9100
  5308  0043BC  0E01               	movlw	1
  5309  0043BE  D001               	goto	u9110
  5310  0043C0                     u9100:
  5311  0043C0  0E00               	movlw	0
  5312  0043C2                     u9110:
  5313  0043C2  0101               	movlb	1	; () banked
  5314  0043C4  6F95               	movwf	sin@sgn& (0+255),b
  5315  0043C6                     l7144:
  5316  0043C6  0E00               	movlw	0
  5317  0043C8  0100               	movlb	0	; () banked
  5318  0043CA  6FB1               	movwf	___flge@ff1& (0+255),b
  5319  0043CC  0E00               	movlw	0
  5320  0043CE  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  5321  0043D0  0E80               	movlw	128
  5322  0043D2  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  5323  0043D4  0E3F               	movlw	63
  5324  0043D6  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  5325  0043D8  C0D3  F0B5         	movff	sin@f,___flge@ff2
  5326  0043DC  C0D4  F0B6         	movff	sin@f+1,___flge@ff2+1
  5327  0043E0  C0D5  F0B7         	movff	sin@f+2,___flge@ff2+2
  5328  0043E4  C0D6  F0B8         	movff	sin@f+3,___flge@ff2+3
  5329  0043E8  EC57  F029         	call	___flge	;wreg free
  5330  0043EC  0100               	movlb	0	; () banked
  5331  0043EE  B0D8               	btfsc	status,0,c
  5332  0043F0  D025               	goto	l7148
  5333                           
  5334                           ; BSR set to: 0
  5335  0043F2  C0D3  F0A9         	movff	sin@f,___flneg@f1
  5336  0043F6  C0D4  F0AA         	movff	sin@f+1,___flneg@f1+1
  5337  0043FA  C0D5  F0AB         	movff	sin@f+2,___flneg@f1+2
  5338  0043FE  C0D6  F0AC         	movff	sin@f+3,___flneg@f1+3
  5339  004402  ECDE  F02E         	call	___flneg	;wreg free
  5340  004406  C0A9  F0AD         	movff	?___flneg,___fladd@b
  5341  00440A  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  5342  00440E  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  5343  004412  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  5344  004416  0E00               	movlw	0
  5345  004418  0100               	movlb	0	; () banked
  5346  00441A  6FB1               	movwf	___fladd@a& (0+255),b
  5347  00441C  0E00               	movlw	0
  5348  00441E  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  5349  004420  0E00               	movlw	0
  5350  004422  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  5351  004424  0E40               	movlw	64
  5352  004426  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  5353  004428  EC0F  F015         	call	___fladd	;wreg free
  5354  00442C  C0AD  F0D3         	movff	?___fladd,sin@f
  5355  004430  C0AE  F0D4         	movff	?___fladd+1,sin@f+1
  5356  004434  C0AF  F0D5         	movff	?___fladd+2,sin@f+2
  5357  004438  C0B0  F0D6         	movff	?___fladd+3,sin@f+3
  5358  00443C                     l7148:
  5359  00443C  C0D3  F090         	movff	sin@f,___flmul@b
  5360  004440  C0D4  F091         	movff	sin@f+1,___flmul@b+1
  5361  004444  C0D5  F092         	movff	sin@f+2,___flmul@b+2
  5362  004448  C0D6  F093         	movff	sin@f+3,___flmul@b+3
  5363  00444C  C0D3  F094         	movff	sin@f,___flmul@a
  5364  004450  C0D4  F095         	movff	sin@f+1,___flmul@a+1
  5365  004454  C0D5  F096         	movff	sin@f+2,___flmul@a+2
  5366  004458  C0D6  F097         	movff	sin@f+3,___flmul@a+3
  5367  00445C  EC63  F017         	call	___flmul	;wreg free
  5368  004460  C090  F191         	movff	?___flmul,sin@x2
  5369  004464  C091  F192         	movff	?___flmul+1,sin@x2+1
  5370  004468  C092  F193         	movff	?___flmul+2,sin@x2+2
  5371  00446C  C093  F194         	movff	?___flmul+3,sin@x2+3
  5372  004470  C191  F0C1         	movff	sin@x2,eval_poly@x
  5373  004474  C192  F0C2         	movff	sin@x2+1,eval_poly@x+1
  5374  004478  C193  F0C3         	movff	sin@x2+2,eval_poly@x+2
  5375  00447C  C194  F0C4         	movff	sin@x2+3,eval_poly@x+3
  5376  004480  0E41               	movlw	low sin@coeff_b
  5377  004482  0100               	movlb	0	; () banked
  5378  004484  6FC5               	movwf	eval_poly@d& (0+255),b
  5379  004486  0E0D               	movlw	high sin@coeff_b
  5380  004488  0100               	movlb	0	; () banked
  5381  00448A  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  5382  00448C  0E00               	movlw	0
  5383  00448E  0100               	movlb	0	; () banked
  5384  004490  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  5385  004492  0E03               	movlw	3
  5386  004494  6FC7               	movwf	eval_poly@n& (0+255),b
  5387  004496  EC4C  F02B         	call	_eval_poly	;wreg free
  5388  00449A  C0C1  F189         	movff	?_eval_poly,sin@y
  5389  00449E  C0C2  F18A         	movff	?_eval_poly+1,sin@y+1
  5390  0044A2  C0C3  F18B         	movff	?_eval_poly+2,sin@y+2
  5391  0044A6  C0C4  F18C         	movff	?_eval_poly+3,sin@y+3
  5392  0044AA  C189  F07B         	movff	sin@y,___fldiv@a
  5393  0044AE  C18A  F07C         	movff	sin@y+1,___fldiv@a+1
  5394  0044B2  C18B  F07D         	movff	sin@y+2,___fldiv@a+2
  5395  0044B6  C18C  F07E         	movff	sin@y+3,___fldiv@a+3
  5396  0044BA  0E00               	movlw	0
  5397  0044BC  0100               	movlb	0	; () banked
  5398  0044BE  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  5399  0044C0  0E04               	movlw	4
  5400  0044C2  6FC7               	movwf	eval_poly@n& (0+255),b
  5401  0044C4  0E2D               	movlw	low sin@coeff_a
  5402  0044C6  0100               	movlb	0	; () banked
  5403  0044C8  6FC5               	movwf	eval_poly@d& (0+255),b
  5404  0044CA  0E0D               	movlw	high sin@coeff_a
  5405  0044CC  0100               	movlb	0	; () banked
  5406  0044CE  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  5407  0044D0  C191  F0C1         	movff	sin@x2,eval_poly@x
  5408  0044D4  C192  F0C2         	movff	sin@x2+1,eval_poly@x+1
  5409  0044D8  C193  F0C3         	movff	sin@x2+2,eval_poly@x+2
  5410  0044DC  C194  F0C4         	movff	sin@x2+3,eval_poly@x+3
  5411  0044E0  EC4C  F02B         	call	_eval_poly	;wreg free
  5412  0044E4  C0C1  F077         	movff	?_eval_poly,___fldiv@b
  5413  0044E8  C0C2  F078         	movff	?_eval_poly+1,___fldiv@b+1
  5414  0044EC  C0C3  F079         	movff	?_eval_poly+2,___fldiv@b+2
  5415  0044F0  C0C4  F07A         	movff	?_eval_poly+3,___fldiv@b+3
  5416  0044F4  EC84  F01D         	call	___fldiv	;wreg free
  5417  0044F8  C077  F18D         	movff	?___fldiv,_sin$3752
  5418  0044FC  C078  F18E         	movff	?___fldiv+1,_sin$3752+1
  5419  004500  C079  F18F         	movff	?___fldiv+2,_sin$3752+2
  5420  004504  C07A  F190         	movff	?___fldiv+3,_sin$3752+3
  5421  004508  C0D3  F090         	movff	sin@f,___flmul@b
  5422  00450C  C0D4  F091         	movff	sin@f+1,___flmul@b+1
  5423  004510  C0D5  F092         	movff	sin@f+2,___flmul@b+2
  5424  004514  C0D6  F093         	movff	sin@f+3,___flmul@b+3
  5425  004518  C18D  F094         	movff	_sin$3752,___flmul@a
  5426  00451C  C18E  F095         	movff	_sin$3752+1,___flmul@a+1
  5427  004520  C18F  F096         	movff	_sin$3752+2,___flmul@a+2
  5428  004524  C190  F097         	movff	_sin$3752+3,___flmul@a+3
  5429  004528  EC63  F017         	call	___flmul	;wreg free
  5430  00452C  C090  F0D3         	movff	?___flmul,sin@f
  5431  004530  C091  F0D4         	movff	?___flmul+1,sin@f+1
  5432  004534  C092  F0D5         	movff	?___flmul+2,sin@f+2
  5433  004538  C093  F0D6         	movff	?___flmul+3,sin@f+3
  5434  00453C  0101               	movlb	1	; () banked
  5435  00453E  5195               	movf	sin@sgn& (0+255),w,b
  5436  004540  0101               	movlb	1	; () banked
  5437  004542  B4D8               	btfsc	status,2,c
  5438  004544  D013               	goto	l1295
  5439                           
  5440                           ; BSR set to: 1
  5441  004546  C0D3  F0A9         	movff	sin@f,___flneg@f1
  5442  00454A  C0D4  F0AA         	movff	sin@f+1,___flneg@f1+1
  5443  00454E  C0D5  F0AB         	movff	sin@f+2,___flneg@f1+2
  5444  004552  C0D6  F0AC         	movff	sin@f+3,___flneg@f1+3
  5445  004556  ECDE  F02E         	call	___flneg	;wreg free
  5446  00455A  C0A9  F0D3         	movff	?___flneg,?_sin
  5447  00455E  C0AA  F0D4         	movff	?___flneg+1,?_sin+1
  5448  004562  C0AB  F0D5         	movff	?___flneg+2,?_sin+2
  5449  004566  C0AC  F0D6         	movff	?___flneg+3,?_sin+3
  5450  00456A  0012               	return	
  5451  00456C                     l1295:
  5452                           
  5453                           ; BSR set to: 1
  5454  00456C  C0D3  F0D3         	movff	sin@f,?_sin
  5455  004570  C0D4  F0D4         	movff	sin@f+1,?_sin+1
  5456  004574  C0D5  F0D5         	movff	sin@f+2,?_sin+2
  5457  004578  C0D6  F0D6         	movff	sin@f+3,?_sin+3
  5458  00457C  0012               	return		;funcret
  5459  00457E                     __end_of_sin:
  5460                           	opt stack 0
  5461                           tblptru	equ	0xFF8
  5462                           tblptrh	equ	0xFF7
  5463                           tblptrl	equ	0xFF6
  5464                           tablat	equ	0xFF5
  5465                           postinc0	equ	0xFEE
  5466                           wreg	equ	0xFE8
  5467                           postdec1	equ	0xFE5
  5468                           fsr1l	equ	0xFE1
  5469                           indf2	equ	0xFDF
  5470                           postinc2	equ	0xFDE
  5471                           postdec2	equ	0xFDD
  5472                           fsr2h	equ	0xFDA
  5473                           fsr2l	equ	0xFD9
  5474                           status	equ	0xFD8
  5475                           
  5476 ;; *************** function _floor *****************
  5477 ;; Defined at:
  5478 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;  x               4   97[BANK0 ] unsigned char 
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;  i               4  101[BANK0 ] unsigned char 
  5483 ;;  expon           2  105[BANK0 ] int 
  5484 ;; Return value:  Size  Location     Type
  5485 ;;                  4   97[BANK0 ] int 
  5486 ;; Registers used:
  5487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5488 ;; Tracked objects:
  5489 ;;		On entry : 0/0
  5490 ;;		On exit  : 0/0
  5491 ;;		Unchanged: 0/0
  5492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5493 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5494 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5496 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5497 ;;Total ram usage:       10 bytes
  5498 ;; Hardware stack levels used:    1
  5499 ;; Hardware stack levels required when called:    5
  5500 ;; This function calls:
  5501 ;;		___fladd
  5502 ;;		___flge
  5503 ;;		___fltol
  5504 ;;		___xxtofl
  5505 ;;		_frexp
  5506 ;; This function is called by:
  5507 ;;		_sin
  5508 ;; This function uses a non-reentrant model
  5509 ;;
  5510                           
  5511                           	psect	text11
  5512  005574                     __ptext11:
  5513                           	opt stack 0
  5514  005574                     _floor:
  5515                           	opt stack 21
  5516                           
  5517                           ;incstack = 0
  5518  005574  C0C1  F077         	movff	floor@x,frexp@value
  5519  005578  C0C2  F078         	movff	floor@x+1,frexp@value+1
  5520  00557C  C0C3  F079         	movff	floor@x+2,frexp@value+2
  5521  005580  C0C4  F07A         	movff	floor@x+3,frexp@value+3
  5522  005584  0EC9               	movlw	low floor@expon
  5523  005586  0100               	movlb	0	; () banked
  5524  005588  6F7B               	movwf	frexp@eptr& (0+255),b
  5525  00558A  0E00               	movlw	high floor@expon
  5526  00558C  0100               	movlb	0	; () banked
  5527  00558E  6F7C               	movwf	(frexp@eptr+1)& (0+255),b
  5528  005590  EC40  F02D         	call	_frexp	;wreg free
  5529  005594  0100               	movlb	0	; () banked
  5530  005596  AFCA               	btfss	(floor@expon+1)& (0+255),7,b
  5531  005598  D017               	goto	l6738
  5532                           
  5533                           ; BSR set to: 0
  5534  00559A  0100               	movlb	0	; () banked
  5535  00559C  AFC4               	btfss	(floor@x+3)& (0+255),7,b
  5536  00559E  D00A               	goto	l6734
  5537                           
  5538                           ; BSR set to: 0
  5539  0055A0  0E00               	movlw	0
  5540  0055A2  0100               	movlb	0	; () banked
  5541  0055A4  6FC1               	movwf	?_floor& (0+255),b
  5542  0055A6  0E00               	movlw	0
  5543  0055A8  6FC2               	movwf	(?_floor+1)& (0+255),b
  5544  0055AA  0E80               	movlw	128
  5545  0055AC  6FC3               	movwf	(?_floor+2)& (0+255),b
  5546  0055AE  0EBF               	movlw	191
  5547  0055B0  6FC4               	movwf	(?_floor+3)& (0+255),b
  5548                           
  5549                           ; BSR set to: 0
  5550  0055B2  0012               	return	
  5551  0055B4                     l6734:
  5552                           
  5553                           ; BSR set to: 0
  5554  0055B4  0E00               	movlw	0
  5555  0055B6  0100               	movlb	0	; () banked
  5556  0055B8  6FC1               	movwf	?_floor& (0+255),b
  5557  0055BA  0E00               	movlw	0
  5558  0055BC  6FC2               	movwf	(?_floor+1)& (0+255),b
  5559  0055BE  0E00               	movlw	0
  5560  0055C0  6FC3               	movwf	(?_floor+2)& (0+255),b
  5561  0055C2  0E00               	movlw	0
  5562  0055C4  6FC4               	movwf	(?_floor+3)& (0+255),b
  5563                           
  5564                           ; BSR set to: 0
  5565  0055C6  0012               	return	
  5566  0055C8                     l6738:
  5567                           
  5568                           ; BSR set to: 0
  5569  0055C8  0100               	movlb	0	; () banked
  5570  0055CA  51CA               	movf	(floor@expon+1)& (0+255),w,b
  5571  0055CC  E105               	bnz	u8470
  5572  0055CE  0E1D               	movlw	29
  5573  0055D0  0100               	movlb	0	; () banked
  5574  0055D2  5DC9               	subwf	floor@expon& (0+255),w,b
  5575  0055D4  A0D8               	btfss	status,0,c
  5576  0055D6  D009               	goto	l6742
  5577  0055D8                     u8470:
  5578                           
  5579                           ; BSR set to: 0
  5580  0055D8  C0C1  F0C1         	movff	floor@x,?_floor
  5581  0055DC  C0C2  F0C2         	movff	floor@x+1,?_floor+1
  5582  0055E0  C0C3  F0C3         	movff	floor@x+2,?_floor+2
  5583  0055E4  C0C4  F0C4         	movff	floor@x+3,?_floor+3
  5584  0055E8  0012               	return	
  5585  0055EA                     l6742:
  5586                           
  5587                           ; BSR set to: 0
  5588  0055EA  C0C1  F077         	movff	floor@x,___fltol@f1
  5589  0055EE  C0C2  F078         	movff	floor@x+1,___fltol@f1+1
  5590  0055F2  C0C3  F079         	movff	floor@x+2,___fltol@f1+2
  5591  0055F6  C0C4  F07A         	movff	floor@x+3,___fltol@f1+3
  5592  0055FA  ECD8  F02B         	call	___fltol	;wreg free
  5593  0055FE  C077  F085         	movff	?___fltol,___xxtofl@val
  5594  005602  C078  F086         	movff	?___fltol+1,___xxtofl@val+1
  5595  005606  C079  F087         	movff	?___fltol+2,___xxtofl@val+2
  5596  00560A  C07A  F088         	movff	?___fltol+3,___xxtofl@val+3
  5597  00560E  0E01               	movlw	1
  5598  005610  ECB7  F026         	call	___xxtofl
  5599  005614  C085  F0C5         	movff	?___xxtofl,floor@i
  5600  005618  C086  F0C6         	movff	?___xxtofl+1,floor@i+1
  5601  00561C  C087  F0C7         	movff	?___xxtofl+2,floor@i+2
  5602  005620  C088  F0C8         	movff	?___xxtofl+3,floor@i+3
  5603  005624  C0C1  F0B1         	movff	floor@x,___flge@ff1
  5604  005628  C0C2  F0B2         	movff	floor@x+1,___flge@ff1+1
  5605  00562C  C0C3  F0B3         	movff	floor@x+2,___flge@ff1+2
  5606  005630  C0C4  F0B4         	movff	floor@x+3,___flge@ff1+3
  5607  005634  C0C5  F0B5         	movff	floor@i,___flge@ff2
  5608  005638  C0C6  F0B6         	movff	floor@i+1,___flge@ff2+1
  5609  00563C  C0C7  F0B7         	movff	floor@i+2,___flge@ff2+2
  5610  005640  C0C8  F0B8         	movff	floor@i+3,___flge@ff2+3
  5611  005644  EC57  F029         	call	___flge	;wreg free
  5612  005648  0100               	movlb	0	; () banked
  5613  00564A  B0D8               	btfsc	status,0,c
  5614  00564C  D01C               	goto	l1464
  5615                           
  5616                           ; BSR set to: 0
  5617  00564E  C0C5  F0AD         	movff	floor@i,___fladd@b
  5618  005652  C0C6  F0AE         	movff	floor@i+1,___fladd@b+1
  5619  005656  C0C7  F0AF         	movff	floor@i+2,___fladd@b+2
  5620  00565A  C0C8  F0B0         	movff	floor@i+3,___fladd@b+3
  5621  00565E  0E00               	movlw	0
  5622  005660  0100               	movlb	0	; () banked
  5623  005662  6FB1               	movwf	___fladd@a& (0+255),b
  5624  005664  0E00               	movlw	0
  5625  005666  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  5626  005668  0E80               	movlw	128
  5627  00566A  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  5628  00566C  0EBF               	movlw	191
  5629  00566E  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  5630  005670  EC0F  F015         	call	___fladd	;wreg free
  5631  005674  C0AD  F0C1         	movff	?___fladd,?_floor
  5632  005678  C0AE  F0C2         	movff	?___fladd+1,?_floor+1
  5633  00567C  C0AF  F0C3         	movff	?___fladd+2,?_floor+2
  5634  005680  C0B0  F0C4         	movff	?___fladd+3,?_floor+3
  5635  005684  0012               	return	
  5636  005686                     l1464:
  5637                           
  5638                           ; BSR set to: 0
  5639  005686  C0C5  F0C1         	movff	floor@i,?_floor
  5640  00568A  C0C6  F0C2         	movff	floor@i+1,?_floor+1
  5641  00568E  C0C7  F0C3         	movff	floor@i+2,?_floor+2
  5642  005692  C0C8  F0C4         	movff	floor@i+3,?_floor+3
  5643  005696  0012               	return		;funcret
  5644  005698                     __end_of_floor:
  5645                           	opt stack 0
  5646                           tblptru	equ	0xFF8
  5647                           tblptrh	equ	0xFF7
  5648                           tblptrl	equ	0xFF6
  5649                           tablat	equ	0xFF5
  5650                           postinc0	equ	0xFEE
  5651                           wreg	equ	0xFE8
  5652                           postdec1	equ	0xFE5
  5653                           fsr1l	equ	0xFE1
  5654                           indf2	equ	0xFDF
  5655                           postinc2	equ	0xFDE
  5656                           postdec2	equ	0xFDD
  5657                           fsr2h	equ	0xFDA
  5658                           fsr2l	equ	0xFD9
  5659                           status	equ	0xFD8
  5660                           
  5661 ;; *************** function _frexp *****************
  5662 ;; Defined at:
  5663 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  value           4   23[BANK0 ] int 
  5666 ;;  eptr            2   27[BANK0 ] PTR int 
  5667 ;;		 -> floor@expon(2), 
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;		None
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  4   23[BANK0 ] PTR int 
  5672 ;; Registers used:
  5673 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5679 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5681 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5682 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5683 ;;Total ram usage:        8 bytes
  5684 ;; Hardware stack levels used:    1
  5685 ;; Hardware stack levels required when called:    4
  5686 ;; This function calls:
  5687 ;;		Nothing
  5688 ;; This function is called by:
  5689 ;;		_floor
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text12
  5694  005A80                     __ptext12:
  5695                           	opt stack 0
  5696  005A80                     _frexp:
  5697                           	opt stack 21
  5698                           
  5699                           ;incstack = 0
  5700  005A80  0100               	movlb	0	; () banked
  5701  005A82  5177               	movf	frexp@value& (0+255),w,b
  5702  005A84  0100               	movlb	0	; () banked
  5703  005A86  1178               	iorwf	(frexp@value+1)& (0+255),w,b
  5704  005A88  0100               	movlb	0	; () banked
  5705  005A8A  1179               	iorwf	(frexp@value+2)& (0+255),w,b
  5706  005A8C  0100               	movlb	0	; () banked
  5707  005A8E  117A               	iorwf	(frexp@value+3)& (0+255),w,b
  5708  005A90  A4D8               	btfss	status,2,c
  5709  005A92  D009               	goto	l6560
  5710                           
  5711                           ; BSR set to: 0
  5712  005A94  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5713  005A98  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5714  005A9C  0E00               	movlw	0
  5715  005A9E  6EDE               	movwf	postinc2,c
  5716  005AA0  0E00               	movlw	0
  5717  005AA2  6EDD               	movwf	postdec2,c
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;	Return value of _frexp is never used
  5721  005AA4  0012               	return	
  5722  005AA6                     l6560:
  5723                           
  5724                           ; BSR set to: 0
  5725  005AA6  0100               	movlb	0	; () banked
  5726  005AA8  517A               	movf	(frexp@value+3)& (0+255),w,b
  5727  005AAA  0B7F               	andlw	127
  5728  005AAC  0100               	movlb	0	; () banked
  5729  005AAE  6F7D               	movwf	??_frexp& (0+255),b
  5730  005AB0  6B7E               	clrf	(??_frexp+1)& (0+255),b
  5731  005AB2  90D8               	bcf	status,0,c
  5732  005AB4  0100               	movlb	0	; () banked
  5733  005AB6  377D               	rlcf	??_frexp& (0+255),f,b
  5734  005AB8  377E               	rlcf	(??_frexp+1)& (0+255),f,b
  5735  005ABA  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5736  005ABE  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5737  005AC2  C07D  FFDE         	movff	??_frexp,postinc2
  5738  005AC6  C07E  FFDD         	movff	??_frexp+1,postdec2
  5739  005ACA  0100               	movlb	0	; () banked
  5740  005ACC  AF79               	btfss	(frexp@value+2)& (0+255),7,b
  5741  005ACE  D004               	goto	u8190
  5742  005AD0  0100               	movlb	0	; () banked
  5743  005AD2  6B7D               	clrf	??_frexp& (0+255),b
  5744  005AD4  2B7D               	incf	??_frexp& (0+255),f,b
  5745  005AD6  D002               	goto	u8198
  5746  005AD8                     u8190:
  5747  005AD8  0100               	movlb	0	; () banked
  5748  005ADA  6B7D               	clrf	??_frexp& (0+255),b
  5749  005ADC                     u8198:
  5750  005ADC  0100               	movlb	0	; () banked
  5751  005ADE  517D               	movf	??_frexp& (0+255),w,b
  5752  005AE0  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5753  005AE4  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5754  005AE8  12DE               	iorwf	postinc2,f,c
  5755  005AEA  0E00               	movlw	0
  5756  005AEC  12DD               	iorwf	postdec2,f,c
  5757                           
  5758                           ; BSR set to: 0
  5759  005AEE  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5760  005AF2  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5761  005AF6  0E82               	movlw	130
  5762  005AF8  26DE               	addwf	postinc2,f,c
  5763  005AFA  0EFF               	movlw	255
  5764  005AFC  22DD               	addwfc	postdec2,f,c
  5765                           
  5766                           ; BSR set to: 0
  5767  005AFE  0100               	movlb	0	; () banked
  5768  005B00  817A               	bsf	(frexp@value+3)& (0+255),0,b
  5769  005B02  837A               	bsf	(frexp@value+3)& (0+255),1,b
  5770  005B04  857A               	bsf	(frexp@value+3)& (0+255),2,b
  5771  005B06  877A               	bsf	(frexp@value+3)& (0+255),3,b
  5772  005B08  897A               	bsf	(frexp@value+3)& (0+255),4,b
  5773  005B0A  8B7A               	bsf	(frexp@value+3)& (0+255),5,b
  5774  005B0C  9D7A               	bcf	(frexp@value+3)& (0+255),6,b
  5775                           
  5776                           ; BSR set to: 0
  5777  005B0E  0100               	movlb	0	; () banked
  5778  005B10  9F79               	bcf	(frexp@value+2)& (0+255),7,b
  5779  005B12  0012               	return	
  5780  005B14                     __end_of_frexp:
  5781                           	opt stack 0
  5782                           tblptru	equ	0xFF8
  5783                           tblptrh	equ	0xFF7
  5784                           tblptrl	equ	0xFF6
  5785                           tablat	equ	0xFF5
  5786                           postinc0	equ	0xFEE
  5787                           wreg	equ	0xFE8
  5788                           postdec1	equ	0xFE5
  5789                           fsr1l	equ	0xFE1
  5790                           indf2	equ	0xFDF
  5791                           postinc2	equ	0xFDE
  5792                           postdec2	equ	0xFDD
  5793                           fsr2h	equ	0xFDA
  5794                           fsr2l	equ	0xFD9
  5795                           status	equ	0xFD8
  5796                           
  5797 ;; *************** function ___xxtofl *****************
  5798 ;; Defined at:
  5799 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;  sign            1    wreg     unsigned char 
  5802 ;;  val             4   37[BANK0 ] long 
  5803 ;; Auto vars:     Size  Location     Type
  5804 ;;  sign            1   45[BANK0 ] unsigned char 
  5805 ;;  arg             4   47[BANK0 ] unsigned long 
  5806 ;;  exp             1   46[BANK0 ] unsigned char 
  5807 ;; Return value:  Size  Location     Type
  5808 ;;                  4   37[BANK0 ] unsigned char 
  5809 ;; Registers used:
  5810 ;;		wreg, status,2, status,0
  5811 ;; Tracked objects:
  5812 ;;		On entry : 0/0
  5813 ;;		On exit  : 0/0
  5814 ;;		Unchanged: 0/0
  5815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5816 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5817 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5818 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5819 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5820 ;;Total ram usage:       14 bytes
  5821 ;; Hardware stack levels used:    1
  5822 ;; Hardware stack levels required when called:    4
  5823 ;; This function calls:
  5824 ;;		Nothing
  5825 ;; This function is called by:
  5826 ;;		_park_search
  5827 ;;		_park_routine
  5828 ;;		_parallelo
  5829 ;;		_floor
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           	psect	text13
  5834  004D6E                     __ptext13:
  5835                           	opt stack 0
  5836  004D6E                     ___xxtofl:
  5837                           	opt stack 24
  5838                           
  5839                           ; BSR set to: 0
  5840                           ;incstack = 0
  5841                           ;___xxtofl@sign stored from wreg
  5842  004D6E  0100               	movlb	0	; () banked
  5843  004D70  6F8D               	movwf	___xxtofl@sign& (0+255),b
  5844  004D72  0100               	movlb	0	; () banked
  5845  004D74  518D               	movf	___xxtofl@sign& (0+255),w,b
  5846  004D76  0100               	movlb	0	; () banked
  5847  004D78  B4D8               	btfsc	status,2,c
  5848  004D7A  D01E               	goto	l1439
  5849                           
  5850                           ; BSR set to: 0
  5851  004D7C  0100               	movlb	0	; () banked
  5852  004D7E  AF88               	btfss	(___xxtofl@val+3)& (0+255),7,b
  5853  004D80  D01B               	goto	l1439
  5854                           
  5855                           ; BSR set to: 0
  5856  004D82  C085  F089         	movff	___xxtofl@val,??___xxtofl
  5857  004D86  C086  F08A         	movff	___xxtofl@val+1,??___xxtofl+1
  5858  004D8A  C087  F08B         	movff	___xxtofl@val+2,??___xxtofl+2
  5859  004D8E  C088  F08C         	movff	___xxtofl@val+3,??___xxtofl+3
  5860  004D92  0100               	movlb	0	; () banked
  5861  004D94  1F89               	comf	??___xxtofl& (0+255),f,b
  5862  004D96  1F8A               	comf	(??___xxtofl+1)& (0+255),f,b
  5863  004D98  1F8B               	comf	(??___xxtofl+2)& (0+255),f,b
  5864  004D9A  1F8C               	comf	(??___xxtofl+3)& (0+255),f,b
  5865  004D9C  2B89               	incf	??___xxtofl& (0+255),f,b
  5866  004D9E  0E00               	movlw	0
  5867  004DA0  238A               	addwfc	(??___xxtofl+1)& (0+255),f,b
  5868  004DA2  238B               	addwfc	(??___xxtofl+2)& (0+255),f,b
  5869  004DA4  238C               	addwfc	(??___xxtofl+3)& (0+255),f,b
  5870  004DA6  C089  F08F         	movff	??___xxtofl,___xxtofl@arg
  5871  004DAA  C08A  F090         	movff	??___xxtofl+1,___xxtofl@arg+1
  5872  004DAE  C08B  F091         	movff	??___xxtofl+2,___xxtofl@arg+2
  5873  004DB2  C08C  F092         	movff	??___xxtofl+3,___xxtofl@arg+3
  5874  004DB6  D008               	goto	l6518
  5875  004DB8                     l1439:
  5876                           
  5877                           ; BSR set to: 0
  5878  004DB8  C085  F08F         	movff	___xxtofl@val,___xxtofl@arg
  5879  004DBC  C086  F090         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5880  004DC0  C087  F091         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5881  004DC4  C088  F092         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5882  004DC8                     l6518:
  5883                           
  5884                           ; BSR set to: 0
  5885  004DC8  0100               	movlb	0	; () banked
  5886  004DCA  5185               	movf	___xxtofl@val& (0+255),w,b
  5887  004DCC  0100               	movlb	0	; () banked
  5888  004DCE  1186               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  5889  004DD0  0100               	movlb	0	; () banked
  5890  004DD2  1187               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  5891  004DD4  0100               	movlb	0	; () banked
  5892  004DD6  1188               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  5893  004DD8  A4D8               	btfss	status,2,c
  5894  004DDA  D00A               	goto	l6524
  5895                           
  5896                           ; BSR set to: 0
  5897  004DDC  0E00               	movlw	0
  5898  004DDE  0100               	movlb	0	; () banked
  5899  004DE0  6F85               	movwf	?___xxtofl& (0+255),b
  5900  004DE2  0E00               	movlw	0
  5901  004DE4  6F86               	movwf	(?___xxtofl+1)& (0+255),b
  5902  004DE6  0E00               	movlw	0
  5903  004DE8  6F87               	movwf	(?___xxtofl+2)& (0+255),b
  5904  004DEA  0E00               	movlw	0
  5905  004DEC  6F88               	movwf	(?___xxtofl+3)& (0+255),b
  5906                           
  5907                           ; BSR set to: 0
  5908  004DEE  0012               	return	
  5909  004DF0                     l6524:
  5910                           
  5911                           ; BSR set to: 0
  5912  004DF0  0E96               	movlw	150
  5913  004DF2  0100               	movlb	0	; () banked
  5914  004DF4  6F8E               	movwf	___xxtofl@exp& (0+255),b
  5915  004DF6  D008               	goto	l6528
  5916  004DF8                     l6526:
  5917                           
  5918                           ; BSR set to: 0
  5919  004DF8  0100               	movlb	0	; () banked
  5920  004DFA  2B8E               	incf	___xxtofl@exp& (0+255),f,b
  5921  004DFC  0100               	movlb	0	; () banked
  5922  004DFE  90D8               	bcf	status,0,c
  5923  004E00  3392               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  5924  004E02  3391               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  5925  004E04  3390               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  5926  004E06  338F               	rrcf	___xxtofl@arg& (0+255),f,b
  5927  004E08                     l6528:
  5928                           
  5929                           ; BSR set to: 0
  5930  004E08  0E00               	movlw	0
  5931  004E0A  0100               	movlb	0	; () banked
  5932  004E0C  158F               	andwf	___xxtofl@arg& (0+255),w,b
  5933  004E0E  0100               	movlb	0	; () banked
  5934  004E10  6F89               	movwf	??___xxtofl& (0+255),b
  5935  004E12  0E00               	movlw	0
  5936  004E14  0100               	movlb	0	; () banked
  5937  004E16  1590               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  5938  004E18  0100               	movlb	0	; () banked
  5939  004E1A  6F8A               	movwf	(??___xxtofl+1)& (0+255),b
  5940  004E1C  0E00               	movlw	0
  5941  004E1E  0100               	movlb	0	; () banked
  5942  004E20  1591               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  5943  004E22  0100               	movlb	0	; () banked
  5944  004E24  6F8B               	movwf	(??___xxtofl+2)& (0+255),b
  5945  004E26  0EFE               	movlw	254
  5946  004E28  0100               	movlb	0	; () banked
  5947  004E2A  1592               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  5948  004E2C  0100               	movlb	0	; () banked
  5949  004E2E  6F8C               	movwf	(??___xxtofl+3)& (0+255),b
  5950  004E30  0100               	movlb	0	; () banked
  5951  004E32  5189               	movf	??___xxtofl& (0+255),w,b
  5952  004E34  0100               	movlb	0	; () banked
  5953  004E36  118A               	iorwf	(??___xxtofl+1)& (0+255),w,b
  5954  004E38  0100               	movlb	0	; () banked
  5955  004E3A  118B               	iorwf	(??___xxtofl+2)& (0+255),w,b
  5956  004E3C  0100               	movlb	0	; () banked
  5957  004E3E  118C               	iorwf	(??___xxtofl+3)& (0+255),w,b
  5958  004E40  B4D8               	btfsc	status,2,c
  5959  004E42  D010               	goto	l1446
  5960  004E44  D7D9               	goto	l6526
  5961  004E46                     l6530:
  5962                           
  5963                           ; BSR set to: 0
  5964  004E46  0100               	movlb	0	; () banked
  5965  004E48  2B8E               	incf	___xxtofl@exp& (0+255),f,b
  5966                           
  5967                           ; BSR set to: 0
  5968  004E4A  0E01               	movlw	1
  5969  004E4C  0100               	movlb	0	; () banked
  5970  004E4E  278F               	addwf	___xxtofl@arg& (0+255),f,b
  5971  004E50  0E00               	movlw	0
  5972  004E52  2390               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  5973  004E54  2391               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  5974  004E56  2392               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  5975                           
  5976                           ; BSR set to: 0
  5977  004E58  0100               	movlb	0	; () banked
  5978  004E5A  90D8               	bcf	status,0,c
  5979  004E5C  3392               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  5980  004E5E  3391               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  5981  004E60  3390               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  5982  004E62  338F               	rrcf	___xxtofl@arg& (0+255),f,b
  5983  004E64                     l1446:
  5984                           
  5985                           ; BSR set to: 0
  5986  004E64  0E00               	movlw	0
  5987  004E66  0100               	movlb	0	; () banked
  5988  004E68  158F               	andwf	___xxtofl@arg& (0+255),w,b
  5989  004E6A  0100               	movlb	0	; () banked
  5990  004E6C  6F89               	movwf	??___xxtofl& (0+255),b
  5991  004E6E  0E00               	movlw	0
  5992  004E70  0100               	movlb	0	; () banked
  5993  004E72  1590               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  5994  004E74  0100               	movlb	0	; () banked
  5995  004E76  6F8A               	movwf	(??___xxtofl+1)& (0+255),b
  5996  004E78  0E00               	movlw	0
  5997  004E7A  0100               	movlb	0	; () banked
  5998  004E7C  1591               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  5999  004E7E  0100               	movlb	0	; () banked
  6000  004E80  6F8B               	movwf	(??___xxtofl+2)& (0+255),b
  6001  004E82  0EFF               	movlw	255
  6002  004E84  0100               	movlb	0	; () banked
  6003  004E86  1592               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6004  004E88  0100               	movlb	0	; () banked
  6005  004E8A  6F8C               	movwf	(??___xxtofl+3)& (0+255),b
  6006  004E8C  0100               	movlb	0	; () banked
  6007  004E8E  5189               	movf	??___xxtofl& (0+255),w,b
  6008  004E90  0100               	movlb	0	; () banked
  6009  004E92  118A               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6010  004E94  0100               	movlb	0	; () banked
  6011  004E96  118B               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6012  004E98  0100               	movlb	0	; () banked
  6013  004E9A  118C               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6014  004E9C  B4D8               	btfsc	status,2,c
  6015  004E9E  D009               	goto	l6538
  6016  004EA0  D7D2               	goto	l6530
  6017  004EA2                     l6536:
  6018                           
  6019                           ; BSR set to: 0
  6020  004EA2  0100               	movlb	0	; () banked
  6021  004EA4  078E               	decf	___xxtofl@exp& (0+255),f,b
  6022  004EA6  0100               	movlb	0	; () banked
  6023  004EA8  90D8               	bcf	status,0,c
  6024  004EAA  378F               	rlcf	___xxtofl@arg& (0+255),f,b
  6025  004EAC  3790               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6026  004EAE  3791               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6027  004EB0  3792               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6028  004EB2                     l6538:
  6029                           
  6030                           ; BSR set to: 0
  6031  004EB2  0100               	movlb	0	; () banked
  6032  004EB4  BF91               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6033  004EB6  D004               	goto	l1453
  6034                           
  6035                           ; BSR set to: 0
  6036  004EB8  0E02               	movlw	2
  6037  004EBA  0100               	movlb	0	; () banked
  6038  004EBC  618E               	cpfslt	___xxtofl@exp& (0+255),b
  6039  004EBE  D7F1               	goto	l6536
  6040  004EC0                     l1453:
  6041                           
  6042                           ; BSR set to: 0
  6043  004EC0  0100               	movlb	0	; () banked
  6044  004EC2  B18E               	btfsc	___xxtofl@exp& (0+255),0,b
  6045  004EC4  D009               	goto	l1454
  6046                           
  6047                           ; BSR set to: 0
  6048  004EC6  0EFF               	movlw	255
  6049  004EC8  0100               	movlb	0	; () banked
  6050  004ECA  178F               	andwf	___xxtofl@arg& (0+255),f,b
  6051  004ECC  0EFF               	movlw	255
  6052  004ECE  1790               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  6053  004ED0  0E7F               	movlw	127
  6054  004ED2  1791               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  6055  004ED4  0EFF               	movlw	255
  6056  004ED6  1792               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  6057  004ED8                     l1454:
  6058                           
  6059                           ; BSR set to: 0
  6060  004ED8  0100               	movlb	0	; () banked
  6061  004EDA  90D8               	bcf	status,0,c
  6062  004EDC  338E               	rrcf	___xxtofl@exp& (0+255),f,b
  6063  004EDE  C08E  F089         	movff	___xxtofl@exp,??___xxtofl
  6064  004EE2  0100               	movlb	0	; () banked
  6065  004EE4  6B8A               	clrf	(??___xxtofl+1)& (0+255),b
  6066  004EE6  6B8B               	clrf	(??___xxtofl+2)& (0+255),b
  6067  004EE8  6B8C               	clrf	(??___xxtofl+3)& (0+255),b
  6068  004EEA  C089  F08C         	movff	??___xxtofl,??___xxtofl+3
  6069  004EEE  0100               	movlb	0	; () banked
  6070  004EF0  6B8B               	clrf	(??___xxtofl+2)& (0+255),b
  6071  004EF2  6B8A               	clrf	(??___xxtofl+1)& (0+255),b
  6072  004EF4  6B89               	clrf	??___xxtofl& (0+255),b
  6073  004EF6  0100               	movlb	0	; () banked
  6074  004EF8  5189               	movf	??___xxtofl& (0+255),w,b
  6075  004EFA  0100               	movlb	0	; () banked
  6076  004EFC  138F               	iorwf	___xxtofl@arg& (0+255),f,b
  6077  004EFE  0100               	movlb	0	; () banked
  6078  004F00  518A               	movf	(??___xxtofl+1)& (0+255),w,b
  6079  004F02  0100               	movlb	0	; () banked
  6080  004F04  1390               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6081  004F06  0100               	movlb	0	; () banked
  6082  004F08  518B               	movf	(??___xxtofl+2)& (0+255),w,b
  6083  004F0A  0100               	movlb	0	; () banked
  6084  004F0C  1391               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6085  004F0E  0100               	movlb	0	; () banked
  6086  004F10  518C               	movf	(??___xxtofl+3)& (0+255),w,b
  6087  004F12  0100               	movlb	0	; () banked
  6088  004F14  1392               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6089                           
  6090                           ; BSR set to: 0
  6091  004F16  0100               	movlb	0	; () banked
  6092  004F18  518D               	movf	___xxtofl@sign& (0+255),w,b
  6093  004F1A  0100               	movlb	0	; () banked
  6094  004F1C  B4D8               	btfsc	status,2,c
  6095  004F1E  D005               	goto	l6550
  6096                           
  6097                           ; BSR set to: 0
  6098  004F20  0100               	movlb	0	; () banked
  6099  004F22  AF88               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6100  004F24  D002               	goto	l6550
  6101                           
  6102                           ; BSR set to: 0
  6103  004F26  0100               	movlb	0	; () banked
  6104  004F28  8F92               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6105  004F2A                     l6550:
  6106                           
  6107                           ; BSR set to: 0
  6108  004F2A  C08F  F085         	movff	___xxtofl@arg,?___xxtofl
  6109  004F2E  C090  F086         	movff	___xxtofl@arg+1,?___xxtofl+1
  6110  004F32  C091  F087         	movff	___xxtofl@arg+2,?___xxtofl+2
  6111  004F36  C092  F088         	movff	___xxtofl@arg+3,?___xxtofl+3
  6112  004F3A  0012               	return	
  6113  004F3C                     __end_of___xxtofl:
  6114                           	opt stack 0
  6115                           tblptru	equ	0xFF8
  6116                           tblptrh	equ	0xFF7
  6117                           tblptrl	equ	0xFF6
  6118                           tablat	equ	0xFF5
  6119                           postinc0	equ	0xFEE
  6120                           wreg	equ	0xFE8
  6121                           postdec1	equ	0xFE5
  6122                           fsr1l	equ	0xFE1
  6123                           indf2	equ	0xFDF
  6124                           postinc2	equ	0xFDE
  6125                           postdec2	equ	0xFDD
  6126                           fsr2h	equ	0xFDA
  6127                           fsr2l	equ	0xFD9
  6128                           status	equ	0xFD8
  6129                           
  6130 ;; *************** function ___fltol *****************
  6131 ;; Defined at:
  6132 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  6133 ;; Parameters:    Size  Location     Type
  6134 ;;  f1              4   23[BANK0 ] unsigned char 
  6135 ;; Auto vars:     Size  Location     Type
  6136 ;;  exp1            1   32[BANK0 ] unsigned char 
  6137 ;;  sign1           1   31[BANK0 ] unsigned char 
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  4   23[BANK0 ] long 
  6140 ;; Registers used:
  6141 ;;		wreg, status,2, status,0
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6147 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6148 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6149 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6150 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6151 ;;Total ram usage:       10 bytes
  6152 ;; Hardware stack levels used:    1
  6153 ;; Hardware stack levels required when called:    4
  6154 ;; This function calls:
  6155 ;;		Nothing
  6156 ;; This function is called by:
  6157 ;;		_park_routine
  6158 ;;		_parallelo
  6159 ;;		_floor
  6160 ;; This function uses a non-reentrant model
  6161 ;;
  6162                           
  6163                           	psect	text14
  6164  0057B0                     __ptext14:
  6165                           	opt stack 0
  6166  0057B0                     ___fltol:
  6167                           	opt stack 24
  6168                           
  6169                           ; BSR set to: 0
  6170                           ;incstack = 0
  6171  0057B0  0100               	movlb	0	; () banked
  6172  0057B2  3579               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6173  0057B4  357A               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6174  0057B6  0100               	movlb	0	; () banked
  6175  0057B8  6F80               	movwf	___fltol@exp1& (0+255),b
  6176  0057BA  0100               	movlb	0	; () banked
  6177  0057BC  5180               	movf	___fltol@exp1& (0+255),w,b
  6178  0057BE  A4D8               	btfss	status,2,c
  6179  0057C0  D00A               	goto	l6474
  6180                           
  6181                           ; BSR set to: 0
  6182  0057C2  0E00               	movlw	0
  6183  0057C4  0100               	movlb	0	; () banked
  6184  0057C6  6F77               	movwf	?___fltol& (0+255),b
  6185  0057C8  0E00               	movlw	0
  6186  0057CA  6F78               	movwf	(?___fltol+1)& (0+255),b
  6187  0057CC  0E00               	movlw	0
  6188  0057CE  6F79               	movwf	(?___fltol+2)& (0+255),b
  6189  0057D0  0E00               	movlw	0
  6190  0057D2  6F7A               	movwf	(?___fltol+3)& (0+255),b
  6191                           
  6192                           ; BSR set to: 0
  6193  0057D4  0012               	return	
  6194  0057D6                     l6474:
  6195                           
  6196                           ; BSR set to: 0
  6197  0057D6  C077  F07B         	movff	___fltol@f1,??___fltol
  6198  0057DA  C078  F07C         	movff	___fltol@f1+1,??___fltol+1
  6199  0057DE  C079  F07D         	movff	___fltol@f1+2,??___fltol+2
  6200  0057E2  C07A  F07E         	movff	___fltol@f1+3,??___fltol+3
  6201  0057E6  0E20               	movlw	32
  6202  0057E8  D006               	goto	u8020
  6203  0057EA                     u8025:
  6204  0057EA  0100               	movlb	0	; () banked
  6205  0057EC  90D8               	bcf	status,0,c
  6206  0057EE  337E               	rrcf	(??___fltol+3)& (0+255),f,b
  6207  0057F0  337D               	rrcf	(??___fltol+2)& (0+255),f,b
  6208  0057F2  337C               	rrcf	(??___fltol+1)& (0+255),f,b
  6209  0057F4  337B               	rrcf	??___fltol& (0+255),f,b
  6210  0057F6                     u8020:
  6211  0057F6  2EE8               	decfsz	wreg,f,c
  6212  0057F8  D7F8               	goto	u8025
  6213  0057FA  0100               	movlb	0	; () banked
  6214  0057FC  517B               	movf	??___fltol& (0+255),w,b
  6215  0057FE  0100               	movlb	0	; () banked
  6216  005800  6F7F               	movwf	___fltol@sign1& (0+255),b
  6217                           
  6218                           ; BSR set to: 0
  6219  005802  0100               	movlb	0	; () banked
  6220  005804  8F79               	bsf	(___fltol@f1+2)& (0+255),7,b
  6221                           
  6222                           ; BSR set to: 0
  6223  005806  0EFF               	movlw	255
  6224  005808  0100               	movlb	0	; () banked
  6225  00580A  1777               	andwf	___fltol@f1& (0+255),f,b
  6226  00580C  0EFF               	movlw	255
  6227  00580E  1778               	andwf	(___fltol@f1+1)& (0+255),f,b
  6228  005810  0EFF               	movlw	255
  6229  005812  1779               	andwf	(___fltol@f1+2)& (0+255),f,b
  6230  005814  0E00               	movlw	0
  6231  005816  177A               	andwf	(___fltol@f1+3)& (0+255),f,b
  6232                           
  6233                           ; BSR set to: 0
  6234  005818  0E96               	movlw	150
  6235  00581A  0100               	movlb	0	; () banked
  6236  00581C  5F80               	subwf	___fltol@exp1& (0+255),f,b
  6237                           
  6238                           ; BSR set to: 0
  6239  00581E  0100               	movlb	0	; () banked
  6240  005820  AF80               	btfss	___fltol@exp1& (0+255),7,b
  6241  005822  D01A               	goto	l6494
  6242                           
  6243                           ; BSR set to: 0
  6244  005824  0100               	movlb	0	; () banked
  6245  005826  5180               	movf	___fltol@exp1& (0+255),w,b
  6246  005828  0A80               	xorlw	128
  6247  00582A  0F97               	addlw	151
  6248  00582C  B0D8               	btfsc	status,0,c
  6249  00582E  D00A               	goto	l6490
  6250                           
  6251                           ; BSR set to: 0
  6252  005830  0E00               	movlw	0
  6253  005832  0100               	movlb	0	; () banked
  6254  005834  6F77               	movwf	?___fltol& (0+255),b
  6255  005836  0E00               	movlw	0
  6256  005838  6F78               	movwf	(?___fltol+1)& (0+255),b
  6257  00583A  0E00               	movlw	0
  6258  00583C  6F79               	movwf	(?___fltol+2)& (0+255),b
  6259  00583E  0E00               	movlw	0
  6260  005840  6F7A               	movwf	(?___fltol+3)& (0+255),b
  6261                           
  6262                           ; BSR set to: 0
  6263  005842  0012               	return	
  6264  005844                     l6490:
  6265                           
  6266                           ; BSR set to: 0
  6267  005844  0100               	movlb	0	; () banked
  6268  005846  90D8               	bcf	status,0,c
  6269  005848  337A               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6270  00584A  3379               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6271  00584C  3378               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6272  00584E  3377               	rrcf	___fltol@f1& (0+255),f,b
  6273                           
  6274                           ; BSR set to: 0
  6275  005850  0100               	movlb	0	; () banked
  6276  005852  3F80               	incfsz	___fltol@exp1& (0+255),f,b
  6277  005854  D7F7               	goto	l6490
  6278                           
  6279                           ; BSR set to: 0
  6280  005856  D01B               	goto	l6504
  6281  005858                     l6494:
  6282                           
  6283                           ; BSR set to: 0
  6284  005858  0E1F               	movlw	31
  6285  00585A  0100               	movlb	0	; () banked
  6286  00585C  6580               	cpfsgt	___fltol@exp1& (0+255),b
  6287  00585E  D012               	goto	l6502
  6288                           
  6289                           ; BSR set to: 0
  6290  005860  0E00               	movlw	0
  6291  005862  0100               	movlb	0	; () banked
  6292  005864  6F77               	movwf	?___fltol& (0+255),b
  6293  005866  0E00               	movlw	0
  6294  005868  6F78               	movwf	(?___fltol+1)& (0+255),b
  6295  00586A  0E00               	movlw	0
  6296  00586C  6F79               	movwf	(?___fltol+2)& (0+255),b
  6297  00586E  0E00               	movlw	0
  6298  005870  6F7A               	movwf	(?___fltol+3)& (0+255),b
  6299                           
  6300                           ; BSR set to: 0
  6301  005872  0012               	return	
  6302  005874                     l6500:
  6303                           
  6304                           ; BSR set to: 0
  6305  005874  0100               	movlb	0	; () banked
  6306  005876  90D8               	bcf	status,0,c
  6307  005878  3777               	rlcf	___fltol@f1& (0+255),f,b
  6308  00587A  3778               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6309  00587C  3779               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6310  00587E  377A               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6311  005880  0100               	movlb	0	; () banked
  6312  005882  0780               	decf	___fltol@exp1& (0+255),f,b
  6313  005884                     l6502:
  6314                           
  6315                           ; BSR set to: 0
  6316  005884  0100               	movlb	0	; () banked
  6317  005886  5180               	movf	___fltol@exp1& (0+255),w,b
  6318  005888  0100               	movlb	0	; () banked
  6319  00588A  A4D8               	btfss	status,2,c
  6320  00588C  D7F3               	goto	l6500
  6321  00588E                     l6504:
  6322                           
  6323                           ; BSR set to: 0
  6324  00588E  0100               	movlb	0	; () banked
  6325  005890  517F               	movf	___fltol@sign1& (0+255),w,b
  6326  005892  0100               	movlb	0	; () banked
  6327  005894  B4D8               	btfsc	status,2,c
  6328  005896  D009               	goto	l6508
  6329                           
  6330                           ; BSR set to: 0
  6331  005898  0100               	movlb	0	; () banked
  6332  00589A  1F7A               	comf	(___fltol@f1+3)& (0+255),f,b
  6333  00589C  1F79               	comf	(___fltol@f1+2)& (0+255),f,b
  6334  00589E  1F78               	comf	(___fltol@f1+1)& (0+255),f,b
  6335  0058A0  6D77               	negf	___fltol@f1& (0+255),b
  6336  0058A2  0E00               	movlw	0
  6337  0058A4  2378               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6338  0058A6  2379               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6339  0058A8  237A               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6340  0058AA                     l6508:
  6341                           
  6342                           ; BSR set to: 0
  6343  0058AA  C077  F077         	movff	___fltol@f1,?___fltol
  6344  0058AE  C078  F078         	movff	___fltol@f1+1,?___fltol+1
  6345  0058B2  C079  F079         	movff	___fltol@f1+2,?___fltol+2
  6346  0058B6  C07A  F07A         	movff	___fltol@f1+3,?___fltol+3
  6347  0058BA  0012               	return	
  6348  0058BC                     __end_of___fltol:
  6349                           	opt stack 0
  6350                           tblptru	equ	0xFF8
  6351                           tblptrh	equ	0xFF7
  6352                           tblptrl	equ	0xFF6
  6353                           tablat	equ	0xFF5
  6354                           postinc0	equ	0xFEE
  6355                           wreg	equ	0xFE8
  6356                           postdec1	equ	0xFE5
  6357                           fsr1l	equ	0xFE1
  6358                           indf2	equ	0xFDF
  6359                           postinc2	equ	0xFDE
  6360                           postdec2	equ	0xFDD
  6361                           fsr2h	equ	0xFDA
  6362                           fsr2l	equ	0xFD9
  6363                           status	equ	0xFD8
  6364                           
  6365 ;; *************** function ___flsub *****************
  6366 ;; Defined at:
  6367 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6368 ;; Parameters:    Size  Location     Type
  6369 ;;  b               4  107[BANK0 ] long 
  6370 ;;  a               4  111[BANK0 ] long 
  6371 ;; Auto vars:     Size  Location     Type
  6372 ;;		None
  6373 ;; Return value:  Size  Location     Type
  6374 ;;                  4  107[BANK0 ] long 
  6375 ;; Registers used:
  6376 ;;		wreg, status,2, status,0, cstack
  6377 ;; Tracked objects:
  6378 ;;		On entry : 0/0
  6379 ;;		On exit  : 0/0
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6382 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6383 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6385 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6386 ;;Total ram usage:        8 bytes
  6387 ;; Hardware stack levels used:    1
  6388 ;; Hardware stack levels required when called:    5
  6389 ;; This function calls:
  6390 ;;		___fladd
  6391 ;; This function is called by:
  6392 ;;		_sin
  6393 ;; This function uses a non-reentrant model
  6394 ;;
  6395                           
  6396                           	psect	text15
  6397  005CFC                     __ptext15:
  6398                           	opt stack 0
  6399  005CFC                     ___flsub:
  6400                           	opt stack 21
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;incstack = 0
  6404  005CFC  0E00               	movlw	0
  6405  005CFE  0100               	movlb	0	; () banked
  6406  005D00  1BCF               	xorwf	___flsub@a& (0+255),f,b
  6407  005D02  0E00               	movlw	0
  6408  005D04  1BD0               	xorwf	(___flsub@a+1)& (0+255),f,b
  6409  005D06  0E00               	movlw	0
  6410  005D08  1BD1               	xorwf	(___flsub@a+2)& (0+255),f,b
  6411  005D0A  0E80               	movlw	128
  6412  005D0C  1BD2               	xorwf	(___flsub@a+3)& (0+255),f,b
  6413                           
  6414                           ; BSR set to: 0
  6415  005D0E  C0CB  F0AD         	movff	___flsub@b,___fladd@b
  6416  005D12  C0CC  F0AE         	movff	___flsub@b+1,___fladd@b+1
  6417  005D16  C0CD  F0AF         	movff	___flsub@b+2,___fladd@b+2
  6418  005D1A  C0CE  F0B0         	movff	___flsub@b+3,___fladd@b+3
  6419  005D1E  C0CF  F0B1         	movff	___flsub@a,___fladd@a
  6420  005D22  C0D0  F0B2         	movff	___flsub@a+1,___fladd@a+1
  6421  005D26  C0D1  F0B3         	movff	___flsub@a+2,___fladd@a+2
  6422  005D2A  C0D2  F0B4         	movff	___flsub@a+3,___fladd@a+3
  6423  005D2E  EC0F  F015         	call	___fladd	;wreg free
  6424  005D32  C0AD  F0CB         	movff	?___fladd,?___flsub
  6425  005D36  C0AE  F0CC         	movff	?___fladd+1,?___flsub+1
  6426  005D3A  C0AF  F0CD         	movff	?___fladd+2,?___flsub+2
  6427  005D3E  C0B0  F0CE         	movff	?___fladd+3,?___flsub+3
  6428  005D42  0012               	return	
  6429  005D44                     __end_of___flsub:
  6430                           	opt stack 0
  6431                           tblptru	equ	0xFF8
  6432                           tblptrh	equ	0xFF7
  6433                           tblptrl	equ	0xFF6
  6434                           tablat	equ	0xFF5
  6435                           postinc0	equ	0xFEE
  6436                           wreg	equ	0xFE8
  6437                           postdec1	equ	0xFE5
  6438                           fsr1l	equ	0xFE1
  6439                           indf2	equ	0xFDF
  6440                           postinc2	equ	0xFDE
  6441                           postdec2	equ	0xFDD
  6442                           fsr2h	equ	0xFDA
  6443                           fsr2l	equ	0xFD9
  6444                           status	equ	0xFD8
  6445                           
  6446 ;; *************** function _asin *****************
  6447 ;; Defined at:
  6448 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\asin.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;  x               4   17[BANK1 ] long 
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;  y               4   33[BANK1 ] long 
  6453 ;;  sgn             4   21[BANK1 ] long 
  6454 ;; Return value:  Size  Location     Type
  6455 ;;                  4   17[BANK1 ] long 
  6456 ;; Registers used:
  6457 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6458 ;; Tracked objects:
  6459 ;;		On entry : 0/0
  6460 ;;		On exit  : 0/0
  6461 ;;		Unchanged: 0/0
  6462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6463 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  6464 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6466 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  6467 ;;Total ram usage:       24 bytes
  6468 ;; Hardware stack levels used:    1
  6469 ;; Hardware stack levels required when called:    7
  6470 ;; This function calls:
  6471 ;;		___fladd
  6472 ;;		___fldiv
  6473 ;;		___flge
  6474 ;;		___flmul
  6475 ;;		___flneg
  6476 ;;		_atan
  6477 ;;		_fabs
  6478 ;;		_sqrt
  6479 ;; This function is called by:
  6480 ;;		_parallelo
  6481 ;;		_matematica
  6482 ;; This function uses a non-reentrant model
  6483 ;;
  6484                           
  6485                           	psect	text16
  6486  00457E                     __ptext16:
  6487                           	opt stack 0
  6488  00457E                     _asin:
  6489                           	opt stack 21
  6490                           
  6491                           ;incstack = 0
  6492  00457E  0E00               	movlw	0
  6493  004580  0100               	movlb	0	; () banked
  6494  004582  6FB1               	movwf	___flge@ff1& (0+255),b
  6495  004584  0E00               	movlw	0
  6496  004586  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  6497  004588  0E80               	movlw	128
  6498  00458A  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  6499  00458C  0E3F               	movlw	63
  6500  00458E  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  6501  004590  C19A  F0AD         	movff	asin@x,fabs@d
  6502  004594  C19B  F0AE         	movff	asin@x+1,fabs@d+1
  6503  004598  C19C  F0AF         	movff	asin@x+2,fabs@d+2
  6504  00459C  C19D  F0B0         	movff	asin@x+3,fabs@d+3
  6505  0045A0  ECA2  F02E         	call	_fabs	;wreg free
  6506  0045A4  C0AD  F0B5         	movff	?_fabs,___flge@ff2
  6507  0045A8  C0AE  F0B6         	movff	?_fabs+1,___flge@ff2+1
  6508  0045AC  C0AF  F0B7         	movff	?_fabs+2,___flge@ff2+2
  6509  0045B0  C0B0  F0B8         	movff	?_fabs+3,___flge@ff2+3
  6510  0045B4  EC57  F029         	call	___flge	;wreg free
  6511  0045B8  0100               	movlb	0	; () banked
  6512  0045BA  B0D8               	btfsc	status,0,c
  6513  0045BC  D00F               	goto	l7210
  6514                           
  6515                           ; BSR set to: 0
  6516  0045BE  0E00               	movlw	0
  6517  0045C0  0101               	movlb	1	; () banked
  6518  0045C2  6F49               	movwf	(_errno+1)& (0+255),b
  6519  0045C4  0E21               	movlw	33
  6520  0045C6  6F48               	movwf	_errno& (0+255),b
  6521  0045C8  0E00               	movlw	0
  6522  0045CA  0101               	movlb	1	; () banked
  6523  0045CC  6F9A               	movwf	?_asin& (0+255),b
  6524  0045CE  0E00               	movlw	0
  6525  0045D0  6F9B               	movwf	(?_asin+1)& (0+255),b
  6526  0045D2  0E00               	movlw	0
  6527  0045D4  6F9C               	movwf	(?_asin+2)& (0+255),b
  6528  0045D6  0E00               	movlw	0
  6529  0045D8  6F9D               	movwf	(?_asin+3)& (0+255),b
  6530                           
  6531                           ; BSR set to: 1
  6532  0045DA  0012               	return	
  6533  0045DC                     l7210:
  6534  0045DC  0E00               	movlw	0
  6535  0045DE  0101               	movlb	1	; () banked
  6536  0045E0  6F9E               	movwf	asin@sgn& (0+255),b
  6537  0045E2  0E00               	movlw	0
  6538  0045E4  6F9F               	movwf	(asin@sgn+1)& (0+255),b
  6539  0045E6  0E80               	movlw	128
  6540  0045E8  6FA0               	movwf	(asin@sgn+2)& (0+255),b
  6541  0045EA  0E3F               	movlw	63
  6542  0045EC  6FA1               	movwf	(asin@sgn+3)& (0+255),b
  6543                           
  6544                           ; BSR set to: 1
  6545  0045EE  C19A  F094         	movff	asin@x,___flmul@a
  6546  0045F2  C19B  F095         	movff	asin@x+1,___flmul@a+1
  6547  0045F6  C19C  F096         	movff	asin@x+2,___flmul@a+2
  6548  0045FA  C19D  F097         	movff	asin@x+3,___flmul@a+3
  6549  0045FE  C19A  F090         	movff	asin@x,___flmul@b
  6550  004602  C19B  F091         	movff	asin@x+1,___flmul@b+1
  6551  004606  C19C  F092         	movff	asin@x+2,___flmul@b+2
  6552  00460A  C19D  F093         	movff	asin@x+3,___flmul@b+3
  6553  00460E  EC63  F017         	call	___flmul	;wreg free
  6554  004612  C090  F0A9         	movff	?___flmul,___flneg@f1
  6555  004616  C091  F0AA         	movff	?___flmul+1,___flneg@f1+1
  6556  00461A  C092  F0AB         	movff	?___flmul+2,___flneg@f1+2
  6557  00461E  C093  F0AC         	movff	?___flmul+3,___flneg@f1+3
  6558  004622  ECDE  F02E         	call	___flneg	;wreg free
  6559  004626  C0A9  F0AD         	movff	?___flneg,___fladd@b
  6560  00462A  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  6561  00462E  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  6562  004632  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  6563  004636  0E00               	movlw	0
  6564  004638  0100               	movlb	0	; () banked
  6565  00463A  6FB1               	movwf	___fladd@a& (0+255),b
  6566  00463C  0E00               	movlw	0
  6567  00463E  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  6568  004640  0E80               	movlw	128
  6569  004642  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  6570  004644  0E3F               	movlw	63
  6571  004646  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  6572  004648  EC0F  F015         	call	___fladd	;wreg free
  6573  00464C  C0AD  F0C1         	movff	?___fladd,sqrt@a
  6574  004650  C0AE  F0C2         	movff	?___fladd+1,sqrt@a+1
  6575  004654  C0AF  F0C3         	movff	?___fladd+2,sqrt@a+2
  6576  004658  C0B0  F0C4         	movff	?___fladd+3,sqrt@a+3
  6577  00465C  EC9F  F01B         	call	_sqrt	;wreg free
  6578  004660  C0C1  F1AA         	movff	?_sqrt,asin@y
  6579  004664  C0C2  F1AB         	movff	?_sqrt+1,asin@y+1
  6580  004668  C0C3  F1AC         	movff	?_sqrt+2,asin@y+2
  6581  00466C  C0C4  F1AD         	movff	?_sqrt+3,asin@y+3
  6582  004670  C19A  F0AD         	movff	asin@x,fabs@d
  6583  004674  C19B  F0AE         	movff	asin@x+1,fabs@d+1
  6584  004678  C19C  F0AF         	movff	asin@x+2,fabs@d+2
  6585  00467C  C19D  F0B0         	movff	asin@x+3,fabs@d+3
  6586  004680  ECA2  F02E         	call	_fabs	;wreg free
  6587  004684  C0AD  F0B1         	movff	?_fabs,___flge@ff1
  6588  004688  C0AE  F0B2         	movff	?_fabs+1,___flge@ff1+1
  6589  00468C  C0AF  F0B3         	movff	?_fabs+2,___flge@ff1+2
  6590  004690  C0B0  F0B4         	movff	?_fabs+3,___flge@ff1+3
  6591  004694  0E8F               	movlw	143
  6592  004696  0100               	movlb	0	; () banked
  6593  004698  6FB5               	movwf	___flge@ff2& (0+255),b
  6594  00469A  0EC2               	movlw	194
  6595  00469C  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  6596  00469E  0E35               	movlw	53
  6597  0046A0  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  6598  0046A2  0E3F               	movlw	63
  6599  0046A4  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  6600  0046A6  EC57  F029         	call	___flge	;wreg free
  6601  0046AA  0100               	movlb	0	; () banked
  6602  0046AC  B0D8               	btfsc	status,0,c
  6603  0046AE  D02D               	goto	l7222
  6604                           
  6605                           ; BSR set to: 0
  6606  0046B0  C19A  F077         	movff	asin@x,___fldiv@b
  6607  0046B4  C19B  F078         	movff	asin@x+1,___fldiv@b+1
  6608  0046B8  C19C  F079         	movff	asin@x+2,___fldiv@b+2
  6609  0046BC  C19D  F07A         	movff	asin@x+3,___fldiv@b+3
  6610  0046C0  C1AA  F07B         	movff	asin@y,___fldiv@a
  6611  0046C4  C1AB  F07C         	movff	asin@y+1,___fldiv@a+1
  6612  0046C8  C1AC  F07D         	movff	asin@y+2,___fldiv@a+2
  6613  0046CC  C1AD  F07E         	movff	asin@y+3,___fldiv@a+3
  6614  0046D0  EC84  F01D         	call	___fldiv	;wreg free
  6615  0046D4  C077  F1AE         	movff	?___fldiv,_asin$3748
  6616  0046D8  C078  F1AF         	movff	?___fldiv+1,_asin$3748+1
  6617  0046DC  C079  F1B0         	movff	?___fldiv+2,_asin$3748+2
  6618  0046E0  C07A  F1B1         	movff	?___fldiv+3,_asin$3748+3
  6619  0046E4  C1AE  F0D1         	movff	_asin$3748,atan@f
  6620  0046E8  C1AF  F0D2         	movff	_asin$3748+1,atan@f+1
  6621  0046EC  C1B0  F0D3         	movff	_asin$3748+2,atan@f+2
  6622  0046F0  C1B1  F0D4         	movff	_asin$3748+3,atan@f+3
  6623  0046F4  EC8E  F025         	call	_atan	;wreg free
  6624  0046F8  C0D1  F19A         	movff	?_atan,?_asin
  6625  0046FC  C0D2  F19B         	movff	?_atan+1,?_asin+1
  6626  004700  C0D3  F19C         	movff	?_atan+2,?_asin+2
  6627  004704  C0D4  F19D         	movff	?_atan+3,?_asin+3
  6628  004708  0012               	return	
  6629  00470A                     l7222:
  6630  00470A  0101               	movlb	1	; () banked
  6631  00470C  AF9D               	btfss	(asin@x+3)& (0+255),7,b
  6632  00470E  D06E               	goto	l7234
  6633                           
  6634                           ; BSR set to: 1
  6635  004710  C19A  F07B         	movff	asin@x,___fldiv@a
  6636  004714  C19B  F07C         	movff	asin@x+1,___fldiv@a+1
  6637  004718  C19C  F07D         	movff	asin@x+2,___fldiv@a+2
  6638  00471C  C19D  F07E         	movff	asin@x+3,___fldiv@a+3
  6639  004720  C1AA  F0A9         	movff	asin@y,___flneg@f1
  6640  004724  C1AB  F0AA         	movff	asin@y+1,___flneg@f1+1
  6641  004728  C1AC  F0AB         	movff	asin@y+2,___flneg@f1+2
  6642  00472C  C1AD  F0AC         	movff	asin@y+3,___flneg@f1+3
  6643  004730  ECDE  F02E         	call	___flneg	;wreg free
  6644  004734  C0A9  F077         	movff	?___flneg,___fldiv@b
  6645  004738  C0AA  F078         	movff	?___flneg+1,___fldiv@b+1
  6646  00473C  C0AB  F079         	movff	?___flneg+2,___fldiv@b+2
  6647  004740  C0AC  F07A         	movff	?___flneg+3,___fldiv@b+3
  6648  004744  EC84  F01D         	call	___fldiv	;wreg free
  6649  004748  C077  F1AE         	movff	?___fldiv,_asin$3748
  6650  00474C  C078  F1AF         	movff	?___fldiv+1,_asin$3748+1
  6651  004750  C079  F1B0         	movff	?___fldiv+2,_asin$3748+2
  6652  004754  C07A  F1B1         	movff	?___fldiv+3,_asin$3748+3
  6653  004758  C1AE  F0D1         	movff	_asin$3748,atan@f
  6654  00475C  C1AF  F0D2         	movff	_asin$3748+1,atan@f+1
  6655  004760  C1B0  F0D3         	movff	_asin$3748+2,atan@f+2
  6656  004764  C1B1  F0D4         	movff	_asin$3748+3,atan@f+3
  6657  004768  EC8E  F025         	call	_atan	;wreg free
  6658  00476C  C0D1  F1A6         	movff	?_atan,_asin$3749
  6659  004770  C0D2  F1A7         	movff	?_atan+1,_asin$3749+1
  6660  004774  C0D3  F1A8         	movff	?_atan+2,_asin$3749+2
  6661  004778  C0D4  F1A9         	movff	?_atan+3,_asin$3749+3
  6662  00477C  0EDB               	movlw	219
  6663  00477E  0100               	movlb	0	; () banked
  6664  004780  6FB1               	movwf	___fladd@a& (0+255),b
  6665  004782  0E0F               	movlw	15
  6666  004784  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  6667  004786  0EC9               	movlw	201
  6668  004788  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  6669  00478A  0E3F               	movlw	63
  6670  00478C  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  6671  00478E  C1A6  F0A9         	movff	_asin$3749,___flneg@f1
  6672  004792  C1A7  F0AA         	movff	_asin$3749+1,___flneg@f1+1
  6673  004796  C1A8  F0AB         	movff	_asin$3749+2,___flneg@f1+2
  6674  00479A  C1A9  F0AC         	movff	_asin$3749+3,___flneg@f1+3
  6675  00479E  ECDE  F02E         	call	___flneg	;wreg free
  6676  0047A2  C0A9  F0AD         	movff	?___flneg,___fladd@b
  6677  0047A6  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  6678  0047AA  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  6679  0047AE  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  6680  0047B2  EC0F  F015         	call	___fladd	;wreg free
  6681  0047B6  C0AD  F1A2         	movff	?___fladd,_asin$3750
  6682  0047BA  C0AE  F1A3         	movff	?___fladd+1,_asin$3750+1
  6683  0047BE  C0AF  F1A4         	movff	?___fladd+2,_asin$3750+2
  6684  0047C2  C0B0  F1A5         	movff	?___fladd+3,_asin$3750+3
  6685  0047C6  C1A2  F0A9         	movff	_asin$3750,___flneg@f1
  6686  0047CA  C1A3  F0AA         	movff	_asin$3750+1,___flneg@f1+1
  6687  0047CE  C1A4  F0AB         	movff	_asin$3750+2,___flneg@f1+2
  6688  0047D2  C1A5  F0AC         	movff	_asin$3750+3,___flneg@f1+3
  6689  0047D6  ECDE  F02E         	call	___flneg	;wreg free
  6690  0047DA  C0A9  F19A         	movff	?___flneg,?_asin
  6691  0047DE  C0AA  F19B         	movff	?___flneg+1,?_asin+1
  6692  0047E2  C0AB  F19C         	movff	?___flneg+2,?_asin+2
  6693  0047E6  C0AC  F19D         	movff	?___flneg+3,?_asin+3
  6694  0047EA  0012               	return	
  6695  0047EC                     l7234:
  6696  0047EC  C19A  F07B         	movff	asin@x,___fldiv@a
  6697  0047F0  C19B  F07C         	movff	asin@x+1,___fldiv@a+1
  6698  0047F4  C19C  F07D         	movff	asin@x+2,___fldiv@a+2
  6699  0047F8  C19D  F07E         	movff	asin@x+3,___fldiv@a+3
  6700  0047FC  C1AA  F077         	movff	asin@y,___fldiv@b
  6701  004800  C1AB  F078         	movff	asin@y+1,___fldiv@b+1
  6702  004804  C1AC  F079         	movff	asin@y+2,___fldiv@b+2
  6703  004808  C1AD  F07A         	movff	asin@y+3,___fldiv@b+3
  6704  00480C  EC84  F01D         	call	___fldiv	;wreg free
  6705  004810  C077  F1AE         	movff	?___fldiv,_asin$3748
  6706  004814  C078  F1AF         	movff	?___fldiv+1,_asin$3748+1
  6707  004818  C079  F1B0         	movff	?___fldiv+2,_asin$3748+2
  6708  00481C  C07A  F1B1         	movff	?___fldiv+3,_asin$3748+3
  6709  004820  C1AE  F0D1         	movff	_asin$3748,atan@f
  6710  004824  C1AF  F0D2         	movff	_asin$3748+1,atan@f+1
  6711  004828  C1B0  F0D3         	movff	_asin$3748+2,atan@f+2
  6712  00482C  C1B1  F0D4         	movff	_asin$3748+3,atan@f+3
  6713  004830  EC8E  F025         	call	_atan	;wreg free
  6714  004834  C0D1  F1A6         	movff	?_atan,_asin$3749
  6715  004838  C0D2  F1A7         	movff	?_atan+1,_asin$3749+1
  6716  00483C  C0D3  F1A8         	movff	?_atan+2,_asin$3749+2
  6717  004840  C0D4  F1A9         	movff	?_atan+3,_asin$3749+3
  6718  004844  C1A6  F0A9         	movff	_asin$3749,___flneg@f1
  6719  004848  C1A7  F0AA         	movff	_asin$3749+1,___flneg@f1+1
  6720  00484C  C1A8  F0AB         	movff	_asin$3749+2,___flneg@f1+2
  6721  004850  C1A9  F0AC         	movff	_asin$3749+3,___flneg@f1+3
  6722  004854  ECDE  F02E         	call	___flneg	;wreg free
  6723  004858  C0A9  F0AD         	movff	?___flneg,___fladd@b
  6724  00485C  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  6725  004860  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  6726  004864  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  6727  004868  0EDB               	movlw	219
  6728  00486A  0100               	movlb	0	; () banked
  6729  00486C  6FB1               	movwf	___fladd@a& (0+255),b
  6730  00486E  0E0F               	movlw	15
  6731  004870  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  6732  004872  0EC9               	movlw	201
  6733  004874  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  6734  004876  0E3F               	movlw	63
  6735  004878  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  6736  00487A  EC0F  F015         	call	___fladd	;wreg free
  6737  00487E  C0AD  F19A         	movff	?___fladd,?_asin
  6738  004882  C0AE  F19B         	movff	?___fladd+1,?_asin+1
  6739  004886  C0AF  F19C         	movff	?___fladd+2,?_asin+2
  6740  00488A  C0B0  F19D         	movff	?___fladd+3,?_asin+3
  6741  00488E  0012               	return	
  6742  004890                     __end_of_asin:
  6743                           	opt stack 0
  6744                           tblptru	equ	0xFF8
  6745                           tblptrh	equ	0xFF7
  6746                           tblptrl	equ	0xFF6
  6747                           tablat	equ	0xFF5
  6748                           postinc0	equ	0xFEE
  6749                           wreg	equ	0xFE8
  6750                           postdec1	equ	0xFE5
  6751                           fsr1l	equ	0xFE1
  6752                           indf2	equ	0xFDF
  6753                           postinc2	equ	0xFDE
  6754                           postdec2	equ	0xFDD
  6755                           fsr2h	equ	0xFDA
  6756                           fsr2l	equ	0xFD9
  6757                           status	equ	0xFD8
  6758                           
  6759 ;; *************** function _sqrt *****************
  6760 ;; Defined at:
  6761 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;  a               4   97[BANK0 ] long 
  6764 ;; Auto vars:     Size  Location     Type
  6765 ;;  frac            4  122[BANK0 ] unsigned long 
  6766 ;;  root            4  118[BANK0 ] struct .
  6767 ;;  grs             4  112[BANK0 ] unsigned long 
  6768 ;;  tfrac           4  107[BANK0 ] unsigned long 
  6769 ;;  exp             2  116[BANK0 ] int 
  6770 ;;  p               1  111[BANK0 ] unsigned char 
  6771 ;;  i               1  106[BANK0 ] unsigned char 
  6772 ;;  sign            1  105[BANK0 ] unsigned char 
  6773 ;; Return value:  Size  Location     Type
  6774 ;;                  4   97[BANK0 ] unsigned char 
  6775 ;; Registers used:
  6776 ;;		wreg, status,2, status,0
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6782 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6783 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6784 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6785 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6786 ;;Total ram usage:       29 bytes
  6787 ;; Hardware stack levels used:    1
  6788 ;; Hardware stack levels required when called:    4
  6789 ;; This function calls:
  6790 ;;		Nothing
  6791 ;; This function is called by:
  6792 ;;		_parallelo
  6793 ;;		_asin
  6794 ;; This function uses a non-reentrant model
  6795 ;;
  6796                           
  6797                           	psect	text17
  6798  00373E                     __ptext17:
  6799                           	opt stack 0
  6800  00373E                     _sqrt:
  6801                           	opt stack 24
  6802                           
  6803                           ;incstack = 0
  6804  00373E  0100               	movlb	0	; () banked
  6805  003740  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  6806  003742  0B80               	andlw	128
  6807  003744  0100               	movlb	0	; () banked
  6808  003746  6FC9               	movwf	sqrt@sign& (0+255),b
  6809  003748  0100               	movlb	0	; () banked
  6810  00374A  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  6811  00374C  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  6812  00374E  0100               	movlb	0	; () banked
  6813  003750  6FCF               	movwf	sqrt@p& (0+255),b
  6814                           
  6815                           ; BSR set to: 0
  6816  003752  0100               	movlb	0	; () banked
  6817  003754  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  6818  003756  D002               	goto	l6996
  6819                           
  6820                           ; BSR set to: 0
  6821  003758  0100               	movlb	0	; () banked
  6822  00375A  81CF               	bsf	sqrt@p& (0+255),0,b
  6823  00375C                     l6996:
  6824                           
  6825                           ; BSR set to: 0
  6826  00375C  C0CF  F0D4         	movff	sqrt@p,sqrt@exp
  6827  003760  0100               	movlb	0	; () banked
  6828  003762  6BD5               	clrf	(sqrt@exp+1)& (0+255),b
  6829                           
  6830                           ; BSR set to: 0
  6831  003764  0EFF               	movlw	255
  6832  003766  0100               	movlb	0	; () banked
  6833  003768  15C1               	andwf	sqrt@a& (0+255),w,b
  6834  00376A  0100               	movlb	0	; () banked
  6835  00376C  6FDA               	movwf	sqrt@frac& (0+255),b
  6836  00376E  0EFF               	movlw	255
  6837  003770  0100               	movlb	0	; () banked
  6838  003772  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  6839  003774  0100               	movlb	0	; () banked
  6840  003776  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  6841  003778  0E7F               	movlw	127
  6842  00377A  0100               	movlb	0	; () banked
  6843  00377C  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  6844  00377E  0100               	movlb	0	; () banked
  6845  003780  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  6846  003782  0E00               	movlw	0
  6847  003784  0100               	movlb	0	; () banked
  6848  003786  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  6849  003788  0100               	movlb	0	; () banked
  6850  00378A  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  6851                           
  6852                           ; BSR set to: 0
  6853  00378C  0100               	movlb	0	; () banked
  6854  00378E  51D4               	movf	sqrt@exp& (0+255),w,b
  6855  003790  0100               	movlb	0	; () banked
  6856  003792  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  6857  003794  B4D8               	btfsc	status,2,c
  6858  003796  D008               	goto	l7008
  6859                           
  6860                           ; BSR set to: 0
  6861  003798  0100               	movlb	0	; () banked
  6862  00379A  8FDC               	bsf	(sqrt@frac+2)& (0+255),7,b
  6863                           
  6864                           ; BSR set to: 0
  6865  00379C  0100               	movlb	0	; () banked
  6866  00379E  29D4               	incf	sqrt@exp& (0+255),w,b
  6867  0037A0  0100               	movlb	0	; () banked
  6868  0037A2  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  6869  0037A4  A4D8               	btfss	status,2,c
  6870  0037A6  D009               	goto	l7010
  6871  0037A8                     l7008:
  6872                           
  6873                           ; BSR set to: 0
  6874  0037A8  0E00               	movlw	0
  6875  0037AA  0100               	movlb	0	; () banked
  6876  0037AC  6FDA               	movwf	sqrt@frac& (0+255),b
  6877  0037AE  0E00               	movlw	0
  6878  0037B0  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  6879  0037B2  0E00               	movlw	0
  6880  0037B4  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  6881  0037B6  0E00               	movlw	0
  6882  0037B8  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  6883  0037BA                     l7010:
  6884                           
  6885                           ; BSR set to: 0
  6886  0037BA  0100               	movlb	0	; () banked
  6887  0037BC  51D4               	movf	sqrt@exp& (0+255),w,b
  6888  0037BE  0100               	movlb	0	; () banked
  6889  0037C0  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  6890  0037C2  A4D8               	btfss	status,2,c
  6891  0037C4  D00A               	goto	l7016
  6892                           
  6893                           ; BSR set to: 0
  6894  0037C6  0E00               	movlw	0
  6895  0037C8  0100               	movlb	0	; () banked
  6896  0037CA  6FC1               	movwf	?_sqrt& (0+255),b
  6897  0037CC  0E00               	movlw	0
  6898  0037CE  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  6899  0037D0  0E00               	movlw	0
  6900  0037D2  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  6901  0037D4  0E00               	movlw	0
  6902  0037D6  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  6903                           
  6904                           ; BSR set to: 0
  6905  0037D8  0012               	return	
  6906  0037DA                     l7016:
  6907                           
  6908                           ; BSR set to: 0
  6909  0037DA  0100               	movlb	0	; () banked
  6910  0037DC  51C9               	movf	sqrt@sign& (0+255),w,b
  6911  0037DE  0100               	movlb	0	; () banked
  6912  0037E0  B4D8               	btfsc	status,2,c
  6913  0037E2  D01C               	goto	l7028
  6914                           
  6915                           ; BSR set to: 0
  6916  0037E4  0E00               	movlw	0
  6917  0037E6  0100               	movlb	0	; () banked
  6918  0037E8  6FD6               	movwf	sqrt@root& (0+255),b
  6919  0037EA  0E00               	movlw	0
  6920  0037EC  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  6921  0037EE  0E40               	movlw	64
  6922  0037F0  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  6923  0037F2  0E00               	movlw	0
  6924  0037F4  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  6925                           
  6926                           ; BSR set to: 0
  6927  0037F6  0100               	movlb	0	; () banked
  6928  0037F8  0E80               	movlw	128
  6929  0037FA  13D8               	iorwf	(sqrt@root+2)& (0+255),f,b
  6930  0037FC  0EFF               	movlw	255
  6931  0037FE  13D9               	iorwf	(sqrt@root+3)& (0+255),f,b
  6932                           
  6933                           ; BSR set to: 0
  6934  003800  0E00               	movlw	0
  6935  003802  0101               	movlb	1	; () banked
  6936  003804  6F49               	movwf	(_errno+1)& (0+255),b
  6937  003806  0E21               	movlw	33
  6938  003808  6F48               	movwf	_errno& (0+255),b
  6939                           
  6940                           ; BSR set to: 1
  6941  00380A  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  6942  00380E  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  6943  003812  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  6944  003816  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  6945                           
  6946                           ; BSR set to: 1
  6947  00381A  0012               	return	
  6948  00381C                     l7028:
  6949  00381C  0100               	movlb	0	; () banked
  6950  00381E  29D4               	incf	sqrt@exp& (0+255),w,b
  6951  003820  0100               	movlb	0	; () banked
  6952  003822  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  6953  003824  A4D8               	btfss	status,2,c
  6954  003826  D012               	goto	l7036
  6955                           
  6956                           ; BSR set to: 0
  6957  003828  0E00               	movlw	0
  6958  00382A  0100               	movlb	0	; () banked
  6959  00382C  6FD6               	movwf	sqrt@root& (0+255),b
  6960  00382E  0E00               	movlw	0
  6961  003830  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  6962  003832  0E80               	movlw	128
  6963  003834  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  6964  003836  0E7F               	movlw	127
  6965  003838  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  6966                           
  6967                           ; BSR set to: 0
  6968  00383A  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  6969  00383E  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  6970  003842  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  6971  003846  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  6972                           
  6973                           ; BSR set to: 0
  6974  00384A  0012               	return	
  6975  00384C                     l7036:
  6976                           
  6977                           ; BSR set to: 0
  6978  00384C  0100               	movlb	0	; () banked
  6979  00384E  0E81               	movlw	129
  6980  003850  27D4               	addwf	sqrt@exp& (0+255),f,b
  6981  003852  0EFF               	movlw	255
  6982  003854  23D5               	addwfc	(sqrt@exp+1)& (0+255),f,b
  6983  003856  0100               	movlb	0	; () banked
  6984  003858  51D4               	movf	sqrt@exp& (0+255),w,b
  6985  00385A  0B01               	andlw	1
  6986  00385C  0100               	movlb	0	; () banked
  6987  00385E  6FCF               	movwf	sqrt@p& (0+255),b
  6988  003860  0100               	movlb	0	; () banked
  6989  003862  35D5               	rlcf	(sqrt@exp+1)& (0+255),w,b
  6990  003864  33D5               	rrcf	(sqrt@exp+1)& (0+255),f,b
  6991  003866  33D4               	rrcf	sqrt@exp& (0+255),f,b
  6992  003868  0E7F               	movlw	127
  6993  00386A  0100               	movlb	0	; () banked
  6994  00386C  27D4               	addwf	sqrt@exp& (0+255),f,b
  6995  00386E  0E00               	movlw	0
  6996  003870  23D5               	addwfc	(sqrt@exp+1)& (0+255),f,b
  6997  003872  90D8               	bcf	status,0,c
  6998  003874  0100               	movlb	0	; () banked
  6999  003876  35DA               	rlcf	sqrt@frac& (0+255),w,b
  7000  003878  0100               	movlb	0	; () banked
  7001  00387A  6FCB               	movwf	sqrt@tfrac& (0+255),b
  7002  00387C  0100               	movlb	0	; () banked
  7003  00387E  35DB               	rlcf	(sqrt@frac+1)& (0+255),w,b
  7004  003880  0100               	movlb	0	; () banked
  7005  003882  6FCC               	movwf	(sqrt@tfrac+1)& (0+255),b
  7006  003884  0100               	movlb	0	; () banked
  7007  003886  35DC               	rlcf	(sqrt@frac+2)& (0+255),w,b
  7008  003888  0100               	movlb	0	; () banked
  7009  00388A  6FCD               	movwf	(sqrt@tfrac+2)& (0+255),b
  7010  00388C  0100               	movlb	0	; () banked
  7011  00388E  35DD               	rlcf	(sqrt@frac+3)& (0+255),w,b
  7012  003890  0100               	movlb	0	; () banked
  7013  003892  6FCE               	movwf	(sqrt@tfrac+3)& (0+255),b
  7014                           
  7015                           ; BSR set to: 0
  7016  003894  0E00               	movlw	0
  7017  003896  0100               	movlb	0	; () banked
  7018  003898  6FDA               	movwf	sqrt@frac& (0+255),b
  7019  00389A  0E00               	movlw	0
  7020  00389C  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  7021  00389E  0E00               	movlw	0
  7022  0038A0  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  7023  0038A2  0E00               	movlw	0
  7024  0038A4  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  7025                           
  7026                           ; BSR set to: 0
  7027  0038A6  0E00               	movlw	0
  7028  0038A8  0100               	movlb	0	; () banked
  7029  0038AA  6FD0               	movwf	sqrt@grs& (0+255),b
  7030  0038AC  0E00               	movlw	0
  7031  0038AE  6FD1               	movwf	(sqrt@grs+1)& (0+255),b
  7032  0038B0  0E00               	movlw	0
  7033  0038B2  6FD2               	movwf	(sqrt@grs+2)& (0+255),b
  7034  0038B4  0E01               	movlw	1
  7035  0038B6  6FD3               	movwf	(sqrt@grs+3)& (0+255),b
  7036                           
  7037                           ; BSR set to: 0
  7038  0038B8  0100               	movlb	0	; () banked
  7039  0038BA  51CF               	movf	sqrt@p& (0+255),w,b
  7040  0038BC  0100               	movlb	0	; () banked
  7041  0038BE  B4D8               	btfsc	status,2,c
  7042  0038C0  D006               	goto	l7046
  7043                           
  7044                           ; BSR set to: 0
  7045  0038C2  0100               	movlb	0	; () banked
  7046  0038C4  90D8               	bcf	status,0,c
  7047  0038C6  37CB               	rlcf	sqrt@tfrac& (0+255),f,b
  7048  0038C8  37CC               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7049  0038CA  37CD               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7050  0038CC  37CE               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7051  0038CE                     l7046:
  7052                           
  7053                           ; BSR set to: 0
  7054  0038CE  0E00               	movlw	0
  7055  0038D0  0100               	movlb	0	; () banked
  7056  0038D2  6FCA               	movwf	sqrt@i& (0+255),b
  7057  0038D4  D07E               	goto	l7060
  7058  0038D6                     l7048:
  7059                           
  7060                           ; BSR set to: 0
  7061  0038D6  0100               	movlb	0	; () banked
  7062  0038D8  51D0               	movf	sqrt@grs& (0+255),w,b
  7063  0038DA  0100               	movlb	0	; () banked
  7064  0038DC  13DA               	iorwf	sqrt@frac& (0+255),f,b
  7065  0038DE  0100               	movlb	0	; () banked
  7066  0038E0  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7067  0038E2  0100               	movlb	0	; () banked
  7068  0038E4  13DB               	iorwf	(sqrt@frac+1)& (0+255),f,b
  7069  0038E6  0100               	movlb	0	; () banked
  7070  0038E8  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7071  0038EA  0100               	movlb	0	; () banked
  7072  0038EC  13DC               	iorwf	(sqrt@frac+2)& (0+255),f,b
  7073  0038EE  0100               	movlb	0	; () banked
  7074  0038F0  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7075  0038F2  0100               	movlb	0	; () banked
  7076  0038F4  13DD               	iorwf	(sqrt@frac+3)& (0+255),f,b
  7077  0038F6  0100               	movlb	0	; () banked
  7078  0038F8  51DA               	movf	sqrt@frac& (0+255),w,b
  7079  0038FA  0100               	movlb	0	; () banked
  7080  0038FC  5DCB               	subwf	sqrt@tfrac& (0+255),w,b
  7081  0038FE  0100               	movlb	0	; () banked
  7082  003900  51DB               	movf	(sqrt@frac+1)& (0+255),w,b
  7083  003902  0100               	movlb	0	; () banked
  7084  003904  59CC               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  7085  003906  0100               	movlb	0	; () banked
  7086  003908  51DC               	movf	(sqrt@frac+2)& (0+255),w,b
  7087  00390A  0100               	movlb	0	; () banked
  7088  00390C  59CD               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  7089  00390E  0100               	movlb	0	; () banked
  7090  003910  51DD               	movf	(sqrt@frac+3)& (0+255),w,b
  7091  003912  0100               	movlb	0	; () banked
  7092  003914  59CE               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  7093  003916  A0D8               	btfss	status,0,c
  7094  003918  D021               	goto	l7052
  7095                           
  7096                           ; BSR set to: 0
  7097  00391A  0100               	movlb	0	; () banked
  7098  00391C  51DA               	movf	sqrt@frac& (0+255),w,b
  7099  00391E  0100               	movlb	0	; () banked
  7100  003920  5FCB               	subwf	sqrt@tfrac& (0+255),f,b
  7101  003922  0100               	movlb	0	; () banked
  7102  003924  51DB               	movf	(sqrt@frac+1)& (0+255),w,b
  7103  003926  0100               	movlb	0	; () banked
  7104  003928  5BCC               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  7105  00392A  0100               	movlb	0	; () banked
  7106  00392C  51DC               	movf	(sqrt@frac+2)& (0+255),w,b
  7107  00392E  0100               	movlb	0	; () banked
  7108  003930  5BCD               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  7109  003932  0100               	movlb	0	; () banked
  7110  003934  51DD               	movf	(sqrt@frac+3)& (0+255),w,b
  7111  003936  0100               	movlb	0	; () banked
  7112  003938  5BCE               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  7113  00393A  0100               	movlb	0	; () banked
  7114  00393C  51D0               	movf	sqrt@grs& (0+255),w,b
  7115  00393E  0100               	movlb	0	; () banked
  7116  003940  27DA               	addwf	sqrt@frac& (0+255),f,b
  7117  003942  0100               	movlb	0	; () banked
  7118  003944  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7119  003946  0100               	movlb	0	; () banked
  7120  003948  23DB               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7121  00394A  0100               	movlb	0	; () banked
  7122  00394C  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7123  00394E  0100               	movlb	0	; () banked
  7124  003950  23DC               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7125  003952  0100               	movlb	0	; () banked
  7126  003954  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7127  003956  0100               	movlb	0	; () banked
  7128  003958  23DD               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7129  00395A  D01D               	goto	l7054
  7130  00395C                     l7052:
  7131                           
  7132                           ; BSR set to: 0
  7133  00395C  C0D0  F0C5         	movff	sqrt@grs,??_sqrt
  7134  003960  C0D1  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7135  003964  C0D2  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7136  003968  C0D3  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7137  00396C  0100               	movlb	0	; () banked
  7138  00396E  1FC5               	comf	??_sqrt& (0+255),f,b
  7139  003970  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  7140  003972  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  7141  003974  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  7142  003976  0100               	movlb	0	; () banked
  7143  003978  51C5               	movf	??_sqrt& (0+255),w,b
  7144  00397A  0100               	movlb	0	; () banked
  7145  00397C  17DA               	andwf	sqrt@frac& (0+255),f,b
  7146  00397E  0100               	movlb	0	; () banked
  7147  003980  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  7148  003982  0100               	movlb	0	; () banked
  7149  003984  17DB               	andwf	(sqrt@frac+1)& (0+255),f,b
  7150  003986  0100               	movlb	0	; () banked
  7151  003988  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  7152  00398A  0100               	movlb	0	; () banked
  7153  00398C  17DC               	andwf	(sqrt@frac+2)& (0+255),f,b
  7154  00398E  0100               	movlb	0	; () banked
  7155  003990  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  7156  003992  0100               	movlb	0	; () banked
  7157  003994  17DD               	andwf	(sqrt@frac+3)& (0+255),f,b
  7158  003996                     l7054:
  7159                           
  7160                           ; BSR set to: 0
  7161  003996  C0D0  F0C5         	movff	sqrt@grs,??_sqrt
  7162  00399A  C0D1  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7163  00399E  C0D2  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7164  0039A2  C0D3  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7165  0039A6  0100               	movlb	0	; () banked
  7166  0039A8  90D8               	bcf	status,0,c
  7167  0039AA  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7168  0039AC  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7169  0039AE  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7170  0039B0  33C5               	rrcf	??_sqrt& (0+255),f,b
  7171  0039B2  C0C5  F0D0         	movff	??_sqrt,sqrt@grs
  7172  0039B6  C0C6  F0D1         	movff	??_sqrt+1,sqrt@grs+1
  7173  0039BA  C0C7  F0D2         	movff	??_sqrt+2,sqrt@grs+2
  7174  0039BE  C0C8  F0D3         	movff	??_sqrt+3,sqrt@grs+3
  7175                           
  7176                           ; BSR set to: 0
  7177  0039C2  0100               	movlb	0	; () banked
  7178  0039C4  90D8               	bcf	status,0,c
  7179  0039C6  37CB               	rlcf	sqrt@tfrac& (0+255),f,b
  7180  0039C8  37CC               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7181  0039CA  37CD               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7182  0039CC  37CE               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7183                           
  7184                           ; BSR set to: 0
  7185  0039CE  0100               	movlb	0	; () banked
  7186  0039D0  2BCA               	incf	sqrt@i& (0+255),f,b
  7187  0039D2                     l7060:
  7188                           
  7189                           ; BSR set to: 0
  7190  0039D2  0E18               	movlw	24
  7191  0039D4  0100               	movlb	0	; () banked
  7192  0039D6  65CA               	cpfsgt	sqrt@i& (0+255),b
  7193  0039D8  D77E               	goto	l7048
  7194                           
  7195                           ; BSR set to: 0
  7196                           
  7197                           ; BSR set to: 0
  7198  0039DA  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7199  0039DE  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7200  0039E2  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7201  0039E6  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7202  0039EA  0100               	movlb	0	; () banked
  7203  0039EC  90D8               	bcf	status,0,c
  7204  0039EE  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7205  0039F0  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7206  0039F2  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7207  0039F4  33C5               	rrcf	??_sqrt& (0+255),f,b
  7208  0039F6  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7209  0039FA  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7210  0039FE  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7211  003A02  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7212                           
  7213                           ; BSR set to: 0
  7214  003A06  0E01               	movlw	1
  7215  003A08  0100               	movlb	0	; () banked
  7216  003A0A  15DA               	andwf	sqrt@frac& (0+255),w,b
  7217  003A0C  0100               	movlb	0	; () banked
  7218  003A0E  6FD0               	movwf	sqrt@grs& (0+255),b
  7219  003A10  0E00               	movlw	0
  7220  003A12  0100               	movlb	0	; () banked
  7221  003A14  15DB               	andwf	(sqrt@frac+1)& (0+255),w,b
  7222  003A16  0100               	movlb	0	; () banked
  7223  003A18  6FD1               	movwf	(sqrt@grs+1)& (0+255),b
  7224  003A1A  0E00               	movlw	0
  7225  003A1C  0100               	movlb	0	; () banked
  7226  003A1E  15DC               	andwf	(sqrt@frac+2)& (0+255),w,b
  7227  003A20  0100               	movlb	0	; () banked
  7228  003A22  6FD2               	movwf	(sqrt@grs+2)& (0+255),b
  7229  003A24  0E00               	movlw	0
  7230  003A26  0100               	movlb	0	; () banked
  7231  003A28  15DD               	andwf	(sqrt@frac+3)& (0+255),w,b
  7232  003A2A  0100               	movlb	0	; () banked
  7233  003A2C  6FD3               	movwf	(sqrt@grs+3)& (0+255),b
  7234                           
  7235                           ; BSR set to: 0
  7236  003A2E  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7237  003A32  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7238  003A36  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7239  003A3A  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7240  003A3E  0100               	movlb	0	; () banked
  7241  003A40  90D8               	bcf	status,0,c
  7242  003A42  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7243  003A44  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7244  003A46  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7245  003A48  33C5               	rrcf	??_sqrt& (0+255),f,b
  7246  003A4A  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7247  003A4E  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7248  003A52  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7249  003A56  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7250  003A5A  0100               	movlb	0	; () banked
  7251  003A5C  51D0               	movf	sqrt@grs& (0+255),w,b
  7252  003A5E  0100               	movlb	0	; () banked
  7253  003A60  27DA               	addwf	sqrt@frac& (0+255),f,b
  7254  003A62  0100               	movlb	0	; () banked
  7255  003A64  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7256  003A66  0100               	movlb	0	; () banked
  7257  003A68  23DB               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7258  003A6A  0100               	movlb	0	; () banked
  7259  003A6C  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7260  003A6E  0100               	movlb	0	; () banked
  7261  003A70  23DC               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7262  003A72  0100               	movlb	0	; () banked
  7263  003A74  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7264  003A76  0100               	movlb	0	; () banked
  7265  003A78  23DD               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7266                           
  7267                           ; BSR set to: 0
  7268  003A7A  0100               	movlb	0	; () banked
  7269  003A7C  A1DD               	btfss	(sqrt@frac+3)& (0+255),0,b
  7270  003A7E  D019               	goto	l7072
  7271                           
  7272                           ; BSR set to: 0
  7273  003A80  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7274  003A84  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7275  003A88  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7276  003A8C  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7277  003A90  0100               	movlb	0	; () banked
  7278  003A92  90D8               	bcf	status,0,c
  7279  003A94  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7280  003A96  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7281  003A98  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7282  003A9A  33C5               	rrcf	??_sqrt& (0+255),f,b
  7283  003A9C  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7284  003AA0  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7285  003AA4  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7286  003AA8  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7287  003AAC  0100               	movlb	0	; () banked
  7288  003AAE  4BD4               	infsnz	sqrt@exp& (0+255),f,b
  7289  003AB0  2BD5               	incf	(sqrt@exp+1)& (0+255),f,b
  7290  003AB2                     l7072:
  7291                           
  7292                           ; BSR set to: 0
  7293  003AB2  0EFF               	movlw	255
  7294  003AB4  0100               	movlb	0	; () banked
  7295  003AB6  15DA               	andwf	sqrt@frac& (0+255),w,b
  7296  003AB8  0100               	movlb	0	; () banked
  7297  003ABA  6FD6               	movwf	sqrt@root& (0+255),b
  7298  003ABC  0EFF               	movlw	255
  7299  003ABE  0100               	movlb	0	; () banked
  7300  003AC0  15DB               	andwf	(sqrt@frac+1)& (0+255),w,b
  7301  003AC2  0100               	movlb	0	; () banked
  7302  003AC4  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  7303  003AC6  0E7F               	movlw	127
  7304  003AC8  0100               	movlb	0	; () banked
  7305  003ACA  15DC               	andwf	(sqrt@frac+2)& (0+255),w,b
  7306  003ACC  0100               	movlb	0	; () banked
  7307  003ACE  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  7308  003AD0  0E00               	movlw	0
  7309  003AD2  0100               	movlb	0	; () banked
  7310  003AD4  15DD               	andwf	(sqrt@frac+3)& (0+255),w,b
  7311  003AD6  0100               	movlb	0	; () banked
  7312  003AD8  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7313                           
  7314                           ; BSR set to: 0
  7315  003ADA  C0D4  F0CF         	movff	sqrt@exp,sqrt@p
  7316                           
  7317                           ; BSR set to: 0
  7318  003ADE  0100               	movlb	0	; () banked
  7319  003AE0  A1CF               	btfss	sqrt@p& (0+255),0,b
  7320  003AE2  D002               	goto	l7080
  7321                           
  7322                           ; BSR set to: 0
  7323  003AE4  0100               	movlb	0	; () banked
  7324  003AE6  8FD8               	bsf	(sqrt@root+2)& (0+255),7,b
  7325  003AE8                     l7080:
  7326                           
  7327                           ; BSR set to: 0
  7328  003AE8  0100               	movlb	0	; () banked
  7329  003AEA  90D8               	bcf	status,0,c
  7330  003AEC  31CF               	rrcf	sqrt@p& (0+255),w,b
  7331  003AEE  0100               	movlb	0	; () banked
  7332  003AF0  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7333                           
  7334                           ; BSR set to: 0
  7335  003AF2  0100               	movlb	0	; () banked
  7336  003AF4  9FD9               	bcf	(sqrt@root+3)& (0+255),7,b
  7337                           
  7338                           ; BSR set to: 0
  7339  003AF6  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  7340  003AFA  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7341  003AFE  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7342  003B02  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7343  003B06  0012               	return	
  7344  003B08                     __end_of_sqrt:
  7345                           	opt stack 0
  7346                           tblptru	equ	0xFF8
  7347                           tblptrh	equ	0xFF7
  7348                           tblptrl	equ	0xFF6
  7349                           tablat	equ	0xFF5
  7350                           postinc0	equ	0xFEE
  7351                           wreg	equ	0xFE8
  7352                           postdec1	equ	0xFE5
  7353                           fsr1l	equ	0xFE1
  7354                           indf2	equ	0xFDF
  7355                           postinc2	equ	0xFDE
  7356                           postdec2	equ	0xFDD
  7357                           fsr2h	equ	0xFDA
  7358                           fsr2l	equ	0xFD9
  7359                           status	equ	0xFD8
  7360                           
  7361 ;; *************** function _atan *****************
  7362 ;; Defined at:
  7363 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  7364 ;; Parameters:    Size  Location     Type
  7365 ;;  f               4  113[BANK0 ] unsigned char 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;  val             4   13[BANK1 ] unsigned char 
  7368 ;;  val_squared     4    9[BANK1 ] unsigned char 
  7369 ;;  x               4    4[BANK1 ] unsigned char 
  7370 ;;  y               4    0[BANK1 ] unsigned char 
  7371 ;;  recip           1    8[BANK1 ] unsigned char 
  7372 ;; Return value:  Size  Location     Type
  7373 ;;                  4  113[BANK0 ] unsigned char 
  7374 ;; Registers used:
  7375 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7376 ;; Tracked objects:
  7377 ;;		On entry : 0/0
  7378 ;;		On exit  : 0/0
  7379 ;;		Unchanged: 0/0
  7380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7381 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7382 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7384 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7385 ;;Total ram usage:       21 bytes
  7386 ;; Hardware stack levels used:    1
  7387 ;; Hardware stack levels required when called:    6
  7388 ;; This function calls:
  7389 ;;		___fladd
  7390 ;;		___fldiv
  7391 ;;		___flge
  7392 ;;		___flmul
  7393 ;;		___flneg
  7394 ;;		_eval_poly
  7395 ;;		_fabs
  7396 ;; This function is called by:
  7397 ;;		_asin
  7398 ;; This function uses a non-reentrant model
  7399 ;;
  7400                           
  7401                           	psect	text18
  7402  004B1C                     __ptext18:
  7403                           	opt stack 0
  7404  004B1C                     _atan:
  7405                           	opt stack 21
  7406                           
  7407                           ;incstack = 0
  7408  004B1C  C0D1  F0AD         	movff	atan@f,fabs@d
  7409  004B20  C0D2  F0AE         	movff	atan@f+1,fabs@d+1
  7410  004B24  C0D3  F0AF         	movff	atan@f+2,fabs@d+2
  7411  004B28  C0D4  F0B0         	movff	atan@f+3,fabs@d+3
  7412  004B2C  ECA2  F02E         	call	_fabs	;wreg free
  7413  004B30  C0AD  F196         	movff	?_fabs,atan@val
  7414  004B34  C0AE  F197         	movff	?_fabs+1,atan@val+1
  7415  004B38  C0AF  F198         	movff	?_fabs+2,atan@val+2
  7416  004B3C  C0B0  F199         	movff	?_fabs+3,atan@val+3
  7417  004B40  0101               	movlb	1	; () banked
  7418  004B42  5196               	movf	atan@val& (0+255),w,b
  7419  004B44  0101               	movlb	1	; () banked
  7420  004B46  1197               	iorwf	(atan@val+1)& (0+255),w,b
  7421  004B48  0101               	movlb	1	; () banked
  7422  004B4A  1198               	iorwf	(atan@val+2)& (0+255),w,b
  7423  004B4C  0101               	movlb	1	; () banked
  7424  004B4E  1199               	iorwf	(atan@val+3)& (0+255),w,b
  7425  004B50  A4D8               	btfss	status,2,c
  7426  004B52  D00A               	goto	l7100
  7427                           
  7428                           ; BSR set to: 1
  7429  004B54  0E00               	movlw	0
  7430  004B56  0100               	movlb	0	; () banked
  7431  004B58  6FD1               	movwf	?_atan& (0+255),b
  7432  004B5A  0E00               	movlw	0
  7433  004B5C  6FD2               	movwf	(?_atan+1)& (0+255),b
  7434  004B5E  0E00               	movlw	0
  7435  004B60  6FD3               	movwf	(?_atan+2)& (0+255),b
  7436  004B62  0E00               	movlw	0
  7437  004B64  6FD4               	movwf	(?_atan+3)& (0+255),b
  7438                           
  7439                           ; BSR set to: 0
  7440  004B66  0012               	return	
  7441  004B68                     l7100:
  7442  004B68  0E00               	movlw	0
  7443  004B6A  0100               	movlb	0	; () banked
  7444  004B6C  6FB1               	movwf	___flge@ff1& (0+255),b
  7445  004B6E  0E00               	movlw	0
  7446  004B70  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  7447  004B72  0E80               	movlw	128
  7448  004B74  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  7449  004B76  0E3F               	movlw	63
  7450  004B78  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  7451  004B7A  C196  F0B5         	movff	atan@val,___flge@ff2
  7452  004B7E  C197  F0B6         	movff	atan@val+1,___flge@ff2+1
  7453  004B82  C198  F0B7         	movff	atan@val+2,___flge@ff2+2
  7454  004B86  C199  F0B8         	movff	atan@val+3,___flge@ff2+3
  7455  004B8A  EC57  F029         	call	___flge	;wreg free
  7456  004B8E  0100               	movlb	0	; () banked
  7457  004B90  B0D8               	btfsc	status,0,c
  7458  004B92  D002               	goto	u9030
  7459  004B94  0E01               	movlw	1
  7460  004B96  D001               	goto	u9040
  7461  004B98                     u9030:
  7462  004B98  0E00               	movlw	0
  7463  004B9A                     u9040:
  7464  004B9A  0101               	movlb	1	; () banked
  7465  004B9C  6F91               	movwf	atan@recip& (0+255),b
  7466  004B9E  0101               	movlb	1	; () banked
  7467  004BA0  5191               	movf	atan@recip& (0+255),w,b
  7468  004BA2  B4D8               	btfsc	status,2,c
  7469  004BA4  D01B               	goto	l7104
  7470                           
  7471                           ; BSR set to: 1
  7472  004BA6  0E00               	movlw	0
  7473  004BA8  0100               	movlb	0	; () banked
  7474  004BAA  6F77               	movwf	___fldiv@b& (0+255),b
  7475  004BAC  0E00               	movlw	0
  7476  004BAE  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7477  004BB0  0E80               	movlw	128
  7478  004BB2  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7479  004BB4  0E3F               	movlw	63
  7480  004BB6  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7481  004BB8  C196  F07B         	movff	atan@val,___fldiv@a
  7482  004BBC  C197  F07C         	movff	atan@val+1,___fldiv@a+1
  7483  004BC0  C198  F07D         	movff	atan@val+2,___fldiv@a+2
  7484  004BC4  C199  F07E         	movff	atan@val+3,___fldiv@a+3
  7485  004BC8  EC84  F01D         	call	___fldiv	;wreg free
  7486  004BCC  C077  F196         	movff	?___fldiv,atan@val
  7487  004BD0  C078  F197         	movff	?___fldiv+1,atan@val+1
  7488  004BD4  C079  F198         	movff	?___fldiv+2,atan@val+2
  7489  004BD8  C07A  F199         	movff	?___fldiv+3,atan@val+3
  7490  004BDC                     l7104:
  7491  004BDC  C196  F090         	movff	atan@val,___flmul@b
  7492  004BE0  C197  F091         	movff	atan@val+1,___flmul@b+1
  7493  004BE4  C198  F092         	movff	atan@val+2,___flmul@b+2
  7494  004BE8  C199  F093         	movff	atan@val+3,___flmul@b+3
  7495  004BEC  C196  F094         	movff	atan@val,___flmul@a
  7496  004BF0  C197  F095         	movff	atan@val+1,___flmul@a+1
  7497  004BF4  C198  F096         	movff	atan@val+2,___flmul@a+2
  7498  004BF8  C199  F097         	movff	atan@val+3,___flmul@a+3
  7499  004BFC  EC63  F017         	call	___flmul	;wreg free
  7500  004C00  C090  F192         	movff	?___flmul,atan@val_squared
  7501  004C04  C091  F193         	movff	?___flmul+1,atan@val_squared+1
  7502  004C08  C092  F194         	movff	?___flmul+2,atan@val_squared+2
  7503  004C0C  C093  F195         	movff	?___flmul+3,atan@val_squared+3
  7504  004C10  C192  F0C1         	movff	atan@val_squared,eval_poly@x
  7505  004C14  C193  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  7506  004C18  C194  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  7507  004C1C  C195  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  7508  004C20  0E19               	movlw	low atan@coeff_b
  7509  004C22  0100               	movlb	0	; () banked
  7510  004C24  6FC5               	movwf	eval_poly@d& (0+255),b
  7511  004C26  0E0D               	movlw	high atan@coeff_b
  7512  004C28  0100               	movlb	0	; () banked
  7513  004C2A  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  7514  004C2C  0E00               	movlw	0
  7515  004C2E  0100               	movlb	0	; () banked
  7516  004C30  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  7517  004C32  0E04               	movlw	4
  7518  004C34  6FC7               	movwf	eval_poly@n& (0+255),b
  7519  004C36  EC4C  F02B         	call	_eval_poly	;wreg free
  7520  004C3A  C0C1  F189         	movff	?_eval_poly,atan@y
  7521  004C3E  C0C2  F18A         	movff	?_eval_poly+1,atan@y+1
  7522  004C42  C0C3  F18B         	movff	?_eval_poly+2,atan@y+2
  7523  004C46  C0C4  F18C         	movff	?_eval_poly+3,atan@y+3
  7524  004C4A  C192  F0C1         	movff	atan@val_squared,eval_poly@x
  7525  004C4E  C193  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  7526  004C52  C194  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  7527  004C56  C195  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  7528  004C5A  0E01               	movlw	low atan@coeff_a
  7529  004C5C  0100               	movlb	0	; () banked
  7530  004C5E  6FC5               	movwf	eval_poly@d& (0+255),b
  7531  004C60  0E0D               	movlw	high atan@coeff_a
  7532  004C62  0100               	movlb	0	; () banked
  7533  004C64  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  7534  004C66  0E00               	movlw	0
  7535  004C68  0100               	movlb	0	; () banked
  7536  004C6A  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  7537  004C6C  0E05               	movlw	5
  7538  004C6E  6FC7               	movwf	eval_poly@n& (0+255),b
  7539  004C70  EC4C  F02B         	call	_eval_poly	;wreg free
  7540  004C74  C0C1  F18D         	movff	?_eval_poly,atan@x
  7541  004C78  C0C2  F18E         	movff	?_eval_poly+1,atan@x+1
  7542  004C7C  C0C3  F18F         	movff	?_eval_poly+2,atan@x+2
  7543  004C80  C0C4  F190         	movff	?_eval_poly+3,atan@x+3
  7544  004C84  C196  F090         	movff	atan@val,___flmul@b
  7545  004C88  C197  F091         	movff	atan@val+1,___flmul@b+1
  7546  004C8C  C198  F092         	movff	atan@val+2,___flmul@b+2
  7547  004C90  C199  F093         	movff	atan@val+3,___flmul@b+3
  7548  004C94  C189  F07B         	movff	atan@y,___fldiv@a
  7549  004C98  C18A  F07C         	movff	atan@y+1,___fldiv@a+1
  7550  004C9C  C18B  F07D         	movff	atan@y+2,___fldiv@a+2
  7551  004CA0  C18C  F07E         	movff	atan@y+3,___fldiv@a+3
  7552  004CA4  C18D  F077         	movff	atan@x,___fldiv@b
  7553  004CA8  C18E  F078         	movff	atan@x+1,___fldiv@b+1
  7554  004CAC  C18F  F079         	movff	atan@x+2,___fldiv@b+2
  7555  004CB0  C190  F07A         	movff	atan@x+3,___fldiv@b+3
  7556  004CB4  EC84  F01D         	call	___fldiv	;wreg free
  7557  004CB8  C077  F094         	movff	?___fldiv,___flmul@a
  7558  004CBC  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  7559  004CC0  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  7560  004CC4  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  7561  004CC8  EC63  F017         	call	___flmul	;wreg free
  7562  004CCC  C090  F196         	movff	?___flmul,atan@val
  7563  004CD0  C091  F197         	movff	?___flmul+1,atan@val+1
  7564  004CD4  C092  F198         	movff	?___flmul+2,atan@val+2
  7565  004CD8  C093  F199         	movff	?___flmul+3,atan@val+3
  7566  004CDC  0101               	movlb	1	; () banked
  7567  004CDE  5191               	movf	atan@recip& (0+255),w,b
  7568  004CE0  0101               	movlb	1	; () banked
  7569  004CE2  B4D8               	btfsc	status,2,c
  7570  004CE4  D025               	goto	l7116
  7571                           
  7572                           ; BSR set to: 1
  7573  004CE6  C196  F0A9         	movff	atan@val,___flneg@f1
  7574  004CEA  C197  F0AA         	movff	atan@val+1,___flneg@f1+1
  7575  004CEE  C198  F0AB         	movff	atan@val+2,___flneg@f1+2
  7576  004CF2  C199  F0AC         	movff	atan@val+3,___flneg@f1+3
  7577  004CF6  ECDE  F02E         	call	___flneg	;wreg free
  7578  004CFA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  7579  004CFE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  7580  004D02  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  7581  004D06  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  7582  004D0A  0EDB               	movlw	219
  7583  004D0C  0100               	movlb	0	; () banked
  7584  004D0E  6FB1               	movwf	___fladd@a& (0+255),b
  7585  004D10  0E0F               	movlw	15
  7586  004D12  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  7587  004D14  0EC9               	movlw	201
  7588  004D16  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  7589  004D18  0E3F               	movlw	63
  7590  004D1A  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  7591  004D1C  EC0F  F015         	call	___fladd	;wreg free
  7592  004D20  C0AD  F196         	movff	?___fladd,atan@val
  7593  004D24  C0AE  F197         	movff	?___fladd+1,atan@val+1
  7594  004D28  C0AF  F198         	movff	?___fladd+2,atan@val+2
  7595  004D2C  C0B0  F199         	movff	?___fladd+3,atan@val+3
  7596  004D30                     l7116:
  7597  004D30  0100               	movlb	0	; () banked
  7598  004D32  BFD4               	btfsc	(atan@f+3)& (0+255),7,b
  7599  004D34  D009               	goto	l7120
  7600                           
  7601                           ; BSR set to: 0
  7602  004D36  C196  F0D1         	movff	atan@val,?_atan
  7603  004D3A  C197  F0D2         	movff	atan@val+1,?_atan+1
  7604  004D3E  C198  F0D3         	movff	atan@val+2,?_atan+2
  7605  004D42  C199  F0D4         	movff	atan@val+3,?_atan+3
  7606  004D46  0012               	return	
  7607  004D48                     l7120:
  7608                           
  7609                           ; BSR set to: 0
  7610  004D48  C196  F0A9         	movff	atan@val,___flneg@f1
  7611  004D4C  C197  F0AA         	movff	atan@val+1,___flneg@f1+1
  7612  004D50  C198  F0AB         	movff	atan@val+2,___flneg@f1+2
  7613  004D54  C199  F0AC         	movff	atan@val+3,___flneg@f1+3
  7614  004D58  ECDE  F02E         	call	___flneg	;wreg free
  7615  004D5C  C0A9  F0D1         	movff	?___flneg,?_atan
  7616  004D60  C0AA  F0D2         	movff	?___flneg+1,?_atan+1
  7617  004D64  C0AB  F0D3         	movff	?___flneg+2,?_atan+2
  7618  004D68  C0AC  F0D4         	movff	?___flneg+3,?_atan+3
  7619  004D6C  0012               	return	
  7620  004D6E                     __end_of_atan:
  7621                           	opt stack 0
  7622                           tblptru	equ	0xFF8
  7623                           tblptrh	equ	0xFF7
  7624                           tblptrl	equ	0xFF6
  7625                           tablat	equ	0xFF5
  7626                           postinc0	equ	0xFEE
  7627                           wreg	equ	0xFE8
  7628                           postdec1	equ	0xFE5
  7629                           fsr1l	equ	0xFE1
  7630                           indf2	equ	0xFDF
  7631                           postinc2	equ	0xFDE
  7632                           postdec2	equ	0xFDD
  7633                           fsr2h	equ	0xFDA
  7634                           fsr2l	equ	0xFD9
  7635                           status	equ	0xFD8
  7636                           
  7637 ;; *************** function _fabs *****************
  7638 ;; Defined at:
  7639 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;  d               4   77[BANK0 ] unsigned char 
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;		None
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  4   77[BANK0 ] unsigned char 
  7646 ;; Registers used:
  7647 ;;		wreg, status,2, status,0, cstack
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7653 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7656 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7657 ;;Total ram usage:        4 bytes
  7658 ;; Hardware stack levels used:    1
  7659 ;; Hardware stack levels required when called:    5
  7660 ;; This function calls:
  7661 ;;		___flneg
  7662 ;; This function is called by:
  7663 ;;		_asin
  7664 ;;		_atan
  7665 ;; This function uses a non-reentrant model
  7666 ;;
  7667                           
  7668                           	psect	text19
  7669  005D44                     __ptext19:
  7670                           	opt stack 0
  7671  005D44                     _fabs:
  7672                           	opt stack 22
  7673                           
  7674                           ;incstack = 0
  7675  005D44  0100               	movlb	0	; () banked
  7676  005D46  AFB0               	btfss	(fabs@d+3)& (0+255),7,b
  7677  005D48  D013               	goto	l1052
  7678                           
  7679                           ; BSR set to: 0
  7680  005D4A  C0AD  F0A9         	movff	fabs@d,___flneg@f1
  7681  005D4E  C0AE  F0AA         	movff	fabs@d+1,___flneg@f1+1
  7682  005D52  C0AF  F0AB         	movff	fabs@d+2,___flneg@f1+2
  7683  005D56  C0B0  F0AC         	movff	fabs@d+3,___flneg@f1+3
  7684  005D5A  ECDE  F02E         	call	___flneg	;wreg free
  7685  005D5E  C0A9  F0AD         	movff	?___flneg,?_fabs
  7686  005D62  C0AA  F0AE         	movff	?___flneg+1,?_fabs+1
  7687  005D66  C0AB  F0AF         	movff	?___flneg+2,?_fabs+2
  7688  005D6A  C0AC  F0B0         	movff	?___flneg+3,?_fabs+3
  7689  005D6E  0012               	return	
  7690  005D70                     l1052:
  7691                           
  7692                           ; BSR set to: 0
  7693  005D70  C0AD  F0AD         	movff	fabs@d,?_fabs
  7694  005D74  C0AE  F0AE         	movff	fabs@d+1,?_fabs+1
  7695  005D78  C0AF  F0AF         	movff	fabs@d+2,?_fabs+2
  7696  005D7C  C0B0  F0B0         	movff	fabs@d+3,?_fabs+3
  7697  005D80  0012               	return		;funcret
  7698  005D82                     __end_of_fabs:
  7699                           	opt stack 0
  7700                           tblptru	equ	0xFF8
  7701                           tblptrh	equ	0xFF7
  7702                           tblptrl	equ	0xFF6
  7703                           tablat	equ	0xFF5
  7704                           postinc0	equ	0xFEE
  7705                           wreg	equ	0xFE8
  7706                           postdec1	equ	0xFE5
  7707                           fsr1l	equ	0xFE1
  7708                           indf2	equ	0xFDF
  7709                           postinc2	equ	0xFDE
  7710                           postdec2	equ	0xFDD
  7711                           fsr2h	equ	0xFDA
  7712                           fsr2l	equ	0xFD9
  7713                           status	equ	0xFD8
  7714                           
  7715 ;; *************** function ___flneg *****************
  7716 ;; Defined at:
  7717 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  7718 ;; Parameters:    Size  Location     Type
  7719 ;;  f1              4   73[BANK0 ] unsigned char 
  7720 ;; Auto vars:     Size  Location     Type
  7721 ;;		None
  7722 ;; Return value:  Size  Location     Type
  7723 ;;                  4   73[BANK0 ] unsigned char 
  7724 ;; Registers used:
  7725 ;;		wreg, status,2, status,0
  7726 ;; Tracked objects:
  7727 ;;		On entry : 0/0
  7728 ;;		On exit  : 0/0
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7731 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7734 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7735 ;;Total ram usage:        4 bytes
  7736 ;; Hardware stack levels used:    1
  7737 ;; Hardware stack levels required when called:    4
  7738 ;; This function calls:
  7739 ;;		Nothing
  7740 ;; This function is called by:
  7741 ;;		_park_routine
  7742 ;;		_matematica
  7743 ;;		_asin
  7744 ;;		_atan
  7745 ;;		_fabs
  7746 ;;		_sin
  7747 ;; This function uses a non-reentrant model
  7748 ;;
  7749                           
  7750                           	psect	text20
  7751  005DBC                     __ptext20:
  7752                           	opt stack 0
  7753  005DBC                     ___flneg:
  7754                           	opt stack 22
  7755                           
  7756                           ;incstack = 0
  7757  005DBC  0100               	movlb	0	; () banked
  7758  005DBE  51A9               	movf	___flneg@f1& (0+255),w,b
  7759  005DC0  0100               	movlb	0	; () banked
  7760  005DC2  11AA               	iorwf	(___flneg@f1+1)& (0+255),w,b
  7761  005DC4  0100               	movlb	0	; () banked
  7762  005DC6  11AB               	iorwf	(___flneg@f1+2)& (0+255),w,b
  7763  005DC8  0100               	movlb	0	; () banked
  7764  005DCA  11AC               	iorwf	(___flneg@f1+3)& (0+255),w,b
  7765  005DCC  B4D8               	btfsc	status,2,c
  7766  005DCE  D009               	goto	l6464
  7767                           
  7768                           ; BSR set to: 0
  7769  005DD0  0E00               	movlw	0
  7770  005DD2  0100               	movlb	0	; () banked
  7771  005DD4  1BA9               	xorwf	___flneg@f1& (0+255),f,b
  7772  005DD6  0E00               	movlw	0
  7773  005DD8  1BAA               	xorwf	(___flneg@f1+1)& (0+255),f,b
  7774  005DDA  0E00               	movlw	0
  7775  005DDC  1BAB               	xorwf	(___flneg@f1+2)& (0+255),f,b
  7776  005DDE  0E80               	movlw	128
  7777  005DE0  1BAC               	xorwf	(___flneg@f1+3)& (0+255),f,b
  7778  005DE2                     l6464:
  7779                           
  7780                           ; BSR set to: 0
  7781  005DE2  C0A9  F0A9         	movff	___flneg@f1,?___flneg
  7782  005DE6  C0AA  F0AA         	movff	___flneg@f1+1,?___flneg+1
  7783  005DEA  C0AB  F0AB         	movff	___flneg@f1+2,?___flneg+2
  7784  005DEE  C0AC  F0AC         	movff	___flneg@f1+3,?___flneg+3
  7785  005DF2  0012               	return	
  7786  005DF4                     __end_of___flneg:
  7787                           	opt stack 0
  7788                           tblptru	equ	0xFF8
  7789                           tblptrh	equ	0xFF7
  7790                           tblptrl	equ	0xFF6
  7791                           tablat	equ	0xFF5
  7792                           postinc0	equ	0xFEE
  7793                           wreg	equ	0xFE8
  7794                           postdec1	equ	0xFE5
  7795                           fsr1l	equ	0xFE1
  7796                           indf2	equ	0xFDF
  7797                           postinc2	equ	0xFDE
  7798                           postdec2	equ	0xFDD
  7799                           fsr2h	equ	0xFDA
  7800                           fsr2l	equ	0xFD9
  7801                           status	equ	0xFD8
  7802                           
  7803 ;; *************** function _eval_poly *****************
  7804 ;; Defined at:
  7805 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  7806 ;; Parameters:    Size  Location     Type
  7807 ;;  x               4   97[BANK0 ] unsigned char 
  7808 ;;  d               2  101[BANK0 ] PTR const 
  7809 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
  7810 ;;  n               2  103[BANK0 ] int 
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;  res             4  109[BANK0 ] int 
  7813 ;; Return value:  Size  Location     Type
  7814 ;;                  4   97[BANK0 ] int 
  7815 ;; Registers used:
  7816 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7817 ;; Tracked objects:
  7818 ;;		On entry : 0/0
  7819 ;;		On exit  : 0/0
  7820 ;;		Unchanged: 0/0
  7821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7822 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7823 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7824 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7825 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7826 ;;Total ram usage:       16 bytes
  7827 ;; Hardware stack levels used:    1
  7828 ;; Hardware stack levels required when called:    5
  7829 ;; This function calls:
  7830 ;;		___fladd
  7831 ;;		___flmul
  7832 ;; This function is called by:
  7833 ;;		_atan
  7834 ;;		_sin
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838                           	psect	text21
  7839  005698                     __ptext21:
  7840                           	opt stack 0
  7841  005698                     _eval_poly:
  7842                           	opt stack 21
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;incstack = 0
  7846  005698  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  7847  00569C  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  7848  0056A0  0100               	movlb	0	; () banked
  7849  0056A2  90D8               	bcf	status,0,c
  7850  0056A4  37C9               	rlcf	??_eval_poly& (0+255),f,b
  7851  0056A6  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  7852  0056A8  0100               	movlb	0	; () banked
  7853  0056AA  90D8               	bcf	status,0,c
  7854  0056AC  37C9               	rlcf	??_eval_poly& (0+255),f,b
  7855  0056AE  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  7856  0056B0  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  7857  0056B4  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  7858  0056B8  0100               	movlb	0	; () banked
  7859  0056BA  51C9               	movf	??_eval_poly& (0+255),w,b
  7860  0056BC  0100               	movlb	0	; () banked
  7861  0056BE  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  7862  0056C0  0100               	movlb	0	; () banked
  7863  0056C2  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  7864  0056C4  0100               	movlb	0	; () banked
  7865  0056C6  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  7866  0056C8  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  7867  0056CC  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  7868  0056D0                     	if	0	;tblptru may be non-zero
  7869  0056D0                     	endif
  7870  0056D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7871  0056D0  0E00               	movlw	low (__mediumconst shr (0+16))
  7872  0056D2  6EF8               	movwf	tblptru,c
  7873  0056D4                     	endif
  7874  0056D4  0009               	tblrd		*+
  7875  0056D6  CFF5 F0CD          	movff	tablat,eval_poly@res
  7876  0056DA  0009               	tblrd		*+
  7877  0056DC  CFF5 F0CE          	movff	tablat,eval_poly@res+1
  7878  0056E0  0009               	tblrd		*+
  7879  0056E2  CFF5 F0CF          	movff	tablat,eval_poly@res+2
  7880  0056E6  000A               	tblrd		*-
  7881  0056E8  CFF5 F0D0          	movff	tablat,eval_poly@res+3
  7882  0056EC  D052               	goto	l6722
  7883  0056EE                     l6720:
  7884                           
  7885                           ; BSR set to: 0
  7886  0056EE  C0CD  F094         	movff	eval_poly@res,___flmul@a
  7887  0056F2  C0CE  F095         	movff	eval_poly@res+1,___flmul@a+1
  7888  0056F6  C0CF  F096         	movff	eval_poly@res+2,___flmul@a+2
  7889  0056FA  C0D0  F097         	movff	eval_poly@res+3,___flmul@a+3
  7890  0056FE  C0C1  F090         	movff	eval_poly@x,___flmul@b
  7891  005702  C0C2  F091         	movff	eval_poly@x+1,___flmul@b+1
  7892  005706  C0C3  F092         	movff	eval_poly@x+2,___flmul@b+2
  7893  00570A  C0C4  F093         	movff	eval_poly@x+3,___flmul@b+3
  7894  00570E  EC63  F017         	call	___flmul	;wreg free
  7895  005712  C090  F0AD         	movff	?___flmul,___fladd@b
  7896  005716  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  7897  00571A  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  7898  00571E  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  7899  005722  0100               	movlb	0	; () banked
  7900  005724  07C7               	decf	eval_poly@n& (0+255),f,b
  7901  005726  A0D8               	btfss	status,0,c
  7902  005728  07C8               	decf	(eval_poly@n+1)& (0+255),f,b
  7903  00572A  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  7904  00572E  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  7905  005732  0100               	movlb	0	; () banked
  7906  005734  90D8               	bcf	status,0,c
  7907  005736  37C9               	rlcf	??_eval_poly& (0+255),f,b
  7908  005738  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  7909  00573A  0100               	movlb	0	; () banked
  7910  00573C  90D8               	bcf	status,0,c
  7911  00573E  37C9               	rlcf	??_eval_poly& (0+255),f,b
  7912  005740  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  7913  005742  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  7914  005746  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  7915  00574A  0100               	movlb	0	; () banked
  7916  00574C  51C9               	movf	??_eval_poly& (0+255),w,b
  7917  00574E  0100               	movlb	0	; () banked
  7918  005750  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  7919  005752  0100               	movlb	0	; () banked
  7920  005754  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  7921  005756  0100               	movlb	0	; () banked
  7922  005758  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  7923  00575A  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  7924  00575E  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  7925  005762                     	if	0	;tblptru may be non-zero
  7926  005762                     	endif
  7927  005762                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7928  005762  0E00               	movlw	low (__mediumconst shr (0+16))
  7929  005764  6EF8               	movwf	tblptru,c
  7930  005766                     	endif
  7931  005766  0009               	tblrd		*+
  7932  005768  CFF5 F0B1          	movff	tablat,___fladd@a
  7933  00576C  0009               	tblrd		*+
  7934  00576E  CFF5 F0B2          	movff	tablat,___fladd@a+1
  7935  005772  0009               	tblrd		*+
  7936  005774  CFF5 F0B3          	movff	tablat,___fladd@a+2
  7937  005778  000A               	tblrd		*-
  7938  00577A  CFF5 F0B4          	movff	tablat,___fladd@a+3
  7939  00577E  EC0F  F015         	call	___fladd	;wreg free
  7940  005782  C0AD  F0CD         	movff	?___fladd,eval_poly@res
  7941  005786  C0AE  F0CE         	movff	?___fladd+1,eval_poly@res+1
  7942  00578A  C0AF  F0CF         	movff	?___fladd+2,eval_poly@res+2
  7943  00578E  C0B0  F0D0         	movff	?___fladd+3,eval_poly@res+3
  7944  005792                     l6722:
  7945  005792  0100               	movlb	0	; () banked
  7946  005794  51C7               	movf	eval_poly@n& (0+255),w,b
  7947  005796  0100               	movlb	0	; () banked
  7948  005798  11C8               	iorwf	(eval_poly@n+1)& (0+255),w,b
  7949  00579A  A4D8               	btfss	status,2,c
  7950  00579C  D7A8               	goto	l6720
  7951                           
  7952                           ; BSR set to: 0
  7953  00579E  C0CD  F0C1         	movff	eval_poly@res,?_eval_poly
  7954  0057A2  C0CE  F0C2         	movff	eval_poly@res+1,?_eval_poly+1
  7955  0057A6  C0CF  F0C3         	movff	eval_poly@res+2,?_eval_poly+2
  7956  0057AA  C0D0  F0C4         	movff	eval_poly@res+3,?_eval_poly+3
  7957                           
  7958                           ; BSR set to: 0
  7959  0057AE  0012               	return		;funcret
  7960  0057B0                     __end_of_eval_poly:
  7961                           	opt stack 0
  7962                           tblptru	equ	0xFF8
  7963                           tblptrh	equ	0xFF7
  7964                           tblptrl	equ	0xFF6
  7965                           tablat	equ	0xFF5
  7966                           postinc0	equ	0xFEE
  7967                           wreg	equ	0xFE8
  7968                           postdec1	equ	0xFE5
  7969                           fsr1l	equ	0xFE1
  7970                           indf2	equ	0xFDF
  7971                           postinc2	equ	0xFDE
  7972                           postdec2	equ	0xFDD
  7973                           fsr2h	equ	0xFDA
  7974                           fsr2l	equ	0xFD9
  7975                           status	equ	0xFD8
  7976                           
  7977 ;; *************** function ___flmul *****************
  7978 ;; Defined at:
  7979 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;  b               4   48[BANK0 ] int 
  7982 ;;  a               4   52[BANK0 ] int 
  7983 ;; Auto vars:     Size  Location     Type
  7984 ;;  prod            4   67[BANK0 ] struct .
  7985 ;;  grs             4   62[BANK0 ] unsigned long 
  7986 ;;  temp            2   71[BANK0 ] struct .
  7987 ;;  bexp            1   66[BANK0 ] unsigned char 
  7988 ;;  aexp            1   61[BANK0 ] unsigned char 
  7989 ;;  sign            1   60[BANK0 ] unsigned char 
  7990 ;; Return value:  Size  Location     Type
  7991 ;;                  4   48[BANK0 ] unsigned char 
  7992 ;; Registers used:
  7993 ;;		wreg, status,2, status,0, prodl, prodh
  7994 ;; Tracked objects:
  7995 ;;		On entry : 0/0
  7996 ;;		On exit  : 0/0
  7997 ;;		Unchanged: 0/0
  7998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7999 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8000 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8001 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8002 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8003 ;;Total ram usage:       25 bytes
  8004 ;; Hardware stack levels used:    1
  8005 ;; Hardware stack levels required when called:    4
  8006 ;; This function calls:
  8007 ;;		Nothing
  8008 ;; This function is called by:
  8009 ;;		_parallelo
  8010 ;;		_matematica
  8011 ;;		_asin
  8012 ;;		_atan
  8013 ;;		_eval_poly
  8014 ;;		_sin
  8015 ;; This function uses a non-reentrant model
  8016 ;;
  8017                           
  8018                           	psect	text22
  8019  002EC6                     __ptext22:
  8020                           	opt stack 0
  8021  002EC6                     ___flmul:
  8022                           	opt stack 21
  8023                           
  8024                           ; BSR set to: 0
  8025                           ;incstack = 0
  8026  002EC6  0100               	movlb	0	; () banked
  8027  002EC8  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8028  002ECA  0B80               	andlw	128
  8029  002ECC  0100               	movlb	0	; () banked
  8030  002ECE  6F9C               	movwf	___flmul@sign& (0+255),b
  8031  002ED0  0100               	movlb	0	; () banked
  8032  002ED2  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8033  002ED4  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  8034  002ED6  0100               	movlb	0	; () banked
  8035  002ED8  6FA2               	movwf	___flmul@bexp& (0+255),b
  8036                           
  8037                           ; BSR set to: 0
  8038  002EDA  0100               	movlb	0	; () banked
  8039  002EDC  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  8040  002EDE  D002               	goto	l6314
  8041                           
  8042                           ; BSR set to: 0
  8043  002EE0  0100               	movlb	0	; () banked
  8044  002EE2  81A2               	bsf	___flmul@bexp& (0+255),0,b
  8045  002EE4                     l6314:
  8046                           
  8047                           ; BSR set to: 0
  8048  002EE4  0100               	movlb	0	; () banked
  8049  002EE6  51A2               	movf	___flmul@bexp& (0+255),w,b
  8050  002EE8  0100               	movlb	0	; () banked
  8051  002EEA  B4D8               	btfsc	status,2,c
  8052  002EEC  D010               	goto	l6322
  8053                           
  8054                           ; BSR set to: 0
  8055  002EEE  0100               	movlb	0	; () banked
  8056  002EF0  29A2               	incf	___flmul@bexp& (0+255),w,b
  8057  002EF2  A4D8               	btfss	status,2,c
  8058  002EF4  D009               	goto	l6320
  8059                           
  8060                           ; BSR set to: 0
  8061  002EF6  0E00               	movlw	0
  8062  002EF8  0100               	movlb	0	; () banked
  8063  002EFA  6F90               	movwf	___flmul@b& (0+255),b
  8064  002EFC  0E00               	movlw	0
  8065  002EFE  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8066  002F00  0E00               	movlw	0
  8067  002F02  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8068  002F04  0E00               	movlw	0
  8069  002F06  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8070  002F08                     l6320:
  8071                           
  8072                           ; BSR set to: 0
  8073  002F08  0100               	movlb	0	; () banked
  8074  002F0A  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  8075  002F0C  D009               	goto	l6324
  8076  002F0E                     l6322:
  8077                           
  8078                           ; BSR set to: 0
  8079  002F0E  0E00               	movlw	0
  8080  002F10  0100               	movlb	0	; () banked
  8081  002F12  6F90               	movwf	___flmul@b& (0+255),b
  8082  002F14  0E00               	movlw	0
  8083  002F16  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8084  002F18  0E00               	movlw	0
  8085  002F1A  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8086  002F1C  0E00               	movlw	0
  8087  002F1E  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8088  002F20                     l6324:
  8089                           
  8090                           ; BSR set to: 0
  8091  002F20  0100               	movlb	0	; () banked
  8092  002F22  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8093  002F24  0B80               	andlw	128
  8094  002F26  0100               	movlb	0	; () banked
  8095  002F28  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  8096                           
  8097                           ; BSR set to: 0
  8098  002F2A  0100               	movlb	0	; () banked
  8099  002F2C  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8100  002F2E  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  8101  002F30  0100               	movlb	0	; () banked
  8102  002F32  6F9D               	movwf	___flmul@aexp& (0+255),b
  8103                           
  8104                           ; BSR set to: 0
  8105  002F34  0100               	movlb	0	; () banked
  8106  002F36  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  8107  002F38  D002               	goto	l6332
  8108                           
  8109                           ; BSR set to: 0
  8110  002F3A  0100               	movlb	0	; () banked
  8111  002F3C  819D               	bsf	___flmul@aexp& (0+255),0,b
  8112  002F3E                     l6332:
  8113                           
  8114                           ; BSR set to: 0
  8115  002F3E  0100               	movlb	0	; () banked
  8116  002F40  519D               	movf	___flmul@aexp& (0+255),w,b
  8117  002F42  0100               	movlb	0	; () banked
  8118  002F44  B4D8               	btfsc	status,2,c
  8119  002F46  D010               	goto	l6340
  8120                           
  8121                           ; BSR set to: 0
  8122  002F48  0100               	movlb	0	; () banked
  8123  002F4A  299D               	incf	___flmul@aexp& (0+255),w,b
  8124  002F4C  A4D8               	btfss	status,2,c
  8125  002F4E  D009               	goto	l6338
  8126                           
  8127                           ; BSR set to: 0
  8128  002F50  0E00               	movlw	0
  8129  002F52  0100               	movlb	0	; () banked
  8130  002F54  6F94               	movwf	___flmul@a& (0+255),b
  8131  002F56  0E00               	movlw	0
  8132  002F58  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8133  002F5A  0E00               	movlw	0
  8134  002F5C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8135  002F5E  0E00               	movlw	0
  8136  002F60  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8137  002F62                     l6338:
  8138                           
  8139                           ; BSR set to: 0
  8140  002F62  0100               	movlb	0	; () banked
  8141  002F64  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  8142  002F66  D009               	goto	l1397
  8143  002F68                     l6340:
  8144                           
  8145                           ; BSR set to: 0
  8146  002F68  0E00               	movlw	0
  8147  002F6A  0100               	movlb	0	; () banked
  8148  002F6C  6F94               	movwf	___flmul@a& (0+255),b
  8149  002F6E  0E00               	movlw	0
  8150  002F70  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8151  002F72  0E00               	movlw	0
  8152  002F74  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8153  002F76  0E00               	movlw	0
  8154  002F78  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8155  002F7A                     l1397:
  8156                           
  8157                           ; BSR set to: 0
  8158  002F7A  0100               	movlb	0	; () banked
  8159  002F7C  519D               	movf	___flmul@aexp& (0+255),w,b
  8160  002F7E  0100               	movlb	0	; () banked
  8161  002F80  B4D8               	btfsc	status,2,c
  8162  002F82  D005               	goto	l6344
  8163                           
  8164                           ; BSR set to: 0
  8165  002F84  0100               	movlb	0	; () banked
  8166  002F86  51A2               	movf	___flmul@bexp& (0+255),w,b
  8167  002F88  0100               	movlb	0	; () banked
  8168  002F8A  A4D8               	btfss	status,2,c
  8169  002F8C  D00A               	goto	l6348
  8170  002F8E                     l6344:
  8171                           
  8172                           ; BSR set to: 0
  8173  002F8E  0E00               	movlw	0
  8174  002F90  0100               	movlb	0	; () banked
  8175  002F92  6F90               	movwf	?___flmul& (0+255),b
  8176  002F94  0E00               	movlw	0
  8177  002F96  6F91               	movwf	(?___flmul+1)& (0+255),b
  8178  002F98  0E00               	movlw	0
  8179  002F9A  6F92               	movwf	(?___flmul+2)& (0+255),b
  8180  002F9C  0E00               	movlw	0
  8181  002F9E  6F93               	movwf	(?___flmul+3)& (0+255),b
  8182                           
  8183                           ; BSR set to: 0
  8184  002FA0  0012               	return	
  8185  002FA2                     l6348:
  8186                           
  8187                           ; BSR set to: 0
  8188  002FA2  0100               	movlb	0	; () banked
  8189  002FA4  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8190  002FA6  0100               	movlb	0	; () banked
  8191  002FA8  0390               	mulwf	___flmul@b& (0+255),b
  8192  002FAA  CFF3 F0A7          	movff	prodl,___flmul@temp
  8193  002FAE  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8194                           
  8195                           ; BSR set to: 0
  8196  002FB2  0100               	movlb	0	; () banked
  8197  002FB4  51A7               	movf	___flmul@temp& (0+255),w,b
  8198  002FB6  0100               	movlb	0	; () banked
  8199  002FB8  6F9E               	movwf	___flmul@grs& (0+255),b
  8200  002FBA  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  8201  002FBC  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  8202  002FBE  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  8203                           
  8204                           ; BSR set to: 0
  8205  002FC0  0100               	movlb	0	; () banked
  8206  002FC2  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8207  002FC4  0100               	movlb	0	; () banked
  8208  002FC6  6FA3               	movwf	___flmul@prod& (0+255),b
  8209  002FC8  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  8210  002FCA  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  8211  002FCC  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  8212  002FCE  0100               	movlb	0	; () banked
  8213  002FD0  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8214  002FD2  0100               	movlb	0	; () banked
  8215  002FD4  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8216  002FD6  CFF3 F0A7          	movff	prodl,___flmul@temp
  8217  002FDA  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8218                           
  8219                           ; BSR set to: 0
  8220  002FDE  0100               	movlb	0	; () banked
  8221  002FE0  51A7               	movf	___flmul@temp& (0+255),w,b
  8222  002FE2  0100               	movlb	0	; () banked
  8223  002FE4  279E               	addwf	___flmul@grs& (0+255),f,b
  8224  002FE6  0E00               	movlw	0
  8225  002FE8  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8226  002FEA  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8227  002FEC  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8228                           
  8229                           ; BSR set to: 0
  8230  002FEE  0100               	movlb	0	; () banked
  8231  002FF0  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8232  002FF2  0100               	movlb	0	; () banked
  8233  002FF4  27A3               	addwf	___flmul@prod& (0+255),f,b
  8234  002FF6  0E00               	movlw	0
  8235  002FF8  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8236  002FFA  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8237  002FFC  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8238  002FFE  0100               	movlb	0	; () banked
  8239  003000  5194               	movf	___flmul@a& (0+255),w,b
  8240  003002  0100               	movlb	0	; () banked
  8241  003004  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8242  003006  CFF3 F0A7          	movff	prodl,___flmul@temp
  8243  00300A  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8244                           
  8245                           ; BSR set to: 0
  8246  00300E  0100               	movlb	0	; () banked
  8247  003010  51A7               	movf	___flmul@temp& (0+255),w,b
  8248  003012  0100               	movlb	0	; () banked
  8249  003014  279E               	addwf	___flmul@grs& (0+255),f,b
  8250  003016  0E00               	movlw	0
  8251  003018  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8252  00301A  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8253  00301C  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8254                           
  8255                           ; BSR set to: 0
  8256  00301E  0100               	movlb	0	; () banked
  8257  003020  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8258  003022  0100               	movlb	0	; () banked
  8259  003024  27A3               	addwf	___flmul@prod& (0+255),f,b
  8260  003026  0E00               	movlw	0
  8261  003028  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8262  00302A  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8263  00302C  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8264                           
  8265                           ; BSR set to: 0
  8266  00302E  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8267  003032  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8268  003036  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8269  00303A  0100               	movlb	0	; () banked
  8270  00303C  6B9E               	clrf	___flmul@grs& (0+255),b
  8271                           
  8272                           ; BSR set to: 0
  8273  00303E  0100               	movlb	0	; () banked
  8274  003040  5194               	movf	___flmul@a& (0+255),w,b
  8275  003042  0100               	movlb	0	; () banked
  8276  003044  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8277  003046  CFF3 F0A7          	movff	prodl,___flmul@temp
  8278  00304A  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8279                           
  8280                           ; BSR set to: 0
  8281  00304E  0100               	movlb	0	; () banked
  8282  003050  51A7               	movf	___flmul@temp& (0+255),w,b
  8283  003052  0100               	movlb	0	; () banked
  8284  003054  279E               	addwf	___flmul@grs& (0+255),f,b
  8285  003056  0100               	movlb	0	; () banked
  8286  003058  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8287  00305A  0100               	movlb	0	; () banked
  8288  00305C  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8289  00305E  0E00               	movlw	0
  8290  003060  0100               	movlb	0	; () banked
  8291  003062  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8292  003064  0E00               	movlw	0
  8293  003066  0100               	movlb	0	; () banked
  8294  003068  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8295                           
  8296                           ; BSR set to: 0
  8297  00306A  0100               	movlb	0	; () banked
  8298  00306C  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8299  00306E  0100               	movlb	0	; () banked
  8300  003070  0390               	mulwf	___flmul@b& (0+255),b
  8301  003072  CFF3 F0A7          	movff	prodl,___flmul@temp
  8302  003076  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8303                           
  8304                           ; BSR set to: 0
  8305  00307A  0100               	movlb	0	; () banked
  8306  00307C  51A7               	movf	___flmul@temp& (0+255),w,b
  8307  00307E  0100               	movlb	0	; () banked
  8308  003080  279E               	addwf	___flmul@grs& (0+255),f,b
  8309  003082  0100               	movlb	0	; () banked
  8310  003084  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8311  003086  0100               	movlb	0	; () banked
  8312  003088  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8313  00308A  0E00               	movlw	0
  8314  00308C  0100               	movlb	0	; () banked
  8315  00308E  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8316  003090  0E00               	movlw	0
  8317  003092  0100               	movlb	0	; () banked
  8318  003094  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8319                           
  8320                           ; BSR set to: 0
  8321  003096  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8322  00309A  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8323  00309E  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8324  0030A2  0100               	movlb	0	; () banked
  8325  0030A4  6B9E               	clrf	___flmul@grs& (0+255),b
  8326  0030A6  0100               	movlb	0	; () banked
  8327  0030A8  5194               	movf	___flmul@a& (0+255),w,b
  8328  0030AA  0100               	movlb	0	; () banked
  8329  0030AC  0390               	mulwf	___flmul@b& (0+255),b
  8330  0030AE  CFF3 F0A7          	movff	prodl,___flmul@temp
  8331  0030B2  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8332                           
  8333                           ; BSR set to: 0
  8334  0030B6  0100               	movlb	0	; () banked
  8335  0030B8  51A7               	movf	___flmul@temp& (0+255),w,b
  8336  0030BA  0100               	movlb	0	; () banked
  8337  0030BC  279E               	addwf	___flmul@grs& (0+255),f,b
  8338  0030BE  0100               	movlb	0	; () banked
  8339  0030C0  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8340  0030C2  0100               	movlb	0	; () banked
  8341  0030C4  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8342  0030C6  0E00               	movlw	0
  8343  0030C8  0100               	movlb	0	; () banked
  8344  0030CA  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8345  0030CC  0E00               	movlw	0
  8346  0030CE  0100               	movlb	0	; () banked
  8347  0030D0  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8348                           
  8349                           ; BSR set to: 0
  8350  0030D2  0100               	movlb	0	; () banked
  8351  0030D4  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8352  0030D6  0100               	movlb	0	; () banked
  8353  0030D8  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8354  0030DA  CFF3 F0A7          	movff	prodl,___flmul@temp
  8355  0030DE  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8356  0030E2  0100               	movlb	0	; () banked
  8357  0030E4  51A7               	movf	___flmul@temp& (0+255),w,b
  8358  0030E6  0100               	movlb	0	; () banked
  8359  0030E8  27A3               	addwf	___flmul@prod& (0+255),f,b
  8360  0030EA  0100               	movlb	0	; () banked
  8361  0030EC  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8362  0030EE  0100               	movlb	0	; () banked
  8363  0030F0  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8364  0030F2  0E00               	movlw	0
  8365  0030F4  0100               	movlb	0	; () banked
  8366  0030F6  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8367  0030F8  0E00               	movlw	0
  8368  0030FA  0100               	movlb	0	; () banked
  8369  0030FC  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8370                           
  8371                           ; BSR set to: 0
  8372  0030FE  0100               	movlb	0	; () banked
  8373  003100  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8374  003102  0100               	movlb	0	; () banked
  8375  003104  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8376  003106  CFF3 F0A7          	movff	prodl,___flmul@temp
  8377  00310A  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8378                           
  8379                           ; BSR set to: 0
  8380  00310E  0100               	movlb	0	; () banked
  8381  003110  51A7               	movf	___flmul@temp& (0+255),w,b
  8382  003112  0100               	movlb	0	; () banked
  8383  003114  27A3               	addwf	___flmul@prod& (0+255),f,b
  8384  003116  0100               	movlb	0	; () banked
  8385  003118  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8386  00311A  0100               	movlb	0	; () banked
  8387  00311C  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8388  00311E  0E00               	movlw	0
  8389  003120  0100               	movlb	0	; () banked
  8390  003122  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8391  003124  0E00               	movlw	0
  8392  003126  0100               	movlb	0	; () banked
  8393  003128  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8394  00312A  0100               	movlb	0	; () banked
  8395  00312C  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8396  00312E  0100               	movlb	0	; () banked
  8397  003130  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8398  003132  CFF3 F0A7          	movff	prodl,___flmul@temp
  8399  003136  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8400                           
  8401                           ; BSR set to: 0
  8402  00313A  0100               	movlb	0	; () banked
  8403  00313C  51A7               	movf	___flmul@temp& (0+255),w,b
  8404  00313E  0100               	movlb	0	; () banked
  8405  003140  6F98               	movwf	??___flmul& (0+255),b
  8406  003142  0100               	movlb	0	; () banked
  8407  003144  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8408  003146  0100               	movlb	0	; () banked
  8409  003148  6F99               	movwf	(??___flmul+1)& (0+255),b
  8410  00314A  0100               	movlb	0	; () banked
  8411  00314C  6B9A               	clrf	(??___flmul+2)& (0+255),b
  8412  00314E  0100               	movlb	0	; () banked
  8413  003150  6B9B               	clrf	(??___flmul+3)& (0+255),b
  8414  003152  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  8415  003156  C099  F09A         	movff	??___flmul+1,??___flmul+2
  8416  00315A  C098  F099         	movff	??___flmul,??___flmul+1
  8417  00315E  0100               	movlb	0	; () banked
  8418  003160  6B98               	clrf	??___flmul& (0+255),b
  8419  003162  0100               	movlb	0	; () banked
  8420  003164  5198               	movf	??___flmul& (0+255),w,b
  8421  003166  0100               	movlb	0	; () banked
  8422  003168  27A3               	addwf	___flmul@prod& (0+255),f,b
  8423  00316A  0100               	movlb	0	; () banked
  8424  00316C  5199               	movf	(??___flmul+1)& (0+255),w,b
  8425  00316E  0100               	movlb	0	; () banked
  8426  003170  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8427  003172  0100               	movlb	0	; () banked
  8428  003174  519A               	movf	(??___flmul+2)& (0+255),w,b
  8429  003176  0100               	movlb	0	; () banked
  8430  003178  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8431  00317A  0100               	movlb	0	; () banked
  8432  00317C  519B               	movf	(??___flmul+3)& (0+255),w,b
  8433  00317E  0100               	movlb	0	; () banked
  8434  003180  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8435                           
  8436                           ; BSR set to: 0
  8437  003182  C09E  F098         	movff	___flmul@grs,??___flmul
  8438  003186  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  8439  00318A  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  8440  00318E  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  8441  003192  0E19               	movlw	25
  8442  003194  D006               	goto	u7840
  8443  003196                     u7845:
  8444  003196  0100               	movlb	0	; () banked
  8445  003198  90D8               	bcf	status,0,c
  8446  00319A  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8447  00319C  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8448  00319E  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8449  0031A0  3398               	rrcf	??___flmul& (0+255),f,b
  8450  0031A2                     u7840:
  8451  0031A2  2EE8               	decfsz	wreg,f,c
  8452  0031A4  D7F8               	goto	u7845
  8453  0031A6  0100               	movlb	0	; () banked
  8454  0031A8  5198               	movf	??___flmul& (0+255),w,b
  8455  0031AA  0100               	movlb	0	; () banked
  8456  0031AC  27A3               	addwf	___flmul@prod& (0+255),f,b
  8457  0031AE  0100               	movlb	0	; () banked
  8458  0031B0  5199               	movf	(??___flmul+1)& (0+255),w,b
  8459  0031B2  0100               	movlb	0	; () banked
  8460  0031B4  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8461  0031B6  0100               	movlb	0	; () banked
  8462  0031B8  519A               	movf	(??___flmul+2)& (0+255),w,b
  8463  0031BA  0100               	movlb	0	; () banked
  8464  0031BC  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8465  0031BE  0100               	movlb	0	; () banked
  8466  0031C0  519B               	movf	(??___flmul+3)& (0+255),w,b
  8467  0031C2  0100               	movlb	0	; () banked
  8468  0031C4  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8469                           
  8470                           ; BSR set to: 0
  8471  0031C6  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8472  0031CA  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8473  0031CE  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8474  0031D2  0100               	movlb	0	; () banked
  8475  0031D4  6B9E               	clrf	___flmul@grs& (0+255),b
  8476                           
  8477                           ; BSR set to: 0
  8478  0031D6  0100               	movlb	0	; () banked
  8479  0031D8  519D               	movf	___flmul@aexp& (0+255),w,b
  8480  0031DA  C0A2  F098         	movff	___flmul@bexp,??___flmul
  8481  0031DE  0100               	movlb	0	; () banked
  8482  0031E0  6B99               	clrf	(??___flmul+1)& (0+255),b
  8483  0031E2  0100               	movlb	0	; () banked
  8484  0031E4  2798               	addwf	??___flmul& (0+255),f,b
  8485  0031E6  0E00               	movlw	0
  8486  0031E8  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  8487  0031EA  0E82               	movlw	130
  8488  0031EC  0100               	movlb	0	; () banked
  8489  0031EE  2598               	addwf	??___flmul& (0+255),w,b
  8490  0031F0  0100               	movlb	0	; () banked
  8491  0031F2  6FA7               	movwf	___flmul@temp& (0+255),b
  8492  0031F4  0EFF               	movlw	255
  8493  0031F6  0100               	movlb	0	; () banked
  8494  0031F8  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  8495  0031FA  0100               	movlb	0	; () banked
  8496  0031FC  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  8497  0031FE  D015               	goto	l6396
  8498  003200                     l6390:
  8499                           
  8500                           ; BSR set to: 0
  8501  003200  0100               	movlb	0	; () banked
  8502  003202  90D8               	bcf	status,0,c
  8503  003204  37A3               	rlcf	___flmul@prod& (0+255),f,b
  8504  003206  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8505  003208  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8506  00320A  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8507                           
  8508                           ; BSR set to: 0
  8509  00320C  0100               	movlb	0	; () banked
  8510  00320E  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8511  003210  D002               	goto	l1404
  8512                           
  8513                           ; BSR set to: 0
  8514  003212  0100               	movlb	0	; () banked
  8515  003214  81A3               	bsf	___flmul@prod& (0+255),0,b
  8516  003216                     l1404:
  8517                           
  8518                           ; BSR set to: 0
  8519  003216  0100               	movlb	0	; () banked
  8520  003218  90D8               	bcf	status,0,c
  8521  00321A  379E               	rlcf	___flmul@grs& (0+255),f,b
  8522  00321C  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8523  00321E  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8524  003220  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8525  003222  0100               	movlb	0	; () banked
  8526  003224  07A7               	decf	___flmul@temp& (0+255),f,b
  8527  003226  A0D8               	btfss	status,0,c
  8528  003228  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  8529  00322A                     l6396:
  8530                           
  8531                           ; BSR set to: 0
  8532  00322A  0100               	movlb	0	; () banked
  8533  00322C  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  8534  00322E  D7E8               	goto	l6390
  8535                           
  8536                           ; BSR set to: 0
  8537                           
  8538                           ; BSR set to: 0
  8539  003230  0E00               	movlw	0
  8540  003232  0100               	movlb	0	; () banked
  8541  003234  6F9D               	movwf	___flmul@aexp& (0+255),b
  8542                           
  8543                           ; BSR set to: 0
  8544  003236  0100               	movlb	0	; () banked
  8545  003238  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8546  00323A  D024               	goto	l1406
  8547                           
  8548                           ; BSR set to: 0
  8549  00323C  0EFF               	movlw	255
  8550  00323E  0100               	movlb	0	; () banked
  8551  003240  159E               	andwf	___flmul@grs& (0+255),w,b
  8552  003242  0100               	movlb	0	; () banked
  8553  003244  6F98               	movwf	??___flmul& (0+255),b
  8554  003246  0EFF               	movlw	255
  8555  003248  0100               	movlb	0	; () banked
  8556  00324A  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  8557  00324C  0100               	movlb	0	; () banked
  8558  00324E  6F99               	movwf	(??___flmul+1)& (0+255),b
  8559  003250  0EFF               	movlw	255
  8560  003252  0100               	movlb	0	; () banked
  8561  003254  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  8562  003256  0100               	movlb	0	; () banked
  8563  003258  6F9A               	movwf	(??___flmul+2)& (0+255),b
  8564  00325A  0E7F               	movlw	127
  8565  00325C  0100               	movlb	0	; () banked
  8566  00325E  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  8567  003260  0100               	movlb	0	; () banked
  8568  003262  6F9B               	movwf	(??___flmul+3)& (0+255),b
  8569  003264  0100               	movlb	0	; () banked
  8570  003266  5198               	movf	??___flmul& (0+255),w,b
  8571  003268  0100               	movlb	0	; () banked
  8572  00326A  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  8573  00326C  0100               	movlb	0	; () banked
  8574  00326E  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  8575  003270  0100               	movlb	0	; () banked
  8576  003272  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  8577  003274  A4D8               	btfss	status,2,c
  8578  003276  D003               	goto	l6406
  8579                           
  8580                           ; BSR set to: 0
  8581                           
  8582                           ; BSR set to: 0
  8583  003278  0100               	movlb	0	; () banked
  8584  00327A  A1A3               	btfss	___flmul@prod& (0+255),0,b
  8585  00327C  D003               	goto	l1406
  8586  00327E                     l6406:
  8587                           
  8588                           ; BSR set to: 0
  8589  00327E  0E01               	movlw	1
  8590  003280  0100               	movlb	0	; () banked
  8591  003282  6F9D               	movwf	___flmul@aexp& (0+255),b
  8592  003284                     l1406:
  8593                           
  8594                           ; BSR set to: 0
  8595  003284  0100               	movlb	0	; () banked
  8596  003286  519D               	movf	___flmul@aexp& (0+255),w,b
  8597  003288  0100               	movlb	0	; () banked
  8598  00328A  B4D8               	btfsc	status,2,c
  8599  00328C  D023               	goto	l6416
  8600                           
  8601                           ; BSR set to: 0
  8602  00328E  0E01               	movlw	1
  8603  003290  0100               	movlb	0	; () banked
  8604  003292  27A3               	addwf	___flmul@prod& (0+255),f,b
  8605  003294  0E00               	movlw	0
  8606  003296  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8607  003298  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8608  00329A  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8609                           
  8610                           ; BSR set to: 0
  8611  00329C  0100               	movlb	0	; () banked
  8612  00329E  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  8613  0032A0  D019               	goto	l6416
  8614                           
  8615                           ; BSR set to: 0
  8616  0032A2  C0A3  F098         	movff	___flmul@prod,??___flmul
  8617  0032A6  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  8618  0032AA  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  8619  0032AE  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  8620  0032B2  0100               	movlb	0	; () banked
  8621  0032B4  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  8622  0032B6  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8623  0032B8  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8624  0032BA  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8625  0032BC  3398               	rrcf	??___flmul& (0+255),f,b
  8626  0032BE  C098  F0A3         	movff	??___flmul,___flmul@prod
  8627  0032C2  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  8628  0032C6  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  8629  0032CA  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  8630                           
  8631                           ; BSR set to: 0
  8632  0032CE  0100               	movlb	0	; () banked
  8633  0032D0  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  8634  0032D2  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  8635  0032D4                     l6416:
  8636                           
  8637                           ; BSR set to: 0
  8638  0032D4  0100               	movlb	0	; () banked
  8639  0032D6  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8640  0032D8  D010               	goto	l6420
  8641  0032DA  0100               	movlb	0	; () banked
  8642  0032DC  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8643  0032DE  E104               	bnz	u7920
  8644  0032E0  0100               	movlb	0	; () banked
  8645  0032E2  29A7               	incf	___flmul@temp& (0+255),w,b
  8646  0032E4  A0D8               	btfss	status,0,c
  8647  0032E6  D009               	goto	l6420
  8648  0032E8                     u7920:
  8649                           
  8650                           ; BSR set to: 0
  8651  0032E8  0E00               	movlw	0
  8652  0032EA  0100               	movlb	0	; () banked
  8653  0032EC  6FA3               	movwf	___flmul@prod& (0+255),b
  8654  0032EE  0E00               	movlw	0
  8655  0032F0  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8656  0032F2  0E80               	movlw	128
  8657  0032F4  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8658  0032F6  0E7F               	movlw	127
  8659  0032F8  D02B               	goto	L2
  8660  0032FA                     l6420:
  8661                           
  8662                           ; BSR set to: 0
  8663  0032FA  0100               	movlb	0	; () banked
  8664  0032FC  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8665  0032FE  D007               	goto	l6422
  8666  003300  0100               	movlb	0	; () banked
  8667  003302  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8668  003304  E111               	bnz	l1414
  8669  003306  0100               	movlb	0	; () banked
  8670  003308  05A7               	decf	___flmul@temp& (0+255),w,b
  8671  00330A  B0D8               	btfsc	status,0,c
  8672  00330C  D00D               	goto	l1414
  8673  00330E                     l6422:
  8674                           
  8675                           ; BSR set to: 0
  8676  00330E  0E00               	movlw	0
  8677  003310  0100               	movlb	0	; () banked
  8678  003312  6FA3               	movwf	___flmul@prod& (0+255),b
  8679  003314  0E00               	movlw	0
  8680  003316  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8681  003318  0E00               	movlw	0
  8682  00331A  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8683  00331C  0E00               	movlw	0
  8684  00331E  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8685  003320  0E00               	movlw	0
  8686  003322  0100               	movlb	0	; () banked
  8687  003324  6F9C               	movwf	___flmul@sign& (0+255),b
  8688  003326  D015               	goto	l6432
  8689  003328                     l1414:
  8690                           
  8691                           ; BSR set to: 0
  8692  003328  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  8693                           
  8694                           ; BSR set to: 0
  8695  00332C  0EFF               	movlw	255
  8696  00332E  0100               	movlb	0	; () banked
  8697  003330  17A3               	andwf	___flmul@prod& (0+255),f,b
  8698  003332  0EFF               	movlw	255
  8699  003334  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  8700  003336  0E7F               	movlw	127
  8701  003338  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  8702  00333A  0E00               	movlw	0
  8703  00333C  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  8704                           
  8705                           ; BSR set to: 0
  8706  00333E  0100               	movlb	0	; () banked
  8707  003340  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  8708  003342  D002               	goto	l6430
  8709                           
  8710                           ; BSR set to: 0
  8711  003344  0100               	movlb	0	; () banked
  8712  003346  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  8713  003348                     l6430:
  8714                           
  8715                           ; BSR set to: 0
  8716  003348  0100               	movlb	0	; () banked
  8717  00334A  90D8               	bcf	status,0,c
  8718  00334C  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  8719  00334E  0100               	movlb	0	; () banked
  8720  003350                     L2:
  8721  003350  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8722  003352                     l6432:
  8723                           
  8724                           ; BSR set to: 0
  8725  003352  0100               	movlb	0	; () banked
  8726  003354  519C               	movf	___flmul@sign& (0+255),w,b
  8727  003356  0100               	movlb	0	; () banked
  8728  003358  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8729                           
  8730                           ; BSR set to: 0
  8731  00335A  C0A3  F090         	movff	___flmul@prod,?___flmul
  8732  00335E  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  8733  003362  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  8734  003366  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  8735  00336A  0012               	return	
  8736  00336C                     __end_of___flmul:
  8737                           	opt stack 0
  8738                           tblptru	equ	0xFF8
  8739                           tblptrh	equ	0xFF7
  8740                           tblptrl	equ	0xFF6
  8741                           tablat	equ	0xFF5
  8742                           prodh	equ	0xFF4
  8743                           prodl	equ	0xFF3
  8744                           postinc0	equ	0xFEE
  8745                           wreg	equ	0xFE8
  8746                           postdec1	equ	0xFE5
  8747                           fsr1l	equ	0xFE1
  8748                           indf2	equ	0xFDF
  8749                           postinc2	equ	0xFDE
  8750                           postdec2	equ	0xFDD
  8751                           fsr2h	equ	0xFDA
  8752                           fsr2l	equ	0xFD9
  8753                           status	equ	0xFD8
  8754                           
  8755 ;; *************** function ___fladd *****************
  8756 ;; Defined at:
  8757 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;  b               4   77[BANK0 ] unsigned char 
  8760 ;;  a               4   81[BANK0 ] unsigned char 
  8761 ;; Auto vars:     Size  Location     Type
  8762 ;;  grs             1   96[BANK0 ] unsigned char 
  8763 ;;  bexp            1   95[BANK0 ] unsigned char 
  8764 ;;  aexp            1   94[BANK0 ] unsigned char 
  8765 ;;  signs           1   93[BANK0 ] unsigned char 
  8766 ;; Return value:  Size  Location     Type
  8767 ;;                  4   77[BANK0 ] unsigned char 
  8768 ;; Registers used:
  8769 ;;		wreg, status,2, status,0
  8770 ;; Tracked objects:
  8771 ;;		On entry : 0/0
  8772 ;;		On exit  : 0/0
  8773 ;;		Unchanged: 0/0
  8774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8775 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8776 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8777 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8778 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8779 ;;Total ram usage:       20 bytes
  8780 ;; Hardware stack levels used:    1
  8781 ;; Hardware stack levels required when called:    4
  8782 ;; This function calls:
  8783 ;;		Nothing
  8784 ;; This function is called by:
  8785 ;;		_park_routine
  8786 ;;		_parallelo
  8787 ;;		_matematica
  8788 ;;		_asin
  8789 ;;		_atan
  8790 ;;		_cos
  8791 ;;		_eval_poly
  8792 ;;		_sin
  8793 ;;		___flsub
  8794 ;;		_floor
  8795 ;; This function uses a non-reentrant model
  8796 ;;
  8797                           
  8798                           	psect	text23
  8799  002A1E                     __ptext23:
  8800                           	opt stack 0
  8801  002A1E                     ___fladd:
  8802                           	opt stack 21
  8803                           
  8804                           ; BSR set to: 0
  8805                           ;incstack = 0
  8806  002A1E  0100               	movlb	0	; () banked
  8807  002A20  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  8808  002A22  0B80               	andlw	128
  8809  002A24  0100               	movlb	0	; () banked
  8810  002A26  6FBD               	movwf	___fladd@signs& (0+255),b
  8811  002A28  0100               	movlb	0	; () banked
  8812  002A2A  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  8813  002A2C  25B0               	addwf	(___fladd@b+3)& (0+255),w,b
  8814  002A2E  0100               	movlb	0	; () banked
  8815  002A30  6FBF               	movwf	___fladd@bexp& (0+255),b
  8816                           
  8817                           ; BSR set to: 0
  8818  002A32  0100               	movlb	0	; () banked
  8819  002A34  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  8820  002A36  D002               	goto	l6112
  8821                           
  8822                           ; BSR set to: 0
  8823  002A38  0100               	movlb	0	; () banked
  8824  002A3A  81BF               	bsf	___fladd@bexp& (0+255),0,b
  8825  002A3C                     l6112:
  8826                           
  8827                           ; BSR set to: 0
  8828  002A3C  0100               	movlb	0	; () banked
  8829  002A3E  51BF               	movf	___fladd@bexp& (0+255),w,b
  8830  002A40  0100               	movlb	0	; () banked
  8831  002A42  B4D8               	btfsc	status,2,c
  8832  002A44  D012               	goto	l6122
  8833                           
  8834                           ; BSR set to: 0
  8835  002A46  0100               	movlb	0	; () banked
  8836  002A48  29BF               	incf	___fladd@bexp& (0+255),w,b
  8837  002A4A  A4D8               	btfss	status,2,c
  8838  002A4C  D009               	goto	l6118
  8839                           
  8840                           ; BSR set to: 0
  8841  002A4E  0E00               	movlw	0
  8842  002A50  0100               	movlb	0	; () banked
  8843  002A52  6FAD               	movwf	___fladd@b& (0+255),b
  8844  002A54  0E00               	movlw	0
  8845  002A56  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  8846  002A58  0E00               	movlw	0
  8847  002A5A  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  8848  002A5C  0E00               	movlw	0
  8849  002A5E  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  8850  002A60                     l6118:
  8851                           
  8852                           ; BSR set to: 0
  8853  002A60  0100               	movlb	0	; () banked
  8854  002A62  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  8855                           
  8856                           ; BSR set to: 0
  8857  002A64  0E00               	movlw	0
  8858  002A66  0100               	movlb	0	; () banked
  8859  002A68  D008               	goto	L3
  8860  002A6A                     l6122:
  8861                           
  8862                           ; BSR set to: 0
  8863  002A6A  0E00               	movlw	0
  8864  002A6C  0100               	movlb	0	; () banked
  8865  002A6E  6FAD               	movwf	___fladd@b& (0+255),b
  8866  002A70  0E00               	movlw	0
  8867  002A72  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  8868  002A74  0E00               	movlw	0
  8869  002A76  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  8870  002A78  0E00               	movlw	0
  8871  002A7A                     L3:
  8872  002A7A  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  8873                           
  8874                           ; BSR set to: 0
  8875                           
  8876                           ; BSR set to: 0
  8877  002A7C  0100               	movlb	0	; () banked
  8878  002A7E  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  8879  002A80  0B80               	andlw	128
  8880  002A82  0100               	movlb	0	; () banked
  8881  002A84  6FBE               	movwf	___fladd@aexp& (0+255),b
  8882                           
  8883                           ; BSR set to: 0
  8884  002A86  0100               	movlb	0	; () banked
  8885  002A88  51BD               	movf	___fladd@signs& (0+255),w,b
  8886  002A8A  0100               	movlb	0	; () banked
  8887  002A8C  19BE               	xorwf	___fladd@aexp& (0+255),w,b
  8888  002A8E  B4D8               	btfsc	status,2,c
  8889  002A90  D002               	goto	l6130
  8890                           
  8891                           ; BSR set to: 0
  8892  002A92  0100               	movlb	0	; () banked
  8893  002A94  8DBD               	bsf	___fladd@signs& (0+255),6,b
  8894  002A96                     l6130:
  8895                           
  8896                           ; BSR set to: 0
  8897  002A96  0100               	movlb	0	; () banked
  8898  002A98  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  8899  002A9A  25B4               	addwf	(___fladd@a+3)& (0+255),w,b
  8900  002A9C  0100               	movlb	0	; () banked
  8901  002A9E  6FBE               	movwf	___fladd@aexp& (0+255),b
  8902                           
  8903                           ; BSR set to: 0
  8904  002AA0  0100               	movlb	0	; () banked
  8905  002AA2  AFB3               	btfss	(___fladd@a+2)& (0+255),7,b
  8906  002AA4  D002               	goto	l6136
  8907                           
  8908                           ; BSR set to: 0
  8909  002AA6  0100               	movlb	0	; () banked
  8910  002AA8  81BE               	bsf	___fladd@aexp& (0+255),0,b
  8911  002AAA                     l6136:
  8912                           
  8913                           ; BSR set to: 0
  8914  002AAA  0100               	movlb	0	; () banked
  8915  002AAC  51BE               	movf	___fladd@aexp& (0+255),w,b
  8916  002AAE  0100               	movlb	0	; () banked
  8917  002AB0  B4D8               	btfsc	status,2,c
  8918  002AB2  D012               	goto	l6146
  8919                           
  8920                           ; BSR set to: 0
  8921  002AB4  0100               	movlb	0	; () banked
  8922  002AB6  29BE               	incf	___fladd@aexp& (0+255),w,b
  8923  002AB8  A4D8               	btfss	status,2,c
  8924  002ABA  D009               	goto	l6142
  8925                           
  8926                           ; BSR set to: 0
  8927  002ABC  0E00               	movlw	0
  8928  002ABE  0100               	movlb	0	; () banked
  8929  002AC0  6FB1               	movwf	___fladd@a& (0+255),b
  8930  002AC2  0E00               	movlw	0
  8931  002AC4  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  8932  002AC6  0E00               	movlw	0
  8933  002AC8  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  8934  002ACA  0E00               	movlw	0
  8935  002ACC  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  8936  002ACE                     l6142:
  8937                           
  8938                           ; BSR set to: 0
  8939  002ACE  0100               	movlb	0	; () banked
  8940  002AD0  8FB3               	bsf	(___fladd@a+2)& (0+255),7,b
  8941                           
  8942                           ; BSR set to: 0
  8943  002AD2  0E00               	movlw	0
  8944  002AD4  0100               	movlb	0	; () banked
  8945  002AD6  D008               	goto	L4
  8946  002AD8                     l6146:
  8947                           
  8948                           ; BSR set to: 0
  8949  002AD8  0E00               	movlw	0
  8950  002ADA  0100               	movlb	0	; () banked
  8951  002ADC  6FB1               	movwf	___fladd@a& (0+255),b
  8952  002ADE  0E00               	movlw	0
  8953  002AE0  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  8954  002AE2  0E00               	movlw	0
  8955  002AE4  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  8956  002AE6  0E00               	movlw	0
  8957  002AE8                     L4:
  8958  002AE8  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  8959                           
  8960                           ; BSR set to: 0
  8961                           
  8962                           ; BSR set to: 0
  8963  002AEA  0100               	movlb	0	; () banked
  8964  002AEC  51BF               	movf	___fladd@bexp& (0+255),w,b
  8965  002AEE  0100               	movlb	0	; () banked
  8966  002AF0  5DBE               	subwf	___fladd@aexp& (0+255),w,b
  8967  002AF2  B0D8               	btfsc	status,0,c
  8968  002AF4  D024               	goto	l6184
  8969                           
  8970                           ; BSR set to: 0
  8971  002AF6  0100               	movlb	0	; () banked
  8972  002AF8  ADBD               	btfss	___fladd@signs& (0+255),6,b
  8973  002AFA  D003               	goto	l6154
  8974                           
  8975                           ; BSR set to: 0
  8976  002AFC  0E80               	movlw	128
  8977  002AFE  0100               	movlb	0	; () banked
  8978  002B00  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  8979  002B02                     l6154:
  8980                           
  8981                           ; BSR set to: 0
  8982  002B02  C0BF  F0C0         	movff	___fladd@bexp,___fladd@grs
  8983                           
  8984                           ; BSR set to: 0
  8985  002B06  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  8986                           
  8987                           ; BSR set to: 0
  8988  002B0A  C0C0  F0BE         	movff	___fladd@grs,___fladd@aexp
  8989                           
  8990                           ; BSR set to: 0
  8991  002B0E  C0AD  F0C0         	movff	___fladd@b,___fladd@grs
  8992                           
  8993                           ; BSR set to: 0
  8994  002B12  C0B1  F0AD         	movff	___fladd@a,___fladd@b
  8995                           
  8996                           ; BSR set to: 0
  8997  002B16  C0C0  F0B1         	movff	___fladd@grs,___fladd@a
  8998                           
  8999                           ; BSR set to: 0
  9000  002B1A  C0AE  F0C0         	movff	___fladd@b+1,___fladd@grs
  9001                           
  9002                           ; BSR set to: 0
  9003  002B1E  C0B2  F0AE         	movff	___fladd@a+1,___fladd@b+1
  9004                           
  9005                           ; BSR set to: 0
  9006  002B22  C0C0  F0B2         	movff	___fladd@grs,___fladd@a+1
  9007                           
  9008                           ; BSR set to: 0
  9009  002B26  C0AF  F0C0         	movff	___fladd@b+2,___fladd@grs
  9010                           
  9011                           ; BSR set to: 0
  9012  002B2A  C0B3  F0AF         	movff	___fladd@a+2,___fladd@b+2
  9013                           
  9014                           ; BSR set to: 0
  9015  002B2E  C0C0  F0B3         	movff	___fladd@grs,___fladd@a+2
  9016                           
  9017                           ; BSR set to: 0
  9018  002B32  C0B0  F0C0         	movff	___fladd@b+3,___fladd@grs
  9019                           
  9020                           ; BSR set to: 0
  9021  002B36  C0B4  F0B0         	movff	___fladd@a+3,___fladd@b+3
  9022                           
  9023                           ; BSR set to: 0
  9024  002B3A  C0C0  F0B4         	movff	___fladd@grs,___fladd@a+3
  9025  002B3E                     l6184:
  9026                           
  9027                           ; BSR set to: 0
  9028  002B3E  0E00               	movlw	0
  9029  002B40  0100               	movlb	0	; () banked
  9030  002B42  6FC0               	movwf	___fladd@grs& (0+255),b
  9031                           
  9032                           ; BSR set to: 0
  9033  002B44  0100               	movlb	0	; () banked
  9034  002B46  51BF               	movf	___fladd@bexp& (0+255),w,b
  9035  002B48  0100               	movlb	0	; () banked
  9036  002B4A  6FB5               	movwf	??___fladd& (0+255),b
  9037  002B4C  6BB6               	clrf	(??___fladd+1)& (0+255),b
  9038  002B4E  0100               	movlb	0	; () banked
  9039  002B50  1FB5               	comf	??___fladd& (0+255),f,b
  9040  002B52  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  9041  002B54  4BB5               	infsnz	??___fladd& (0+255),f,b
  9042  002B56  2BB6               	incf	(??___fladd+1)& (0+255),f,b
  9043  002B58  0100               	movlb	0	; () banked
  9044  002B5A  51BE               	movf	___fladd@aexp& (0+255),w,b
  9045  002B5C  0100               	movlb	0	; () banked
  9046  002B5E  6FB7               	movwf	(??___fladd+2)& (0+255),b
  9047  002B60  6BB8               	clrf	(??___fladd+3)& (0+255),b
  9048  002B62  0100               	movlb	0	; () banked
  9049  002B64  51B5               	movf	??___fladd& (0+255),w,b
  9050  002B66  0100               	movlb	0	; () banked
  9051  002B68  27B7               	addwf	(??___fladd+2)& (0+255),f,b
  9052  002B6A  0100               	movlb	0	; () banked
  9053  002B6C  51B6               	movf	(??___fladd+1)& (0+255),w,b
  9054  002B6E  0100               	movlb	0	; () banked
  9055  002B70  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  9056  002B72  0100               	movlb	0	; () banked
  9057  002B74  BFB8               	btfsc	(??___fladd+3)& (0+255),7,b
  9058  002B76  D03D               	goto	l1312
  9059  002B78  0100               	movlb	0	; () banked
  9060  002B7A  51B8               	movf	(??___fladd+3)& (0+255),w,b
  9061  002B7C  E105               	bnz	u7460
  9062  002B7E  0E1A               	movlw	26
  9063  002B80  0100               	movlb	0	; () banked
  9064  002B82  5DB7               	subwf	(??___fladd+2)& (0+255),w,b
  9065  002B84  A0D8               	btfss	status,0,c
  9066  002B86  D035               	goto	l1312
  9067  002B88                     u7460:
  9068                           
  9069                           ; BSR set to: 0
  9070  002B88  0100               	movlb	0	; () banked
  9071  002B8A  51AD               	movf	___fladd@b& (0+255),w,b
  9072  002B8C  0100               	movlb	0	; () banked
  9073  002B8E  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  9074  002B90  0100               	movlb	0	; () banked
  9075  002B92  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  9076  002B94  0100               	movlb	0	; () banked
  9077  002B96  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  9078  002B98  B4D8               	btfsc	status,2,c
  9079  002B9A  D002               	goto	u7470
  9080  002B9C  0E01               	movlw	1
  9081  002B9E  D001               	goto	u7480
  9082  002BA0                     u7470:
  9083  002BA0  0E00               	movlw	0
  9084  002BA2                     u7480:
  9085  002BA2  0100               	movlb	0	; () banked
  9086  002BA4  6FC0               	movwf	___fladd@grs& (0+255),b
  9087                           
  9088                           ; BSR set to: 0
  9089  002BA6  0E00               	movlw	0
  9090  002BA8  0100               	movlb	0	; () banked
  9091  002BAA  6FAD               	movwf	___fladd@b& (0+255),b
  9092  002BAC  0E00               	movlw	0
  9093  002BAE  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  9094  002BB0  0E00               	movlw	0
  9095  002BB2  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  9096  002BB4  0E00               	movlw	0
  9097  002BB6  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  9098                           
  9099                           ; BSR set to: 0
  9100  002BB8  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  9101  002BBC  D020               	goto	l1311
  9102  002BBE                     l1313:
  9103                           
  9104                           ; BSR set to: 0
  9105  002BBE  0100               	movlb	0	; () banked
  9106  002BC0  A1C0               	btfss	___fladd@grs& (0+255),0,b
  9107  002BC2  D007               	goto	l6196
  9108                           
  9109                           ; BSR set to: 0
  9110  002BC4  0100               	movlb	0	; () banked
  9111  002BC6  90D8               	bcf	status,0,c
  9112  002BC8  31C0               	rrcf	___fladd@grs& (0+255),w,b
  9113  002BCA  0901               	iorlw	1
  9114  002BCC  0100               	movlb	0	; () banked
  9115  002BCE  6FC0               	movwf	___fladd@grs& (0+255),b
  9116  002BD0  D003               	goto	l6198
  9117  002BD2                     l6196:
  9118                           
  9119                           ; BSR set to: 0
  9120  002BD2  0100               	movlb	0	; () banked
  9121  002BD4  90D8               	bcf	status,0,c
  9122  002BD6  33C0               	rrcf	___fladd@grs& (0+255),f,b
  9123  002BD8                     l6198:
  9124                           
  9125                           ; BSR set to: 0
  9126  002BD8  0100               	movlb	0	; () banked
  9127  002BDA  A1AD               	btfss	___fladd@b& (0+255),0,b
  9128  002BDC  D002               	goto	l6202
  9129                           
  9130                           ; BSR set to: 0
  9131  002BDE  0100               	movlb	0	; () banked
  9132  002BE0  8FC0               	bsf	___fladd@grs& (0+255),7,b
  9133  002BE2                     l6202:
  9134                           
  9135                           ; BSR set to: 0
  9136  002BE2  0100               	movlb	0	; () banked
  9137  002BE4  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  9138  002BE6  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  9139  002BE8  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  9140  002BEA  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  9141  002BEC  33AD               	rrcf	___fladd@b& (0+255),f,b
  9142                           
  9143                           ; BSR set to: 0
  9144  002BEE  0100               	movlb	0	; () banked
  9145  002BF0  2BBF               	incf	___fladd@bexp& (0+255),f,b
  9146  002BF2                     l1312:
  9147                           
  9148                           ; BSR set to: 0
  9149  002BF2  0100               	movlb	0	; () banked
  9150  002BF4  51BE               	movf	___fladd@aexp& (0+255),w,b
  9151  002BF6  0100               	movlb	0	; () banked
  9152  002BF8  5DBF               	subwf	___fladd@bexp& (0+255),w,b
  9153  002BFA  A0D8               	btfss	status,0,c
  9154  002BFC  D7E0               	goto	l1313
  9155  002BFE                     l1311:
  9156                           
  9157                           ; BSR set to: 0
  9158  002BFE  0100               	movlb	0	; () banked
  9159  002C00  BDBD               	btfsc	___fladd@signs& (0+255),6,b
  9160  002C02  D03F               	goto	l6230
  9161                           
  9162                           ; BSR set to: 0
  9163  002C04  0100               	movlb	0	; () banked
  9164  002C06  51BF               	movf	___fladd@bexp& (0+255),w,b
  9165  002C08  0100               	movlb	0	; () banked
  9166  002C0A  A4D8               	btfss	status,2,c
  9167  002C0C  D00A               	goto	l6212
  9168                           
  9169                           ; BSR set to: 0
  9170  002C0E  0E00               	movlw	0
  9171  002C10  0100               	movlb	0	; () banked
  9172  002C12  6FAD               	movwf	?___fladd& (0+255),b
  9173  002C14  0E00               	movlw	0
  9174  002C16  6FAE               	movwf	(?___fladd+1)& (0+255),b
  9175  002C18  0E00               	movlw	0
  9176  002C1A  6FAF               	movwf	(?___fladd+2)& (0+255),b
  9177  002C1C  0E00               	movlw	0
  9178  002C1E  6FB0               	movwf	(?___fladd+3)& (0+255),b
  9179                           
  9180                           ; BSR set to: 0
  9181  002C20  0012               	return	
  9182  002C22                     l6212:
  9183                           
  9184                           ; BSR set to: 0
  9185  002C22  0100               	movlb	0	; () banked
  9186  002C24  51B1               	movf	___fladd@a& (0+255),w,b
  9187  002C26  0100               	movlb	0	; () banked
  9188  002C28  27AD               	addwf	___fladd@b& (0+255),f,b
  9189  002C2A  0100               	movlb	0	; () banked
  9190  002C2C  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  9191  002C2E  0100               	movlb	0	; () banked
  9192  002C30  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  9193  002C32  0100               	movlb	0	; () banked
  9194  002C34  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  9195  002C36  0100               	movlb	0	; () banked
  9196  002C38  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  9197  002C3A  0100               	movlb	0	; () banked
  9198  002C3C  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  9199  002C3E  0100               	movlb	0	; () banked
  9200  002C40  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  9201                           
  9202                           ; BSR set to: 0
  9203  002C42  0100               	movlb	0	; () banked
  9204  002C44  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  9205  002C46  D0CC               	goto	l6266
  9206                           
  9207                           ; BSR set to: 0
  9208  002C48  0100               	movlb	0	; () banked
  9209  002C4A  A1C0               	btfss	___fladd@grs& (0+255),0,b
  9210  002C4C  D009               	goto	l6220
  9211                           
  9212                           ; BSR set to: 0
  9213  002C4E  0100               	movlb	0	; () banked
  9214  002C50  90D8               	bcf	status,0,c
  9215  002C52  33C0               	rrcf	___fladd@grs& (0+255),f,b
  9216  002C54  0100               	movlb	0	; () banked
  9217  002C56  51C0               	movf	___fladd@grs& (0+255),w,b
  9218  002C58  0901               	iorlw	1
  9219  002C5A  0100               	movlb	0	; () banked
  9220  002C5C  6FC0               	movwf	___fladd@grs& (0+255),b
  9221  002C5E  D003               	goto	l6222
  9222  002C60                     l6220:
  9223                           
  9224                           ; BSR set to: 0
  9225  002C60  0100               	movlb	0	; () banked
  9226  002C62  90D8               	bcf	status,0,c
  9227  002C64  33C0               	rrcf	___fladd@grs& (0+255),f,b
  9228  002C66                     l6222:
  9229                           
  9230                           ; BSR set to: 0
  9231  002C66  0100               	movlb	0	; () banked
  9232  002C68  A1AD               	btfss	___fladd@b& (0+255),0,b
  9233  002C6A  D002               	goto	l6226
  9234                           
  9235                           ; BSR set to: 0
  9236  002C6C  0100               	movlb	0	; () banked
  9237  002C6E  8FC0               	bsf	___fladd@grs& (0+255),7,b
  9238  002C70                     l6226:
  9239                           
  9240                           ; BSR set to: 0
  9241  002C70  0100               	movlb	0	; () banked
  9242  002C72  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  9243  002C74  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  9244  002C76  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  9245  002C78  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  9246  002C7A  33AD               	rrcf	___fladd@b& (0+255),f,b
  9247                           
  9248                           ; BSR set to: 0
  9249  002C7C  0100               	movlb	0	; () banked
  9250  002C7E  2BBF               	incf	___fladd@bexp& (0+255),f,b
  9251                           
  9252                           ; BSR set to: 0
  9253  002C80  D0AF               	goto	l6266
  9254  002C82                     l6230:
  9255                           
  9256                           ; BSR set to: 0
  9257  002C82  0100               	movlb	0	; () banked
  9258  002C84  51B1               	movf	___fladd@a& (0+255),w,b
  9259  002C86  0100               	movlb	0	; () banked
  9260  002C88  5DAD               	subwf	___fladd@b& (0+255),w,b
  9261  002C8A  0100               	movlb	0	; () banked
  9262  002C8C  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  9263  002C8E  0100               	movlb	0	; () banked
  9264  002C90  59AE               	subwfb	(___fladd@b+1)& (0+255),w,b
  9265  002C92  0100               	movlb	0	; () banked
  9266  002C94  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  9267  002C96  0100               	movlb	0	; () banked
  9268  002C98  59AF               	subwfb	(___fladd@b+2)& (0+255),w,b
  9269  002C9A  0100               	movlb	0	; () banked
  9270  002C9C  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  9271  002C9E  0A80               	xorlw	128
  9272  002CA0  0100               	movlb	0	; () banked
  9273  002CA2  6FB5               	movwf	??___fladd& (0+255),b
  9274  002CA4  0100               	movlb	0	; () banked
  9275  002CA6  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  9276  002CA8  0A80               	xorlw	128
  9277  002CAA  0100               	movlb	0	; () banked
  9278  002CAC  59B5               	subwfb	??___fladd& (0+255),w,b
  9279  002CAE  B0D8               	btfsc	status,0,c
  9280  002CB0  D050               	goto	l6240
  9281                           
  9282                           ; BSR set to: 0
  9283  002CB2  C0AD  F0B5         	movff	___fladd@b,??___fladd
  9284  002CB6  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  9285  002CBA  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  9286  002CBE  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  9287  002CC2  0100               	movlb	0	; () banked
  9288  002CC4  1FB5               	comf	??___fladd& (0+255),f,b
  9289  002CC6  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  9290  002CC8  1FB7               	comf	(??___fladd+2)& (0+255),f,b
  9291  002CCA  1FB8               	comf	(??___fladd+3)& (0+255),f,b
  9292  002CCC  2BB5               	incf	??___fladd& (0+255),f,b
  9293  002CCE  0E00               	movlw	0
  9294  002CD0  23B6               	addwfc	(??___fladd+1)& (0+255),f,b
  9295  002CD2  23B7               	addwfc	(??___fladd+2)& (0+255),f,b
  9296  002CD4  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  9297  002CD6  0100               	movlb	0	; () banked
  9298  002CD8  51B1               	movf	___fladd@a& (0+255),w,b
  9299  002CDA  0100               	movlb	0	; () banked
  9300  002CDC  25B5               	addwf	??___fladd& (0+255),w,b
  9301  002CDE  0100               	movlb	0	; () banked
  9302  002CE0  6FB9               	movwf	(??___fladd+4)& (0+255),b
  9303  002CE2  0100               	movlb	0	; () banked
  9304  002CE4  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  9305  002CE6  0100               	movlb	0	; () banked
  9306  002CE8  21B6               	addwfc	(??___fladd+1)& (0+255),w,b
  9307  002CEA  0100               	movlb	0	; () banked
  9308  002CEC  6FBA               	movwf	(??___fladd+5)& (0+255),b
  9309  002CEE  0100               	movlb	0	; () banked
  9310  002CF0  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  9311  002CF2  0100               	movlb	0	; () banked
  9312  002CF4  21B7               	addwfc	(??___fladd+2)& (0+255),w,b
  9313  002CF6  0100               	movlb	0	; () banked
  9314  002CF8  6FBB               	movwf	(??___fladd+6)& (0+255),b
  9315  002CFA  0100               	movlb	0	; () banked
  9316  002CFC  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  9317  002CFE  0100               	movlb	0	; () banked
  9318  002D00  21B8               	addwfc	(??___fladd+3)& (0+255),w,b
  9319  002D02  0100               	movlb	0	; () banked
  9320  002D04  6FBC               	movwf	(??___fladd+7)& (0+255),b
  9321  002D06  0EFF               	movlw	255
  9322  002D08  0100               	movlb	0	; () banked
  9323  002D0A  25B9               	addwf	(??___fladd+4)& (0+255),w,b
  9324  002D0C  0100               	movlb	0	; () banked
  9325  002D0E  6FAD               	movwf	___fladd@b& (0+255),b
  9326  002D10  0EFF               	movlw	255
  9327  002D12  0100               	movlb	0	; () banked
  9328  002D14  21BA               	addwfc	(??___fladd+5)& (0+255),w,b
  9329  002D16  0100               	movlb	0	; () banked
  9330  002D18  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  9331  002D1A  0EFF               	movlw	255
  9332  002D1C  0100               	movlb	0	; () banked
  9333  002D1E  21BB               	addwfc	(??___fladd+6)& (0+255),w,b
  9334  002D20  0100               	movlb	0	; () banked
  9335  002D22  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  9336  002D24  0EFF               	movlw	255
  9337  002D26  0100               	movlb	0	; () banked
  9338  002D28  21BC               	addwfc	(??___fladd+7)& (0+255),w,b
  9339  002D2A  0100               	movlb	0	; () banked
  9340  002D2C  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  9341  002D2E  0E80               	movlw	128
  9342  002D30  0100               	movlb	0	; () banked
  9343  002D32  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  9344                           
  9345                           ; BSR set to: 0
  9346  002D34  0100               	movlb	0	; () banked
  9347  002D36  6DC0               	negf	___fladd@grs& (0+255),b
  9348                           
  9349                           ; BSR set to: 0
  9350  002D38  0100               	movlb	0	; () banked
  9351  002D3A  51C0               	movf	___fladd@grs& (0+255),w,b
  9352  002D3C  0100               	movlb	0	; () banked
  9353  002D3E  A4D8               	btfss	status,2,c
  9354  002D40  D018               	goto	l1328
  9355                           
  9356                           ; BSR set to: 0
  9357  002D42  0E01               	movlw	1
  9358  002D44  0100               	movlb	0	; () banked
  9359  002D46  27AD               	addwf	___fladd@b& (0+255),f,b
  9360  002D48  0E00               	movlw	0
  9361  002D4A  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  9362  002D4C  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  9363  002D4E  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  9364                           
  9365                           ; BSR set to: 0
  9366  002D50  D010               	goto	l1328
  9367  002D52                     l6240:
  9368                           
  9369                           ; BSR set to: 0
  9370  002D52  0100               	movlb	0	; () banked
  9371  002D54  51B1               	movf	___fladd@a& (0+255),w,b
  9372  002D56  0100               	movlb	0	; () banked
  9373  002D58  5FAD               	subwf	___fladd@b& (0+255),f,b
  9374  002D5A  0100               	movlb	0	; () banked
  9375  002D5C  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  9376  002D5E  0100               	movlb	0	; () banked
  9377  002D60  5BAE               	subwfb	(___fladd@b+1)& (0+255),f,b
  9378  002D62  0100               	movlb	0	; () banked
  9379  002D64  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  9380  002D66  0100               	movlb	0	; () banked
  9381  002D68  5BAF               	subwfb	(___fladd@b+2)& (0+255),f,b
  9382  002D6A  0100               	movlb	0	; () banked
  9383  002D6C  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  9384  002D6E  0100               	movlb	0	; () banked
  9385  002D70  5BB0               	subwfb	(___fladd@b+3)& (0+255),f,b
  9386  002D72                     l1328:
  9387                           
  9388                           ; BSR set to: 0
  9389  002D72  0100               	movlb	0	; () banked
  9390  002D74  51AD               	movf	___fladd@b& (0+255),w,b
  9391  002D76  0100               	movlb	0	; () banked
  9392  002D78  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  9393  002D7A  0100               	movlb	0	; () banked
  9394  002D7C  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  9395  002D7E  0100               	movlb	0	; () banked
  9396  002D80  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  9397  002D82  A4D8               	btfss	status,2,c
  9398  002D84  D02A               	goto	l6264
  9399                           
  9400                           ; BSR set to: 0
  9401  002D86  0100               	movlb	0	; () banked
  9402  002D88  51C0               	movf	___fladd@grs& (0+255),w,b
  9403  002D8A  0100               	movlb	0	; () banked
  9404  002D8C  A4D8               	btfss	status,2,c
  9405  002D8E  D025               	goto	l6264
  9406                           
  9407                           ; BSR set to: 0
  9408  002D90  0E00               	movlw	0
  9409  002D92  0100               	movlb	0	; () banked
  9410  002D94  6FAD               	movwf	?___fladd& (0+255),b
  9411  002D96  0E00               	movlw	0
  9412  002D98  6FAE               	movwf	(?___fladd+1)& (0+255),b
  9413  002D9A  0E00               	movlw	0
  9414  002D9C  6FAF               	movwf	(?___fladd+2)& (0+255),b
  9415  002D9E  0E00               	movlw	0
  9416  002DA0  6FB0               	movwf	(?___fladd+3)& (0+255),b
  9417                           
  9418                           ; BSR set to: 0
  9419  002DA2  0012               	return	
  9420  002DA4                     l6248:
  9421                           
  9422                           ; BSR set to: 0
  9423  002DA4  0100               	movlb	0	; () banked
  9424  002DA6  90D8               	bcf	status,0,c
  9425  002DA8  37AD               	rlcf	___fladd@b& (0+255),f,b
  9426  002DAA  37AE               	rlcf	(___fladd@b+1)& (0+255),f,b
  9427  002DAC  37AF               	rlcf	(___fladd@b+2)& (0+255),f,b
  9428  002DAE  37B0               	rlcf	(___fladd@b+3)& (0+255),f,b
  9429                           
  9430                           ; BSR set to: 0
  9431  002DB0  0100               	movlb	0	; () banked
  9432  002DB2  AFC0               	btfss	___fladd@grs& (0+255),7,b
  9433  002DB4  D002               	goto	l6254
  9434                           
  9435                           ; BSR set to: 0
  9436  002DB6  0100               	movlb	0	; () banked
  9437  002DB8  81AD               	bsf	___fladd@b& (0+255),0,b
  9438  002DBA                     l6254:
  9439                           
  9440                           ; BSR set to: 0
  9441  002DBA  0100               	movlb	0	; () banked
  9442  002DBC  A1C0               	btfss	___fladd@grs& (0+255),0,b
  9443  002DBE  D003               	goto	l6258
  9444                           
  9445                           ; BSR set to: 0
  9446  002DC0  80D8               	bsf	status,0,c
  9447  002DC2  0100               	movlb	0	; () banked
  9448  002DC4  D002               	goto	L5
  9449  002DC6                     l6258:
  9450                           
  9451                           ; BSR set to: 0
  9452  002DC6  0100               	movlb	0	; () banked
  9453  002DC8  90D8               	bcf	status,0,c
  9454  002DCA                     L5:
  9455  002DCA  37C0               	rlcf	___fladd@grs& (0+255),f,b
  9456                           
  9457                           ; BSR set to: 0
  9458                           
  9459                           ; BSR set to: 0
  9460  002DCC  0100               	movlb	0	; () banked
  9461  002DCE  51BF               	movf	___fladd@bexp& (0+255),w,b
  9462  002DD0  0100               	movlb	0	; () banked
  9463  002DD2  B4D8               	btfsc	status,2,c
  9464  002DD4  D002               	goto	l6264
  9465                           
  9466                           ; BSR set to: 0
  9467  002DD6  0100               	movlb	0	; () banked
  9468  002DD8  07BF               	decf	___fladd@bexp& (0+255),f,b
  9469  002DDA                     l6264:
  9470                           
  9471                           ; BSR set to: 0
  9472  002DDA  0100               	movlb	0	; () banked
  9473  002DDC  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  9474  002DDE  D7E2               	goto	l6248
  9475  002DE0                     l6266:
  9476                           
  9477                           ; BSR set to: 0
  9478  002DE0  0E00               	movlw	0
  9479  002DE2  0100               	movlb	0	; () banked
  9480  002DE4  6FBE               	movwf	___fladd@aexp& (0+255),b
  9481                           
  9482                           ; BSR set to: 0
  9483  002DE6  0100               	movlb	0	; () banked
  9484  002DE8  AFC0               	btfss	___fladd@grs& (0+255),7,b
  9485  002DEA  D00D               	goto	l1337
  9486                           
  9487                           ; BSR set to: 0
  9488  002DEC  C0C0  F0B5         	movff	___fladd@grs,??___fladd
  9489  002DF0  0E7F               	movlw	127
  9490  002DF2  0100               	movlb	0	; () banked
  9491  002DF4  17B5               	andwf	??___fladd& (0+255),f,b
  9492  002DF6  A4D8               	btfss	status,2,c
  9493  002DF8  D003               	goto	l6274
  9494                           
  9495                           ; BSR set to: 0
  9496                           
  9497                           ; BSR set to: 0
  9498  002DFA  0100               	movlb	0	; () banked
  9499  002DFC  A1AD               	btfss	___fladd@b& (0+255),0,b
  9500  002DFE  D003               	goto	l1337
  9501  002E00                     l6274:
  9502                           
  9503                           ; BSR set to: 0
  9504  002E00  0E01               	movlw	1
  9505  002E02  0100               	movlb	0	; () banked
  9506  002E04  6FBE               	movwf	___fladd@aexp& (0+255),b
  9507  002E06                     l1337:
  9508                           
  9509                           ; BSR set to: 0
  9510  002E06  0100               	movlb	0	; () banked
  9511  002E08  51BE               	movf	___fladd@aexp& (0+255),w,b
  9512  002E0A  0100               	movlb	0	; () banked
  9513  002E0C  B4D8               	btfsc	status,2,c
  9514  002E0E  D026               	goto	l6284
  9515                           
  9516                           ; BSR set to: 0
  9517  002E10  0E01               	movlw	1
  9518  002E12  0100               	movlb	0	; () banked
  9519  002E14  27AD               	addwf	___fladd@b& (0+255),f,b
  9520  002E16  0E00               	movlw	0
  9521  002E18  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  9522  002E1A  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  9523  002E1C  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  9524                           
  9525                           ; BSR set to: 0
  9526  002E1E  0100               	movlb	0	; () banked
  9527  002E20  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  9528  002E22  D01C               	goto	l6284
  9529                           
  9530                           ; BSR set to: 0
  9531  002E24  C0AD  F0B5         	movff	___fladd@b,??___fladd
  9532  002E28  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  9533  002E2C  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  9534  002E30  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  9535  002E34  0100               	movlb	0	; () banked
  9536  002E36  35B8               	rlcf	(??___fladd+3)& (0+255),w,b
  9537  002E38  33B8               	rrcf	(??___fladd+3)& (0+255),f,b
  9538  002E3A  33B7               	rrcf	(??___fladd+2)& (0+255),f,b
  9539  002E3C  33B6               	rrcf	(??___fladd+1)& (0+255),f,b
  9540  002E3E  33B5               	rrcf	??___fladd& (0+255),f,b
  9541  002E40  C0B5  F0AD         	movff	??___fladd,___fladd@b
  9542  002E44  C0B6  F0AE         	movff	??___fladd+1,___fladd@b+1
  9543  002E48  C0B7  F0AF         	movff	??___fladd+2,___fladd@b+2
  9544  002E4C  C0B8  F0B0         	movff	??___fladd+3,___fladd@b+3
  9545  002E50  0100               	movlb	0	; () banked
  9546  002E52  29BF               	incf	___fladd@bexp& (0+255),w,b
  9547  002E54  B4D8               	btfsc	status,2,c
  9548  002E56  D002               	goto	l6284
  9549                           
  9550                           ; BSR set to: 0
  9551  002E58  0100               	movlb	0	; () banked
  9552  002E5A  2BBF               	incf	___fladd@bexp& (0+255),f,b
  9553  002E5C                     l6284:
  9554                           
  9555                           ; BSR set to: 0
  9556  002E5C  0100               	movlb	0	; () banked
  9557  002E5E  29BF               	incf	___fladd@bexp& (0+255),w,b
  9558  002E60  B4D8               	btfsc	status,2,c
  9559  002E62  D005               	goto	l6288
  9560                           
  9561                           ; BSR set to: 0
  9562  002E64  0100               	movlb	0	; () banked
  9563  002E66  51BF               	movf	___fladd@bexp& (0+255),w,b
  9564  002E68  0100               	movlb	0	; () banked
  9565  002E6A  A4D8               	btfss	status,2,c
  9566  002E6C  D011               	goto	l6292
  9567  002E6E                     l6288:
  9568                           
  9569                           ; BSR set to: 0
  9570  002E6E  0E00               	movlw	0
  9571  002E70  0100               	movlb	0	; () banked
  9572  002E72  6FAD               	movwf	___fladd@b& (0+255),b
  9573  002E74  0E00               	movlw	0
  9574  002E76  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  9575  002E78  0E00               	movlw	0
  9576  002E7A  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  9577  002E7C  0E00               	movlw	0
  9578  002E7E  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  9579  002E80  0100               	movlb	0	; () banked
  9580  002E82  51BF               	movf	___fladd@bexp& (0+255),w,b
  9581  002E84  0100               	movlb	0	; () banked
  9582  002E86  A4D8               	btfss	status,2,c
  9583  002E88  D003               	goto	l6292
  9584                           
  9585                           ; BSR set to: 0
  9586  002E8A  0E00               	movlw	0
  9587  002E8C  0100               	movlb	0	; () banked
  9588  002E8E  6FBD               	movwf	___fladd@signs& (0+255),b
  9589  002E90                     l6292:
  9590                           
  9591                           ; BSR set to: 0
  9592  002E90  0100               	movlb	0	; () banked
  9593  002E92  A1BF               	btfss	___fladd@bexp& (0+255),0,b
  9594  002E94  D003               	goto	l6296
  9595                           
  9596                           ; BSR set to: 0
  9597  002E96  0100               	movlb	0	; () banked
  9598  002E98  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  9599  002E9A  D002               	goto	l6298
  9600  002E9C                     l6296:
  9601                           
  9602                           ; BSR set to: 0
  9603  002E9C  0100               	movlb	0	; () banked
  9604  002E9E  9FAF               	bcf	(___fladd@b+2)& (0+255),7,b
  9605  002EA0                     l6298:
  9606                           
  9607                           ; BSR set to: 0
  9608  002EA0  0100               	movlb	0	; () banked
  9609  002EA2  90D8               	bcf	status,0,c
  9610  002EA4  31BF               	rrcf	___fladd@bexp& (0+255),w,b
  9611  002EA6  0100               	movlb	0	; () banked
  9612  002EA8  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  9613                           
  9614                           ; BSR set to: 0
  9615  002EAA  0100               	movlb	0	; () banked
  9616  002EAC  AFBD               	btfss	___fladd@signs& (0+255),7,b
  9617  002EAE  D002               	goto	l6304
  9618                           
  9619                           ; BSR set to: 0
  9620  002EB0  0100               	movlb	0	; () banked
  9621  002EB2  8FB0               	bsf	(___fladd@b+3)& (0+255),7,b
  9622  002EB4                     l6304:
  9623                           
  9624                           ; BSR set to: 0
  9625  002EB4  C0AD  F0AD         	movff	___fladd@b,?___fladd
  9626  002EB8  C0AE  F0AE         	movff	___fladd@b+1,?___fladd+1
  9627  002EBC  C0AF  F0AF         	movff	___fladd@b+2,?___fladd+2
  9628  002EC0  C0B0  F0B0         	movff	___fladd@b+3,?___fladd+3
  9629  002EC4  0012               	return	
  9630  002EC6                     __end_of___fladd:
  9631                           	opt stack 0
  9632                           tblptru	equ	0xFF8
  9633                           tblptrh	equ	0xFF7
  9634                           tblptrl	equ	0xFF6
  9635                           tablat	equ	0xFF5
  9636                           prodh	equ	0xFF4
  9637                           prodl	equ	0xFF3
  9638                           postinc0	equ	0xFEE
  9639                           wreg	equ	0xFE8
  9640                           postdec1	equ	0xFE5
  9641                           fsr1l	equ	0xFE1
  9642                           indf2	equ	0xFDF
  9643                           postinc2	equ	0xFDE
  9644                           postdec2	equ	0xFDD
  9645                           fsr2h	equ	0xFDA
  9646                           fsr2l	equ	0xFD9
  9647                           status	equ	0xFD8
  9648                           
  9649 ;; *************** function ___flge *****************
  9650 ;; Defined at:
  9651 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  9652 ;; Parameters:    Size  Location     Type
  9653 ;;  ff1             4   81[BANK0 ] unsigned char 
  9654 ;;  ff2             4   85[BANK0 ] unsigned char 
  9655 ;; Auto vars:     Size  Location     Type
  9656 ;;		None
  9657 ;; Return value:  Size  Location     Type
  9658 ;;		None               void
  9659 ;; Registers used:
  9660 ;;		wreg, status,2, status,0
  9661 ;; Tracked objects:
  9662 ;;		On entry : 0/0
  9663 ;;		On exit  : 0/0
  9664 ;;		Unchanged: 0/0
  9665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9666 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9668 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9669 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9670 ;;Total ram usage:       12 bytes
  9671 ;; Hardware stack levels used:    1
  9672 ;; Hardware stack levels required when called:    4
  9673 ;; This function calls:
  9674 ;;		Nothing
  9675 ;; This function is called by:
  9676 ;;		_parallelo
  9677 ;;		_asin
  9678 ;;		_atan
  9679 ;;		_cos
  9680 ;;		_sin
  9681 ;;		_floor
  9682 ;; This function uses a non-reentrant model
  9683 ;;
  9684                           
  9685                           	psect	text24
  9686  0052AE                     __ptext24:
  9687                           	opt stack 0
  9688  0052AE                     ___flge:
  9689                           	opt stack 22
  9690                           
  9691                           ; BSR set to: 0
  9692                           ;incstack = 0
  9693  0052AE  0E00               	movlw	0
  9694  0052B0  0100               	movlb	0	; () banked
  9695  0052B2  15B1               	andwf	___flge@ff1& (0+255),w,b
  9696  0052B4  0100               	movlb	0	; () banked
  9697  0052B6  6FB9               	movwf	??___flge& (0+255),b
  9698  0052B8  0E00               	movlw	0
  9699  0052BA  0100               	movlb	0	; () banked
  9700  0052BC  15B2               	andwf	(___flge@ff1+1)& (0+255),w,b
  9701  0052BE  0100               	movlb	0	; () banked
  9702  0052C0  6FBA               	movwf	(??___flge+1)& (0+255),b
  9703  0052C2  0E80               	movlw	128
  9704  0052C4  0100               	movlb	0	; () banked
  9705  0052C6  15B3               	andwf	(___flge@ff1+2)& (0+255),w,b
  9706  0052C8  0100               	movlb	0	; () banked
  9707  0052CA  6FBB               	movwf	(??___flge+2)& (0+255),b
  9708  0052CC  0E7F               	movlw	127
  9709  0052CE  0100               	movlb	0	; () banked
  9710  0052D0  15B4               	andwf	(___flge@ff1+3)& (0+255),w,b
  9711  0052D2  0100               	movlb	0	; () banked
  9712  0052D4  6FBC               	movwf	(??___flge+3)& (0+255),b
  9713  0052D6  0100               	movlb	0	; () banked
  9714  0052D8  51B9               	movf	??___flge& (0+255),w,b
  9715  0052DA  0100               	movlb	0	; () banked
  9716  0052DC  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  9717  0052DE  0100               	movlb	0	; () banked
  9718  0052E0  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  9719  0052E2  0100               	movlb	0	; () banked
  9720  0052E4  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  9721  0052E6  A4D8               	btfss	status,2,c
  9722  0052E8  D009               	goto	l6442
  9723                           
  9724                           ; BSR set to: 0
  9725  0052EA  0E00               	movlw	0
  9726  0052EC  0100               	movlb	0	; () banked
  9727  0052EE  6FB1               	movwf	___flge@ff1& (0+255),b
  9728  0052F0  0E00               	movlw	0
  9729  0052F2  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  9730  0052F4  0E00               	movlw	0
  9731  0052F6  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  9732  0052F8  0E00               	movlw	0
  9733  0052FA  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  9734  0052FC                     l6442:
  9735                           
  9736                           ; BSR set to: 0
  9737  0052FC  0E00               	movlw	0
  9738  0052FE  0100               	movlb	0	; () banked
  9739  005300  15B5               	andwf	___flge@ff2& (0+255),w,b
  9740  005302  0100               	movlb	0	; () banked
  9741  005304  6FB9               	movwf	??___flge& (0+255),b
  9742  005306  0E00               	movlw	0
  9743  005308  0100               	movlb	0	; () banked
  9744  00530A  15B6               	andwf	(___flge@ff2+1)& (0+255),w,b
  9745  00530C  0100               	movlb	0	; () banked
  9746  00530E  6FBA               	movwf	(??___flge+1)& (0+255),b
  9747  005310  0E80               	movlw	128
  9748  005312  0100               	movlb	0	; () banked
  9749  005314  15B7               	andwf	(___flge@ff2+2)& (0+255),w,b
  9750  005316  0100               	movlb	0	; () banked
  9751  005318  6FBB               	movwf	(??___flge+2)& (0+255),b
  9752  00531A  0E7F               	movlw	127
  9753  00531C  0100               	movlb	0	; () banked
  9754  00531E  15B8               	andwf	(___flge@ff2+3)& (0+255),w,b
  9755  005320  0100               	movlb	0	; () banked
  9756  005322  6FBC               	movwf	(??___flge+3)& (0+255),b
  9757  005324  0100               	movlb	0	; () banked
  9758  005326  51B9               	movf	??___flge& (0+255),w,b
  9759  005328  0100               	movlb	0	; () banked
  9760  00532A  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  9761  00532C  0100               	movlb	0	; () banked
  9762  00532E  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  9763  005330  0100               	movlb	0	; () banked
  9764  005332  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  9765  005334  A4D8               	btfss	status,2,c
  9766  005336  D009               	goto	l6446
  9767                           
  9768                           ; BSR set to: 0
  9769  005338  0E00               	movlw	0
  9770  00533A  0100               	movlb	0	; () banked
  9771  00533C  6FB5               	movwf	___flge@ff2& (0+255),b
  9772  00533E  0E00               	movlw	0
  9773  005340  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  9774  005342  0E00               	movlw	0
  9775  005344  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  9776  005346  0E00               	movlw	0
  9777  005348  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  9778  00534A                     l6446:
  9779                           
  9780                           ; BSR set to: 0
  9781  00534A  0100               	movlb	0	; () banked
  9782  00534C  AFB4               	btfss	(___flge@ff1+3)& (0+255),7,b
  9783  00534E  D026               	goto	l6450
  9784                           
  9785                           ; BSR set to: 0
  9786  005350  C0B1  F0B9         	movff	___flge@ff1,??___flge
  9787  005354  C0B2  F0BA         	movff	___flge@ff1+1,??___flge+1
  9788  005358  C0B3  F0BB         	movff	___flge@ff1+2,??___flge+2
  9789  00535C  C0B4  F0BC         	movff	___flge@ff1+3,??___flge+3
  9790  005360  0100               	movlb	0	; () banked
  9791  005362  1FB9               	comf	??___flge& (0+255),f,b
  9792  005364  1FBA               	comf	(??___flge+1)& (0+255),f,b
  9793  005366  1FBB               	comf	(??___flge+2)& (0+255),f,b
  9794  005368  1FBC               	comf	(??___flge+3)& (0+255),f,b
  9795  00536A  2BB9               	incf	??___flge& (0+255),f,b
  9796  00536C  0E00               	movlw	0
  9797  00536E  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  9798  005370  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  9799  005372  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  9800  005374  0E00               	movlw	0
  9801  005376  0100               	movlb	0	; () banked
  9802  005378  25B9               	addwf	??___flge& (0+255),w,b
  9803  00537A  0100               	movlb	0	; () banked
  9804  00537C  6FB1               	movwf	___flge@ff1& (0+255),b
  9805  00537E  0E00               	movlw	0
  9806  005380  0100               	movlb	0	; () banked
  9807  005382  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  9808  005384  0100               	movlb	0	; () banked
  9809  005386  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  9810  005388  0E00               	movlw	0
  9811  00538A  0100               	movlb	0	; () banked
  9812  00538C  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  9813  00538E  0100               	movlb	0	; () banked
  9814  005390  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  9815  005392  0E80               	movlw	128
  9816  005394  0100               	movlb	0	; () banked
  9817  005396  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  9818  005398  0100               	movlb	0	; () banked
  9819  00539A  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  9820  00539C                     l6450:
  9821                           
  9822                           ; BSR set to: 0
  9823  00539C  0100               	movlb	0	; () banked
  9824  00539E  AFB8               	btfss	(___flge@ff2+3)& (0+255),7,b
  9825  0053A0  D026               	goto	l1059
  9826                           
  9827                           ; BSR set to: 0
  9828  0053A2  C0B5  F0B9         	movff	___flge@ff2,??___flge
  9829  0053A6  C0B6  F0BA         	movff	___flge@ff2+1,??___flge+1
  9830  0053AA  C0B7  F0BB         	movff	___flge@ff2+2,??___flge+2
  9831  0053AE  C0B8  F0BC         	movff	___flge@ff2+3,??___flge+3
  9832  0053B2  0100               	movlb	0	; () banked
  9833  0053B4  1FB9               	comf	??___flge& (0+255),f,b
  9834  0053B6  1FBA               	comf	(??___flge+1)& (0+255),f,b
  9835  0053B8  1FBB               	comf	(??___flge+2)& (0+255),f,b
  9836  0053BA  1FBC               	comf	(??___flge+3)& (0+255),f,b
  9837  0053BC  2BB9               	incf	??___flge& (0+255),f,b
  9838  0053BE  0E00               	movlw	0
  9839  0053C0  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  9840  0053C2  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  9841  0053C4  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  9842  0053C6  0E00               	movlw	0
  9843  0053C8  0100               	movlb	0	; () banked
  9844  0053CA  25B9               	addwf	??___flge& (0+255),w,b
  9845  0053CC  0100               	movlb	0	; () banked
  9846  0053CE  6FB5               	movwf	___flge@ff2& (0+255),b
  9847  0053D0  0E00               	movlw	0
  9848  0053D2  0100               	movlb	0	; () banked
  9849  0053D4  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  9850  0053D6  0100               	movlb	0	; () banked
  9851  0053D8  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  9852  0053DA  0E00               	movlw	0
  9853  0053DC  0100               	movlb	0	; () banked
  9854  0053DE  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  9855  0053E0  0100               	movlb	0	; () banked
  9856  0053E2  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  9857  0053E4  0E80               	movlw	128
  9858  0053E6  0100               	movlb	0	; () banked
  9859  0053E8  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  9860  0053EA  0100               	movlb	0	; () banked
  9861  0053EC  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  9862  0053EE                     l1059:
  9863                           
  9864                           ; BSR set to: 0
  9865  0053EE  0E00               	movlw	0
  9866  0053F0  0100               	movlb	0	; () banked
  9867  0053F2  1BB1               	xorwf	___flge@ff1& (0+255),f,b
  9868  0053F4  0E00               	movlw	0
  9869  0053F6  1BB2               	xorwf	(___flge@ff1+1)& (0+255),f,b
  9870  0053F8  0E00               	movlw	0
  9871  0053FA  1BB3               	xorwf	(___flge@ff1+2)& (0+255),f,b
  9872  0053FC  0E80               	movlw	128
  9873  0053FE  1BB4               	xorwf	(___flge@ff1+3)& (0+255),f,b
  9874  005400  0E00               	movlw	0
  9875  005402  0100               	movlb	0	; () banked
  9876  005404  1BB5               	xorwf	___flge@ff2& (0+255),f,b
  9877  005406  0E00               	movlw	0
  9878  005408  1BB6               	xorwf	(___flge@ff2+1)& (0+255),f,b
  9879  00540A  0E00               	movlw	0
  9880  00540C  1BB7               	xorwf	(___flge@ff2+2)& (0+255),f,b
  9881  00540E  0E80               	movlw	128
  9882  005410  1BB8               	xorwf	(___flge@ff2+3)& (0+255),f,b
  9883  005412  0100               	movlb	0	; () banked
  9884  005414  51B5               	movf	___flge@ff2& (0+255),w,b
  9885  005416  0100               	movlb	0	; () banked
  9886  005418  5DB1               	subwf	___flge@ff1& (0+255),w,b
  9887  00541A  0100               	movlb	0	; () banked
  9888  00541C  51B6               	movf	(___flge@ff2+1)& (0+255),w,b
  9889  00541E  0100               	movlb	0	; () banked
  9890  005420  59B2               	subwfb	(___flge@ff1+1)& (0+255),w,b
  9891  005422  0100               	movlb	0	; () banked
  9892  005424  51B7               	movf	(___flge@ff2+2)& (0+255),w,b
  9893  005426  0100               	movlb	0	; () banked
  9894  005428  59B3               	subwfb	(___flge@ff1+2)& (0+255),w,b
  9895  00542A  0100               	movlb	0	; () banked
  9896  00542C  51B8               	movf	(___flge@ff2+3)& (0+255),w,b
  9897  00542E  0100               	movlb	0	; () banked
  9898  005430  59B4               	subwfb	(___flge@ff1+3)& (0+255),w,b
  9899  005432  B0D8               	btfsc	status,0,c
  9900  005434  D002               	goto	l6456
  9901                           
  9902                           ; BSR set to: 0
  9903  005436  90D8               	bcf	status,0,c
  9904  005438  0012               	return	
  9905  00543A                     l6456:
  9906                           
  9907                           ; BSR set to: 0
  9908  00543A  80D8               	bsf	status,0,c
  9909                           
  9910                           ; BSR set to: 0
  9911  00543C  0012               	return	
  9912  00543E                     __end_of___flge:
  9913                           	opt stack 0
  9914                           tblptru	equ	0xFF8
  9915                           tblptrh	equ	0xFF7
  9916                           tblptrl	equ	0xFF6
  9917                           tablat	equ	0xFF5
  9918                           prodh	equ	0xFF4
  9919                           prodl	equ	0xFF3
  9920                           postinc0	equ	0xFEE
  9921                           wreg	equ	0xFE8
  9922                           postdec1	equ	0xFE5
  9923                           fsr1l	equ	0xFE1
  9924                           indf2	equ	0xFDF
  9925                           postinc2	equ	0xFDE
  9926                           postdec2	equ	0xFDD
  9927                           fsr2h	equ	0xFDA
  9928                           fsr2l	equ	0xFD9
  9929                           status	equ	0xFD8
  9930                           
  9931 ;; *************** function ___fldiv *****************
  9932 ;; Defined at:
  9933 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
  9934 ;; Parameters:    Size  Location     Type
  9935 ;;  b               4   23[BANK0 ] unsigned char 
  9936 ;;  a               4   27[BANK0 ] unsigned char 
  9937 ;; Auto vars:     Size  Location     Type
  9938 ;;  grs             4   42[BANK0 ] unsigned long 
  9939 ;;  rem             4   36[BANK0 ] unsigned long 
  9940 ;;  new_exp         2   40[BANK0 ] int 
  9941 ;;  aexp            1   47[BANK0 ] unsigned char 
  9942 ;;  bexp            1   46[BANK0 ] unsigned char 
  9943 ;;  sign            1   35[BANK0 ] unsigned char 
  9944 ;; Return value:  Size  Location     Type
  9945 ;;                  4   23[BANK0 ] unsigned char 
  9946 ;; Registers used:
  9947 ;;		wreg, status,2, status,0
  9948 ;; Tracked objects:
  9949 ;;		On entry : 0/0
  9950 ;;		On exit  : 0/0
  9951 ;;		Unchanged: 0/0
  9952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9953 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9954 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9955 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9956 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9957 ;;Total ram usage:       25 bytes
  9958 ;; Hardware stack levels used:    1
  9959 ;; Hardware stack levels required when called:    4
  9960 ;; This function calls:
  9961 ;;		Nothing
  9962 ;; This function is called by:
  9963 ;;		_parallelo
  9964 ;;		_matematica
  9965 ;;		_asin
  9966 ;;		_atan
  9967 ;;		_sin
  9968 ;; This function uses a non-reentrant model
  9969 ;;
  9970                           
  9971                           	psect	text25
  9972  003B08                     __ptext25:
  9973                           	opt stack 0
  9974  003B08                     ___fldiv:
  9975                           	opt stack 22
  9976                           
  9977                           ; BSR set to: 0
  9978                           ;incstack = 0
  9979  003B08  0100               	movlb	0	; () banked
  9980  003B0A  517A               	movf	(___fldiv@b+3)& (0+255),w,b
  9981  003B0C  0B80               	andlw	128
  9982  003B0E  0100               	movlb	0	; () banked
  9983  003B10  6F83               	movwf	___fldiv@sign& (0+255),b
  9984  003B12  0100               	movlb	0	; () banked
  9985  003B14  517A               	movf	(___fldiv@b+3)& (0+255),w,b
  9986  003B16  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
  9987  003B18  0100               	movlb	0	; () banked
  9988  003B1A  6F8E               	movwf	___fldiv@bexp& (0+255),b
  9989                           
  9990                           ; BSR set to: 0
  9991  003B1C  0100               	movlb	0	; () banked
  9992  003B1E  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
  9993  003B20  D002               	goto	l6576
  9994                           
  9995                           ; BSR set to: 0
  9996  003B22  0100               	movlb	0	; () banked
  9997  003B24  818E               	bsf	___fldiv@bexp& (0+255),0,b
  9998  003B26                     l6576:
  9999                           
 10000                           ; BSR set to: 0
 10001  003B26  0100               	movlb	0	; () banked
 10002  003B28  518E               	movf	___fldiv@bexp& (0+255),w,b
 10003  003B2A  0100               	movlb	0	; () banked
 10004  003B2C  B4D8               	btfsc	status,2,c
 10005  003B2E  D012               	goto	l6586
 10006                           
 10007                           ; BSR set to: 0
 10008  003B30  0100               	movlb	0	; () banked
 10009  003B32  298E               	incf	___fldiv@bexp& (0+255),w,b
 10010  003B34  A4D8               	btfss	status,2,c
 10011  003B36  D009               	goto	l6582
 10012                           
 10013                           ; BSR set to: 0
 10014  003B38  0E00               	movlw	0
 10015  003B3A  0100               	movlb	0	; () banked
 10016  003B3C  6F77               	movwf	___fldiv@b& (0+255),b
 10017  003B3E  0E00               	movlw	0
 10018  003B40  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10019  003B42  0E00               	movlw	0
 10020  003B44  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10021  003B46  0E00               	movlw	0
 10022  003B48  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10023  003B4A                     l6582:
 10024                           
 10025                           ; BSR set to: 0
 10026  003B4A  0100               	movlb	0	; () banked
 10027  003B4C  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10028                           
 10029                           ; BSR set to: 0
 10030  003B4E  0E00               	movlw	0
 10031  003B50  0100               	movlb	0	; () banked
 10032  003B52  D008               	goto	L6
 10033  003B54                     l6586:
 10034                           
 10035                           ; BSR set to: 0
 10036  003B54  0E00               	movlw	0
 10037  003B56  0100               	movlb	0	; () banked
 10038  003B58  6F77               	movwf	___fldiv@b& (0+255),b
 10039  003B5A  0E00               	movlw	0
 10040  003B5C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10041  003B5E  0E00               	movlw	0
 10042  003B60  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10043  003B62  0E00               	movlw	0
 10044  003B64                     L6:
 10045  003B64  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10046                           
 10047                           ; BSR set to: 0
 10048                           
 10049                           ; BSR set to: 0
 10050  003B66  0100               	movlb	0	; () banked
 10051  003B68  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10052  003B6A  0B80               	andlw	128
 10053  003B6C  0100               	movlb	0	; () banked
 10054  003B6E  1B83               	xorwf	___fldiv@sign& (0+255),f,b
 10055                           
 10056                           ; BSR set to: 0
 10057  003B70  0100               	movlb	0	; () banked
 10058  003B72  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10059  003B74  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
 10060  003B76  0100               	movlb	0	; () banked
 10061  003B78  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10062                           
 10063                           ; BSR set to: 0
 10064  003B7A  0100               	movlb	0	; () banked
 10065  003B7C  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
 10066  003B7E  D002               	goto	l6596
 10067                           
 10068                           ; BSR set to: 0
 10069  003B80  0100               	movlb	0	; () banked
 10070  003B82  818F               	bsf	___fldiv@aexp& (0+255),0,b
 10071  003B84                     l6596:
 10072                           
 10073                           ; BSR set to: 0
 10074  003B84  0100               	movlb	0	; () banked
 10075  003B86  518F               	movf	___fldiv@aexp& (0+255),w,b
 10076  003B88  0100               	movlb	0	; () banked
 10077  003B8A  B4D8               	btfsc	status,2,c
 10078  003B8C  D012               	goto	l6606
 10079                           
 10080                           ; BSR set to: 0
 10081  003B8E  0100               	movlb	0	; () banked
 10082  003B90  298F               	incf	___fldiv@aexp& (0+255),w,b
 10083  003B92  A4D8               	btfss	status,2,c
 10084  003B94  D009               	goto	l6602
 10085                           
 10086                           ; BSR set to: 0
 10087  003B96  0E00               	movlw	0
 10088  003B98  0100               	movlb	0	; () banked
 10089  003B9A  6F7B               	movwf	___fldiv@a& (0+255),b
 10090  003B9C  0E00               	movlw	0
 10091  003B9E  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10092  003BA0  0E00               	movlw	0
 10093  003BA2  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10094  003BA4  0E00               	movlw	0
 10095  003BA6  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10096  003BA8                     l6602:
 10097                           
 10098                           ; BSR set to: 0
 10099  003BA8  0100               	movlb	0	; () banked
 10100  003BAA  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
 10101                           
 10102                           ; BSR set to: 0
 10103  003BAC  0E00               	movlw	0
 10104  003BAE  0100               	movlb	0	; () banked
 10105  003BB0  D008               	goto	L7
 10106  003BB2                     l6606:
 10107                           
 10108                           ; BSR set to: 0
 10109  003BB2  0E00               	movlw	0
 10110  003BB4  0100               	movlb	0	; () banked
 10111  003BB6  6F7B               	movwf	___fldiv@a& (0+255),b
 10112  003BB8  0E00               	movlw	0
 10113  003BBA  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10114  003BBC  0E00               	movlw	0
 10115  003BBE  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10116  003BC0  0E00               	movlw	0
 10117  003BC2                     L7:
 10118  003BC2  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10119                           
 10120                           ; BSR set to: 0
 10121                           
 10122                           ; BSR set to: 0
 10123  003BC4  0100               	movlb	0	; () banked
 10124  003BC6  517B               	movf	___fldiv@a& (0+255),w,b
 10125  003BC8  0100               	movlb	0	; () banked
 10126  003BCA  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10127  003BCC  0100               	movlb	0	; () banked
 10128  003BCE  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10129  003BD0  0100               	movlb	0	; () banked
 10130  003BD2  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10131  003BD4  A4D8               	btfss	status,2,c
 10132  003BD6  D017               	goto	l6618
 10133                           
 10134                           ; BSR set to: 0
 10135  003BD8  0E00               	movlw	0
 10136  003BDA  0100               	movlb	0	; () banked
 10137  003BDC  6F77               	movwf	___fldiv@b& (0+255),b
 10138  003BDE  0E00               	movlw	0
 10139  003BE0  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10140  003BE2  0E00               	movlw	0
 10141  003BE4  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10142  003BE6  0E00               	movlw	0
 10143  003BE8  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10144                           
 10145                           ; BSR set to: 0
 10146  003BEA  0100               	movlb	0	; () banked
 10147  003BEC  0E80               	movlw	128
 10148  003BEE  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10149  003BF0  0E7F               	movlw	127
 10150  003BF2  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10151                           
 10152                           ; BSR set to: 0
 10153  003BF4  C077  F077         	movff	___fldiv@b,?___fldiv
 10154  003BF8  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10155  003BFC  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10156  003C00  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10157                           
 10158                           ; BSR set to: 0
 10159  003C04  0012               	return	
 10160  003C06                     l6618:
 10161                           
 10162                           ; BSR set to: 0
 10163  003C06  0100               	movlb	0	; () banked
 10164  003C08  518E               	movf	___fldiv@bexp& (0+255),w,b
 10165  003C0A  0100               	movlb	0	; () banked
 10166  003C0C  A4D8               	btfss	status,2,c
 10167  003C0E  D012               	goto	l6626
 10168                           
 10169                           ; BSR set to: 0
 10170  003C10  0E00               	movlw	0
 10171  003C12  0100               	movlb	0	; () banked
 10172  003C14  6F77               	movwf	___fldiv@b& (0+255),b
 10173  003C16  0E00               	movlw	0
 10174  003C18  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10175  003C1A  0E00               	movlw	0
 10176  003C1C  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10177  003C1E  0E00               	movlw	0
 10178  003C20  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10179                           
 10180                           ; BSR set to: 0
 10181  003C22  C077  F077         	movff	___fldiv@b,?___fldiv
 10182  003C26  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10183  003C2A  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10184  003C2E  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10185                           
 10186                           ; BSR set to: 0
 10187  003C32  0012               	return	
 10188  003C34                     l6626:
 10189                           
 10190                           ; BSR set to: 0
 10191  003C34  0100               	movlb	0	; () banked
 10192  003C36  518F               	movf	___fldiv@aexp& (0+255),w,b
 10193  003C38  0100               	movlb	0	; () banked
 10194  003C3A  6F7F               	movwf	??___fldiv& (0+255),b
 10195  003C3C  6B80               	clrf	(??___fldiv+1)& (0+255),b
 10196  003C3E  0100               	movlb	0	; () banked
 10197  003C40  1F7F               	comf	??___fldiv& (0+255),f,b
 10198  003C42  1F80               	comf	(??___fldiv+1)& (0+255),f,b
 10199  003C44  4B7F               	infsnz	??___fldiv& (0+255),f,b
 10200  003C46  2B80               	incf	(??___fldiv+1)& (0+255),f,b
 10201  003C48  0100               	movlb	0	; () banked
 10202  003C4A  518E               	movf	___fldiv@bexp& (0+255),w,b
 10203  003C4C  0100               	movlb	0	; () banked
 10204  003C4E  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10205  003C50  6B82               	clrf	(??___fldiv+3)& (0+255),b
 10206  003C52  0100               	movlb	0	; () banked
 10207  003C54  517F               	movf	??___fldiv& (0+255),w,b
 10208  003C56  0100               	movlb	0	; () banked
 10209  003C58  2781               	addwf	(??___fldiv+2)& (0+255),f,b
 10210  003C5A  0100               	movlb	0	; () banked
 10211  003C5C  5180               	movf	(??___fldiv+1)& (0+255),w,b
 10212  003C5E  0100               	movlb	0	; () banked
 10213  003C60  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
 10214  003C62  0E7F               	movlw	127
 10215  003C64  0100               	movlb	0	; () banked
 10216  003C66  2581               	addwf	(??___fldiv+2)& (0+255),w,b
 10217  003C68  0100               	movlb	0	; () banked
 10218  003C6A  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10219  003C6C  0E00               	movlw	0
 10220  003C6E  0100               	movlb	0	; () banked
 10221  003C70  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
 10222  003C72  0100               	movlb	0	; () banked
 10223  003C74  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10224                           
 10225                           ; BSR set to: 0
 10226  003C76  C077  F084         	movff	___fldiv@b,___fldiv@rem
 10227  003C7A  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 10228  003C7E  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 10229  003C82  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 10230                           
 10231                           ; BSR set to: 0
 10232  003C86  0E00               	movlw	0
 10233  003C88  0100               	movlb	0	; () banked
 10234  003C8A  6F77               	movwf	___fldiv@b& (0+255),b
 10235  003C8C  0E00               	movlw	0
 10236  003C8E  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10237  003C90  0E00               	movlw	0
 10238  003C92  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10239  003C94  0E00               	movlw	0
 10240  003C96  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10241                           
 10242                           ; BSR set to: 0
 10243  003C98  0E00               	movlw	0
 10244  003C9A  0100               	movlb	0	; () banked
 10245  003C9C  6F8A               	movwf	___fldiv@grs& (0+255),b
 10246  003C9E  0E00               	movlw	0
 10247  003CA0  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
 10248  003CA2  0E00               	movlw	0
 10249  003CA4  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
 10250  003CA6  0E00               	movlw	0
 10251  003CA8  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
 10252                           
 10253                           ; BSR set to: 0
 10254  003CAA  0E00               	movlw	0
 10255  003CAC  0100               	movlb	0	; () banked
 10256  003CAE  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10257  003CB0  D042               	goto	l1367
 10258  003CB2                     l6636:
 10259                           
 10260                           ; BSR set to: 0
 10261  003CB2  0100               	movlb	0	; () banked
 10262  003CB4  518F               	movf	___fldiv@aexp& (0+255),w,b
 10263  003CB6  0100               	movlb	0	; () banked
 10264  003CB8  B4D8               	btfsc	status,2,c
 10265  003CBA  D017               	goto	l6644
 10266                           
 10267                           ; BSR set to: 0
 10268  003CBC  0100               	movlb	0	; () banked
 10269  003CBE  90D8               	bcf	status,0,c
 10270  003CC0  3784               	rlcf	___fldiv@rem& (0+255),f,b
 10271  003CC2  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10272  003CC4  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10273  003CC6  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10274  003CC8  0100               	movlb	0	; () banked
 10275  003CCA  90D8               	bcf	status,0,c
 10276  003CCC  3777               	rlcf	___fldiv@b& (0+255),f,b
 10277  003CCE  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10278  003CD0  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10279  003CD2  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10280                           
 10281                           ; BSR set to: 0
 10282  003CD4  0100               	movlb	0	; () banked
 10283  003CD6  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10284  003CD8  D002               	goto	l1370
 10285                           
 10286                           ; BSR set to: 0
 10287  003CDA  0100               	movlb	0	; () banked
 10288  003CDC  8177               	bsf	___fldiv@b& (0+255),0,b
 10289  003CDE                     l1370:
 10290                           
 10291                           ; BSR set to: 0
 10292  003CDE  0100               	movlb	0	; () banked
 10293  003CE0  90D8               	bcf	status,0,c
 10294  003CE2  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10295  003CE4  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10296  003CE6  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10297  003CE8  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10298  003CEA                     l6644:
 10299                           
 10300                           ; BSR set to: 0
 10301  003CEA  0100               	movlb	0	; () banked
 10302  003CEC  517B               	movf	___fldiv@a& (0+255),w,b
 10303  003CEE  0100               	movlb	0	; () banked
 10304  003CF0  5D84               	subwf	___fldiv@rem& (0+255),w,b
 10305  003CF2  0100               	movlb	0	; () banked
 10306  003CF4  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10307  003CF6  0100               	movlb	0	; () banked
 10308  003CF8  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10309  003CFA  0100               	movlb	0	; () banked
 10310  003CFC  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10311  003CFE  0100               	movlb	0	; () banked
 10312  003D00  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10313  003D02  0100               	movlb	0	; () banked
 10314  003D04  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10315  003D06  0100               	movlb	0	; () banked
 10316  003D08  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10317  003D0A  A0D8               	btfss	status,0,c
 10318  003D0C  D012               	goto	l6650
 10319                           
 10320                           ; BSR set to: 0
 10321  003D0E  0100               	movlb	0	; () banked
 10322  003D10  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10323                           
 10324                           ; BSR set to: 0
 10325  003D12  0100               	movlb	0	; () banked
 10326  003D14  517B               	movf	___fldiv@a& (0+255),w,b
 10327  003D16  0100               	movlb	0	; () banked
 10328  003D18  5F84               	subwf	___fldiv@rem& (0+255),f,b
 10329  003D1A  0100               	movlb	0	; () banked
 10330  003D1C  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10331  003D1E  0100               	movlb	0	; () banked
 10332  003D20  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10333  003D22  0100               	movlb	0	; () banked
 10334  003D24  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10335  003D26  0100               	movlb	0	; () banked
 10336  003D28  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10337  003D2A  0100               	movlb	0	; () banked
 10338  003D2C  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10339  003D2E  0100               	movlb	0	; () banked
 10340  003D30  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10341  003D32                     l6650:
 10342                           
 10343                           ; BSR set to: 0
 10344  003D32  0100               	movlb	0	; () banked
 10345  003D34  2B8F               	incf	___fldiv@aexp& (0+255),f,b
 10346  003D36                     l1367:
 10347                           
 10348                           ; BSR set to: 0
 10349  003D36  0E19               	movlw	25
 10350  003D38  0100               	movlb	0	; () banked
 10351  003D3A  658F               	cpfsgt	___fldiv@aexp& (0+255),b
 10352  003D3C  D7BA               	goto	l6636
 10353                           
 10354                           ; BSR set to: 0
 10355                           
 10356                           ; BSR set to: 0
 10357  003D3E  0100               	movlb	0	; () banked
 10358  003D40  5184               	movf	___fldiv@rem& (0+255),w,b
 10359  003D42  0100               	movlb	0	; () banked
 10360  003D44  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10361  003D46  0100               	movlb	0	; () banked
 10362  003D48  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10363  003D4A  0100               	movlb	0	; () banked
 10364  003D4C  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10365  003D4E  B4D8               	btfsc	status,2,c
 10366  003D50  D018               	goto	l6662
 10367                           
 10368                           ; BSR set to: 0
 10369  003D52  0100               	movlb	0	; () banked
 10370  003D54  818A               	bsf	___fldiv@grs& (0+255),0,b
 10371                           
 10372                           ; BSR set to: 0
 10373  003D56  D015               	goto	l6662
 10374  003D58                     l6656:
 10375                           
 10376                           ; BSR set to: 0
 10377  003D58  0100               	movlb	0	; () banked
 10378  003D5A  90D8               	bcf	status,0,c
 10379  003D5C  3777               	rlcf	___fldiv@b& (0+255),f,b
 10380  003D5E  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10381  003D60  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10382  003D62  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10383                           
 10384                           ; BSR set to: 0
 10385  003D64  0100               	movlb	0	; () banked
 10386  003D66  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10387  003D68  D002               	goto	l1376
 10388                           
 10389                           ; BSR set to: 0
 10390  003D6A  0100               	movlb	0	; () banked
 10391  003D6C  8177               	bsf	___fldiv@b& (0+255),0,b
 10392  003D6E                     l1376:
 10393                           
 10394                           ; BSR set to: 0
 10395  003D6E  0100               	movlb	0	; () banked
 10396  003D70  90D8               	bcf	status,0,c
 10397  003D72  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10398  003D74  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10399  003D76  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10400  003D78  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10401  003D7A  0100               	movlb	0	; () banked
 10402  003D7C  0788               	decf	___fldiv@new_exp& (0+255),f,b
 10403  003D7E  A0D8               	btfss	status,0,c
 10404  003D80  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10405  003D82                     l6662:
 10406                           
 10407                           ; BSR set to: 0
 10408  003D82  0100               	movlb	0	; () banked
 10409  003D84  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10410  003D86  D7E8               	goto	l6656
 10411                           
 10412                           ; BSR set to: 0
 10413                           
 10414                           ; BSR set to: 0
 10415  003D88  0E00               	movlw	0
 10416  003D8A  0100               	movlb	0	; () banked
 10417  003D8C  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10418                           
 10419                           ; BSR set to: 0
 10420  003D8E  0100               	movlb	0	; () banked
 10421  003D90  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10422  003D92  D024               	goto	l1378
 10423                           
 10424                           ; BSR set to: 0
 10425  003D94  0EFF               	movlw	255
 10426  003D96  0100               	movlb	0	; () banked
 10427  003D98  158A               	andwf	___fldiv@grs& (0+255),w,b
 10428  003D9A  0100               	movlb	0	; () banked
 10429  003D9C  6F7F               	movwf	??___fldiv& (0+255),b
 10430  003D9E  0EFF               	movlw	255
 10431  003DA0  0100               	movlb	0	; () banked
 10432  003DA2  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10433  003DA4  0100               	movlb	0	; () banked
 10434  003DA6  6F80               	movwf	(??___fldiv+1)& (0+255),b
 10435  003DA8  0EFF               	movlw	255
 10436  003DAA  0100               	movlb	0	; () banked
 10437  003DAC  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10438  003DAE  0100               	movlb	0	; () banked
 10439  003DB0  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10440  003DB2  0E7F               	movlw	127
 10441  003DB4  0100               	movlb	0	; () banked
 10442  003DB6  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10443  003DB8  0100               	movlb	0	; () banked
 10444  003DBA  6F82               	movwf	(??___fldiv+3)& (0+255),b
 10445  003DBC  0100               	movlb	0	; () banked
 10446  003DBE  517F               	movf	??___fldiv& (0+255),w,b
 10447  003DC0  0100               	movlb	0	; () banked
 10448  003DC2  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
 10449  003DC4  0100               	movlb	0	; () banked
 10450  003DC6  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
 10451  003DC8  0100               	movlb	0	; () banked
 10452  003DCA  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
 10453  003DCC  A4D8               	btfss	status,2,c
 10454  003DCE  D003               	goto	l6672
 10455                           
 10456                           ; BSR set to: 0
 10457                           
 10458                           ; BSR set to: 0
 10459  003DD0  0100               	movlb	0	; () banked
 10460  003DD2  A177               	btfss	___fldiv@b& (0+255),0,b
 10461  003DD4  D003               	goto	l1378
 10462  003DD6                     l6672:
 10463                           
 10464                           ; BSR set to: 0
 10465  003DD6  0E01               	movlw	1
 10466  003DD8  0100               	movlb	0	; () banked
 10467  003DDA  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10468  003DDC                     l1378:
 10469                           
 10470                           ; BSR set to: 0
 10471  003DDC  0100               	movlb	0	; () banked
 10472  003DDE  518F               	movf	___fldiv@aexp& (0+255),w,b
 10473  003DE0  0100               	movlb	0	; () banked
 10474  003DE2  B4D8               	btfsc	status,2,c
 10475  003DE4  D023               	goto	l6682
 10476                           
 10477                           ; BSR set to: 0
 10478  003DE6  0E01               	movlw	1
 10479  003DE8  0100               	movlb	0	; () banked
 10480  003DEA  2777               	addwf	___fldiv@b& (0+255),f,b
 10481  003DEC  0E00               	movlw	0
 10482  003DEE  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10483  003DF0  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10484  003DF2  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10485                           
 10486                           ; BSR set to: 0
 10487  003DF4  0100               	movlb	0	; () banked
 10488  003DF6  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
 10489  003DF8  D019               	goto	l6682
 10490                           
 10491                           ; BSR set to: 0
 10492  003DFA  C077  F07F         	movff	___fldiv@b,??___fldiv
 10493  003DFE  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
 10494  003E02  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
 10495  003E06  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
 10496  003E0A  0100               	movlb	0	; () banked
 10497  003E0C  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
 10498  003E0E  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
 10499  003E10  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
 10500  003E12  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
 10501  003E14  337F               	rrcf	??___fldiv& (0+255),f,b
 10502  003E16  C07F  F077         	movff	??___fldiv,___fldiv@b
 10503  003E1A  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
 10504  003E1E  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
 10505  003E22  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
 10506                           
 10507                           ; BSR set to: 0
 10508  003E26  0100               	movlb	0	; () banked
 10509  003E28  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
 10510  003E2A  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10511  003E2C                     l6682:
 10512                           
 10513                           ; BSR set to: 0
 10514  003E2C  0100               	movlb	0	; () banked
 10515  003E2E  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10516  003E30  D014               	goto	l6686
 10517  003E32  0100               	movlb	0	; () banked
 10518  003E34  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10519  003E36  E104               	bnz	u8400
 10520  003E38  0100               	movlb	0	; () banked
 10521  003E3A  2988               	incf	___fldiv@new_exp& (0+255),w,b
 10522  003E3C  A0D8               	btfss	status,0,c
 10523  003E3E  D00D               	goto	l6686
 10524  003E40                     u8400:
 10525                           
 10526                           ; BSR set to: 0
 10527  003E40  0E00               	movlw	0
 10528  003E42  0100               	movlb	0	; () banked
 10529  003E44  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10530  003E46  6988               	setf	___fldiv@new_exp& (0+255),b
 10531  003E48  0E00               	movlw	0
 10532  003E4A  0100               	movlb	0	; () banked
 10533  003E4C  6F77               	movwf	___fldiv@b& (0+255),b
 10534  003E4E  0E00               	movlw	0
 10535  003E50  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10536  003E52  0E00               	movlw	0
 10537  003E54  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10538  003E56  0E00               	movlw	0
 10539  003E58  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10540  003E5A                     l6686:
 10541                           
 10542                           ; BSR set to: 0
 10543  003E5A  0100               	movlb	0	; () banked
 10544  003E5C  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10545  003E5E  D007               	goto	l6688
 10546  003E60  0100               	movlb	0	; () banked
 10547  003E62  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10548  003E64  E115               	bnz	l6690
 10549  003E66  0100               	movlb	0	; () banked
 10550  003E68  0588               	decf	___fldiv@new_exp& (0+255),w,b
 10551  003E6A  B0D8               	btfsc	status,0,c
 10552  003E6C  D011               	goto	l6690
 10553  003E6E                     l6688:
 10554                           
 10555                           ; BSR set to: 0
 10556  003E6E  0E00               	movlw	0
 10557  003E70  0100               	movlb	0	; () banked
 10558  003E72  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10559  003E74  0E00               	movlw	0
 10560  003E76  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10561  003E78  0E00               	movlw	0
 10562  003E7A  0100               	movlb	0	; () banked
 10563  003E7C  6F77               	movwf	___fldiv@b& (0+255),b
 10564  003E7E  0E00               	movlw	0
 10565  003E80  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10566  003E82  0E00               	movlw	0
 10567  003E84  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10568  003E86  0E00               	movlw	0
 10569  003E88  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10570  003E8A  0E00               	movlw	0
 10571  003E8C  0100               	movlb	0	; () banked
 10572  003E8E  6F83               	movwf	___fldiv@sign& (0+255),b
 10573  003E90                     l6690:
 10574                           
 10575                           ; BSR set to: 0
 10576  003E90  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
 10577                           
 10578                           ; BSR set to: 0
 10579  003E94  0100               	movlb	0	; () banked
 10580  003E96  A18E               	btfss	___fldiv@bexp& (0+255),0,b
 10581  003E98  D003               	goto	l6696
 10582                           
 10583                           ; BSR set to: 0
 10584  003E9A  0100               	movlb	0	; () banked
 10585  003E9C  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10586  003E9E  D002               	goto	l6698
 10587  003EA0                     l6696:
 10588                           
 10589                           ; BSR set to: 0
 10590  003EA0  0100               	movlb	0	; () banked
 10591  003EA2  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
 10592  003EA4                     l6698:
 10593                           
 10594                           ; BSR set to: 0
 10595  003EA4  0100               	movlb	0	; () banked
 10596  003EA6  90D8               	bcf	status,0,c
 10597  003EA8  318E               	rrcf	___fldiv@bexp& (0+255),w,b
 10598  003EAA  0100               	movlb	0	; () banked
 10599  003EAC  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10600                           
 10601                           ; BSR set to: 0
 10602  003EAE  0100               	movlb	0	; () banked
 10603  003EB0  5183               	movf	___fldiv@sign& (0+255),w,b
 10604  003EB2  0100               	movlb	0	; () banked
 10605  003EB4  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10606                           
 10607                           ; BSR set to: 0
 10608  003EB6  C077  F077         	movff	___fldiv@b,?___fldiv
 10609  003EBA  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10610  003EBE  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10611  003EC2  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10612  003EC6  0012               	return	
 10613  003EC8                     __end_of___fldiv:
 10614                           	opt stack 0
 10615                           tblptru	equ	0xFF8
 10616                           tblptrh	equ	0xFF7
 10617                           tblptrl	equ	0xFF6
 10618                           tablat	equ	0xFF5
 10619                           prodh	equ	0xFF4
 10620                           prodl	equ	0xFF3
 10621                           postinc0	equ	0xFEE
 10622                           wreg	equ	0xFE8
 10623                           postdec1	equ	0xFE5
 10624                           fsr1l	equ	0xFE1
 10625                           indf2	equ	0xFDF
 10626                           postinc2	equ	0xFDE
 10627                           postdec2	equ	0xFDD
 10628                           fsr2h	equ	0xFDA
 10629                           fsr2l	equ	0xFD9
 10630                           status	equ	0xFD8
 10631                           
 10632 ;; *************** function _delay_s *****************
 10633 ;; Defined at:
 10634 ;;		line 102 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 10635 ;; Parameters:    Size  Location     Type
 10636 ;;  value_s         1    wreg     unsigned char 
 10637 ;; Auto vars:     Size  Location     Type
 10638 ;;  value_s         1   31[BANK0 ] unsigned char 
 10639 ;;  repeat_loop     1   32[BANK0 ] unsigned char 
 10640 ;; Return value:  Size  Location     Type
 10641 ;;		None               void
 10642 ;; Registers used:
 10643 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10644 ;; Tracked objects:
 10645 ;;		On entry : 0/0
 10646 ;;		On exit  : 0/0
 10647 ;;		Unchanged: 0/0
 10648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10650 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10652 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10653 ;;Total ram usage:        2 bytes
 10654 ;; Hardware stack levels used:    1
 10655 ;; Hardware stack levels required when called:    6
 10656 ;; This function calls:
 10657 ;;		_delay_ms
 10658 ;; This function is called by:
 10659 ;;		_park_routine
 10660 ;; This function uses a non-reentrant model
 10661 ;;
 10662                           
 10663                           	psect	text26
 10664  005E56                     __ptext26:
 10665                           	opt stack 0
 10666  005E56                     _delay_s:
 10667                           	opt stack 23
 10668                           
 10669                           ; BSR set to: 0
 10670                           ;incstack = 0
 10671                           ;delay_s@value_s stored from wreg
 10672  005E56  0100               	movlb	0	; () banked
 10673  005E58  6F7F               	movwf	delay_s@value_s& (0+255),b
 10674                           
 10675                           ;src\delay.c: 104: unsigned char repeat_loop;
 10676                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10677  005E5A  0E00               	movlw	0
 10678  005E5C  0100               	movlb	0	; () banked
 10679  005E5E  6F80               	movwf	delay_s@repeat_loop& (0+255),b
 10680  005E60  D009               	goto	l7262
 10681  005E62                     l7258:
 10682                           
 10683                           ; BSR set to: 0
 10684                           ;src\delay.c: 107: delay_ms (1000);
 10685  005E62  0E03               	movlw	3
 10686  005E64  0100               	movlb	0	; () banked
 10687  005E66  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10688  005E68  0EE8               	movlw	232
 10689  005E6A  6F7D               	movwf	delay_ms@value_ms& (0+255),b
 10690  005E6C  ECC1  F02E         	call	_delay_ms	;wreg free
 10691  005E70  0100               	movlb	0	; () banked
 10692  005E72  2B80               	incf	delay_s@repeat_loop& (0+255),f,b
 10693  005E74                     l7262:
 10694                           
 10695                           ; BSR set to: 0
 10696  005E74  0100               	movlb	0	; () banked
 10697  005E76  517F               	movf	delay_s@value_s& (0+255),w,b
 10698  005E78  0100               	movlb	0	; () banked
 10699  005E7A  5D80               	subwf	delay_s@repeat_loop& (0+255),w,b
 10700  005E7C  B0D8               	btfsc	status,0,c
 10701  005E7E  0012               	return	
 10702  005E80  D7F0               	goto	l7258
 10703  005E82                     __end_of_delay_s:
 10704                           	opt stack 0
 10705                           tblptru	equ	0xFF8
 10706                           tblptrh	equ	0xFF7
 10707                           tblptrl	equ	0xFF6
 10708                           tablat	equ	0xFF5
 10709                           prodh	equ	0xFF4
 10710                           prodl	equ	0xFF3
 10711                           postinc0	equ	0xFEE
 10712                           wreg	equ	0xFE8
 10713                           postdec1	equ	0xFE5
 10714                           fsr1l	equ	0xFE1
 10715                           indf2	equ	0xFDF
 10716                           postinc2	equ	0xFDE
 10717                           postdec2	equ	0xFDD
 10718                           fsr2h	equ	0xFDA
 10719                           fsr2l	equ	0xFD9
 10720                           status	equ	0xFD8
 10721                           
 10722 ;; *************** function _delay_ms *****************
 10723 ;; Defined at:
 10724 ;;		line 61 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
 10725 ;; Parameters:    Size  Location     Type
 10726 ;;  value_ms        2   29[BANK0 ] unsigned int 
 10727 ;; Auto vars:     Size  Location     Type
 10728 ;;		None
 10729 ;; Return value:  Size  Location     Type
 10730 ;;		None               void
 10731 ;; Registers used:
 10732 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10733 ;; Tracked objects:
 10734 ;;		On entry : 0/0
 10735 ;;		On exit  : 0/0
 10736 ;;		Unchanged: 0/0
 10737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10738 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10741 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10742 ;;Total ram usage:        2 bytes
 10743 ;; Hardware stack levels used:    1
 10744 ;; Hardware stack levels required when called:    5
 10745 ;; This function calls:
 10746 ;;		___wmul
 10747 ;; This function is called by:
 10748 ;;		_delay_s
 10749 ;;		_park_routine
 10750 ;; This function uses a non-reentrant model
 10751 ;;
 10752                           
 10753                           	psect	text27
 10754  005D82                     __ptext27:
 10755                           	opt stack 0
 10756  005D82                     _delay_ms:
 10757                           	opt stack 23
 10758                           
 10759                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 10760                           
 10761                           ; BSR set to: 0
 10762                           ;incstack = 0
 10763  005D82  C0E8  F077         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 10764  005D86  0100               	movlb	0	; () banked
 10765  005D88  6B78               	clrf	(___wmul@multiplier+1)& (0+255),b
 10766  005D8A  C07D  F079         	movff	delay_ms@value_ms,___wmul@multiplicand
 10767  005D8E  C07E  F07A         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 10768  005D92  ECFA  F02E         	call	___wmul	;wreg free
 10769  005D96  C077  F0E4         	movff	?___wmul,_clock_counter_reference	;volatile
 10770  005D9A  C078  F0E5         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 10771                           
 10772                           ;src\delay.c: 75: while (clock_counter_reference) {
 10773  005D9E  D007               	goto	l569
 10774  005DA0                     l7164:
 10775                           
 10776                           ;src\delay.c: 85: _delay(240);
 10777  005DA0  0E50               	movlw	80
 10778  005DA2                     u9647:
 10779  005DA2  2EE8               	decfsz	wreg,f,c
 10780  005DA4  D7FE               	goto	u9647
 10781                           
 10782                           ;src\delay.c: 88: clock_counter_reference--;
 10783  005DA6  0100               	movlb	0	; () banked
 10784  005DA8  07E4               	decf	_clock_counter_reference& (0+255),f,b	;volatile
 10785  005DAA  A0D8               	btfss	status,0,c
 10786  005DAC  07E5               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
 10787  005DAE                     l569:
 10788  005DAE  0100               	movlb	0	; () banked
 10789  005DB0  51E4               	movf	_clock_counter_reference& (0+255),w,b	;volatile
 10790  005DB2  0100               	movlb	0	; () banked
 10791  005DB4  11E5               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
 10792  005DB6  B4D8               	btfsc	status,2,c
 10793  005DB8  0012               	return	
 10794  005DBA  D7F2               	goto	l7164
 10795  005DBC                     __end_of_delay_ms:
 10796                           	opt stack 0
 10797                           tblptru	equ	0xFF8
 10798                           tblptrh	equ	0xFF7
 10799                           tblptrl	equ	0xFF6
 10800                           tablat	equ	0xFF5
 10801                           prodh	equ	0xFF4
 10802                           prodl	equ	0xFF3
 10803                           postinc0	equ	0xFEE
 10804                           wreg	equ	0xFE8
 10805                           postdec1	equ	0xFE5
 10806                           fsr1l	equ	0xFE1
 10807                           indf2	equ	0xFDF
 10808                           postinc2	equ	0xFDE
 10809                           postdec2	equ	0xFDD
 10810                           fsr2h	equ	0xFDA
 10811                           fsr2l	equ	0xFD9
 10812                           status	equ	0xFD8
 10813                           
 10814 ;; *************** function ___wmul *****************
 10815 ;; Defined at:
 10816 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10817 ;; Parameters:    Size  Location     Type
 10818 ;;  multiplier      2   23[BANK0 ] unsigned int 
 10819 ;;  multiplicand    2   25[BANK0 ] unsigned int 
 10820 ;; Auto vars:     Size  Location     Type
 10821 ;;  product         2   27[BANK0 ] unsigned int 
 10822 ;; Return value:  Size  Location     Type
 10823 ;;                  2   23[BANK0 ] unsigned int 
 10824 ;; Registers used:
 10825 ;;		wreg, status,2, status,0, prodl, prodh
 10826 ;; Tracked objects:
 10827 ;;		On entry : 0/0
 10828 ;;		On exit  : 0/0
 10829 ;;		Unchanged: 0/0
 10830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10831 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10832 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10834 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10835 ;;Total ram usage:        6 bytes
 10836 ;; Hardware stack levels used:    1
 10837 ;; Hardware stack levels required when called:    4
 10838 ;; This function calls:
 10839 ;;		Nothing
 10840 ;; This function is called by:
 10841 ;;		_delay_ms
 10842 ;; This function uses a non-reentrant model
 10843 ;;
 10844                           
 10845                           	psect	text28
 10846  005DF4                     __ptext28:
 10847                           	opt stack 0
 10848  005DF4                     ___wmul:
 10849                           	opt stack 23
 10850                           
 10851                           ; BSR set to: 0
 10852                           ;incstack = 0
 10853  005DF4  0100               	movlb	0	; () banked
 10854  005DF6  5177               	movf	___wmul@multiplier& (0+255),w,b
 10855  005DF8  0100               	movlb	0	; () banked
 10856  005DFA  0379               	mulwf	___wmul@multiplicand& (0+255),b
 10857  005DFC  CFF3 F07B          	movff	prodl,___wmul@product
 10858  005E00  CFF4 F07C          	movff	prodh,___wmul@product+1
 10859  005E04  0100               	movlb	0	; () banked
 10860  005E06  5177               	movf	___wmul@multiplier& (0+255),w,b
 10861  005E08  0100               	movlb	0	; () banked
 10862  005E0A  037A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10863  005E0C  50F3               	movf	prodl,w,c
 10864  005E0E  0100               	movlb	0	; () banked
 10865  005E10  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 10866  005E12  0100               	movlb	0	; () banked
 10867  005E14  5178               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10868  005E16  0100               	movlb	0	; () banked
 10869  005E18  0379               	mulwf	___wmul@multiplicand& (0+255),b
 10870  005E1A  50F3               	movf	prodl,w,c
 10871  005E1C  0100               	movlb	0	; () banked
 10872  005E1E  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 10873                           
 10874                           ; BSR set to: 0
 10875  005E20  C07B  F077         	movff	___wmul@product,?___wmul
 10876  005E24  C07C  F078         	movff	___wmul@product+1,?___wmul+1
 10877  005E28  0012               	return	
 10878  005E2A                     __end_of___wmul:
 10879                           	opt stack 0
 10880                           tblptru	equ	0xFF8
 10881                           tblptrh	equ	0xFF7
 10882                           tblptrl	equ	0xFF6
 10883                           tablat	equ	0xFF5
 10884                           prodh	equ	0xFF4
 10885                           prodl	equ	0xFF3
 10886                           postinc0	equ	0xFEE
 10887                           wreg	equ	0xFE8
 10888                           postdec1	equ	0xFE5
 10889                           fsr1l	equ	0xFE1
 10890                           indf2	equ	0xFDF
 10891                           postinc2	equ	0xFDE
 10892                           postdec2	equ	0xFDD
 10893                           fsr2h	equ	0xFDA
 10894                           fsr2l	equ	0xFD9
 10895                           status	equ	0xFD8
 10896                           
 10897 ;; *************** function _configurazione *****************
 10898 ;; Defined at:
 10899 ;;		line 439 in file "parcheggio.c"
 10900 ;; Parameters:    Size  Location     Type
 10901 ;;		None
 10902 ;; Auto vars:     Size  Location     Type
 10903 ;;		None
 10904 ;; Return value:  Size  Location     Type
 10905 ;;		None               void
 10906 ;; Registers used:
 10907 ;;		wreg, status,2, status,0, cstack
 10908 ;; Tracked objects:
 10909 ;;		On entry : 0/0
 10910 ;;		On exit  : 0/0
 10911 ;;		Unchanged: 0/0
 10912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10917 ;;Total ram usage:        0 bytes
 10918 ;; Hardware stack levels used:    1
 10919 ;; Hardware stack levels required when called:    6
 10920 ;; This function calls:
 10921 ;;		_CANInitialize
 10922 ;; This function is called by:
 10923 ;;		_main
 10924 ;; This function uses a non-reentrant model
 10925 ;;
 10926                           
 10927                           	psect	text29
 10928  005B8C                     __ptext29:
 10929                           	opt stack 0
 10930  005B8C                     _configurazione:
 10931                           	opt stack 24
 10932                           
 10933                           ;parcheggio.c: 440: LATA = 0x00;
 10934                           
 10935                           ; BSR set to: 0
 10936                           ;incstack = 0
 10937  005B8C  0E00               	movlw	0
 10938  005B8E  6E89               	movwf	3977,c	;volatile
 10939                           
 10940                           ;parcheggio.c: 441: TRISA = 0b11110000;
 10941  005B90  0EF0               	movlw	240
 10942  005B92  6E92               	movwf	3986,c	;volatile
 10943                           
 10944                           ;parcheggio.c: 443: LATB = 0x00;
 10945  005B94  0E00               	movlw	0
 10946  005B96  6E8A               	movwf	3978,c	;volatile
 10947                           
 10948                           ;parcheggio.c: 444: TRISB = 0b10001010;
 10949  005B98  0E8A               	movlw	138
 10950  005B9A  6E93               	movwf	3987,c	;volatile
 10951                           
 10952                           ;parcheggio.c: 446: LATC = 0x00;
 10953  005B9C  0E00               	movlw	0
 10954  005B9E  6E8B               	movwf	3979,c	;volatile
 10955                           
 10956                           ;parcheggio.c: 447: TRISC = 0b11111111;
 10957  005BA0  6894               	setf	3988,c	;volatile
 10958                           
 10959                           ;parcheggio.c: 449: ADCON1 = 0xFF;
 10960  005BA2  68C1               	setf	4033,c	;volatile
 10961                           
 10962                           ;parcheggio.c: 450: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
 10963  005BA4  0E06               	movlw	6
 10964  005BA6  0100               	movlb	0	; () banked
 10965  005BA8  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 10966  005BAA  0E05               	movlw	5
 10967  005BAC  0100               	movlb	0	; () banked
 10968  005BAE  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
 10969  005BB0  0E01               	movlw	1
 10970  005BB2  0100               	movlb	0	; () banked
 10971  005BB4  6F87               	movwf	CANInitialize@SJW& (0+255),b
 10972  005BB6  0E03               	movlw	3
 10973  005BB8  0100               	movlb	0	; () banked
 10974  005BBA  6F88               	movwf	CANInitialize@BRP& (0+255),b
 10975  005BBC  0E9D               	movlw	157
 10976  005BBE  0100               	movlb	0	; () banked
 10977  005BC0  6F89               	movwf	CANInitialize@flags& (0+255),b
 10978  005BC2  0E04               	movlw	4
 10979  005BC4  EC9E  F027         	call	_CANInitialize
 10980                           
 10981                           ;parcheggio.c: 452: RCONbits.IPEN = 1;
 10982  005BC8  8ED0               	bsf	4048,7,c	;volatile
 10983                           
 10984                           ;parcheggio.c: 453: PIR3bits.RXB1IF = 0;
 10985  005BCA  92A4               	bcf	4004,1,c	;volatile
 10986                           
 10987                           ;parcheggio.c: 454: PIR3bits.RXB0IF = 0;
 10988  005BCC  90A4               	bcf	4004,0,c	;volatile
 10989                           
 10990                           ;parcheggio.c: 455: IPR3bits.RXB1IP = 0;
 10991  005BCE  92A5               	bcf	4005,1,c	;volatile
 10992                           
 10993                           ;parcheggio.c: 456: IPR3bits.RXB0IP = 0;
 10994  005BD0  90A5               	bcf	4005,0,c	;volatile
 10995                           
 10996                           ;parcheggio.c: 457: PIE3bits.RXB1IE = 1;
 10997  005BD2  82A3               	bsf	4003,1,c	;volatile
 10998                           
 10999                           ;parcheggio.c: 458: PIE3bits.RXB0IE = 1;
 11000  005BD4  80A3               	bsf	4003,0,c	;volatile
 11001                           
 11002                           ;parcheggio.c: 459: INTCON2bits.TMR0IP = 0;
 11003  005BD6  94F1               	bcf	intcon2,2,c	;volatile
 11004                           
 11005                           ;parcheggio.c: 460: T0CON = 0x80;
 11006  005BD8  0E80               	movlw	128
 11007  005BDA  6ED5               	movwf	4053,c	;volatile
 11008                           
 11009                           ;parcheggio.c: 461: T3CON = 0x11;
 11010  005BDC  0E11               	movlw	17
 11011  005BDE  6EB1               	movwf	4017,c	;volatile
 11012                           
 11013                           ;parcheggio.c: 462: TMR0H = 0x34;
 11014  005BE0  0E34               	movlw	52
 11015  005BE2  6ED7               	movwf	4055,c	;volatile
 11016                           
 11017                           ;parcheggio.c: 463: TMR0L = 0xE0;
 11018  005BE4  0EE0               	movlw	224
 11019  005BE6  6ED6               	movwf	4054,c	;volatile
 11020                           
 11021                           ;parcheggio.c: 464: INTCONbits.TMR0IF = 0;
 11022  005BE8  94F2               	bcf	intcon,2,c	;volatile
 11023                           
 11024                           ;parcheggio.c: 465: INTCONbits.TMR0IE = 1;
 11025  005BEA  8AF2               	bsf	intcon,5,c	;volatile
 11026                           
 11027                           ;parcheggio.c: 466: INTCON2bits.INTEDG0 = 1;
 11028  005BEC  8CF1               	bsf	intcon2,6,c	;volatile
 11029                           
 11030                           ;parcheggio.c: 467: INTCONbits.INT0IF = 0;
 11031  005BEE  92F2               	bcf	intcon,1,c	;volatile
 11032                           
 11033                           ;parcheggio.c: 468: INTCONbits.INT0IE = 0;
 11034  005BF0  98F2               	bcf	intcon,4,c	;volatile
 11035                           
 11036                           ;parcheggio.c: 469: INTCONbits.GIEL = 1;
 11037  005BF2  8CF2               	bsf	intcon,6,c	;volatile
 11038                           
 11039                           ;parcheggio.c: 470: INTCONbits.GIEH = 1;
 11040  005BF4  8EF2               	bsf	intcon,7,c	;volatile
 11041  005BF6  0012               	return		;funcret
 11042  005BF8                     __end_of_configurazione:
 11043                           	opt stack 0
 11044                           tblptru	equ	0xFF8
 11045                           tblptrh	equ	0xFF7
 11046                           tblptrl	equ	0xFF6
 11047                           tablat	equ	0xFF5
 11048                           prodh	equ	0xFF4
 11049                           prodl	equ	0xFF3
 11050                           intcon	equ	0xFF2
 11051                           intcon2	equ	0xFF1
 11052                           postinc0	equ	0xFEE
 11053                           wreg	equ	0xFE8
 11054                           postdec1	equ	0xFE5
 11055                           fsr1l	equ	0xFE1
 11056                           indf2	equ	0xFDF
 11057                           postinc2	equ	0xFDE
 11058                           postdec2	equ	0xFDD
 11059                           fsr2h	equ	0xFDA
 11060                           fsr2l	equ	0xFD9
 11061                           status	equ	0xFD8
 11062                           
 11063 ;; *************** function _CANInitialize *****************
 11064 ;; Defined at:
 11065 ;;		line 218 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 11066 ;; Parameters:    Size  Location     Type
 11067 ;;  propSeg         1    wreg     unsigned char 
 11068 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
 11069 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
 11070 ;;  SJW             1   39[BANK0 ] unsigned char 
 11071 ;;  BRP             1   40[BANK0 ] unsigned char 
 11072 ;;  flags           1   41[BANK0 ] enum E16313
 11073 ;; Auto vars:     Size  Location     Type
 11074 ;;  propSeg         1   46[BANK0 ] unsigned char 
 11075 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
 11076 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
 11077 ;; Return value:  Size  Location     Type
 11078 ;;		None               void
 11079 ;; Registers used:
 11080 ;;		wreg, status,2, status,0, cstack
 11081 ;; Tracked objects:
 11082 ;;		On entry : 0/0
 11083 ;;		On exit  : 0/0
 11084 ;;		Unchanged: 0/0
 11085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11086 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11087 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11088 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11089 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11090 ;;Total ram usage:       12 bytes
 11091 ;; Hardware stack levels used:    1
 11092 ;; Hardware stack levels required when called:    5
 11093 ;; This function calls:
 11094 ;;		_CANOperationMode
 11095 ;;		_CANSetFilter
 11096 ;;		_CANSetMask
 11097 ;; This function is called by:
 11098 ;;		_configurazione
 11099 ;; This function uses a non-reentrant model
 11100 ;;
 11101                           
 11102                           	psect	text30
 11103  004F3C                     __ptext30:
 11104                           	opt stack 0
 11105  004F3C                     _CANInitialize:
 11106                           	opt stack 24
 11107                           
 11108                           ;incstack = 0
 11109                           ;CANInitialize@propSeg stored from wreg
 11110  004F3C  0100               	movlb	0	; () banked
 11111  004F3E  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
 11112                           
 11113                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
 11114                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
 11115                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
 11116  004F40  0E80               	movlw	128
 11117  004F42  EC53  F02F         	call	_CANOperationMode
 11118                           
 11119                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
 11120  004F46  0E00               	movlw	0
 11121  004F48  6E70               	movwf	3952,c	;volatile
 11122                           
 11123                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
 11124  004F4A  0E00               	movlw	0
 11125  004F4C  6E71               	movwf	3953,c	;volatile
 11126                           
 11127                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
 11128  004F4E  0E00               	movlw	0
 11129  004F50  6E72               	movwf	3954,c	;volatile
 11130                           
 11131                           ;inc\CANlib.h: 229: SJW= SJW << 6;
 11132  004F52  0100               	movlb	0	; () banked
 11133  004F54  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
 11134  004F56  42E8               	rrncf	wreg,f,c
 11135  004F58  0BC0               	andlw	192
 11136  004F5A  0100               	movlb	0	; () banked
 11137  004F5C  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11138                           
 11139                           ; BSR set to: 0
 11140                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
 11141  004F5E  0100               	movlb	0	; () banked
 11142  004F60  5187               	movf	CANInitialize@SJW& (0+255),w,b
 11143  004F62  1270               	iorwf	3952,f,c	;volatile
 11144                           
 11145                           ; BSR set to: 0
 11146                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
 11147  004F64  0100               	movlb	0	; () banked
 11148  004F66  5188               	movf	CANInitialize@BRP& (0+255),w,b
 11149  004F68  1270               	iorwf	3952,f,c	;volatile
 11150                           
 11151                           ; BSR set to: 0
 11152                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
 11153  004F6A  0100               	movlb	0	; () banked
 11154  004F6C  518E               	movf	CANInitialize@propSeg& (0+255),w,b
 11155  004F6E  1271               	iorwf	3953,f,c	;volatile
 11156                           
 11157                           ; BSR set to: 0
 11158                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
 11159  004F70  0100               	movlb	0	; () banked
 11160  004F72  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
 11161  004F74  42E8               	rrncf	wreg,f,c
 11162  004F76  0BF8               	andlw	248
 11163  004F78  0100               	movlb	0	; () banked
 11164  004F7A  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11165                           
 11166                           ; BSR set to: 0
 11167                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
 11168  004F7C  0100               	movlb	0	; () banked
 11169  004F7E  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
 11170  004F80  1271               	iorwf	3953,f,c	;volatile
 11171                           
 11172                           ; BSR set to: 0
 11173                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
 11174  004F82  0100               	movlb	0	; () banked
 11175  004F84  A589               	btfss	CANInitialize@flags& (0+255),2,b
 11176                           
 11177                           ; BSR set to: 0
 11178                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
 11179  004F86  8C71               	bsf	3953,6,c	;volatile
 11180                           
 11181                           ; BSR set to: 0
 11182                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
 11183  004F88  0100               	movlb	0	; () banked
 11184  004F8A  B189               	btfsc	CANInitialize@flags& (0+255),0,b
 11185                           
 11186                           ; BSR set to: 0
 11187                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
 11188  004F8C  8E71               	bsf	3953,7,c	;volatile
 11189                           
 11190                           ; BSR set to: 0
 11191                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
 11192                           
 11193                           ; BSR set to: 0
 11194  004F8E  0100               	movlb	0	; () banked
 11195  004F90  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
 11196  004F92  1272               	iorwf	3954,f,c	;volatile
 11197                           
 11198                           ; BSR set to: 0
 11199                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
 11200  004F94  0100               	movlb	0	; () banked
 11201  004F96  B389               	btfsc	CANInitialize@flags& (0+255),1,b
 11202                           
 11203                           ; BSR set to: 0
 11204                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
 11205  004F98  8C72               	bsf	3954,6,c	;volatile
 11206                           
 11207                           ; BSR set to: 0
 11208                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
 11209                           
 11210                           ; BSR set to: 0
 11211  004F9A  0100               	movlb	0	; () banked
 11212  004F9C  5189               	movf	CANInitialize@flags& (0+255),w,b
 11213  004F9E  0B60               	andlw	96
 11214  004FA0  6E60               	movwf	3936,c	;volatile
 11215                           
 11216                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
 11217  004FA2  0100               	movlb	0	; () banked
 11218  004FA4  5189               	movf	CANInitialize@flags& (0+255),w,b
 11219  004FA6  0B10               	andlw	16
 11220  004FA8  0AFF               	xorlw	255
 11221  004FAA  B4D8               	btfsc	status,2,c
 11222                           
 11223                           ; BSR set to: 0
 11224                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
 11225  004FAC  8460               	bsf	3936,2,c	;volatile
 11226                           
 11227                           ; BSR set to: 0
 11228                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
 11229  004FAE  CF60 FF50          	movff	3936,3920	;volatile
 11230                           
 11231                           ; BSR set to: 0
 11232                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
 11233  004FB2  0E00               	movlw	0
 11234  004FB4  0100               	movlb	0	; () banked
 11235  004FB6  6F77               	movwf	CANSetMask@mask& (0+255),b
 11236  004FB8  0E00               	movlw	0
 11237  004FBA  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11238  004FBC  0E00               	movlw	0
 11239  004FBE  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11240  004FC0  0E00               	movlw	0
 11241  004FC2  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11242  004FC4  0EF7               	movlw	247
 11243  004FC6  0100               	movlb	0	; () banked
 11244  004FC8  6F7B               	movwf	CANSetMask@type& (0+255),b
 11245  004FCA  0E01               	movlw	1
 11246  004FCC  EC64  F01F         	call	_CANSetMask
 11247                           
 11248                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
 11249  004FD0  0E00               	movlw	0
 11250  004FD2  0100               	movlb	0	; () banked
 11251  004FD4  6F77               	movwf	CANSetMask@mask& (0+255),b
 11252  004FD6  0E00               	movlw	0
 11253  004FD8  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11254  004FDA  0E00               	movlw	0
 11255  004FDC  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11256  004FDE  0E00               	movlw	0
 11257  004FE0  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11258  004FE2  0EF7               	movlw	247
 11259  004FE4  0100               	movlb	0	; () banked
 11260  004FE6  6F7B               	movwf	CANSetMask@type& (0+255),b
 11261  004FE8  0E02               	movlw	2
 11262  004FEA  EC64  F01F         	call	_CANSetMask
 11263                           
 11264                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
 11265  004FEE  D00F               	goto	l5448
 11266  004FF0                     l5442:
 11267                           
 11268                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
 11269  004FF0  0EF7               	movlw	247
 11270  004FF2  0100               	movlb	0	; () banked
 11271  004FF4  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
 11272  004FF6  D007               	goto	l5444
 11273  004FF8                     l358:
 11274                           
 11275                           ; BSR set to: 0
 11276                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11277  004FF8  0100               	movlb	0	; () banked
 11278  004FFA  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11279                           
 11280                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
 11281  004FFC  0100               	movlb	0	; () banked
 11282  004FFE  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
 11283                           
 11284                           ;inc\CANlib.h: 273: break;
 11285  005000  D028               	goto	l5450
 11286  005002                     l359:
 11287                           
 11288                           ; BSR set to: 0
 11289                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11290  005002  0100               	movlb	0	; () banked
 11291  005004  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11292  005006                     l5444:
 11293                           
 11294                           ; BSR set to: 0
 11295                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
 11296  005006  0EF7               	movlw	247
 11297  005008  0100               	movlb	0	; () banked
 11298  00500A  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
 11299                           
 11300                           ; BSR set to: 0
 11301                           ;inc\CANlib.h: 278: }
 11302                           
 11303                           ;inc\CANlib.h: 277: break;
 11304  00500C  D022               	goto	l5450
 11305  00500E                     l5448:
 11306  00500E  0E9F               	movlw	159
 11307  005010  0100               	movlb	0	; () banked
 11308  005012  6F8A               	movwf	??_CANInitialize& (0+255),b
 11309  005014  0EFF               	movlw	255
 11310  005016  0100               	movlb	0	; () banked
 11311  005018  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
 11312  00501A  0100               	movlb	0	; () banked
 11313  00501C  5189               	movf	CANInitialize@flags& (0+255),w,b
 11314  00501E  0B60               	andlw	96
 11315  005020  0100               	movlb	0	; () banked
 11316  005022  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
 11317  005024  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
 11318  005026  0100               	movlb	0	; () banked
 11319  005028  518A               	movf	??_CANInitialize& (0+255),w,b
 11320  00502A  0100               	movlb	0	; () banked
 11321  00502C  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
 11322  00502E  0100               	movlb	0	; () banked
 11323  005030  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
 11324  005032  0100               	movlb	0	; () banked
 11325  005034  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
 11326                           
 11327                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11328                           ; Switch size 1, requested type "space"
 11329                           ; Number of cases is 1, Range of values is 0 to 0
 11330                           ; switch strategies available:
 11331                           ; Name         Instructions Cycles
 11332                           ; simple_byte            4     3 (average)
 11333                           ;	Chosen strategy is simple_byte
 11334  005036  0100               	movlb	0	; () banked
 11335  005038  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
 11336  00503A  0A00               	xorlw	0	; case 0
 11337  00503C  A4D8               	btfss	status,2,c
 11338  00503E  D7E1               	goto	l359
 11339                           
 11340                           ; BSR set to: 0
 11341                           ; Switch size 1, requested type "space"
 11342                           ; Number of cases is 2, Range of values is 191 to 223
 11343                           ; switch strategies available:
 11344                           ; Name         Instructions Cycles
 11345                           ; simple_byte            7     4 (average)
 11346                           ;	Chosen strategy is simple_byte
 11347  005040  0100               	movlb	0	; () banked
 11348  005042  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
 11349  005044  0ABF               	xorlw	191	; case 191
 11350  005046  B4D8               	btfsc	status,2,c
 11351  005048  D7D7               	goto	l358
 11352  00504A  0A60               	xorlw	96	; case 223
 11353  00504C  B4D8               	btfsc	status,2,c
 11354  00504E  D7D0               	goto	l5442
 11355  005050  D7D8               	goto	l359
 11356  005052                     l5450:
 11357                           
 11358                           ; BSR set to: 0
 11359                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
 11360  005052  0E00               	movlw	0
 11361  005054  0100               	movlb	0	; () banked
 11362  005056  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11363  005058  0E00               	movlw	0
 11364  00505A  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11365  00505C  0E00               	movlw	0
 11366  00505E  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11367  005060  0E00               	movlw	0
 11368  005062  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11369  005064  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11370  005068  0E00               	movlw	0
 11371  00506A  ECA9  F006         	call	_CANSetFilter
 11372                           
 11373                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
 11374  00506E  0E00               	movlw	0
 11375  005070  0100               	movlb	0	; () banked
 11376  005072  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11377  005074  0E00               	movlw	0
 11378  005076  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11379  005078  0E00               	movlw	0
 11380  00507A  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11381  00507C  0E00               	movlw	0
 11382  00507E  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11383  005080  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11384  005084  0E01               	movlw	1
 11385  005086  ECA9  F006         	call	_CANSetFilter
 11386                           
 11387                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
 11388  00508A  0E00               	movlw	0
 11389  00508C  0100               	movlb	0	; () banked
 11390  00508E  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11391  005090  0E00               	movlw	0
 11392  005092  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11393  005094  0E00               	movlw	0
 11394  005096  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11395  005098  0E00               	movlw	0
 11396  00509A  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11397  00509C  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11398  0050A0  0E02               	movlw	2
 11399  0050A2  ECA9  F006         	call	_CANSetFilter
 11400                           
 11401                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
 11402  0050A6  0E00               	movlw	0
 11403  0050A8  0100               	movlb	0	; () banked
 11404  0050AA  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11405  0050AC  0E00               	movlw	0
 11406  0050AE  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11407  0050B0  0E00               	movlw	0
 11408  0050B2  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11409  0050B4  0E00               	movlw	0
 11410  0050B6  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11411  0050B8  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11412  0050BC  0E03               	movlw	3
 11413  0050BE  ECA9  F006         	call	_CANSetFilter
 11414                           
 11415                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
 11416  0050C2  0E00               	movlw	0
 11417  0050C4  0100               	movlb	0	; () banked
 11418  0050C6  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11419  0050C8  0E00               	movlw	0
 11420  0050CA  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11421  0050CC  0E00               	movlw	0
 11422  0050CE  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11423  0050D0  0E00               	movlw	0
 11424  0050D2  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11425  0050D4  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11426  0050D8  0E04               	movlw	4
 11427  0050DA  ECA9  F006         	call	_CANSetFilter
 11428                           
 11429                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
 11430  0050DE  0E00               	movlw	0
 11431  0050E0  0100               	movlb	0	; () banked
 11432  0050E2  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11433  0050E4  0E00               	movlw	0
 11434  0050E6  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11435  0050E8  0E00               	movlw	0
 11436  0050EA  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11437  0050EC  0E00               	movlw	0
 11438  0050EE  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11439  0050F0  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11440  0050F4  0E05               	movlw	5
 11441  0050F6  ECA9  F006         	call	_CANSetFilter
 11442                           
 11443                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
 11444  0050FA  0E00               	movlw	0
 11445  0050FC  EC53  F02F         	call	_CANOperationMode
 11446  005100  0012               	return		;funcret
 11447  005102                     __end_of_CANInitialize:
 11448                           	opt stack 0
 11449                           tblptru	equ	0xFF8
 11450                           tblptrh	equ	0xFF7
 11451                           tblptrl	equ	0xFF6
 11452                           tablat	equ	0xFF5
 11453                           prodh	equ	0xFF4
 11454                           prodl	equ	0xFF3
 11455                           intcon	equ	0xFF2
 11456                           intcon2	equ	0xFF1
 11457                           postinc0	equ	0xFEE
 11458                           wreg	equ	0xFE8
 11459                           postdec1	equ	0xFE5
 11460                           fsr1l	equ	0xFE1
 11461                           indf2	equ	0xFDF
 11462                           postinc2	equ	0xFDE
 11463                           postdec2	equ	0xFDD
 11464                           fsr2h	equ	0xFDA
 11465                           fsr2l	equ	0xFD9
 11466                           status	equ	0xFD8
 11467                           
 11468 ;; *************** function _CANSetMask *****************
 11469 ;; Defined at:
 11470 ;;		line 640 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 11471 ;; Parameters:    Size  Location     Type
 11472 ;;  numBuffer       1    wreg     enum E16347
 11473 ;;  mask            4   23[BANK0 ] unsigned long 
 11474 ;;  type            1   27[BANK0 ] enum E16313
 11475 ;; Auto vars:     Size  Location     Type
 11476 ;;  numBuffer       1   32[BANK0 ] enum E16347
 11477 ;;  tamp            4   33[BANK0 ] unsigned long 
 11478 ;; Return value:  Size  Location     Type
 11479 ;;		None               void
 11480 ;; Registers used:
 11481 ;;		wreg, status,2, status,0
 11482 ;; Tracked objects:
 11483 ;;		On entry : 0/0
 11484 ;;		On exit  : 0/0
 11485 ;;		Unchanged: 0/0
 11486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11487 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11488 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11489 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11490 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11491 ;;Total ram usage:       14 bytes
 11492 ;; Hardware stack levels used:    1
 11493 ;; Hardware stack levels required when called:    4
 11494 ;; This function calls:
 11495 ;;		Nothing
 11496 ;; This function is called by:
 11497 ;;		_CANInitialize
 11498 ;; This function uses a non-reentrant model
 11499 ;;
 11500                           
 11501                           	psect	text31
 11502  003EC8                     __ptext31:
 11503                           	opt stack 0
 11504  003EC8                     _CANSetMask:
 11505                           	opt stack 24
 11506                           
 11507                           ;incstack = 0
 11508                           ;CANSetMask@numBuffer stored from wreg
 11509  003EC8  0100               	movlb	0	; () banked
 11510  003ECA  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
 11511                           
 11512                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
 11513  003ECC  0100               	movlb	0	; () banked
 11514  003ECE  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11515  003ED0  A4D8               	btfss	status,2,c
 11516  003ED2  D056               	goto	l4918
 11517                           
 11518                           ; BSR set to: 0
 11519  003ED4  0100               	movlb	0	; () banked
 11520  003ED6  297B               	incf	CANSetMask@type& (0+255),w,b
 11521  003ED8  A4D8               	btfss	status,2,c
 11522  003EDA  D052               	goto	l4918
 11523                           
 11524                           ; BSR set to: 0
 11525                           ;inc\CANlib.h: 644: {
 11526                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
 11527  003EDC  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11528  003EE0  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11529  003EE4  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11530  003EE8  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11531  003EEC  0E04               	movlw	4
 11532  003EEE  D006               	goto	u5500
 11533  003EF0                     u5505:
 11534  003EF0  0100               	movlb	0	; () banked
 11535  003EF2  90D8               	bcf	status,0,c
 11536  003EF4  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11537  003EF6  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11538  003EF8  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11539  003EFA  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11540  003EFC                     u5500:
 11541  003EFC  2EE8               	decfsz	wreg,f,c
 11542  003EFE  D7F8               	goto	u5505
 11543  003F00  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11544  003F04  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11545  003F08  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11546  003F0C  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11547                           
 11548                           ; BSR set to: 0
 11549                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
 11550  003F10  0100               	movlb	0	; () banked
 11551  003F12  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11552  003F14  0100               	movlb	0	; () banked
 11553  003F16  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11554  003F18  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11555  003F1A  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11556  003F1C  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11557                           
 11558                           ; BSR set to: 0
 11559                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
 11560  003F1E  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11561                           
 11562                           ; BSR set to: 0
 11563                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
 11564  003F22  0E07               	movlw	7
 11565  003F24  0100               	movlb	0	; () banked
 11566  003F26  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11567  003F28  0100               	movlb	0	; () banked
 11568  003F2A  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11569  003F2C  0E00               	movlw	0
 11570  003F2E  0100               	movlb	0	; () banked
 11571  003F30  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11572  003F32  0100               	movlb	0	; () banked
 11573  003F34  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11574  003F36  0E00               	movlw	0
 11575  003F38  0100               	movlb	0	; () banked
 11576  003F3A  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11577  003F3C  0100               	movlb	0	; () banked
 11578  003F3E  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11579  003F40  0E00               	movlw	0
 11580  003F42  0100               	movlb	0	; () banked
 11581  003F44  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11582  003F46  0100               	movlb	0	; () banked
 11583  003F48  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11584                           
 11585                           ; BSR set to: 0
 11586                           ;inc\CANlib.h: 650: tamp = tamp << 5;
 11587  003F4A  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11588  003F4E  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11589  003F52  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11590  003F56  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11591  003F5A  0E05               	movlw	5
 11592  003F5C                     u5515:
 11593  003F5C  90D8               	bcf	status,0,c
 11594  003F5E  0100               	movlb	0	; () banked
 11595  003F60  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11596  003F62  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11597  003F64  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11598  003F66  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11599  003F68  2EE8               	decfsz	wreg,f,c
 11600  003F6A  D7F8               	goto	u5515
 11601  003F6C  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11602  003F70  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11603  003F74  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11604  003F78  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11605                           
 11606                           ; BSR set to: 0
 11607                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
 11608  003F7C  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
 11609  003F80                     l4918:
 11610                           
 11611                           ; BSR set to: 0
 11612                           ;inc\CANlib.h: 652: }
 11613                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
 11614  003F80  0E02               	movlw	2
 11615  003F82  0100               	movlb	0	; () banked
 11616  003F84  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11617  003F86  A4D8               	btfss	status,2,c
 11618  003F88  D056               	goto	l4934
 11619                           
 11620                           ; BSR set to: 0
 11621  003F8A  0100               	movlb	0	; () banked
 11622  003F8C  297B               	incf	CANSetMask@type& (0+255),w,b
 11623  003F8E  A4D8               	btfss	status,2,c
 11624  003F90  D052               	goto	l4934
 11625                           
 11626                           ; BSR set to: 0
 11627                           ;inc\CANlib.h: 655: {
 11628                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
 11629  003F92  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11630  003F96  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11631  003F9A  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11632  003F9E  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11633  003FA2  0E04               	movlw	4
 11634  003FA4  D006               	goto	u5540
 11635  003FA6                     u5545:
 11636  003FA6  0100               	movlb	0	; () banked
 11637  003FA8  90D8               	bcf	status,0,c
 11638  003FAA  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11639  003FAC  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11640  003FAE  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11641  003FB0  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11642  003FB2                     u5540:
 11643  003FB2  2EE8               	decfsz	wreg,f,c
 11644  003FB4  D7F8               	goto	u5545
 11645  003FB6  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11646  003FBA  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11647  003FBE  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11648  003FC2  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11649                           
 11650                           ; BSR set to: 0
 11651                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
 11652  003FC6  0100               	movlb	0	; () banked
 11653  003FC8  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11654  003FCA  0100               	movlb	0	; () banked
 11655  003FCC  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11656  003FCE  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11657  003FD0  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11658  003FD2  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11659                           
 11660                           ; BSR set to: 0
 11661                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
 11662  003FD4  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11663                           
 11664                           ; BSR set to: 0
 11665                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
 11666  003FD8  0E07               	movlw	7
 11667  003FDA  0100               	movlb	0	; () banked
 11668  003FDC  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11669  003FDE  0100               	movlb	0	; () banked
 11670  003FE0  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11671  003FE2  0E00               	movlw	0
 11672  003FE4  0100               	movlb	0	; () banked
 11673  003FE6  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11674  003FE8  0100               	movlb	0	; () banked
 11675  003FEA  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11676  003FEC  0E00               	movlw	0
 11677  003FEE  0100               	movlb	0	; () banked
 11678  003FF0  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11679  003FF2  0100               	movlb	0	; () banked
 11680  003FF4  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11681  003FF6  0E00               	movlw	0
 11682  003FF8  0100               	movlb	0	; () banked
 11683  003FFA  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11684  003FFC  0100               	movlb	0	; () banked
 11685  003FFE  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11686                           
 11687                           ; BSR set to: 0
 11688                           ;inc\CANlib.h: 661: tamp = tamp << 5;
 11689  004000  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11690  004004  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11691  004008  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11692  00400C  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11693  004010  0E05               	movlw	5
 11694  004012                     u5555:
 11695  004012  90D8               	bcf	status,0,c
 11696  004014  0100               	movlb	0	; () banked
 11697  004016  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11698  004018  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11699  00401A  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11700  00401C  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11701  00401E  2EE8               	decfsz	wreg,f,c
 11702  004020  D7F8               	goto	u5555
 11703  004022  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11704  004026  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11705  00402A  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11706  00402E  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11707                           
 11708                           ; BSR set to: 0
 11709                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
 11710  004032  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
 11711  004036                     l4934:
 11712                           
 11713                           ; BSR set to: 0
 11714                           ;inc\CANlib.h: 663: }
 11715                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
 11716  004036  0100               	movlb	0	; () banked
 11717  004038  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11718  00403A  A4D8               	btfss	status,2,c
 11719  00403C  D087               	goto	l4966
 11720                           
 11721                           ; BSR set to: 0
 11722  00403E  0EF7               	movlw	247
 11723  004040  0100               	movlb	0	; () banked
 11724  004042  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11725  004044  A4D8               	btfss	status,2,c
 11726  004046  D082               	goto	l4966
 11727                           
 11728                           ; BSR set to: 0
 11729                           ;inc\CANlib.h: 666: {
 11730                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
 11731  004048  0100               	movlb	0	; () banked
 11732  00404A  5177               	movf	CANSetMask@mask& (0+255),w,b
 11733  00404C  0100               	movlb	0	; () banked
 11734  00404E  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11735  004050  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11736  004052  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11737  004054  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11738                           
 11739                           ; BSR set to: 0
 11740                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
 11741  004056  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
 11742                           
 11743                           ; BSR set to: 0
 11744                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
 11745  00405A  0E00               	movlw	0
 11746  00405C  0100               	movlb	0	; () banked
 11747  00405E  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11748  004060  0100               	movlb	0	; () banked
 11749  004062  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11750  004064  0EFF               	movlw	255
 11751  004066  0100               	movlb	0	; () banked
 11752  004068  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11753  00406A  0100               	movlb	0	; () banked
 11754  00406C  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11755  00406E  0E00               	movlw	0
 11756  004070  0100               	movlb	0	; () banked
 11757  004072  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11758  004074  0100               	movlb	0	; () banked
 11759  004076  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11760  004078  0E00               	movlw	0
 11761  00407A  0100               	movlb	0	; () banked
 11762  00407C  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11763  00407E  0100               	movlb	0	; () banked
 11764  004080  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11765                           
 11766                           ; BSR set to: 0
 11767                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
 11768  004082  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11769  004086  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11770  00408A  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11771  00408E  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11772  004092  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 11773  004096  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 11774  00409A  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 11775  00409E  0100               	movlb	0	; () banked
 11776  0040A0  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 11777  0040A2  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11778  0040A6  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11779  0040AA  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11780  0040AE  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11781                           
 11782                           ; BSR set to: 0
 11783                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
 11784  0040B2  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
 11785                           
 11786                           ; BSR set to: 0
 11787                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
 11788  0040B6  0100               	movlb	0	; () banked
 11789  0040B8  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 11790  0040BA  D003               	goto	l432
 11791                           
 11792                           ; BSR set to: 0
 11793                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
 11794  0040BC  010F               	movlb	15	; () banked
 11795  0040BE  8119               	bsf	25,0,b	;volatile
 11796  0040C0  D002               	goto	l433
 11797  0040C2                     l432:
 11798                           
 11799                           ; BSR set to: 0
 11800                           ;inc\CANlib.h: 676: else
 11801                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
 11802  0040C2  010F               	movlb	15	; () banked
 11803  0040C4  9119               	bcf	25,0,b	;volatile
 11804  0040C6                     l433:
 11805                           
 11806                           ; BSR set to: 15
 11807                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
 11808  0040C6  0100               	movlb	0	; () banked
 11809  0040C8  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 11810  0040CA  D003               	goto	l434
 11811                           
 11812                           ; BSR set to: 0
 11813                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
 11814  0040CC  010F               	movlb	15	; () banked
 11815  0040CE  8319               	bsf	25,1,b	;volatile
 11816  0040D0  D002               	goto	l435
 11817  0040D2                     l434:
 11818                           
 11819                           ; BSR set to: 0
 11820                           ;inc\CANlib.h: 681: else
 11821                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
 11822  0040D2  010F               	movlb	15	; () banked
 11823  0040D4  9319               	bcf	25,1,b	;volatile
 11824  0040D6                     l435:
 11825                           
 11826                           ; BSR set to: 15
 11827                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
 11828  0040D6  0100               	movlb	0	; () banked
 11829  0040D8  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 11830  0040DA  D003               	goto	l436
 11831                           
 11832                           ; BSR set to: 0
 11833                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
 11834  0040DC  010F               	movlb	15	; () banked
 11835  0040DE  8B19               	bsf	25,5,b	;volatile
 11836  0040E0  D002               	goto	l437
 11837  0040E2                     l436:
 11838                           
 11839                           ; BSR set to: 0
 11840                           ;inc\CANlib.h: 686: else
 11841                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
 11842  0040E2  010F               	movlb	15	; () banked
 11843  0040E4  9B19               	bcf	25,5,b	;volatile
 11844  0040E6                     l437:
 11845                           
 11846                           ; BSR set to: 15
 11847                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
 11848  0040E6  0100               	movlb	0	; () banked
 11849  0040E8  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 11850  0040EA  D003               	goto	l438
 11851                           
 11852                           ; BSR set to: 0
 11853                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
 11854  0040EC  010F               	movlb	15	; () banked
 11855  0040EE  8D19               	bsf	25,6,b	;volatile
 11856  0040F0  D002               	goto	l439
 11857  0040F2                     l438:
 11858                           
 11859                           ; BSR set to: 0
 11860                           ;inc\CANlib.h: 691: else
 11861                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
 11862  0040F2  010F               	movlb	15	; () banked
 11863  0040F4  9D19               	bcf	25,6,b	;volatile
 11864  0040F6                     l439:
 11865                           
 11866                           ; BSR set to: 15
 11867                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
 11868  0040F6  0100               	movlb	0	; () banked
 11869  0040F8  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 11870  0040FA  D003               	goto	l440
 11871                           
 11872                           ; BSR set to: 0
 11873                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
 11874  0040FC  010F               	movlb	15	; () banked
 11875  0040FE  8F19               	bsf	25,7,b	;volatile
 11876  004100  D002               	goto	l4960
 11877  004102                     l440:
 11878                           
 11879                           ; BSR set to: 0
 11880                           ;inc\CANlib.h: 696: else
 11881                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
 11882  004102  010F               	movlb	15	; () banked
 11883  004104  9F19               	bcf	25,7,b	;volatile
 11884  004106                     l4960:
 11885                           
 11886                           ; BSR set to: 15
 11887                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
 11888  004106  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11889  00410A  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11890  00410E  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11891  004112  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11892  004116  0E16               	movlw	22
 11893  004118  D006               	goto	u5630
 11894  00411A                     u5635:
 11895  00411A  0100               	movlb	0	; () banked
 11896  00411C  90D8               	bcf	status,0,c
 11897  00411E  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11898  004120  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11899  004122  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11900  004124  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11901  004126                     u5630:
 11902  004126  2EE8               	decfsz	wreg,f,c
 11903  004128  D7F8               	goto	u5635
 11904  00412A  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11905  00412E  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11906  004132  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11907  004136  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11908                           
 11909                           ; BSR set to: 0
 11910                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
 11911  00413A  0100               	movlb	0	; () banked
 11912  00413C  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11913  00413E  0100               	movlb	0	; () banked
 11914  004140  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11915  004142  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11916  004144  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11917  004146  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11918                           
 11919                           ; BSR set to: 0
 11920                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
 11921  004148  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11922  00414C                     l4966:
 11923                           
 11924                           ; BSR set to: 0
 11925                           ;inc\CANlib.h: 702: }
 11926                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
 11927  00414C  0E02               	movlw	2
 11928  00414E  0100               	movlb	0	; () banked
 11929  004150  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11930  004152  A4D8               	btfss	status,2,c
 11931  004154  0012               	return	
 11932                           
 11933                           ; BSR set to: 0
 11934  004156  0EF7               	movlw	247
 11935  004158  0100               	movlb	0	; () banked
 11936  00415A  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11937  00415C  A4D8               	btfss	status,2,c
 11938  00415E  0012               	return	
 11939                           
 11940                           ; BSR set to: 0
 11941                           ;inc\CANlib.h: 705: {
 11942                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
 11943  004160  0100               	movlb	0	; () banked
 11944  004162  5177               	movf	CANSetMask@mask& (0+255),w,b
 11945  004164  0100               	movlb	0	; () banked
 11946  004166  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11947  004168  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11948  00416A  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11949  00416C  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11950                           
 11951                           ; BSR set to: 0
 11952                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
 11953  00416E  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
 11954                           
 11955                           ; BSR set to: 0
 11956                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
 11957  004172  0E00               	movlw	0
 11958  004174  0100               	movlb	0	; () banked
 11959  004176  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11960  004178  0100               	movlb	0	; () banked
 11961  00417A  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11962  00417C  0EFF               	movlw	255
 11963  00417E  0100               	movlb	0	; () banked
 11964  004180  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11965  004182  0100               	movlb	0	; () banked
 11966  004184  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11967  004186  0E00               	movlw	0
 11968  004188  0100               	movlb	0	; () banked
 11969  00418A  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11970  00418C  0100               	movlb	0	; () banked
 11971  00418E  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11972  004190  0E00               	movlw	0
 11973  004192  0100               	movlb	0	; () banked
 11974  004194  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11975  004196  0100               	movlb	0	; () banked
 11976  004198  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11977                           
 11978                           ; BSR set to: 0
 11979                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
 11980  00419A  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11981  00419E  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11982  0041A2  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11983  0041A6  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11984  0041AA  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 11985  0041AE  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 11986  0041B2  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 11987  0041B6  0100               	movlb	0	; () banked
 11988  0041B8  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 11989  0041BA  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11990  0041BE  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11991  0041C2  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11992  0041C6  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11993                           
 11994                           ; BSR set to: 0
 11995                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
 11996  0041CA  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
 11997                           
 11998                           ; BSR set to: 0
 11999                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
 12000  0041CE  0100               	movlb	0	; () banked
 12001  0041D0  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12002  0041D2  D003               	goto	l443
 12003                           
 12004                           ; BSR set to: 0
 12005                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
 12006  0041D4  010F               	movlb	15	; () banked
 12007  0041D6  811D               	bsf	29,0,b	;volatile
 12008  0041D8  D002               	goto	l444
 12009  0041DA                     l443:
 12010                           
 12011                           ; BSR set to: 0
 12012                           ;inc\CANlib.h: 715: else
 12013                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
 12014  0041DA  010F               	movlb	15	; () banked
 12015  0041DC  911D               	bcf	29,0,b	;volatile
 12016  0041DE                     l444:
 12017                           
 12018                           ; BSR set to: 15
 12019                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
 12020  0041DE  0100               	movlb	0	; () banked
 12021  0041E0  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12022  0041E2  D003               	goto	l445
 12023                           
 12024                           ; BSR set to: 0
 12025                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
 12026  0041E4  010F               	movlb	15	; () banked
 12027  0041E6  831D               	bsf	29,1,b	;volatile
 12028  0041E8  D002               	goto	l446
 12029  0041EA                     l445:
 12030                           
 12031                           ; BSR set to: 0
 12032                           ;inc\CANlib.h: 720: else
 12033                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
 12034  0041EA  010F               	movlb	15	; () banked
 12035  0041EC  931D               	bcf	29,1,b	;volatile
 12036  0041EE                     l446:
 12037                           
 12038                           ; BSR set to: 15
 12039                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
 12040  0041EE  0100               	movlb	0	; () banked
 12041  0041F0  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12042  0041F2  D003               	goto	l447
 12043                           
 12044                           ; BSR set to: 0
 12045                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
 12046  0041F4  010F               	movlb	15	; () banked
 12047  0041F6  8B1D               	bsf	29,5,b	;volatile
 12048  0041F8  D002               	goto	l448
 12049  0041FA                     l447:
 12050                           
 12051                           ; BSR set to: 0
 12052                           ;inc\CANlib.h: 725: else
 12053                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
 12054  0041FA  010F               	movlb	15	; () banked
 12055  0041FC  9B1D               	bcf	29,5,b	;volatile
 12056  0041FE                     l448:
 12057                           
 12058                           ; BSR set to: 15
 12059                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
 12060  0041FE  0100               	movlb	0	; () banked
 12061  004200  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12062  004202  D003               	goto	l449
 12063                           
 12064                           ; BSR set to: 0
 12065                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
 12066  004204  010F               	movlb	15	; () banked
 12067  004206  8D1D               	bsf	29,6,b	;volatile
 12068  004208  D002               	goto	l450
 12069  00420A                     l449:
 12070                           
 12071                           ; BSR set to: 0
 12072                           ;inc\CANlib.h: 730: else
 12073                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
 12074  00420A  010F               	movlb	15	; () banked
 12075  00420C  9D1D               	bcf	29,6,b	;volatile
 12076  00420E                     l450:
 12077                           
 12078                           ; BSR set to: 15
 12079                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
 12080  00420E  0100               	movlb	0	; () banked
 12081  004210  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12082  004212  D003               	goto	l451
 12083                           
 12084                           ; BSR set to: 0
 12085                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
 12086  004214  010F               	movlb	15	; () banked
 12087  004216  8F1D               	bsf	29,7,b	;volatile
 12088  004218  D002               	goto	l4992
 12089  00421A                     l451:
 12090                           
 12091                           ; BSR set to: 0
 12092                           ;inc\CANlib.h: 735: else
 12093                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
 12094  00421A  010F               	movlb	15	; () banked
 12095  00421C  9F1D               	bcf	29,7,b	;volatile
 12096  00421E                     l4992:
 12097                           
 12098                           ; BSR set to: 15
 12099                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
 12100  00421E  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12101  004222  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12102  004226  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12103  00422A  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12104  00422E  0E16               	movlw	22
 12105  004230  D006               	goto	u5710
 12106  004232                     u5715:
 12107  004232  0100               	movlb	0	; () banked
 12108  004234  90D8               	bcf	status,0,c
 12109  004236  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12110  004238  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12111  00423A  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12112  00423C  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12113  00423E                     u5710:
 12114  00423E  2EE8               	decfsz	wreg,f,c
 12115  004240  D7F8               	goto	u5715
 12116  004242  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12117  004246  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12118  00424A  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12119  00424E  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12120                           
 12121                           ; BSR set to: 0
 12122                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
 12123  004252  0100               	movlb	0	; () banked
 12124  004254  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12125  004256  0100               	movlb	0	; () banked
 12126  004258  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12127  00425A  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12128  00425C  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12129  00425E  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12130                           
 12131                           ; BSR set to: 0
 12132                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
 12133  004260  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 12134  004264  0012               	return	
 12135  004266                     __end_of_CANSetMask:
 12136                           	opt stack 0
 12137                           tblptru	equ	0xFF8
 12138                           tblptrh	equ	0xFF7
 12139                           tblptrl	equ	0xFF6
 12140                           tablat	equ	0xFF5
 12141                           prodh	equ	0xFF4
 12142                           prodl	equ	0xFF3
 12143                           intcon	equ	0xFF2
 12144                           intcon2	equ	0xFF1
 12145                           postinc0	equ	0xFEE
 12146                           wreg	equ	0xFE8
 12147                           postdec1	equ	0xFE5
 12148                           fsr1l	equ	0xFE1
 12149                           indf2	equ	0xFDF
 12150                           postinc2	equ	0xFDE
 12151                           postdec2	equ	0xFDD
 12152                           fsr2h	equ	0xFDA
 12153                           fsr2l	equ	0xFD9
 12154                           status	equ	0xFD8
 12155                           
 12156 ;; *************** function _CANSetFilter *****************
 12157 ;; Defined at:
 12158 ;;		line 748 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 12159 ;; Parameters:    Size  Location     Type
 12160 ;;  numBuffer       1    wreg     enum E16350
 12161 ;;  filter          4   23[BANK0 ] unsigned long 
 12162 ;;  type            1   27[BANK0 ] enum E16313
 12163 ;; Auto vars:     Size  Location     Type
 12164 ;;  numBuffer       1   32[BANK0 ] enum E16350
 12165 ;;  tamp            4   33[BANK0 ] unsigned long 
 12166 ;; Return value:  Size  Location     Type
 12167 ;;		None               void
 12168 ;; Registers used:
 12169 ;;		wreg, status,2, status,0
 12170 ;; Tracked objects:
 12171 ;;		On entry : 0/0
 12172 ;;		On exit  : 0/0
 12173 ;;		Unchanged: 0/0
 12174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12175 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12176 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12177 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12178 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12179 ;;Total ram usage:       14 bytes
 12180 ;; Hardware stack levels used:    1
 12181 ;; Hardware stack levels required when called:    4
 12182 ;; This function calls:
 12183 ;;		Nothing
 12184 ;; This function is called by:
 12185 ;;		_CANInitialize
 12186 ;; This function uses a non-reentrant model
 12187 ;;
 12188                           
 12189                           	psect	text32
 12190  000D52                     __ptext32:
 12191                           	opt stack 0
 12192  000D52                     _CANSetFilter:
 12193                           	opt stack 24
 12194                           
 12195                           ; BSR set to: 0
 12196                           ;incstack = 0
 12197                           ;CANSetFilter@numBuffer stored from wreg
 12198  000D52  0100               	movlb	0	; () banked
 12199  000D54  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
 12200                           
 12201                           ;inc\CANlib.h: 750: unsigned long tamp;
 12202                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
 12203  000D56  0100               	movlb	0	; () banked
 12204  000D58  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12205  000D5A  0100               	movlb	0	; () banked
 12206  000D5C  A4D8               	btfss	status,2,c
 12207  000D5E  D058               	goto	l5016
 12208                           
 12209                           ; BSR set to: 0
 12210  000D60  0100               	movlb	0	; () banked
 12211  000D62  297B               	incf	CANSetFilter@type& (0+255),w,b
 12212  000D64  A4D8               	btfss	status,2,c
 12213  000D66  D054               	goto	l5016
 12214                           
 12215                           ; BSR set to: 0
 12216                           ;inc\CANlib.h: 753: {
 12217                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
 12218  000D68  010F               	movlb	15	; () banked
 12219  000D6A  9701               	bcf	1,3,b	;volatile
 12220                           
 12221                           ; BSR set to: 15
 12222                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
 12223  000D6C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12224  000D70  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12225  000D74  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12226  000D78  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12227  000D7C  0E04               	movlw	4
 12228  000D7E  D006               	goto	u5740
 12229  000D80                     u5745:
 12230  000D80  0100               	movlb	0	; () banked
 12231  000D82  90D8               	bcf	status,0,c
 12232  000D84  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12233  000D86  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12234  000D88  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12235  000D8A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12236  000D8C                     u5740:
 12237  000D8C  2EE8               	decfsz	wreg,f,c
 12238  000D8E  D7F8               	goto	u5745
 12239  000D90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12240  000D94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12241  000D98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12242  000D9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12243                           
 12244                           ; BSR set to: 0
 12245                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
 12246  000DA0  0100               	movlb	0	; () banked
 12247  000DA2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12248  000DA4  0100               	movlb	0	; () banked
 12249  000DA6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12250  000DA8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12251  000DAA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12252  000DAC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12253                           
 12254                           ; BSR set to: 0
 12255                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
 12256  000DAE  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12257                           
 12258                           ; BSR set to: 0
 12259                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
 12260  000DB2  0E07               	movlw	7
 12261  000DB4  0100               	movlb	0	; () banked
 12262  000DB6  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12263  000DB8  0100               	movlb	0	; () banked
 12264  000DBA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12265  000DBC  0E00               	movlw	0
 12266  000DBE  0100               	movlb	0	; () banked
 12267  000DC0  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12268  000DC2  0100               	movlb	0	; () banked
 12269  000DC4  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12270  000DC6  0E00               	movlw	0
 12271  000DC8  0100               	movlb	0	; () banked
 12272  000DCA  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12273  000DCC  0100               	movlb	0	; () banked
 12274  000DCE  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12275  000DD0  0E00               	movlw	0
 12276  000DD2  0100               	movlb	0	; () banked
 12277  000DD4  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12278  000DD6  0100               	movlb	0	; () banked
 12279  000DD8  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12280                           
 12281                           ; BSR set to: 0
 12282                           ;inc\CANlib.h: 761: tamp = tamp << 5;
 12283  000DDA  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12284  000DDE  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12285  000DE2  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12286  000DE6  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12287  000DEA  0E05               	movlw	5
 12288  000DEC                     u5755:
 12289  000DEC  90D8               	bcf	status,0,c
 12290  000DEE  0100               	movlb	0	; () banked
 12291  000DF0  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12292  000DF2  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12293  000DF4  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12294  000DF6  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12295  000DF8  2EE8               	decfsz	wreg,f,c
 12296  000DFA  D7F8               	goto	u5755
 12297  000DFC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12298  000E00  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12299  000E04  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12300  000E08  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12301                           
 12302                           ; BSR set to: 0
 12303                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
 12304  000E0C  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
 12305  000E10                     l5016:
 12306                           
 12307                           ; BSR set to: 0
 12308                           ;inc\CANlib.h: 763: }
 12309                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
 12310  000E10  0100               	movlb	0	; () banked
 12311  000E12  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12312  000E14  A4D8               	btfss	status,2,c
 12313  000E16  D058               	goto	l5034
 12314                           
 12315                           ; BSR set to: 0
 12316  000E18  0100               	movlb	0	; () banked
 12317  000E1A  297B               	incf	CANSetFilter@type& (0+255),w,b
 12318  000E1C  A4D8               	btfss	status,2,c
 12319  000E1E  D054               	goto	l5034
 12320                           
 12321                           ; BSR set to: 0
 12322                           ;inc\CANlib.h: 766: {
 12323                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
 12324  000E20  010F               	movlb	15	; () banked
 12325  000E22  9705               	bcf	5,3,b	;volatile
 12326                           
 12327                           ; BSR set to: 15
 12328                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
 12329  000E24  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12330  000E28  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12331  000E2C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12332  000E30  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12333  000E34  0E04               	movlw	4
 12334  000E36  D006               	goto	u5780
 12335  000E38                     u5785:
 12336  000E38  0100               	movlb	0	; () banked
 12337  000E3A  90D8               	bcf	status,0,c
 12338  000E3C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12339  000E3E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12340  000E40  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12341  000E42  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12342  000E44                     u5780:
 12343  000E44  2EE8               	decfsz	wreg,f,c
 12344  000E46  D7F8               	goto	u5785
 12345  000E48  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12346  000E4C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12347  000E50  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12348  000E54  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12349                           
 12350                           ; BSR set to: 0
 12351                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
 12352  000E58  0100               	movlb	0	; () banked
 12353  000E5A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12354  000E5C  0100               	movlb	0	; () banked
 12355  000E5E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12356  000E60  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12357  000E62  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12358  000E64  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12359                           
 12360                           ; BSR set to: 0
 12361                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
 12362  000E66  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 12363                           
 12364                           ; BSR set to: 0
 12365                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
 12366  000E6A  0E07               	movlw	7
 12367  000E6C  0100               	movlb	0	; () banked
 12368  000E6E  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12369  000E70  0100               	movlb	0	; () banked
 12370  000E72  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12371  000E74  0E00               	movlw	0
 12372  000E76  0100               	movlb	0	; () banked
 12373  000E78  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12374  000E7A  0100               	movlb	0	; () banked
 12375  000E7C  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12376  000E7E  0E00               	movlw	0
 12377  000E80  0100               	movlb	0	; () banked
 12378  000E82  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12379  000E84  0100               	movlb	0	; () banked
 12380  000E86  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12381  000E88  0E00               	movlw	0
 12382  000E8A  0100               	movlb	0	; () banked
 12383  000E8C  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12384  000E8E  0100               	movlb	0	; () banked
 12385  000E90  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12386                           
 12387                           ; BSR set to: 0
 12388                           ;inc\CANlib.h: 774: tamp = tamp << 5;
 12389  000E92  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12390  000E96  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12391  000E9A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12392  000E9E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12393  000EA2  0E05               	movlw	5
 12394  000EA4                     u5795:
 12395  000EA4  90D8               	bcf	status,0,c
 12396  000EA6  0100               	movlb	0	; () banked
 12397  000EA8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12398  000EAA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12399  000EAC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12400  000EAE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12401  000EB0  2EE8               	decfsz	wreg,f,c
 12402  000EB2  D7F8               	goto	u5795
 12403  000EB4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12404  000EB8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12405  000EBC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12406  000EC0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12407                           
 12408                           ; BSR set to: 0
 12409                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
 12410  000EC4  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
 12411  000EC8                     l5034:
 12412                           
 12413                           ; BSR set to: 0
 12414                           ;inc\CANlib.h: 776: }
 12415                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
 12416  000EC8  0E02               	movlw	2
 12417  000ECA  0100               	movlb	0	; () banked
 12418  000ECC  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12419  000ECE  A4D8               	btfss	status,2,c
 12420  000ED0  D058               	goto	l5052
 12421                           
 12422                           ; BSR set to: 0
 12423  000ED2  0100               	movlb	0	; () banked
 12424  000ED4  297B               	incf	CANSetFilter@type& (0+255),w,b
 12425  000ED6  A4D8               	btfss	status,2,c
 12426  000ED8  D054               	goto	l5052
 12427                           
 12428                           ; BSR set to: 0
 12429                           ;inc\CANlib.h: 779: {
 12430                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
 12431  000EDA  010F               	movlb	15	; () banked
 12432  000EDC  9709               	bcf	9,3,b	;volatile
 12433                           
 12434                           ; BSR set to: 15
 12435                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
 12436  000EDE  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12437  000EE2  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12438  000EE6  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12439  000EEA  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12440  000EEE  0E04               	movlw	4
 12441  000EF0  D006               	goto	u5820
 12442  000EF2                     u5825:
 12443  000EF2  0100               	movlb	0	; () banked
 12444  000EF4  90D8               	bcf	status,0,c
 12445  000EF6  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12446  000EF8  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12447  000EFA  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12448  000EFC  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12449  000EFE                     u5820:
 12450  000EFE  2EE8               	decfsz	wreg,f,c
 12451  000F00  D7F8               	goto	u5825
 12452  000F02  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12453  000F06  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12454  000F0A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12455  000F0E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12456                           
 12457                           ; BSR set to: 0
 12458                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
 12459  000F12  0100               	movlb	0	; () banked
 12460  000F14  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12461  000F16  0100               	movlb	0	; () banked
 12462  000F18  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12463  000F1A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12464  000F1C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12465  000F1E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12466                           
 12467                           ; BSR set to: 0
 12468                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
 12469  000F20  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 12470                           
 12471                           ; BSR set to: 0
 12472                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
 12473  000F24  0E07               	movlw	7
 12474  000F26  0100               	movlb	0	; () banked
 12475  000F28  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12476  000F2A  0100               	movlb	0	; () banked
 12477  000F2C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12478  000F2E  0E00               	movlw	0
 12479  000F30  0100               	movlb	0	; () banked
 12480  000F32  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12481  000F34  0100               	movlb	0	; () banked
 12482  000F36  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12483  000F38  0E00               	movlw	0
 12484  000F3A  0100               	movlb	0	; () banked
 12485  000F3C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12486  000F3E  0100               	movlb	0	; () banked
 12487  000F40  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12488  000F42  0E00               	movlw	0
 12489  000F44  0100               	movlb	0	; () banked
 12490  000F46  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12491  000F48  0100               	movlb	0	; () banked
 12492  000F4A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12493                           
 12494                           ; BSR set to: 0
 12495                           ;inc\CANlib.h: 787: tamp = tamp << 5;
 12496  000F4C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12497  000F50  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12498  000F54  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12499  000F58  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12500  000F5C  0E05               	movlw	5
 12501  000F5E                     u5835:
 12502  000F5E  90D8               	bcf	status,0,c
 12503  000F60  0100               	movlb	0	; () banked
 12504  000F62  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12505  000F64  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12506  000F66  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12507  000F68  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12508  000F6A  2EE8               	decfsz	wreg,f,c
 12509  000F6C  D7F8               	goto	u5835
 12510  000F6E  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12511  000F72  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12512  000F76  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12513  000F7A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12514                           
 12515                           ; BSR set to: 0
 12516                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
 12517  000F7E  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
 12518  000F82                     l5052:
 12519                           
 12520                           ; BSR set to: 0
 12521                           ;inc\CANlib.h: 789: }
 12522                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
 12523  000F82  0E03               	movlw	3
 12524  000F84  0100               	movlb	0	; () banked
 12525  000F86  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12526  000F88  A4D8               	btfss	status,2,c
 12527  000F8A  D058               	goto	l5070
 12528                           
 12529                           ; BSR set to: 0
 12530  000F8C  0100               	movlb	0	; () banked
 12531  000F8E  297B               	incf	CANSetFilter@type& (0+255),w,b
 12532  000F90  A4D8               	btfss	status,2,c
 12533  000F92  D054               	goto	l5070
 12534                           
 12535                           ; BSR set to: 0
 12536                           ;inc\CANlib.h: 792: {
 12537                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
 12538  000F94  010F               	movlb	15	; () banked
 12539  000F96  970D               	bcf	13,3,b	;volatile
 12540                           
 12541                           ; BSR set to: 15
 12542                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
 12543  000F98  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12544  000F9C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12545  000FA0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12546  000FA4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12547  000FA8  0E04               	movlw	4
 12548  000FAA  D006               	goto	u5860
 12549  000FAC                     u5865:
 12550  000FAC  0100               	movlb	0	; () banked
 12551  000FAE  90D8               	bcf	status,0,c
 12552  000FB0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12553  000FB2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12554  000FB4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12555  000FB6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12556  000FB8                     u5860:
 12557  000FB8  2EE8               	decfsz	wreg,f,c
 12558  000FBA  D7F8               	goto	u5865
 12559  000FBC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12560  000FC0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12561  000FC4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12562  000FC8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12563                           
 12564                           ; BSR set to: 0
 12565                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
 12566  000FCC  0100               	movlb	0	; () banked
 12567  000FCE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12568  000FD0  0100               	movlb	0	; () banked
 12569  000FD2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12570  000FD4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12571  000FD6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12572  000FD8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12573                           
 12574                           ; BSR set to: 0
 12575                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
 12576  000FDA  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 12577                           
 12578                           ; BSR set to: 0
 12579                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
 12580  000FDE  0E07               	movlw	7
 12581  000FE0  0100               	movlb	0	; () banked
 12582  000FE2  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12583  000FE4  0100               	movlb	0	; () banked
 12584  000FE6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12585  000FE8  0E00               	movlw	0
 12586  000FEA  0100               	movlb	0	; () banked
 12587  000FEC  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12588  000FEE  0100               	movlb	0	; () banked
 12589  000FF0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12590  000FF2  0E00               	movlw	0
 12591  000FF4  0100               	movlb	0	; () banked
 12592  000FF6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12593  000FF8  0100               	movlb	0	; () banked
 12594  000FFA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12595  000FFC  0E00               	movlw	0
 12596  000FFE  0100               	movlb	0	; () banked
 12597  001000  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12598  001002  0100               	movlb	0	; () banked
 12599  001004  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12600                           
 12601                           ; BSR set to: 0
 12602                           ;inc\CANlib.h: 800: tamp = tamp << 5;
 12603  001006  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12604  00100A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12605  00100E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12606  001012  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12607  001016  0E05               	movlw	5
 12608  001018                     u5875:
 12609  001018  90D8               	bcf	status,0,c
 12610  00101A  0100               	movlb	0	; () banked
 12611  00101C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12612  00101E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12613  001020  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12614  001022  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12615  001024  2EE8               	decfsz	wreg,f,c
 12616  001026  D7F8               	goto	u5875
 12617  001028  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12618  00102C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12619  001030  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12620  001034  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12621                           
 12622                           ; BSR set to: 0
 12623                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
 12624  001038  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
 12625  00103C                     l5070:
 12626                           
 12627                           ; BSR set to: 0
 12628                           ;inc\CANlib.h: 802: }
 12629                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
 12630  00103C  0E04               	movlw	4
 12631  00103E  0100               	movlb	0	; () banked
 12632  001040  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12633  001042  A4D8               	btfss	status,2,c
 12634  001044  D058               	goto	l5088
 12635                           
 12636                           ; BSR set to: 0
 12637  001046  0100               	movlb	0	; () banked
 12638  001048  297B               	incf	CANSetFilter@type& (0+255),w,b
 12639  00104A  A4D8               	btfss	status,2,c
 12640  00104C  D054               	goto	l5088
 12641                           
 12642                           ; BSR set to: 0
 12643                           ;inc\CANlib.h: 805: {
 12644                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
 12645  00104E  010F               	movlb	15	; () banked
 12646  001050  9711               	bcf	17,3,b	;volatile
 12647                           
 12648                           ; BSR set to: 15
 12649                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
 12650  001052  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12651  001056  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12652  00105A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12653  00105E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12654  001062  0E04               	movlw	4
 12655  001064  D006               	goto	u5900
 12656  001066                     u5905:
 12657  001066  0100               	movlb	0	; () banked
 12658  001068  90D8               	bcf	status,0,c
 12659  00106A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12660  00106C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12661  00106E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12662  001070  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12663  001072                     u5900:
 12664  001072  2EE8               	decfsz	wreg,f,c
 12665  001074  D7F8               	goto	u5905
 12666  001076  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12667  00107A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12668  00107E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12669  001082  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12670                           
 12671                           ; BSR set to: 0
 12672                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
 12673  001086  0100               	movlb	0	; () banked
 12674  001088  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12675  00108A  0100               	movlb	0	; () banked
 12676  00108C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12677  00108E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12678  001090  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12679  001092  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12680                           
 12681                           ; BSR set to: 0
 12682                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
 12683  001094  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 12684                           
 12685                           ; BSR set to: 0
 12686                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
 12687  001098  0E07               	movlw	7
 12688  00109A  0100               	movlb	0	; () banked
 12689  00109C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12690  00109E  0100               	movlb	0	; () banked
 12691  0010A0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12692  0010A2  0E00               	movlw	0
 12693  0010A4  0100               	movlb	0	; () banked
 12694  0010A6  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12695  0010A8  0100               	movlb	0	; () banked
 12696  0010AA  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12697  0010AC  0E00               	movlw	0
 12698  0010AE  0100               	movlb	0	; () banked
 12699  0010B0  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12700  0010B2  0100               	movlb	0	; () banked
 12701  0010B4  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12702  0010B6  0E00               	movlw	0
 12703  0010B8  0100               	movlb	0	; () banked
 12704  0010BA  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12705  0010BC  0100               	movlb	0	; () banked
 12706  0010BE  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12707                           
 12708                           ; BSR set to: 0
 12709                           ;inc\CANlib.h: 813: tamp = tamp << 5;
 12710  0010C0  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12711  0010C4  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12712  0010C8  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12713  0010CC  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12714  0010D0  0E05               	movlw	5
 12715  0010D2                     u5915:
 12716  0010D2  90D8               	bcf	status,0,c
 12717  0010D4  0100               	movlb	0	; () banked
 12718  0010D6  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12719  0010D8  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12720  0010DA  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12721  0010DC  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12722  0010DE  2EE8               	decfsz	wreg,f,c
 12723  0010E0  D7F8               	goto	u5915
 12724  0010E2  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12725  0010E6  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12726  0010EA  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12727  0010EE  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12728                           
 12729                           ; BSR set to: 0
 12730                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
 12731  0010F2  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 12732  0010F6                     l5088:
 12733                           
 12734                           ; BSR set to: 0
 12735                           ;inc\CANlib.h: 815: }
 12736                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 12737  0010F6  0E05               	movlw	5
 12738  0010F8  0100               	movlb	0	; () banked
 12739  0010FA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12740  0010FC  A4D8               	btfss	status,2,c
 12741  0010FE  D058               	goto	l5106
 12742                           
 12743                           ; BSR set to: 0
 12744  001100  0100               	movlb	0	; () banked
 12745  001102  297B               	incf	CANSetFilter@type& (0+255),w,b
 12746  001104  A4D8               	btfss	status,2,c
 12747  001106  D054               	goto	l5106
 12748                           
 12749                           ; BSR set to: 0
 12750                           ;inc\CANlib.h: 818: {
 12751                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
 12752  001108  010F               	movlb	15	; () banked
 12753  00110A  9715               	bcf	21,3,b	;volatile
 12754                           
 12755                           ; BSR set to: 15
 12756                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
 12757  00110C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12758  001110  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12759  001114  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12760  001118  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12761  00111C  0E04               	movlw	4
 12762  00111E  D006               	goto	u5940
 12763  001120                     u5945:
 12764  001120  0100               	movlb	0	; () banked
 12765  001122  90D8               	bcf	status,0,c
 12766  001124  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12767  001126  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12768  001128  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12769  00112A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12770  00112C                     u5940:
 12771  00112C  2EE8               	decfsz	wreg,f,c
 12772  00112E  D7F8               	goto	u5945
 12773  001130  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12774  001134  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12775  001138  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12776  00113C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12777                           
 12778                           ; BSR set to: 0
 12779                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
 12780  001140  0100               	movlb	0	; () banked
 12781  001142  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12782  001144  0100               	movlb	0	; () banked
 12783  001146  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12784  001148  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12785  00114A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12786  00114C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12787                           
 12788                           ; BSR set to: 0
 12789                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
 12790  00114E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 12791                           
 12792                           ; BSR set to: 0
 12793                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
 12794  001152  0E07               	movlw	7
 12795  001154  0100               	movlb	0	; () banked
 12796  001156  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12797  001158  0100               	movlb	0	; () banked
 12798  00115A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12799  00115C  0E00               	movlw	0
 12800  00115E  0100               	movlb	0	; () banked
 12801  001160  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12802  001162  0100               	movlb	0	; () banked
 12803  001164  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12804  001166  0E00               	movlw	0
 12805  001168  0100               	movlb	0	; () banked
 12806  00116A  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12807  00116C  0100               	movlb	0	; () banked
 12808  00116E  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12809  001170  0E00               	movlw	0
 12810  001172  0100               	movlb	0	; () banked
 12811  001174  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12812  001176  0100               	movlb	0	; () banked
 12813  001178  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12814                           
 12815                           ; BSR set to: 0
 12816                           ;inc\CANlib.h: 826: tamp = tamp << 5;
 12817  00117A  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12818  00117E  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12819  001182  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12820  001186  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12821  00118A  0E05               	movlw	5
 12822  00118C                     u5955:
 12823  00118C  90D8               	bcf	status,0,c
 12824  00118E  0100               	movlb	0	; () banked
 12825  001190  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12826  001192  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12827  001194  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12828  001196  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12829  001198  2EE8               	decfsz	wreg,f,c
 12830  00119A  D7F8               	goto	u5955
 12831  00119C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12832  0011A0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12833  0011A4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12834  0011A8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12835                           
 12836                           ; BSR set to: 0
 12837                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
 12838  0011AC  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 12839  0011B0                     l5106:
 12840                           
 12841                           ; BSR set to: 0
 12842                           ;inc\CANlib.h: 828: }
 12843                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 12844  0011B0  0100               	movlb	0	; () banked
 12845  0011B2  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12846  0011B4  0100               	movlb	0	; () banked
 12847  0011B6  A4D8               	btfss	status,2,c
 12848  0011B8  D089               	goto	l5140
 12849                           
 12850                           ; BSR set to: 0
 12851  0011BA  0EF7               	movlw	247
 12852  0011BC  0100               	movlb	0	; () banked
 12853  0011BE  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 12854  0011C0  A4D8               	btfss	status,2,c
 12855  0011C2  D084               	goto	l5140
 12856                           
 12857                           ; BSR set to: 0
 12858                           ;inc\CANlib.h: 832: {
 12859                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
 12860  0011C4  010F               	movlb	15	; () banked
 12861  0011C6  8701               	bsf	1,3,b	;volatile
 12862                           
 12863                           ; BSR set to: 15
 12864                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
 12865  0011C8  0100               	movlb	0	; () banked
 12866  0011CA  5177               	movf	CANSetFilter@filter& (0+255),w,b
 12867  0011CC  0100               	movlb	0	; () banked
 12868  0011CE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12869  0011D0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12870  0011D2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12871  0011D4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12872                           
 12873                           ; BSR set to: 0
 12874                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
 12875  0011D6  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 12876                           
 12877                           ; BSR set to: 0
 12878                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
 12879  0011DA  0E00               	movlw	0
 12880  0011DC  0100               	movlb	0	; () banked
 12881  0011DE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12882  0011E0  0100               	movlb	0	; () banked
 12883  0011E2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12884  0011E4  0EFF               	movlw	255
 12885  0011E6  0100               	movlb	0	; () banked
 12886  0011E8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12887  0011EA  0100               	movlb	0	; () banked
 12888  0011EC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12889  0011EE  0E00               	movlw	0
 12890  0011F0  0100               	movlb	0	; () banked
 12891  0011F2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12892  0011F4  0100               	movlb	0	; () banked
 12893  0011F6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12894  0011F8  0E00               	movlw	0
 12895  0011FA  0100               	movlb	0	; () banked
 12896  0011FC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12897  0011FE  0100               	movlb	0	; () banked
 12898  001200  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12899                           
 12900                           ; BSR set to: 0
 12901                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
 12902  001202  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12903  001206  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12904  00120A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12905  00120E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12906  001212  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 12907  001216  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 12908  00121A  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 12909  00121E  0100               	movlb	0	; () banked
 12910  001220  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 12911  001222  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12912  001226  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12913  00122A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12914  00122E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12915                           
 12916                           ; BSR set to: 0
 12917                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
 12918  001232  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 12919                           
 12920                           ; BSR set to: 0
 12921                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
 12922  001236  0100               	movlb	0	; () banked
 12923  001238  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 12924  00123A  D003               	goto	l463
 12925                           
 12926                           ; BSR set to: 0
 12927                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
 12928  00123C  010F               	movlb	15	; () banked
 12929  00123E  8101               	bsf	1,0,b	;volatile
 12930  001240  D002               	goto	l464
 12931  001242                     l463:
 12932                           
 12933                           ; BSR set to: 0
 12934                           ;inc\CANlib.h: 844: else
 12935                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
 12936  001242  010F               	movlb	15	; () banked
 12937  001244  9101               	bcf	1,0,b	;volatile
 12938  001246                     l464:
 12939                           
 12940                           ; BSR set to: 15
 12941                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
 12942  001246  0100               	movlb	0	; () banked
 12943  001248  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 12944  00124A  D003               	goto	l465
 12945                           
 12946                           ; BSR set to: 0
 12947                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
 12948  00124C  010F               	movlb	15	; () banked
 12949  00124E  8301               	bsf	1,1,b	;volatile
 12950  001250  D002               	goto	l466
 12951  001252                     l465:
 12952                           
 12953                           ; BSR set to: 0
 12954                           ;inc\CANlib.h: 849: else
 12955                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
 12956  001252  010F               	movlb	15	; () banked
 12957  001254  9301               	bcf	1,1,b	;volatile
 12958  001256                     l466:
 12959                           
 12960                           ; BSR set to: 15
 12961                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
 12962  001256  0100               	movlb	0	; () banked
 12963  001258  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 12964  00125A  D003               	goto	l467
 12965                           
 12966                           ; BSR set to: 0
 12967                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
 12968  00125C  010F               	movlb	15	; () banked
 12969  00125E  8B01               	bsf	1,5,b	;volatile
 12970  001260  D002               	goto	l468
 12971  001262                     l467:
 12972                           
 12973                           ; BSR set to: 0
 12974                           ;inc\CANlib.h: 854: else
 12975                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
 12976  001262  010F               	movlb	15	; () banked
 12977  001264  9B01               	bcf	1,5,b	;volatile
 12978  001266                     l468:
 12979                           
 12980                           ; BSR set to: 15
 12981                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
 12982  001266  0100               	movlb	0	; () banked
 12983  001268  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 12984  00126A  D003               	goto	l469
 12985                           
 12986                           ; BSR set to: 0
 12987                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
 12988  00126C  010F               	movlb	15	; () banked
 12989  00126E  8D01               	bsf	1,6,b	;volatile
 12990  001270  D002               	goto	l470
 12991  001272                     l469:
 12992                           
 12993                           ; BSR set to: 0
 12994                           ;inc\CANlib.h: 859: else
 12995                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
 12996  001272  010F               	movlb	15	; () banked
 12997  001274  9D01               	bcf	1,6,b	;volatile
 12998  001276                     l470:
 12999                           
 13000                           ; BSR set to: 15
 13001                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
 13002  001276  0100               	movlb	0	; () banked
 13003  001278  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13004  00127A  D003               	goto	l471
 13005                           
 13006                           ; BSR set to: 0
 13007                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
 13008  00127C  010F               	movlb	15	; () banked
 13009  00127E  8F01               	bsf	1,7,b	;volatile
 13010  001280  D002               	goto	l5134
 13011  001282                     l471:
 13012                           
 13013                           ; BSR set to: 0
 13014                           ;inc\CANlib.h: 864: else
 13015                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
 13016  001282  010F               	movlb	15	; () banked
 13017  001284  9F01               	bcf	1,7,b	;volatile
 13018  001286                     l5134:
 13019                           
 13020                           ; BSR set to: 15
 13021                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
 13022  001286  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13023  00128A  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13024  00128E  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13025  001292  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13026  001296  0E16               	movlw	22
 13027  001298  D006               	goto	u6030
 13028  00129A                     u6035:
 13029  00129A  0100               	movlb	0	; () banked
 13030  00129C  90D8               	bcf	status,0,c
 13031  00129E  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13032  0012A0  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13033  0012A2  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13034  0012A4  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13035  0012A6                     u6030:
 13036  0012A6  2EE8               	decfsz	wreg,f,c
 13037  0012A8  D7F8               	goto	u6035
 13038  0012AA  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13039  0012AE  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13040  0012B2  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13041  0012B6  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13042                           
 13043                           ; BSR set to: 0
 13044                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
 13045  0012BA  0100               	movlb	0	; () banked
 13046  0012BC  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13047  0012BE  0100               	movlb	0	; () banked
 13048  0012C0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13049  0012C2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13050  0012C4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13051  0012C6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13052                           
 13053                           ; BSR set to: 0
 13054                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
 13055  0012C8  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 13056  0012CC                     l5140:
 13057                           
 13058                           ; BSR set to: 0
 13059                           ;inc\CANlib.h: 870: }
 13060                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 13061  0012CC  0100               	movlb	0	; () banked
 13062  0012CE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 13063  0012D0  A4D8               	btfss	status,2,c
 13064  0012D2  D089               	goto	l5174
 13065                           
 13066                           ; BSR set to: 0
 13067  0012D4  0EF7               	movlw	247
 13068  0012D6  0100               	movlb	0	; () banked
 13069  0012D8  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13070  0012DA  A4D8               	btfss	status,2,c
 13071  0012DC  D084               	goto	l5174
 13072                           
 13073                           ; BSR set to: 0
 13074                           ;inc\CANlib.h: 873: {
 13075                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
 13076  0012DE  010F               	movlb	15	; () banked
 13077  0012E0  8705               	bsf	5,3,b	;volatile
 13078                           
 13079                           ; BSR set to: 15
 13080                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
 13081  0012E2  0100               	movlb	0	; () banked
 13082  0012E4  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13083  0012E6  0100               	movlb	0	; () banked
 13084  0012E8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13085  0012EA  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13086  0012EC  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13087  0012EE  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13088                           
 13089                           ; BSR set to: 0
 13090                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
 13091  0012F0  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 13092                           
 13093                           ; BSR set to: 0
 13094                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
 13095  0012F4  0E00               	movlw	0
 13096  0012F6  0100               	movlb	0	; () banked
 13097  0012F8  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13098  0012FA  0100               	movlb	0	; () banked
 13099  0012FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13100  0012FE  0EFF               	movlw	255
 13101  001300  0100               	movlb	0	; () banked
 13102  001302  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13103  001304  0100               	movlb	0	; () banked
 13104  001306  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13105  001308  0E00               	movlw	0
 13106  00130A  0100               	movlb	0	; () banked
 13107  00130C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13108  00130E  0100               	movlb	0	; () banked
 13109  001310  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13110  001312  0E00               	movlw	0
 13111  001314  0100               	movlb	0	; () banked
 13112  001316  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13113  001318  0100               	movlb	0	; () banked
 13114  00131A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13115                           
 13116                           ; BSR set to: 0
 13117                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
 13118  00131C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13119  001320  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13120  001324  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13121  001328  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13122  00132C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13123  001330  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13124  001334  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13125  001338  0100               	movlb	0	; () banked
 13126  00133A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13127  00133C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13128  001340  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13129  001344  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13130  001348  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13131                           
 13132                           ; BSR set to: 0
 13133                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
 13134  00134C  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 13135                           
 13136                           ; BSR set to: 0
 13137                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
 13138  001350  0100               	movlb	0	; () banked
 13139  001352  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13140  001354  D003               	goto	l474
 13141                           
 13142                           ; BSR set to: 0
 13143                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
 13144  001356  010F               	movlb	15	; () banked
 13145  001358  8105               	bsf	5,0,b	;volatile
 13146  00135A  D002               	goto	l475
 13147  00135C                     l474:
 13148                           
 13149                           ; BSR set to: 0
 13150                           ;inc\CANlib.h: 885: else
 13151                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
 13152  00135C  010F               	movlb	15	; () banked
 13153  00135E  9105               	bcf	5,0,b	;volatile
 13154  001360                     l475:
 13155                           
 13156                           ; BSR set to: 15
 13157                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
 13158  001360  0100               	movlb	0	; () banked
 13159  001362  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13160  001364  D003               	goto	l476
 13161                           
 13162                           ; BSR set to: 0
 13163                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
 13164  001366  010F               	movlb	15	; () banked
 13165  001368  8305               	bsf	5,1,b	;volatile
 13166  00136A  D002               	goto	l477
 13167  00136C                     l476:
 13168                           
 13169                           ; BSR set to: 0
 13170                           ;inc\CANlib.h: 890: else
 13171                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
 13172  00136C  010F               	movlb	15	; () banked
 13173  00136E  9305               	bcf	5,1,b	;volatile
 13174  001370                     l477:
 13175                           
 13176                           ; BSR set to: 15
 13177                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
 13178  001370  0100               	movlb	0	; () banked
 13179  001372  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13180  001374  D003               	goto	l478
 13181                           
 13182                           ; BSR set to: 0
 13183                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
 13184  001376  010F               	movlb	15	; () banked
 13185  001378  8B05               	bsf	5,5,b	;volatile
 13186  00137A  D002               	goto	l479
 13187  00137C                     l478:
 13188                           
 13189                           ; BSR set to: 0
 13190                           ;inc\CANlib.h: 895: else
 13191                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
 13192  00137C  010F               	movlb	15	; () banked
 13193  00137E  9B05               	bcf	5,5,b	;volatile
 13194  001380                     l479:
 13195                           
 13196                           ; BSR set to: 15
 13197                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
 13198  001380  0100               	movlb	0	; () banked
 13199  001382  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13200  001384  D003               	goto	l480
 13201                           
 13202                           ; BSR set to: 0
 13203                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
 13204  001386  010F               	movlb	15	; () banked
 13205  001388  8D05               	bsf	5,6,b	;volatile
 13206  00138A  D002               	goto	l481
 13207  00138C                     l480:
 13208                           
 13209                           ; BSR set to: 0
 13210                           ;inc\CANlib.h: 900: else
 13211                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
 13212  00138C  010F               	movlb	15	; () banked
 13213  00138E  9D05               	bcf	5,6,b	;volatile
 13214  001390                     l481:
 13215                           
 13216                           ; BSR set to: 15
 13217                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
 13218  001390  0100               	movlb	0	; () banked
 13219  001392  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13220  001394  D003               	goto	l482
 13221                           
 13222                           ; BSR set to: 0
 13223                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
 13224  001396  010F               	movlb	15	; () banked
 13225  001398  8F05               	bsf	5,7,b	;volatile
 13226  00139A  D002               	goto	l5168
 13227  00139C                     l482:
 13228                           
 13229                           ; BSR set to: 0
 13230                           ;inc\CANlib.h: 905: else
 13231                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
 13232  00139C  010F               	movlb	15	; () banked
 13233  00139E  9F05               	bcf	5,7,b	;volatile
 13234  0013A0                     l5168:
 13235                           
 13236                           ; BSR set to: 15
 13237                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
 13238  0013A0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13239  0013A4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13240  0013A8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13241  0013AC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13242  0013B0  0E16               	movlw	22
 13243  0013B2  D006               	goto	u6110
 13244  0013B4                     u6115:
 13245  0013B4  0100               	movlb	0	; () banked
 13246  0013B6  90D8               	bcf	status,0,c
 13247  0013B8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13248  0013BA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13249  0013BC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13250  0013BE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13251  0013C0                     u6110:
 13252  0013C0  2EE8               	decfsz	wreg,f,c
 13253  0013C2  D7F8               	goto	u6115
 13254  0013C4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13255  0013C8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13256  0013CC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13257  0013D0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13258                           
 13259                           ; BSR set to: 0
 13260                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
 13261  0013D4  0100               	movlb	0	; () banked
 13262  0013D6  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13263  0013D8  0100               	movlb	0	; () banked
 13264  0013DA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13265  0013DC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13266  0013DE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13267  0013E0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13268                           
 13269                           ; BSR set to: 0
 13270                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
 13271  0013E2  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 13272  0013E6                     l5174:
 13273                           
 13274                           ; BSR set to: 0
 13275                           ;inc\CANlib.h: 911: }
 13276                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 13277  0013E6  0E02               	movlw	2
 13278  0013E8  0100               	movlb	0	; () banked
 13279  0013EA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13280  0013EC  A4D8               	btfss	status,2,c
 13281  0013EE  D089               	goto	l5208
 13282                           
 13283                           ; BSR set to: 0
 13284  0013F0  0EF7               	movlw	247
 13285  0013F2  0100               	movlb	0	; () banked
 13286  0013F4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13287  0013F6  A4D8               	btfss	status,2,c
 13288  0013F8  D084               	goto	l5208
 13289                           
 13290                           ; BSR set to: 0
 13291                           ;inc\CANlib.h: 915: {
 13292                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
 13293  0013FA  010F               	movlb	15	; () banked
 13294  0013FC  8709               	bsf	9,3,b	;volatile
 13295                           
 13296                           ; BSR set to: 15
 13297                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
 13298  0013FE  0100               	movlb	0	; () banked
 13299  001400  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13300  001402  0100               	movlb	0	; () banked
 13301  001404  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13302  001406  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13303  001408  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13304  00140A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13305                           
 13306                           ; BSR set to: 0
 13307                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
 13308  00140C  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 13309                           
 13310                           ; BSR set to: 0
 13311                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
 13312  001410  0E00               	movlw	0
 13313  001412  0100               	movlb	0	; () banked
 13314  001414  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13315  001416  0100               	movlb	0	; () banked
 13316  001418  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13317  00141A  0EFF               	movlw	255
 13318  00141C  0100               	movlb	0	; () banked
 13319  00141E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13320  001420  0100               	movlb	0	; () banked
 13321  001422  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13322  001424  0E00               	movlw	0
 13323  001426  0100               	movlb	0	; () banked
 13324  001428  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13325  00142A  0100               	movlb	0	; () banked
 13326  00142C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13327  00142E  0E00               	movlw	0
 13328  001430  0100               	movlb	0	; () banked
 13329  001432  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13330  001434  0100               	movlb	0	; () banked
 13331  001436  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13332                           
 13333                           ; BSR set to: 0
 13334                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
 13335  001438  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13336  00143C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13337  001440  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13338  001444  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13339  001448  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13340  00144C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13341  001450  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13342  001454  0100               	movlb	0	; () banked
 13343  001456  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13344  001458  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13345  00145C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13346  001460  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13347  001464  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13348                           
 13349                           ; BSR set to: 0
 13350                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
 13351  001468  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 13352                           
 13353                           ; BSR set to: 0
 13354                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
 13355  00146C  0100               	movlb	0	; () banked
 13356  00146E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13357  001470  D003               	goto	l485
 13358                           
 13359                           ; BSR set to: 0
 13360                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
 13361  001472  010F               	movlb	15	; () banked
 13362  001474  8109               	bsf	9,0,b	;volatile
 13363  001476  D002               	goto	l486
 13364  001478                     l485:
 13365                           
 13366                           ; BSR set to: 0
 13367                           ;inc\CANlib.h: 927: else
 13368                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
 13369  001478  010F               	movlb	15	; () banked
 13370  00147A  9109               	bcf	9,0,b	;volatile
 13371  00147C                     l486:
 13372                           
 13373                           ; BSR set to: 15
 13374                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
 13375  00147C  0100               	movlb	0	; () banked
 13376  00147E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13377  001480  D003               	goto	l487
 13378                           
 13379                           ; BSR set to: 0
 13380                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
 13381  001482  010F               	movlb	15	; () banked
 13382  001484  8309               	bsf	9,1,b	;volatile
 13383  001486  D002               	goto	l488
 13384  001488                     l487:
 13385                           
 13386                           ; BSR set to: 0
 13387                           ;inc\CANlib.h: 932: else
 13388                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
 13389  001488  010F               	movlb	15	; () banked
 13390  00148A  9309               	bcf	9,1,b	;volatile
 13391  00148C                     l488:
 13392                           
 13393                           ; BSR set to: 15
 13394                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
 13395  00148C  0100               	movlb	0	; () banked
 13396  00148E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13397  001490  D003               	goto	l489
 13398                           
 13399                           ; BSR set to: 0
 13400                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
 13401  001492  010F               	movlb	15	; () banked
 13402  001494  8B09               	bsf	9,5,b	;volatile
 13403  001496  D002               	goto	l490
 13404  001498                     l489:
 13405                           
 13406                           ; BSR set to: 0
 13407                           ;inc\CANlib.h: 937: else
 13408                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
 13409  001498  010F               	movlb	15	; () banked
 13410  00149A  9B09               	bcf	9,5,b	;volatile
 13411  00149C                     l490:
 13412                           
 13413                           ; BSR set to: 15
 13414                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
 13415  00149C  0100               	movlb	0	; () banked
 13416  00149E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13417  0014A0  D003               	goto	l491
 13418                           
 13419                           ; BSR set to: 0
 13420                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
 13421  0014A2  010F               	movlb	15	; () banked
 13422  0014A4  8D09               	bsf	9,6,b	;volatile
 13423  0014A6  D002               	goto	l492
 13424  0014A8                     l491:
 13425                           
 13426                           ; BSR set to: 0
 13427                           ;inc\CANlib.h: 942: else
 13428                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
 13429  0014A8  010F               	movlb	15	; () banked
 13430  0014AA  9D09               	bcf	9,6,b	;volatile
 13431  0014AC                     l492:
 13432                           
 13433                           ; BSR set to: 15
 13434                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
 13435  0014AC  0100               	movlb	0	; () banked
 13436  0014AE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13437  0014B0  D003               	goto	l493
 13438                           
 13439                           ; BSR set to: 0
 13440                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
 13441  0014B2  010F               	movlb	15	; () banked
 13442  0014B4  8F09               	bsf	9,7,b	;volatile
 13443  0014B6  D002               	goto	l5202
 13444  0014B8                     l493:
 13445                           
 13446                           ; BSR set to: 0
 13447                           ;inc\CANlib.h: 947: else
 13448                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
 13449  0014B8  010F               	movlb	15	; () banked
 13450  0014BA  9F09               	bcf	9,7,b	;volatile
 13451  0014BC                     l5202:
 13452                           
 13453                           ; BSR set to: 15
 13454                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
 13455  0014BC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13456  0014C0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13457  0014C4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13458  0014C8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13459  0014CC  0E16               	movlw	22
 13460  0014CE  D006               	goto	u6190
 13461  0014D0                     u6195:
 13462  0014D0  0100               	movlb	0	; () banked
 13463  0014D2  90D8               	bcf	status,0,c
 13464  0014D4  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13465  0014D6  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13466  0014D8  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13467  0014DA  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13468  0014DC                     u6190:
 13469  0014DC  2EE8               	decfsz	wreg,f,c
 13470  0014DE  D7F8               	goto	u6195
 13471  0014E0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13472  0014E4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13473  0014E8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13474  0014EC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13475                           
 13476                           ; BSR set to: 0
 13477                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
 13478  0014F0  0100               	movlb	0	; () banked
 13479  0014F2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13480  0014F4  0100               	movlb	0	; () banked
 13481  0014F6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13482  0014F8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13483  0014FA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13484  0014FC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13485                           
 13486                           ; BSR set to: 0
 13487                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
 13488  0014FE  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 13489  001502                     l5208:
 13490                           
 13491                           ; BSR set to: 0
 13492                           ;inc\CANlib.h: 953: }
 13493                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 13494  001502  0E03               	movlw	3
 13495  001504  0100               	movlb	0	; () banked
 13496  001506  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13497  001508  A4D8               	btfss	status,2,c
 13498  00150A  D089               	goto	l5242
 13499                           
 13500                           ; BSR set to: 0
 13501  00150C  0EF7               	movlw	247
 13502  00150E  0100               	movlb	0	; () banked
 13503  001510  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13504  001512  A4D8               	btfss	status,2,c
 13505  001514  D084               	goto	l5242
 13506                           
 13507                           ; BSR set to: 0
 13508                           ;inc\CANlib.h: 956: {
 13509                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
 13510  001516  010F               	movlb	15	; () banked
 13511  001518  870D               	bsf	13,3,b	;volatile
 13512                           
 13513                           ; BSR set to: 15
 13514                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
 13515  00151A  0100               	movlb	0	; () banked
 13516  00151C  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13517  00151E  0100               	movlb	0	; () banked
 13518  001520  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13519  001522  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13520  001524  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13521  001526  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13522                           
 13523                           ; BSR set to: 0
 13524                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
 13525  001528  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 13526                           
 13527                           ; BSR set to: 0
 13528                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
 13529  00152C  0E00               	movlw	0
 13530  00152E  0100               	movlb	0	; () banked
 13531  001530  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13532  001532  0100               	movlb	0	; () banked
 13533  001534  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13534  001536  0EFF               	movlw	255
 13535  001538  0100               	movlb	0	; () banked
 13536  00153A  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13537  00153C  0100               	movlb	0	; () banked
 13538  00153E  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13539  001540  0E00               	movlw	0
 13540  001542  0100               	movlb	0	; () banked
 13541  001544  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13542  001546  0100               	movlb	0	; () banked
 13543  001548  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13544  00154A  0E00               	movlw	0
 13545  00154C  0100               	movlb	0	; () banked
 13546  00154E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13547  001550  0100               	movlb	0	; () banked
 13548  001552  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13549                           
 13550                           ; BSR set to: 0
 13551                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
 13552  001554  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13553  001558  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13554  00155C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13555  001560  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13556  001564  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13557  001568  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13558  00156C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13559  001570  0100               	movlb	0	; () banked
 13560  001572  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13561  001574  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13562  001578  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13563  00157C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13564  001580  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13565                           
 13566                           ; BSR set to: 0
 13567                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
 13568  001584  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 13569                           
 13570                           ; BSR set to: 0
 13571                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
 13572  001588  0100               	movlb	0	; () banked
 13573  00158A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13574  00158C  D003               	goto	l496
 13575                           
 13576                           ; BSR set to: 0
 13577                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
 13578  00158E  010F               	movlb	15	; () banked
 13579  001590  810D               	bsf	13,0,b	;volatile
 13580  001592  D002               	goto	l497
 13581  001594                     l496:
 13582                           
 13583                           ; BSR set to: 0
 13584                           ;inc\CANlib.h: 968: else
 13585                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
 13586  001594  010F               	movlb	15	; () banked
 13587  001596  910D               	bcf	13,0,b	;volatile
 13588  001598                     l497:
 13589                           
 13590                           ; BSR set to: 15
 13591                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
 13592  001598  0100               	movlb	0	; () banked
 13593  00159A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13594  00159C  D003               	goto	l498
 13595                           
 13596                           ; BSR set to: 0
 13597                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
 13598  00159E  010F               	movlb	15	; () banked
 13599  0015A0  830D               	bsf	13,1,b	;volatile
 13600  0015A2  D002               	goto	l499
 13601  0015A4                     l498:
 13602                           
 13603                           ; BSR set to: 0
 13604                           ;inc\CANlib.h: 973: else
 13605                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
 13606  0015A4  010F               	movlb	15	; () banked
 13607  0015A6  930D               	bcf	13,1,b	;volatile
 13608  0015A8                     l499:
 13609                           
 13610                           ; BSR set to: 15
 13611                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
 13612  0015A8  0100               	movlb	0	; () banked
 13613  0015AA  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13614  0015AC  D003               	goto	l500
 13615                           
 13616                           ; BSR set to: 0
 13617                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
 13618  0015AE  010F               	movlb	15	; () banked
 13619  0015B0  8B0D               	bsf	13,5,b	;volatile
 13620  0015B2  D002               	goto	l501
 13621  0015B4                     l500:
 13622                           
 13623                           ; BSR set to: 0
 13624                           ;inc\CANlib.h: 978: else
 13625                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
 13626  0015B4  010F               	movlb	15	; () banked
 13627  0015B6  9B0D               	bcf	13,5,b	;volatile
 13628  0015B8                     l501:
 13629                           
 13630                           ; BSR set to: 15
 13631                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
 13632  0015B8  0100               	movlb	0	; () banked
 13633  0015BA  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13634  0015BC  D003               	goto	l502
 13635                           
 13636                           ; BSR set to: 0
 13637                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
 13638  0015BE  010F               	movlb	15	; () banked
 13639  0015C0  8D0D               	bsf	13,6,b	;volatile
 13640  0015C2  D002               	goto	l503
 13641  0015C4                     l502:
 13642                           
 13643                           ; BSR set to: 0
 13644                           ;inc\CANlib.h: 983: else
 13645                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
 13646  0015C4  010F               	movlb	15	; () banked
 13647  0015C6  9D0D               	bcf	13,6,b	;volatile
 13648  0015C8                     l503:
 13649                           
 13650                           ; BSR set to: 15
 13651                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
 13652  0015C8  0100               	movlb	0	; () banked
 13653  0015CA  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13654  0015CC  D003               	goto	l504
 13655                           
 13656                           ; BSR set to: 0
 13657                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
 13658  0015CE  010F               	movlb	15	; () banked
 13659  0015D0  8F0D               	bsf	13,7,b	;volatile
 13660  0015D2  D002               	goto	l5236
 13661  0015D4                     l504:
 13662                           
 13663                           ; BSR set to: 0
 13664                           ;inc\CANlib.h: 988: else
 13665                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
 13666  0015D4  010F               	movlb	15	; () banked
 13667  0015D6  9F0D               	bcf	13,7,b	;volatile
 13668  0015D8                     l5236:
 13669                           
 13670                           ; BSR set to: 15
 13671                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
 13672  0015D8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13673  0015DC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13674  0015E0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13675  0015E4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13676  0015E8  0E16               	movlw	22
 13677  0015EA  D006               	goto	u6270
 13678  0015EC                     u6275:
 13679  0015EC  0100               	movlb	0	; () banked
 13680  0015EE  90D8               	bcf	status,0,c
 13681  0015F0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13682  0015F2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13683  0015F4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13684  0015F6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13685  0015F8                     u6270:
 13686  0015F8  2EE8               	decfsz	wreg,f,c
 13687  0015FA  D7F8               	goto	u6275
 13688  0015FC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13689  001600  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13690  001604  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13691  001608  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13692                           
 13693                           ; BSR set to: 0
 13694                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
 13695  00160C  0100               	movlb	0	; () banked
 13696  00160E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13697  001610  0100               	movlb	0	; () banked
 13698  001612  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13699  001614  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13700  001616  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13701  001618  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13702                           
 13703                           ; BSR set to: 0
 13704                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
 13705  00161A  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 13706  00161E                     l5242:
 13707                           
 13708                           ; BSR set to: 0
 13709                           ;inc\CANlib.h: 994: }
 13710                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 13711  00161E  0E04               	movlw	4
 13712  001620  0100               	movlb	0	; () banked
 13713  001622  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13714  001624  A4D8               	btfss	status,2,c
 13715  001626  D089               	goto	l5276
 13716                           
 13717                           ; BSR set to: 0
 13718  001628  0EF7               	movlw	247
 13719  00162A  0100               	movlb	0	; () banked
 13720  00162C  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13721  00162E  A4D8               	btfss	status,2,c
 13722  001630  D084               	goto	l5276
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;inc\CANlib.h: 997: {
 13726                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
 13727  001632  010F               	movlb	15	; () banked
 13728  001634  8711               	bsf	17,3,b	;volatile
 13729                           
 13730                           ; BSR set to: 15
 13731                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
 13732  001636  0100               	movlb	0	; () banked
 13733  001638  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13734  00163A  0100               	movlb	0	; () banked
 13735  00163C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13736  00163E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13737  001640  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13738  001642  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13739                           
 13740                           ; BSR set to: 0
 13741                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
 13742  001644  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 13743                           
 13744                           ; BSR set to: 0
 13745                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
 13746  001648  0E00               	movlw	0
 13747  00164A  0100               	movlb	0	; () banked
 13748  00164C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13749  00164E  0100               	movlb	0	; () banked
 13750  001650  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13751  001652  0EFF               	movlw	255
 13752  001654  0100               	movlb	0	; () banked
 13753  001656  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13754  001658  0100               	movlb	0	; () banked
 13755  00165A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13756  00165C  0E00               	movlw	0
 13757  00165E  0100               	movlb	0	; () banked
 13758  001660  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13759  001662  0100               	movlb	0	; () banked
 13760  001664  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13761  001666  0E00               	movlw	0
 13762  001668  0100               	movlb	0	; () banked
 13763  00166A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13764  00166C  0100               	movlb	0	; () banked
 13765  00166E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13766                           
 13767                           ; BSR set to: 0
 13768                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
 13769  001670  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13770  001674  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13771  001678  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13772  00167C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13773  001680  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13774  001684  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13775  001688  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13776  00168C  0100               	movlb	0	; () banked
 13777  00168E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13778  001690  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13779  001694  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13780  001698  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13781  00169C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13782                           
 13783                           ; BSR set to: 0
 13784                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
 13785  0016A0  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 13786                           
 13787                           ; BSR set to: 0
 13788                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
 13789  0016A4  0100               	movlb	0	; () banked
 13790  0016A6  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13791  0016A8  D003               	goto	l507
 13792                           
 13793                           ; BSR set to: 0
 13794                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
 13795  0016AA  010F               	movlb	15	; () banked
 13796  0016AC  8111               	bsf	17,0,b	;volatile
 13797  0016AE  D002               	goto	l508
 13798  0016B0                     l507:
 13799                           
 13800                           ; BSR set to: 0
 13801                           ;inc\CANlib.h: 1009: else
 13802                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
 13803  0016B0  010F               	movlb	15	; () banked
 13804  0016B2  9111               	bcf	17,0,b	;volatile
 13805  0016B4                     l508:
 13806                           
 13807                           ; BSR set to: 15
 13808                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
 13809  0016B4  0100               	movlb	0	; () banked
 13810  0016B6  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13811  0016B8  D003               	goto	l509
 13812                           
 13813                           ; BSR set to: 0
 13814                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
 13815  0016BA  010F               	movlb	15	; () banked
 13816  0016BC  8311               	bsf	17,1,b	;volatile
 13817  0016BE  D002               	goto	l510
 13818  0016C0                     l509:
 13819                           
 13820                           ; BSR set to: 0
 13821                           ;inc\CANlib.h: 1014: else
 13822                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
 13823  0016C0  010F               	movlb	15	; () banked
 13824  0016C2  9311               	bcf	17,1,b	;volatile
 13825  0016C4                     l510:
 13826                           
 13827                           ; BSR set to: 15
 13828                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
 13829  0016C4  0100               	movlb	0	; () banked
 13830  0016C6  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13831  0016C8  D003               	goto	l511
 13832                           
 13833                           ; BSR set to: 0
 13834                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
 13835  0016CA  010F               	movlb	15	; () banked
 13836  0016CC  8B11               	bsf	17,5,b	;volatile
 13837  0016CE  D002               	goto	l512
 13838  0016D0                     l511:
 13839                           
 13840                           ; BSR set to: 0
 13841                           ;inc\CANlib.h: 1019: else
 13842                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
 13843  0016D0  010F               	movlb	15	; () banked
 13844  0016D2  9B11               	bcf	17,5,b	;volatile
 13845  0016D4                     l512:
 13846                           
 13847                           ; BSR set to: 15
 13848                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
 13849  0016D4  0100               	movlb	0	; () banked
 13850  0016D6  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13851  0016D8  D003               	goto	l513
 13852                           
 13853                           ; BSR set to: 0
 13854                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
 13855  0016DA  010F               	movlb	15	; () banked
 13856  0016DC  8D11               	bsf	17,6,b	;volatile
 13857  0016DE  D002               	goto	l514
 13858  0016E0                     l513:
 13859                           
 13860                           ; BSR set to: 0
 13861                           ;inc\CANlib.h: 1024: else
 13862                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
 13863  0016E0  010F               	movlb	15	; () banked
 13864  0016E2  9D11               	bcf	17,6,b	;volatile
 13865  0016E4                     l514:
 13866                           
 13867                           ; BSR set to: 15
 13868                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
 13869  0016E4  0100               	movlb	0	; () banked
 13870  0016E6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13871  0016E8  D003               	goto	l515
 13872                           
 13873                           ; BSR set to: 0
 13874                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
 13875  0016EA  010F               	movlb	15	; () banked
 13876  0016EC  8F11               	bsf	17,7,b	;volatile
 13877  0016EE  D002               	goto	l5270
 13878  0016F0                     l515:
 13879                           
 13880                           ; BSR set to: 0
 13881                           ;inc\CANlib.h: 1029: else
 13882                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
 13883  0016F0  010F               	movlb	15	; () banked
 13884  0016F2  9F11               	bcf	17,7,b	;volatile
 13885  0016F4                     l5270:
 13886                           
 13887                           ; BSR set to: 15
 13888                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
 13889  0016F4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13890  0016F8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13891  0016FC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13892  001700  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13893  001704  0E16               	movlw	22
 13894  001706  D006               	goto	u6350
 13895  001708                     u6355:
 13896  001708  0100               	movlb	0	; () banked
 13897  00170A  90D8               	bcf	status,0,c
 13898  00170C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13899  00170E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13900  001710  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13901  001712  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13902  001714                     u6350:
 13903  001714  2EE8               	decfsz	wreg,f,c
 13904  001716  D7F8               	goto	u6355
 13905  001718  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13906  00171C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13907  001720  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13908  001724  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13909                           
 13910                           ; BSR set to: 0
 13911                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
 13912  001728  0100               	movlb	0	; () banked
 13913  00172A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13914  00172C  0100               	movlb	0	; () banked
 13915  00172E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13916  001730  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13917  001732  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13918  001734  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13919                           
 13920                           ; BSR set to: 0
 13921                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
 13922  001736  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 13923  00173A                     l5276:
 13924                           
 13925                           ; BSR set to: 0
 13926                           ;inc\CANlib.h: 1035: }
 13927                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 13928  00173A  0E05               	movlw	5
 13929  00173C  0100               	movlb	0	; () banked
 13930  00173E  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13931  001740  A4D8               	btfss	status,2,c
 13932  001742  0012               	return	
 13933                           
 13934                           ; BSR set to: 0
 13935  001744  0EF7               	movlw	247
 13936  001746  0100               	movlb	0	; () banked
 13937  001748  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13938  00174A  A4D8               	btfss	status,2,c
 13939  00174C  0012               	return	
 13940                           
 13941                           ; BSR set to: 0
 13942                           ;inc\CANlib.h: 1038: {
 13943                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
 13944  00174E  010F               	movlb	15	; () banked
 13945  001750  8715               	bsf	21,3,b	;volatile
 13946                           
 13947                           ; BSR set to: 15
 13948                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
 13949  001752  0100               	movlb	0	; () banked
 13950  001754  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13951  001756  0100               	movlb	0	; () banked
 13952  001758  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13953  00175A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13954  00175C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13955  00175E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13956                           
 13957                           ; BSR set to: 0
 13958                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
 13959  001760  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 13960                           
 13961                           ; BSR set to: 0
 13962                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
 13963  001764  0E00               	movlw	0
 13964  001766  0100               	movlb	0	; () banked
 13965  001768  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13966  00176A  0100               	movlb	0	; () banked
 13967  00176C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13968  00176E  0EFF               	movlw	255
 13969  001770  0100               	movlb	0	; () banked
 13970  001772  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13971  001774  0100               	movlb	0	; () banked
 13972  001776  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13973  001778  0E00               	movlw	0
 13974  00177A  0100               	movlb	0	; () banked
 13975  00177C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13976  00177E  0100               	movlb	0	; () banked
 13977  001780  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13978  001782  0E00               	movlw	0
 13979  001784  0100               	movlb	0	; () banked
 13980  001786  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13981  001788  0100               	movlb	0	; () banked
 13982  00178A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13983                           
 13984                           ; BSR set to: 0
 13985                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
 13986  00178C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13987  001790  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13988  001794  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13989  001798  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13990  00179C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13991  0017A0  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13992  0017A4  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13993  0017A8  0100               	movlb	0	; () banked
 13994  0017AA  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13995  0017AC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13996  0017B0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13997  0017B4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13998  0017B8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13999                           
 14000                           ; BSR set to: 0
 14001                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
 14002  0017BC  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 14003                           
 14004                           ; BSR set to: 0
 14005                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
 14006  0017C0  0100               	movlb	0	; () banked
 14007  0017C2  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14008  0017C4  D003               	goto	l518
 14009                           
 14010                           ; BSR set to: 0
 14011                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
 14012  0017C6  010F               	movlb	15	; () banked
 14013  0017C8  8115               	bsf	21,0,b	;volatile
 14014  0017CA  D002               	goto	l519
 14015  0017CC                     l518:
 14016                           
 14017                           ; BSR set to: 0
 14018                           ;inc\CANlib.h: 1050: else
 14019                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
 14020  0017CC  010F               	movlb	15	; () banked
 14021  0017CE  9115               	bcf	21,0,b	;volatile
 14022  0017D0                     l519:
 14023                           
 14024                           ; BSR set to: 15
 14025                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
 14026  0017D0  0100               	movlb	0	; () banked
 14027  0017D2  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14028  0017D4  D003               	goto	l520
 14029                           
 14030                           ; BSR set to: 0
 14031                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
 14032  0017D6  010F               	movlb	15	; () banked
 14033  0017D8  8315               	bsf	21,1,b	;volatile
 14034  0017DA  D002               	goto	l521
 14035  0017DC                     l520:
 14036                           
 14037                           ; BSR set to: 0
 14038                           ;inc\CANlib.h: 1055: else
 14039                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
 14040  0017DC  010F               	movlb	15	; () banked
 14041  0017DE  9315               	bcf	21,1,b	;volatile
 14042  0017E0                     l521:
 14043                           
 14044                           ; BSR set to: 15
 14045                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
 14046  0017E0  0100               	movlb	0	; () banked
 14047  0017E2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14048  0017E4  D003               	goto	l522
 14049                           
 14050                           ; BSR set to: 0
 14051                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
 14052  0017E6  010F               	movlb	15	; () banked
 14053  0017E8  8B15               	bsf	21,5,b	;volatile
 14054  0017EA  D002               	goto	l523
 14055  0017EC                     l522:
 14056                           
 14057                           ; BSR set to: 0
 14058                           ;inc\CANlib.h: 1060: else
 14059                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
 14060  0017EC  010F               	movlb	15	; () banked
 14061  0017EE  9B15               	bcf	21,5,b	;volatile
 14062  0017F0                     l523:
 14063                           
 14064                           ; BSR set to: 15
 14065                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
 14066  0017F0  0100               	movlb	0	; () banked
 14067  0017F2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14068  0017F4  D003               	goto	l524
 14069                           
 14070                           ; BSR set to: 0
 14071                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
 14072  0017F6  010F               	movlb	15	; () banked
 14073  0017F8  8D15               	bsf	21,6,b	;volatile
 14074  0017FA  D002               	goto	l525
 14075  0017FC                     l524:
 14076                           
 14077                           ; BSR set to: 0
 14078                           ;inc\CANlib.h: 1065: else
 14079                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
 14080  0017FC  010F               	movlb	15	; () banked
 14081  0017FE  9D15               	bcf	21,6,b	;volatile
 14082  001800                     l525:
 14083                           
 14084                           ; BSR set to: 15
 14085                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
 14086  001800  0100               	movlb	0	; () banked
 14087  001802  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14088  001804  D003               	goto	l526
 14089                           
 14090                           ; BSR set to: 0
 14091                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
 14092  001806  010F               	movlb	15	; () banked
 14093  001808  8F15               	bsf	21,7,b	;volatile
 14094  00180A  D002               	goto	l5304
 14095  00180C                     l526:
 14096                           
 14097                           ; BSR set to: 0
 14098                           ;inc\CANlib.h: 1070: else
 14099                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
 14100  00180C  010F               	movlb	15	; () banked
 14101  00180E  9F15               	bcf	21,7,b	;volatile
 14102  001810                     l5304:
 14103                           
 14104                           ; BSR set to: 15
 14105                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
 14106  001810  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14107  001814  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14108  001818  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14109  00181C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14110  001820  0E16               	movlw	22
 14111  001822  D006               	goto	u6430
 14112  001824                     u6435:
 14113  001824  0100               	movlb	0	; () banked
 14114  001826  90D8               	bcf	status,0,c
 14115  001828  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14116  00182A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14117  00182C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14118  00182E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14119  001830                     u6430:
 14120  001830  2EE8               	decfsz	wreg,f,c
 14121  001832  D7F8               	goto	u6435
 14122  001834  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14123  001838  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14124  00183C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14125  001840  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14126                           
 14127                           ; BSR set to: 0
 14128                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
 14129  001844  0100               	movlb	0	; () banked
 14130  001846  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14131  001848  0100               	movlb	0	; () banked
 14132  00184A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14133  00184C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14134  00184E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14135  001850  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14136                           
 14137                           ; BSR set to: 0
 14138                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
 14139  001852  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 14140  001856  0012               	return	
 14141  001858                     __end_of_CANSetFilter:
 14142                           	opt stack 0
 14143                           tblptru	equ	0xFF8
 14144                           tblptrh	equ	0xFF7
 14145                           tblptrl	equ	0xFF6
 14146                           tablat	equ	0xFF5
 14147                           prodh	equ	0xFF4
 14148                           prodl	equ	0xFF3
 14149                           intcon	equ	0xFF2
 14150                           intcon2	equ	0xFF1
 14151                           postinc0	equ	0xFEE
 14152                           wreg	equ	0xFE8
 14153                           postdec1	equ	0xFE5
 14154                           fsr1l	equ	0xFE1
 14155                           indf2	equ	0xFDF
 14156                           postinc2	equ	0xFDE
 14157                           postdec2	equ	0xFDD
 14158                           fsr2h	equ	0xFDA
 14159                           fsr2l	equ	0xFD9
 14160                           status	equ	0xFD8
 14161                           
 14162 ;; *************** function _CANOperationMode *****************
 14163 ;; Defined at:
 14164 ;;		line 206 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 14165 ;; Parameters:    Size  Location     Type
 14166 ;;  mode            1    wreg     enum E16307
 14167 ;; Auto vars:     Size  Location     Type
 14168 ;;  mode            1   23[BANK0 ] enum E16307
 14169 ;; Return value:  Size  Location     Type
 14170 ;;		None               void
 14171 ;; Registers used:
 14172 ;;		wreg, status,2, status,0
 14173 ;; Tracked objects:
 14174 ;;		On entry : 0/0
 14175 ;;		On exit  : 0/0
 14176 ;;		Unchanged: 0/0
 14177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14179 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14181 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14182 ;;Total ram usage:        1 bytes
 14183 ;; Hardware stack levels used:    1
 14184 ;; Hardware stack levels required when called:    4
 14185 ;; This function calls:
 14186 ;;		Nothing
 14187 ;; This function is called by:
 14188 ;;		_CANInitialize
 14189 ;; This function uses a non-reentrant model
 14190 ;;
 14191                           
 14192                           	psect	text33
 14193  005EA6                     __ptext33:
 14194                           	opt stack 0
 14195  005EA6                     _CANOperationMode:
 14196                           	opt stack 24
 14197                           
 14198                           ; BSR set to: 0
 14199                           ;incstack = 0
 14200                           ;CANOperationMode@mode stored from wreg
 14201  005EA6  0100               	movlb	0	; () banked
 14202  005EA8  6F77               	movwf	CANOperationMode@mode& (0+255),b
 14203                           
 14204                           ;inc\CANlib.h: 208: CANCON = mode;
 14205  005EAA  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 14206  005EAE                     l4900:
 14207  005EAE  506E               	movf	3950,w,c	;volatile
 14208  005EB0  0BE0               	andlw	224
 14209  005EB2  0100               	movlb	0	; () banked
 14210  005EB4  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 14211  005EB6  B4D8               	btfsc	status,2,c
 14212  005EB8  0012               	return	
 14213  005EBA  D7F9               	goto	l4900
 14214  005EBC                     __end_of_CANOperationMode:
 14215                           	opt stack 0
 14216                           tblptru	equ	0xFF8
 14217                           tblptrh	equ	0xFF7
 14218                           tblptrl	equ	0xFF6
 14219                           tablat	equ	0xFF5
 14220                           prodh	equ	0xFF4
 14221                           prodl	equ	0xFF3
 14222                           intcon	equ	0xFF2
 14223                           intcon2	equ	0xFF1
 14224                           postinc0	equ	0xFEE
 14225                           wreg	equ	0xFE8
 14226                           postdec1	equ	0xFE5
 14227                           fsr1l	equ	0xFE1
 14228                           indf2	equ	0xFDF
 14229                           postinc2	equ	0xFDE
 14230                           postdec2	equ	0xFDD
 14231                           fsr2h	equ	0xFDA
 14232                           fsr2l	equ	0xFD9
 14233                           status	equ	0xFD8
 14234                           
 14235 ;; *************** function _can_interpreter *****************
 14236 ;; Defined at:
 14237 ;;		line 431 in file "parcheggio.c"
 14238 ;; Parameters:    Size  Location     Type
 14239 ;;		None
 14240 ;; Auto vars:     Size  Location     Type
 14241 ;;		None
 14242 ;; Return value:  Size  Location     Type
 14243 ;;		None               void
 14244 ;; Registers used:
 14245 ;;		wreg, status,2, status,0
 14246 ;; Tracked objects:
 14247 ;;		On entry : 0/0
 14248 ;;		On exit  : 0/0
 14249 ;;		Unchanged: 0/0
 14250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14253 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14254 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14255 ;;Total ram usage:        4 bytes
 14256 ;; Hardware stack levels used:    1
 14257 ;; Hardware stack levels required when called:    4
 14258 ;; This function calls:
 14259 ;;		Nothing
 14260 ;; This function is called by:
 14261 ;;		_main
 14262 ;; This function uses a non-reentrant model
 14263 ;;
 14264                           
 14265                           	psect	text34
 14266  005C5C                     __ptext34:
 14267                           	opt stack 0
 14268  005C5C                     _can_interpreter:
 14269                           	opt stack 26
 14270                           
 14271                           ;parcheggio.c: 432: left_speed = data_speed_rx[1];
 14272                           
 14273                           ; BSR set to: 0
 14274                           ;incstack = 0
 14275  005C5C  C109  F03A         	movff	_data_speed_rx+1,_left_speed
 14276  005C60  6A3B               	clrf	_left_speed+1,c
 14277                           
 14278                           ;parcheggio.c: 433: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 14279  005C62  503A               	movf	_left_speed,w,c
 14280  005C64  0100               	movlb	0	; () banked
 14281  005C66  6F77               	movwf	??_can_interpreter& (0+255),b
 14282  005C68  0101               	movlb	1	; () banked
 14283  005C6A  5108               	movf	_data_speed_rx& (0+255),w,b
 14284  005C6C  6E3A               	movwf	_left_speed,c
 14285  005C6E  C077  F03B         	movff	??_can_interpreter,_left_speed+1
 14286                           
 14287                           ; BSR set to: 1
 14288                           ;parcheggio.c: 434: right_speed = data_speed_rx[3];
 14289  005C72  C10B  F03E         	movff	_data_speed_rx+3,_right_speed
 14290  005C76  6A3F               	clrf	_right_speed+1,c
 14291                           
 14292                           ;parcheggio.c: 435: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 14293  005C78  503E               	movf	_right_speed,w,c
 14294  005C7A  0100               	movlb	0	; () banked
 14295  005C7C  6F77               	movwf	??_can_interpreter& (0+255),b
 14296  005C7E  0101               	movlb	1	; () banked
 14297  005C80  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 14298  005C82  6E3E               	movwf	_right_speed,c
 14299  005C84  C077  F03F         	movff	??_can_interpreter,_right_speed+1
 14300                           
 14301                           ; BSR set to: 1
 14302                           ;parcheggio.c: 436: actual_speed = (right_speed + left_speed) / 2;
 14303  005C88  503A               	movf	_left_speed,w,c
 14304  005C8A  243E               	addwf	_right_speed,w,c
 14305  005C8C  0100               	movlb	0	; () banked
 14306  005C8E  6F77               	movwf	??_can_interpreter& (0+255),b
 14307  005C90  503B               	movf	_left_speed+1,w,c
 14308  005C92  203F               	addwfc	_right_speed+1,w,c
 14309  005C94  0100               	movlb	0	; () banked
 14310  005C96  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 14311  005C98  90D8               	bcf	status,0,c
 14312  005C9A  0100               	movlb	0	; () banked
 14313  005C9C  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 14314  005C9E  0100               	movlb	0	; () banked
 14315  005CA0  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 14316  005CA2  0100               	movlb	0	; () banked
 14317  005CA4  3177               	rrcf	??_can_interpreter& (0+255),w,b
 14318  005CA6  0101               	movlb	1	; () banked
 14319  005CA8  6F44               	movwf	_actual_speed& (0+255),b
 14320  005CAA  C079  F145         	movff	??_can_interpreter+2,_actual_speed+1
 14321                           
 14322                           ; BSR set to: 1
 14323  005CAE  0012               	return		;funcret
 14324  005CB0                     __end_of_can_interpreter:
 14325                           	opt stack 0
 14326                           tblptru	equ	0xFF8
 14327                           tblptrh	equ	0xFF7
 14328                           tblptrl	equ	0xFF6
 14329                           tablat	equ	0xFF5
 14330                           prodh	equ	0xFF4
 14331                           prodl	equ	0xFF3
 14332                           intcon	equ	0xFF2
 14333                           intcon2	equ	0xFF1
 14334                           postinc0	equ	0xFEE
 14335                           wreg	equ	0xFE8
 14336                           postdec1	equ	0xFE5
 14337                           fsr1l	equ	0xFE1
 14338                           indf2	equ	0xFDF
 14339                           postinc2	equ	0xFDE
 14340                           postdec2	equ	0xFDD
 14341                           fsr2h	equ	0xFDA
 14342                           fsr2l	equ	0xFD9
 14343                           status	equ	0xFD8
 14344                           
 14345 ;; *************** function _ISR_Bassa *****************
 14346 ;; Defined at:
 14347 ;;		line 110 in file "parcheggio.c"
 14348 ;; Parameters:    Size  Location     Type
 14349 ;;		None
 14350 ;; Auto vars:     Size  Location     Type
 14351 ;;  i               1   34[COMRAM] unsigned char 
 14352 ;;  gigi            1   33[COMRAM] unsigned char 
 14353 ;; Return value:  Size  Location     Type
 14354 ;;		None               void
 14355 ;; Registers used:
 14356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14357 ;; Tracked objects:
 14358 ;;		On entry : 0/0
 14359 ;;		On exit  : 0/0
 14360 ;;		Unchanged: 0/0
 14361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14363 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14364 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14365 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14366 ;;Total ram usage:       23 bytes
 14367 ;; Hardware stack levels used:    1
 14368 ;; Hardware stack levels required when called:    3
 14369 ;; This function calls:
 14370 ;;		_CANreceiveMessage
 14371 ;; This function is called by:
 14372 ;;		Interrupt level 1
 14373 ;; This function uses a non-reentrant model
 14374 ;;
 14375                           
 14376                           	psect	intcodelo
 14377  000018                     __pintcodelo:
 14378                           	opt stack 0
 14379  000018                     _ISR_Bassa:
 14380                           	opt stack 21
 14381                           
 14382                           ; BSR set to: 1
 14383                           ;incstack = 0
 14384  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14385  00001A  CFD8 F011          	movff	status,??_ISR_Bassa+4
 14386  00001E  CFE8 F012          	movff	wreg,??_ISR_Bassa+5
 14387  000022  CFE0 F013          	movff	bsr,??_ISR_Bassa+6
 14388  000026  CFFA F014          	movff	pclath,??_ISR_Bassa+7
 14389  00002A  CFFB F015          	movff	pclatu,??_ISR_Bassa+8
 14390  00002E  CFE9 F016          	movff	fsr0l,??_ISR_Bassa+9
 14391  000032  CFEA F017          	movff	fsr0h,??_ISR_Bassa+10
 14392  000036  CFE1 F018          	movff	fsr1l,??_ISR_Bassa+11
 14393  00003A  CFE2 F019          	movff	fsr1h,??_ISR_Bassa+12
 14394  00003E  CFD9 F01A          	movff	fsr2l,??_ISR_Bassa+13
 14395  000042  CFDA F01B          	movff	fsr2h,??_ISR_Bassa+14
 14396  000046  CFF3 F01C          	movff	prodl,??_ISR_Bassa+15
 14397  00004A  CFF4 F01D          	movff	prodh,??_ISR_Bassa+16
 14398  00004E  CFF6 F01E          	movff	tblptrl,??_ISR_Bassa+17
 14399  000052  CFF7 F01F          	movff	tblptrh,??_ISR_Bassa+18
 14400  000056  CFF8 F020          	movff	tblptru,??_ISR_Bassa+19
 14401  00005A  CFF5 F021          	movff	tablat,??_ISR_Bassa+20
 14402                           
 14403                           ;parcheggio.c: 112: if (INTCONbits.TMR0IF == 1) {
 14404  00005E  A4F2               	btfss	intcon,2,c	;volatile
 14405  000060  D036               	goto	i1l6008
 14406                           
 14407                           ;parcheggio.c: 113: INTCONbits.INT0IE = 0;
 14408  000062  98F2               	bcf	intcon,4,c	;volatile
 14409                           
 14410                           ;parcheggio.c: 114: T0CONbits.TMR0ON = 0;
 14411  000064  9ED5               	bcf	4053,7,c	;volatile
 14412                           
 14413                           ;parcheggio.c: 115: TMR0H = 0x34;
 14414  000066  0E34               	movlw	52
 14415  000068  6ED7               	movwf	4055,c	;volatile
 14416                           
 14417                           ;parcheggio.c: 116: TMR0L = 0xE0;
 14418  00006A  0EE0               	movlw	224
 14419  00006C  6ED6               	movwf	4054,c	;volatile
 14420                           
 14421                           ;parcheggio.c: 117: T0CONbits.TMR0ON = 1;
 14422  00006E  8ED5               	bsf	4053,7,c	;volatile
 14423                           
 14424                           ;parcheggio.c: 118: if (distance_error == 1) {
 14425  000070  A646               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14426  000072  D00C               	goto	i1l5978
 14427                           
 14428                           ;parcheggio.c: 119: sensor_distance[MUX_index] = 5000;
 14429  000074  5042               	movf	_MUX_index,w,c	;volatile
 14430  000076  0D02               	mullw	2
 14431  000078  0E24               	movlw	low _sensor_distance
 14432  00007A  24F3               	addwf	prodl,w,c
 14433  00007C  6ED9               	movwf	fsr2l,c
 14434  00007E  0E00               	movlw	high _sensor_distance
 14435  000080  20F4               	addwfc	prodh,w,c
 14436  000082  6EDA               	movwf	fsr2h,c
 14437  000084  0E88               	movlw	136
 14438  000086  6EDE               	movwf	postinc2,c
 14439  000088  0E13               	movlw	19
 14440  00008A  6EDD               	movwf	postdec2,c
 14441  00008C                     i1l5978:
 14442                           
 14443                           ;parcheggio.c: 120: }
 14444                           ;parcheggio.c: 121: MUX_index++;
 14445  00008C  2A42               	incf	_MUX_index,f,c	;volatile
 14446                           
 14447                           ;parcheggio.c: 122: if (MUX_index == 8) {
 14448  00008E  0E08               	movlw	8
 14449  000090  1842               	xorwf	_MUX_index,w,c	;volatile
 14450  000092  A4D8               	btfss	status,2,c
 14451  000094  D002               	goto	i1l695
 14452                           
 14453                           ;parcheggio.c: 123: MUX_index = 0;
 14454  000096  0E00               	movlw	0
 14455  000098  6E42               	movwf	_MUX_index,c	;volatile
 14456  00009A                     i1l695:
 14457                           
 14458                           ;parcheggio.c: 124: }
 14459                           ;parcheggio.c: 126: unsigned char gigi = 0;
 14460  00009A  0E00               	movlw	0
 14461  00009C  6E22               	movwf	ISR_Bassa@gigi,c
 14462                           
 14463                           ;parcheggio.c: 127: gigi = MUX_select[MUX_index];
 14464  00009E  5042               	movf	_MUX_index,w,c	;volatile
 14465  0000A0  0D01               	mullw	1
 14466  0000A2  0E00               	movlw	low _MUX_select
 14467  0000A4  24F3               	addwf	prodl,w,c
 14468  0000A6  6ED9               	movwf	fsr2l,c
 14469  0000A8  0E01               	movlw	high _MUX_select
 14470  0000AA  20F4               	addwfc	prodh,w,c
 14471  0000AC  6EDA               	movwf	fsr2h,c
 14472  0000AE  50DF               	movf	indf2,w,c
 14473  0000B0  6E22               	movwf	ISR_Bassa@gigi,c
 14474                           
 14475                           ;parcheggio.c: 128: PORTA = gigi;
 14476  0000B2  C022  FF80         	movff	ISR_Bassa@gigi,3968	;volatile
 14477                           
 14478                           ;parcheggio.c: 129: TRISBbits.RB0 = 0;
 14479  0000B6  9093               	bcf	3987,0,c	;volatile
 14480                           
 14481                           ;parcheggio.c: 130: LATBbits.LATB0 = 1;
 14482  0000B8  808A               	bsf	3978,0,c	;volatile
 14483                           
 14484                           ;parcheggio.c: 131: _delay((unsigned long)((15)*(16000000/4000000.0)));
 14485  0000BA  0E14               	movlw	20
 14486  0000BC                     i1u965_27:
 14487  0000BC  2EE8               	decfsz	wreg,f,c
 14488  0000BE  D7FE               	goto	i1u965_27
 14489                           
 14490                           ;parcheggio.c: 132: distance_error = 1;
 14491  0000C0  8646               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14492                           
 14493                           ;parcheggio.c: 133: LATBbits.LATB0 = 0;
 14494  0000C2  908A               	bcf	3978,0,c	;volatile
 14495                           
 14496                           ;parcheggio.c: 134: TRISBbits.RB0 = 1;
 14497  0000C4  8093               	bsf	3987,0,c	;volatile
 14498                           
 14499                           ;parcheggio.c: 135: INTCONbits.INT0IF = 0;
 14500  0000C6  92F2               	bcf	intcon,1,c	;volatile
 14501                           
 14502                           ;parcheggio.c: 136: INTCONbits.INT0IE = 1;
 14503  0000C8  88F2               	bsf	intcon,4,c	;volatile
 14504                           
 14505                           ;parcheggio.c: 137: INTCONbits.TMR0IF = 0;
 14506  0000CA  94F2               	bcf	intcon,2,c	;volatile
 14507                           
 14508                           ;parcheggio.c: 138: INTCON2bits.INTEDG0 = 1;
 14509  0000CC  8CF1               	bsf	intcon2,6,c	;volatile
 14510  0000CE                     i1l6008:
 14511                           
 14512                           ;parcheggio.c: 139: }
 14513                           ;parcheggio.c: 141: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 14514  0000CE  A0A4               	btfss	4004,0,c	;volatile
 14515  0000D0  B2A4               	btfsc	4004,1,c	;volatile
 14516  0000D2  D001               	goto	i1l6012
 14517  0000D4  D09B               	goto	i1l709
 14518  0000D6                     i1l6012:
 14519                           
 14520                           ;parcheggio.c: 142: CANreceiveMessage(&msg);
 14521  0000D6  0E4A               	movlw	low _msg
 14522  0000D8  6E01               	movwf	CANreceiveMessage@msg,c
 14523  0000DA  0E01               	movlw	high _msg
 14524  0000DC  6E02               	movwf	CANreceiveMessage@msg+1,c
 14525  0000DE  EC89  F012         	call	_CANreceiveMessage	;wreg free
 14526                           
 14527                           ;parcheggio.c: 143: if (msg.identifier == 0b00000001101) {
 14528  0000E2  0E0D               	movlw	13
 14529  0000E4  0101               	movlb	1	; () banked
 14530  0000E6  194A               	xorwf	_msg& (0+255),w,b
 14531  0000E8  0101               	movlb	1	; () banked
 14532  0000EA  114B               	iorwf	(_msg+1)& (0+255),w,b
 14533  0000EC  0101               	movlb	1	; () banked
 14534  0000EE  114C               	iorwf	(_msg+2)& (0+255),w,b
 14535  0000F0  0101               	movlb	1	; () banked
 14536  0000F2  114D               	iorwf	(_msg+3)& (0+255),w,b
 14537  0000F4  B4D8               	btfsc	status,2,c
 14538                           
 14539                           ; BSR set to: 1
 14540                           ;parcheggio.c: 144: asd = 0;
 14541  0000F6  9246               	bcf	_asd/(0+8),_asd& (0+7),c	;volatile
 14542                           
 14543                           ; BSR set to: 1
 14544                           ;parcheggio.c: 145: }
 14545                           ;parcheggio.c: 146: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 14546                           
 14547                           ; BSR set to: 1
 14548  0000F8  0E07               	movlw	7
 14549  0000FA  0101               	movlb	1	; () banked
 14550  0000FC  194A               	xorwf	_msg& (0+255),w,b
 14551  0000FE  0101               	movlb	1	; () banked
 14552  000100  114B               	iorwf	(_msg+1)& (0+255),w,b
 14553  000102  0101               	movlb	1	; () banked
 14554  000104  114C               	iorwf	(_msg+2)& (0+255),w,b
 14555  000106  0101               	movlb	1	; () banked
 14556  000108  114D               	iorwf	(_msg+3)& (0+255),w,b
 14557  00010A  A4D8               	btfss	status,2,c
 14558  00010C  D02B               	goto	i1l6034
 14559                           
 14560                           ; BSR set to: 1
 14561  00010E  0101               	movlb	1	; () banked
 14562  000110  0558               	decf	(_msg+14)& (0+255),w,b
 14563  000112  B4D8               	btfsc	status,2,c
 14564  000114  D027               	goto	i1l6034
 14565                           
 14566                           ; BSR set to: 1
 14567                           ;parcheggio.c: 147: distance_average = 0;
 14568  000116  0E00               	movlw	0
 14569  000118  6E35               	movwf	_distance_average+1,c	;volatile
 14570  00011A  0E00               	movlw	0
 14571  00011C  6E34               	movwf	_distance_average,c	;volatile
 14572                           
 14573                           ; BSR set to: 1
 14574                           ;parcheggio.c: 148: distance_dx = msg.data[1];
 14575  00011E  C14F  F036         	movff	_msg+5,_distance_dx	;volatile
 14576  000122  6A37               	clrf	_distance_dx+1,c	;volatile
 14577                           
 14578                           ;parcheggio.c: 149: distance_dx = ((distance_dx << 8) | msg.data[0]);
 14579  000124  5036               	movf	_distance_dx,w,c	;volatile
 14580  000126  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14581  000128  0101               	movlb	1	; () banked
 14582  00012A  514E               	movf	(_msg+4)& (0+255),w,b
 14583  00012C  6E36               	movwf	_distance_dx,c	;volatile
 14584  00012E  C00D  F037         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 14585                           
 14586                           ; BSR set to: 1
 14587                           ;parcheggio.c: 150: distance_sx = msg.data[3];
 14588  000132  C151  F038         	movff	_msg+7,_distance_sx	;volatile
 14589  000136  6A39               	clrf	_distance_sx+1,c	;volatile
 14590                           
 14591                           ;parcheggio.c: 151: distance_sx = ((distance_sx << 8) | msg.data[2]);
 14592  000138  5038               	movf	_distance_sx,w,c	;volatile
 14593  00013A  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14594  00013C  0101               	movlb	1	; () banked
 14595  00013E  5150               	movf	(_msg+6)& (0+255),w,b
 14596  000140  6E38               	movwf	_distance_sx,c	;volatile
 14597  000142  C00D  F039         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 14598                           
 14599                           ; BSR set to: 1
 14600                           ;parcheggio.c: 152: distance_average = (distance_sx + distance_dx) / 2;
 14601  000146  5036               	movf	_distance_dx,w,c	;volatile
 14602  000148  2438               	addwf	_distance_sx,w,c	;volatile
 14603  00014A  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14604  00014C  5037               	movf	_distance_dx+1,w,c	;volatile
 14605  00014E  2039               	addwfc	_distance_sx+1,w,c	;volatile
 14606  000150  6E0E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14607  000152  90D8               	bcf	status,0,c
 14608  000154  300E               	rrcf	??_ISR_Bassa+1,w,c
 14609  000156  6E0F               	movwf	(??_ISR_Bassa+2)& (0+255),c
 14610  000158  300D               	rrcf	??_ISR_Bassa,w,c
 14611  00015A  6E34               	movwf	_distance_average,c	;volatile
 14612  00015C  C00F  F035         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 14613                           
 14614                           ; BSR set to: 1
 14615                           ;parcheggio.c: 153: distance_received = 1;
 14616  000160  8846               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 14617                           
 14618                           ; BSR set to: 1
 14619                           ;parcheggio.c: 154: distance_received1 = 1;
 14620  000162  8A46               	bsf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
 14621  000164                     i1l6034:
 14622                           
 14623                           ; BSR set to: 1
 14624                           ;parcheggio.c: 155: }
 14625                           ;parcheggio.c: 156: if (msg.identifier == 0b00000001010) {
 14626  000164  0E0A               	movlw	10
 14627  000166  0101               	movlb	1	; () banked
 14628  000168  194A               	xorwf	_msg& (0+255),w,b
 14629  00016A  0101               	movlb	1	; () banked
 14630  00016C  114B               	iorwf	(_msg+1)& (0+255),w,b
 14631  00016E  0101               	movlb	1	; () banked
 14632  000170  114C               	iorwf	(_msg+2)& (0+255),w,b
 14633  000172  0101               	movlb	1	; () banked
 14634  000174  114D               	iorwf	(_msg+3)& (0+255),w,b
 14635  000176  A4D8               	btfss	status,2,c
 14636  000178  D00C               	goto	i1l6040
 14637                           
 14638                           ; BSR set to: 1
 14639                           ;parcheggio.c: 157: if (msg.data[0] == 1) {
 14640  00017A  0101               	movlb	1	; () banked
 14641  00017C  054E               	decf	(_msg+4)& (0+255),w,b
 14642  00017E  A4D8               	btfss	status,2,c
 14643  000180  D003               	goto	i1l702
 14644                           
 14645                           ; BSR set to: 1
 14646                           ;parcheggio.c: 158: activation = 1;
 14647  000182  8046               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 14648                           
 14649                           ;parcheggio.c: 159: PORTBbits.RB6 = 1;
 14650  000184  8C81               	bsf	3969,6,c	;volatile
 14651                           
 14652                           ;parcheggio.c: 160: } else {
 14653  000186  D005               	goto	i1l6040
 14654  000188                     i1l702:
 14655                           
 14656                           ; BSR set to: 1
 14657                           ;parcheggio.c: 161: activation = 0;
 14658  000188  9046               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 14659                           
 14660                           ;parcheggio.c: 162: PORTBbits.RB4 = 0;
 14661  00018A  9881               	bcf	3969,4,c	;volatile
 14662                           
 14663                           ;parcheggio.c: 163: PORTBbits.RB5 = 0;
 14664  00018C  9A81               	bcf	3969,5,c	;volatile
 14665                           
 14666                           ;parcheggio.c: 164: PORTBbits.RB6 = 0;
 14667  00018E  9C81               	bcf	3969,6,c	;volatile
 14668                           
 14669                           ;parcheggio.c: 165: request_sent = 0;
 14670  000190  9047               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
 14671  000192                     i1l6040:
 14672                           
 14673                           ; BSR set to: 1
 14674                           ;parcheggio.c: 166: }
 14675                           ;parcheggio.c: 167: }
 14676                           ;parcheggio.c: 168: if (msg.identifier == 0b00000001100) {
 14677  000192  0E0C               	movlw	12
 14678  000194  0101               	movlb	1	; () banked
 14679  000196  194A               	xorwf	_msg& (0+255),w,b
 14680  000198  0101               	movlb	1	; () banked
 14681  00019A  114B               	iorwf	(_msg+1)& (0+255),w,b
 14682  00019C  0101               	movlb	1	; () banked
 14683  00019E  114C               	iorwf	(_msg+2)& (0+255),w,b
 14684  0001A0  0101               	movlb	1	; () banked
 14685  0001A2  114D               	iorwf	(_msg+3)& (0+255),w,b
 14686  0001A4  B4D8               	btfsc	status,2,c
 14687                           
 14688                           ; BSR set to: 1
 14689                           ;parcheggio.c: 169: start_operation = 1;
 14690  0001A6  8447               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14691                           
 14692                           ; BSR set to: 1
 14693                           ;parcheggio.c: 170: }
 14694                           ;parcheggio.c: 171: if (msg.identifier == 0b00000000110) {
 14695                           
 14696                           ; BSR set to: 1
 14697  0001A8  0E06               	movlw	6
 14698  0001AA  0101               	movlb	1	; () banked
 14699  0001AC  194A               	xorwf	_msg& (0+255),w,b
 14700  0001AE  0101               	movlb	1	; () banked
 14701  0001B0  114B               	iorwf	(_msg+1)& (0+255),w,b
 14702  0001B2  0101               	movlb	1	; () banked
 14703  0001B4  114C               	iorwf	(_msg+2)& (0+255),w,b
 14704  0001B6  0101               	movlb	1	; () banked
 14705  0001B8  114D               	iorwf	(_msg+3)& (0+255),w,b
 14706  0001BA  A4D8               	btfss	status,2,c
 14707  0001BC  D025               	goto	i1l705
 14708                           
 14709                           ; BSR set to: 1
 14710                           ;parcheggio.c: 172: for (unsigned char i = 0; i < 8; i++) {
 14711  0001BE  0E00               	movlw	0
 14712  0001C0  6E23               	movwf	ISR_Bassa@i,c
 14713  0001C2                     i1l6048:
 14714                           
 14715                           ; BSR set to: 1
 14716  0001C2  0E07               	movlw	7
 14717  0001C4  6423               	cpfsgt	ISR_Bassa@i,c
 14718  0001C6  D001               	goto	i1l6052
 14719  0001C8  D014               	goto	i1l6058
 14720  0001CA                     i1l6052:
 14721                           
 14722                           ;parcheggio.c: 173: data_speed_rx[i] = msg.data[i];
 14723  0001CA  5023               	movf	ISR_Bassa@i,w,c
 14724  0001CC  0D01               	mullw	1
 14725  0001CE  0E4E               	movlw	low (_msg+4)
 14726  0001D0  24F3               	addwf	prodl,w,c
 14727  0001D2  6ED9               	movwf	fsr2l,c
 14728  0001D4  0E01               	movlw	high (_msg+4)
 14729  0001D6  20F4               	addwfc	prodh,w,c
 14730  0001D8  6EDA               	movwf	fsr2h,c
 14731  0001DA  5023               	movf	ISR_Bassa@i,w,c
 14732  0001DC  0D01               	mullw	1
 14733  0001DE  0E08               	movlw	low _data_speed_rx
 14734  0001E0  24F3               	addwf	prodl,w,c
 14735  0001E2  6EE1               	movwf	fsr1l,c
 14736  0001E4  0E01               	movlw	high _data_speed_rx
 14737  0001E6  20F4               	addwfc	prodh,w,c
 14738  0001E8  6EE2               	movwf	fsr1h,c
 14739  0001EA  CFDF FFE7          	movff	indf2,indf1
 14740  0001EE  2A23               	incf	ISR_Bassa@i,f,c
 14741  0001F0  D7E8               	goto	i1l6048
 14742  0001F2                     i1l6058:
 14743                           
 14744                           ;parcheggio.c: 174: }
 14745                           ;parcheggio.c: 175: if (msg.identifier == 0b00000001101) {
 14746  0001F2  0E0D               	movlw	13
 14747  0001F4  0101               	movlb	1	; () banked
 14748  0001F6  194A               	xorwf	_msg& (0+255),w,b
 14749  0001F8  0101               	movlb	1	; () banked
 14750  0001FA  114B               	iorwf	(_msg+1)& (0+255),w,b
 14751  0001FC  0101               	movlb	1	; () banked
 14752  0001FE  114C               	iorwf	(_msg+2)& (0+255),w,b
 14753  000200  0101               	movlb	1	; () banked
 14754  000202  114D               	iorwf	(_msg+3)& (0+255),w,b
 14755  000204  B4D8               	btfsc	status,2,c
 14756                           
 14757                           ; BSR set to: 1
 14758                           ;parcheggio.c: 176: distance_wait = 0;
 14759  000206  9C46               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 14760  000208                     i1l705:
 14761                           
 14762                           ; BSR set to: 1
 14763                           ;parcheggio.c: 177: }
 14764                           ;parcheggio.c: 179: }
 14765                           ;parcheggio.c: 181: PIR3bits.RXB0IF = 0;
 14766  000208  90A4               	bcf	4004,0,c	;volatile
 14767                           
 14768                           ;parcheggio.c: 182: PIR3bits.RXB1IF = 0;
 14769  00020A  92A4               	bcf	4004,1,c	;volatile
 14770  00020C                     i1l709:
 14771  00020C  C021  FFF5         	movff	??_ISR_Bassa+20,tablat
 14772  000210  C020  FFF8         	movff	??_ISR_Bassa+19,tblptru
 14773  000214  C01F  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 14774  000218  C01E  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 14775  00021C  C01D  FFF4         	movff	??_ISR_Bassa+16,prodh
 14776  000220  C01C  FFF3         	movff	??_ISR_Bassa+15,prodl
 14777  000224  C01B  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 14778  000228  C01A  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 14779  00022C  C019  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 14780  000230  C018  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 14781  000234  C017  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 14782  000238  C016  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 14783  00023C  C015  FFFB         	movff	??_ISR_Bassa+8,pclatu
 14784  000240  C014  FFFA         	movff	??_ISR_Bassa+7,pclath
 14785  000244  C013  FFE0         	movff	??_ISR_Bassa+6,bsr
 14786  000248  C012  FFE8         	movff	??_ISR_Bassa+5,wreg
 14787  00024C  C011  FFD8         	movff	??_ISR_Bassa+4,status
 14788  000250  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 14789  000252  0010               	retfie	
 14790  000254                     __end_of_ISR_Bassa:
 14791                           	opt stack 0
 14792                           pclatu	equ	0xFFB
 14793                           pclath	equ	0xFFA
 14794                           tblptru	equ	0xFF8
 14795                           tblptrh	equ	0xFF7
 14796                           tblptrl	equ	0xFF6
 14797                           tablat	equ	0xFF5
 14798                           prodh	equ	0xFF4
 14799                           prodl	equ	0xFF3
 14800                           intcon	equ	0xFF2
 14801                           intcon2	equ	0xFF1
 14802                           postinc0	equ	0xFEE
 14803                           fsr0h	equ	0xFEA
 14804                           fsr0l	equ	0xFE9
 14805                           wreg	equ	0xFE8
 14806                           indf1	equ	0xFE7
 14807                           postdec1	equ	0xFE5
 14808                           fsr1h	equ	0xFE2
 14809                           fsr1l	equ	0xFE1
 14810                           bsr	equ	0xFE0
 14811                           indf2	equ	0xFDF
 14812                           postinc2	equ	0xFDE
 14813                           postdec2	equ	0xFDD
 14814                           fsr2h	equ	0xFDA
 14815                           fsr2l	equ	0xFD9
 14816                           status	equ	0xFD8
 14817                           
 14818 ;; *************** function _CANreceiveMessage *****************
 14819 ;; Defined at:
 14820 ;;		line 528 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 14821 ;; Parameters:    Size  Location     Type
 14822 ;;  msg             2    0[COMRAM] PTR struct .
 14823 ;;		 -> msg(15), 
 14824 ;; Auto vars:     Size  Location     Type
 14825 ;;  tamp            1   11[COMRAM] unsigned char 
 14826 ;;  error           1   10[COMRAM] unsigned char 
 14827 ;; Return value:  Size  Location     Type
 14828 ;;                  1    wreg      unsigned char 
 14829 ;; Registers used:
 14830 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14831 ;; Tracked objects:
 14832 ;;		On entry : 0/0
 14833 ;;		On exit  : 0/0
 14834 ;;		Unchanged: 0/0
 14835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14836 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14837 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14838 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14839 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14840 ;;Total ram usage:       12 bytes
 14841 ;; Hardware stack levels used:    1
 14842 ;; Hardware stack levels required when called:    2
 14843 ;; This function calls:
 14844 ;;		Nothing
 14845 ;; This function is called by:
 14846 ;;		_ISR_Bassa
 14847 ;; This function uses a non-reentrant model
 14848 ;;
 14849                           
 14850                           	psect	text36
 14851  002512                     __ptext36:
 14852                           	opt stack 0
 14853  002512                     _CANreceiveMessage:
 14854                           	opt stack 21
 14855                           
 14856                           ;inc\CANlib.h: 530: BYTE tamp;
 14857                           ;inc\CANlib.h: 531: BYTE error = 0;
 14858                           
 14859                           ;incstack = 0
 14860  002512  0E00               	movlw	0
 14861  002514  6E0B               	movwf	CANreceiveMessage@error,c
 14862                           
 14863                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 14864  002516  BE74               	btfsc	3956,7,c	;volatile
 14865                           
 14866                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 14867  002518  800B               	bsf	CANreceiveMessage@error,0,c
 14868                           
 14869                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 14870  00251A  BC74               	btfsc	3956,6,c	;volatile
 14871                           
 14872                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 14873  00251C  820B               	bsf	CANreceiveMessage@error,1,c
 14874                           
 14875                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 14876  00251E  010F               	movlb	15	; () banked
 14877  002520  AF50               	btfss	80,7,b	;volatile
 14878  002522  D143               	goto	i1l410
 14879                           
 14880                           ; BSR set to: 15
 14881                           ;inc\CANlib.h: 541: {
 14882                           ;inc\CANlib.h: 542: msg->identifier = 0;
 14883  002524  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14884  002528  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14885  00252C  6ADE               	clrf	postinc2,c
 14886  00252E  6ADE               	clrf	postinc2,c
 14887  002530  6ADE               	clrf	postinc2,c
 14888  002532  6ADD               	clrf	postdec2,c
 14889                           
 14890                           ; BSR set to: 15
 14891                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 14892  002534  EE20 F004          	lfsr	2,4
 14893  002538  5001               	movf	CANreceiveMessage@msg,w,c
 14894  00253A  26D9               	addwf	fsr2l,f,c
 14895  00253C  5002               	movf	CANreceiveMessage@msg+1,w,c
 14896  00253E  22DA               	addwfc	fsr2h,f,c
 14897  002540  CF56 FFDF          	movff	3926,indf2	;volatile
 14898                           
 14899                           ; BSR set to: 15
 14900                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 14901  002544  EE20 F005          	lfsr	2,5
 14902  002548  5001               	movf	CANreceiveMessage@msg,w,c
 14903  00254A  26D9               	addwf	fsr2l,f,c
 14904  00254C  5002               	movf	CANreceiveMessage@msg+1,w,c
 14905  00254E  22DA               	addwfc	fsr2h,f,c
 14906  002550  CF57 FFDF          	movff	3927,indf2	;volatile
 14907                           
 14908                           ; BSR set to: 15
 14909                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 14910  002554  EE20 F006          	lfsr	2,6
 14911  002558  5001               	movf	CANreceiveMessage@msg,w,c
 14912  00255A  26D9               	addwf	fsr2l,f,c
 14913  00255C  5002               	movf	CANreceiveMessage@msg+1,w,c
 14914  00255E  22DA               	addwfc	fsr2h,f,c
 14915  002560  CF58 FFDF          	movff	3928,indf2	;volatile
 14916                           
 14917                           ; BSR set to: 15
 14918                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 14919  002564  EE20 F007          	lfsr	2,7
 14920  002568  5001               	movf	CANreceiveMessage@msg,w,c
 14921  00256A  26D9               	addwf	fsr2l,f,c
 14922  00256C  5002               	movf	CANreceiveMessage@msg+1,w,c
 14923  00256E  22DA               	addwfc	fsr2h,f,c
 14924  002570  CF59 FFDF          	movff	3929,indf2	;volatile
 14925                           
 14926                           ; BSR set to: 15
 14927                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 14928  002574  EE20 F008          	lfsr	2,8
 14929  002578  5001               	movf	CANreceiveMessage@msg,w,c
 14930  00257A  26D9               	addwf	fsr2l,f,c
 14931  00257C  5002               	movf	CANreceiveMessage@msg+1,w,c
 14932  00257E  22DA               	addwfc	fsr2h,f,c
 14933  002580  CF5A FFDF          	movff	3930,indf2	;volatile
 14934                           
 14935                           ; BSR set to: 15
 14936                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 14937  002584  EE20 F009          	lfsr	2,9
 14938  002588  5001               	movf	CANreceiveMessage@msg,w,c
 14939  00258A  26D9               	addwf	fsr2l,f,c
 14940  00258C  5002               	movf	CANreceiveMessage@msg+1,w,c
 14941  00258E  22DA               	addwfc	fsr2h,f,c
 14942  002590  CF5B FFDF          	movff	3931,indf2	;volatile
 14943                           
 14944                           ; BSR set to: 15
 14945                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 14946  002594  EE20 F00A          	lfsr	2,10
 14947  002598  5001               	movf	CANreceiveMessage@msg,w,c
 14948  00259A  26D9               	addwf	fsr2l,f,c
 14949  00259C  5002               	movf	CANreceiveMessage@msg+1,w,c
 14950  00259E  22DA               	addwfc	fsr2h,f,c
 14951  0025A0  CF5C FFDF          	movff	3932,indf2	;volatile
 14952                           
 14953                           ; BSR set to: 15
 14954                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 14955  0025A4  EE20 F00B          	lfsr	2,11
 14956  0025A8  5001               	movf	CANreceiveMessage@msg,w,c
 14957  0025AA  26D9               	addwf	fsr2l,f,c
 14958  0025AC  5002               	movf	CANreceiveMessage@msg+1,w,c
 14959  0025AE  22DA               	addwfc	fsr2h,f,c
 14960  0025B0  CF5D FFDF          	movff	3933,indf2	;volatile
 14961                           
 14962                           ; BSR set to: 15
 14963                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 14964  0025B4  EE20 F00E          	lfsr	2,14
 14965  0025B8  5001               	movf	CANreceiveMessage@msg,w,c
 14966  0025BA  26D9               	addwf	fsr2l,f,c
 14967  0025BC  5002               	movf	CANreceiveMessage@msg+1,w,c
 14968  0025BE  22DA               	addwfc	fsr2h,f,c
 14969  0025C0  010F               	movlb	15	; () banked
 14970  0025C2  AD55               	btfss	85,6,b	;volatile
 14971  0025C4  D002               	goto	i1u672_20
 14972  0025C6  0E01               	movlw	1
 14973  0025C8  D001               	goto	i1u672_26
 14974  0025CA                     i1u672_20:
 14975  0025CA  0E00               	movlw	0
 14976  0025CC                     i1u672_26:
 14977  0025CC  6EDF               	movwf	indf2,c
 14978                           
 14979                           ; BSR set to: 15
 14980                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 14981  0025CE  EE20 F00D          	lfsr	2,13
 14982  0025D2  5001               	movf	CANreceiveMessage@msg,w,c
 14983  0025D4  26D9               	addwf	fsr2l,f,c
 14984  0025D6  5002               	movf	CANreceiveMessage@msg+1,w,c
 14985  0025D8  22DA               	addwfc	fsr2h,f,c
 14986  0025DA  010F               	movlb	15	; () banked
 14987  0025DC  5155               	movf	85,w,b	;volatile
 14988  0025DE  0B0F               	andlw	15
 14989  0025E0  6EDF               	movwf	indf2,c
 14990                           
 14991                           ; BSR set to: 15
 14992                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 14993  0025E2  EE20 F00C          	lfsr	2,12
 14994  0025E6  5001               	movf	CANreceiveMessage@msg,w,c
 14995  0025E8  26D9               	addwf	fsr2l,f,c
 14996  0025EA  5002               	movf	CANreceiveMessage@msg+1,w,c
 14997  0025EC  22DA               	addwfc	fsr2h,f,c
 14998  0025EE  010F               	movlb	15	; () banked
 14999  0025F0  A752               	btfss	82,3,b	;volatile
 15000  0025F2  D002               	goto	i1u673_20
 15001  0025F4  0E01               	movlw	1
 15002  0025F6  D001               	goto	i1u673_26
 15003  0025F8                     i1u673_20:
 15004  0025F8  0E00               	movlw	0
 15005  0025FA                     i1u673_26:
 15006  0025FA  6EDF               	movwf	indf2,c
 15007                           
 15008                           ; BSR set to: 15
 15009                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 15010  0025FC  010F               	movlb	15	; () banked
 15011  0025FE  B752               	btfsc	82,3,b	;volatile
 15012  002600  D044               	goto	i1l5586
 15013                           
 15014                           ; BSR set to: 15
 15015                           ;inc\CANlib.h: 559: {
 15016                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 15017  002602  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 15018  002606  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15019  002608  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15020  00260A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15021  00260C  0E03               	movlw	3
 15022  00260E                     i1u675_25:
 15023  00260E  90D8               	bcf	status,0,c
 15024  002610  3603               	rlcf	??_CANreceiveMessage,f,c
 15025  002612  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15026  002614  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15027  002616  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15028  002618  2EE8               	decfsz	wreg,f,c
 15029  00261A  D7F9               	goto	i1u675_25
 15030  00261C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15031  002620  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15032  002624  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15033  002628  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15034  00262C  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15035  002630  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15036                           
 15037                           ; BSR set to: 15
 15038                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 15039  002634  010F               	movlb	15	; () banked
 15040  002636  3952               	swapf	82,w,b	;volatile
 15041  002638  42E8               	rrncf	wreg,f,c
 15042  00263A  0B07               	andlw	7
 15043  00263C  0B07               	andlw	7
 15044  00263E  6E0C               	movwf	CANreceiveMessage@tamp,c
 15045                           
 15046                           ; BSR set to: 15
 15047                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 15048  002640  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15049  002644  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15050  002648  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 15051  00264C  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 15052  002650  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 15053  002654  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 15054  002658  500C               	movf	CANreceiveMessage@tamp,w,c
 15055  00265A  2403               	addwf	??_CANreceiveMessage,w,c
 15056  00265C  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 15057  00265E  0E00               	movlw	0
 15058  002660  2004               	addwfc	??_CANreceiveMessage+1,w,c
 15059  002662  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 15060  002664  0E00               	movlw	0
 15061  002666  2005               	addwfc	??_CANreceiveMessage+2,w,c
 15062  002668  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 15063  00266A  0E00               	movlw	0
 15064  00266C  2006               	addwfc	??_CANreceiveMessage+3,w,c
 15065  00266E  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 15066  002670  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15067  002674  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15068  002678  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 15069  00267C  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 15070  002680  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 15071  002684  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 15072                           
 15073                           ;inc\CANlib.h: 563: }
 15074  002688  D08D               	goto	i1l5612
 15075  00268A                     i1l5586:
 15076                           
 15077                           ; BSR set to: 15
 15078                           ;inc\CANlib.h: 564: else
 15079                           ;inc\CANlib.h: 565: {
 15080                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 15081  00268A  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
 15082  00268E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15083  002690  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15084  002692  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15085  002694  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15086  002698  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15087  00269C  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15088  0026A0  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15089  0026A4  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15090  0026A8  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15091                           
 15092                           ; BSR set to: 15
 15093                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 15094  0026AC  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
 15095  0026B0  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15096  0026B2  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15097  0026B4  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15098  0026B6  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 15099  0026BA  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 15100  0026BE  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 15101  0026C2  6A03               	clrf	??_CANreceiveMessage,c
 15102  0026C4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15103  0026C8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15104  0026CC  5003               	movf	??_CANreceiveMessage,w,c
 15105  0026CE  26DE               	addwf	postinc2,f,c
 15106  0026D0  5004               	movf	??_CANreceiveMessage+1,w,c
 15107  0026D2  22DE               	addwfc	postinc2,f,c
 15108  0026D4  5005               	movf	??_CANreceiveMessage+2,w,c
 15109  0026D6  22DE               	addwfc	postinc2,f,c
 15110  0026D8  5006               	movf	??_CANreceiveMessage+3,w,c
 15111  0026DA  22DE               	addwfc	postinc2,f,c
 15112                           
 15113                           ; BSR set to: 15
 15114                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 15115  0026DC  010F               	movlb	15	; () banked
 15116  0026DE  A152               	btfss	82,0,b	;volatile
 15117  0026E0  D00C               	goto	i1l5594
 15118                           
 15119                           ; BSR set to: 15
 15120                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 15121  0026E2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15122  0026E6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15123  0026EA  0E00               	movlw	0
 15124  0026EC  12DE               	iorwf	postinc2,f,c
 15125  0026EE  0E00               	movlw	0
 15126  0026F0  12DE               	iorwf	postinc2,f,c
 15127  0026F2  0E01               	movlw	1
 15128  0026F4  12DE               	iorwf	postinc2,f,c
 15129  0026F6  0E00               	movlw	0
 15130  0026F8  12DE               	iorwf	postinc2,f,c
 15131  0026FA                     i1l5594:
 15132                           
 15133                           ; BSR set to: 15
 15134                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 15135  0026FA  010F               	movlb	15	; () banked
 15136  0026FC  A352               	btfss	82,1,b	;volatile
 15137  0026FE  D00C               	goto	i1l5598
 15138                           
 15139                           ; BSR set to: 15
 15140                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 15141  002700  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15142  002704  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15143  002708  0E00               	movlw	0
 15144  00270A  12DE               	iorwf	postinc2,f,c
 15145  00270C  0E00               	movlw	0
 15146  00270E  12DE               	iorwf	postinc2,f,c
 15147  002710  0E02               	movlw	2
 15148  002712  12DE               	iorwf	postinc2,f,c
 15149  002714  0E00               	movlw	0
 15150  002716  12DE               	iorwf	postinc2,f,c
 15151  002718                     i1l5598:
 15152                           
 15153                           ; BSR set to: 15
 15154                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 15155  002718  010F               	movlb	15	; () banked
 15156  00271A  AB52               	btfss	82,5,b	;volatile
 15157  00271C  D00C               	goto	i1l5602
 15158                           
 15159                           ; BSR set to: 15
 15160                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 15161  00271E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15162  002722  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15163  002726  0E00               	movlw	0
 15164  002728  12DE               	iorwf	postinc2,f,c
 15165  00272A  0E00               	movlw	0
 15166  00272C  12DE               	iorwf	postinc2,f,c
 15167  00272E  0E04               	movlw	4
 15168  002730  12DE               	iorwf	postinc2,f,c
 15169  002732  0E00               	movlw	0
 15170  002734  12DE               	iorwf	postinc2,f,c
 15171  002736                     i1l5602:
 15172                           
 15173                           ; BSR set to: 15
 15174                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 15175  002736  010F               	movlb	15	; () banked
 15176  002738  AD52               	btfss	82,6,b	;volatile
 15177  00273A  D00C               	goto	i1l5606
 15178                           
 15179                           ; BSR set to: 15
 15180                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 15181  00273C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15182  002740  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15183  002744  0E00               	movlw	0
 15184  002746  12DE               	iorwf	postinc2,f,c
 15185  002748  0E00               	movlw	0
 15186  00274A  12DE               	iorwf	postinc2,f,c
 15187  00274C  0E08               	movlw	8
 15188  00274E  12DE               	iorwf	postinc2,f,c
 15189  002750  0E00               	movlw	0
 15190  002752  12DE               	iorwf	postinc2,f,c
 15191  002754                     i1l5606:
 15192                           
 15193                           ; BSR set to: 15
 15194                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 15195  002754  010F               	movlb	15	; () banked
 15196  002756  AF52               	btfss	82,7,b	;volatile
 15197  002758  D00C               	goto	i1l5610
 15198                           
 15199                           ; BSR set to: 15
 15200                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 15201  00275A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15202  00275E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15203  002762  0E00               	movlw	0
 15204  002764  12DE               	iorwf	postinc2,f,c
 15205  002766  0E00               	movlw	0
 15206  002768  12DE               	iorwf	postinc2,f,c
 15207  00276A  0E10               	movlw	16
 15208  00276C  12DE               	iorwf	postinc2,f,c
 15209  00276E  0E00               	movlw	0
 15210  002770  12DE               	iorwf	postinc2,f,c
 15211  002772                     i1l5610:
 15212                           
 15213                           ; BSR set to: 15
 15214                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 15215  002772  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 15216  002776  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15217  002778  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15218  00277A  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15219  00277C  0E15               	movlw	21
 15220  00277E                     i1u681_25:
 15221  00277E  90D8               	bcf	status,0,c
 15222  002780  3603               	rlcf	??_CANreceiveMessage,f,c
 15223  002782  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15224  002784  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15225  002786  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15226  002788  2EE8               	decfsz	wreg,f,c
 15227  00278A  D7F9               	goto	i1u681_25
 15228  00278C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15229  002790  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15230  002794  5003               	movf	??_CANreceiveMessage,w,c
 15231  002796  12DE               	iorwf	postinc2,f,c
 15232  002798  5004               	movf	??_CANreceiveMessage+1,w,c
 15233  00279A  12DE               	iorwf	postinc2,f,c
 15234  00279C  5005               	movf	??_CANreceiveMessage+2,w,c
 15235  00279E  12DE               	iorwf	postinc2,f,c
 15236  0027A0  5006               	movf	??_CANreceiveMessage+3,w,c
 15237  0027A2  12DE               	iorwf	postinc2,f,c
 15238  0027A4                     i1l5612:
 15239                           
 15240                           ; BSR set to: 15
 15241                           ;inc\CANlib.h: 581: }
 15242                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 15243  0027A4  010F               	movlb	15	; () banked
 15244  0027A6  9F50               	bcf	80,7,b	;volatile
 15245                           
 15246                           ; BSR set to: 15
 15247                           ;inc\CANlib.h: 584: return (error);
 15248                           ;	Return value of _CANreceiveMessage is never used
 15249  0027A8  0012               	return	
 15250  0027AA                     i1l410:
 15251                           
 15252                           ; BSR set to: 15
 15253                           ;inc\CANlib.h: 585: }
 15254                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 15255  0027AA  AE60               	btfss	3936,7,c	;volatile
 15256  0027AC  0012               	return	
 15257                           
 15258                           ; BSR set to: 15
 15259                           ;inc\CANlib.h: 588: {
 15260                           ;inc\CANlib.h: 589: msg->identifier = 0;
 15261  0027AE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15262  0027B2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15263  0027B6  6ADE               	clrf	postinc2,c
 15264  0027B8  6ADE               	clrf	postinc2,c
 15265  0027BA  6ADE               	clrf	postinc2,c
 15266  0027BC  6ADD               	clrf	postdec2,c
 15267                           
 15268                           ; BSR set to: 15
 15269                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 15270  0027BE  EE20 F004          	lfsr	2,4
 15271  0027C2  5001               	movf	CANreceiveMessage@msg,w,c
 15272  0027C4  26D9               	addwf	fsr2l,f,c
 15273  0027C6  5002               	movf	CANreceiveMessage@msg+1,w,c
 15274  0027C8  22DA               	addwfc	fsr2h,f,c
 15275  0027CA  CF66 FFDF          	movff	3942,indf2	;volatile
 15276                           
 15277                           ; BSR set to: 15
 15278                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 15279  0027CE  EE20 F005          	lfsr	2,5
 15280  0027D2  5001               	movf	CANreceiveMessage@msg,w,c
 15281  0027D4  26D9               	addwf	fsr2l,f,c
 15282  0027D6  5002               	movf	CANreceiveMessage@msg+1,w,c
 15283  0027D8  22DA               	addwfc	fsr2h,f,c
 15284  0027DA  CF67 FFDF          	movff	3943,indf2	;volatile
 15285                           
 15286                           ; BSR set to: 15
 15287                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 15288  0027DE  EE20 F006          	lfsr	2,6
 15289  0027E2  5001               	movf	CANreceiveMessage@msg,w,c
 15290  0027E4  26D9               	addwf	fsr2l,f,c
 15291  0027E6  5002               	movf	CANreceiveMessage@msg+1,w,c
 15292  0027E8  22DA               	addwfc	fsr2h,f,c
 15293  0027EA  CF68 FFDF          	movff	3944,indf2	;volatile
 15294                           
 15295                           ; BSR set to: 15
 15296                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 15297  0027EE  EE20 F007          	lfsr	2,7
 15298  0027F2  5001               	movf	CANreceiveMessage@msg,w,c
 15299  0027F4  26D9               	addwf	fsr2l,f,c
 15300  0027F6  5002               	movf	CANreceiveMessage@msg+1,w,c
 15301  0027F8  22DA               	addwfc	fsr2h,f,c
 15302  0027FA  CF69 FFDF          	movff	3945,indf2	;volatile
 15303                           
 15304                           ; BSR set to: 15
 15305                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 15306  0027FE  EE20 F008          	lfsr	2,8
 15307  002802  5001               	movf	CANreceiveMessage@msg,w,c
 15308  002804  26D9               	addwf	fsr2l,f,c
 15309  002806  5002               	movf	CANreceiveMessage@msg+1,w,c
 15310  002808  22DA               	addwfc	fsr2h,f,c
 15311  00280A  CF6A FFDF          	movff	3946,indf2	;volatile
 15312                           
 15313                           ; BSR set to: 15
 15314                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 15315  00280E  EE20 F009          	lfsr	2,9
 15316  002812  5001               	movf	CANreceiveMessage@msg,w,c
 15317  002814  26D9               	addwf	fsr2l,f,c
 15318  002816  5002               	movf	CANreceiveMessage@msg+1,w,c
 15319  002818  22DA               	addwfc	fsr2h,f,c
 15320  00281A  CF6B FFDF          	movff	3947,indf2	;volatile
 15321                           
 15322                           ; BSR set to: 15
 15323                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 15324  00281E  EE20 F00A          	lfsr	2,10
 15325  002822  5001               	movf	CANreceiveMessage@msg,w,c
 15326  002824  26D9               	addwf	fsr2l,f,c
 15327  002826  5002               	movf	CANreceiveMessage@msg+1,w,c
 15328  002828  22DA               	addwfc	fsr2h,f,c
 15329  00282A  CF6C FFDF          	movff	3948,indf2	;volatile
 15330                           
 15331                           ; BSR set to: 15
 15332                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 15333  00282E  EE20 F00B          	lfsr	2,11
 15334  002832  5001               	movf	CANreceiveMessage@msg,w,c
 15335  002834  26D9               	addwf	fsr2l,f,c
 15336  002836  5002               	movf	CANreceiveMessage@msg+1,w,c
 15337  002838  22DA               	addwfc	fsr2h,f,c
 15338  00283A  CF6D FFDF          	movff	3949,indf2	;volatile
 15339                           
 15340                           ; BSR set to: 15
 15341                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 15342  00283E  EE20 F00E          	lfsr	2,14
 15343  002842  5001               	movf	CANreceiveMessage@msg,w,c
 15344  002844  26D9               	addwf	fsr2l,f,c
 15345  002846  5002               	movf	CANreceiveMessage@msg+1,w,c
 15346  002848  22DA               	addwfc	fsr2h,f,c
 15347  00284A  AC65               	btfss	3941,6,c	;volatile
 15348  00284C  D002               	goto	i1u683_20
 15349  00284E  0E01               	movlw	1
 15350  002850  D001               	goto	i1u683_26
 15351  002852                     i1u683_20:
 15352  002852  0E00               	movlw	0
 15353  002854                     i1u683_26:
 15354  002854  6EDF               	movwf	indf2,c
 15355                           
 15356                           ; BSR set to: 15
 15357                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 15358  002856  EE20 F00D          	lfsr	2,13
 15359  00285A  5001               	movf	CANreceiveMessage@msg,w,c
 15360  00285C  26D9               	addwf	fsr2l,f,c
 15361  00285E  5002               	movf	CANreceiveMessage@msg+1,w,c
 15362  002860  22DA               	addwfc	fsr2h,f,c
 15363  002862  5065               	movf	3941,w,c	;volatile
 15364  002864  0B0F               	andlw	15
 15365  002866  6EDF               	movwf	indf2,c
 15366                           
 15367                           ; BSR set to: 15
 15368                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 15369  002868  EE20 F00C          	lfsr	2,12
 15370  00286C  5001               	movf	CANreceiveMessage@msg,w,c
 15371  00286E  26D9               	addwf	fsr2l,f,c
 15372  002870  5002               	movf	CANreceiveMessage@msg+1,w,c
 15373  002872  22DA               	addwfc	fsr2h,f,c
 15374  002874  A662               	btfss	3938,3,c	;volatile
 15375  002876  D002               	goto	i1u684_20
 15376  002878  0E01               	movlw	1
 15377  00287A  D001               	goto	i1u684_26
 15378  00287C                     i1u684_20:
 15379  00287C  0E00               	movlw	0
 15380  00287E                     i1u684_26:
 15381  00287E  6EDF               	movwf	indf2,c
 15382                           
 15383                           ; BSR set to: 15
 15384                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 15385  002880  B662               	btfsc	3938,3,c	;volatile
 15386  002882  D043               	goto	i1l5648
 15387                           
 15388                           ; BSR set to: 15
 15389                           ;inc\CANlib.h: 606: {
 15390                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 15391  002884  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15392  002888  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15393  00288A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15394  00288C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15395  00288E  0E03               	movlw	3
 15396  002890                     i1u686_25:
 15397  002890  90D8               	bcf	status,0,c
 15398  002892  3603               	rlcf	??_CANreceiveMessage,f,c
 15399  002894  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15400  002896  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15401  002898  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15402  00289A  2EE8               	decfsz	wreg,f,c
 15403  00289C  D7F9               	goto	i1u686_25
 15404  00289E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15405  0028A2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15406  0028A6  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15407  0028AA  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15408  0028AE  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15409  0028B2  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15410                           
 15411                           ; BSR set to: 15
 15412                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 15413  0028B6  3862               	swapf	3938,w,c	;volatile
 15414  0028B8  42E8               	rrncf	wreg,f,c
 15415  0028BA  0B07               	andlw	7
 15416  0028BC  0B07               	andlw	7
 15417  0028BE  6E0C               	movwf	CANreceiveMessage@tamp,c
 15418                           
 15419                           ; BSR set to: 15
 15420                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 15421  0028C0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15422  0028C4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15423  0028C8  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 15424  0028CC  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 15425  0028D0  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 15426  0028D4  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 15427  0028D8  500C               	movf	CANreceiveMessage@tamp,w,c
 15428  0028DA  2403               	addwf	??_CANreceiveMessage,w,c
 15429  0028DC  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 15430  0028DE  0E00               	movlw	0
 15431  0028E0  2004               	addwfc	??_CANreceiveMessage+1,w,c
 15432  0028E2  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 15433  0028E4  0E00               	movlw	0
 15434  0028E6  2005               	addwfc	??_CANreceiveMessage+2,w,c
 15435  0028E8  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 15436  0028EA  0E00               	movlw	0
 15437  0028EC  2006               	addwfc	??_CANreceiveMessage+3,w,c
 15438  0028EE  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 15439  0028F0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15440  0028F4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15441  0028F8  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 15442  0028FC  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 15443  002900  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 15444  002904  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 15445                           
 15446                           ;inc\CANlib.h: 610: }
 15447  002908  D088               	goto	i1l5674
 15448  00290A                     i1l5648:
 15449                           
 15450                           ; BSR set to: 15
 15451                           ;inc\CANlib.h: 611: else
 15452                           ;inc\CANlib.h: 612: {
 15453                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 15454  00290A  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
 15455  00290E  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15456  002910  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15457  002912  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15458  002914  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15459  002918  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15460  00291C  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15461  002920  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15462  002924  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15463  002928  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15464                           
 15465                           ; BSR set to: 15
 15466                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 15467  00292C  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
 15468  002930  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15469  002932  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15470  002934  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15471  002936  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 15472  00293A  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 15473  00293E  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 15474  002942  6A03               	clrf	??_CANreceiveMessage,c
 15475  002944  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15476  002948  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15477  00294C  5003               	movf	??_CANreceiveMessage,w,c
 15478  00294E  26DE               	addwf	postinc2,f,c
 15479  002950  5004               	movf	??_CANreceiveMessage+1,w,c
 15480  002952  22DE               	addwfc	postinc2,f,c
 15481  002954  5005               	movf	??_CANreceiveMessage+2,w,c
 15482  002956  22DE               	addwfc	postinc2,f,c
 15483  002958  5006               	movf	??_CANreceiveMessage+3,w,c
 15484  00295A  22DE               	addwfc	postinc2,f,c
 15485                           
 15486                           ; BSR set to: 15
 15487                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 15488  00295C  A062               	btfss	3938,0,c	;volatile
 15489  00295E  D00C               	goto	i1l5656
 15490                           
 15491                           ; BSR set to: 15
 15492                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 15493  002960  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15494  002964  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15495  002968  0E00               	movlw	0
 15496  00296A  12DE               	iorwf	postinc2,f,c
 15497  00296C  0E00               	movlw	0
 15498  00296E  12DE               	iorwf	postinc2,f,c
 15499  002970  0E01               	movlw	1
 15500  002972  12DE               	iorwf	postinc2,f,c
 15501  002974  0E00               	movlw	0
 15502  002976  12DE               	iorwf	postinc2,f,c
 15503  002978                     i1l5656:
 15504                           
 15505                           ; BSR set to: 15
 15506                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 15507  002978  A262               	btfss	3938,1,c	;volatile
 15508  00297A  D00C               	goto	i1l5660
 15509                           
 15510                           ; BSR set to: 15
 15511                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 15512  00297C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15513  002980  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15514  002984  0E00               	movlw	0
 15515  002986  12DE               	iorwf	postinc2,f,c
 15516  002988  0E00               	movlw	0
 15517  00298A  12DE               	iorwf	postinc2,f,c
 15518  00298C  0E02               	movlw	2
 15519  00298E  12DE               	iorwf	postinc2,f,c
 15520  002990  0E00               	movlw	0
 15521  002992  12DE               	iorwf	postinc2,f,c
 15522  002994                     i1l5660:
 15523                           
 15524                           ; BSR set to: 15
 15525                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 15526  002994  AA62               	btfss	3938,5,c	;volatile
 15527  002996  D00C               	goto	i1l5664
 15528                           
 15529                           ; BSR set to: 15
 15530                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 15531  002998  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15532  00299C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15533  0029A0  0E00               	movlw	0
 15534  0029A2  12DE               	iorwf	postinc2,f,c
 15535  0029A4  0E00               	movlw	0
 15536  0029A6  12DE               	iorwf	postinc2,f,c
 15537  0029A8  0E04               	movlw	4
 15538  0029AA  12DE               	iorwf	postinc2,f,c
 15539  0029AC  0E00               	movlw	0
 15540  0029AE  12DE               	iorwf	postinc2,f,c
 15541  0029B0                     i1l5664:
 15542                           
 15543                           ; BSR set to: 15
 15544                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 15545  0029B0  AC62               	btfss	3938,6,c	;volatile
 15546  0029B2  D00C               	goto	i1l5668
 15547                           
 15548                           ; BSR set to: 15
 15549                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 15550  0029B4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15551  0029B8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15552  0029BC  0E00               	movlw	0
 15553  0029BE  12DE               	iorwf	postinc2,f,c
 15554  0029C0  0E00               	movlw	0
 15555  0029C2  12DE               	iorwf	postinc2,f,c
 15556  0029C4  0E08               	movlw	8
 15557  0029C6  12DE               	iorwf	postinc2,f,c
 15558  0029C8  0E00               	movlw	0
 15559  0029CA  12DE               	iorwf	postinc2,f,c
 15560  0029CC                     i1l5668:
 15561                           
 15562                           ; BSR set to: 15
 15563                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 15564  0029CC  AE62               	btfss	3938,7,c	;volatile
 15565  0029CE  D00C               	goto	i1l5672
 15566                           
 15567                           ; BSR set to: 15
 15568                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 15569  0029D0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15570  0029D4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15571  0029D8  0E00               	movlw	0
 15572  0029DA  12DE               	iorwf	postinc2,f,c
 15573  0029DC  0E00               	movlw	0
 15574  0029DE  12DE               	iorwf	postinc2,f,c
 15575  0029E0  0E10               	movlw	16
 15576  0029E2  12DE               	iorwf	postinc2,f,c
 15577  0029E4  0E00               	movlw	0
 15578  0029E6  12DE               	iorwf	postinc2,f,c
 15579  0029E8                     i1l5672:
 15580                           
 15581                           ; BSR set to: 15
 15582                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 15583  0029E8  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15584  0029EC  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15585  0029EE  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15586  0029F0  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15587  0029F2  0E15               	movlw	21
 15588  0029F4                     i1u692_25:
 15589  0029F4  90D8               	bcf	status,0,c
 15590  0029F6  3603               	rlcf	??_CANreceiveMessage,f,c
 15591  0029F8  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15592  0029FA  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15593  0029FC  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15594  0029FE  2EE8               	decfsz	wreg,f,c
 15595  002A00  D7F9               	goto	i1u692_25
 15596  002A02  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15597  002A06  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15598  002A0A  5003               	movf	??_CANreceiveMessage,w,c
 15599  002A0C  12DE               	iorwf	postinc2,f,c
 15600  002A0E  5004               	movf	??_CANreceiveMessage+1,w,c
 15601  002A10  12DE               	iorwf	postinc2,f,c
 15602  002A12  5005               	movf	??_CANreceiveMessage+2,w,c
 15603  002A14  12DE               	iorwf	postinc2,f,c
 15604  002A16  5006               	movf	??_CANreceiveMessage+3,w,c
 15605  002A18  12DE               	iorwf	postinc2,f,c
 15606  002A1A                     i1l5674:
 15607                           
 15608                           ; BSR set to: 15
 15609                           ;inc\CANlib.h: 629: }
 15610                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 15611  002A1A  9E60               	bcf	3936,7,c	;volatile
 15612                           
 15613                           ; BSR set to: 15
 15614                           ;inc\CANlib.h: 632: return (error);
 15615                           ;	Return value of _CANreceiveMessage is never used
 15616  002A1C  0012               	return	
 15617  002A1E                     __end_of_CANreceiveMessage:
 15618                           	opt stack 0
 15619                           pclatu	equ	0xFFB
 15620                           pclath	equ	0xFFA
 15621                           tblptru	equ	0xFF8
 15622                           tblptrh	equ	0xFF7
 15623                           tblptrl	equ	0xFF6
 15624                           tablat	equ	0xFF5
 15625                           prodh	equ	0xFF4
 15626                           prodl	equ	0xFF3
 15627                           intcon	equ	0xFF2
 15628                           intcon2	equ	0xFF1
 15629                           postinc0	equ	0xFEE
 15630                           fsr0h	equ	0xFEA
 15631                           fsr0l	equ	0xFE9
 15632                           wreg	equ	0xFE8
 15633                           indf1	equ	0xFE7
 15634                           postdec1	equ	0xFE5
 15635                           fsr1h	equ	0xFE2
 15636                           fsr1l	equ	0xFE1
 15637                           bsr	equ	0xFE0
 15638                           indf2	equ	0xFDF
 15639                           postinc2	equ	0xFDE
 15640                           postdec2	equ	0xFDD
 15641                           fsr2h	equ	0xFDA
 15642                           fsr2l	equ	0xFD9
 15643                           status	equ	0xFD8
 15644                           
 15645 ;; *************** function _ISR_Alta *****************
 15646 ;; Defined at:
 15647 ;;		line 92 in file "parcheggio.c"
 15648 ;; Parameters:    Size  Location     Type
 15649 ;;		None
 15650 ;; Auto vars:     Size  Location     Type
 15651 ;;		None
 15652 ;; Return value:  Size  Location     Type
 15653 ;;		None               void
 15654 ;; Registers used:
 15655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15656 ;; Tracked objects:
 15657 ;;		On entry : 0/0
 15658 ;;		On exit  : 0/0
 15659 ;;		Unchanged: 0/0
 15660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15663 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15664 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15665 ;;Total ram usage:       16 bytes
 15666 ;; Hardware stack levels used:    1
 15667 ;; Hardware stack levels required when called:    1
 15668 ;; This function calls:
 15669 ;;		___lwdiv
 15670 ;; This function is called by:
 15671 ;;		Interrupt level 2
 15672 ;; This function uses a non-reentrant model
 15673 ;;
 15674                           
 15675                           	psect	intcode
 15676  000008                     __pintcode:
 15677                           	opt stack 0
 15678  000008                     _ISR_Alta:
 15679                           	opt stack 21
 15680                           
 15681                           ; BSR set to: 15
 15682                           ;incstack = 0
 15683  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15684  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 15685  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 15686  000012  EFD0  F02C         	goto	int_func
 15687                           pclatu	equ	0xFFB
 15688                           pclath	equ	0xFFA
 15689                           tblptru	equ	0xFF8
 15690                           tblptrh	equ	0xFF7
 15691                           tblptrl	equ	0xFF6
 15692                           tablat	equ	0xFF5
 15693                           prodh	equ	0xFF4
 15694                           prodl	equ	0xFF3
 15695                           intcon	equ	0xFF2
 15696                           intcon2	equ	0xFF1
 15697                           postinc0	equ	0xFEE
 15698                           fsr0h	equ	0xFEA
 15699                           fsr0l	equ	0xFE9
 15700                           wreg	equ	0xFE8
 15701                           indf1	equ	0xFE7
 15702                           postdec1	equ	0xFE5
 15703                           fsr1h	equ	0xFE2
 15704                           fsr1l	equ	0xFE1
 15705                           bsr	equ	0xFE0
 15706                           indf2	equ	0xFDF
 15707                           postinc2	equ	0xFDE
 15708                           postdec2	equ	0xFDD
 15709                           fsr2h	equ	0xFDA
 15710                           fsr2l	equ	0xFD9
 15711                           status	equ	0xFD8
 15712                           
 15713                           	psect	intcode_body
 15714  0059A0                     __pintcode_body:
 15715                           	opt stack 21
 15716  0059A0                     int_func:
 15717                           	opt stack 21
 15718  0059A0  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 15719  0059A4  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 15720  0059A8  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 15721  0059AC  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 15722  0059B0  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 15723  0059B4  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 15724  0059B8  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 15725  0059BC  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 15726  0059C0  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 15727  0059C4  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 15728  0059C8  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 15729  0059CC  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 15730                           
 15731                           ;parcheggio.c: 93: if (INTCON2bits.INTEDG0 == 1) {
 15732  0059D0  ACF1               	btfss	intcon2,6,c	;volatile
 15733  0059D2  D007               	goto	i2l688
 15734                           
 15735                           ;parcheggio.c: 94: INTCON2bits.INTEDG0 = 0;
 15736  0059D4  9CF1               	bcf	intcon2,6,c	;volatile
 15737                           
 15738                           ;parcheggio.c: 95: TMR3H = 0;
 15739  0059D6  0E00               	movlw	0
 15740  0059D8  6EB3               	movwf	4019,c	;volatile
 15741                           
 15742                           ;parcheggio.c: 96: TMR3L = 0;
 15743  0059DA  0E00               	movlw	0
 15744  0059DC  6EB2               	movwf	4018,c	;volatile
 15745                           
 15746                           ;parcheggio.c: 97: distance_error = 0;
 15747  0059DE  9646               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 15748                           
 15749                           ;parcheggio.c: 98: } else {
 15750  0059E0  D030               	goto	i2l7572
 15751  0059E2                     i2l688:
 15752                           
 15753                           ;parcheggio.c: 99: gianni = TMR3H;
 15754  0059E2  CFB3 F044          	movff	4019,_gianni	;volatile
 15755                           
 15756                           ;parcheggio.c: 100: asus = TMR3L;
 15757  0059E6  CFB2 F043          	movff	4018,_asus	;volatile
 15758                           
 15759                           ;parcheggio.c: 101: timerValue2 = gianni;
 15760  0059EA  C044  F040         	movff	_gianni,_timerValue2	;volatile
 15761  0059EE  6A41               	clrf	_timerValue2+1,c	;volatile
 15762                           
 15763                           ;parcheggio.c: 102: timerValue2 = ((timerValue2 << 8) | (asus));
 15764  0059F0  5040               	movf	_timerValue2,w,c	;volatile
 15765  0059F2  0100               	movlb	0	; () banked
 15766  0059F4  6F67               	movwf	??_ISR_Alta& (0+255),b
 15767  0059F6  5043               	movf	_asus,w,c	;volatile
 15768  0059F8  6E40               	movwf	_timerValue2,c	;volatile
 15769  0059FA  C067  F041         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 15770                           
 15771                           ; BSR set to: 0
 15772                           ;parcheggio.c: 103: pulse_time = timerValue2 / 2;
 15773  0059FE  90D8               	bcf	status,0,c
 15774  005A00  3041               	rrcf	_timerValue2+1,w,c	;volatile
 15775  005A02  0100               	movlb	0	; () banked
 15776  005A04  6F67               	movwf	??_ISR_Alta& (0+255),b
 15777  005A06  3040               	rrcf	_timerValue2,w,c	;volatile
 15778  005A08  6E3C               	movwf	_pulse_time,c	;volatile
 15779  005A0A  C067  F03D         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 15780                           
 15781                           ; BSR set to: 0
 15782                           ;parcheggio.c: 104: sensor_distance[MUX_index] = pulse_time / 58;
 15783  005A0E  C03C  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 15784  005A12  C03D  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 15785  005A16  0E00               	movlw	0
 15786  005A18  0100               	movlb	0	; () banked
 15787  005A1A  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 15788  005A1C  0E3A               	movlw	58
 15789  005A1E  6F62               	movwf	___lwdiv@divisor& (0+255),b
 15790  005A20  EC8A  F02D         	call	___lwdiv	;wreg free
 15791  005A24  5042               	movf	_MUX_index,w,c	;volatile
 15792  005A26  0D02               	mullw	2
 15793  005A28  0E24               	movlw	low _sensor_distance
 15794  005A2A  24F3               	addwf	prodl,w,c
 15795  005A2C  6ED9               	movwf	fsr2l,c
 15796  005A2E  0E00               	movlw	high _sensor_distance
 15797  005A30  20F4               	addwfc	prodh,w,c
 15798  005A32  6EDA               	movwf	fsr2h,c
 15799  005A34  0100               	movlb	0	; () banked
 15800  005A36  C060  FFDE         	movff	?___lwdiv,postinc2
 15801  005A3A  0100               	movlb	0	; () banked
 15802  005A3C  C061  FFDD         	movff	?___lwdiv+1,postdec2
 15803                           
 15804                           ; BSR set to: 0
 15805                           ;parcheggio.c: 105: INTCON2bits.INTEDG0 = 1;
 15806  005A40  8CF1               	bsf	intcon2,6,c	;volatile
 15807  005A42                     i2l7572:
 15808                           
 15809                           ;parcheggio.c: 106: }
 15810                           ;parcheggio.c: 107: INTCONbits.INT0IF = 0;
 15811  005A42  92F2               	bcf	intcon,1,c	;volatile
 15812  005A44  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 15813  005A48  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 15814  005A4C  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 15815  005A50  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 15816  005A54  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 15817  005A58  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 15818  005A5C  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 15819  005A60  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 15820  005A64  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 15821  005A68  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 15822  005A6C  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 15823  005A70  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 15824  005A74  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 15825  005A78  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 15826  005A7C  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 15827  005A7E  0011               	retfie		f
 15828  005A80                     __end_of_ISR_Alta:
 15829                           	opt stack 0
 15830                           pclatu	equ	0xFFB
 15831                           pclath	equ	0xFFA
 15832                           tblptru	equ	0xFF8
 15833                           tblptrh	equ	0xFF7
 15834                           tblptrl	equ	0xFF6
 15835                           tablat	equ	0xFF5
 15836                           prodh	equ	0xFF4
 15837                           prodl	equ	0xFF3
 15838                           intcon	equ	0xFF2
 15839                           intcon2	equ	0xFF1
 15840                           postinc0	equ	0xFEE
 15841                           fsr0h	equ	0xFEA
 15842                           fsr0l	equ	0xFE9
 15843                           wreg	equ	0xFE8
 15844                           indf1	equ	0xFE7
 15845                           postdec1	equ	0xFE5
 15846                           fsr1h	equ	0xFE2
 15847                           fsr1l	equ	0xFE1
 15848                           bsr	equ	0xFE0
 15849                           indf2	equ	0xFDF
 15850                           postinc2	equ	0xFDE
 15851                           postdec2	equ	0xFDD
 15852                           fsr2h	equ	0xFDA
 15853                           fsr2l	equ	0xFD9
 15854                           status	equ	0xFD8
 15855                           
 15856 ;; *************** function ___lwdiv *****************
 15857 ;; Defined at:
 15858 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 15859 ;; Parameters:    Size  Location     Type
 15860 ;;  dividend        2    0[BANK0 ] unsigned int 
 15861 ;;  divisor         2    2[BANK0 ] unsigned int 
 15862 ;; Auto vars:     Size  Location     Type
 15863 ;;  quotient        2    5[BANK0 ] unsigned int 
 15864 ;;  counter         1    4[BANK0 ] unsigned char 
 15865 ;; Return value:  Size  Location     Type
 15866 ;;                  2    0[BANK0 ] unsigned int 
 15867 ;; Registers used:
 15868 ;;		wreg, status,2, status,0
 15869 ;; Tracked objects:
 15870 ;;		On entry : 0/0
 15871 ;;		On exit  : 0/0
 15872 ;;		Unchanged: 0/0
 15873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15874 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15875 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15877 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15878 ;;Total ram usage:        7 bytes
 15879 ;; Hardware stack levels used:    1
 15880 ;; This function calls:
 15881 ;;		Nothing
 15882 ;; This function is called by:
 15883 ;;		_ISR_Alta
 15884 ;; This function uses a non-reentrant model
 15885 ;;
 15886                           
 15887                           	psect	text38
 15888  005B14                     __ptext38:
 15889                           	opt stack 0
 15890  005B14                     ___lwdiv:
 15891                           	opt stack 21
 15892                           
 15893                           ;incstack = 0
 15894  005B14  0E00               	movlw	0
 15895  005B16  0100               	movlb	0	; () banked
 15896  005B18  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 15897  005B1A  0E00               	movlw	0
 15898  005B1C  6F65               	movwf	___lwdiv@quotient& (0+255),b
 15899                           
 15900                           ; BSR set to: 0
 15901  005B1E  0100               	movlb	0	; () banked
 15902  005B20  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15903  005B22  0100               	movlb	0	; () banked
 15904  005B24  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 15905  005B26  B4D8               	btfsc	status,2,c
 15906  005B28  D02C               	goto	i2l1259
 15907                           
 15908                           ; BSR set to: 0
 15909  005B2A  0E01               	movlw	1
 15910  005B2C  0100               	movlb	0	; () banked
 15911  005B2E  6F64               	movwf	___lwdiv@counter& (0+255),b
 15912  005B30  D006               	goto	i2l7542
 15913  005B32                     i2l7540:
 15914                           
 15915                           ; BSR set to: 0
 15916  005B32  0100               	movlb	0	; () banked
 15917  005B34  90D8               	bcf	status,0,c
 15918  005B36  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 15919  005B38  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 15920  005B3A  0100               	movlb	0	; () banked
 15921  005B3C  2B64               	incf	___lwdiv@counter& (0+255),f,b
 15922  005B3E                     i2l7542:
 15923                           
 15924                           ; BSR set to: 0
 15925  005B3E  0100               	movlb	0	; () banked
 15926  005B40  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 15927  005B42  D7F7               	goto	i2l7540
 15928  005B44                     i2l7544:
 15929                           
 15930                           ; BSR set to: 0
 15931  005B44  0100               	movlb	0	; () banked
 15932  005B46  90D8               	bcf	status,0,c
 15933  005B48  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 15934  005B4A  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 15935                           
 15936                           ; BSR set to: 0
 15937  005B4C  0100               	movlb	0	; () banked
 15938  005B4E  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15939  005B50  0100               	movlb	0	; () banked
 15940  005B52  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 15941  005B54  0100               	movlb	0	; () banked
 15942  005B56  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15943  005B58  0100               	movlb	0	; () banked
 15944  005B5A  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 15945  005B5C  A0D8               	btfss	status,0,c
 15946  005B5E  D00A               	goto	i2l7552
 15947                           
 15948                           ; BSR set to: 0
 15949  005B60  0100               	movlb	0	; () banked
 15950  005B62  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15951  005B64  0100               	movlb	0	; () banked
 15952  005B66  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 15953  005B68  0100               	movlb	0	; () banked
 15954  005B6A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15955  005B6C  0100               	movlb	0	; () banked
 15956  005B6E  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 15957                           
 15958                           ; BSR set to: 0
 15959  005B70  0100               	movlb	0	; () banked
 15960  005B72  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 15961  005B74                     i2l7552:
 15962                           
 15963                           ; BSR set to: 0
 15964  005B74  0100               	movlb	0	; () banked
 15965  005B76  90D8               	bcf	status,0,c
 15966  005B78  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 15967  005B7A  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 15968                           
 15969                           ; BSR set to: 0
 15970  005B7C  0100               	movlb	0	; () banked
 15971  005B7E  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 15972  005B80  D7E1               	goto	i2l7544
 15973  005B82                     i2l1259:
 15974                           
 15975                           ; BSR set to: 0
 15976  005B82  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 15977  005B86  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15978                           
 15979                           ; BSR set to: 0
 15980  005B8A  0012               	return		;funcret
 15981  005B8C                     __end_of___lwdiv:
 15982                           	opt stack 0
 15983                           pclatu	equ	0xFFB
 15984                           pclath	equ	0xFFA
 15985                           tblptru	equ	0xFF8
 15986                           tblptrh	equ	0xFF7
 15987                           tblptrl	equ	0xFF6
 15988                           tablat	equ	0xFF5
 15989                           prodh	equ	0xFF4
 15990                           prodl	equ	0xFF3
 15991                           intcon	equ	0xFF2
 15992                           intcon2	equ	0xFF1
 15993                           postinc0	equ	0xFEE
 15994                           fsr0h	equ	0xFEA
 15995                           fsr0l	equ	0xFE9
 15996                           wreg	equ	0xFE8
 15997                           indf1	equ	0xFE7
 15998                           postdec1	equ	0xFE5
 15999                           fsr1h	equ	0xFE2
 16000                           fsr1l	equ	0xFE1
 16001                           bsr	equ	0xFE0
 16002                           indf2	equ	0xFDF
 16003                           postinc2	equ	0xFDE
 16004                           postdec2	equ	0xFDD
 16005                           fsr2h	equ	0xFDA
 16006                           fsr2l	equ	0xFD9
 16007                           status	equ	0xFD8
 16008                           pclatu	equ	0xFFB
 16009                           pclath	equ	0xFFA
 16010                           tblptru	equ	0xFF8
 16011                           tblptrh	equ	0xFF7
 16012                           tblptrl	equ	0xFF6
 16013                           tablat	equ	0xFF5
 16014                           prodh	equ	0xFF4
 16015                           prodl	equ	0xFF3
 16016                           intcon	equ	0xFF2
 16017                           intcon2	equ	0xFF1
 16018                           postinc0	equ	0xFEE
 16019                           fsr0h	equ	0xFEA
 16020                           fsr0l	equ	0xFE9
 16021                           wreg	equ	0xFE8
 16022                           indf1	equ	0xFE7
 16023                           postdec1	equ	0xFE5
 16024                           fsr1h	equ	0xFE2
 16025                           fsr1l	equ	0xFE1
 16026                           bsr	equ	0xFE0
 16027                           indf2	equ	0xFDF
 16028                           postinc2	equ	0xFDE
 16029                           postdec2	equ	0xFDD
 16030                           fsr2h	equ	0xFDA
 16031                           fsr2l	equ	0xFD9
 16032                           status	equ	0xFD8
 16033                           
 16034                           	psect	param0
 16035  0000                     pclatu	equ	0xFFB
 16036                           pclath	equ	0xFFA
 16037                           tblptru	equ	0xFF8
 16038                           tblptrh	equ	0xFF7
 16039                           tblptrl	equ	0xFF6
 16040                           tablat	equ	0xFF5
 16041                           prodh	equ	0xFF4
 16042                           prodl	equ	0xFF3
 16043                           intcon	equ	0xFF2
 16044                           intcon2	equ	0xFF1
 16045                           postinc0	equ	0xFEE
 16046                           fsr0h	equ	0xFEA
 16047                           fsr0l	equ	0xFE9
 16048                           wreg	equ	0xFE8
 16049                           indf1	equ	0xFE7
 16050                           postdec1	equ	0xFE5
 16051                           fsr1h	equ	0xFE2
 16052                           fsr1l	equ	0xFE1
 16053                           bsr	equ	0xFE0
 16054                           indf2	equ	0xFDF
 16055                           postinc2	equ	0xFDE
 16056                           postdec2	equ	0xFDD
 16057                           fsr2h	equ	0xFDA
 16058                           fsr2l	equ	0xFD9
 16059                           status	equ	0xFD8
 16060                           
 16061                           	psect	temp
 16062  000048                     btemp:
 16063                           	opt stack 0
 16064  000048                     	ds	1
 16065  0000                     int$flags	set	btemp
 16066                           pclatu	equ	0xFFB
 16067                           pclath	equ	0xFFA
 16068                           tblptru	equ	0xFF8
 16069                           tblptrh	equ	0xFF7
 16070                           tblptrl	equ	0xFF6
 16071                           tablat	equ	0xFF5
 16072                           prodh	equ	0xFF4
 16073                           prodl	equ	0xFF3
 16074                           intcon	equ	0xFF2
 16075                           intcon2	equ	0xFF1
 16076                           postinc0	equ	0xFEE
 16077                           fsr0h	equ	0xFEA
 16078                           fsr0l	equ	0xFE9
 16079                           wreg	equ	0xFE8
 16080                           indf1	equ	0xFE7
 16081                           postdec1	equ	0xFE5
 16082                           fsr1h	equ	0xFE2
 16083                           fsr1l	equ	0xFE1
 16084                           bsr	equ	0xFE0
 16085                           indf2	equ	0xFDF
 16086                           postinc2	equ	0xFDE
 16087                           postdec2	equ	0xFDD
 16088                           fsr2h	equ	0xFDA
 16089                           fsr2l	equ	0xFD9
 16090                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        11
    BSS         179
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      71
    BANK0           160    128     137
    BANK1           256     93     240
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> can_send@data_correction1(BANK0[0]), data_speed(BANK1[8]), data_steering(BANK1[8]), data_correction(BANK1[8]), 
		 -> data_brake(BANK1[8]), data_test(BANK1[8]), data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _park_search->_parallelo
    _park_routine->_parallelo
    _parallelo->_sqrt
    _can_send->_CANsendMessage
    _abs->___fltol
    _sin->___flsub
    _floor->___fladd
    ___xxtofl->_abs
    ___flsub->_floor
    _asin->_sqrt
    _sqrt->___fladd
    _atan->_eval_poly
    _fabs->___flneg
    ___flneg->___flmul
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flneg
    ___flge->_fabs
    _delay_s->_delay_ms
    _delay_ms->___wmul
    _configurazione->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_park_routine
    _park_routine->_matematica
    _parallelo->_asin
    _matematica->_cos
    _cos->_asin
    _asin->_atan

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  337816
                    _can_interpreter
                     _configurazione
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   92395
                                             41 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (1) _park_routine                                         8     8      0  239487
                                             85 BANK1      8     8      0
                     _CANsendMessage
                            ___fladd
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _abs
                           _can_send
                           _delay_ms
                            _delay_s
                         _matematica
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   84112
                                            126 BANK0      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    7241
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    7061
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      37
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     324
                                             33 BANK0      4     2      2
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _matematica                                          36    36      0  130412
                                             49 BANK1     36    36      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                               _asin
                                _cos
 ---------------------------------------------------------------------------------
 (3) _cos                                                 12     8      4   56887
                                             41 BANK1      8     4      4
                            ___fladd
                             ___flge
                               _asin (ARG)
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 17    13      4   48870
                                            115 BANK0      4     0      4
                                              0 BANK1     13    13      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4   10191
                                             97 BANK0     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                8     2      6     452
                                             23 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     861
                                             37 BANK0     14    10      4
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     799
                                             23 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6623
                                            107 BANK0      8     0      8
                            ___fladd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   56206
                                             17 BANK1     24    20      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0     29    25      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   33553
                                            113 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1621
                                             77 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1297
                                             73 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   12701
                                             97 BANK0     16     8      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5387
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    6136
                                             77 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1498
                                             81 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4193
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0     639
                                             31 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     571
                                             29 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    5934
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    1251
                                             12 COMRAM    23    23      0
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_interpreter
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _park_routine
     _CANsendMessage
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         _abs (ARG)
           ___fltol (ARG)
       ___fltol (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
         _abs (ARG)
           ___fltol (ARG)
       _abs (ARG)
         ___fltol (ARG)
     ___flneg
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
       ___fltol (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
         _abs (ARG)
           ___fltol (ARG)
       _abs (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
       _abs (ARG)
         ___fltol (ARG)
     _abs
       ___fltol (ARG)
     _can_send
       _CANisTxReady
       _CANsendMessage
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
     _matematica
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         _abs (ARG)
           ___fltol (ARG)
       ___fldiv
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         _abs (ARG)
           ___fltol (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
         _fabs
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
       _cos
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
         _asin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _atan
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fldiv
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                   ___fltol (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
             ___flmul
               ___fldiv (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                   ___fltol (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _fabs
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
           _sqrt
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
         _sin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _floor (ARG)
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                   ___fltol (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               ___flge
                 _fabs (ARG)
                   ___flneg
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                     ___fltol (ARG)
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                       _abs (ARG)
                         ___fltol (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
               ___fltol
               ___xxtofl
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _frexp
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _floor
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                   ___fltol (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                     _abs (ARG)
                       ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
             ___fltol
             ___xxtofl
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _frexp
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         _abs (ARG)
           ___fltol (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
         _abs (ARG)
           ___fltol (ARG)
       _abs
         ___fltol (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
         _fabs
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       ___fltol (ARG)
       _abs (ARG)
         ___fltol (ARG)
     _abs
       ___fltol (ARG)
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         _abs (ARG)
           ___fltol (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
         _abs (ARG)
           ___fltol (ARG)
       _abs
         ___fltol (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___fltol (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                   _abs (ARG)
                     ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
         _fabs
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___fltol (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                 _abs (ARG)
                   ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
               _abs (ARG)
                 ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
             _abs (ARG)
               ___fltol (ARG)
           _abs (ARG)
             ___fltol (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     5D      F0       7       93.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     80      89       5       85.6%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     23      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1C0      20        0.0%
DATA                 0      0     1C0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed May 04 19:01:57 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _n 0130  
                           _x 013C                             _z 0140          __end_of_CANSetFilter 1858  
                ___fldiv@sign 0083            delay_s@repeat_loop 0080                            bsr 000FE0  
         ___wmul@multiplicand 0079                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                    _MUX_select 0100                           l402 1F30  
                         l403 1F34                           l500 15B4                           l404 1F40  
                         l501 15B8                           l510 16C4                           l502 15C4  
                         l511 16D0                           l503 15C8                           l520 17DC  
                         l512 16D4                           l504 15D4                           l440 4102  
                         l432 40C2                           l521 17E0                           l513 16E0  
                         l433 40C6                           l522 17EC                           l514 16E4  
                         l450 420E                           l434 40D2                           l370 1918  
                         l523 17F0                           l515 16F0                           l507 16B0  
                         l451 421A                           l443 41DA                           l435 40D6  
                         l363 1ADC                           l524 17FC                           l508 16B4  
                         l444 41DE                           l436 40E2                           l380 1AF6  
                         l364 186E                           l525 1800                           l509 16C0  
                         l445 41EA                           l437 40E6                           l381 1BEE  
                         l373 1A28                           l365 1872                           l526 180C  
                         l518 17CC                           l470 1276                           l446 41EE  
                         l438 40F2                           l358 4FF8                           l390 1CBC  
                         l382 1B7E                           l374 1A2C                           l366 196A  
                         l519 17D0                           l471 1282                           l463 1242  
                         l447 41FA                           l439 40F6                           l359 5002  
                         l383 1B88                           l375 1A38                           l367 18FA  
                         l480 138C                           l464 1246                           l448 41FE  
                         l384 1B92                           l368 1904                           l720 5168  
                         l481 1390                           l465 1252                           l449 420A  
                         l393 1D76                           l385 1B9C                           l369 190E  
                         l490 149C                           l482 139C                           l474 135C  
                         l466 1256                           l394 1D7A                           l378 1D60  
                         l491 14A8                           l475 1360                           l467 1262  
                         l395 1E72                           l379 1AF2                           l731 52A0  
                         l492 14AC                           l476 136C                           l468 1266  
                         l556 5EA0                           l396 1E02                           l388 1CAC  
                         l493 14B8                           l485 1478                           l477 1370  
                         l469 1272                           l397 1E0C                           l389 1CB0  
                         l486 147C                           l478 137C                           l398 1E16  
                         l718 52A4                           l487 1488                           l479 1380  
                         l399 1E20                           l496 1594                           l488 148C  
                         l752 35E6                           l497 1598                           l489 1498  
                         l569 5DAE                           l498 15A4                           l499 15A8  
                         l755 3670                           l852 5E4C                           l749 354E  
                         l782 4B0A                           l788 4ACC                  __CFG_CPB$OFF 000000  
                __CFG_CPD$OFF 000000                           _abs 5E2A                           _asd 0231  
                         _dir 0232                           _cos 58BC                           _jjj 0128  
                         _kkk 012C                           _msg 014A                           _sin 4266  
                         prod 000FF3                           wreg 000FE8                  ___flmul@aexp 009D  
                ___flmul@bexp 00A2               ?_configurazione 0001                  ___flmul@sign 009C  
                ___flmul@temp 00A7                  ___flmul@prod 00A3                  __CFG_LVP$OFF 000000  
                ___fltol@exp1 0080                  __CFG_WDT$OFF 000000                          ?_abs 0081  
                        l1052 5D70                          l1311 2BFE                          l1312 2BF2  
                        l1313 2BBE                          l1059 53EE                          l1404 3216  
                        l1414 3328                          l1406 3284                          l1328 2D72  
                        l1337 2E06                          l1370 3CDE                          l1453 4EC0  
                        l1454 4ED8                          l1446 4E64                          l1367 3D36  
                        l1439 4DB8                          l1295 456C                          l1376 3D6E  
                        l1464 5686                          l1378 3DDC                          l1397 2F7A  
                        l5016 0E10                          l5202 14BC                          l5106 11B0  
                        l5034 0EC8                          l5140 12CC                          l5052 0F82  
                        ?_cos 01B2                          l5134 1286                          l5070 103C  
                        l5304 1810                          l5208 1502                          l6112 2A3C  
                        l5242 161E                          l6202 2BE2                          l6130 2A96  
                        l6122 2A6A                          l7010 37BA                          l5236 15D8  
                        l6220 2C60                          l6212 2C22                          l7100 4B68  
                        l5270 16F4                          l5174 13E6                          l6222 2C66  
                        l6230 2C82                          l6142 2ACE                          l6118 2A60  
                        l5168 13A0                          l5088 10F6                          l6304 2EB4  
                        l6240 2D52                          l6136 2AAA                          l6320 2F08  
                        l7120 4D48                          l7104 4BDC                          l7016 37DA  
                        l7008 37A8                          l5450 5052                          l5442 4FF0  
                        l6226 2C70                          l6154 2B02                          l6146 2AD8  
                        l6322 2F0E                          l6314 2EE4                          l7210 45DC  
                        l4900 5EAE                          l5276 173A                          l5444 5006  
                        l6420 32FA                          l6340 2F68                          l6332 2F3E  
                        l6324 2F20                          l7116 4D30                          l7052 395C  
                        l7060 39D2                          l7036 384C                          l7028 381C  
                        l6500 5874                          l7132 429C                          l6254 2DBA  
                        l6430 3348                          l6422 330E                          l6406 327E  
                        l7054 3996                          l7046 38CE                          l7222 470A  
                        l6502 5884                          l5448 500E                          l6248 2DA4  
                        l6264 2DDA                          l6184 2B3E                          l6432 3352  
                        l6416 32D4                          l6344 2F8E                          l7080 3AE8  
                        l7072 3AB2                          l7048 38D6                          l6504 588E  
                        l7144 43C6                          l6602 3BA8                          l6450 539C  
                        l6442 52FC                          l6274 2E00                          l6258 2DC6  
                        l6266 2DE0                          l6338 2F62                          l7234 47EC  
                        l6530 4E46                          l7250 5944                          l7402 336E  
                        l7164 5DA0                          l6292 2E90                          l6284 2E5C  
                        l6196 2BD2                          l6348 2FA2                          l6508 58AA  
                        l6524 4DF0                          l7148 443C                          l7420 33AA  
                        l4934 4036                          l4918 3F80                          l7262 5E74  
                        l6606 3BB2                          l6446 534A                          l6198 2BD8  
                        l6390 3200                          l6550 4F2A                          l6526 4DF8  
                        l6518 4DC8                          l7190 54C8                          l4960 4106  
                        l6456 543A                          l6296 2E9C                          l6288 2E6E  
                        l6720 56EE                          l6464 5DE2                          l6536 4EA2  
                        l6528 4E08                          l6560 5AA6                          l6800 1A1C  
                        l7176 5442                          l7512 36C8                          l7352 5118  
                        l7344 5104                          l7258 5E62                          l6650 3D32  
                        l6626 3C34                          l6618 3C06                          l6298 2EA0  
                        l6722 5792                          l6490 5844                          l6474 57D6  
                        l6538 4EB2                          l7186 5490                          l7514 36D4  
                        l7370 51D6                          l6644 3CEA                          l6636 3CB2  
                        l6396 322A                          l7196 5508                          l7428 33B8  
                        l7364 51C6                          l4966 414C                          l6662 3D82  
                        l6582 3B4A                          l6494 5858                          l6742 55EA  
                        l6734 55B4                          l6806 1A3C                          l7294 4AE8  
                        l7374 520E                          l4992 421E                          l6672 3DD6  
                        l6656 3D58                          l6576 3B26                          l7288 4A8E  
                        l7296 4AEE                          l7528 3730                          l6690 3E90  
                        l6682 3E2C                          l6586 3B54                          l6738 55C8  
                        l6596 3B84                          l6932 1E2A                          l6780 1922  
                        l6686 3E5A                          l6696 3EA0                          l6688 3E6E  
                        l6952 1F24                          l6856 1BA6                          l6698 3EA4  
                        l6882 1CC0                          l6876 1CA0                          l7588 5CEE  
                        ?_sin 00D3                          l6958 1F44                          l6996 375C  
                        _LATA 000F89                          _LATB 000F8A                          _LATC 000F8B  
                        u6110 13C0                          u6030 12A6                          u6115 13B4  
                        u6035 129A                          u5500 3EFC                          u5505 3EF0  
                        u5515 3F5C                          u5540 3FB2                          u8020 57F6  
                        u6430 1830                          u6350 1714                          u6270 15F8  
                        u6190 14DC                          u5710 423E                          u5630 4126  
                        u5545 3FA6                          u8025 57EA                          u6435 1824  
                        u6355 1708                          u6275 15EC                          u6195 14D0  
                        u5715 4232                          u5635 411A                          u5555 4012  
                        u5900 1072                          u5820 0EFE                          u5740 0D8C  
                        u9100 43C0                          u9030 4B98                          u9110 43C2  
                        u8400 3E40                          u9040 4B9A                          u5905 1066  
                        u5825 0EF2                          u5745 0D80                          u5915 10D2  
                        u5835 0F5E                          u5755 0DEC                          u5940 112C  
                        u5860 0FB8                          u5780 0E44                          u7460 2B88  
                        u7470 2BA0                          u8190 5AD8                          u9310 4AE6  
                        u7480 2BA2                          u5945 1120                          u5865 0FAC  
                        u5785 0E38                          u5955 118C                          u5875 1018  
                        u5795 0EA4                          u8700 1BC6                          u9420 521E  
                        u9261 4922                          u8198 5ADC                          u8470 55D8  
                        u8710 1C12                          u9350 5114                          u9271 492E  
                        u7920 32E8                          u7840 31A2                          u8705 1BBA  
                        u8570 1942                          u8715 1C06                          u8580 198E  
                        u7845 3196                          u8725 1C72                          u8830 1E4A  
                        u9550 36A6                          u8575 1936                          u8840 1E96  
                        u8585 1982                          u8835 1E3E                          u8595 19EE  
                        u8845 1E8A                          u9647 5DA2                          u8855 1EF6  
         __size_of_CANSetMask 039E                          abs@a 0081                          _alfa 011C  
                        _fabs 5D44                          _data 0159                          _beta 0120  
                        _atan 4B1C                          _asin 457E                          _main 5CB0  
                        _asus 0043                          cos@f 01B2                          fsr0h 000FEA  
                        fsr1h 000FE2                          fsr0l 000FE9                          fsr2h 000FDA  
                        indf1 000FE7                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          btemp 0048                          _sqrt 373E  
                        pclat 000FFA                          sin@f 00D3                          sin@y 0189  
                        prodh 000FF4                          prodl 000FF3                          start 0254  
               __CFG_IESO$OFF 000000               ___fldiv@new_exp 0088                delay_s@value_s 007F  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000              _CANOperationMode 5EA6  
                       ??_abs 0083                         ??_cos 00DE                         ??_sin 00D7  
  __size_of_CANreceiveMessage 050C                         ?_fabs 00AD                 ___fltol@sign1 007F  
                       ?_atan 00D1                         ?_asin 019A               __end_of___fladd 2EC6  
                       ?_main 0001               __end_of___fldiv 3EC8               __end_of___flneg 5DF4  
             __end_of___flmul 336C               __end_of___flsub 5D44               __end_of___fltol 58BC  
                       ?_sqrt 00C1                         _T0CON 000FD5                         _T3CON 000FB1  
          __size_of_ISR_Bassa 023C               __end_of___lwdiv 5B8C                         i1l410 27AA  
                       i1l702 0188                         i1l705 0208                         i1l709 020C  
                       i1l695 009A                         i2l688 59E2                         _TMR0H 000FD7  
                       _TMR0L 000FD6                         _TMR3H 000FB3                         _TMR3L 000FB2  
                       _PORTA 000F80                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94            __end_ofsin@coeff_a 0D41            __end_ofsin@coeff_b 0D51  
               __CFG_PWRT$OFF 000000              __end_of_ISR_Alta 5A80               __end_of_delay_s 5E82  
               __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000  
               __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000            CANInitialize@flags 0089                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000                         _bordo 0124  
                       fabs@d 00AD                         _floor 5574                         _frexp 5A80  
                       _errno 0148                         atan@f 00D1                         atan@x 018D  
                       atan@y 0189                         asin@x 019A                         asin@y 01AA  
    can_send@data_correction1 0087                __pbitbssCOMRAM 0230                         sin@x2 0191  
                       tablat 000FF5          __end_of_CANisTxReady 5EA6                         sqrt@a 00C1  
                       sqrt@i 00CA                         sqrt@p 00CF                         status 000FD8  
                ?_park_search 0001               __initialization 5BF8                  __end_of_fabs 5D82  
                __end_of_atan 4D6E                  __end_of_asin 4890                  __end_of_main 5CFC  
                __end_of_sqrt 3B08                        ??_fabs 00B1                        ??_atan 00D5  
                      ??_asin 00DE                        ??_main 00E0             _park_routine$3738 01E2  
                      ??_sqrt 00C5                 __activetblptr 000003             _CANisTxReady$2845 0077  
                      _ADCON1 000FC1                        ?_floor 00C1                        ?_frexp 0077  
                      _CANCON 000F6F            _distance_received1 0235               __CFG_BBSIZ$1024 000000  
           _spazio_parcheggio 01EA                        i1l6012 00D6                        i1l6040 0192  
                      i1l6008 00CE                        i1l6034 0164                        i1l6052 01CA  
                      i1l6048 01C2                        i1l5610 2772                        i1l5602 2736  
                      i1l6058 01F2                        i2l1259 5B82                        i1l5612 27A4  
                      i1l5606 2754                        i1l5660 2994                        i1l5672 29E8  
                      i1l5664 29B0                        i1l5656 2978                        i1l5648 290A  
                      i1l5674 2A1A                        i1l5594 26FA                        i1l5586 268A  
                      i1l5668 29CC                        i1l5598 2718                        i1l5978 008C  
                      i2l7540 5B32                        i2l7542 5B3E                        i2l7552 5B74  
                      i2l7544 5B44                        i2l7572 5A42                        _RXB0D0 000F66  
                      _RXB0D1 000F67                        _RXB0D2 000F68                        _RXB0D3 000F69  
                      _RXB0D4 000F6A                        _RXB1D0 000F56                        _RXB0D5 000F6B  
                      _RXB1D1 000F57                        _RXB0D6 000F6C                        _RXB1D2 000F58  
                      _RXB0D7 000F6D                        _RXB1D3 000F59                        _RXB1D4 000F5A  
                      _RXB1D5 000F5B                        _RXB1D6 000F5C                        _RXB1D7 000F5D  
                      _TXB0D0 000F46                        _TXB0D1 000F47                        _TXB0D2 000F48  
                      _TXB0D3 000F49                        _TXB1D0 000F36                        _TXB0D4 000F4A  
                      _TXB1D1 000F37                        _TXB0D5 000F4B                        _TXB1D2 000F38  
                      _TXB0D6 000F4C                        _TXB1D3 000F39                        _TXB0D7 000F4D  
                      _TXB2D0 000F26                        _TXB1D4 000F3A                        _TXB2D1 000F27  
                      _TXB1D5 000F3B                        _TXB2D2 000F28                        _TXB1D6 000F3C  
                      _TXB2D3 000F29                        _TXB1D7 000F3D                        _TXB2D4 000F2A  
                      _TXB2D5 000F2B                        _TXB2D6 000F2C                        _TXB2D7 000F2D  
          CANsendMessage@data 007B              __end_of_can_send 5574            CANsendMessage@tamp 0083  
            __end_of___xxtofl 4F3C             __end_of_ISR_Bassa 0254              __end_of_delay_ms 5DBC  
       __size_of_CANSetFilter 0B06                __CFG_XINST$OFF 000000                        ___flge 52AE  
             _data_correction 0169                     ??___fladd 00B5                        ___wmul 5DF4  
                   ??___fldiv 007F                     ??___flneg 00AD                __CFG_STVREN$ON 000000  
                   ??___flmul 0098                     ??___flsub 00D3                     ??___fltol 007B  
                   ??___lwdiv 0064                  ??_CANSetMask 007C                        _gianni 0044  
                      _raggio 01EC                        clear_0 5BFE                        clear_1 5C0A  
                      clear_2 5C1A                     ??_delay_s 007F                        floor@i 00C5  
                      floor@x 00C1               __CFG_BOREN$BOHW 000000                        sin@sgn 0195  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                  _CANSetFilter 0D52                    ___flge@ff1 00B1  
                  ___flge@ff2 00B5                  ___xxtofl@arg 008F                  ___xxtofl@exp 008E  
                ___xxtofl@val 0085                    __accesstop 0060       __end_of__initialization 5C52  
          __end_of_CANSetMask 4266               __CFG_PBADEN$OFF 000000                    ___flneg@f1 00A9  
               ?_park_routine 0001                  eval_poly@res 00CD                 ___rparam_used 000000  
                  ___fltol@f1 0077                __pcstackCOMRAM 0001                     ?_ISR_Alta 0001  
                __pidataBANK0 5EC6                  __pidataBANK1 5EBC                 __end_of_floor 5698  
               __end_of_frexp 5B14              ??_configurazione 0091         CANSetFilter@numBuffer 0080  
                _actual_speed 0144         __size_of_CANisTxReady 0024                       ??_floor 00C5  
                     ??_frexp 007D      __end_of_CANOperationMode 5EBC                    __pbssBANK0 00E0  
                  __pbssBANK1 0100               _sensor_distance 0024            __size_of_eval_poly 0118  
                  _data_brake 0161                ??_park_routine 01DE                 ISR_Bassa@gigi 0022  
     __size_of_CANsendMessage 078C                    _data_speed 0171                    _activation 0230  
    __size_of_can_interpreter 0054            __size_of_parallelo 028C          __size_of_park_search 01AC  
           _old_alignment_gap 0134                    ??_ISR_Alta 0067                       ?___flge 00B1  
                     ?___wmul 0077                       _CANSTAT 000F6E                  _CANisTxReady 5E82  
                     _BRGCON1 000F70                       _BRGCON2 000F71                       _BRGCON3 000F72  
                   ?_can_send 0001                     ?___xxtofl 0085        __size_of_CANInitialize 01C6  
                   ?_delay_ms 007D                       _RXB0DLC 000F65                       _RXB1DLC 000F55  
                     _RXB0CON 000F60                       _RXB1CON 000F50                       _TXB0DLC 000F45  
                     _TXB1DLC 000F35                       _TXB2DLC 000F25           CANsendMessage@flags 007E  
                     __Hparam 0000                    _left_speed 003A                       __Lparam 0000  
            delay_ms@value_ms 007D                       _Pminimo 0118               __size_of___flge 0190  
                  _matematica 1FE4                       ___fladd 2A1E                       ___fldiv 3B08  
                     ___flneg 5DBC                       ___flmul 2EC6                       ___flsub 5CFC  
                     ___fltol 57B0               __size_of___wmul 0036                       ___lwdiv 5B14  
                __psmallconst 0D00          CANInitialize@propSeg 008E                       __pcinit 5BF8  
           __end_of_eval_poly 57B0                       _delay_s 5E56                       __ramtop 0D00  
                     __ptext0 5CB0                       __ptext1 5102                       __ptext2 336C  
                     __ptext3 4890                       __ptext4 543E                       __ptext5 1858  
                     __ptext6 5E82                       __ptext7 5E2A                       __ptext8 1FE4  
                     __ptext9 58BC                     _T0CONbits 000FD5                    ??_can_send 0087  
                __size_of_abs 002C                  __size_of_cos 00E4               atan@val_squared 0192  
                __size_of_sin 0318                    ??___xxtofl 0089                       atan@val 0196  
           __end_of_parallelo 4B1C                    ??_delay_ms 007F                       asin@sgn 019E  
      CANreceiveMessage@error 000B               _start_operation 023A                __pintcode_body 59A0  
        end_of_initialization 5C52                       int_func 59A0                 _CANInitialize 4F3C  
                   _ISR_Bassa 0018                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE                       sqrt@grs 00D0  
                     sqrt@exp 00D4             ??_can_interpreter 0077       _steering_correction_dir 023B  
                   _PORTBbits 000F81                CANSetMask@mask 0077                CANSetMask@tamp 0081  
                _distance_set 0110                CANSetMask@type 007B          __end_of_park_routine 373E  
                 ___fladd@grs 00C0                 ___xxtofl@sign 008D                     _TRISBbits 000F93  
                 ___fldiv@grs 008A                   ___fldiv@rem 0084                     _MUX_index 0042  
                  _pulse_time 003C       _clock_counter_reference 00E4                   ___flmul@grs 009E  
              _CANsendMessage 1858              CANInitialize@BRP 0088              CANInitialize@SJW 0087  
              ?_CANInitialize 0085                    ?_ISR_Bassa 0001                   ?_matematica 0001  
              __end_of___flge 543E             __size_of_ISR_Alta 5A78                __end_of___wmul 5E2A  
                  floor@expon 00C9           start_initialization 5BF8                    eval_poly@d 00C5  
                  eval_poly@n 00C7                    eval_poly@x 00C1                   __end_of_abs 5E56  
                 __end_of_cos 59A0                   __end_of_sin 457E           CANSetMask@numBuffer 0080  
               _data_speed_rx 0108        __end_of_CANsendMessage 1FE4             ?_CANOperationMode 0001  
               _data_steering 0179                    frexp@value 0077            ??_CANOperationMode 0077  
           _distance_received 0234    CANInitialize@FilterConfig1 008F    CANInitialize@FilterConfig2 0090  
         _steering_correction 0045                      ??___flge 00B9                      ??___wmul 007B  
                 __pdataBANK0 00E8                   __pdataBANK1 01E6              __CFG_LPT1OSC$OFF 000000  
                   ___fladd@a 00B1                     ___fladd@b 00AD        CANInitialize@phaseSeg1 0085  
      CANInitialize@phaseSeg2 0086                     ___fldiv@a 007B                     ___fldiv@b 0077  
                   ___flmul@a 0094                     ___flmul@b 0090                   __pbssCOMRAM 0024  
                   ___flsub@a 00CF                     ___flsub@b 00CB                 __pcstackBANK0 0060  
               __pcstackBANK1 0189                   _BRGCON2bits 000F71                   _BRGCON3bits 000F72  
           __size_of_can_send 0136             __size_of___xxtofl 01CE             __size_of_delay_ms 003A  
             ?_CANsendMessage 0077           __size_of_matematica 052E               ??_CANInitialize 008A  
                   _asin$3750 01A2                     _asin$3748 01AE                     _asin$3749 01A6  
                  sin@coeff_a 0D2D                    sin@coeff_b 0D41                 ??_park_search 01B2  
               _alignment_gap 00E0            CANSetFilter@filter 0077                     _data_test 0181  
            ___lwdiv@dividend 0060                    ISR_Bassa@i 0023                   ??_ISR_Bassa 000D  
                   __pintcode 0008                      ?___fladd 00AD                      ?___fldiv 0077  
                    ?___flneg 00A9                      ?___flmul 0090                      ?___flsub 00CB  
                    ?___fltol 0077         __size_of_park_routine 03D2                      ?___lwdiv 0060  
                 __pintcodelo 0018                      ?_delay_s 0001                   __smallconst 0D00  
                 _COMSTATbits 000F74                     _eval_poly 5698                     _larghezza 01E6  
            ___lwdiv@quotient 0065                __size_of_floor 0124                __size_of_frexp 0094  
     __size_of_configurazione 006C                     _parallelo 4890         CANreceiveMessage@tamp 000C  
              _prima_sterzata 0138                ___wmul@product 007B                      _LATBbits 000F8A  
             _can_interpreter 5C5C                     atan@recip 0191                  _park_routine 336C  
_delay_quartz_frequency_value 00E8                      _IPR3bits 000FA5                      _PIE3bits 000FA3  
                    i1u672_20 25CA                      i1u672_26 25CC                      i1u673_20 25F8  
                    i1u681_25 277E                      i1u673_26 25FA                      i1u683_20 2852  
                    i1u675_25 260E                      i1u683_26 2854                      i1u684_20 287C  
                    i1u692_25 29F4                      i1u684_26 287E                      _PIR3bits 000FA4  
                    i1u686_25 2890                      i1u965_27 00BC                      _RXB0EIDH 000F63  
                    _RXB0EIDL 000F64                      _RXB1EIDH 000F53                      _RXB1EIDL 000F54  
                    _ISR_Alta 0008                     _set_speed 00E6                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                      _RXB0SIDH 000F61                      _RXB0SIDL 000F62  
                    _RXF0EIDH 000F02                      _RXB1SIDH 000F51                      _RXF0EIDL 000F03  
                    _RXB1SIDL 000F52                      _RXF1EIDH 000F06                      _RXF1EIDL 000F07  
                    _RXF2EIDH 000F0A                      _RXF2EIDL 000F0B                      _RXF3EIDH 000F0E  
                    _RXF3EIDL 000F0F                      _RXF4EIDH 000F12                      _RXF4EIDL 000F13  
                    _RXF5EIDH 000F16                      _RXF5EIDL 000F17                      _RXF0SIDH 000F00  
                    _RXF0SIDL 000F01           __end_of_park_search 52AE                      _TXB0EIDH 000F43  
                    _RXF1SIDH 000F04                      _TXB0EIDL 000F44                      _RXF1SIDL 000F05  
                    _TXB1EIDH 000F33                      _RXF2SIDH 000F08                      _TXB1EIDL 000F34  
                    _RXF2SIDL 000F09                      _TXB2EIDH 000F23                      _RXF3SIDH 000F0C  
                    _TXB2EIDL 000F24                      _RXF3SIDL 000F0D                      _RXF4SIDH 000F10  
                    _RXF4SIDL 000F11                      _RXF5SIDH 000F14                      _RXF5SIDL 000F15  
                    _RXM0EIDH 000F1A                      _RXM0EIDL 000F1B                      _TXB0SIDH 000F41  
                    _RXM1EIDH 000F1E                      _TXB0SIDL 000F42                      _RXM1EIDL 000F1F  
                    _TXB1SIDH 000F31                      _TXB1SIDL 000F32                      _TXB2SIDH 000F21  
                    _TXB2SIDL 000F22                      _RXM0SIDH 000F18                      _RXM0SIDL 000F19  
                    _RXM1SIDH 000F1C                      _RXM1SIDL 000F1D                   _distance_dx 0036  
                 _distance_sx 0038                      _RXERRCNT 000F75                      _TXERRCNT 000F76  
           ___wmul@multiplier 0077                    ?_eval_poly 00C1           __end_ofatan@coeff_a 0D19  
         __end_ofatan@coeff_b 0D2D                 ?_CANSetFilter 0077                   _INTCON2bits 000FF1  
                   copy_data0 5C34                    _CANCONbits 000F6F                    ?_parallelo 0001  
            _distance_average 0034                     frexp@eptr 007B                      __Hparam0 0000  
                    __Lparam0 0000                  _RXB0SIDLbits 000F62                  _RXB1SIDLbits 000F52  
                ??_matematica 00DE                 _request_sent1 0239              __size_of___fladd 04A8  
                  _CANSetMask 3EC8              __size_of___fldiv 03C0              __size_of___flneg 0038  
            __size_of___flmul 04A6              __size_of___flsub 0048              __size_of___fltol 010C  
                    _cos$3751 01B6              __size_of___lwdiv 0078              __size_of_delay_s 002C  
                    _can_send 543E                      ___xxtofl 4D6E                  _RXF0SIDLbits 000F01  
                    _delay_ms 5D82               ___lwdiv@divisor 0062                  _RXF1SIDLbits 000F05  
             ___lwdiv@counter 0064                ??_CANSetFilter 007C                      __ptext10 4266  
                    __ptext11 5574                      __ptext20 5DBC                      __ptext12 5A80  
                    __ptext21 5698                      __ptext13 4D6E                      __ptext30 4F3C  
                    __ptext22 2EC6                      __ptext14 57B0                      __ptext31 3EC8  
                    __ptext23 2A1E                      __ptext15 5CFC                      __ptext32 0D52  
                    __ptext24 52AE                      __ptext16 457E                      __ptext33 5EA6  
                    __ptext25 3B08                      __ptext17 373E                      __ptext34 5C5C  
                    __ptext26 5E56                      __ptext18 4B1C                      __ptext27 5D82  
                    __ptext19 5D44                      __ptext36 2512                      __ptext28 5DF4  
                    __ptext29 5B8C                      __ptext38 5B14                  _RXF2SIDLbits 000F09  
                    _sin$3752 018D       __end_of_can_interpreter 5CB0                  _RXF3SIDLbits 000F0D  
                    _distance 0146            __end_of_matematica 2512                  _RXF4SIDLbits 000F11  
                _RXF5SIDLbits 000F15      CANsendMessage@dataLength 007D                 __size_of_fabs 003E  
               __size_of_atan 0252                 __size_of_asin 0312                 __size_of_main 004C  
               __size_of_sqrt 03CA                   _park_search 5102          CANreceiveMessage@msg 0001  
                _TXB0SIDLbits 000F42                  _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22  
                    int$flags 0048     __size_of_CANOperationMode 0016                 ?_CANisTxReady 0001  
                 atan@coeff_a 0D01                   atan@coeff_b 0D19                   _RXB0DLCbits 000F65  
                 _RXB1DLCbits 000F55                  _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60  
                 _RXB1CONbits 000F50             _CANreceiveMessage 2512                  _RXM1SIDLbits 000F1D  
                  _INTCONbits 000FF2                   ??_eval_poly 00C9              ??_CANsendMessage 007F  
          ?_CANreceiveMessage 0001                  _request_sent 0238                     sqrt@tfrac 00CB  
              _configurazione 5B8C      CANsendMessage@identifier 0077                   ??_parallelo 00DE  
                    intlevel1 0000                      intlevel2 0000              CANSetFilter@tamp 0081  
            CANSetFilter@type 007B           ??_CANreceiveMessage 0003           _old_data_correction 0237  
                 _TXB0DLCbits 000F45                   _right_speed 003E                   _TXB1DLCbits 000F35  
                 _TXB0CONbits 000F40                   _TXB2DLCbits 000F25                   _TXB1CONbits 000F30  
                 _TXB2CONbits 000F20          CANOperationMode@mode 0077                   ?_CANSetMask 0077  
              ??_CANisTxReady 0077                _distance_error 0233               _matematica$3740 01BE  
             _matematica$3741 01C2               _matematica$3742 01C6               _matematica$3743 01CA  
             _matematica$3744 01CE               _matematica$3745 01D2               _matematica$3746 01D6  
             _matematica$3747 01DA               _matematica$3739 01BA     __end_of_CANreceiveMessage 2A1E  
                    sqrt@frac 00DA                      sqrt@sign 00C9                      sqrt@root 00D6  
                 _timerValue2 0040        __end_of_configurazione 5BF8                 ___fladd@signs 00BD  
               _distance_wait 0236              ?_can_interpreter 0001                  ___fladd@aexp 00BE  
                ___fladd@bexp 00BF         __end_of_CANInitialize 5102  
