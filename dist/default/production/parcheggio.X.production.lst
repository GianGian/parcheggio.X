

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Apr 25 18:41:02 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    61                           	psect	param0,global,class=BANK0,space=1,delta=1
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           	psect	idataCOMRAM
    65  005CB8                     __pidataCOMRAM:
    66                           	opt stack 0
    67                           
    68                           ;initializer for _spazio_parcheggio
    69  005CB8  0064               	dw	100
    70                           
    71                           	psect	idataBANK0
    72  005CBA                     __pidataBANK0:
    73                           	opt stack 0
    74                           
    75                           ;initializer for _delay_quartz_frequency_value
    76  005CBA  10                 	db	16
    77                           
    78                           	psect	idataBANK1
    79  005CB0                     __pidataBANK1:
    80                           	opt stack 0
    81                           
    82                           ;initializer for _larghezza
    83  005CB0  0000               	dw	0
    84  005CB2  4200               	dw	16896
    85                           
    86                           ;initializer for _raggio
    87  005CB4  0000               	dw	0
    88  005CB6  4270               	dw	17008
    89                           
    90                           	psect	smallconst
    91  000D00                     __psmallconst:
    92                           	opt stack 0
    93  000D00  00                 	db	0
    94  000D01                     atan@coeff_a:
    95                           	opt stack 0
    96  000D01  3C06               	dw	15366
    97  000D03  4204               	dw	16900
    98  000D05  9F7D               	dw	40829
    99  000D07  426A               	dw	17002
   100  000D09  905C               	dw	36956
   101  000D0B  4201               	dw	16897
   102  000D0D  4D60               	dw	19808
   103  000D0F  40BB               	dw	16571
   104  000D11  EC51               	dw	60497
   105  000D13  3E47               	dw	15943
   106  000D15  8DDE               	dw	36318
   107  000D17  BB1F               	dw	47903
   108  000D19                     __end_ofatan@coeff_a:
   109                           	opt stack 0
   110  000D19                     atan@coeff_b:
   111                           	opt stack 0
   112  000D19  3C06               	dw	15366
   113  000D1B  4204               	dw	16900
   114  000D1D  59C0               	dw	22976
   115  000D1F  428B               	dw	17035
   116  000D21  0474               	dw	1140
   117  000D23  4244               	dw	16964
   118  000D25  9BF9               	dw	39929
   119  000D27  414F               	dw	16719
   120  000D29  0000               	dw	0
   121  000D2B  3F80               	dw	16256
   122  000D2D                     __end_ofatan@coeff_b:
   123                           	opt stack 0
   124  000D2D                     sin@coeff_a:
   125                           	opt stack 0
   126  000D2D  F3EC               	dw	62444
   127  000D2F  484A               	dw	18506
   128  000D31  9535               	dw	38197
   129  000D33  C795               	dw	51093
   130  000D35  C117               	dw	49431
   131  000D37  45DC               	dw	17884
   132  000D39  DBFD               	dw	56317
   133  000D3B  C36D               	dw	50029
   134  000D3D  B372               	dw	45938
   135  000D3F  4033               	dw	16435
   136  000D41                     __end_ofsin@coeff_a:
   137                           	opt stack 0
   138  000D41                     sin@coeff_b:
   139                           	opt stack 0
   140  000D41  342B               	dw	13355
   141  000D43  4801               	dw	18433
   142  000D45  9D7F               	dw	40319
   143  000D47  45B0               	dw	17840
   144  000D49  FFE7               	dw	65511
   145  000D4B  42D9               	dw	17113
   146  000D4D  0000               	dw	0
   147  000D4F  3F80               	dw	16256
   148  000D51                     __end_ofsin@coeff_b:
   149                           	opt stack 0
   150  0000                     _RXB1CON	set	3920
   151  0000                     _RXB1CONbits	set	3920
   152  0000                     _RXB1D0	set	3926
   153  0000                     _RXB1D1	set	3927
   154  0000                     _RXB1D2	set	3928
   155  0000                     _RXB1D3	set	3929
   156  0000                     _RXB1D4	set	3930
   157  0000                     _RXB1D5	set	3931
   158  0000                     _RXB1D6	set	3932
   159  0000                     _RXB1D7	set	3933
   160  0000                     _RXB1DLC	set	3925
   161  0000                     _RXB1DLCbits	set	3925
   162  0000                     _RXB1EIDH	set	3923
   163  0000                     _RXB1EIDL	set	3924
   164  0000                     _RXB1SIDH	set	3921
   165  0000                     _RXB1SIDL	set	3922
   166  0000                     _RXB1SIDLbits	set	3922
   167  0000                     _RXF0EIDH	set	3842
   168  0000                     _RXF0EIDL	set	3843
   169  0000                     _RXF0SIDH	set	3840
   170  0000                     _RXF0SIDL	set	3841
   171  0000                     _RXF0SIDLbits	set	3841
   172  0000                     _RXF1EIDH	set	3846
   173  0000                     _RXF1EIDL	set	3847
   174  0000                     _RXF1SIDH	set	3844
   175  0000                     _RXF1SIDL	set	3845
   176  0000                     _RXF1SIDLbits	set	3845
   177  0000                     _RXF2EIDH	set	3850
   178  0000                     _RXF2EIDL	set	3851
   179  0000                     _RXF2SIDH	set	3848
   180  0000                     _RXF2SIDL	set	3849
   181  0000                     _RXF2SIDLbits	set	3849
   182  0000                     _RXF3EIDH	set	3854
   183  0000                     _RXF3EIDL	set	3855
   184  0000                     _RXF3SIDH	set	3852
   185  0000                     _RXF3SIDL	set	3853
   186  0000                     _RXF3SIDLbits	set	3853
   187  0000                     _RXF4EIDH	set	3858
   188  0000                     _RXF4EIDL	set	3859
   189  0000                     _RXF4SIDH	set	3856
   190  0000                     _RXF4SIDL	set	3857
   191  0000                     _RXF4SIDLbits	set	3857
   192  0000                     _RXF5EIDH	set	3862
   193  0000                     _RXF5EIDL	set	3863
   194  0000                     _RXF5SIDH	set	3860
   195  0000                     _RXF5SIDL	set	3861
   196  0000                     _RXF5SIDLbits	set	3861
   197  0000                     _RXM0EIDH	set	3866
   198  0000                     _RXM0EIDL	set	3867
   199  0000                     _RXM0SIDH	set	3864
   200  0000                     _RXM0SIDL	set	3865
   201  0000                     _RXM0SIDLbits	set	3865
   202  0000                     _RXM1EIDH	set	3870
   203  0000                     _RXM1EIDL	set	3871
   204  0000                     _RXM1SIDH	set	3868
   205  0000                     _RXM1SIDL	set	3869
   206  0000                     _RXM1SIDLbits	set	3869
   207  0000                     _TXB0CONbits	set	3904
   208  0000                     _TXB0D0	set	3910
   209  0000                     _TXB0D1	set	3911
   210  0000                     _TXB0D2	set	3912
   211  0000                     _TXB0D3	set	3913
   212  0000                     _TXB0D4	set	3914
   213  0000                     _TXB0D5	set	3915
   214  0000                     _TXB0D6	set	3916
   215  0000                     _TXB0D7	set	3917
   216  0000                     _TXB0DLC	set	3909
   217  0000                     _TXB0DLCbits	set	3909
   218  0000                     _TXB0EIDH	set	3907
   219  0000                     _TXB0EIDL	set	3908
   220  0000                     _TXB0SIDH	set	3905
   221  0000                     _TXB0SIDL	set	3906
   222  0000                     _TXB0SIDLbits	set	3906
   223  0000                     _TXB1CONbits	set	3888
   224  0000                     _TXB1D0	set	3894
   225  0000                     _TXB1D1	set	3895
   226  0000                     _TXB1D2	set	3896
   227  0000                     _TXB1D3	set	3897
   228  0000                     _TXB1D4	set	3898
   229  0000                     _TXB1D5	set	3899
   230  0000                     _TXB1D6	set	3900
   231  0000                     _TXB1D7	set	3901
   232  0000                     _TXB1DLC	set	3893
   233  0000                     _TXB1DLCbits	set	3893
   234  0000                     _TXB1EIDH	set	3891
   235  0000                     _TXB1EIDL	set	3892
   236  0000                     _TXB1SIDH	set	3889
   237  0000                     _TXB1SIDL	set	3890
   238  0000                     _TXB1SIDLbits	set	3890
   239  0000                     _TXB2CONbits	set	3872
   240  0000                     _TXB2D0	set	3878
   241  0000                     _TXB2D1	set	3879
   242  0000                     _TXB2D2	set	3880
   243  0000                     _TXB2D3	set	3881
   244  0000                     _TXB2D4	set	3882
   245  0000                     _TXB2D5	set	3883
   246  0000                     _TXB2D6	set	3884
   247  0000                     _TXB2D7	set	3885
   248  0000                     _TXB2DLC	set	3877
   249  0000                     _TXB2DLCbits	set	3877
   250  0000                     _TXB2EIDH	set	3875
   251  0000                     _TXB2EIDL	set	3876
   252  0000                     _TXB2SIDH	set	3873
   253  0000                     _TXB2SIDL	set	3874
   254  0000                     _TXB2SIDLbits	set	3874
   255  0000                     _ADCON1	set	4033
   256  0000                     _BRGCON1	set	3952
   257  0000                     _BRGCON2	set	3953
   258  0000                     _BRGCON2bits	set	3953
   259  0000                     _BRGCON3	set	3954
   260  0000                     _BRGCON3bits	set	3954
   261  0000                     _CANCON	set	3951
   262  0000                     _CANCONbits	set	3951
   263  0000                     _CANSTAT	set	3950
   264  0000                     _COMSTATbits	set	3956
   265  0000                     _INTCON2bits	set	4081
   266  0000                     _INTCONbits	set	4082
   267  0000                     _IPR3bits	set	4005
   268  0000                     _LATA	set	3977
   269  0000                     _LATB	set	3978
   270  0000                     _LATBbits	set	3978
   271  0000                     _LATC	set	3979
   272  0000                     _PIE3bits	set	4003
   273  0000                     _PIR3bits	set	4004
   274  0000                     _PORTA	set	3968
   275  0000                     _PORTBbits	set	3969
   276  0000                     _RCONbits	set	4048
   277  0000                     _RXB0CON	set	3936
   278  0000                     _RXB0CONbits	set	3936
   279  0000                     _RXB0D0	set	3942
   280  0000                     _RXB0D1	set	3943
   281  0000                     _RXB0D2	set	3944
   282  0000                     _RXB0D3	set	3945
   283  0000                     _RXB0D4	set	3946
   284  0000                     _RXB0D5	set	3947
   285  0000                     _RXB0D6	set	3948
   286  0000                     _RXB0D7	set	3949
   287  0000                     _RXB0DLC	set	3941
   288  0000                     _RXB0DLCbits	set	3941
   289  0000                     _RXB0EIDH	set	3939
   290  0000                     _RXB0EIDL	set	3940
   291  0000                     _RXB0SIDH	set	3937
   292  0000                     _RXB0SIDL	set	3938
   293  0000                     _RXB0SIDLbits	set	3938
   294  0000                     _RXERRCNT	set	3957
   295  0000                     _T0CON	set	4053
   296  0000                     _T0CONbits	set	4053
   297  0000                     _T3CON	set	4017
   298  0000                     _TMR0H	set	4055
   299  0000                     _TMR0L	set	4054
   300  0000                     _TMR3H	set	4019
   301  0000                     _TMR3L	set	4018
   302  0000                     _TRISA	set	3986
   303  0000                     _TRISB	set	3987
   304  0000                     _TRISBbits	set	3987
   305  0000                     _TRISC	set	3988
   306  0000                     _TXERRCNT	set	3958
   307                           
   308                           ; #config settings
   309  000D51  00                 	db	0	; dummy byte at the end
   310  0000                     
   311                           	psect	cinit
   312  0058F0                     __pcinit:
   313                           	opt stack 0
   314  0058F0                     start_initialization:
   315                           	opt stack 0
   316  0058F0                     __initialization:
   317                           	opt stack 0
   318                           
   319                           ; Clear objects allocated to BANK1 (131 bytes)
   320  0058F0  EE01  F000         	lfsr	0,__pbssBANK1
   321  0058F4  0E83               	movlw	131
   322  0058F6                     clear_0:
   323  0058F6  6AEE               	clrf	postinc0,c
   324  0058F8  06E8               	decf	wreg,f,c
   325  0058FA  E1FD               	bnz	clear_0
   326                           
   327                           ; Clear objects allocated to BANK0 (16 bytes)
   328  0058FC  EE00  F0D7         	lfsr	0,__pbssBANK0
   329  005900  0E10               	movlw	16
   330  005902                     clear_1:
   331  005902  6AEE               	clrf	postinc0,c
   332  005904  06E8               	decf	wreg,f,c
   333  005906  E1FD               	bnz	clear_1
   334                           
   335                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   336  005908  6A45               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   337  00590A  6A44               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   338                           
   339                           ; Clear objects allocated to COMRAM (32 bytes)
   340  00590C  EE00  F024         	lfsr	0,__pbssCOMRAM
   341  005910  0E20               	movlw	32
   342  005912                     clear_2:
   343  005912  6AEE               	clrf	postinc0,c
   344  005914  06E8               	decf	wreg,f,c
   345  005916  E1FD               	bnz	clear_2
   346                           
   347                           ; Initialize objects allocated to BANK1 (8 bytes)
   348                           ; load TBLPTR registers with __pidataBANK1
   349  005918  0EB0               	movlw	low __pidataBANK1
   350  00591A  6EF6               	movwf	tblptrl,c
   351  00591C  0E5C               	movlw	high __pidataBANK1
   352  00591E  6EF7               	movwf	tblptrh,c
   353  005920  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   354  005922  6EF8               	movwf	tblptru,c
   355  005924  EE01  F0D8         	lfsr	0,__pdataBANK1
   356  005928  EE10 F008          	lfsr	1,8
   357  00592C                     copy_data0:
   358  00592C  0009               	tblrd		*+
   359  00592E  CFF5 FFEE          	movff	tablat,postinc0
   360  005932  50E5               	movf	postdec1,w,c
   361  005934  50E1               	movf	fsr1l,w,c
   362  005936  E1FA               	bnz	copy_data0
   363                           
   364                           ; Initialize objects allocated to BANK0 (1 bytes)
   365                           ; load TBLPTR registers with __pidataBANK0
   366  005938  0EBA               	movlw	low __pidataBANK0
   367  00593A  6EF6               	movwf	tblptrl,c
   368  00593C  0E5C               	movlw	high __pidataBANK0
   369  00593E  6EF7               	movwf	tblptrh,c
   370  005940  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   371  005942  6EF8               	movwf	tblptru,c
   372  005944  0009               	tblrd		*+	;fetch initializer
   373  005946  CFF5 F0E7          	movff	tablat,__pdataBANK0
   374                           
   375                           ; Initialize objects allocated to COMRAM (2 bytes)
   376                           ; load TBLPTR registers with __pidataCOMRAM
   377  00594A  0EB8               	movlw	low __pidataCOMRAM
   378  00594C  6EF6               	movwf	tblptrl,c
   379  00594E  0E5C               	movlw	high __pidataCOMRAM
   380  005950  6EF7               	movwf	tblptrh,c
   381  005952  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   382  005954  6EF8               	movwf	tblptru,c
   383  005956  0009               	tblrd		*+	;fetch initializer
   384  005958  CFF5 F046          	movff	tablat,__pdataCOMRAM
   385  00595C  0009               	tblrd		*+	;fetch initializer
   386  00595E  CFF5 F047          	movff	tablat,__pdataCOMRAM+1
   387  005962                     end_of_initialization:
   388                           	opt stack 0
   389  005962                     __end_of__initialization:
   390                           	opt stack 0
   391  005962  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   392  005964  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   393  005966  0100               	movlb	0
   394  005968  EF52  F02D         	goto	_main	;jump to C main() function
   395                           tblptru	equ	0xFF8
   396                           tblptrh	equ	0xFF7
   397                           tblptrl	equ	0xFF6
   398                           tablat	equ	0xFF5
   399                           postinc0	equ	0xFEE
   400                           wreg	equ	0xFE8
   401                           postdec1	equ	0xFE5
   402                           fsr1l	equ	0xFE1
   403                           
   404                           	psect	bitbssCOMRAM
   405  000220                     __pbitbssCOMRAM:
   406                           	opt stack 0
   407  000220                     _activation:
   408                           	opt stack 0
   409  000220                     	ds	1
   410  000221                     _asd:
   411                           	opt stack 0
   412  000221                     	ds	1
   413  000222                     _dir:
   414                           	opt stack 0
   415  000222                     	ds	1
   416  000223                     _distance_error:
   417                           	opt stack 0
   418  000223                     	ds	1
   419  000224                     _distance_received:
   420                           	opt stack 0
   421  000224                     	ds	1
   422  000225                     _distance_received1:
   423                           	opt stack 0
   424  000225                     	ds	1
   425  000226                     _distance_wait:
   426                           	opt stack 0
   427  000226                     	ds	1
   428  000227                     _old_data_correction:
   429                           	opt stack 0
   430  000227                     	ds	1
   431  000228                     _request_sent:
   432                           	opt stack 0
   433  000228                     	ds	1
   434  000229                     _request_sent1:
   435                           	opt stack 0
   436  000229                     	ds	1
   437  00022A                     _start_operation:
   438                           	opt stack 0
   439  00022A                     	ds	1
   440  00022B                     _steering_correction_dir:
   441                           	opt stack 0
   442  00022B                     	ds	1
   443                           tblptru	equ	0xFF8
   444                           tblptrh	equ	0xFF7
   445                           tblptrl	equ	0xFF6
   446                           tablat	equ	0xFF5
   447                           postinc0	equ	0xFEE
   448                           wreg	equ	0xFE8
   449                           postdec1	equ	0xFE5
   450                           fsr1l	equ	0xFE1
   451                           
   452                           	psect	bssCOMRAM
   453  000024                     __pbssCOMRAM:
   454                           	opt stack 0
   455  000024                     _sensor_distance:
   456                           	opt stack 0
   457  000024                     	ds	16
   458  000034                     _distance_dx:
   459                           	opt stack 0
   460  000034                     	ds	2
   461  000036                     _distance_sx:
   462                           	opt stack 0
   463  000036                     	ds	2
   464  000038                     _left_speed:
   465                           	opt stack 0
   466  000038                     	ds	2
   467  00003A                     _pulse_time:
   468                           	opt stack 0
   469  00003A                     	ds	2
   470  00003C                     _right_speed:
   471                           	opt stack 0
   472  00003C                     	ds	2
   473  00003E                     _timerValue2:
   474                           	opt stack 0
   475  00003E                     	ds	2
   476  000040                     _MUX_index:
   477                           	opt stack 0
   478  000040                     	ds	1
   479  000041                     _asus:
   480                           	opt stack 0
   481  000041                     	ds	1
   482  000042                     _gianni:
   483                           	opt stack 0
   484  000042                     	ds	1
   485  000043                     _steering_correction:
   486                           	opt stack 0
   487  000043                     	ds	1
   488                           tblptru	equ	0xFF8
   489                           tblptrh	equ	0xFF7
   490                           tblptrl	equ	0xFF6
   491                           tablat	equ	0xFF5
   492                           postinc0	equ	0xFEE
   493                           wreg	equ	0xFE8
   494                           postdec1	equ	0xFE5
   495                           fsr1l	equ	0xFE1
   496                           
   497                           	psect	dataCOMRAM
   498  000046                     __pdataCOMRAM:
   499                           	opt stack 0
   500  000046                     _spazio_parcheggio:
   501                           	opt stack 0
   502  000046                     	ds	2
   503                           tblptru	equ	0xFF8
   504                           tblptrh	equ	0xFF7
   505                           tblptrl	equ	0xFF6
   506                           tablat	equ	0xFF5
   507                           postinc0	equ	0xFEE
   508                           wreg	equ	0xFE8
   509                           postdec1	equ	0xFE5
   510                           fsr1l	equ	0xFE1
   511                           
   512                           	psect	bssBANK0
   513  0000D7                     __pbssBANK0:
   514                           	opt stack 0
   515  0000D7                     _alignment_gap:
   516                           	opt stack 0
   517  0000D7                     	ds	4
   518  0000DB                     _z:
   519                           	opt stack 0
   520  0000DB                     	ds	4
   521  0000DF                     _actual_speed:
   522                           	opt stack 0
   523  0000DF                     	ds	2
   524  0000E1                     _clock_counter_reference:
   525                           	opt stack 0
   526  0000E1                     	ds	2
   527  0000E3                     _distance_average:
   528                           	opt stack 0
   529  0000E3                     	ds	2
   530  0000E5                     _set_speed:
   531                           	opt stack 0
   532  0000E5                     	ds	2
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           postdec1	equ	0xFE5
   540                           fsr1l	equ	0xFE1
   541                           
   542                           	psect	dataBANK0
   543  0000E7                     __pdataBANK0:
   544                           	opt stack 0
   545  0000E7                     _delay_quartz_frequency_value:
   546                           	opt stack 0
   547  0000E7                     	ds	1
   548                           tblptru	equ	0xFF8
   549                           tblptrh	equ	0xFF7
   550                           tblptrl	equ	0xFF6
   551                           tablat	equ	0xFF5
   552                           postinc0	equ	0xFEE
   553                           wreg	equ	0xFE8
   554                           postdec1	equ	0xFE5
   555                           fsr1l	equ	0xFE1
   556                           
   557                           	psect	bssBANK1
   558  000100                     __pbssBANK1:
   559                           	opt stack 0
   560  000100                     _MUX_select:
   561                           	opt stack 0
   562  000100                     	ds	8
   563  000108                     _data_speed_rx:
   564                           	opt stack 0
   565  000108                     	ds	8
   566  000110                     _distance_set:
   567                           	opt stack 0
   568  000110                     	ds	8
   569  000118                     _Pminimo:
   570                           	opt stack 0
   571  000118                     	ds	4
   572  00011C                     _alfa:
   573                           	opt stack 0
   574  00011C                     	ds	4
   575  000120                     _beta:
   576                           	opt stack 0
   577  000120                     	ds	4
   578  000124                     _bordo:
   579                           	opt stack 0
   580  000124                     	ds	4
   581  000128                     _jjj:
   582                           	opt stack 0
   583  000128                     	ds	4
   584  00012C                     _kkk:
   585                           	opt stack 0
   586  00012C                     	ds	4
   587  000130                     _n:
   588                           	opt stack 0
   589  000130                     	ds	4
   590  000134                     _old_alignment_gap:
   591                           	opt stack 0
   592  000134                     	ds	4
   593  000138                     _prima_sterzata:
   594                           	opt stack 0
   595  000138                     	ds	4
   596  00013C                     _x:
   597                           	opt stack 0
   598  00013C                     	ds	4
   599  000140                     _distance:
   600                           	opt stack 0
   601  000140                     	ds	2
   602  000142                     _errno:
   603                           	opt stack 0
   604  000142                     	ds	2
   605  000144                     _msg:
   606                           	opt stack 0
   607  000144                     	ds	15
   608  000153                     _data:
   609                           	opt stack 0
   610  000153                     	ds	8
   611  00015B                     _data_brake:
   612                           	opt stack 0
   613  00015B                     	ds	8
   614  000163                     _data_correction:
   615                           	opt stack 0
   616  000163                     	ds	8
   617  00016B                     _data_speed:
   618                           	opt stack 0
   619  00016B                     	ds	8
   620  000173                     _data_steering:
   621                           	opt stack 0
   622  000173                     	ds	8
   623  00017B                     _data_test:
   624                           	opt stack 0
   625  00017B                     	ds	8
   626                           tblptru	equ	0xFF8
   627                           tblptrh	equ	0xFF7
   628                           tblptrl	equ	0xFF6
   629                           tablat	equ	0xFF5
   630                           postinc0	equ	0xFEE
   631                           wreg	equ	0xFE8
   632                           postdec1	equ	0xFE5
   633                           fsr1l	equ	0xFE1
   634                           
   635                           	psect	dataBANK1
   636  0001D8                     __pdataBANK1:
   637                           	opt stack 0
   638  0001D8                     _larghezza:
   639                           	opt stack 0
   640  0001D8                     	ds	4
   641  0001DC                     _raggio:
   642                           	opt stack 0
   643  0001DC                     	ds	4
   644                           tblptru	equ	0xFF8
   645                           tblptrh	equ	0xFF7
   646                           tblptrl	equ	0xFF6
   647                           tablat	equ	0xFF5
   648                           postinc0	equ	0xFEE
   649                           wreg	equ	0xFE8
   650                           postdec1	equ	0xFE5
   651                           fsr1l	equ	0xFE1
   652                           
   653                           	psect	cstackBANK1
   654  000183                     __pcstackBANK1:
   655                           	opt stack 0
   656  000183                     sqrt@sign:
   657                           	opt stack 0
   658  000183                     ___xxtofl@sign:
   659                           	opt stack 0
   660  000183                     atan@y:
   661                           	opt stack 0
   662                           
   663                           ; 4 bytes @ 0x0
   664  000183                     	ds	1
   665  000184                     sqrt@i:
   666                           	opt stack 0
   667  000184                     ___xxtofl@exp:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x1
   671  000184                     	ds	1
   672  000185                     sqrt@tfrac:
   673                           	opt stack 0
   674  000185                     ___xxtofl@arg:
   675                           	opt stack 0
   676                           
   677                           ; 4 bytes @ 0x2
   678  000185                     	ds	2
   679  000187                     atan@x:
   680                           	opt stack 0
   681                           
   682                           ; 4 bytes @ 0x4
   683  000187                     	ds	2
   684  000189                     sqrt@p:
   685                           	opt stack 0
   686  000189                     floor@i:
   687                           	opt stack 0
   688                           
   689                           ; 4 bytes @ 0x6
   690  000189                     	ds	1
   691  00018A                     sqrt@grs:
   692                           	opt stack 0
   693                           
   694                           ; 4 bytes @ 0x7
   695  00018A                     	ds	1
   696  00018B                     atan@recip:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x8
   700  00018B                     	ds	1
   701  00018C                     atan@val_squared:
   702                           	opt stack 0
   703                           
   704                           ; 4 bytes @ 0x9
   705  00018C                     	ds	1
   706  00018D                     floor@expon:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0xA
   710  00018D                     	ds	1
   711  00018E                     sqrt@exp:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0xB
   715  00018E                     	ds	1
   716  00018F                     ?___flsub:
   717                           	opt stack 0
   718  00018F                     ___flsub@b:
   719                           	opt stack 0
   720                           
   721                           ; 4 bytes @ 0xC
   722  00018F                     	ds	1
   723  000190                     atan@val:
   724                           	opt stack 0
   725  000190                     sqrt@root:
   726                           	opt stack 0
   727                           
   728                           ; 4 bytes @ 0xD
   729  000190                     	ds	3
   730  000193                     ___flsub@a:
   731                           	opt stack 0
   732                           
   733                           ; 4 bytes @ 0x10
   734  000193                     	ds	1
   735  000194                     sqrt@frac:
   736                           	opt stack 0
   737                           
   738                           ; 4 bytes @ 0x11
   739  000194                     	ds	3
   740  000197                     ?_sin:
   741                           	opt stack 0
   742  000197                     sin@f:
   743                           	opt stack 0
   744                           
   745                           ; 4 bytes @ 0x14
   746  000197                     	ds	1
   747  000198                     ?_asin:
   748                           	opt stack 0
   749  000198                     asin@x:
   750                           	opt stack 0
   751                           
   752                           ; 4 bytes @ 0x15
   753  000198                     	ds	3
   754  00019B                     sin@y:
   755                           	opt stack 0
   756                           
   757                           ; 4 bytes @ 0x18
   758  00019B                     	ds	1
   759  00019C                     asin@sgn:
   760                           	opt stack 0
   761                           
   762                           ; 4 bytes @ 0x19
   763  00019C                     	ds	3
   764  00019F                     _sin$3750:
   765                           	opt stack 0
   766                           
   767                           ; 4 bytes @ 0x1C
   768  00019F                     	ds	1
   769  0001A0                     _asin$3748:
   770                           	opt stack 0
   771                           
   772                           ; 4 bytes @ 0x1D
   773  0001A0                     	ds	3
   774  0001A3                     sin@x2:
   775                           	opt stack 0
   776                           
   777                           ; 4 bytes @ 0x20
   778  0001A3                     	ds	1
   779  0001A4                     _asin$3747:
   780                           	opt stack 0
   781                           
   782                           ; 4 bytes @ 0x21
   783  0001A4                     	ds	3
   784  0001A7                     sin@sgn:
   785                           	opt stack 0
   786                           
   787                           ; 1 bytes @ 0x24
   788  0001A7                     	ds	1
   789  0001A8                     asin@y:
   790                           	opt stack 0
   791                           
   792                           ; 4 bytes @ 0x25
   793  0001A8                     	ds	4
   794  0001AC                     _asin$3746:
   795                           	opt stack 0
   796                           
   797                           ; 4 bytes @ 0x29
   798  0001AC                     	ds	4
   799  0001B0                     ??_park_search:
   800  0001B0                     ?_cos:
   801                           	opt stack 0
   802  0001B0                     cos@f:
   803                           	opt stack 0
   804                           
   805                           ; 4 bytes @ 0x2D
   806  0001B0                     	ds	4
   807  0001B4                     _cos$3749:
   808                           	opt stack 0
   809                           
   810                           ; 4 bytes @ 0x31
   811  0001B4                     	ds	4
   812  0001B8                     _matematica$3738:
   813                           	opt stack 0
   814                           
   815                           ; 4 bytes @ 0x35
   816  0001B8                     	ds	4
   817  0001BC                     _matematica$3739:
   818                           	opt stack 0
   819                           
   820                           ; 4 bytes @ 0x39
   821  0001BC                     	ds	4
   822  0001C0                     _matematica$3740:
   823                           	opt stack 0
   824                           
   825                           ; 4 bytes @ 0x3D
   826  0001C0                     	ds	4
   827  0001C4                     _matematica$3741:
   828                           	opt stack 0
   829                           
   830                           ; 4 bytes @ 0x41
   831  0001C4                     	ds	4
   832  0001C8                     _matematica$3742:
   833                           	opt stack 0
   834                           
   835                           ; 4 bytes @ 0x45
   836  0001C8                     	ds	4
   837  0001CC                     _matematica$3743:
   838                           	opt stack 0
   839                           
   840                           ; 4 bytes @ 0x49
   841  0001CC                     	ds	4
   842  0001D0                     _matematica$3744:
   843                           	opt stack 0
   844                           
   845                           ; 4 bytes @ 0x4D
   846  0001D0                     	ds	4
   847  0001D4                     _matematica$3745:
   848                           	opt stack 0
   849                           
   850                           ; 4 bytes @ 0x51
   851  0001D4                     	ds	4
   852                           tblptru	equ	0xFF8
   853                           tblptrh	equ	0xFF7
   854                           tblptrl	equ	0xFF6
   855                           tablat	equ	0xFF5
   856                           postinc0	equ	0xFEE
   857                           wreg	equ	0xFE8
   858                           postdec1	equ	0xFE5
   859                           fsr1l	equ	0xFE1
   860                           
   861                           	psect	cstackBANK0
   862  000060                     __pcstackBANK0:
   863                           	opt stack 0
   864  000060                     ?___lwdiv:
   865                           	opt stack 0
   866  000060                     ___lwdiv@dividend:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0x0
   870  000060                     	ds	2
   871  000062                     ___lwdiv@divisor:
   872                           	opt stack 0
   873                           
   874                           ; 2 bytes @ 0x2
   875  000062                     	ds	2
   876  000064                     ___lwdiv@counter:
   877                           	opt stack 0
   878                           
   879                           ; 1 bytes @ 0x4
   880  000064                     	ds	1
   881  000065                     ___lwdiv@quotient:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0x5
   885  000065                     	ds	2
   886  000067                     ??_ISR_Alta:
   887                           
   888                           ; 0 bytes @ 0x7
   889  000067                     	ds	16
   890  000077                     ??_can_interpreter:
   891  000077                     ?_abs:
   892                           	opt stack 0
   893  000077                     ?___wmul:
   894                           	opt stack 0
   895  000077                     ?___fldiv:
   896                           	opt stack 0
   897  000077                     CANOperationMode@mode:
   898                           	opt stack 0
   899  000077                     _CANisTxReady$2845:
   900                           	opt stack 0
   901  000077                     ___wmul@multiplier:
   902                           	opt stack 0
   903  000077                     abs@a:
   904                           	opt stack 0
   905  000077                     CANsendMessage@identifier:
   906                           	opt stack 0
   907  000077                     CANSetMask@mask:
   908                           	opt stack 0
   909  000077                     CANSetFilter@filter:
   910                           	opt stack 0
   911  000077                     ___fldiv@b:
   912                           	opt stack 0
   913  000077                     frexp@value:
   914                           	opt stack 0
   915                           
   916                           ; 4 bytes @ 0x17
   917  000077                     	ds	2
   918  000079                     ??_abs:
   919  000079                     ___wmul@multiplicand:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x19
   923  000079                     	ds	2
   924  00007B                     CANSetMask@type:
   925                           	opt stack 0
   926  00007B                     CANSetFilter@type:
   927                           	opt stack 0
   928  00007B                     CANsendMessage@data:
   929                           	opt stack 0
   930  00007B                     ___wmul@product:
   931                           	opt stack 0
   932  00007B                     frexp@eptr:
   933                           	opt stack 0
   934  00007B                     ___fldiv@a:
   935                           	opt stack 0
   936                           
   937                           ; 4 bytes @ 0x1B
   938  00007B                     	ds	1
   939  00007C                     ??_CANSetMask:
   940  00007C                     ??_CANSetFilter:
   941                           
   942                           ; 0 bytes @ 0x1C
   943  00007C                     	ds	1
   944  00007D                     ??_frexp:
   945  00007D                     CANsendMessage@dataLength:
   946                           	opt stack 0
   947  00007D                     delay_ms@value_ms:
   948                           	opt stack 0
   949                           
   950                           ; 2 bytes @ 0x1D
   951  00007D                     	ds	1
   952  00007E                     CANsendMessage@flags:
   953                           	opt stack 0
   954                           
   955                           ; 1 bytes @ 0x1E
   956  00007E                     	ds	1
   957  00007F                     ??___fldiv:
   958  00007F                     ??_CANsendMessage:
   959  00007F                     delay_s@value_s:
   960                           	opt stack 0
   961                           
   962                           ; 1 bytes @ 0x1F
   963  00007F                     	ds	1
   964  000080                     CANSetMask@numBuffer:
   965                           	opt stack 0
   966  000080                     CANSetFilter@numBuffer:
   967                           	opt stack 0
   968  000080                     delay_s@repeat_loop:
   969                           	opt stack 0
   970                           
   971                           ; 1 bytes @ 0x20
   972  000080                     	ds	1
   973  000081                     CANSetMask@tamp:
   974                           	opt stack 0
   975  000081                     CANSetFilter@tamp:
   976                           	opt stack 0
   977                           
   978                           ; 4 bytes @ 0x21
   979  000081                     	ds	2
   980  000083                     ___fldiv@sign:
   981                           	opt stack 0
   982  000083                     CANsendMessage@tamp:
   983                           	opt stack 0
   984                           
   985                           ; 4 bytes @ 0x23
   986  000083                     	ds	1
   987  000084                     ___fldiv@rem:
   988                           	opt stack 0
   989                           
   990                           ; 4 bytes @ 0x24
   991  000084                     	ds	1
   992  000085                     CANInitialize@phaseSeg1:
   993                           	opt stack 0
   994                           
   995                           ; 1 bytes @ 0x25
   996  000085                     	ds	1
   997  000086                     CANInitialize@phaseSeg2:
   998                           	opt stack 0
   999                           
  1000                           ; 1 bytes @ 0x26
  1001  000086                     	ds	1
  1002  000087                     can_send@data_correction1:
  1003                           	opt stack 0
  1004  000087                     CANInitialize@SJW:
  1005                           	opt stack 0
  1006                           
  1007                           ; 1 bytes @ 0x27
  1008  000087                     	ds	1
  1009  000088                     CANInitialize@BRP:
  1010                           	opt stack 0
  1011  000088                     ___fldiv@new_exp:
  1012                           	opt stack 0
  1013                           
  1014                           ; 2 bytes @ 0x28
  1015  000088                     	ds	1
  1016  000089                     CANInitialize@flags:
  1017                           	opt stack 0
  1018                           
  1019                           ; 1 bytes @ 0x29
  1020  000089                     	ds	1
  1021  00008A                     ??_CANInitialize:
  1022  00008A                     ___fldiv@grs:
  1023                           	opt stack 0
  1024                           
  1025                           ; 4 bytes @ 0x2A
  1026  00008A                     	ds	4
  1027  00008E                     CANInitialize@propSeg:
  1028                           	opt stack 0
  1029  00008E                     ___fldiv@bexp:
  1030                           	opt stack 0
  1031                           
  1032                           ; 1 bytes @ 0x2E
  1033  00008E                     	ds	1
  1034  00008F                     CANInitialize@FilterConfig1:
  1035                           	opt stack 0
  1036  00008F                     ___fldiv@aexp:
  1037                           	opt stack 0
  1038                           
  1039                           ; 1 bytes @ 0x2F
  1040  00008F                     	ds	1
  1041  000090                     ?___flmul:
  1042                           	opt stack 0
  1043  000090                     CANInitialize@FilterConfig2:
  1044                           	opt stack 0
  1045  000090                     ___flmul@b:
  1046                           	opt stack 0
  1047                           
  1048                           ; 4 bytes @ 0x30
  1049  000090                     	ds	1
  1050  000091                     
  1051                           ; 0 bytes @ 0x31
  1052  000091                     	ds	3
  1053  000094                     ___flmul@a:
  1054                           	opt stack 0
  1055                           
  1056                           ; 4 bytes @ 0x34
  1057  000094                     	ds	4
  1058  000098                     ??___flmul:
  1059                           
  1060                           ; 0 bytes @ 0x38
  1061  000098                     	ds	4
  1062  00009C                     ___flmul@sign:
  1063                           	opt stack 0
  1064                           
  1065                           ; 1 bytes @ 0x3C
  1066  00009C                     	ds	1
  1067  00009D                     ___flmul@aexp:
  1068                           	opt stack 0
  1069                           
  1070                           ; 1 bytes @ 0x3D
  1071  00009D                     	ds	1
  1072  00009E                     ___flmul@grs:
  1073                           	opt stack 0
  1074                           
  1075                           ; 4 bytes @ 0x3E
  1076  00009E                     	ds	4
  1077  0000A2                     ___flmul@bexp:
  1078                           	opt stack 0
  1079                           
  1080                           ; 1 bytes @ 0x42
  1081  0000A2                     	ds	1
  1082  0000A3                     ___flmul@prod:
  1083                           	opt stack 0
  1084                           
  1085                           ; 4 bytes @ 0x43
  1086  0000A3                     	ds	4
  1087  0000A7                     ___flmul@temp:
  1088                           	opt stack 0
  1089                           
  1090                           ; 2 bytes @ 0x47
  1091  0000A7                     	ds	2
  1092  0000A9                     ?___flneg:
  1093                           	opt stack 0
  1094  0000A9                     ___flneg@f1:
  1095                           	opt stack 0
  1096                           
  1097                           ; 4 bytes @ 0x49
  1098  0000A9                     	ds	4
  1099  0000AD                     ?___fladd:
  1100                           	opt stack 0
  1101  0000AD                     ?_fabs:
  1102                           	opt stack 0
  1103  0000AD                     fabs@d:
  1104                           	opt stack 0
  1105  0000AD                     ___fladd@b:
  1106                           	opt stack 0
  1107                           
  1108                           ; 4 bytes @ 0x4D
  1109  0000AD                     	ds	4
  1110  0000B1                     ___flge@ff1:
  1111                           	opt stack 0
  1112  0000B1                     ___fladd@a:
  1113                           	opt stack 0
  1114                           
  1115                           ; 4 bytes @ 0x51
  1116  0000B1                     	ds	4
  1117  0000B5                     ??___fladd:
  1118  0000B5                     ___flge@ff2:
  1119                           	opt stack 0
  1120                           
  1121                           ; 4 bytes @ 0x55
  1122  0000B5                     	ds	4
  1123  0000B9                     ??___flge:
  1124                           
  1125                           ; 0 bytes @ 0x59
  1126  0000B9                     	ds	4
  1127  0000BD                     ___fladd@signs:
  1128                           	opt stack 0
  1129                           
  1130                           ; 1 bytes @ 0x5D
  1131  0000BD                     	ds	1
  1132  0000BE                     ___fladd@aexp:
  1133                           	opt stack 0
  1134                           
  1135                           ; 1 bytes @ 0x5E
  1136  0000BE                     	ds	1
  1137  0000BF                     ___fladd@bexp:
  1138                           	opt stack 0
  1139                           
  1140                           ; 1 bytes @ 0x5F
  1141  0000BF                     	ds	1
  1142  0000C0                     ___fladd@grs:
  1143                           	opt stack 0
  1144                           
  1145                           ; 1 bytes @ 0x60
  1146  0000C0                     	ds	1
  1147  0000C1                     ?_sqrt:
  1148                           	opt stack 0
  1149  0000C1                     ?_eval_poly:
  1150                           	opt stack 0
  1151  0000C1                     ?___fltol:
  1152                           	opt stack 0
  1153  0000C1                     eval_poly@x:
  1154                           	opt stack 0
  1155  0000C1                     ___fltol@f1:
  1156                           	opt stack 0
  1157  0000C1                     sqrt@a:
  1158                           	opt stack 0
  1159                           
  1160                           ; 4 bytes @ 0x61
  1161  0000C1                     	ds	4
  1162  0000C5                     ??_sqrt:
  1163  0000C5                     ??___fltol:
  1164  0000C5                     eval_poly@d:
  1165                           	opt stack 0
  1166                           
  1167                           ; 2 bytes @ 0x65
  1168  0000C5                     	ds	2
  1169  0000C7                     eval_poly@n:
  1170                           	opt stack 0
  1171                           
  1172                           ; 2 bytes @ 0x67
  1173  0000C7                     	ds	2
  1174  0000C9                     ??_eval_poly:
  1175  0000C9                     ___fltol@sign1:
  1176                           	opt stack 0
  1177                           
  1178                           ; 1 bytes @ 0x69
  1179  0000C9                     	ds	1
  1180  0000CA                     ___fltol@exp1:
  1181                           	opt stack 0
  1182                           
  1183                           ; 1 bytes @ 0x6A
  1184  0000CA                     	ds	1
  1185  0000CB                     ?___xxtofl:
  1186                           	opt stack 0
  1187  0000CB                     ___xxtofl@val:
  1188                           	opt stack 0
  1189                           
  1190                           ; 4 bytes @ 0x6B
  1191  0000CB                     	ds	2
  1192  0000CD                     eval_poly@res:
  1193                           	opt stack 0
  1194                           
  1195                           ; 4 bytes @ 0x6D
  1196  0000CD                     	ds	2
  1197  0000CF                     ??___xxtofl:
  1198                           
  1199                           ; 0 bytes @ 0x6F
  1200  0000CF                     	ds	2
  1201  0000D1                     ?_atan:
  1202                           	opt stack 0
  1203  0000D1                     atan@f:
  1204                           	opt stack 0
  1205                           
  1206                           ; 4 bytes @ 0x71
  1207  0000D1                     	ds	2
  1208  0000D3                     ?_floor:
  1209                           	opt stack 0
  1210  0000D3                     floor@x:
  1211                           	opt stack 0
  1212                           
  1213                           ; 4 bytes @ 0x73
  1214  0000D3                     	ds	2
  1215  0000D5                     ??_parallelo:
  1216  0000D5                     
  1217                           ; 0 bytes @ 0x75
  1218  0000D5                     	ds	2
  1219  0000D7                     tblptru	equ	0xFF8
  1220                           tblptrh	equ	0xFF7
  1221                           tblptrl	equ	0xFF6
  1222                           tablat	equ	0xFF5
  1223                           postinc0	equ	0xFEE
  1224                           wreg	equ	0xFE8
  1225                           postdec1	equ	0xFE5
  1226                           fsr1l	equ	0xFE1
  1227                           
  1228                           ; 0 bytes @ 0x77
  1229                           
  1230                           	psect	cstackCOMRAM
  1231  000001                     __pcstackCOMRAM:
  1232                           	opt stack 0
  1233  000001                     CANreceiveMessage@msg:
  1234                           	opt stack 0
  1235                           
  1236                           ; 2 bytes @ 0x0
  1237  000001                     	ds	2
  1238  000003                     ??_CANreceiveMessage:
  1239                           
  1240                           ; 0 bytes @ 0x2
  1241  000003                     	ds	8
  1242  00000B                     CANreceiveMessage@error:
  1243                           	opt stack 0
  1244                           
  1245                           ; 1 bytes @ 0xA
  1246  00000B                     	ds	1
  1247  00000C                     CANreceiveMessage@tamp:
  1248                           	opt stack 0
  1249                           
  1250                           ; 1 bytes @ 0xB
  1251  00000C                     	ds	1
  1252  00000D                     ??_ISR_Bassa:
  1253                           
  1254                           ; 0 bytes @ 0xC
  1255  00000D                     	ds	21
  1256  000022                     ISR_Bassa@gigi:
  1257                           	opt stack 0
  1258                           
  1259                           ; 1 bytes @ 0x21
  1260  000022                     	ds	1
  1261  000023                     ISR_Bassa@i:
  1262                           	opt stack 0
  1263                           
  1264                           ; 1 bytes @ 0x22
  1265  000023                     	ds	1
  1266                           tblptru	equ	0xFF8
  1267                           tblptrh	equ	0xFF7
  1268                           tblptrl	equ	0xFF6
  1269                           tablat	equ	0xFF5
  1270                           postinc0	equ	0xFEE
  1271                           wreg	equ	0xFE8
  1272                           postdec1	equ	0xFE5
  1273                           fsr1l	equ	0xFE1
  1274                           
  1275 ;;
  1276 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1277 ;;
  1278 ;; *************** function _main *****************
  1279 ;; Defined at:
  1280 ;;		line 186 in file "parcheggio.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;		None
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;		None               void
  1287 ;; Registers used:
  1288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1298 ;;Total ram usage:        0 bytes
  1299 ;; Hardware stack levels required when called:   10
  1300 ;; This function calls:
  1301 ;;		_can_interpreter
  1302 ;;		_configurazione
  1303 ;;		_park_routine
  1304 ;;		_park_search
  1305 ;; This function is called by:
  1306 ;;		Startup code after reset
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text0
  1311  005AA4                     __ptext0:
  1312                           	opt stack 0
  1313  005AA4                     _main:
  1314                           	opt stack 21
  1315                           
  1316                           ;parcheggio.c: 187: MUX_select[0] = 0b00000000;
  1317                           
  1318                           ; BSR set to: 15
  1319                           ;incstack = 0
  1320  005AA4  0E00               	movlw	0
  1321  005AA6  0101               	movlb	1	; () banked
  1322  005AA8  6F00               	movwf	_MUX_select& (0+255),b
  1323                           
  1324                           ;parcheggio.c: 188: MUX_select[1] = 0b00000001;
  1325  005AAA  0E01               	movlw	1
  1326  005AAC  0101               	movlb	1	; () banked
  1327  005AAE  6F01               	movwf	(_MUX_select+1)& (0+255),b
  1328                           
  1329                           ;parcheggio.c: 189: MUX_select[2] = 0b00000010;
  1330  005AB0  0E02               	movlw	2
  1331  005AB2  0101               	movlb	1	; () banked
  1332  005AB4  6F02               	movwf	(_MUX_select+2)& (0+255),b
  1333                           
  1334                           ;parcheggio.c: 190: MUX_select[3] = 0b00000011;
  1335  005AB6  0E03               	movlw	3
  1336  005AB8  0101               	movlb	1	; () banked
  1337  005ABA  6F03               	movwf	(_MUX_select+3)& (0+255),b
  1338                           
  1339                           ;parcheggio.c: 191: MUX_select[4] = 0b00000100;
  1340  005ABC  0E04               	movlw	4
  1341  005ABE  0101               	movlb	1	; () banked
  1342  005AC0  6F04               	movwf	(_MUX_select+4)& (0+255),b
  1343                           
  1344                           ;parcheggio.c: 192: MUX_select[5] = 0b00000101;
  1345  005AC2  0E05               	movlw	5
  1346  005AC4  0101               	movlb	1	; () banked
  1347  005AC6  6F05               	movwf	(_MUX_select+5)& (0+255),b
  1348                           
  1349                           ;parcheggio.c: 193: MUX_select[6] = 0b00000110;
  1350  005AC8  0E06               	movlw	6
  1351  005ACA  0101               	movlb	1	; () banked
  1352  005ACC  6F06               	movwf	(_MUX_select+6)& (0+255),b
  1353                           
  1354                           ;parcheggio.c: 194: MUX_select[7] = 0b00000111;
  1355  005ACE  0E07               	movlw	7
  1356  005AD0  0101               	movlb	1	; () banked
  1357  005AD2  6F07               	movwf	(_MUX_select+7)& (0+255),b
  1358                           
  1359                           ; BSR set to: 1
  1360                           ;parcheggio.c: 195: configurazione();
  1361  005AD4  ECF2  F02C         	call	_configurazione	;wreg free
  1362                           
  1363                           ;parcheggio.c: 196: PORTBbits.RB4 = 0;
  1364  005AD8  9881               	bcf	3969,4,c	;volatile
  1365                           
  1366                           ;parcheggio.c: 197: PORTBbits.RB5 = 0;
  1367  005ADA  9A81               	bcf	3969,5,c	;volatile
  1368                           
  1369                           ;parcheggio.c: 198: PORTBbits.RB6 = 0;
  1370  005ADC  9C81               	bcf	3969,6,c	;volatile
  1371                           
  1372                           ;parcheggio.c: 199: request_sent = 0;
  1373  005ADE  9045               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1374                           
  1375                           ;parcheggio.c: 200: start_operation = 0;
  1376  005AE0  9445               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1377  005AE2                     l7099:
  1378                           
  1379                           ;parcheggio.c: 215: park_search();
  1380  005AE2  EC74  F027         	call	_park_search	;wreg free
  1381                           
  1382                           ;parcheggio.c: 216: can_interpreter();
  1383  005AE6  EC28  F02D         	call	_can_interpreter	;wreg free
  1384                           
  1385                           ;parcheggio.c: 217: park_routine();
  1386  005AEA  ECA1  F024         	call	_park_routine	;wreg free
  1387  005AEE  D7F9               	goto	l7099
  1388  005AF0                     __end_of_main:
  1389                           	opt stack 0
  1390                           tblptru	equ	0xFF8
  1391                           tblptrh	equ	0xFF7
  1392                           tblptrl	equ	0xFF6
  1393                           tablat	equ	0xFF5
  1394                           postinc0	equ	0xFEE
  1395                           wreg	equ	0xFE8
  1396                           postdec1	equ	0xFE5
  1397                           fsr1l	equ	0xFE1
  1398                           
  1399 ;; *************** function _park_search *****************
  1400 ;; Defined at:
  1401 ;;		line 221 in file "parcheggio.c"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;		None
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;		None               void
  1408 ;; Registers used:
  1409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1417 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1418 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1419 ;;Total ram usage:        2 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; Hardware stack levels required when called:    9
  1422 ;; This function calls:
  1423 ;;		_CANisTxReady
  1424 ;;		_CANsendMessage
  1425 ;;		___xxtofl
  1426 ;;		_abs
  1427 ;;		_parallelo
  1428 ;; This function is called by:
  1429 ;;		_main
  1430 ;; This function uses a non-reentrant model
  1431 ;;
  1432                           
  1433                           	psect	text1
  1434  004EE8                     __ptext1:
  1435                           	opt stack 0
  1436  004EE8                     _park_search:
  1437                           	opt stack 21
  1438                           
  1439                           ;parcheggio.c: 222: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1440                           
  1441                           ;incstack = 0
  1442  004EE8  D0CE               	goto	l718
  1443  004EEA                     l6915:
  1444                           
  1445                           ;parcheggio.c: 223: parallelo();
  1446  004EEA  EC32  F022         	call	_parallelo	;wreg free
  1447                           
  1448                           ;parcheggio.c: 224: if (sensor_distance[0] > 50) {
  1449  004EEE  5025               	movf	_sensor_distance+1,w,c	;volatile
  1450  004EF0  E104               	bnz	u8760
  1451  004EF2  0E33               	movlw	51
  1452  004EF4  5C24               	subwf	_sensor_distance,w,c	;volatile
  1453  004EF6  A0D8               	btfss	status,0,c
  1454  004EF8  D02A               	goto	l720
  1455  004EFA                     u8760:
  1456                           
  1457                           ;parcheggio.c: 225: if (request_sent == 0) {
  1458  004EFA  B045               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1459  004EFC  D057               	goto	l6935
  1460  004EFE                     l6923:
  1461  004EFE  EC3B  F02E         	call	_CANisTxReady	;wreg free
  1462  004F02  0900               	iorlw	0
  1463  004F04  B4D8               	btfsc	status,2,c
  1464  004F06  D7FB               	goto	l6923
  1465                           
  1466                           ;parcheggio.c: 227: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1467  004F08  0E08               	movlw	8
  1468  004F0A  0100               	movlb	0	; () banked
  1469  004F0C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1470  004F0E  0E00               	movlw	0
  1471  004F10  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1472  004F12  0E00               	movlw	0
  1473  004F14  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1474  004F16  0E00               	movlw	0
  1475  004F18  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1476  004F1A  0E53               	movlw	low _data
  1477  004F1C  0100               	movlb	0	; () banked
  1478  004F1E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1479  004F20  0E01               	movlw	high _data
  1480  004F22  0100               	movlb	0	; () banked
  1481  004F24  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1482  004F26  0E08               	movlw	8
  1483  004F28  0100               	movlb	0	; () banked
  1484  004F2A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1485  004F2C  0EFC               	movlw	252
  1486  004F2E  0100               	movlb	0	; () banked
  1487  004F30  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1488  004F32  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1489                           
  1490                           ;parcheggio.c: 228: request_sent = 1;
  1491  004F36  8045               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1492                           
  1493                           ;parcheggio.c: 229: alignment_gap = 0;
  1494  004F38  0E00               	movlw	0
  1495  004F3A  0100               	movlb	0	; () banked
  1496  004F3C  6FD7               	movwf	_alignment_gap& (0+255),b
  1497  004F3E  0E00               	movlw	0
  1498  004F40  6FD8               	movwf	(_alignment_gap+1)& (0+255),b
  1499  004F42  0E00               	movlw	0
  1500  004F44  6FD9               	movwf	(_alignment_gap+2)& (0+255),b
  1501  004F46  0E00               	movlw	0
  1502  004F48  6FDA               	movwf	(_alignment_gap+3)& (0+255),b
  1503                           
  1504                           ; BSR set to: 0
  1505                           ;parcheggio.c: 230: LATBbits.LATB4 = 1;
  1506  004F4A  888A               	bsf	3978,4,c	;volatile
  1507                           
  1508                           ; BSR set to: 0
  1509                           ;parcheggio.c: 231: }
  1510                           ;parcheggio.c: 232: } else {
  1511  004F4C  D02F               	goto	l6935
  1512  004F4E                     l720:
  1513                           
  1514                           ;parcheggio.c: 233: LATBbits.LATB4 = 0;
  1515  004F4E  988A               	bcf	3978,4,c	;volatile
  1516                           
  1517                           ;parcheggio.c: 234: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1518  004F50  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1519  004F54  CFDE F1B0          	movff	postinc2,??_park_search
  1520  004F58  CFDD F1B1          	movff	postdec2,??_park_search+1
  1521  004F5C  0101               	movlb	1	; () banked
  1522  004F5E  1FB0               	comf	??_park_search& (0+255),f,b
  1523  004F60  1FB1               	comf	(??_park_search+1)& (0+255),f,b
  1524  004F62  4BB0               	infsnz	??_park_search& (0+255),f,b
  1525  004F64  2BB1               	incf	(??_park_search+1)& (0+255),f,b
  1526  004F66  5024               	movf	_sensor_distance,w,c	;volatile
  1527  004F68  0101               	movlb	1	; () banked
  1528  004F6A  25B0               	addwf	??_park_search& (0+255),w,b
  1529  004F6C  0100               	movlb	0	; () banked
  1530  004F6E  6F77               	movwf	abs@a& (0+255),b
  1531  004F70  5025               	movf	_sensor_distance+1,w,c	;volatile
  1532  004F72  0101               	movlb	1	; () banked
  1533  004F74  21B1               	addwfc	(??_park_search+1)& (0+255),w,b
  1534  004F76  0100               	movlb	0	; () banked
  1535  004F78  6F78               	movwf	(abs@a+1)& (0+255),b
  1536  004F7A  EC0F  F02E         	call	_abs	;wreg free
  1537  004F7E  0100               	movlb	0	; () banked
  1538  004F80  C077  F0CB         	movff	?_abs,___xxtofl@val
  1539  004F84  0100               	movlb	0	; () banked
  1540  004F86  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  1541  004F8A  0100               	movlb	0	; () banked
  1542  004F8C  0E00               	movlw	0
  1543  004F8E  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1544  004F90  0EFF               	movlw	-1
  1545  004F92  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  1546  004F94  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  1547  004F96  0E01               	movlw	1
  1548  004F98  ECAA  F025         	call	___xxtofl
  1549  004F9C  C0CB  F0D7         	movff	?___xxtofl,_alignment_gap
  1550  004FA0  C0CC  F0D8         	movff	?___xxtofl+1,_alignment_gap+1
  1551  004FA4  C0CD  F0D9         	movff	?___xxtofl+2,_alignment_gap+2
  1552  004FA8  C0CE  F0DA         	movff	?___xxtofl+3,_alignment_gap+3
  1553  004FAC                     l6935:
  1554                           
  1555                           ;parcheggio.c: 235: }
  1556                           ;parcheggio.c: 236: if ((sensor_distance[0] < 50) && (request_sent == 1)) {
  1557  004FAC  5025               	movf	_sensor_distance+1,w,c	;volatile
  1558  004FAE  E122               	bnz	l6945
  1559  004FB0  0E32               	movlw	50
  1560  004FB2  5C24               	subwf	_sensor_distance,w,c	;volatile
  1561  004FB4  A0D8               	btfss	status,0,c
  1562  004FB6  A045               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1563  004FB8  D01D               	goto	l6945
  1564                           
  1565                           ;parcheggio.c: 237: request_sent = 0;
  1566  004FBA  9045               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1567  004FBC                     l6941:
  1568  004FBC  EC3B  F02E         	call	_CANisTxReady	;wreg free
  1569  004FC0  0900               	iorlw	0
  1570  004FC2  B4D8               	btfsc	status,2,c
  1571  004FC4  D7FB               	goto	l6941
  1572                           
  1573                           ;parcheggio.c: 239: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1574  004FC6  0E07               	movlw	7
  1575  004FC8  0100               	movlb	0	; () banked
  1576  004FCA  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1577  004FCC  0E00               	movlw	0
  1578  004FCE  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1579  004FD0  0E00               	movlw	0
  1580  004FD2  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1581  004FD4  0E00               	movlw	0
  1582  004FD6  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1583  004FD8  0E53               	movlw	low _data
  1584  004FDA  0100               	movlb	0	; () banked
  1585  004FDC  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1586  004FDE  0E01               	movlw	high _data
  1587  004FE0  0100               	movlb	0	; () banked
  1588  004FE2  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1589  004FE4  0E08               	movlw	8
  1590  004FE6  0100               	movlb	0	; () banked
  1591  004FE8  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1592  004FEA  0EFC               	movlw	252
  1593  004FEC  0100               	movlb	0	; () banked
  1594  004FEE  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1595  004FF0  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1596  004FF4                     l6945:
  1597                           
  1598                           ;parcheggio.c: 240: }
  1599                           ;parcheggio.c: 241: if (distance_received == 1) {
  1600  004FF4  A844               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1601  004FF6  D047               	goto	l718
  1602                           
  1603                           ;parcheggio.c: 242: if (distance_average > 55) {
  1604  004FF8  0100               	movlb	0	; () banked
  1605  004FFA  51E4               	movf	(_distance_average+1)& (0+255),w,b	;volatile
  1606  004FFC  E105               	bnz	u8830
  1607  004FFE  0E38               	movlw	56
  1608  005000  0100               	movlb	0	; () banked
  1609  005002  5DE3               	subwf	_distance_average& (0+255),w,b	;volatile
  1610  005004  A0D8               	btfss	status,0,c
  1611  005006  D03D               	goto	l731
  1612  005008                     u8830:
  1613                           
  1614                           ; BSR set to: 0
  1615                           ;parcheggio.c: 243: PORTBbits.RB5 = 1;
  1616  005008  8A81               	bsf	3969,5,c	;volatile
  1617                           
  1618                           ; BSR set to: 0
  1619                           ;parcheggio.c: 244: data[0] = 1;
  1620  00500A  0E01               	movlw	1
  1621  00500C  0101               	movlb	1	; () banked
  1622  00500E  6F53               	movwf	_data& (0+255),b
  1623                           
  1624                           ; BSR set to: 1
  1625                           ;parcheggio.c: 245: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1626  005010  0E0B               	movlw	11
  1627  005012  0100               	movlb	0	; () banked
  1628  005014  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1629  005016  0E00               	movlw	0
  1630  005018  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1631  00501A  0E00               	movlw	0
  1632  00501C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1633  00501E  0E00               	movlw	0
  1634  005020  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1635  005022  0E53               	movlw	low _data
  1636  005024  0100               	movlb	0	; () banked
  1637  005026  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1638  005028  0E01               	movlw	high _data
  1639  00502A  0100               	movlb	0	; () banked
  1640  00502C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1641  00502E  0E01               	movlw	1
  1642  005030  0100               	movlb	0	; () banked
  1643  005032  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1644  005034  0EBC               	movlw	188
  1645  005036  0100               	movlb	0	; () banked
  1646  005038  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1647  00503A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1648                           
  1649                           ;parcheggio.c: 246: if ((request_sent1 == 0)&&(sensor_distance[0] < 40)) {
  1650  00503E  B245               	btfsc	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1651  005040  D022               	goto	l718
  1652  005042  5025               	movf	_sensor_distance+1,w,c	;volatile
  1653  005044  E120               	bnz	l718
  1654  005046  0E28               	movlw	40
  1655  005048  5C24               	subwf	_sensor_distance,w,c	;volatile
  1656  00504A  B0D8               	btfsc	status,0,c
  1657  00504C  D01C               	goto	l718
  1658                           
  1659                           ;parcheggio.c: 247: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1660  00504E  0E08               	movlw	8
  1661  005050  0100               	movlb	0	; () banked
  1662  005052  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1663  005054  0E00               	movlw	0
  1664  005056  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1665  005058  0E00               	movlw	0
  1666  00505A  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1667  00505C  0E00               	movlw	0
  1668  00505E  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1669  005060  0E53               	movlw	low _data
  1670  005062  0100               	movlb	0	; () banked
  1671  005064  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1672  005066  0E01               	movlw	high _data
  1673  005068  0100               	movlb	0	; () banked
  1674  00506A  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1675  00506C  0E08               	movlw	8
  1676  00506E  0100               	movlb	0	; () banked
  1677  005070  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1678  005072  0EFC               	movlw	252
  1679  005074  0100               	movlb	0	; () banked
  1680  005076  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1681  005078  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1682                           
  1683                           ;parcheggio.c: 248: distance_received1 = 0;
  1684  00507C  9A44               	bcf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  1685                           
  1686                           ;parcheggio.c: 249: request_sent1 = 1;
  1687  00507E  8245               	bsf	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1688                           
  1689                           ;parcheggio.c: 250: }
  1690                           ;parcheggio.c: 251: } else {
  1691  005080  D002               	goto	l718
  1692  005082                     l731:
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;parcheggio.c: 252: distance_received = 0;
  1696  005082  9844               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1697                           
  1698                           ;parcheggio.c: 253: PORTBbits.RB5 = 0;
  1699  005084  9A81               	bcf	3969,5,c	;volatile
  1700  005086                     l718:
  1701  005086  A044               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1702  005088  0012               	return	
  1703  00508A  BA81               	btfsc	3969,5,c	;volatile
  1704  00508C  0012               	return	
  1705  00508E  D72D               	goto	l6915
  1706  005090                     __end_of_park_search:
  1707                           	opt stack 0
  1708                           tblptru	equ	0xFF8
  1709                           tblptrh	equ	0xFF7
  1710                           tblptrl	equ	0xFF6
  1711                           tablat	equ	0xFF5
  1712                           postinc0	equ	0xFEE
  1713                           wreg	equ	0xFE8
  1714                           postdec1	equ	0xFE5
  1715                           fsr1l	equ	0xFE1
  1716                           postinc2	equ	0xFDE
  1717                           postdec2	equ	0xFDD
  1718                           status	equ	0xFD8
  1719                           
  1720 ;; *************** function _parallelo *****************
  1721 ;; Defined at:
  1722 ;;		line 329 in file "parcheggio.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;		None               void
  1729 ;; Registers used:
  1730 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1738 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1739 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1740 ;;Total ram usage:        2 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    8
  1743 ;; This function calls:
  1744 ;;		___fladd
  1745 ;;		___fldiv
  1746 ;;		___flge
  1747 ;;		___flmul
  1748 ;;		___fltol
  1749 ;;		___xxtofl
  1750 ;;		_abs
  1751 ;;		_asin
  1752 ;;		_can_send
  1753 ;;		_sqrt
  1754 ;; This function is called by:
  1755 ;;		_park_search
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text2
  1760  004464                     __ptext2:
  1761                           	opt stack 0
  1762  004464                     _parallelo:
  1763                           	opt stack 21
  1764                           
  1765                           ;parcheggio.c: 330: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1766                           
  1767                           ;incstack = 0
  1768  004464  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1769  004468  CFDE F0D5          	movff	postinc2,??_parallelo
  1770  00446C  CFDD F0D6          	movff	postdec2,??_parallelo+1
  1771  004470  0100               	movlb	0	; () banked
  1772  004472  1FD5               	comf	??_parallelo& (0+255),f,b
  1773  004474  1FD6               	comf	(??_parallelo+1)& (0+255),f,b
  1774  004476  4BD5               	infsnz	??_parallelo& (0+255),f,b
  1775  004478  2BD6               	incf	(??_parallelo+1)& (0+255),f,b
  1776  00447A  5024               	movf	_sensor_distance,w,c	;volatile
  1777  00447C  0100               	movlb	0	; () banked
  1778  00447E  25D5               	addwf	??_parallelo& (0+255),w,b
  1779  004480  0100               	movlb	0	; () banked
  1780  004482  6F77               	movwf	abs@a& (0+255),b
  1781  004484  5025               	movf	_sensor_distance+1,w,c	;volatile
  1782  004486  0100               	movlb	0	; () banked
  1783  004488  21D6               	addwfc	(??_parallelo+1)& (0+255),w,b
  1784  00448A  0100               	movlb	0	; () banked
  1785  00448C  6F78               	movwf	(abs@a+1)& (0+255),b
  1786  00448E  EC0F  F02E         	call	_abs	;wreg free
  1787  004492  0100               	movlb	0	; () banked
  1788  004494  C077  F0CB         	movff	?_abs,___xxtofl@val
  1789  004498  0100               	movlb	0	; () banked
  1790  00449A  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  1791  00449E  0100               	movlb	0	; () banked
  1792  0044A0  0E00               	movlw	0
  1793  0044A2  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1794  0044A4  0EFF               	movlw	-1
  1795  0044A6  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  1796  0044A8  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  1797  0044AA  0E01               	movlw	1
  1798  0044AC  ECAA  F025         	call	___xxtofl
  1799  0044B0  C0CB  F0D7         	movff	?___xxtofl,_alignment_gap
  1800  0044B4  C0CC  F0D8         	movff	?___xxtofl+1,_alignment_gap+1
  1801  0044B8  C0CD  F0D9         	movff	?___xxtofl+2,_alignment_gap+2
  1802  0044BC  C0CE  F0DA         	movff	?___xxtofl+3,_alignment_gap+3
  1803                           
  1804                           ;parcheggio.c: 332: if (alignment_gap < 30) {
  1805  0044C0  C0D7  F0B1         	movff	_alignment_gap,___flge@ff1
  1806  0044C4  C0D8  F0B2         	movff	_alignment_gap+1,___flge@ff1+1
  1807  0044C8  C0D9  F0B3         	movff	_alignment_gap+2,___flge@ff1+2
  1808  0044CC  C0DA  F0B4         	movff	_alignment_gap+3,___flge@ff1+3
  1809  0044D0  0E00               	movlw	0
  1810  0044D2  0100               	movlb	0	; () banked
  1811  0044D4  6FB5               	movwf	___flge@ff2& (0+255),b
  1812  0044D6  0E00               	movlw	0
  1813  0044D8  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  1814  0044DA  0EF0               	movlw	240
  1815  0044DC  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  1816  0044DE  0E41               	movlw	65
  1817  0044E0  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  1818  0044E2  EC48  F028         	call	___flge	;wreg free
  1819  0044E6  0100               	movlb	0	; () banked
  1820  0044E8  B0D8               	btfsc	status,0,c
  1821  0044EA  D0F9               	goto	l775
  1822                           
  1823                           ; BSR set to: 0
  1824                           ;parcheggio.c: 333: if ((sensor_distance[0] < 40) && (sensor_distance[1] < 40)) {
  1825  0044EC  5025               	movf	_sensor_distance+1,w,c	;volatile
  1826  0044EE  E103               	bnz	u8671
  1827  0044F0  0E28               	movlw	40
  1828  0044F2  5C24               	subwf	_sensor_distance,w,c	;volatile
  1829  0044F4  B0D8               	btfsc	status,0,c
  1830  0044F6                     u8671:
  1831  0044F6  D0E5               	goto	l6867
  1832                           
  1833                           ; BSR set to: 0
  1834  0044F8  5027               	movf	_sensor_distance+3,w,c	;volatile
  1835  0044FA  E103               	bnz	u8681
  1836  0044FC  0E28               	movlw	40
  1837  0044FE  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  1838  004500  B0D8               	btfsc	status,0,c
  1839  004502                     u8681:
  1840  004502  D0DF               	goto	l6867
  1841                           
  1842                           ; BSR set to: 0
  1843                           ;parcheggio.c: 338: x = ((100) + (alignment_gap * alignment_gap));
  1844  004504  C0D7  F094         	movff	_alignment_gap,___flmul@a
  1845  004508  C0D8  F095         	movff	_alignment_gap+1,___flmul@a+1
  1846  00450C  C0D9  F096         	movff	_alignment_gap+2,___flmul@a+2
  1847  004510  C0DA  F097         	movff	_alignment_gap+3,___flmul@a+3
  1848  004514  C0D7  F090         	movff	_alignment_gap,___flmul@b
  1849  004518  C0D8  F091         	movff	_alignment_gap+1,___flmul@b+1
  1850  00451C  C0D9  F092         	movff	_alignment_gap+2,___flmul@b+2
  1851  004520  C0DA  F093         	movff	_alignment_gap+3,___flmul@b+3
  1852  004524  EC36  F017         	call	___flmul	;wreg free
  1853  004528  C090  F0AD         	movff	?___flmul,___fladd@b
  1854  00452C  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  1855  004530  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  1856  004534  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  1857  004538  0E00               	movlw	0
  1858  00453A  0100               	movlb	0	; () banked
  1859  00453C  6FB1               	movwf	___fladd@a& (0+255),b
  1860  00453E  0E00               	movlw	0
  1861  004540  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  1862  004542  0EC8               	movlw	200
  1863  004544  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  1864  004546  0E42               	movlw	66
  1865  004548  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  1866  00454A  ECE2  F014         	call	___fladd	;wreg free
  1867  00454E  C0AD  F13C         	movff	?___fladd,_x
  1868  004552  C0AE  F13D         	movff	?___fladd+1,_x+1
  1869  004556  C0AF  F13E         	movff	?___fladd+2,_x+2
  1870  00455A  C0B0  F13F         	movff	?___fladd+3,_x+3
  1871                           
  1872                           ;parcheggio.c: 339: x = sqrt(x);
  1873  00455E  C13C  F0C1         	movff	_x,sqrt@a
  1874  004562  C13D  F0C2         	movff	_x+1,sqrt@a+1
  1875  004566  C13E  F0C3         	movff	_x+2,sqrt@a+2
  1876  00456A  C13F  F0C4         	movff	_x+3,sqrt@a+3
  1877  00456E  EC89  F019         	call	_sqrt	;wreg free
  1878  004572  C0C1  F13C         	movff	?_sqrt,_x
  1879  004576  C0C2  F13D         	movff	?_sqrt+1,_x+1
  1880  00457A  C0C3  F13E         	movff	?_sqrt+2,_x+2
  1881  00457E  C0C4  F13F         	movff	?_sqrt+3,_x+3
  1882                           
  1883                           ;parcheggio.c: 340: z = alignment_gap / x;
  1884  004582  C0D7  F077         	movff	_alignment_gap,___fldiv@b
  1885  004586  C0D8  F078         	movff	_alignment_gap+1,___fldiv@b+1
  1886  00458A  C0D9  F079         	movff	_alignment_gap+2,___fldiv@b+2
  1887  00458E  C0DA  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  1888  004592  C13C  F07B         	movff	_x,___fldiv@a
  1889  004596  C13D  F07C         	movff	_x+1,___fldiv@a+1
  1890  00459A  C13E  F07D         	movff	_x+2,___fldiv@a+2
  1891  00459E  C13F  F07E         	movff	_x+3,___fldiv@a+3
  1892  0045A2  EC6E  F01B         	call	___fldiv	;wreg free
  1893  0045A6  C077  F0DB         	movff	?___fldiv,_z
  1894  0045AA  C078  F0DC         	movff	?___fldiv+1,_z+1
  1895  0045AE  C079  F0DD         	movff	?___fldiv+2,_z+2
  1896  0045B2  C07A  F0DE         	movff	?___fldiv+3,_z+3
  1897                           
  1898                           ;parcheggio.c: 341: z = asin(z);
  1899  0045B6  C0DB  F198         	movff	_z,asin@x
  1900  0045BA  C0DC  F199         	movff	_z+1,asin@x+1
  1901  0045BE  C0DD  F19A         	movff	_z+2,asin@x+2
  1902  0045C2  C0DE  F19B         	movff	_z+3,asin@x+3
  1903  0045C6  ECA9  F020         	call	_asin	;wreg free
  1904  0045CA  C198  F0DB         	movff	?_asin,_z
  1905  0045CE  C199  F0DC         	movff	?_asin+1,_z+1
  1906  0045D2  C19A  F0DD         	movff	?_asin+2,_z+2
  1907  0045D6  C19B  F0DE         	movff	?_asin+3,_z+3
  1908                           
  1909                           ;parcheggio.c: 342: z = z / 3.14159265358979323846 * 180;
  1910  0045DA  0EDB               	movlw	219
  1911  0045DC  0100               	movlb	0	; () banked
  1912  0045DE  6F7B               	movwf	___fldiv@a& (0+255),b
  1913  0045E0  0E0F               	movlw	15
  1914  0045E2  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  1915  0045E4  0E49               	movlw	73
  1916  0045E6  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  1917  0045E8  0E40               	movlw	64
  1918  0045EA  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  1919  0045EC  C0DB  F077         	movff	_z,___fldiv@b
  1920  0045F0  C0DC  F078         	movff	_z+1,___fldiv@b+1
  1921  0045F4  C0DD  F079         	movff	_z+2,___fldiv@b+2
  1922  0045F8  C0DE  F07A         	movff	_z+3,___fldiv@b+3
  1923  0045FC  EC6E  F01B         	call	___fldiv	;wreg free
  1924  004600  C077  F090         	movff	?___fldiv,___flmul@b
  1925  004604  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  1926  004608  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  1927  00460C  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  1928  004610  0E00               	movlw	0
  1929  004612  0100               	movlb	0	; () banked
  1930  004614  6F94               	movwf	___flmul@a& (0+255),b
  1931  004616  0E00               	movlw	0
  1932  004618  6F95               	movwf	(___flmul@a+1)& (0+255),b
  1933  00461A  0E34               	movlw	52
  1934  00461C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  1935  00461E  0E43               	movlw	67
  1936  004620  6F97               	movwf	(___flmul@a+3)& (0+255),b
  1937  004622  EC36  F017         	call	___flmul	;wreg free
  1938  004626  C090  F0DB         	movff	?___flmul,_z
  1939  00462A  C091  F0DC         	movff	?___flmul+1,_z+1
  1940  00462E  C092  F0DD         	movff	?___flmul+2,_z+2
  1941  004632  C093  F0DE         	movff	?___flmul+3,_z+3
  1942                           
  1943                           ;parcheggio.c: 343: data_correction[0] = z;
  1944  004636  C0DB  F0C1         	movff	_z,___fltol@f1
  1945  00463A  C0DC  F0C2         	movff	_z+1,___fltol@f1+1
  1946  00463E  C0DD  F0C3         	movff	_z+2,___fltol@f1+2
  1947  004642  C0DE  F0C4         	movff	_z+3,___fltol@f1+3
  1948  004646  ECC6  F02A         	call	___fltol	;wreg free
  1949  00464A  0100               	movlb	0	; () banked
  1950  00464C  51C1               	movf	?___fltol& (0+255),w,b
  1951  00464E  0101               	movlb	1	; () banked
  1952  004650  6F63               	movwf	_data_correction& (0+255),b
  1953                           
  1954                           ; BSR set to: 1
  1955                           ;parcheggio.c: 345: if (sensor_distance[0] < sensor_distance[1]) {
  1956  004652  5026               	movf	_sensor_distance+2,w,c	;volatile
  1957  004654  5C24               	subwf	_sensor_distance,w,c	;volatile
  1958  004656  5027               	movf	_sensor_distance+3,w,c	;volatile
  1959  004658  5825               	subwfb	_sensor_distance+1,w,c	;volatile
  1960  00465A  B0D8               	btfsc	status,0,c
  1961  00465C  D002               	goto	l6859
  1962                           
  1963                           ; BSR set to: 1
  1964                           ;parcheggio.c: 346: data_correction[1] = 0;
  1965  00465E  0E00               	movlw	0
  1966  004660  D001               	goto	L1
  1967  004662                     l6859:
  1968                           
  1969                           ; BSR set to: 1
  1970                           ;parcheggio.c: 348: data_correction[1] = 1;
  1971  004662  0E01               	movlw	1
  1972  004664                     L1:
  1973  004664  0101               	movlb	1	; () banked
  1974  004666  6F64               	movwf	(_data_correction+1)& (0+255),b
  1975                           
  1976                           ; BSR set to: 1
  1977                           ;parcheggio.c: 349: }
  1978                           ;parcheggio.c: 350: if ((old_alignment_gap != alignment_gap) || (old_data_correction != 
      +                          data_correction[1])) {
  1979                           
  1980                           ; BSR set to: 1
  1981  004668  0100               	movlb	0	; () banked
  1982  00466A  51D7               	movf	_alignment_gap& (0+255),w,b
  1983  00466C  0101               	movlb	1	; () banked
  1984  00466E  1934               	xorwf	_old_alignment_gap& (0+255),w,b
  1985  004670  E117               	bnz	l781
  1986  004672  0100               	movlb	0	; () banked
  1987  004674  51D8               	movf	(_alignment_gap+1)& (0+255),w,b
  1988  004676  0101               	movlb	1	; () banked
  1989  004678  1935               	xorwf	(_old_alignment_gap+1)& (0+255),w,b
  1990  00467A  E112               	bnz	l781
  1991  00467C  0100               	movlb	0	; () banked
  1992  00467E  51D9               	movf	(_alignment_gap+2)& (0+255),w,b
  1993  004680  0101               	movlb	1	; () banked
  1994  004682  1936               	xorwf	(_old_alignment_gap+2)& (0+255),w,b
  1995  004684  E10D               	bnz	l781
  1996  004686  0100               	movlb	0	; () banked
  1997  004688  51DA               	movf	(_alignment_gap+3)& (0+255),w,b
  1998  00468A  0101               	movlb	1	; () banked
  1999  00468C  1937               	xorwf	(_old_alignment_gap+3)& (0+255),w,b
  2000  00468E  A4D8               	btfss	status,2,c
  2001  004690  D007               	goto	l781
  2002                           
  2003                           ; BSR set to: 1
  2004  004692  0E00               	movlw	0
  2005  004694  BE44               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2006  004696  0E01               	movlw	1
  2007  004698  0101               	movlb	1	; () banked
  2008  00469A  1964               	xorwf	(_data_correction+1)& (0+255),w,b
  2009  00469C  B4D8               	btfsc	status,2,c
  2010  00469E  0012               	return	
  2011  0046A0                     l781:
  2012                           
  2013                           ; BSR set to: 1
  2014                           ;parcheggio.c: 351: old_alignment_gap = alignment_gap;
  2015  0046A0  C0D7  F134         	movff	_alignment_gap,_old_alignment_gap
  2016  0046A4  C0D8  F135         	movff	_alignment_gap+1,_old_alignment_gap+1
  2017  0046A8  C0D9  F136         	movff	_alignment_gap+2,_old_alignment_gap+2
  2018  0046AC  C0DA  F137         	movff	_alignment_gap+3,_old_alignment_gap+3
  2019                           
  2020                           ;parcheggio.c: 352: old_data_correction = data_correction[1];
  2021  0046B0  0101               	movlb	1	; () banked
  2022  0046B2  A164               	btfss	(_data_correction+1)& (0+255),0,b
  2023  0046B4  D002               	goto	u8720
  2024  0046B6  8E44               	bsf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2025  0046B8  D001               	goto	l6865
  2026  0046BA                     u8720:
  2027  0046BA  9E44               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2028  0046BC                     l6865:
  2029                           
  2030                           ;parcheggio.c: 353: can_send();
  2031  0046BC  EC10  F029         	call	_can_send	;wreg free
  2032                           
  2033                           ;parcheggio.c: 354: }
  2034                           ;parcheggio.c: 355: } else if (data_correction[0] != old_data_correction) {
  2035  0046C0  0012               	return	
  2036  0046C2                     l6867:
  2037  0046C2  0E00               	movlw	0
  2038  0046C4  BE44               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2039  0046C6  0E01               	movlw	1
  2040  0046C8  0101               	movlb	1	; () banked
  2041  0046CA  1963               	xorwf	_data_correction& (0+255),w,b
  2042  0046CC  B4D8               	btfsc	status,2,c
  2043  0046CE  0012               	return	
  2044                           
  2045                           ; BSR set to: 1
  2046                           ;parcheggio.c: 356: data_correction[0] = 0;
  2047  0046D0  0E00               	movlw	0
  2048  0046D2  0101               	movlb	1	; () banked
  2049  0046D4  6F63               	movwf	_data_correction& (0+255),b
  2050                           
  2051                           ; BSR set to: 1
  2052                           ;parcheggio.c: 357: old_data_correction = 0;
  2053  0046D6  9E44               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2054                           
  2055                           ; BSR set to: 1
  2056                           ;parcheggio.c: 358: can_send();
  2057  0046D8  EC10  F029         	call	_can_send	;wreg free
  2058                           
  2059                           ;parcheggio.c: 359: }
  2060                           ;parcheggio.c: 360: } else {
  2061  0046DC  0012               	return	
  2062  0046DE                     l775:
  2063                           
  2064                           ; BSR set to: 0
  2065                           ;parcheggio.c: 361: if (old_data_correction != 0) {
  2066  0046DE  AE44               	btfss	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2067  0046E0  0012               	return	
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;parcheggio.c: 362: data_correction[0] = 0;
  2071  0046E2  0E00               	movlw	0
  2072  0046E4  0101               	movlb	1	; () banked
  2073  0046E6  6F63               	movwf	_data_correction& (0+255),b
  2074                           
  2075                           ; BSR set to: 1
  2076                           ;parcheggio.c: 363: old_data_correction = 0;
  2077  0046E8  9E44               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2078                           
  2079                           ; BSR set to: 1
  2080                           ;parcheggio.c: 364: can_send();
  2081  0046EA  EC10  F029         	call	_can_send	;wreg free
  2082  0046EE  0012               	return	
  2083  0046F0                     __end_of_parallelo:
  2084                           	opt stack 0
  2085                           tblptru	equ	0xFF8
  2086                           tblptrh	equ	0xFF7
  2087                           tblptrl	equ	0xFF6
  2088                           tablat	equ	0xFF5
  2089                           postinc0	equ	0xFEE
  2090                           wreg	equ	0xFE8
  2091                           postdec1	equ	0xFE5
  2092                           fsr1l	equ	0xFE1
  2093                           postinc2	equ	0xFDE
  2094                           postdec2	equ	0xFDD
  2095                           status	equ	0xFD8
  2096                           
  2097 ;; *************** function _abs *****************
  2098 ;; Defined at:
  2099 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  a               2   23[BANK0 ] int 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;		None
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  2   23[BANK0 ] int 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2113 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2115 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2116 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2117 ;;Total ram usage:        4 bytes
  2118 ;; Hardware stack levels used:    1
  2119 ;; Hardware stack levels required when called:    4
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_park_search
  2124 ;;		_parallelo
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text3
  2129  005C1E                     __ptext3:
  2130                           	opt stack 0
  2131  005C1E                     _abs:
  2132                           	opt stack 24
  2133                           
  2134                           ;incstack = 0
  2135  005C1E  0100               	movlb	0	; () banked
  2136  005C20  AF78               	btfss	(abs@a+1)& (0+255),7,b
  2137  005C22  D00E               	goto	l845
  2138                           
  2139                           ; BSR set to: 0
  2140  005C24  C077  F079         	movff	abs@a,??_abs
  2141  005C28  C078  F07A         	movff	abs@a+1,??_abs+1
  2142  005C2C  0100               	movlb	0	; () banked
  2143  005C2E  1F79               	comf	??_abs& (0+255),f,b
  2144  005C30  1F7A               	comf	(??_abs+1)& (0+255),f,b
  2145  005C32  4B79               	infsnz	??_abs& (0+255),f,b
  2146  005C34  2B7A               	incf	(??_abs+1)& (0+255),f,b
  2147  005C36  C079  F077         	movff	??_abs,?_abs
  2148  005C3A  C07A  F078         	movff	??_abs+1,?_abs+1
  2149  005C3E  0012               	return	
  2150  005C40                     l845:
  2151                           
  2152                           ; BSR set to: 0
  2153  005C40  C077  F077         	movff	abs@a,?_abs
  2154  005C44  C078  F078         	movff	abs@a+1,?_abs+1
  2155                           
  2156                           ; BSR set to: 0
  2157  005C48  0012               	return		;funcret
  2158  005C4A                     __end_of_abs:
  2159                           	opt stack 0
  2160                           tblptru	equ	0xFF8
  2161                           tblptrh	equ	0xFF7
  2162                           tblptrl	equ	0xFF6
  2163                           tablat	equ	0xFF5
  2164                           postinc0	equ	0xFEE
  2165                           wreg	equ	0xFE8
  2166                           postdec1	equ	0xFE5
  2167                           fsr1l	equ	0xFE1
  2168                           postinc2	equ	0xFDE
  2169                           postdec2	equ	0xFDD
  2170                           status	equ	0xFD8
  2171                           
  2172 ;; *************** function _park_routine *****************
  2173 ;; Defined at:
  2174 ;;		line 259 in file "parcheggio.c"
  2175 ;; Parameters:    Size  Location     Type
  2176 ;;		None
  2177 ;; Auto vars:     Size  Location     Type
  2178 ;;		None
  2179 ;; Return value:  Size  Location     Type
  2180 ;;		None               void
  2181 ;; Registers used:
  2182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2183 ;; Tracked objects:
  2184 ;;		On entry : 0/0
  2185 ;;		On exit  : 0/0
  2186 ;;		Unchanged: 0/0
  2187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2191 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2192 ;;Total ram usage:        0 bytes
  2193 ;; Hardware stack levels used:    1
  2194 ;; Hardware stack levels required when called:    9
  2195 ;; This function calls:
  2196 ;;		_CANsendMessage
  2197 ;;		___fladd
  2198 ;;		___fltol
  2199 ;;		___xxtofl
  2200 ;;		_can_send
  2201 ;;		_delay_s
  2202 ;;		_matematica
  2203 ;; This function is called by:
  2204 ;;		_main
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           	psect	text4
  2209  004942                     __ptext4:
  2210                           	opt stack 0
  2211  004942                     _park_routine:
  2212                           	opt stack 21
  2213                           
  2214                           ;parcheggio.c: 260: while ((PORTBbits.RB5 == 1) && (activation == 1)&&(start_operation =
      +                          = 1)) {
  2215                           
  2216                           ; BSR set to: 0
  2217                           ;incstack = 0
  2218  004942  D101               	goto	l7039
  2219  004944                     l6969:
  2220                           
  2221                           ;parcheggio.c: 261: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  2222  004944  0E07               	movlw	7
  2223  004946  0100               	movlb	0	; () banked
  2224  004948  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2225  00494A  0E00               	movlw	0
  2226  00494C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2227  00494E  0E00               	movlw	0
  2228  004950  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2229  004952  0E00               	movlw	0
  2230  004954  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2231  004956  0E53               	movlw	low _data
  2232  004958  0100               	movlb	0	; () banked
  2233  00495A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2234  00495C  0E01               	movlw	high _data
  2235  00495E  0100               	movlb	0	; () banked
  2236  004960  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2237  004962  0E08               	movlw	8
  2238  004964  0100               	movlb	0	; () banked
  2239  004966  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2240  004968  0EFC               	movlw	252
  2241  00496A  0100               	movlb	0	; () banked
  2242  00496C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2243  00496E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2244                           
  2245                           ;parcheggio.c: 262: bordo = sensor_distance[0];
  2246  004972  C024  F0CB         	movff	_sensor_distance,___xxtofl@val	;volatile
  2247  004976  C025  F0CC         	movff	_sensor_distance+1,___xxtofl@val+1	;volatile
  2248  00497A  0100               	movlb	0	; () banked
  2249  00497C  6BCD               	clrf	(___xxtofl@val+2)& (0+255),b
  2250  00497E  6BCE               	clrf	(___xxtofl@val+3)& (0+255),b
  2251  004980  0E00               	movlw	0
  2252  004982  ECAA  F025         	call	___xxtofl
  2253  004986  C0CB  F124         	movff	?___xxtofl,_bordo	;volatile
  2254  00498A  C0CC  F125         	movff	?___xxtofl+1,_bordo+1	;volatile
  2255  00498E  C0CD  F126         	movff	?___xxtofl+2,_bordo+2	;volatile
  2256  004992  C0CE  F127         	movff	?___xxtofl+3,_bordo+3	;volatile
  2257                           
  2258                           ;parcheggio.c: 263: matematica();
  2259  004996  EC78  F012         	call	_matematica	;wreg free
  2260                           
  2261                           ;parcheggio.c: 264: set_speed = 0;
  2262  00499A  0E00               	movlw	0
  2263  00499C  0100               	movlb	0	; () banked
  2264  00499E  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2265  0049A0  0E00               	movlw	0
  2266  0049A2  6FE5               	movwf	_set_speed& (0+255),b
  2267                           
  2268                           ; BSR set to: 0
  2269                           ;parcheggio.c: 265: data_brake[0] = 0;
  2270  0049A4  0E00               	movlw	0
  2271  0049A6  0101               	movlb	1	; () banked
  2272  0049A8  6F5B               	movwf	_data_brake& (0+255),b
  2273                           
  2274                           ; BSR set to: 1
  2275                           ;parcheggio.c: 266: data_steering[0] = 90;
  2276  0049AA  0E5A               	movlw	90
  2277  0049AC  0101               	movlb	1	; () banked
  2278  0049AE  6F73               	movwf	_data_steering& (0+255),b
  2279                           
  2280                           ; BSR set to: 1
  2281                           ;parcheggio.c: 267: can_send();
  2282  0049B0  EC10  F029         	call	_can_send	;wreg free
  2283                           
  2284                           ;parcheggio.c: 268: delay_s(1);
  2285  0049B4  0E01               	movlw	1
  2286  0049B6  EC25  F02E         	call	_delay_s
  2287  0049BA                     l742:
  2288  0049BA  AA44               	btfss	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  2289  0049BC  D7FE               	goto	l742
  2290                           
  2291                           ;parcheggio.c: 270: if (distance_average > 46) {
  2292  0049BE  0100               	movlb	0	; () banked
  2293  0049C0  51E4               	movf	(_distance_average+1)& (0+255),w,b	;volatile
  2294  0049C2  E105               	bnz	u8890
  2295  0049C4  0E2F               	movlw	47
  2296  0049C6  0100               	movlb	0	; () banked
  2297  0049C8  5DE3               	subwf	_distance_average& (0+255),w,b	;volatile
  2298  0049CA  A0D8               	btfss	status,0,c
  2299  0049CC  D02A               	goto	l6999
  2300  0049CE                     u8890:
  2301                           
  2302                           ; BSR set to: 0
  2303                           ;parcheggio.c: 271: set_speed = 50;
  2304  0049CE  0E00               	movlw	0
  2305  0049D0  0100               	movlb	0	; () banked
  2306  0049D2  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2307  0049D4  0E32               	movlw	50
  2308  0049D6  6FE5               	movwf	_set_speed& (0+255),b
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;parcheggio.c: 272: dir = 0;
  2312  0049D8  9444               	bcf	_dir/(0+8),_dir& (0+7),c
  2313                           
  2314                           ;parcheggio.c: 273: data_steering[0] = 90;
  2315  0049DA  0E5A               	movlw	90
  2316  0049DC  0101               	movlb	1	; () banked
  2317  0049DE  6F73               	movwf	_data_steering& (0+255),b
  2318                           
  2319                           ; BSR set to: 1
  2320                           ;parcheggio.c: 274: data_test[0] = (distance_average - 45);
  2321  0049E0  0100               	movlb	0	; () banked
  2322  0049E2  51E3               	movf	_distance_average& (0+255),w,b	;volatile
  2323  0049E4  0FD3               	addlw	211
  2324  0049E6  0101               	movlb	1	; () banked
  2325  0049E8  6F7B               	movwf	_data_test& (0+255),b
  2326                           
  2327                           ; BSR set to: 1
  2328                           ;parcheggio.c: 275: asd = 1;
  2329  0049EA  8244               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2330                           
  2331                           ; BSR set to: 1
  2332                           ;parcheggio.c: 276: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2333  0049EC  0E0D               	movlw	13
  2334  0049EE  0100               	movlb	0	; () banked
  2335  0049F0  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2336  0049F2  0E00               	movlw	0
  2337  0049F4  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2338  0049F6  0E00               	movlw	0
  2339  0049F8  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2340  0049FA  0E00               	movlw	0
  2341  0049FC  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2342  0049FE  0E7B               	movlw	low _data_test
  2343  004A00  0100               	movlb	0	; () banked
  2344  004A02  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2345  004A04  0E01               	movlw	high _data_test
  2346  004A06  0100               	movlb	0	; () banked
  2347  004A08  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2348  004A0A  0E08               	movlw	8
  2349  004A0C  0100               	movlb	0	; () banked
  2350  004A0E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2351  004A10  0EBC               	movlw	188
  2352  004A12  0100               	movlb	0	; () banked
  2353  004A14  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2354  004A16  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2355                           
  2356                           ;parcheggio.c: 277: can_send();
  2357  004A1A  EC10  F029         	call	_can_send	;wreg free
  2358  004A1E                     l746:
  2359  004A1E  B244               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2360  004A20  D7FE               	goto	l746
  2361  004A22                     l6999:
  2362                           
  2363                           ;parcheggio.c: 279: }
  2364                           ;parcheggio.c: 280: set_speed = 0;
  2365  004A22  0E00               	movlw	0
  2366  004A24  0100               	movlb	0	; () banked
  2367  004A26  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2368  004A28  0E00               	movlw	0
  2369  004A2A  6FE5               	movwf	_set_speed& (0+255),b
  2370                           
  2371                           ;parcheggio.c: 281: data_steering[0] = 90;
  2372  004A2C  0E5A               	movlw	90
  2373  004A2E  0101               	movlb	1	; () banked
  2374  004A30  6F73               	movwf	_data_steering& (0+255),b
  2375                           
  2376                           ; BSR set to: 1
  2377                           ;parcheggio.c: 282: can_send();
  2378  004A32  EC10  F029         	call	_can_send	;wreg free
  2379                           
  2380                           ;parcheggio.c: 283: delay_s(1);
  2381  004A36  0E01               	movlw	1
  2382  004A38  EC25  F02E         	call	_delay_s
  2383                           
  2384                           ;parcheggio.c: 284: set_speed = 50;
  2385  004A3C  0E00               	movlw	0
  2386  004A3E  0100               	movlb	0	; () banked
  2387  004A40  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2388  004A42  0E32               	movlw	50
  2389  004A44  6FE5               	movwf	_set_speed& (0+255),b
  2390                           
  2391                           ; BSR set to: 0
  2392                           ;parcheggio.c: 285: dir = 0;
  2393  004A46  9444               	bcf	_dir/(0+8),_dir& (0+7),c
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;parcheggio.c: 286: data_steering[0] = 180;
  2397  004A48  0EB4               	movlw	180
  2398  004A4A  0101               	movlb	1	; () banked
  2399  004A4C  6F73               	movwf	_data_steering& (0+255),b
  2400                           
  2401                           ; BSR set to: 1
  2402                           ;parcheggio.c: 287: data_test[0] = prima_sterzata;
  2403  004A4E  C138  F0C1         	movff	_prima_sterzata,___fltol@f1
  2404  004A52  C139  F0C2         	movff	_prima_sterzata+1,___fltol@f1+1
  2405  004A56  C13A  F0C3         	movff	_prima_sterzata+2,___fltol@f1+2
  2406  004A5A  C13B  F0C4         	movff	_prima_sterzata+3,___fltol@f1+3
  2407  004A5E  ECC6  F02A         	call	___fltol	;wreg free
  2408  004A62  0100               	movlb	0	; () banked
  2409  004A64  51C1               	movf	?___fltol& (0+255),w,b
  2410  004A66  0101               	movlb	1	; () banked
  2411  004A68  6F7B               	movwf	_data_test& (0+255),b
  2412                           
  2413                           ; BSR set to: 1
  2414                           ;parcheggio.c: 288: asd = 1;
  2415  004A6A  8244               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2416                           
  2417                           ; BSR set to: 1
  2418                           ;parcheggio.c: 289: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2419  004A6C  0E0D               	movlw	13
  2420  004A6E  0100               	movlb	0	; () banked
  2421  004A70  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2422  004A72  0E00               	movlw	0
  2423  004A74  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2424  004A76  0E00               	movlw	0
  2425  004A78  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2426  004A7A  0E00               	movlw	0
  2427  004A7C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2428  004A7E  0E7B               	movlw	low _data_test
  2429  004A80  0100               	movlb	0	; () banked
  2430  004A82  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2431  004A84  0E01               	movlw	high _data_test
  2432  004A86  0100               	movlb	0	; () banked
  2433  004A88  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2434  004A8A  0E08               	movlw	8
  2435  004A8C  0100               	movlb	0	; () banked
  2436  004A8E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2437  004A90  0EBC               	movlw	188
  2438  004A92  0100               	movlb	0	; () banked
  2439  004A94  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2440  004A96  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2441                           
  2442                           ;parcheggio.c: 290: can_send();
  2443  004A9A  EC10  F029         	call	_can_send	;wreg free
  2444  004A9E                     l749:
  2445  004A9E  B244               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2446  004AA0  D7FE               	goto	l749
  2447                           
  2448                           ;parcheggio.c: 292: set_speed = 50;
  2449  004AA2  0E00               	movlw	0
  2450  004AA4  0100               	movlb	0	; () banked
  2451  004AA6  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2452  004AA8  0E32               	movlw	50
  2453  004AAA  6FE5               	movwf	_set_speed& (0+255),b
  2454                           
  2455                           ;parcheggio.c: 293: data_steering[0] = 0;
  2456  004AAC  0E00               	movlw	0
  2457  004AAE  0101               	movlb	1	; () banked
  2458  004AB0  6F73               	movwf	_data_steering& (0+255),b
  2459                           
  2460                           ; BSR set to: 1
  2461                           ;parcheggio.c: 294: asd = 1;
  2462  004AB2  8244               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2463                           
  2464                           ; BSR set to: 1
  2465                           ;parcheggio.c: 295: data_test[0] = prima_sterzata + 10;
  2466  004AB4  0E00               	movlw	0
  2467  004AB6  0100               	movlb	0	; () banked
  2468  004AB8  6FB1               	movwf	___fladd@a& (0+255),b
  2469  004ABA  0E00               	movlw	0
  2470  004ABC  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  2471  004ABE  0E20               	movlw	32
  2472  004AC0  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  2473  004AC2  0E41               	movlw	65
  2474  004AC4  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  2475  004AC6  C138  F0AD         	movff	_prima_sterzata,___fladd@b
  2476  004ACA  C139  F0AE         	movff	_prima_sterzata+1,___fladd@b+1
  2477  004ACE  C13A  F0AF         	movff	_prima_sterzata+2,___fladd@b+2
  2478  004AD2  C13B  F0B0         	movff	_prima_sterzata+3,___fladd@b+3
  2479  004AD6  ECE2  F014         	call	___fladd	;wreg free
  2480  004ADA  C0AD  F0C1         	movff	?___fladd,___fltol@f1
  2481  004ADE  C0AE  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2482  004AE2  C0AF  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2483  004AE6  C0B0  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2484  004AEA  ECC6  F02A         	call	___fltol	;wreg free
  2485  004AEE  0100               	movlb	0	; () banked
  2486  004AF0  51C1               	movf	?___fltol& (0+255),w,b
  2487  004AF2  0101               	movlb	1	; () banked
  2488  004AF4  6F7B               	movwf	_data_test& (0+255),b
  2489                           
  2490                           ; BSR set to: 1
  2491                           ;parcheggio.c: 296: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2492  004AF6  0E0D               	movlw	13
  2493  004AF8  0100               	movlb	0	; () banked
  2494  004AFA  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2495  004AFC  0E00               	movlw	0
  2496  004AFE  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2497  004B00  0E00               	movlw	0
  2498  004B02  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2499  004B04  0E00               	movlw	0
  2500  004B06  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2501  004B08  0E7B               	movlw	low _data_test
  2502  004B0A  0100               	movlb	0	; () banked
  2503  004B0C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2504  004B0E  0E01               	movlw	high _data_test
  2505  004B10  0100               	movlb	0	; () banked
  2506  004B12  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2507  004B14  0E08               	movlw	8
  2508  004B16  0100               	movlb	0	; () banked
  2509  004B18  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2510  004B1A  0EBC               	movlw	188
  2511  004B1C  0100               	movlb	0	; () banked
  2512  004B1E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2513  004B20  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2514                           
  2515                           ;parcheggio.c: 297: can_send();
  2516  004B24  EC10  F029         	call	_can_send	;wreg free
  2517  004B28                     l752:
  2518  004B28  B244               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2519  004B2A  D7FE               	goto	l752
  2520                           
  2521                           ;parcheggio.c: 299: set_speed = 0;
  2522  004B2C  0E00               	movlw	0
  2523  004B2E  0100               	movlb	0	; () banked
  2524  004B30  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2525  004B32  0E00               	movlw	0
  2526  004B34  6FE5               	movwf	_set_speed& (0+255),b
  2527                           
  2528                           ;parcheggio.c: 300: data_steering[0] = 90;
  2529  004B36  0E5A               	movlw	90
  2530  004B38  0101               	movlb	1	; () banked
  2531  004B3A  6F73               	movwf	_data_steering& (0+255),b
  2532                           
  2533                           ; BSR set to: 1
  2534                           ;parcheggio.c: 301: can_send();
  2535  004B3C  EC10  F029         	call	_can_send	;wreg free
  2536                           
  2537                           ;parcheggio.c: 302: activation = 0;
  2538  004B40  9044               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
  2539                           
  2540                           ;parcheggio.c: 303: PORTBbits.RB5 = 0;
  2541  004B42  9A81               	bcf	3969,5,c	;volatile
  2542                           
  2543                           ;parcheggio.c: 304: start_operation = 0;
  2544  004B44  9445               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2545  004B46                     l7039:
  2546  004B46  AA81               	btfss	3969,5,c	;volatile
  2547  004B48  0012               	return	
  2548  004B4A  A044               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2549  004B4C  0012               	return	
  2550  004B4E  A445               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2551  004B50  0012               	return	
  2552  004B52  D6F8               	goto	l6969
  2553  004B54                     __end_of_park_routine:
  2554                           	opt stack 0
  2555                           tblptru	equ	0xFF8
  2556                           tblptrh	equ	0xFF7
  2557                           tblptrl	equ	0xFF6
  2558                           tablat	equ	0xFF5
  2559                           postinc0	equ	0xFEE
  2560                           wreg	equ	0xFE8
  2561                           postdec1	equ	0xFE5
  2562                           fsr1l	equ	0xFE1
  2563                           postinc2	equ	0xFDE
  2564                           postdec2	equ	0xFDD
  2565                           status	equ	0xFD8
  2566                           
  2567 ;; *************** function _matematica *****************
  2568 ;; Defined at:
  2569 ;;		line 370 in file "parcheggio.c"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;		None
  2572 ;; Auto vars:     Size  Location     Type
  2573 ;;		None
  2574 ;; Return value:  Size  Location     Type
  2575 ;;		None               void
  2576 ;; Registers used:
  2577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2578 ;; Tracked objects:
  2579 ;;		On entry : 0/0
  2580 ;;		On exit  : 0/0
  2581 ;;		Unchanged: 0/0
  2582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2584 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
  2585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2586 ;;      Totals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
  2587 ;;Total ram usage:       32 bytes
  2588 ;; Hardware stack levels used:    1
  2589 ;; Hardware stack levels required when called:    8
  2590 ;; This function calls:
  2591 ;;		___fladd
  2592 ;;		___fldiv
  2593 ;;		___flmul
  2594 ;;		___flneg
  2595 ;;		_asin
  2596 ;;		_cos
  2597 ;; This function is called by:
  2598 ;;		_park_routine
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text5
  2603  0024F0                     __ptext5:
  2604                           	opt stack 0
  2605  0024F0                     _matematica:
  2606                           	opt stack 21
  2607                           
  2608                           ;parcheggio.c: 372: alfa = asin(((2 * raggio)-(larghezza / 2) - bordo) / (2 * raggio));
  2609                           
  2610                           ;incstack = 0
  2611  0024F0  C124  F0A9         	movff	_bordo,___flneg@f1	;volatile
  2612  0024F4  C125  F0AA         	movff	_bordo+1,___flneg@f1+1	;volatile
  2613  0024F8  C126  F0AB         	movff	_bordo+2,___flneg@f1+2	;volatile
  2614  0024FC  C127  F0AC         	movff	_bordo+3,___flneg@f1+3	;volatile
  2615  002500  ECD8  F02D         	call	___flneg	;wreg free
  2616  002504  C0A9  F0B1         	movff	?___flneg,___fladd@a
  2617  002508  C0AA  F0B2         	movff	?___flneg+1,___fladd@a+1
  2618  00250C  C0AB  F0B3         	movff	?___flneg+2,___fladd@a+2
  2619  002510  C0AC  F0B4         	movff	?___flneg+3,___fladd@a+3
  2620  002514  0E00               	movlw	0
  2621  002516  0100               	movlb	0	; () banked
  2622  002518  6F94               	movwf	___flmul@a& (0+255),b
  2623  00251A  0E00               	movlw	0
  2624  00251C  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2625  00251E  0E00               	movlw	0
  2626  002520  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2627  002522  0E40               	movlw	64
  2628  002524  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2629  002526  C1DC  F090         	movff	_raggio,___flmul@b
  2630  00252A  C1DD  F091         	movff	_raggio+1,___flmul@b+1
  2631  00252E  C1DE  F092         	movff	_raggio+2,___flmul@b+2
  2632  002532  C1DF  F093         	movff	_raggio+3,___flmul@b+3
  2633  002536  EC36  F017         	call	___flmul	;wreg free
  2634  00253A  C090  F0AD         	movff	?___flmul,___fladd@b
  2635  00253E  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  2636  002542  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  2637  002546  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  2638  00254A  ECE2  F014         	call	___fladd	;wreg free
  2639  00254E  C0AD  F1B8         	movff	?___fladd,_matematica$3738
  2640  002552  C0AE  F1B9         	movff	?___fladd+1,_matematica$3738+1
  2641  002556  C0AF  F1BA         	movff	?___fladd+2,_matematica$3738+2
  2642  00255A  C0B0  F1BB         	movff	?___fladd+3,_matematica$3738+3
  2643                           
  2644                           ;parcheggio.c: 372: alfa = asin(((2 * raggio)-(larghezza / 2) - bordo) / (2 * raggio));
  2645  00255E  0E00               	movlw	0
  2646  002560  0100               	movlb	0	; () banked
  2647  002562  6F7B               	movwf	___fldiv@a& (0+255),b
  2648  002564  0E00               	movlw	0
  2649  002566  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2650  002568  0E00               	movlw	0
  2651  00256A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2652  00256C  0E40               	movlw	64
  2653  00256E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2654  002570  C1D8  F077         	movff	_larghezza,___fldiv@b
  2655  002574  C1D9  F078         	movff	_larghezza+1,___fldiv@b+1
  2656  002578  C1DA  F079         	movff	_larghezza+2,___fldiv@b+2
  2657  00257C  C1DB  F07A         	movff	_larghezza+3,___fldiv@b+3
  2658  002580  EC6E  F01B         	call	___fldiv	;wreg free
  2659  002584  C077  F0A9         	movff	?___fldiv,___flneg@f1
  2660  002588  C078  F0AA         	movff	?___fldiv+1,___flneg@f1+1
  2661  00258C  C079  F0AB         	movff	?___fldiv+2,___flneg@f1+2
  2662  002590  C07A  F0AC         	movff	?___fldiv+3,___flneg@f1+3
  2663  002594  ECD8  F02D         	call	___flneg	;wreg free
  2664  002598  C0A9  F0B1         	movff	?___flneg,___fladd@a
  2665  00259C  C0AA  F0B2         	movff	?___flneg+1,___fladd@a+1
  2666  0025A0  C0AB  F0B3         	movff	?___flneg+2,___fladd@a+2
  2667  0025A4  C0AC  F0B4         	movff	?___flneg+3,___fladd@a+3
  2668  0025A8  C1B8  F0AD         	movff	_matematica$3738,___fladd@b
  2669  0025AC  C1B9  F0AE         	movff	_matematica$3738+1,___fladd@b+1
  2670  0025B0  C1BA  F0AF         	movff	_matematica$3738+2,___fladd@b+2
  2671  0025B4  C1BB  F0B0         	movff	_matematica$3738+3,___fladd@b+3
  2672  0025B8  ECE2  F014         	call	___fladd	;wreg free
  2673  0025BC  C0AD  F1BC         	movff	?___fladd,_matematica$3739
  2674  0025C0  C0AE  F1BD         	movff	?___fladd+1,_matematica$3739+1
  2675  0025C4  C0AF  F1BE         	movff	?___fladd+2,_matematica$3739+2
  2676  0025C8  C0B0  F1BF         	movff	?___fladd+3,_matematica$3739+3
  2677                           
  2678                           ;parcheggio.c: 372: alfa = asin(((2 * raggio)-(larghezza / 2) - bordo) / (2 * raggio));
  2679  0025CC  C1BC  F077         	movff	_matematica$3739,___fldiv@b
  2680  0025D0  C1BD  F078         	movff	_matematica$3739+1,___fldiv@b+1
  2681  0025D4  C1BE  F079         	movff	_matematica$3739+2,___fldiv@b+2
  2682  0025D8  C1BF  F07A         	movff	_matematica$3739+3,___fldiv@b+3
  2683  0025DC  0E00               	movlw	0
  2684  0025DE  0100               	movlb	0	; () banked
  2685  0025E0  6F94               	movwf	___flmul@a& (0+255),b
  2686  0025E2  0E00               	movlw	0
  2687  0025E4  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2688  0025E6  0E00               	movlw	0
  2689  0025E8  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2690  0025EA  0E40               	movlw	64
  2691  0025EC  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2692  0025EE  C1DC  F090         	movff	_raggio,___flmul@b
  2693  0025F2  C1DD  F091         	movff	_raggio+1,___flmul@b+1
  2694  0025F6  C1DE  F092         	movff	_raggio+2,___flmul@b+2
  2695  0025FA  C1DF  F093         	movff	_raggio+3,___flmul@b+3
  2696  0025FE  EC36  F017         	call	___flmul	;wreg free
  2697  002602  C090  F07B         	movff	?___flmul,___fldiv@a
  2698  002606  C091  F07C         	movff	?___flmul+1,___fldiv@a+1
  2699  00260A  C092  F07D         	movff	?___flmul+2,___fldiv@a+2
  2700  00260E  C093  F07E         	movff	?___flmul+3,___fldiv@a+3
  2701  002612  EC6E  F01B         	call	___fldiv	;wreg free
  2702  002616  C077  F1C0         	movff	?___fldiv,_matematica$3740
  2703  00261A  C078  F1C1         	movff	?___fldiv+1,_matematica$3740+1
  2704  00261E  C079  F1C2         	movff	?___fldiv+2,_matematica$3740+2
  2705  002622  C07A  F1C3         	movff	?___fldiv+3,_matematica$3740+3
  2706                           
  2707                           ;parcheggio.c: 372: alfa = asin(((2 * raggio)-(larghezza / 2) - bordo) / (2 * raggio));
  2708  002626  C1C0  F198         	movff	_matematica$3740,asin@x
  2709  00262A  C1C1  F199         	movff	_matematica$3740+1,asin@x+1
  2710  00262E  C1C2  F19A         	movff	_matematica$3740+2,asin@x+2
  2711  002632  C1C3  F19B         	movff	_matematica$3740+3,asin@x+3
  2712  002636  ECA9  F020         	call	_asin	;wreg free
  2713  00263A  C198  F11C         	movff	?_asin,_alfa
  2714  00263E  C199  F11D         	movff	?_asin+1,_alfa+1
  2715  002642  C19A  F11E         	movff	?_asin+2,_alfa+2
  2716  002646  C19B  F11F         	movff	?_asin+3,_alfa+3
  2717                           
  2718                           ;parcheggio.c: 373: alfa = alfa / 3.14159265358979323846 * 180;
  2719  00264A  0EDB               	movlw	219
  2720  00264C  0100               	movlb	0	; () banked
  2721  00264E  6F7B               	movwf	___fldiv@a& (0+255),b
  2722  002650  0E0F               	movlw	15
  2723  002652  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2724  002654  0E49               	movlw	73
  2725  002656  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2726  002658  0E40               	movlw	64
  2727  00265A  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2728  00265C  C11C  F077         	movff	_alfa,___fldiv@b
  2729  002660  C11D  F078         	movff	_alfa+1,___fldiv@b+1
  2730  002664  C11E  F079         	movff	_alfa+2,___fldiv@b+2
  2731  002668  C11F  F07A         	movff	_alfa+3,___fldiv@b+3
  2732  00266C  EC6E  F01B         	call	___fldiv	;wreg free
  2733  002670  C077  F090         	movff	?___fldiv,___flmul@b
  2734  002674  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  2735  002678  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  2736  00267C  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  2737  002680  0E00               	movlw	0
  2738  002682  0100               	movlb	0	; () banked
  2739  002684  6F94               	movwf	___flmul@a& (0+255),b
  2740  002686  0E00               	movlw	0
  2741  002688  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2742  00268A  0E34               	movlw	52
  2743  00268C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2744  00268E  0E43               	movlw	67
  2745  002690  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2746  002692  EC36  F017         	call	___flmul	;wreg free
  2747  002696  C090  F11C         	movff	?___flmul,_alfa
  2748  00269A  C091  F11D         	movff	?___flmul+1,_alfa+1
  2749  00269E  C092  F11E         	movff	?___flmul+2,_alfa+2
  2750  0026A2  C093  F11F         	movff	?___flmul+3,_alfa+3
  2751                           
  2752                           ;parcheggio.c: 374: beta = 90 - alfa;
  2753  0026A6  C11C  F0A9         	movff	_alfa,___flneg@f1
  2754  0026AA  C11D  F0AA         	movff	_alfa+1,___flneg@f1+1
  2755  0026AE  C11E  F0AB         	movff	_alfa+2,___flneg@f1+2
  2756  0026B2  C11F  F0AC         	movff	_alfa+3,___flneg@f1+3
  2757  0026B6  ECD8  F02D         	call	___flneg	;wreg free
  2758  0026BA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  2759  0026BE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  2760  0026C2  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  2761  0026C6  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  2762  0026CA  0E00               	movlw	0
  2763  0026CC  0100               	movlb	0	; () banked
  2764  0026CE  6FB1               	movwf	___fladd@a& (0+255),b
  2765  0026D0  0E00               	movlw	0
  2766  0026D2  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  2767  0026D4  0EB4               	movlw	180
  2768  0026D6  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  2769  0026D8  0E42               	movlw	66
  2770  0026DA  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  2771  0026DC  ECE2  F014         	call	___fladd	;wreg free
  2772  0026E0  C0AD  F120         	movff	?___fladd,_beta
  2773  0026E4  C0AE  F121         	movff	?___fladd+1,_beta+1
  2774  0026E8  C0AF  F122         	movff	?___fladd+2,_beta+2
  2775  0026EC  C0B0  F123         	movff	?___fladd+3,_beta+3
  2776                           
  2777                           ;parcheggio.c: 375: n = 2 * raggio * cos(alfa);
  2778  0026F0  C11C  F1B0         	movff	_alfa,cos@f
  2779  0026F4  C11D  F1B1         	movff	_alfa+1,cos@f+1
  2780  0026F8  C11E  F1B2         	movff	_alfa+2,cos@f+2
  2781  0026FC  C11F  F1B3         	movff	_alfa+3,cos@f+3
  2782  002700  EC4C  F02B         	call	_cos	;wreg free
  2783  002704  C1B0  F1C4         	movff	?_cos,_matematica$3741
  2784  002708  C1B1  F1C5         	movff	?_cos+1,_matematica$3741+1
  2785  00270C  C1B2  F1C6         	movff	?_cos+2,_matematica$3741+2
  2786  002710  C1B3  F1C7         	movff	?_cos+3,_matematica$3741+3
  2787                           
  2788                           ;parcheggio.c: 375: n = 2 * raggio * cos(alfa);
  2789  002714  C1DC  F094         	movff	_raggio,___flmul@a
  2790  002718  C1DD  F095         	movff	_raggio+1,___flmul@a+1
  2791  00271C  C1DE  F096         	movff	_raggio+2,___flmul@a+2
  2792  002720  C1DF  F097         	movff	_raggio+3,___flmul@a+3
  2793  002724  C1C4  F090         	movff	_matematica$3741,___flmul@b
  2794  002728  C1C5  F091         	movff	_matematica$3741+1,___flmul@b+1
  2795  00272C  C1C6  F092         	movff	_matematica$3741+2,___flmul@b+2
  2796  002730  C1C7  F093         	movff	_matematica$3741+3,___flmul@b+3
  2797  002734  EC36  F017         	call	___flmul	;wreg free
  2798  002738  C090  F1C8         	movff	?___flmul,_matematica$3742
  2799  00273C  C091  F1C9         	movff	?___flmul+1,_matematica$3742+1
  2800  002740  C092  F1CA         	movff	?___flmul+2,_matematica$3742+2
  2801  002744  C093  F1CB         	movff	?___flmul+3,_matematica$3742+3
  2802                           
  2803                           ;parcheggio.c: 375: n = 2 * raggio * cos(alfa);
  2804  002748  C1C8  F090         	movff	_matematica$3742,___flmul@b
  2805  00274C  C1C9  F091         	movff	_matematica$3742+1,___flmul@b+1
  2806  002750  C1CA  F092         	movff	_matematica$3742+2,___flmul@b+2
  2807  002754  C1CB  F093         	movff	_matematica$3742+3,___flmul@b+3
  2808  002758  0E00               	movlw	0
  2809  00275A  0100               	movlb	0	; () banked
  2810  00275C  6F94               	movwf	___flmul@a& (0+255),b
  2811  00275E  0E00               	movlw	0
  2812  002760  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2813  002762  0E00               	movlw	0
  2814  002764  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2815  002766  0E40               	movlw	64
  2816  002768  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2817  00276A  EC36  F017         	call	___flmul	;wreg free
  2818  00276E  C090  F130         	movff	?___flmul,_n
  2819  002772  C091  F131         	movff	?___flmul+1,_n+1
  2820  002776  C092  F132         	movff	?___flmul+2,_n+2
  2821  00277A  C093  F133         	movff	?___flmul+3,_n+3
  2822                           
  2823                           ;parcheggio.c: 376: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  2824  00277E  C120  F094         	movff	_beta,___flmul@a
  2825  002782  C121  F095         	movff	_beta+1,___flmul@a+1
  2826  002786  C122  F096         	movff	_beta+2,___flmul@a+2
  2827  00278A  C123  F097         	movff	_beta+3,___flmul@a+3
  2828  00278E  C1DC  F090         	movff	_raggio,___flmul@b
  2829  002792  C1DD  F091         	movff	_raggio+1,___flmul@b+1
  2830  002796  C1DE  F092         	movff	_raggio+2,___flmul@b+2
  2831  00279A  C1DF  F093         	movff	_raggio+3,___flmul@b+3
  2832  00279E  EC36  F017         	call	___flmul	;wreg free
  2833  0027A2  C090  F1CC         	movff	?___flmul,_matematica$3743
  2834  0027A6  C091  F1CD         	movff	?___flmul+1,_matematica$3743+1
  2835  0027AA  C092  F1CE         	movff	?___flmul+2,_matematica$3743+2
  2836  0027AE  C093  F1CF         	movff	?___flmul+3,_matematica$3743+3
  2837                           
  2838                           ;parcheggio.c: 376: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  2839  0027B2  0EDB               	movlw	219
  2840  0027B4  0100               	movlb	0	; () banked
  2841  0027B6  6F94               	movwf	___flmul@a& (0+255),b
  2842  0027B8  0E0F               	movlw	15
  2843  0027BA  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2844  0027BC  0EC9               	movlw	201
  2845  0027BE  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2846  0027C0  0E40               	movlw	64
  2847  0027C2  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2848  0027C4  C1CC  F090         	movff	_matematica$3743,___flmul@b
  2849  0027C8  C1CD  F091         	movff	_matematica$3743+1,___flmul@b+1
  2850  0027CC  C1CE  F092         	movff	_matematica$3743+2,___flmul@b+2
  2851  0027D0  C1CF  F093         	movff	_matematica$3743+3,___flmul@b+3
  2852  0027D4  EC36  F017         	call	___flmul	;wreg free
  2853  0027D8  C090  F077         	movff	?___flmul,___fldiv@b
  2854  0027DC  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  2855  0027E0  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  2856  0027E4  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  2857  0027E8  0E00               	movlw	0
  2858  0027EA  0100               	movlb	0	; () banked
  2859  0027EC  6F7B               	movwf	___fldiv@a& (0+255),b
  2860  0027EE  0E00               	movlw	0
  2861  0027F0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2862  0027F2  0EB4               	movlw	180
  2863  0027F4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2864  0027F6  0E43               	movlw	67
  2865  0027F8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2866  0027FA  EC6E  F01B         	call	___fldiv	;wreg free
  2867  0027FE  C077  F138         	movff	?___fldiv,_prima_sterzata
  2868  002802  C078  F139         	movff	?___fldiv+1,_prima_sterzata+1
  2869  002806  C079  F13A         	movff	?___fldiv+2,_prima_sterzata+2
  2870  00280A  C07A  F13B         	movff	?___fldiv+3,_prima_sterzata+3
  2871                           
  2872                           ;parcheggio.c: 377: kkk = raggio + (2 * larghezza / 3);
  2873  00280E  0E00               	movlw	0
  2874  002810  0100               	movlb	0	; () banked
  2875  002812  6F7B               	movwf	___fldiv@a& (0+255),b
  2876  002814  0E00               	movlw	0
  2877  002816  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2878  002818  0E40               	movlw	64
  2879  00281A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2880  00281C  0E40               	movlw	64
  2881  00281E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2882  002820  0E00               	movlw	0
  2883  002822  0100               	movlb	0	; () banked
  2884  002824  6F94               	movwf	___flmul@a& (0+255),b
  2885  002826  0E00               	movlw	0
  2886  002828  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2887  00282A  0E00               	movlw	0
  2888  00282C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2889  00282E  0E40               	movlw	64
  2890  002830  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2891  002832  C1D8  F090         	movff	_larghezza,___flmul@b
  2892  002836  C1D9  F091         	movff	_larghezza+1,___flmul@b+1
  2893  00283A  C1DA  F092         	movff	_larghezza+2,___flmul@b+2
  2894  00283E  C1DB  F093         	movff	_larghezza+3,___flmul@b+3
  2895  002842  EC36  F017         	call	___flmul	;wreg free
  2896  002846  C090  F077         	movff	?___flmul,___fldiv@b
  2897  00284A  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  2898  00284E  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  2899  002852  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  2900  002856  EC6E  F01B         	call	___fldiv	;wreg free
  2901  00285A  C077  F0AD         	movff	?___fldiv,___fladd@b
  2902  00285E  C078  F0AE         	movff	?___fldiv+1,___fladd@b+1
  2903  002862  C079  F0AF         	movff	?___fldiv+2,___fladd@b+2
  2904  002866  C07A  F0B0         	movff	?___fldiv+3,___fladd@b+3
  2905  00286A  C1DC  F0B1         	movff	_raggio,___fladd@a
  2906  00286E  C1DD  F0B2         	movff	_raggio+1,___fladd@a+1
  2907  002872  C1DE  F0B3         	movff	_raggio+2,___fladd@a+2
  2908  002876  C1DF  F0B4         	movff	_raggio+3,___fladd@a+3
  2909  00287A  ECE2  F014         	call	___fladd	;wreg free
  2910  00287E  C0AD  F12C         	movff	?___fladd,_kkk
  2911  002882  C0AE  F12D         	movff	?___fladd+1,_kkk+1
  2912  002886  C0AF  F12E         	movff	?___fladd+2,_kkk+2
  2913  00288A  C0B0  F12F         	movff	?___fladd+3,_kkk+3
  2914                           
  2915                           ;parcheggio.c: 378: jjj = raggio - (2 * larghezza / 3);
  2916  00288E  0E00               	movlw	0
  2917  002890  0100               	movlb	0	; () banked
  2918  002892  6F7B               	movwf	___fldiv@a& (0+255),b
  2919  002894  0E00               	movlw	0
  2920  002896  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2921  002898  0E40               	movlw	64
  2922  00289A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2923  00289C  0E40               	movlw	64
  2924  00289E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2925  0028A0  0E00               	movlw	0
  2926  0028A2  0100               	movlb	0	; () banked
  2927  0028A4  6F94               	movwf	___flmul@a& (0+255),b
  2928  0028A6  0E00               	movlw	0
  2929  0028A8  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2930  0028AA  0E00               	movlw	0
  2931  0028AC  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2932  0028AE  0E40               	movlw	64
  2933  0028B0  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2934  0028B2  C1D8  F090         	movff	_larghezza,___flmul@b
  2935  0028B6  C1D9  F091         	movff	_larghezza+1,___flmul@b+1
  2936  0028BA  C1DA  F092         	movff	_larghezza+2,___flmul@b+2
  2937  0028BE  C1DB  F093         	movff	_larghezza+3,___flmul@b+3
  2938  0028C2  EC36  F017         	call	___flmul	;wreg free
  2939  0028C6  C090  F077         	movff	?___flmul,___fldiv@b
  2940  0028CA  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  2941  0028CE  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  2942  0028D2  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  2943  0028D6  EC6E  F01B         	call	___fldiv	;wreg free
  2944  0028DA  C077  F0A9         	movff	?___fldiv,___flneg@f1
  2945  0028DE  C078  F0AA         	movff	?___fldiv+1,___flneg@f1+1
  2946  0028E2  C079  F0AB         	movff	?___fldiv+2,___flneg@f1+2
  2947  0028E6  C07A  F0AC         	movff	?___fldiv+3,___flneg@f1+3
  2948  0028EA  ECD8  F02D         	call	___flneg	;wreg free
  2949  0028EE  C0A9  F0AD         	movff	?___flneg,___fladd@b
  2950  0028F2  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  2951  0028F6  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  2952  0028FA  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  2953  0028FE  C1DC  F0B1         	movff	_raggio,___fladd@a
  2954  002902  C1DD  F0B2         	movff	_raggio+1,___fladd@a+1
  2955  002906  C1DE  F0B3         	movff	_raggio+2,___fladd@a+2
  2956  00290A  C1DF  F0B4         	movff	_raggio+3,___fladd@a+3
  2957  00290E  ECE2  F014         	call	___fladd	;wreg free
  2958  002912  C0AD  F128         	movff	?___fladd,_jjj
  2959  002916  C0AE  F129         	movff	?___fladd+1,_jjj+1
  2960  00291A  C0AF  F12A         	movff	?___fladd+2,_jjj+2
  2961  00291E  C0B0  F12B         	movff	?___fladd+3,_jjj+3
  2962                           
  2963                           ;parcheggio.c: 379: Pminimo = kkk * cos(asin((jjj / kkk)));
  2964  002922  C12C  F07B         	movff	_kkk,___fldiv@a
  2965  002926  C12D  F07C         	movff	_kkk+1,___fldiv@a+1
  2966  00292A  C12E  F07D         	movff	_kkk+2,___fldiv@a+2
  2967  00292E  C12F  F07E         	movff	_kkk+3,___fldiv@a+3
  2968  002932  C128  F077         	movff	_jjj,___fldiv@b
  2969  002936  C129  F078         	movff	_jjj+1,___fldiv@b+1
  2970  00293A  C12A  F079         	movff	_jjj+2,___fldiv@b+2
  2971  00293E  C12B  F07A         	movff	_jjj+3,___fldiv@b+3
  2972  002942  EC6E  F01B         	call	___fldiv	;wreg free
  2973  002946  C077  F1D0         	movff	?___fldiv,_matematica$3744
  2974  00294A  C078  F1D1         	movff	?___fldiv+1,_matematica$3744+1
  2975  00294E  C079  F1D2         	movff	?___fldiv+2,_matematica$3744+2
  2976  002952  C07A  F1D3         	movff	?___fldiv+3,_matematica$3744+3
  2977                           
  2978                           ;parcheggio.c: 379: Pminimo = kkk * cos(asin((jjj / kkk)));
  2979  002956  C1D0  F198         	movff	_matematica$3744,asin@x
  2980  00295A  C1D1  F199         	movff	_matematica$3744+1,asin@x+1
  2981  00295E  C1D2  F19A         	movff	_matematica$3744+2,asin@x+2
  2982  002962  C1D3  F19B         	movff	_matematica$3744+3,asin@x+3
  2983  002966  ECA9  F020         	call	_asin	;wreg free
  2984  00296A  C198  F1B0         	movff	?_asin,cos@f
  2985  00296E  C199  F1B1         	movff	?_asin+1,cos@f+1
  2986  002972  C19A  F1B2         	movff	?_asin+2,cos@f+2
  2987  002976  C19B  F1B3         	movff	?_asin+3,cos@f+3
  2988  00297A  EC4C  F02B         	call	_cos	;wreg free
  2989  00297E  C1B0  F1D4         	movff	?_cos,_matematica$3745
  2990  002982  C1B1  F1D5         	movff	?_cos+1,_matematica$3745+1
  2991  002986  C1B2  F1D6         	movff	?_cos+2,_matematica$3745+2
  2992  00298A  C1B3  F1D7         	movff	?_cos+3,_matematica$3745+3
  2993                           
  2994                           ;parcheggio.c: 379: Pminimo = kkk * cos(asin((jjj / kkk)));
  2995  00298E  C1D4  F090         	movff	_matematica$3745,___flmul@b
  2996  002992  C1D5  F091         	movff	_matematica$3745+1,___flmul@b+1
  2997  002996  C1D6  F092         	movff	_matematica$3745+2,___flmul@b+2
  2998  00299A  C1D7  F093         	movff	_matematica$3745+3,___flmul@b+3
  2999  00299E  C12C  F094         	movff	_kkk,___flmul@a
  3000  0029A2  C12D  F095         	movff	_kkk+1,___flmul@a+1
  3001  0029A6  C12E  F096         	movff	_kkk+2,___flmul@a+2
  3002  0029AA  C12F  F097         	movff	_kkk+3,___flmul@a+3
  3003  0029AE  EC36  F017         	call	___flmul	;wreg free
  3004  0029B2  C090  F118         	movff	?___flmul,_Pminimo
  3005  0029B6  C091  F119         	movff	?___flmul+1,_Pminimo+1
  3006  0029BA  C092  F11A         	movff	?___flmul+2,_Pminimo+2
  3007  0029BE  C093  F11B         	movff	?___flmul+3,_Pminimo+3
  3008  0029C2  0012               	return		;funcret
  3009  0029C4                     __end_of_matematica:
  3010                           	opt stack 0
  3011                           tblptru	equ	0xFF8
  3012                           tblptrh	equ	0xFF7
  3013                           tblptrl	equ	0xFF6
  3014                           tablat	equ	0xFF5
  3015                           postinc0	equ	0xFEE
  3016                           wreg	equ	0xFE8
  3017                           postdec1	equ	0xFE5
  3018                           fsr1l	equ	0xFE1
  3019                           postinc2	equ	0xFDE
  3020                           postdec2	equ	0xFDD
  3021                           status	equ	0xFD8
  3022                           
  3023 ;; *************** function _cos *****************
  3024 ;; Defined at:
  3025 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\cos.c"
  3026 ;; Parameters:    Size  Location     Type
  3027 ;;  f               4   45[BANK1 ] int 
  3028 ;; Auto vars:     Size  Location     Type
  3029 ;;		None
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  4   45[BANK1 ] int 
  3032 ;; Registers used:
  3033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3039 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3040 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3042 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  3043 ;;Total ram usage:        8 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    7
  3046 ;; This function calls:
  3047 ;;		___fladd
  3048 ;;		___flge
  3049 ;;		_sin
  3050 ;; This function is called by:
  3051 ;;		_matematica
  3052 ;; This function uses a non-reentrant model
  3053 ;;
  3054                           
  3055                           	psect	text6
  3056  005698                     __ptext6:
  3057                           	opt stack 0
  3058  005698                     _cos:
  3059                           	opt stack 21
  3060                           
  3061                           ;incstack = 0
  3062  005698  0EDB               	movlw	219
  3063  00569A  0100               	movlb	0	; () banked
  3064  00569C  6FB1               	movwf	___flge@ff1& (0+255),b
  3065  00569E  0E0F               	movlw	15
  3066  0056A0  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  3067  0056A2  0E49               	movlw	73
  3068  0056A4  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  3069  0056A6  0E40               	movlw	64
  3070  0056A8  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  3071  0056AA  C1B0  F0B5         	movff	cos@f,___flge@ff2
  3072  0056AE  C1B1  F0B6         	movff	cos@f+1,___flge@ff2+1
  3073  0056B2  C1B2  F0B7         	movff	cos@f+2,___flge@ff2+2
  3074  0056B6  C1B3  F0B8         	movff	cos@f+3,___flge@ff2+3
  3075  0056BA  EC48  F028         	call	___flge	;wreg free
  3076  0056BE  0100               	movlb	0	; () banked
  3077  0056C0  B0D8               	btfsc	status,0,c
  3078  0056C2  D02E               	goto	l6829
  3079                           
  3080                           ; BSR set to: 0
  3081  0056C4  C1B0  F0AD         	movff	cos@f,___fladd@b
  3082  0056C8  C1B1  F0AE         	movff	cos@f+1,___fladd@b+1
  3083  0056CC  C1B2  F0AF         	movff	cos@f+2,___fladd@b+2
  3084  0056D0  C1B3  F0B0         	movff	cos@f+3,___fladd@b+3
  3085  0056D4  0EE4               	movlw	228
  3086  0056D6  0100               	movlb	0	; () banked
  3087  0056D8  6FB1               	movwf	___fladd@a& (0+255),b
  3088  0056DA  0ECB               	movlw	203
  3089  0056DC  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3090  0056DE  0E96               	movlw	150
  3091  0056E0  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3092  0056E2  0EC0               	movlw	192
  3093  0056E4  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3094  0056E6  ECE2  F014         	call	___fladd	;wreg free
  3095  0056EA  C0AD  F1B4         	movff	?___fladd,_cos$3749
  3096  0056EE  C0AE  F1B5         	movff	?___fladd+1,_cos$3749+1
  3097  0056F2  C0AF  F1B6         	movff	?___fladd+2,_cos$3749+2
  3098  0056F6  C0B0  F1B7         	movff	?___fladd+3,_cos$3749+3
  3099  0056FA  C1B4  F197         	movff	_cos$3749,sin@f
  3100  0056FE  C1B5  F198         	movff	_cos$3749+1,sin@f+1
  3101  005702  C1B6  F199         	movff	_cos$3749+2,sin@f+2
  3102  005706  C1B7  F19A         	movff	_cos$3749+3,sin@f+3
  3103  00570A  EC1D  F01F         	call	_sin	;wreg free
  3104  00570E  C197  F1B0         	movff	?_sin,?_cos
  3105  005712  C198  F1B1         	movff	?_sin+1,?_cos+1
  3106  005716  C199  F1B2         	movff	?_sin+2,?_cos+2
  3107  00571A  C19A  F1B3         	movff	?_sin+3,?_cos+3
  3108  00571E  0012               	return	
  3109  005720                     l6829:
  3110  005720  C1B0  F0AD         	movff	cos@f,___fladd@b
  3111  005724  C1B1  F0AE         	movff	cos@f+1,___fladd@b+1
  3112  005728  C1B2  F0AF         	movff	cos@f+2,___fladd@b+2
  3113  00572C  C1B3  F0B0         	movff	cos@f+3,___fladd@b+3
  3114  005730  0EDB               	movlw	219
  3115  005732  0100               	movlb	0	; () banked
  3116  005734  6FB1               	movwf	___fladd@a& (0+255),b
  3117  005736  0E0F               	movlw	15
  3118  005738  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3119  00573A  0EC9               	movlw	201
  3120  00573C  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3121  00573E  0E3F               	movlw	63
  3122  005740  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3123  005742  ECE2  F014         	call	___fladd	;wreg free
  3124  005746  C0AD  F1B4         	movff	?___fladd,_cos$3749
  3125  00574A  C0AE  F1B5         	movff	?___fladd+1,_cos$3749+1
  3126  00574E  C0AF  F1B6         	movff	?___fladd+2,_cos$3749+2
  3127  005752  C0B0  F1B7         	movff	?___fladd+3,_cos$3749+3
  3128  005756  C1B4  F197         	movff	_cos$3749,sin@f
  3129  00575A  C1B5  F198         	movff	_cos$3749+1,sin@f+1
  3130  00575E  C1B6  F199         	movff	_cos$3749+2,sin@f+2
  3131  005762  C1B7  F19A         	movff	_cos$3749+3,sin@f+3
  3132  005766  EC1D  F01F         	call	_sin	;wreg free
  3133  00576A  C197  F1B0         	movff	?_sin,?_cos
  3134  00576E  C198  F1B1         	movff	?_sin+1,?_cos+1
  3135  005772  C199  F1B2         	movff	?_sin+2,?_cos+2
  3136  005776  C19A  F1B3         	movff	?_sin+3,?_cos+3
  3137  00577A  0012               	return	
  3138  00577C                     __end_of_cos:
  3139                           	opt stack 0
  3140                           tblptru	equ	0xFF8
  3141                           tblptrh	equ	0xFF7
  3142                           tblptrl	equ	0xFF6
  3143                           tablat	equ	0xFF5
  3144                           postinc0	equ	0xFEE
  3145                           wreg	equ	0xFE8
  3146                           postdec1	equ	0xFE5
  3147                           fsr1l	equ	0xFE1
  3148                           postinc2	equ	0xFDE
  3149                           postdec2	equ	0xFDD
  3150                           status	equ	0xFD8
  3151                           
  3152 ;; *************** function _sin *****************
  3153 ;; Defined at:
  3154 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sin.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  f               4   20[BANK1 ] int 
  3157 ;; Auto vars:     Size  Location     Type
  3158 ;;  x2              4   32[BANK1 ] int 
  3159 ;;  y               4   24[BANK1 ] int 
  3160 ;;  sgn             1   36[BANK1 ] unsigned char 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  4   20[BANK1 ] unsigned char 
  3163 ;; Registers used:
  3164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3170 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  3171 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  3172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3173 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  3174 ;;Total ram usage:       17 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:    6
  3177 ;; This function calls:
  3178 ;;		___fladd
  3179 ;;		___fldiv
  3180 ;;		___flge
  3181 ;;		___flmul
  3182 ;;		___flneg
  3183 ;;		___flsub
  3184 ;;		_eval_poly
  3185 ;;		_floor
  3186 ;; This function is called by:
  3187 ;;		_cos
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text7
  3192  003E3A                     __ptext7:
  3193                           	opt stack 0
  3194  003E3A                     _sin:
  3195                           	opt stack 21
  3196                           
  3197                           ;incstack = 0
  3198  003E3A  0E00               	movlw	0
  3199  003E3C  0101               	movlb	1	; () banked
  3200  003E3E  6FA7               	movwf	sin@sgn& (0+255),b
  3201                           
  3202                           ; BSR set to: 1
  3203  003E40  0101               	movlb	1	; () banked
  3204  003E42  AF9A               	btfss	(sin@f+3)& (0+255),7,b
  3205  003E44  D015               	goto	l6753
  3206                           
  3207                           ; BSR set to: 1
  3208  003E46  C197  F0A9         	movff	sin@f,___flneg@f1
  3209  003E4A  C198  F0AA         	movff	sin@f+1,___flneg@f1+1
  3210  003E4E  C199  F0AB         	movff	sin@f+2,___flneg@f1+2
  3211  003E52  C19A  F0AC         	movff	sin@f+3,___flneg@f1+3
  3212  003E56  ECD8  F02D         	call	___flneg	;wreg free
  3213  003E5A  C0A9  F197         	movff	?___flneg,sin@f
  3214  003E5E  C0AA  F198         	movff	?___flneg+1,sin@f+1
  3215  003E62  C0AB  F199         	movff	?___flneg+2,sin@f+2
  3216  003E66  C0AC  F19A         	movff	?___flneg+3,sin@f+3
  3217  003E6A  0E01               	movlw	1
  3218  003E6C  0101               	movlb	1	; () banked
  3219  003E6E  6FA7               	movwf	sin@sgn& (0+255),b
  3220  003E70                     l6753:
  3221                           
  3222                           ; BSR set to: 1
  3223  003E70  C197  F090         	movff	sin@f,___flmul@b
  3224  003E74  C198  F091         	movff	sin@f+1,___flmul@b+1
  3225  003E78  C199  F092         	movff	sin@f+2,___flmul@b+2
  3226  003E7C  C19A  F093         	movff	sin@f+3,___flmul@b+3
  3227  003E80  0E83               	movlw	131
  3228  003E82  0100               	movlb	0	; () banked
  3229  003E84  6F94               	movwf	___flmul@a& (0+255),b
  3230  003E86  0EF9               	movlw	249
  3231  003E88  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3232  003E8A  0E22               	movlw	34
  3233  003E8C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3234  003E8E  0E3E               	movlw	62
  3235  003E90  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3236  003E92  EC36  F017         	call	___flmul	;wreg free
  3237  003E96  C090  F197         	movff	?___flmul,sin@f
  3238  003E9A  C091  F198         	movff	?___flmul+1,sin@f+1
  3239  003E9E  C092  F199         	movff	?___flmul+2,sin@f+2
  3240  003EA2  C093  F19A         	movff	?___flmul+3,sin@f+3
  3241  003EA6  C197  F18F         	movff	sin@f,___flsub@b
  3242  003EAA  C198  F190         	movff	sin@f+1,___flsub@b+1
  3243  003EAE  C199  F191         	movff	sin@f+2,___flsub@b+2
  3244  003EB2  C19A  F192         	movff	sin@f+3,___flsub@b+3
  3245  003EB6  C197  F0D3         	movff	sin@f,floor@x
  3246  003EBA  C198  F0D4         	movff	sin@f+1,floor@x+1
  3247  003EBE  C199  F0D5         	movff	sin@f+2,floor@x+2
  3248  003EC2  C19A  F0D6         	movff	sin@f+3,floor@x+3
  3249  003EC6  ECA8  F029         	call	_floor	;wreg free
  3250  003ECA  C0D3  F193         	movff	?_floor,___flsub@a
  3251  003ECE  C0D4  F194         	movff	?_floor+1,___flsub@a+1
  3252  003ED2  C0D5  F195         	movff	?_floor+2,___flsub@a+2
  3253  003ED6  C0D6  F196         	movff	?_floor+3,___flsub@a+3
  3254  003EDA  EC78  F02D         	call	___flsub	;wreg free
  3255  003EDE  C18F  F197         	movff	?___flsub,sin@f
  3256  003EE2  C190  F198         	movff	?___flsub+1,sin@f+1
  3257  003EE6  C191  F199         	movff	?___flsub+2,sin@f+2
  3258  003EEA  C192  F19A         	movff	?___flsub+3,sin@f+3
  3259  003EEE  C197  F090         	movff	sin@f,___flmul@b
  3260  003EF2  C198  F091         	movff	sin@f+1,___flmul@b+1
  3261  003EF6  C199  F092         	movff	sin@f+2,___flmul@b+2
  3262  003EFA  C19A  F093         	movff	sin@f+3,___flmul@b+3
  3263  003EFE  0E00               	movlw	0
  3264  003F00  0100               	movlb	0	; () banked
  3265  003F02  6F94               	movwf	___flmul@a& (0+255),b
  3266  003F04  0E00               	movlw	0
  3267  003F06  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3268  003F08  0E80               	movlw	128
  3269  003F0A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3270  003F0C  0E40               	movlw	64
  3271  003F0E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3272  003F10  EC36  F017         	call	___flmul	;wreg free
  3273  003F14  C090  F197         	movff	?___flmul,sin@f
  3274  003F18  C091  F198         	movff	?___flmul+1,sin@f+1
  3275  003F1C  C092  F199         	movff	?___flmul+2,sin@f+2
  3276  003F20  C093  F19A         	movff	?___flmul+3,sin@f+3
  3277  003F24  0E00               	movlw	0
  3278  003F26  0100               	movlb	0	; () banked
  3279  003F28  6FB1               	movwf	___flge@ff1& (0+255),b
  3280  003F2A  0E00               	movlw	0
  3281  003F2C  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  3282  003F2E  0E00               	movlw	0
  3283  003F30  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  3284  003F32  0E40               	movlw	64
  3285  003F34  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  3286  003F36  C197  F0B5         	movff	sin@f,___flge@ff2
  3287  003F3A  C198  F0B6         	movff	sin@f+1,___flge@ff2+1
  3288  003F3E  C199  F0B7         	movff	sin@f+2,___flge@ff2+2
  3289  003F42  C19A  F0B8         	movff	sin@f+3,___flge@ff2+3
  3290  003F46  EC48  F028         	call	___flge	;wreg free
  3291  003F4A  0100               	movlb	0	; () banked
  3292  003F4C  B0D8               	btfsc	status,0,c
  3293  003F4E  D025               	goto	l6765
  3294                           
  3295                           ; BSR set to: 0
  3296  003F50  C197  F18F         	movff	sin@f,___flsub@b
  3297  003F54  C198  F190         	movff	sin@f+1,___flsub@b+1
  3298  003F58  C199  F191         	movff	sin@f+2,___flsub@b+2
  3299  003F5C  C19A  F192         	movff	sin@f+3,___flsub@b+3
  3300  003F60  0E00               	movlw	0
  3301  003F62  0101               	movlb	1	; () banked
  3302  003F64  6F93               	movwf	___flsub@a& (0+255),b
  3303  003F66  0E00               	movlw	0
  3304  003F68  6F94               	movwf	(___flsub@a+1)& (0+255),b
  3305  003F6A  0E00               	movlw	0
  3306  003F6C  6F95               	movwf	(___flsub@a+2)& (0+255),b
  3307  003F6E  0E40               	movlw	64
  3308  003F70  6F96               	movwf	(___flsub@a+3)& (0+255),b
  3309  003F72  EC78  F02D         	call	___flsub	;wreg free
  3310  003F76  C18F  F197         	movff	?___flsub,sin@f
  3311  003F7A  C190  F198         	movff	?___flsub+1,sin@f+1
  3312  003F7E  C191  F199         	movff	?___flsub+2,sin@f+2
  3313  003F82  C192  F19A         	movff	?___flsub+3,sin@f+3
  3314  003F86  0101               	movlb	1	; () banked
  3315  003F88  51A7               	movf	sin@sgn& (0+255),w,b
  3316  003F8A  0101               	movlb	1	; () banked
  3317  003F8C  A4D8               	btfss	status,2,c
  3318  003F8E  D002               	goto	u8580
  3319  003F90  0E01               	movlw	1
  3320  003F92  D001               	goto	u8590
  3321  003F94                     u8580:
  3322  003F94  0E00               	movlw	0
  3323  003F96                     u8590:
  3324  003F96  0101               	movlb	1	; () banked
  3325  003F98  6FA7               	movwf	sin@sgn& (0+255),b
  3326  003F9A                     l6765:
  3327  003F9A  0E00               	movlw	0
  3328  003F9C  0100               	movlb	0	; () banked
  3329  003F9E  6FB1               	movwf	___flge@ff1& (0+255),b
  3330  003FA0  0E00               	movlw	0
  3331  003FA2  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  3332  003FA4  0E80               	movlw	128
  3333  003FA6  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  3334  003FA8  0E3F               	movlw	63
  3335  003FAA  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  3336  003FAC  C197  F0B5         	movff	sin@f,___flge@ff2
  3337  003FB0  C198  F0B6         	movff	sin@f+1,___flge@ff2+1
  3338  003FB4  C199  F0B7         	movff	sin@f+2,___flge@ff2+2
  3339  003FB8  C19A  F0B8         	movff	sin@f+3,___flge@ff2+3
  3340  003FBC  EC48  F028         	call	___flge	;wreg free
  3341  003FC0  0100               	movlb	0	; () banked
  3342  003FC2  B0D8               	btfsc	status,0,c
  3343  003FC4  D025               	goto	l6769
  3344                           
  3345                           ; BSR set to: 0
  3346  003FC6  C197  F0A9         	movff	sin@f,___flneg@f1
  3347  003FCA  C198  F0AA         	movff	sin@f+1,___flneg@f1+1
  3348  003FCE  C199  F0AB         	movff	sin@f+2,___flneg@f1+2
  3349  003FD2  C19A  F0AC         	movff	sin@f+3,___flneg@f1+3
  3350  003FD6  ECD8  F02D         	call	___flneg	;wreg free
  3351  003FDA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  3352  003FDE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  3353  003FE2  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  3354  003FE6  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  3355  003FEA  0E00               	movlw	0
  3356  003FEC  0100               	movlb	0	; () banked
  3357  003FEE  6FB1               	movwf	___fladd@a& (0+255),b
  3358  003FF0  0E00               	movlw	0
  3359  003FF2  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3360  003FF4  0E00               	movlw	0
  3361  003FF6  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3362  003FF8  0E40               	movlw	64
  3363  003FFA  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3364  003FFC  ECE2  F014         	call	___fladd	;wreg free
  3365  004000  C0AD  F197         	movff	?___fladd,sin@f
  3366  004004  C0AE  F198         	movff	?___fladd+1,sin@f+1
  3367  004008  C0AF  F199         	movff	?___fladd+2,sin@f+2
  3368  00400C  C0B0  F19A         	movff	?___fladd+3,sin@f+3
  3369  004010                     l6769:
  3370  004010  C197  F090         	movff	sin@f,___flmul@b
  3371  004014  C198  F091         	movff	sin@f+1,___flmul@b+1
  3372  004018  C199  F092         	movff	sin@f+2,___flmul@b+2
  3373  00401C  C19A  F093         	movff	sin@f+3,___flmul@b+3
  3374  004020  C197  F094         	movff	sin@f,___flmul@a
  3375  004024  C198  F095         	movff	sin@f+1,___flmul@a+1
  3376  004028  C199  F096         	movff	sin@f+2,___flmul@a+2
  3377  00402C  C19A  F097         	movff	sin@f+3,___flmul@a+3
  3378  004030  EC36  F017         	call	___flmul	;wreg free
  3379  004034  C090  F1A3         	movff	?___flmul,sin@x2
  3380  004038  C091  F1A4         	movff	?___flmul+1,sin@x2+1
  3381  00403C  C092  F1A5         	movff	?___flmul+2,sin@x2+2
  3382  004040  C093  F1A6         	movff	?___flmul+3,sin@x2+3
  3383  004044  C1A3  F0C1         	movff	sin@x2,eval_poly@x
  3384  004048  C1A4  F0C2         	movff	sin@x2+1,eval_poly@x+1
  3385  00404C  C1A5  F0C3         	movff	sin@x2+2,eval_poly@x+2
  3386  004050  C1A6  F0C4         	movff	sin@x2+3,eval_poly@x+3
  3387  004054  0E41               	movlw	low sin@coeff_b
  3388  004056  0100               	movlb	0	; () banked
  3389  004058  6FC5               	movwf	eval_poly@d& (0+255),b
  3390  00405A  0E0D               	movlw	high sin@coeff_b
  3391  00405C  0100               	movlb	0	; () banked
  3392  00405E  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  3393  004060  0E00               	movlw	0
  3394  004062  0100               	movlb	0	; () banked
  3395  004064  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  3396  004066  0E03               	movlw	3
  3397  004068  6FC7               	movwf	eval_poly@n& (0+255),b
  3398  00406A  EC3A  F02A         	call	_eval_poly	;wreg free
  3399  00406E  C0C1  F19B         	movff	?_eval_poly,sin@y
  3400  004072  C0C2  F19C         	movff	?_eval_poly+1,sin@y+1
  3401  004076  C0C3  F19D         	movff	?_eval_poly+2,sin@y+2
  3402  00407A  C0C4  F19E         	movff	?_eval_poly+3,sin@y+3
  3403  00407E  C19B  F07B         	movff	sin@y,___fldiv@a
  3404  004082  C19C  F07C         	movff	sin@y+1,___fldiv@a+1
  3405  004086  C19D  F07D         	movff	sin@y+2,___fldiv@a+2
  3406  00408A  C19E  F07E         	movff	sin@y+3,___fldiv@a+3
  3407  00408E  0E00               	movlw	0
  3408  004090  0100               	movlb	0	; () banked
  3409  004092  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  3410  004094  0E04               	movlw	4
  3411  004096  6FC7               	movwf	eval_poly@n& (0+255),b
  3412  004098  0E2D               	movlw	low sin@coeff_a
  3413  00409A  0100               	movlb	0	; () banked
  3414  00409C  6FC5               	movwf	eval_poly@d& (0+255),b
  3415  00409E  0E0D               	movlw	high sin@coeff_a
  3416  0040A0  0100               	movlb	0	; () banked
  3417  0040A2  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  3418  0040A4  C1A3  F0C1         	movff	sin@x2,eval_poly@x
  3419  0040A8  C1A4  F0C2         	movff	sin@x2+1,eval_poly@x+1
  3420  0040AC  C1A5  F0C3         	movff	sin@x2+2,eval_poly@x+2
  3421  0040B0  C1A6  F0C4         	movff	sin@x2+3,eval_poly@x+3
  3422  0040B4  EC3A  F02A         	call	_eval_poly	;wreg free
  3423  0040B8  C0C1  F077         	movff	?_eval_poly,___fldiv@b
  3424  0040BC  C0C2  F078         	movff	?_eval_poly+1,___fldiv@b+1
  3425  0040C0  C0C3  F079         	movff	?_eval_poly+2,___fldiv@b+2
  3426  0040C4  C0C4  F07A         	movff	?_eval_poly+3,___fldiv@b+3
  3427  0040C8  EC6E  F01B         	call	___fldiv	;wreg free
  3428  0040CC  C077  F19F         	movff	?___fldiv,_sin$3750
  3429  0040D0  C078  F1A0         	movff	?___fldiv+1,_sin$3750+1
  3430  0040D4  C079  F1A1         	movff	?___fldiv+2,_sin$3750+2
  3431  0040D8  C07A  F1A2         	movff	?___fldiv+3,_sin$3750+3
  3432  0040DC  C197  F090         	movff	sin@f,___flmul@b
  3433  0040E0  C198  F091         	movff	sin@f+1,___flmul@b+1
  3434  0040E4  C199  F092         	movff	sin@f+2,___flmul@b+2
  3435  0040E8  C19A  F093         	movff	sin@f+3,___flmul@b+3
  3436  0040EC  C19F  F094         	movff	_sin$3750,___flmul@a
  3437  0040F0  C1A0  F095         	movff	_sin$3750+1,___flmul@a+1
  3438  0040F4  C1A1  F096         	movff	_sin$3750+2,___flmul@a+2
  3439  0040F8  C1A2  F097         	movff	_sin$3750+3,___flmul@a+3
  3440  0040FC  EC36  F017         	call	___flmul	;wreg free
  3441  004100  C090  F197         	movff	?___flmul,sin@f
  3442  004104  C091  F198         	movff	?___flmul+1,sin@f+1
  3443  004108  C092  F199         	movff	?___flmul+2,sin@f+2
  3444  00410C  C093  F19A         	movff	?___flmul+3,sin@f+3
  3445  004110  0101               	movlb	1	; () banked
  3446  004112  51A7               	movf	sin@sgn& (0+255),w,b
  3447  004114  0101               	movlb	1	; () banked
  3448  004116  B4D8               	btfsc	status,2,c
  3449  004118  D013               	goto	l1288
  3450                           
  3451                           ; BSR set to: 1
  3452  00411A  C197  F0A9         	movff	sin@f,___flneg@f1
  3453  00411E  C198  F0AA         	movff	sin@f+1,___flneg@f1+1
  3454  004122  C199  F0AB         	movff	sin@f+2,___flneg@f1+2
  3455  004126  C19A  F0AC         	movff	sin@f+3,___flneg@f1+3
  3456  00412A  ECD8  F02D         	call	___flneg	;wreg free
  3457  00412E  C0A9  F197         	movff	?___flneg,?_sin
  3458  004132  C0AA  F198         	movff	?___flneg+1,?_sin+1
  3459  004136  C0AB  F199         	movff	?___flneg+2,?_sin+2
  3460  00413A  C0AC  F19A         	movff	?___flneg+3,?_sin+3
  3461  00413E  0012               	return	
  3462  004140                     l1288:
  3463                           
  3464                           ; BSR set to: 1
  3465  004140  C197  F197         	movff	sin@f,?_sin
  3466  004144  C198  F198         	movff	sin@f+1,?_sin+1
  3467  004148  C199  F199         	movff	sin@f+2,?_sin+2
  3468  00414C  C19A  F19A         	movff	sin@f+3,?_sin+3
  3469  004150  0012               	return		;funcret
  3470  004152                     __end_of_sin:
  3471                           	opt stack 0
  3472                           tblptru	equ	0xFF8
  3473                           tblptrh	equ	0xFF7
  3474                           tblptrl	equ	0xFF6
  3475                           tablat	equ	0xFF5
  3476                           postinc0	equ	0xFEE
  3477                           wreg	equ	0xFE8
  3478                           postdec1	equ	0xFE5
  3479                           fsr1l	equ	0xFE1
  3480                           postinc2	equ	0xFDE
  3481                           postdec2	equ	0xFDD
  3482                           status	equ	0xFD8
  3483                           
  3484 ;; *************** function _floor *****************
  3485 ;; Defined at:
  3486 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  x               4  115[BANK0 ] unsigned char 
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;  i               4    6[BANK1 ] unsigned char 
  3491 ;;  expon           2   10[BANK1 ] int 
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  4  115[BANK0 ] int 
  3494 ;; Registers used:
  3495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3501 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3502 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3504 ;;      Totals:         0       4       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3505 ;;Total ram usage:       10 bytes
  3506 ;; Hardware stack levels used:    1
  3507 ;; Hardware stack levels required when called:    5
  3508 ;; This function calls:
  3509 ;;		___fladd
  3510 ;;		___flge
  3511 ;;		___fltol
  3512 ;;		___xxtofl
  3513 ;;		_frexp
  3514 ;; This function is called by:
  3515 ;;		_sin
  3516 ;; This function uses a non-reentrant model
  3517 ;;
  3518                           
  3519                           	psect	text8
  3520  005350                     __ptext8:
  3521                           	opt stack 0
  3522  005350                     _floor:
  3523                           	opt stack 21
  3524                           
  3525                           ;incstack = 0
  3526  005350  C0D3  F077         	movff	floor@x,frexp@value
  3527  005354  C0D4  F078         	movff	floor@x+1,frexp@value+1
  3528  005358  C0D5  F079         	movff	floor@x+2,frexp@value+2
  3529  00535C  C0D6  F07A         	movff	floor@x+3,frexp@value+3
  3530  005360  0E8D               	movlw	low floor@expon
  3531  005362  0100               	movlb	0	; () banked
  3532  005364  6F7B               	movwf	frexp@eptr& (0+255),b
  3533  005366  0E01               	movlw	high floor@expon
  3534  005368  0100               	movlb	0	; () banked
  3535  00536A  6F7C               	movwf	(frexp@eptr+1)& (0+255),b
  3536  00536C  EC2E  F02C         	call	_frexp	;wreg free
  3537  005370  0101               	movlb	1	; () banked
  3538  005372  AF8E               	btfss	(floor@expon+1)& (0+255),7,b
  3539  005374  D017               	goto	l6607
  3540                           
  3541                           ; BSR set to: 1
  3542  005376  0100               	movlb	0	; () banked
  3543  005378  AFD6               	btfss	(floor@x+3)& (0+255),7,b
  3544  00537A  D00A               	goto	l6603
  3545                           
  3546                           ; BSR set to: 0
  3547  00537C  0E00               	movlw	0
  3548  00537E  0100               	movlb	0	; () banked
  3549  005380  6FD3               	movwf	?_floor& (0+255),b
  3550  005382  0E00               	movlw	0
  3551  005384  6FD4               	movwf	(?_floor+1)& (0+255),b
  3552  005386  0E80               	movlw	128
  3553  005388  6FD5               	movwf	(?_floor+2)& (0+255),b
  3554  00538A  0EBF               	movlw	191
  3555  00538C  6FD6               	movwf	(?_floor+3)& (0+255),b
  3556                           
  3557                           ; BSR set to: 0
  3558  00538E  0012               	return	
  3559  005390                     l6603:
  3560                           
  3561                           ; BSR set to: 0
  3562  005390  0E00               	movlw	0
  3563  005392  0100               	movlb	0	; () banked
  3564  005394  6FD3               	movwf	?_floor& (0+255),b
  3565  005396  0E00               	movlw	0
  3566  005398  6FD4               	movwf	(?_floor+1)& (0+255),b
  3567  00539A  0E00               	movlw	0
  3568  00539C  6FD5               	movwf	(?_floor+2)& (0+255),b
  3569  00539E  0E00               	movlw	0
  3570  0053A0  6FD6               	movwf	(?_floor+3)& (0+255),b
  3571                           
  3572                           ; BSR set to: 0
  3573  0053A2  0012               	return	
  3574  0053A4                     l6607:
  3575  0053A4  0101               	movlb	1	; () banked
  3576  0053A6  518E               	movf	(floor@expon+1)& (0+255),w,b
  3577  0053A8  E105               	bnz	u8370
  3578  0053AA  0E1D               	movlw	29
  3579  0053AC  0101               	movlb	1	; () banked
  3580  0053AE  5D8D               	subwf	floor@expon& (0+255),w,b
  3581  0053B0  A0D8               	btfss	status,0,c
  3582  0053B2  D009               	goto	l6611
  3583  0053B4                     u8370:
  3584                           
  3585                           ; BSR set to: 1
  3586  0053B4  C0D3  F0D3         	movff	floor@x,?_floor
  3587  0053B8  C0D4  F0D4         	movff	floor@x+1,?_floor+1
  3588  0053BC  C0D5  F0D5         	movff	floor@x+2,?_floor+2
  3589  0053C0  C0D6  F0D6         	movff	floor@x+3,?_floor+3
  3590  0053C4  0012               	return	
  3591  0053C6                     l6611:
  3592                           
  3593                           ; BSR set to: 1
  3594  0053C6  C0D3  F0C1         	movff	floor@x,___fltol@f1
  3595  0053CA  C0D4  F0C2         	movff	floor@x+1,___fltol@f1+1
  3596  0053CE  C0D5  F0C3         	movff	floor@x+2,___fltol@f1+2
  3597  0053D2  C0D6  F0C4         	movff	floor@x+3,___fltol@f1+3
  3598  0053D6  ECC6  F02A         	call	___fltol	;wreg free
  3599  0053DA  C0C1  F0CB         	movff	?___fltol,___xxtofl@val
  3600  0053DE  C0C2  F0CC         	movff	?___fltol+1,___xxtofl@val+1
  3601  0053E2  C0C3  F0CD         	movff	?___fltol+2,___xxtofl@val+2
  3602  0053E6  C0C4  F0CE         	movff	?___fltol+3,___xxtofl@val+3
  3603  0053EA  0E01               	movlw	1
  3604  0053EC  ECAA  F025         	call	___xxtofl
  3605  0053F0  C0CB  F189         	movff	?___xxtofl,floor@i
  3606  0053F4  C0CC  F18A         	movff	?___xxtofl+1,floor@i+1
  3607  0053F8  C0CD  F18B         	movff	?___xxtofl+2,floor@i+2
  3608  0053FC  C0CE  F18C         	movff	?___xxtofl+3,floor@i+3
  3609  005400  C0D3  F0B1         	movff	floor@x,___flge@ff1
  3610  005404  C0D4  F0B2         	movff	floor@x+1,___flge@ff1+1
  3611  005408  C0D5  F0B3         	movff	floor@x+2,___flge@ff1+2
  3612  00540C  C0D6  F0B4         	movff	floor@x+3,___flge@ff1+3
  3613  005410  C189  F0B5         	movff	floor@i,___flge@ff2
  3614  005414  C18A  F0B6         	movff	floor@i+1,___flge@ff2+1
  3615  005418  C18B  F0B7         	movff	floor@i+2,___flge@ff2+2
  3616  00541C  C18C  F0B8         	movff	floor@i+3,___flge@ff2+3
  3617  005420  EC48  F028         	call	___flge	;wreg free
  3618  005424  0100               	movlb	0	; () banked
  3619  005426  B0D8               	btfsc	status,0,c
  3620  005428  D01C               	goto	l1457
  3621                           
  3622                           ; BSR set to: 0
  3623  00542A  C189  F0AD         	movff	floor@i,___fladd@b
  3624  00542E  C18A  F0AE         	movff	floor@i+1,___fladd@b+1
  3625  005432  C18B  F0AF         	movff	floor@i+2,___fladd@b+2
  3626  005436  C18C  F0B0         	movff	floor@i+3,___fladd@b+3
  3627  00543A  0E00               	movlw	0
  3628  00543C  0100               	movlb	0	; () banked
  3629  00543E  6FB1               	movwf	___fladd@a& (0+255),b
  3630  005440  0E00               	movlw	0
  3631  005442  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3632  005444  0E80               	movlw	128
  3633  005446  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3634  005448  0EBF               	movlw	191
  3635  00544A  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3636  00544C  ECE2  F014         	call	___fladd	;wreg free
  3637  005450  C0AD  F0D3         	movff	?___fladd,?_floor
  3638  005454  C0AE  F0D4         	movff	?___fladd+1,?_floor+1
  3639  005458  C0AF  F0D5         	movff	?___fladd+2,?_floor+2
  3640  00545C  C0B0  F0D6         	movff	?___fladd+3,?_floor+3
  3641  005460  0012               	return	
  3642  005462                     l1457:
  3643                           
  3644                           ; BSR set to: 0
  3645  005462  C189  F0D3         	movff	floor@i,?_floor
  3646  005466  C18A  F0D4         	movff	floor@i+1,?_floor+1
  3647  00546A  C18B  F0D5         	movff	floor@i+2,?_floor+2
  3648  00546E  C18C  F0D6         	movff	floor@i+3,?_floor+3
  3649  005472  0012               	return		;funcret
  3650  005474                     __end_of_floor:
  3651                           	opt stack 0
  3652                           tblptru	equ	0xFF8
  3653                           tblptrh	equ	0xFF7
  3654                           tblptrl	equ	0xFF6
  3655                           tablat	equ	0xFF5
  3656                           postinc0	equ	0xFEE
  3657                           wreg	equ	0xFE8
  3658                           postdec1	equ	0xFE5
  3659                           fsr1l	equ	0xFE1
  3660                           postinc2	equ	0xFDE
  3661                           postdec2	equ	0xFDD
  3662                           status	equ	0xFD8
  3663                           
  3664 ;; *************** function _frexp *****************
  3665 ;; Defined at:
  3666 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;  value           4   23[BANK0 ] int 
  3669 ;;  eptr            2   27[BANK0 ] PTR int 
  3670 ;;		 -> floor@expon(2), 
  3671 ;; Auto vars:     Size  Location     Type
  3672 ;;		None
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  4   23[BANK0 ] PTR int 
  3675 ;; Registers used:
  3676 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3682 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3684 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3685 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3686 ;;Total ram usage:        8 bytes
  3687 ;; Hardware stack levels used:    1
  3688 ;; Hardware stack levels required when called:    4
  3689 ;; This function calls:
  3690 ;;		Nothing
  3691 ;; This function is called by:
  3692 ;;		_floor
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text9
  3697  00585C                     __ptext9:
  3698                           	opt stack 0
  3699  00585C                     _frexp:
  3700                           	opt stack 21
  3701                           
  3702                           ;incstack = 0
  3703  00585C  0100               	movlb	0	; () banked
  3704  00585E  5177               	movf	frexp@value& (0+255),w,b
  3705  005860  0100               	movlb	0	; () banked
  3706  005862  1178               	iorwf	(frexp@value+1)& (0+255),w,b
  3707  005864  0100               	movlb	0	; () banked
  3708  005866  1179               	iorwf	(frexp@value+2)& (0+255),w,b
  3709  005868  0100               	movlb	0	; () banked
  3710  00586A  117A               	iorwf	(frexp@value+3)& (0+255),w,b
  3711  00586C  A4D8               	btfss	status,2,c
  3712  00586E  D009               	goto	l6429
  3713                           
  3714                           ; BSR set to: 0
  3715  005870  C07B  FFD9         	movff	frexp@eptr,fsr2l
  3716  005874  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  3717  005878  0E00               	movlw	0
  3718  00587A  6EDE               	movwf	postinc2,c
  3719  00587C  0E00               	movlw	0
  3720  00587E  6EDD               	movwf	postdec2,c
  3721                           
  3722                           ; BSR set to: 0
  3723                           ;	Return value of _frexp is never used
  3724  005880  0012               	return	
  3725  005882                     l6429:
  3726                           
  3727                           ; BSR set to: 0
  3728  005882  0100               	movlb	0	; () banked
  3729  005884  517A               	movf	(frexp@value+3)& (0+255),w,b
  3730  005886  0B7F               	andlw	127
  3731  005888  0100               	movlb	0	; () banked
  3732  00588A  6F7D               	movwf	??_frexp& (0+255),b
  3733  00588C  6B7E               	clrf	(??_frexp+1)& (0+255),b
  3734  00588E  90D8               	bcf	status,0,c
  3735  005890  0100               	movlb	0	; () banked
  3736  005892  377D               	rlcf	??_frexp& (0+255),f,b
  3737  005894  377E               	rlcf	(??_frexp+1)& (0+255),f,b
  3738  005896  C07B  FFD9         	movff	frexp@eptr,fsr2l
  3739  00589A  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  3740  00589E  C07D  FFDE         	movff	??_frexp,postinc2
  3741  0058A2  C07E  FFDD         	movff	??_frexp+1,postdec2
  3742  0058A6  0100               	movlb	0	; () banked
  3743  0058A8  AF79               	btfss	(frexp@value+2)& (0+255),7,b
  3744  0058AA  D004               	goto	u8090
  3745  0058AC  0100               	movlb	0	; () banked
  3746  0058AE  6B7D               	clrf	??_frexp& (0+255),b
  3747  0058B0  2B7D               	incf	??_frexp& (0+255),f,b
  3748  0058B2  D002               	goto	u8098
  3749  0058B4                     u8090:
  3750  0058B4  0100               	movlb	0	; () banked
  3751  0058B6  6B7D               	clrf	??_frexp& (0+255),b
  3752  0058B8                     u8098:
  3753  0058B8  0100               	movlb	0	; () banked
  3754  0058BA  517D               	movf	??_frexp& (0+255),w,b
  3755  0058BC  C07B  FFD9         	movff	frexp@eptr,fsr2l
  3756  0058C0  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  3757  0058C4  12DE               	iorwf	postinc2,f,c
  3758  0058C6  0E00               	movlw	0
  3759  0058C8  12DD               	iorwf	postdec2,f,c
  3760                           
  3761                           ; BSR set to: 0
  3762  0058CA  C07B  FFD9         	movff	frexp@eptr,fsr2l
  3763  0058CE  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  3764  0058D2  0E82               	movlw	130
  3765  0058D4  26DE               	addwf	postinc2,f,c
  3766  0058D6  0EFF               	movlw	255
  3767  0058D8  22DD               	addwfc	postdec2,f,c
  3768                           
  3769                           ; BSR set to: 0
  3770  0058DA  0100               	movlb	0	; () banked
  3771  0058DC  817A               	bsf	(frexp@value+3)& (0+255),0,b
  3772  0058DE  837A               	bsf	(frexp@value+3)& (0+255),1,b
  3773  0058E0  857A               	bsf	(frexp@value+3)& (0+255),2,b
  3774  0058E2  877A               	bsf	(frexp@value+3)& (0+255),3,b
  3775  0058E4  897A               	bsf	(frexp@value+3)& (0+255),4,b
  3776  0058E6  8B7A               	bsf	(frexp@value+3)& (0+255),5,b
  3777  0058E8  9D7A               	bcf	(frexp@value+3)& (0+255),6,b
  3778                           
  3779                           ; BSR set to: 0
  3780  0058EA  0100               	movlb	0	; () banked
  3781  0058EC  9F79               	bcf	(frexp@value+2)& (0+255),7,b
  3782  0058EE  0012               	return	
  3783  0058F0                     __end_of_frexp:
  3784                           	opt stack 0
  3785                           tblptru	equ	0xFF8
  3786                           tblptrh	equ	0xFF7
  3787                           tblptrl	equ	0xFF6
  3788                           tablat	equ	0xFF5
  3789                           postinc0	equ	0xFEE
  3790                           wreg	equ	0xFE8
  3791                           postdec1	equ	0xFE5
  3792                           fsr1l	equ	0xFE1
  3793                           postinc2	equ	0xFDE
  3794                           postdec2	equ	0xFDD
  3795                           fsr2h	equ	0xFDA
  3796                           fsr2l	equ	0xFD9
  3797                           status	equ	0xFD8
  3798                           
  3799 ;; *************** function ___xxtofl *****************
  3800 ;; Defined at:
  3801 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  sign            1    wreg     unsigned char 
  3804 ;;  val             4  107[BANK0 ] long 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  sign            1    0[BANK1 ] unsigned char 
  3807 ;;  arg             4    2[BANK1 ] unsigned long 
  3808 ;;  exp             1    1[BANK1 ] unsigned char 
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  4  107[BANK0 ] unsigned char 
  3811 ;; Registers used:
  3812 ;;		wreg, status,2, status,0
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3818 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3819 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3820 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3821 ;;      Totals:         0       8       6       0       0       0       0       0       0       0       0       0       
      +0       0
  3822 ;;Total ram usage:       14 bytes
  3823 ;; Hardware stack levels used:    1
  3824 ;; Hardware stack levels required when called:    4
  3825 ;; This function calls:
  3826 ;;		Nothing
  3827 ;; This function is called by:
  3828 ;;		_park_search
  3829 ;;		_park_routine
  3830 ;;		_parallelo
  3831 ;;		_floor
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           	psect	text10
  3836  004B54                     __ptext10:
  3837                           	opt stack 0
  3838  004B54                     ___xxtofl:
  3839                           	opt stack 24
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;incstack = 0
  3843                           ;___xxtofl@sign stored from wreg
  3844  004B54  0101               	movlb	1	; () banked
  3845  004B56  6F83               	movwf	___xxtofl@sign& (0+255),b
  3846  004B58  0101               	movlb	1	; () banked
  3847  004B5A  5183               	movf	___xxtofl@sign& (0+255),w,b
  3848  004B5C  0101               	movlb	1	; () banked
  3849  004B5E  B4D8               	btfsc	status,2,c
  3850  004B60  D01E               	goto	l1432
  3851                           
  3852                           ; BSR set to: 1
  3853  004B62  0100               	movlb	0	; () banked
  3854  004B64  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  3855  004B66  D01B               	goto	l1432
  3856                           
  3857                           ; BSR set to: 0
  3858  004B68  C0CB  F0CF         	movff	___xxtofl@val,??___xxtofl
  3859  004B6C  C0CC  F0D0         	movff	___xxtofl@val+1,??___xxtofl+1
  3860  004B70  C0CD  F0D1         	movff	___xxtofl@val+2,??___xxtofl+2
  3861  004B74  C0CE  F0D2         	movff	___xxtofl@val+3,??___xxtofl+3
  3862  004B78  0100               	movlb	0	; () banked
  3863  004B7A  1FCF               	comf	??___xxtofl& (0+255),f,b
  3864  004B7C  1FD0               	comf	(??___xxtofl+1)& (0+255),f,b
  3865  004B7E  1FD1               	comf	(??___xxtofl+2)& (0+255),f,b
  3866  004B80  1FD2               	comf	(??___xxtofl+3)& (0+255),f,b
  3867  004B82  2BCF               	incf	??___xxtofl& (0+255),f,b
  3868  004B84  0E00               	movlw	0
  3869  004B86  23D0               	addwfc	(??___xxtofl+1)& (0+255),f,b
  3870  004B88  23D1               	addwfc	(??___xxtofl+2)& (0+255),f,b
  3871  004B8A  23D2               	addwfc	(??___xxtofl+3)& (0+255),f,b
  3872  004B8C  C0CF  F185         	movff	??___xxtofl,___xxtofl@arg
  3873  004B90  C0D0  F186         	movff	??___xxtofl+1,___xxtofl@arg+1
  3874  004B94  C0D1  F187         	movff	??___xxtofl+2,___xxtofl@arg+2
  3875  004B98  C0D2  F188         	movff	??___xxtofl+3,___xxtofl@arg+3
  3876  004B9C  D008               	goto	l6387
  3877  004B9E                     l1432:
  3878  004B9E  C0CB  F185         	movff	___xxtofl@val,___xxtofl@arg
  3879  004BA2  C0CC  F186         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3880  004BA6  C0CD  F187         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3881  004BAA  C0CE  F188         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3882  004BAE                     l6387:
  3883  004BAE  0100               	movlb	0	; () banked
  3884  004BB0  51CB               	movf	___xxtofl@val& (0+255),w,b
  3885  004BB2  0100               	movlb	0	; () banked
  3886  004BB4  11CC               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  3887  004BB6  0100               	movlb	0	; () banked
  3888  004BB8  11CD               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  3889  004BBA  0100               	movlb	0	; () banked
  3890  004BBC  11CE               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  3891  004BBE  A4D8               	btfss	status,2,c
  3892  004BC0  D00A               	goto	l6393
  3893                           
  3894                           ; BSR set to: 0
  3895  004BC2  0E00               	movlw	0
  3896  004BC4  0100               	movlb	0	; () banked
  3897  004BC6  6FCB               	movwf	?___xxtofl& (0+255),b
  3898  004BC8  0E00               	movlw	0
  3899  004BCA  6FCC               	movwf	(?___xxtofl+1)& (0+255),b
  3900  004BCC  0E00               	movlw	0
  3901  004BCE  6FCD               	movwf	(?___xxtofl+2)& (0+255),b
  3902  004BD0  0E00               	movlw	0
  3903  004BD2  6FCE               	movwf	(?___xxtofl+3)& (0+255),b
  3904                           
  3905                           ; BSR set to: 0
  3906  004BD4  0012               	return	
  3907  004BD6                     l6393:
  3908                           
  3909                           ; BSR set to: 0
  3910  004BD6  0E96               	movlw	150
  3911  004BD8  0101               	movlb	1	; () banked
  3912  004BDA  6F84               	movwf	___xxtofl@exp& (0+255),b
  3913  004BDC  D008               	goto	l6397
  3914  004BDE                     l6395:
  3915  004BDE  0101               	movlb	1	; () banked
  3916  004BE0  2B84               	incf	___xxtofl@exp& (0+255),f,b
  3917  004BE2  0101               	movlb	1	; () banked
  3918  004BE4  90D8               	bcf	status,0,c
  3919  004BE6  3388               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3920  004BE8  3387               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3921  004BEA  3386               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3922  004BEC  3385               	rrcf	___xxtofl@arg& (0+255),f,b
  3923  004BEE                     l6397:
  3924                           
  3925                           ; BSR set to: 1
  3926  004BEE  0E00               	movlw	0
  3927  004BF0  0101               	movlb	1	; () banked
  3928  004BF2  1585               	andwf	___xxtofl@arg& (0+255),w,b
  3929  004BF4  0100               	movlb	0	; () banked
  3930  004BF6  6FCF               	movwf	??___xxtofl& (0+255),b
  3931  004BF8  0E00               	movlw	0
  3932  004BFA  0101               	movlb	1	; () banked
  3933  004BFC  1586               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3934  004BFE  0100               	movlb	0	; () banked
  3935  004C00  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  3936  004C02  0E00               	movlw	0
  3937  004C04  0101               	movlb	1	; () banked
  3938  004C06  1587               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3939  004C08  0100               	movlb	0	; () banked
  3940  004C0A  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  3941  004C0C  0EFE               	movlw	254
  3942  004C0E  0101               	movlb	1	; () banked
  3943  004C10  1588               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3944  004C12  0100               	movlb	0	; () banked
  3945  004C14  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  3946  004C16  0100               	movlb	0	; () banked
  3947  004C18  51CF               	movf	??___xxtofl& (0+255),w,b
  3948  004C1A  0100               	movlb	0	; () banked
  3949  004C1C  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3950  004C1E  0100               	movlb	0	; () banked
  3951  004C20  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3952  004C22  0100               	movlb	0	; () banked
  3953  004C24  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3954  004C26  B4D8               	btfsc	status,2,c
  3955  004C28  D010               	goto	l1439
  3956  004C2A  D7D9               	goto	l6395
  3957  004C2C                     l6399:
  3958                           
  3959                           ; BSR set to: 0
  3960  004C2C  0101               	movlb	1	; () banked
  3961  004C2E  2B84               	incf	___xxtofl@exp& (0+255),f,b
  3962                           
  3963                           ; BSR set to: 1
  3964  004C30  0E01               	movlw	1
  3965  004C32  0101               	movlb	1	; () banked
  3966  004C34  2785               	addwf	___xxtofl@arg& (0+255),f,b
  3967  004C36  0E00               	movlw	0
  3968  004C38  2386               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  3969  004C3A  2387               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  3970  004C3C  2388               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  3971                           
  3972                           ; BSR set to: 1
  3973  004C3E  0101               	movlb	1	; () banked
  3974  004C40  90D8               	bcf	status,0,c
  3975  004C42  3388               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3976  004C44  3387               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3977  004C46  3386               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3978  004C48  3385               	rrcf	___xxtofl@arg& (0+255),f,b
  3979  004C4A                     l1439:
  3980  004C4A  0E00               	movlw	0
  3981  004C4C  0101               	movlb	1	; () banked
  3982  004C4E  1585               	andwf	___xxtofl@arg& (0+255),w,b
  3983  004C50  0100               	movlb	0	; () banked
  3984  004C52  6FCF               	movwf	??___xxtofl& (0+255),b
  3985  004C54  0E00               	movlw	0
  3986  004C56  0101               	movlb	1	; () banked
  3987  004C58  1586               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3988  004C5A  0100               	movlb	0	; () banked
  3989  004C5C  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  3990  004C5E  0E00               	movlw	0
  3991  004C60  0101               	movlb	1	; () banked
  3992  004C62  1587               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3993  004C64  0100               	movlb	0	; () banked
  3994  004C66  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  3995  004C68  0EFF               	movlw	255
  3996  004C6A  0101               	movlb	1	; () banked
  3997  004C6C  1588               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3998  004C6E  0100               	movlb	0	; () banked
  3999  004C70  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  4000  004C72  0100               	movlb	0	; () banked
  4001  004C74  51CF               	movf	??___xxtofl& (0+255),w,b
  4002  004C76  0100               	movlb	0	; () banked
  4003  004C78  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  4004  004C7A  0100               	movlb	0	; () banked
  4005  004C7C  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  4006  004C7E  0100               	movlb	0	; () banked
  4007  004C80  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  4008  004C82  B4D8               	btfsc	status,2,c
  4009  004C84  D009               	goto	l6407
  4010  004C86  D7D2               	goto	l6399
  4011  004C88                     l6405:
  4012  004C88  0101               	movlb	1	; () banked
  4013  004C8A  0784               	decf	___xxtofl@exp& (0+255),f,b
  4014  004C8C  0101               	movlb	1	; () banked
  4015  004C8E  90D8               	bcf	status,0,c
  4016  004C90  3785               	rlcf	___xxtofl@arg& (0+255),f,b
  4017  004C92  3786               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  4018  004C94  3787               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  4019  004C96  3788               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  4020  004C98                     l6407:
  4021  004C98  0101               	movlb	1	; () banked
  4022  004C9A  BF87               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  4023  004C9C  D004               	goto	l1446
  4024                           
  4025                           ; BSR set to: 1
  4026  004C9E  0E02               	movlw	2
  4027  004CA0  0101               	movlb	1	; () banked
  4028  004CA2  6184               	cpfslt	___xxtofl@exp& (0+255),b
  4029  004CA4  D7F1               	goto	l6405
  4030  004CA6                     l1446:
  4031                           
  4032                           ; BSR set to: 1
  4033  004CA6  0101               	movlb	1	; () banked
  4034  004CA8  B184               	btfsc	___xxtofl@exp& (0+255),0,b
  4035  004CAA  D009               	goto	l1447
  4036                           
  4037                           ; BSR set to: 1
  4038  004CAC  0EFF               	movlw	255
  4039  004CAE  0101               	movlb	1	; () banked
  4040  004CB0  1785               	andwf	___xxtofl@arg& (0+255),f,b
  4041  004CB2  0EFF               	movlw	255
  4042  004CB4  1786               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  4043  004CB6  0E7F               	movlw	127
  4044  004CB8  1787               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  4045  004CBA  0EFF               	movlw	255
  4046  004CBC  1788               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  4047  004CBE                     l1447:
  4048                           
  4049                           ; BSR set to: 1
  4050  004CBE  0101               	movlb	1	; () banked
  4051  004CC0  90D8               	bcf	status,0,c
  4052  004CC2  3384               	rrcf	___xxtofl@exp& (0+255),f,b
  4053  004CC4  C184  F0CF         	movff	___xxtofl@exp,??___xxtofl
  4054  004CC8  0100               	movlb	0	; () banked
  4055  004CCA  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  4056  004CCC  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  4057  004CCE  6BD2               	clrf	(??___xxtofl+3)& (0+255),b
  4058  004CD0  C0CF  F0D2         	movff	??___xxtofl,??___xxtofl+3
  4059  004CD4  0100               	movlb	0	; () banked
  4060  004CD6  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  4061  004CD8  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  4062  004CDA  6BCF               	clrf	??___xxtofl& (0+255),b
  4063  004CDC  0100               	movlb	0	; () banked
  4064  004CDE  51CF               	movf	??___xxtofl& (0+255),w,b
  4065  004CE0  0101               	movlb	1	; () banked
  4066  004CE2  1385               	iorwf	___xxtofl@arg& (0+255),f,b
  4067  004CE4  0100               	movlb	0	; () banked
  4068  004CE6  51D0               	movf	(??___xxtofl+1)& (0+255),w,b
  4069  004CE8  0101               	movlb	1	; () banked
  4070  004CEA  1386               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  4071  004CEC  0100               	movlb	0	; () banked
  4072  004CEE  51D1               	movf	(??___xxtofl+2)& (0+255),w,b
  4073  004CF0  0101               	movlb	1	; () banked
  4074  004CF2  1387               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  4075  004CF4  0100               	movlb	0	; () banked
  4076  004CF6  51D2               	movf	(??___xxtofl+3)& (0+255),w,b
  4077  004CF8  0101               	movlb	1	; () banked
  4078  004CFA  1388               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  4079                           
  4080                           ; BSR set to: 1
  4081  004CFC  0101               	movlb	1	; () banked
  4082  004CFE  5183               	movf	___xxtofl@sign& (0+255),w,b
  4083  004D00  0101               	movlb	1	; () banked
  4084  004D02  B4D8               	btfsc	status,2,c
  4085  004D04  D005               	goto	l6419
  4086                           
  4087                           ; BSR set to: 1
  4088  004D06  0100               	movlb	0	; () banked
  4089  004D08  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  4090  004D0A  D002               	goto	l6419
  4091                           
  4092                           ; BSR set to: 0
  4093  004D0C  0101               	movlb	1	; () banked
  4094  004D0E  8F88               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  4095  004D10                     l6419:
  4096  004D10  C185  F0CB         	movff	___xxtofl@arg,?___xxtofl
  4097  004D14  C186  F0CC         	movff	___xxtofl@arg+1,?___xxtofl+1
  4098  004D18  C187  F0CD         	movff	___xxtofl@arg+2,?___xxtofl+2
  4099  004D1C  C188  F0CE         	movff	___xxtofl@arg+3,?___xxtofl+3
  4100  004D20  0012               	return	
  4101  004D22                     __end_of___xxtofl:
  4102                           	opt stack 0
  4103                           tblptru	equ	0xFF8
  4104                           tblptrh	equ	0xFF7
  4105                           tblptrl	equ	0xFF6
  4106                           tablat	equ	0xFF5
  4107                           postinc0	equ	0xFEE
  4108                           wreg	equ	0xFE8
  4109                           postdec1	equ	0xFE5
  4110                           fsr1l	equ	0xFE1
  4111                           postinc2	equ	0xFDE
  4112                           postdec2	equ	0xFDD
  4113                           fsr2h	equ	0xFDA
  4114                           fsr2l	equ	0xFD9
  4115                           status	equ	0xFD8
  4116                           
  4117 ;; *************** function ___fltol *****************
  4118 ;; Defined at:
  4119 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  4120 ;; Parameters:    Size  Location     Type
  4121 ;;  f1              4   97[BANK0 ] unsigned char 
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;  exp1            1  106[BANK0 ] unsigned char 
  4124 ;;  sign1           1  105[BANK0 ] unsigned char 
  4125 ;; Return value:  Size  Location     Type
  4126 ;;                  4   97[BANK0 ] long 
  4127 ;; Registers used:
  4128 ;;		wreg, status,2, status,0
  4129 ;; Tracked objects:
  4130 ;;		On entry : 0/0
  4131 ;;		On exit  : 0/0
  4132 ;;		Unchanged: 0/0
  4133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4134 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4135 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4136 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4137 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4138 ;;Total ram usage:       10 bytes
  4139 ;; Hardware stack levels used:    1
  4140 ;; Hardware stack levels required when called:    4
  4141 ;; This function calls:
  4142 ;;		Nothing
  4143 ;; This function is called by:
  4144 ;;		_park_routine
  4145 ;;		_parallelo
  4146 ;;		_floor
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           	psect	text11
  4151  00558C                     __ptext11:
  4152                           	opt stack 0
  4153  00558C                     ___fltol:
  4154                           	opt stack 24
  4155                           
  4156                           ;incstack = 0
  4157  00558C  0100               	movlb	0	; () banked
  4158  00558E  35C3               	rlcf	(___fltol@f1+2)& (0+255),w,b
  4159  005590  35C4               	rlcf	(___fltol@f1+3)& (0+255),w,b
  4160  005592  0100               	movlb	0	; () banked
  4161  005594  6FCA               	movwf	___fltol@exp1& (0+255),b
  4162  005596  0100               	movlb	0	; () banked
  4163  005598  51CA               	movf	___fltol@exp1& (0+255),w,b
  4164  00559A  A4D8               	btfss	status,2,c
  4165  00559C  D00A               	goto	l6343
  4166                           
  4167                           ; BSR set to: 0
  4168  00559E  0E00               	movlw	0
  4169  0055A0  0100               	movlb	0	; () banked
  4170  0055A2  6FC1               	movwf	?___fltol& (0+255),b
  4171  0055A4  0E00               	movlw	0
  4172  0055A6  6FC2               	movwf	(?___fltol+1)& (0+255),b
  4173  0055A8  0E00               	movlw	0
  4174  0055AA  6FC3               	movwf	(?___fltol+2)& (0+255),b
  4175  0055AC  0E00               	movlw	0
  4176  0055AE  6FC4               	movwf	(?___fltol+3)& (0+255),b
  4177                           
  4178                           ; BSR set to: 0
  4179  0055B0  0012               	return	
  4180  0055B2                     l6343:
  4181                           
  4182                           ; BSR set to: 0
  4183  0055B2  C0C1  F0C5         	movff	___fltol@f1,??___fltol
  4184  0055B6  C0C2  F0C6         	movff	___fltol@f1+1,??___fltol+1
  4185  0055BA  C0C3  F0C7         	movff	___fltol@f1+2,??___fltol+2
  4186  0055BE  C0C4  F0C8         	movff	___fltol@f1+3,??___fltol+3
  4187  0055C2  0E20               	movlw	32
  4188  0055C4  D006               	goto	u7920
  4189  0055C6                     u7925:
  4190  0055C6  0100               	movlb	0	; () banked
  4191  0055C8  90D8               	bcf	status,0,c
  4192  0055CA  33C8               	rrcf	(??___fltol+3)& (0+255),f,b
  4193  0055CC  33C7               	rrcf	(??___fltol+2)& (0+255),f,b
  4194  0055CE  33C6               	rrcf	(??___fltol+1)& (0+255),f,b
  4195  0055D0  33C5               	rrcf	??___fltol& (0+255),f,b
  4196  0055D2                     u7920:
  4197  0055D2  2EE8               	decfsz	wreg,f,c
  4198  0055D4  D7F8               	goto	u7925
  4199  0055D6  0100               	movlb	0	; () banked
  4200  0055D8  51C5               	movf	??___fltol& (0+255),w,b
  4201  0055DA  0100               	movlb	0	; () banked
  4202  0055DC  6FC9               	movwf	___fltol@sign1& (0+255),b
  4203                           
  4204                           ; BSR set to: 0
  4205  0055DE  0100               	movlb	0	; () banked
  4206  0055E0  8FC3               	bsf	(___fltol@f1+2)& (0+255),7,b
  4207                           
  4208                           ; BSR set to: 0
  4209  0055E2  0EFF               	movlw	255
  4210  0055E4  0100               	movlb	0	; () banked
  4211  0055E6  17C1               	andwf	___fltol@f1& (0+255),f,b
  4212  0055E8  0EFF               	movlw	255
  4213  0055EA  17C2               	andwf	(___fltol@f1+1)& (0+255),f,b
  4214  0055EC  0EFF               	movlw	255
  4215  0055EE  17C3               	andwf	(___fltol@f1+2)& (0+255),f,b
  4216  0055F0  0E00               	movlw	0
  4217  0055F2  17C4               	andwf	(___fltol@f1+3)& (0+255),f,b
  4218                           
  4219                           ; BSR set to: 0
  4220  0055F4  0E96               	movlw	150
  4221  0055F6  0100               	movlb	0	; () banked
  4222  0055F8  5FCA               	subwf	___fltol@exp1& (0+255),f,b
  4223                           
  4224                           ; BSR set to: 0
  4225  0055FA  0100               	movlb	0	; () banked
  4226  0055FC  AFCA               	btfss	___fltol@exp1& (0+255),7,b
  4227  0055FE  D01A               	goto	l6363
  4228                           
  4229                           ; BSR set to: 0
  4230  005600  0100               	movlb	0	; () banked
  4231  005602  51CA               	movf	___fltol@exp1& (0+255),w,b
  4232  005604  0A80               	xorlw	128
  4233  005606  0F97               	addlw	151
  4234  005608  B0D8               	btfsc	status,0,c
  4235  00560A  D00A               	goto	l6359
  4236                           
  4237                           ; BSR set to: 0
  4238  00560C  0E00               	movlw	0
  4239  00560E  0100               	movlb	0	; () banked
  4240  005610  6FC1               	movwf	?___fltol& (0+255),b
  4241  005612  0E00               	movlw	0
  4242  005614  6FC2               	movwf	(?___fltol+1)& (0+255),b
  4243  005616  0E00               	movlw	0
  4244  005618  6FC3               	movwf	(?___fltol+2)& (0+255),b
  4245  00561A  0E00               	movlw	0
  4246  00561C  6FC4               	movwf	(?___fltol+3)& (0+255),b
  4247                           
  4248                           ; BSR set to: 0
  4249  00561E  0012               	return	
  4250  005620                     l6359:
  4251                           
  4252                           ; BSR set to: 0
  4253  005620  0100               	movlb	0	; () banked
  4254  005622  90D8               	bcf	status,0,c
  4255  005624  33C4               	rrcf	(___fltol@f1+3)& (0+255),f,b
  4256  005626  33C3               	rrcf	(___fltol@f1+2)& (0+255),f,b
  4257  005628  33C2               	rrcf	(___fltol@f1+1)& (0+255),f,b
  4258  00562A  33C1               	rrcf	___fltol@f1& (0+255),f,b
  4259                           
  4260                           ; BSR set to: 0
  4261  00562C  0100               	movlb	0	; () banked
  4262  00562E  3FCA               	incfsz	___fltol@exp1& (0+255),f,b
  4263  005630  D7F7               	goto	l6359
  4264                           
  4265                           ; BSR set to: 0
  4266  005632  D01B               	goto	l6373
  4267  005634                     l6363:
  4268                           
  4269                           ; BSR set to: 0
  4270  005634  0E1F               	movlw	31
  4271  005636  0100               	movlb	0	; () banked
  4272  005638  65CA               	cpfsgt	___fltol@exp1& (0+255),b
  4273  00563A  D012               	goto	l6371
  4274                           
  4275                           ; BSR set to: 0
  4276  00563C  0E00               	movlw	0
  4277  00563E  0100               	movlb	0	; () banked
  4278  005640  6FC1               	movwf	?___fltol& (0+255),b
  4279  005642  0E00               	movlw	0
  4280  005644  6FC2               	movwf	(?___fltol+1)& (0+255),b
  4281  005646  0E00               	movlw	0
  4282  005648  6FC3               	movwf	(?___fltol+2)& (0+255),b
  4283  00564A  0E00               	movlw	0
  4284  00564C  6FC4               	movwf	(?___fltol+3)& (0+255),b
  4285                           
  4286                           ; BSR set to: 0
  4287  00564E  0012               	return	
  4288  005650                     l6369:
  4289                           
  4290                           ; BSR set to: 0
  4291  005650  0100               	movlb	0	; () banked
  4292  005652  90D8               	bcf	status,0,c
  4293  005654  37C1               	rlcf	___fltol@f1& (0+255),f,b
  4294  005656  37C2               	rlcf	(___fltol@f1+1)& (0+255),f,b
  4295  005658  37C3               	rlcf	(___fltol@f1+2)& (0+255),f,b
  4296  00565A  37C4               	rlcf	(___fltol@f1+3)& (0+255),f,b
  4297  00565C  0100               	movlb	0	; () banked
  4298  00565E  07CA               	decf	___fltol@exp1& (0+255),f,b
  4299  005660                     l6371:
  4300                           
  4301                           ; BSR set to: 0
  4302  005660  0100               	movlb	0	; () banked
  4303  005662  51CA               	movf	___fltol@exp1& (0+255),w,b
  4304  005664  0100               	movlb	0	; () banked
  4305  005666  A4D8               	btfss	status,2,c
  4306  005668  D7F3               	goto	l6369
  4307  00566A                     l6373:
  4308                           
  4309                           ; BSR set to: 0
  4310  00566A  0100               	movlb	0	; () banked
  4311  00566C  51C9               	movf	___fltol@sign1& (0+255),w,b
  4312  00566E  0100               	movlb	0	; () banked
  4313  005670  B4D8               	btfsc	status,2,c
  4314  005672  D009               	goto	l6377
  4315                           
  4316                           ; BSR set to: 0
  4317  005674  0100               	movlb	0	; () banked
  4318  005676  1FC4               	comf	(___fltol@f1+3)& (0+255),f,b
  4319  005678  1FC3               	comf	(___fltol@f1+2)& (0+255),f,b
  4320  00567A  1FC2               	comf	(___fltol@f1+1)& (0+255),f,b
  4321  00567C  6DC1               	negf	___fltol@f1& (0+255),b
  4322  00567E  0E00               	movlw	0
  4323  005680  23C2               	addwfc	(___fltol@f1+1)& (0+255),f,b
  4324  005682  23C3               	addwfc	(___fltol@f1+2)& (0+255),f,b
  4325  005684  23C4               	addwfc	(___fltol@f1+3)& (0+255),f,b
  4326  005686                     l6377:
  4327                           
  4328                           ; BSR set to: 0
  4329  005686  C0C1  F0C1         	movff	___fltol@f1,?___fltol
  4330  00568A  C0C2  F0C2         	movff	___fltol@f1+1,?___fltol+1
  4331  00568E  C0C3  F0C3         	movff	___fltol@f1+2,?___fltol+2
  4332  005692  C0C4  F0C4         	movff	___fltol@f1+3,?___fltol+3
  4333  005696  0012               	return	
  4334  005698                     __end_of___fltol:
  4335                           	opt stack 0
  4336                           tblptru	equ	0xFF8
  4337                           tblptrh	equ	0xFF7
  4338                           tblptrl	equ	0xFF6
  4339                           tablat	equ	0xFF5
  4340                           postinc0	equ	0xFEE
  4341                           wreg	equ	0xFE8
  4342                           postdec1	equ	0xFE5
  4343                           fsr1l	equ	0xFE1
  4344                           postinc2	equ	0xFDE
  4345                           postdec2	equ	0xFDD
  4346                           fsr2h	equ	0xFDA
  4347                           fsr2l	equ	0xFD9
  4348                           status	equ	0xFD8
  4349                           
  4350 ;; *************** function ___flsub *****************
  4351 ;; Defined at:
  4352 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;  b               4   12[BANK1 ] long 
  4355 ;;  a               4   16[BANK1 ] long 
  4356 ;; Auto vars:     Size  Location     Type
  4357 ;;		None
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  4   12[BANK1 ] long 
  4360 ;; Registers used:
  4361 ;;		wreg, status,2, status,0, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4367 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  4368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4370 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  4371 ;;Total ram usage:        8 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    5
  4374 ;; This function calls:
  4375 ;;		___fladd
  4376 ;; This function is called by:
  4377 ;;		_sin
  4378 ;; This function uses a non-reentrant model
  4379 ;;
  4380                           
  4381                           	psect	text12
  4382  005AF0                     __ptext12:
  4383                           	opt stack 0
  4384  005AF0                     ___flsub:
  4385                           	opt stack 21
  4386                           
  4387                           ; BSR set to: 0
  4388                           ;incstack = 0
  4389  005AF0  0E00               	movlw	0
  4390  005AF2  0101               	movlb	1	; () banked
  4391  005AF4  1B93               	xorwf	___flsub@a& (0+255),f,b
  4392  005AF6  0E00               	movlw	0
  4393  005AF8  1B94               	xorwf	(___flsub@a+1)& (0+255),f,b
  4394  005AFA  0E00               	movlw	0
  4395  005AFC  1B95               	xorwf	(___flsub@a+2)& (0+255),f,b
  4396  005AFE  0E80               	movlw	128
  4397  005B00  1B96               	xorwf	(___flsub@a+3)& (0+255),f,b
  4398                           
  4399                           ; BSR set to: 1
  4400  005B02  C18F  F0AD         	movff	___flsub@b,___fladd@b
  4401  005B06  C190  F0AE         	movff	___flsub@b+1,___fladd@b+1
  4402  005B0A  C191  F0AF         	movff	___flsub@b+2,___fladd@b+2
  4403  005B0E  C192  F0B0         	movff	___flsub@b+3,___fladd@b+3
  4404  005B12  C193  F0B1         	movff	___flsub@a,___fladd@a
  4405  005B16  C194  F0B2         	movff	___flsub@a+1,___fladd@a+1
  4406  005B1A  C195  F0B3         	movff	___flsub@a+2,___fladd@a+2
  4407  005B1E  C196  F0B4         	movff	___flsub@a+3,___fladd@a+3
  4408  005B22  ECE2  F014         	call	___fladd	;wreg free
  4409  005B26  C0AD  F18F         	movff	?___fladd,?___flsub
  4410  005B2A  C0AE  F190         	movff	?___fladd+1,?___flsub+1
  4411  005B2E  C0AF  F191         	movff	?___fladd+2,?___flsub+2
  4412  005B32  C0B0  F192         	movff	?___fladd+3,?___flsub+3
  4413  005B36  0012               	return	
  4414  005B38                     __end_of___flsub:
  4415                           	opt stack 0
  4416                           tblptru	equ	0xFF8
  4417                           tblptrh	equ	0xFF7
  4418                           tblptrl	equ	0xFF6
  4419                           tablat	equ	0xFF5
  4420                           postinc0	equ	0xFEE
  4421                           wreg	equ	0xFE8
  4422                           postdec1	equ	0xFE5
  4423                           fsr1l	equ	0xFE1
  4424                           postinc2	equ	0xFDE
  4425                           postdec2	equ	0xFDD
  4426                           fsr2h	equ	0xFDA
  4427                           fsr2l	equ	0xFD9
  4428                           status	equ	0xFD8
  4429                           
  4430 ;; *************** function _asin *****************
  4431 ;; Defined at:
  4432 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\asin.c"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;  x               4   21[BANK1 ] long 
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;  y               4   37[BANK1 ] long 
  4437 ;;  sgn             4   25[BANK1 ] long 
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  4   21[BANK1 ] long 
  4440 ;; Registers used:
  4441 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4447 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4448 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  4449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4450 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  4451 ;;Total ram usage:       24 bytes
  4452 ;; Hardware stack levels used:    1
  4453 ;; Hardware stack levels required when called:    7
  4454 ;; This function calls:
  4455 ;;		___fladd
  4456 ;;		___fldiv
  4457 ;;		___flge
  4458 ;;		___flmul
  4459 ;;		___flneg
  4460 ;;		_atan
  4461 ;;		_fabs
  4462 ;;		_sqrt
  4463 ;; This function is called by:
  4464 ;;		_parallelo
  4465 ;;		_matematica
  4466 ;; This function uses a non-reentrant model
  4467 ;;
  4468                           
  4469                           	psect	text13
  4470  004152                     __ptext13:
  4471                           	opt stack 0
  4472  004152                     _asin:
  4473                           	opt stack 21
  4474                           
  4475                           ;incstack = 0
  4476  004152  0E00               	movlw	0
  4477  004154  0100               	movlb	0	; () banked
  4478  004156  6FB1               	movwf	___flge@ff1& (0+255),b
  4479  004158  0E00               	movlw	0
  4480  00415A  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  4481  00415C  0E80               	movlw	128
  4482  00415E  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  4483  004160  0E3F               	movlw	63
  4484  004162  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  4485  004164  C198  F0AD         	movff	asin@x,fabs@d
  4486  004168  C199  F0AE         	movff	asin@x+1,fabs@d+1
  4487  00416C  C19A  F0AF         	movff	asin@x+2,fabs@d+2
  4488  004170  C19B  F0B0         	movff	asin@x+3,fabs@d+3
  4489  004174  EC9C  F02D         	call	_fabs	;wreg free
  4490  004178  C0AD  F0B5         	movff	?_fabs,___flge@ff2
  4491  00417C  C0AE  F0B6         	movff	?_fabs+1,___flge@ff2+1
  4492  004180  C0AF  F0B7         	movff	?_fabs+2,___flge@ff2+2
  4493  004184  C0B0  F0B8         	movff	?_fabs+3,___flge@ff2+3
  4494  004188  EC48  F028         	call	___flge	;wreg free
  4495  00418C  0100               	movlb	0	; () banked
  4496  00418E  B0D8               	btfsc	status,0,c
  4497  004190  D00F               	goto	l6789
  4498                           
  4499                           ; BSR set to: 0
  4500  004192  0E00               	movlw	0
  4501  004194  0101               	movlb	1	; () banked
  4502  004196  6F43               	movwf	(_errno+1)& (0+255),b
  4503  004198  0E21               	movlw	33
  4504  00419A  6F42               	movwf	_errno& (0+255),b
  4505  00419C  0E00               	movlw	0
  4506  00419E  0101               	movlb	1	; () banked
  4507  0041A0  6F98               	movwf	?_asin& (0+255),b
  4508  0041A2  0E00               	movlw	0
  4509  0041A4  6F99               	movwf	(?_asin+1)& (0+255),b
  4510  0041A6  0E00               	movlw	0
  4511  0041A8  6F9A               	movwf	(?_asin+2)& (0+255),b
  4512  0041AA  0E00               	movlw	0
  4513  0041AC  6F9B               	movwf	(?_asin+3)& (0+255),b
  4514                           
  4515                           ; BSR set to: 1
  4516  0041AE  0012               	return	
  4517  0041B0                     l6789:
  4518  0041B0  0E00               	movlw	0
  4519  0041B2  0101               	movlb	1	; () banked
  4520  0041B4  6F9C               	movwf	asin@sgn& (0+255),b
  4521  0041B6  0E00               	movlw	0
  4522  0041B8  6F9D               	movwf	(asin@sgn+1)& (0+255),b
  4523  0041BA  0E80               	movlw	128
  4524  0041BC  6F9E               	movwf	(asin@sgn+2)& (0+255),b
  4525  0041BE  0E3F               	movlw	63
  4526  0041C0  6F9F               	movwf	(asin@sgn+3)& (0+255),b
  4527                           
  4528                           ; BSR set to: 1
  4529  0041C2  C198  F094         	movff	asin@x,___flmul@a
  4530  0041C6  C199  F095         	movff	asin@x+1,___flmul@a+1
  4531  0041CA  C19A  F096         	movff	asin@x+2,___flmul@a+2
  4532  0041CE  C19B  F097         	movff	asin@x+3,___flmul@a+3
  4533  0041D2  C198  F090         	movff	asin@x,___flmul@b
  4534  0041D6  C199  F091         	movff	asin@x+1,___flmul@b+1
  4535  0041DA  C19A  F092         	movff	asin@x+2,___flmul@b+2
  4536  0041DE  C19B  F093         	movff	asin@x+3,___flmul@b+3
  4537  0041E2  EC36  F017         	call	___flmul	;wreg free
  4538  0041E6  C090  F0A9         	movff	?___flmul,___flneg@f1
  4539  0041EA  C091  F0AA         	movff	?___flmul+1,___flneg@f1+1
  4540  0041EE  C092  F0AB         	movff	?___flmul+2,___flneg@f1+2
  4541  0041F2  C093  F0AC         	movff	?___flmul+3,___flneg@f1+3
  4542  0041F6  ECD8  F02D         	call	___flneg	;wreg free
  4543  0041FA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  4544  0041FE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  4545  004202  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  4546  004206  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  4547  00420A  0E00               	movlw	0
  4548  00420C  0100               	movlb	0	; () banked
  4549  00420E  6FB1               	movwf	___fladd@a& (0+255),b
  4550  004210  0E00               	movlw	0
  4551  004212  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4552  004214  0E80               	movlw	128
  4553  004216  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4554  004218  0E3F               	movlw	63
  4555  00421A  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4556  00421C  ECE2  F014         	call	___fladd	;wreg free
  4557  004220  C0AD  F0C1         	movff	?___fladd,sqrt@a
  4558  004224  C0AE  F0C2         	movff	?___fladd+1,sqrt@a+1
  4559  004228  C0AF  F0C3         	movff	?___fladd+2,sqrt@a+2
  4560  00422C  C0B0  F0C4         	movff	?___fladd+3,sqrt@a+3
  4561  004230  EC89  F019         	call	_sqrt	;wreg free
  4562  004234  C0C1  F1A8         	movff	?_sqrt,asin@y
  4563  004238  C0C2  F1A9         	movff	?_sqrt+1,asin@y+1
  4564  00423C  C0C3  F1AA         	movff	?_sqrt+2,asin@y+2
  4565  004240  C0C4  F1AB         	movff	?_sqrt+3,asin@y+3
  4566  004244  C198  F0AD         	movff	asin@x,fabs@d
  4567  004248  C199  F0AE         	movff	asin@x+1,fabs@d+1
  4568  00424C  C19A  F0AF         	movff	asin@x+2,fabs@d+2
  4569  004250  C19B  F0B0         	movff	asin@x+3,fabs@d+3
  4570  004254  EC9C  F02D         	call	_fabs	;wreg free
  4571  004258  C0AD  F0B1         	movff	?_fabs,___flge@ff1
  4572  00425C  C0AE  F0B2         	movff	?_fabs+1,___flge@ff1+1
  4573  004260  C0AF  F0B3         	movff	?_fabs+2,___flge@ff1+2
  4574  004264  C0B0  F0B4         	movff	?_fabs+3,___flge@ff1+3
  4575  004268  0E8F               	movlw	143
  4576  00426A  0100               	movlb	0	; () banked
  4577  00426C  6FB5               	movwf	___flge@ff2& (0+255),b
  4578  00426E  0EC2               	movlw	194
  4579  004270  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  4580  004272  0E35               	movlw	53
  4581  004274  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  4582  004276  0E3F               	movlw	63
  4583  004278  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  4584  00427A  EC48  F028         	call	___flge	;wreg free
  4585  00427E  0100               	movlb	0	; () banked
  4586  004280  B0D8               	btfsc	status,0,c
  4587  004282  D02D               	goto	l6801
  4588                           
  4589                           ; BSR set to: 0
  4590  004284  C198  F077         	movff	asin@x,___fldiv@b
  4591  004288  C199  F078         	movff	asin@x+1,___fldiv@b+1
  4592  00428C  C19A  F079         	movff	asin@x+2,___fldiv@b+2
  4593  004290  C19B  F07A         	movff	asin@x+3,___fldiv@b+3
  4594  004294  C1A8  F07B         	movff	asin@y,___fldiv@a
  4595  004298  C1A9  F07C         	movff	asin@y+1,___fldiv@a+1
  4596  00429C  C1AA  F07D         	movff	asin@y+2,___fldiv@a+2
  4597  0042A0  C1AB  F07E         	movff	asin@y+3,___fldiv@a+3
  4598  0042A4  EC6E  F01B         	call	___fldiv	;wreg free
  4599  0042A8  C077  F1AC         	movff	?___fldiv,_asin$3746
  4600  0042AC  C078  F1AD         	movff	?___fldiv+1,_asin$3746+1
  4601  0042B0  C079  F1AE         	movff	?___fldiv+2,_asin$3746+2
  4602  0042B4  C07A  F1AF         	movff	?___fldiv+3,_asin$3746+3
  4603  0042B8  C1AC  F0D1         	movff	_asin$3746,atan@f
  4604  0042BC  C1AD  F0D2         	movff	_asin$3746+1,atan@f+1
  4605  0042C0  C1AE  F0D3         	movff	_asin$3746+2,atan@f+2
  4606  0042C4  C1AF  F0D4         	movff	_asin$3746+3,atan@f+3
  4607  0042C8  EC78  F023         	call	_atan	;wreg free
  4608  0042CC  C0D1  F198         	movff	?_atan,?_asin
  4609  0042D0  C0D2  F199         	movff	?_atan+1,?_asin+1
  4610  0042D4  C0D3  F19A         	movff	?_atan+2,?_asin+2
  4611  0042D8  C0D4  F19B         	movff	?_atan+3,?_asin+3
  4612  0042DC  0012               	return	
  4613  0042DE                     l6801:
  4614  0042DE  0101               	movlb	1	; () banked
  4615  0042E0  AF9B               	btfss	(asin@x+3)& (0+255),7,b
  4616  0042E2  D06E               	goto	l6813
  4617                           
  4618                           ; BSR set to: 1
  4619  0042E4  C198  F07B         	movff	asin@x,___fldiv@a
  4620  0042E8  C199  F07C         	movff	asin@x+1,___fldiv@a+1
  4621  0042EC  C19A  F07D         	movff	asin@x+2,___fldiv@a+2
  4622  0042F0  C19B  F07E         	movff	asin@x+3,___fldiv@a+3
  4623  0042F4  C1A8  F0A9         	movff	asin@y,___flneg@f1
  4624  0042F8  C1A9  F0AA         	movff	asin@y+1,___flneg@f1+1
  4625  0042FC  C1AA  F0AB         	movff	asin@y+2,___flneg@f1+2
  4626  004300  C1AB  F0AC         	movff	asin@y+3,___flneg@f1+3
  4627  004304  ECD8  F02D         	call	___flneg	;wreg free
  4628  004308  C0A9  F077         	movff	?___flneg,___fldiv@b
  4629  00430C  C0AA  F078         	movff	?___flneg+1,___fldiv@b+1
  4630  004310  C0AB  F079         	movff	?___flneg+2,___fldiv@b+2
  4631  004314  C0AC  F07A         	movff	?___flneg+3,___fldiv@b+3
  4632  004318  EC6E  F01B         	call	___fldiv	;wreg free
  4633  00431C  C077  F1AC         	movff	?___fldiv,_asin$3746
  4634  004320  C078  F1AD         	movff	?___fldiv+1,_asin$3746+1
  4635  004324  C079  F1AE         	movff	?___fldiv+2,_asin$3746+2
  4636  004328  C07A  F1AF         	movff	?___fldiv+3,_asin$3746+3
  4637  00432C  C1AC  F0D1         	movff	_asin$3746,atan@f
  4638  004330  C1AD  F0D2         	movff	_asin$3746+1,atan@f+1
  4639  004334  C1AE  F0D3         	movff	_asin$3746+2,atan@f+2
  4640  004338  C1AF  F0D4         	movff	_asin$3746+3,atan@f+3
  4641  00433C  EC78  F023         	call	_atan	;wreg free
  4642  004340  C0D1  F1A4         	movff	?_atan,_asin$3747
  4643  004344  C0D2  F1A5         	movff	?_atan+1,_asin$3747+1
  4644  004348  C0D3  F1A6         	movff	?_atan+2,_asin$3747+2
  4645  00434C  C0D4  F1A7         	movff	?_atan+3,_asin$3747+3
  4646  004350  0EDB               	movlw	219
  4647  004352  0100               	movlb	0	; () banked
  4648  004354  6FB1               	movwf	___fladd@a& (0+255),b
  4649  004356  0E0F               	movlw	15
  4650  004358  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4651  00435A  0EC9               	movlw	201
  4652  00435C  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4653  00435E  0E3F               	movlw	63
  4654  004360  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4655  004362  C1A4  F0A9         	movff	_asin$3747,___flneg@f1
  4656  004366  C1A5  F0AA         	movff	_asin$3747+1,___flneg@f1+1
  4657  00436A  C1A6  F0AB         	movff	_asin$3747+2,___flneg@f1+2
  4658  00436E  C1A7  F0AC         	movff	_asin$3747+3,___flneg@f1+3
  4659  004372  ECD8  F02D         	call	___flneg	;wreg free
  4660  004376  C0A9  F0AD         	movff	?___flneg,___fladd@b
  4661  00437A  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  4662  00437E  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  4663  004382  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  4664  004386  ECE2  F014         	call	___fladd	;wreg free
  4665  00438A  C0AD  F1A0         	movff	?___fladd,_asin$3748
  4666  00438E  C0AE  F1A1         	movff	?___fladd+1,_asin$3748+1
  4667  004392  C0AF  F1A2         	movff	?___fladd+2,_asin$3748+2
  4668  004396  C0B0  F1A3         	movff	?___fladd+3,_asin$3748+3
  4669  00439A  C1A0  F0A9         	movff	_asin$3748,___flneg@f1
  4670  00439E  C1A1  F0AA         	movff	_asin$3748+1,___flneg@f1+1
  4671  0043A2  C1A2  F0AB         	movff	_asin$3748+2,___flneg@f1+2
  4672  0043A6  C1A3  F0AC         	movff	_asin$3748+3,___flneg@f1+3
  4673  0043AA  ECD8  F02D         	call	___flneg	;wreg free
  4674  0043AE  C0A9  F198         	movff	?___flneg,?_asin
  4675  0043B2  C0AA  F199         	movff	?___flneg+1,?_asin+1
  4676  0043B6  C0AB  F19A         	movff	?___flneg+2,?_asin+2
  4677  0043BA  C0AC  F19B         	movff	?___flneg+3,?_asin+3
  4678  0043BE  0012               	return	
  4679  0043C0                     l6813:
  4680  0043C0  C198  F07B         	movff	asin@x,___fldiv@a
  4681  0043C4  C199  F07C         	movff	asin@x+1,___fldiv@a+1
  4682  0043C8  C19A  F07D         	movff	asin@x+2,___fldiv@a+2
  4683  0043CC  C19B  F07E         	movff	asin@x+3,___fldiv@a+3
  4684  0043D0  C1A8  F077         	movff	asin@y,___fldiv@b
  4685  0043D4  C1A9  F078         	movff	asin@y+1,___fldiv@b+1
  4686  0043D8  C1AA  F079         	movff	asin@y+2,___fldiv@b+2
  4687  0043DC  C1AB  F07A         	movff	asin@y+3,___fldiv@b+3
  4688  0043E0  EC6E  F01B         	call	___fldiv	;wreg free
  4689  0043E4  C077  F1AC         	movff	?___fldiv,_asin$3746
  4690  0043E8  C078  F1AD         	movff	?___fldiv+1,_asin$3746+1
  4691  0043EC  C079  F1AE         	movff	?___fldiv+2,_asin$3746+2
  4692  0043F0  C07A  F1AF         	movff	?___fldiv+3,_asin$3746+3
  4693  0043F4  C1AC  F0D1         	movff	_asin$3746,atan@f
  4694  0043F8  C1AD  F0D2         	movff	_asin$3746+1,atan@f+1
  4695  0043FC  C1AE  F0D3         	movff	_asin$3746+2,atan@f+2
  4696  004400  C1AF  F0D4         	movff	_asin$3746+3,atan@f+3
  4697  004404  EC78  F023         	call	_atan	;wreg free
  4698  004408  C0D1  F1A4         	movff	?_atan,_asin$3747
  4699  00440C  C0D2  F1A5         	movff	?_atan+1,_asin$3747+1
  4700  004410  C0D3  F1A6         	movff	?_atan+2,_asin$3747+2
  4701  004414  C0D4  F1A7         	movff	?_atan+3,_asin$3747+3
  4702  004418  C1A4  F0A9         	movff	_asin$3747,___flneg@f1
  4703  00441C  C1A5  F0AA         	movff	_asin$3747+1,___flneg@f1+1
  4704  004420  C1A6  F0AB         	movff	_asin$3747+2,___flneg@f1+2
  4705  004424  C1A7  F0AC         	movff	_asin$3747+3,___flneg@f1+3
  4706  004428  ECD8  F02D         	call	___flneg	;wreg free
  4707  00442C  C0A9  F0AD         	movff	?___flneg,___fladd@b
  4708  004430  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  4709  004434  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  4710  004438  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  4711  00443C  0EDB               	movlw	219
  4712  00443E  0100               	movlb	0	; () banked
  4713  004440  6FB1               	movwf	___fladd@a& (0+255),b
  4714  004442  0E0F               	movlw	15
  4715  004444  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4716  004446  0EC9               	movlw	201
  4717  004448  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4718  00444A  0E3F               	movlw	63
  4719  00444C  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4720  00444E  ECE2  F014         	call	___fladd	;wreg free
  4721  004452  C0AD  F198         	movff	?___fladd,?_asin
  4722  004456  C0AE  F199         	movff	?___fladd+1,?_asin+1
  4723  00445A  C0AF  F19A         	movff	?___fladd+2,?_asin+2
  4724  00445E  C0B0  F19B         	movff	?___fladd+3,?_asin+3
  4725  004462  0012               	return	
  4726  004464                     __end_of_asin:
  4727                           	opt stack 0
  4728                           tblptru	equ	0xFF8
  4729                           tblptrh	equ	0xFF7
  4730                           tblptrl	equ	0xFF6
  4731                           tablat	equ	0xFF5
  4732                           postinc0	equ	0xFEE
  4733                           wreg	equ	0xFE8
  4734                           postdec1	equ	0xFE5
  4735                           fsr1l	equ	0xFE1
  4736                           postinc2	equ	0xFDE
  4737                           postdec2	equ	0xFDD
  4738                           fsr2h	equ	0xFDA
  4739                           fsr2l	equ	0xFD9
  4740                           status	equ	0xFD8
  4741                           
  4742 ;; *************** function _sqrt *****************
  4743 ;; Defined at:
  4744 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;  a               4   97[BANK0 ] long 
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;  frac            4   17[BANK1 ] unsigned long 
  4749 ;;  root            4   13[BANK1 ] struct .
  4750 ;;  grs             4    7[BANK1 ] unsigned long 
  4751 ;;  tfrac           4    2[BANK1 ] unsigned long 
  4752 ;;  exp             2   11[BANK1 ] int 
  4753 ;;  p               1    6[BANK1 ] unsigned char 
  4754 ;;  i               1    1[BANK1 ] unsigned char 
  4755 ;;  sign            1    0[BANK1 ] unsigned char 
  4756 ;; Return value:  Size  Location     Type
  4757 ;;                  4   97[BANK0 ] unsigned char 
  4758 ;; Registers used:
  4759 ;;		wreg, status,2, status,0
  4760 ;; Tracked objects:
  4761 ;;		On entry : 0/0
  4762 ;;		On exit  : 0/0
  4763 ;;		Unchanged: 0/0
  4764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4765 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4766 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  4767 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4768 ;;      Totals:         0       8      21       0       0       0       0       0       0       0       0       0       
      +0       0
  4769 ;;Total ram usage:       29 bytes
  4770 ;; Hardware stack levels used:    1
  4771 ;; Hardware stack levels required when called:    4
  4772 ;; This function calls:
  4773 ;;		Nothing
  4774 ;; This function is called by:
  4775 ;;		_parallelo
  4776 ;;		_asin
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           	psect	text14
  4781  003312                     __ptext14:
  4782                           	opt stack 0
  4783  003312                     _sqrt:
  4784                           	opt stack 24
  4785                           
  4786                           ;incstack = 0
  4787  003312  0100               	movlb	0	; () banked
  4788  003314  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  4789  003316  0B80               	andlw	128
  4790  003318  0101               	movlb	1	; () banked
  4791  00331A  6F83               	movwf	sqrt@sign& (0+255),b
  4792  00331C  0100               	movlb	0	; () banked
  4793  00331E  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  4794  003320  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  4795  003322  0101               	movlb	1	; () banked
  4796  003324  6F89               	movwf	sqrt@p& (0+255),b
  4797                           
  4798                           ; BSR set to: 1
  4799  003326  0100               	movlb	0	; () banked
  4800  003328  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  4801  00332A  D002               	goto	l6623
  4802                           
  4803                           ; BSR set to: 0
  4804  00332C  0101               	movlb	1	; () banked
  4805  00332E  8189               	bsf	sqrt@p& (0+255),0,b
  4806  003330                     l6623:
  4807  003330  C189  F18E         	movff	sqrt@p,sqrt@exp
  4808  003334  0101               	movlb	1	; () banked
  4809  003336  6B8F               	clrf	(sqrt@exp+1)& (0+255),b
  4810                           
  4811                           ; BSR set to: 1
  4812  003338  0EFF               	movlw	255
  4813  00333A  0100               	movlb	0	; () banked
  4814  00333C  15C1               	andwf	sqrt@a& (0+255),w,b
  4815  00333E  0101               	movlb	1	; () banked
  4816  003340  6F94               	movwf	sqrt@frac& (0+255),b
  4817  003342  0EFF               	movlw	255
  4818  003344  0100               	movlb	0	; () banked
  4819  003346  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  4820  003348  0101               	movlb	1	; () banked
  4821  00334A  6F95               	movwf	(sqrt@frac+1)& (0+255),b
  4822  00334C  0E7F               	movlw	127
  4823  00334E  0100               	movlb	0	; () banked
  4824  003350  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  4825  003352  0101               	movlb	1	; () banked
  4826  003354  6F96               	movwf	(sqrt@frac+2)& (0+255),b
  4827  003356  0E00               	movlw	0
  4828  003358  0100               	movlb	0	; () banked
  4829  00335A  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  4830  00335C  0101               	movlb	1	; () banked
  4831  00335E  6F97               	movwf	(sqrt@frac+3)& (0+255),b
  4832                           
  4833                           ; BSR set to: 1
  4834  003360  0101               	movlb	1	; () banked
  4835  003362  518E               	movf	sqrt@exp& (0+255),w,b
  4836  003364  0101               	movlb	1	; () banked
  4837  003366  118F               	iorwf	(sqrt@exp+1)& (0+255),w,b
  4838  003368  B4D8               	btfsc	status,2,c
  4839  00336A  D008               	goto	l6635
  4840                           
  4841                           ; BSR set to: 1
  4842  00336C  0101               	movlb	1	; () banked
  4843  00336E  8F96               	bsf	(sqrt@frac+2)& (0+255),7,b
  4844                           
  4845                           ; BSR set to: 1
  4846  003370  0101               	movlb	1	; () banked
  4847  003372  298E               	incf	sqrt@exp& (0+255),w,b
  4848  003374  0101               	movlb	1	; () banked
  4849  003376  118F               	iorwf	(sqrt@exp+1)& (0+255),w,b
  4850  003378  A4D8               	btfss	status,2,c
  4851  00337A  D009               	goto	l6637
  4852  00337C                     l6635:
  4853                           
  4854                           ; BSR set to: 1
  4855  00337C  0E00               	movlw	0
  4856  00337E  0101               	movlb	1	; () banked
  4857  003380  6F94               	movwf	sqrt@frac& (0+255),b
  4858  003382  0E00               	movlw	0
  4859  003384  6F95               	movwf	(sqrt@frac+1)& (0+255),b
  4860  003386  0E00               	movlw	0
  4861  003388  6F96               	movwf	(sqrt@frac+2)& (0+255),b
  4862  00338A  0E00               	movlw	0
  4863  00338C  6F97               	movwf	(sqrt@frac+3)& (0+255),b
  4864  00338E                     l6637:
  4865                           
  4866                           ; BSR set to: 1
  4867  00338E  0101               	movlb	1	; () banked
  4868  003390  518E               	movf	sqrt@exp& (0+255),w,b
  4869  003392  0101               	movlb	1	; () banked
  4870  003394  118F               	iorwf	(sqrt@exp+1)& (0+255),w,b
  4871  003396  A4D8               	btfss	status,2,c
  4872  003398  D00A               	goto	l6643
  4873                           
  4874                           ; BSR set to: 1
  4875  00339A  0E00               	movlw	0
  4876  00339C  0100               	movlb	0	; () banked
  4877  00339E  6FC1               	movwf	?_sqrt& (0+255),b
  4878  0033A0  0E00               	movlw	0
  4879  0033A2  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  4880  0033A4  0E00               	movlw	0
  4881  0033A6  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  4882  0033A8  0E00               	movlw	0
  4883  0033AA  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  4884                           
  4885                           ; BSR set to: 0
  4886  0033AC  0012               	return	
  4887  0033AE                     l6643:
  4888  0033AE  0101               	movlb	1	; () banked
  4889  0033B0  5183               	movf	sqrt@sign& (0+255),w,b
  4890  0033B2  0101               	movlb	1	; () banked
  4891  0033B4  B4D8               	btfsc	status,2,c
  4892  0033B6  D01C               	goto	l6655
  4893                           
  4894                           ; BSR set to: 1
  4895  0033B8  0E00               	movlw	0
  4896  0033BA  0101               	movlb	1	; () banked
  4897  0033BC  6F90               	movwf	sqrt@root& (0+255),b
  4898  0033BE  0E00               	movlw	0
  4899  0033C0  6F91               	movwf	(sqrt@root+1)& (0+255),b
  4900  0033C2  0E40               	movlw	64
  4901  0033C4  6F92               	movwf	(sqrt@root+2)& (0+255),b
  4902  0033C6  0E00               	movlw	0
  4903  0033C8  6F93               	movwf	(sqrt@root+3)& (0+255),b
  4904                           
  4905                           ; BSR set to: 1
  4906  0033CA  0101               	movlb	1	; () banked
  4907  0033CC  0E80               	movlw	128
  4908  0033CE  1392               	iorwf	(sqrt@root+2)& (0+255),f,b
  4909  0033D0  0EFF               	movlw	255
  4910  0033D2  1393               	iorwf	(sqrt@root+3)& (0+255),f,b
  4911                           
  4912                           ; BSR set to: 1
  4913  0033D4  0E00               	movlw	0
  4914  0033D6  0101               	movlb	1	; () banked
  4915  0033D8  6F43               	movwf	(_errno+1)& (0+255),b
  4916  0033DA  0E21               	movlw	33
  4917  0033DC  6F42               	movwf	_errno& (0+255),b
  4918                           
  4919                           ; BSR set to: 1
  4920  0033DE  C190  F0C1         	movff	sqrt@root,?_sqrt
  4921  0033E2  C191  F0C2         	movff	sqrt@root+1,?_sqrt+1
  4922  0033E6  C192  F0C3         	movff	sqrt@root+2,?_sqrt+2
  4923  0033EA  C193  F0C4         	movff	sqrt@root+3,?_sqrt+3
  4924                           
  4925                           ; BSR set to: 1
  4926  0033EE  0012               	return	
  4927  0033F0                     l6655:
  4928                           
  4929                           ; BSR set to: 1
  4930  0033F0  0101               	movlb	1	; () banked
  4931  0033F2  298E               	incf	sqrt@exp& (0+255),w,b
  4932  0033F4  0101               	movlb	1	; () banked
  4933  0033F6  118F               	iorwf	(sqrt@exp+1)& (0+255),w,b
  4934  0033F8  A4D8               	btfss	status,2,c
  4935  0033FA  D012               	goto	l6663
  4936                           
  4937                           ; BSR set to: 1
  4938  0033FC  0E00               	movlw	0
  4939  0033FE  0101               	movlb	1	; () banked
  4940  003400  6F90               	movwf	sqrt@root& (0+255),b
  4941  003402  0E00               	movlw	0
  4942  003404  6F91               	movwf	(sqrt@root+1)& (0+255),b
  4943  003406  0E80               	movlw	128
  4944  003408  6F92               	movwf	(sqrt@root+2)& (0+255),b
  4945  00340A  0E7F               	movlw	127
  4946  00340C  6F93               	movwf	(sqrt@root+3)& (0+255),b
  4947                           
  4948                           ; BSR set to: 1
  4949  00340E  C190  F0C1         	movff	sqrt@root,?_sqrt
  4950  003412  C191  F0C2         	movff	sqrt@root+1,?_sqrt+1
  4951  003416  C192  F0C3         	movff	sqrt@root+2,?_sqrt+2
  4952  00341A  C193  F0C4         	movff	sqrt@root+3,?_sqrt+3
  4953                           
  4954                           ; BSR set to: 1
  4955  00341E  0012               	return	
  4956  003420                     l6663:
  4957                           
  4958                           ; BSR set to: 1
  4959  003420  0101               	movlb	1	; () banked
  4960  003422  0E81               	movlw	129
  4961  003424  278E               	addwf	sqrt@exp& (0+255),f,b
  4962  003426  0EFF               	movlw	255
  4963  003428  238F               	addwfc	(sqrt@exp+1)& (0+255),f,b
  4964  00342A  0101               	movlb	1	; () banked
  4965  00342C  518E               	movf	sqrt@exp& (0+255),w,b
  4966  00342E  0B01               	andlw	1
  4967  003430  0101               	movlb	1	; () banked
  4968  003432  6F89               	movwf	sqrt@p& (0+255),b
  4969  003434  0101               	movlb	1	; () banked
  4970  003436  358F               	rlcf	(sqrt@exp+1)& (0+255),w,b
  4971  003438  338F               	rrcf	(sqrt@exp+1)& (0+255),f,b
  4972  00343A  338E               	rrcf	sqrt@exp& (0+255),f,b
  4973  00343C  0E7F               	movlw	127
  4974  00343E  0101               	movlb	1	; () banked
  4975  003440  278E               	addwf	sqrt@exp& (0+255),f,b
  4976  003442  0E00               	movlw	0
  4977  003444  238F               	addwfc	(sqrt@exp+1)& (0+255),f,b
  4978  003446  90D8               	bcf	status,0,c
  4979  003448  0101               	movlb	1	; () banked
  4980  00344A  3594               	rlcf	sqrt@frac& (0+255),w,b
  4981  00344C  0101               	movlb	1	; () banked
  4982  00344E  6F85               	movwf	sqrt@tfrac& (0+255),b
  4983  003450  0101               	movlb	1	; () banked
  4984  003452  3595               	rlcf	(sqrt@frac+1)& (0+255),w,b
  4985  003454  0101               	movlb	1	; () banked
  4986  003456  6F86               	movwf	(sqrt@tfrac+1)& (0+255),b
  4987  003458  0101               	movlb	1	; () banked
  4988  00345A  3596               	rlcf	(sqrt@frac+2)& (0+255),w,b
  4989  00345C  0101               	movlb	1	; () banked
  4990  00345E  6F87               	movwf	(sqrt@tfrac+2)& (0+255),b
  4991  003460  0101               	movlb	1	; () banked
  4992  003462  3597               	rlcf	(sqrt@frac+3)& (0+255),w,b
  4993  003464  0101               	movlb	1	; () banked
  4994  003466  6F88               	movwf	(sqrt@tfrac+3)& (0+255),b
  4995                           
  4996                           ; BSR set to: 1
  4997  003468  0E00               	movlw	0
  4998  00346A  0101               	movlb	1	; () banked
  4999  00346C  6F94               	movwf	sqrt@frac& (0+255),b
  5000  00346E  0E00               	movlw	0
  5001  003470  6F95               	movwf	(sqrt@frac+1)& (0+255),b
  5002  003472  0E00               	movlw	0
  5003  003474  6F96               	movwf	(sqrt@frac+2)& (0+255),b
  5004  003476  0E00               	movlw	0
  5005  003478  6F97               	movwf	(sqrt@frac+3)& (0+255),b
  5006                           
  5007                           ; BSR set to: 1
  5008  00347A  0E00               	movlw	0
  5009  00347C  0101               	movlb	1	; () banked
  5010  00347E  6F8A               	movwf	sqrt@grs& (0+255),b
  5011  003480  0E00               	movlw	0
  5012  003482  6F8B               	movwf	(sqrt@grs+1)& (0+255),b
  5013  003484  0E00               	movlw	0
  5014  003486  6F8C               	movwf	(sqrt@grs+2)& (0+255),b
  5015  003488  0E01               	movlw	1
  5016  00348A  6F8D               	movwf	(sqrt@grs+3)& (0+255),b
  5017                           
  5018                           ; BSR set to: 1
  5019  00348C  0101               	movlb	1	; () banked
  5020  00348E  5189               	movf	sqrt@p& (0+255),w,b
  5021  003490  0101               	movlb	1	; () banked
  5022  003492  B4D8               	btfsc	status,2,c
  5023  003494  D006               	goto	l6673
  5024                           
  5025                           ; BSR set to: 1
  5026  003496  0101               	movlb	1	; () banked
  5027  003498  90D8               	bcf	status,0,c
  5028  00349A  3785               	rlcf	sqrt@tfrac& (0+255),f,b
  5029  00349C  3786               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  5030  00349E  3787               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  5031  0034A0  3788               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  5032  0034A2                     l6673:
  5033                           
  5034                           ; BSR set to: 1
  5035  0034A2  0E00               	movlw	0
  5036  0034A4  0101               	movlb	1	; () banked
  5037  0034A6  6F84               	movwf	sqrt@i& (0+255),b
  5038  0034A8  D07E               	goto	l6687
  5039  0034AA                     l6675:
  5040                           
  5041                           ; BSR set to: 1
  5042  0034AA  0101               	movlb	1	; () banked
  5043  0034AC  518A               	movf	sqrt@grs& (0+255),w,b
  5044  0034AE  0101               	movlb	1	; () banked
  5045  0034B0  1394               	iorwf	sqrt@frac& (0+255),f,b
  5046  0034B2  0101               	movlb	1	; () banked
  5047  0034B4  518B               	movf	(sqrt@grs+1)& (0+255),w,b
  5048  0034B6  0101               	movlb	1	; () banked
  5049  0034B8  1395               	iorwf	(sqrt@frac+1)& (0+255),f,b
  5050  0034BA  0101               	movlb	1	; () banked
  5051  0034BC  518C               	movf	(sqrt@grs+2)& (0+255),w,b
  5052  0034BE  0101               	movlb	1	; () banked
  5053  0034C0  1396               	iorwf	(sqrt@frac+2)& (0+255),f,b
  5054  0034C2  0101               	movlb	1	; () banked
  5055  0034C4  518D               	movf	(sqrt@grs+3)& (0+255),w,b
  5056  0034C6  0101               	movlb	1	; () banked
  5057  0034C8  1397               	iorwf	(sqrt@frac+3)& (0+255),f,b
  5058  0034CA  0101               	movlb	1	; () banked
  5059  0034CC  5194               	movf	sqrt@frac& (0+255),w,b
  5060  0034CE  0101               	movlb	1	; () banked
  5061  0034D0  5D85               	subwf	sqrt@tfrac& (0+255),w,b
  5062  0034D2  0101               	movlb	1	; () banked
  5063  0034D4  5195               	movf	(sqrt@frac+1)& (0+255),w,b
  5064  0034D6  0101               	movlb	1	; () banked
  5065  0034D8  5986               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  5066  0034DA  0101               	movlb	1	; () banked
  5067  0034DC  5196               	movf	(sqrt@frac+2)& (0+255),w,b
  5068  0034DE  0101               	movlb	1	; () banked
  5069  0034E0  5987               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  5070  0034E2  0101               	movlb	1	; () banked
  5071  0034E4  5197               	movf	(sqrt@frac+3)& (0+255),w,b
  5072  0034E6  0101               	movlb	1	; () banked
  5073  0034E8  5988               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  5074  0034EA  A0D8               	btfss	status,0,c
  5075  0034EC  D021               	goto	l6679
  5076                           
  5077                           ; BSR set to: 1
  5078  0034EE  0101               	movlb	1	; () banked
  5079  0034F0  5194               	movf	sqrt@frac& (0+255),w,b
  5080  0034F2  0101               	movlb	1	; () banked
  5081  0034F4  5F85               	subwf	sqrt@tfrac& (0+255),f,b
  5082  0034F6  0101               	movlb	1	; () banked
  5083  0034F8  5195               	movf	(sqrt@frac+1)& (0+255),w,b
  5084  0034FA  0101               	movlb	1	; () banked
  5085  0034FC  5B86               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  5086  0034FE  0101               	movlb	1	; () banked
  5087  003500  5196               	movf	(sqrt@frac+2)& (0+255),w,b
  5088  003502  0101               	movlb	1	; () banked
  5089  003504  5B87               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  5090  003506  0101               	movlb	1	; () banked
  5091  003508  5197               	movf	(sqrt@frac+3)& (0+255),w,b
  5092  00350A  0101               	movlb	1	; () banked
  5093  00350C  5B88               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  5094  00350E  0101               	movlb	1	; () banked
  5095  003510  518A               	movf	sqrt@grs& (0+255),w,b
  5096  003512  0101               	movlb	1	; () banked
  5097  003514  2794               	addwf	sqrt@frac& (0+255),f,b
  5098  003516  0101               	movlb	1	; () banked
  5099  003518  518B               	movf	(sqrt@grs+1)& (0+255),w,b
  5100  00351A  0101               	movlb	1	; () banked
  5101  00351C  2395               	addwfc	(sqrt@frac+1)& (0+255),f,b
  5102  00351E  0101               	movlb	1	; () banked
  5103  003520  518C               	movf	(sqrt@grs+2)& (0+255),w,b
  5104  003522  0101               	movlb	1	; () banked
  5105  003524  2396               	addwfc	(sqrt@frac+2)& (0+255),f,b
  5106  003526  0101               	movlb	1	; () banked
  5107  003528  518D               	movf	(sqrt@grs+3)& (0+255),w,b
  5108  00352A  0101               	movlb	1	; () banked
  5109  00352C  2397               	addwfc	(sqrt@frac+3)& (0+255),f,b
  5110  00352E  D01D               	goto	l6681
  5111  003530                     l6679:
  5112                           
  5113                           ; BSR set to: 1
  5114  003530  C18A  F0C5         	movff	sqrt@grs,??_sqrt
  5115  003534  C18B  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  5116  003538  C18C  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  5117  00353C  C18D  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  5118  003540  0100               	movlb	0	; () banked
  5119  003542  1FC5               	comf	??_sqrt& (0+255),f,b
  5120  003544  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  5121  003546  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  5122  003548  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  5123  00354A  0100               	movlb	0	; () banked
  5124  00354C  51C5               	movf	??_sqrt& (0+255),w,b
  5125  00354E  0101               	movlb	1	; () banked
  5126  003550  1794               	andwf	sqrt@frac& (0+255),f,b
  5127  003552  0100               	movlb	0	; () banked
  5128  003554  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  5129  003556  0101               	movlb	1	; () banked
  5130  003558  1795               	andwf	(sqrt@frac+1)& (0+255),f,b
  5131  00355A  0100               	movlb	0	; () banked
  5132  00355C  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  5133  00355E  0101               	movlb	1	; () banked
  5134  003560  1796               	andwf	(sqrt@frac+2)& (0+255),f,b
  5135  003562  0100               	movlb	0	; () banked
  5136  003564  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  5137  003566  0101               	movlb	1	; () banked
  5138  003568  1797               	andwf	(sqrt@frac+3)& (0+255),f,b
  5139  00356A                     l6681:
  5140                           
  5141                           ; BSR set to: 1
  5142  00356A  C18A  F0C5         	movff	sqrt@grs,??_sqrt
  5143  00356E  C18B  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  5144  003572  C18C  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  5145  003576  C18D  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  5146  00357A  0100               	movlb	0	; () banked
  5147  00357C  90D8               	bcf	status,0,c
  5148  00357E  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  5149  003580  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  5150  003582  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  5151  003584  33C5               	rrcf	??_sqrt& (0+255),f,b
  5152  003586  C0C5  F18A         	movff	??_sqrt,sqrt@grs
  5153  00358A  C0C6  F18B         	movff	??_sqrt+1,sqrt@grs+1
  5154  00358E  C0C7  F18C         	movff	??_sqrt+2,sqrt@grs+2
  5155  003592  C0C8  F18D         	movff	??_sqrt+3,sqrt@grs+3
  5156                           
  5157                           ; BSR set to: 0
  5158  003596  0101               	movlb	1	; () banked
  5159  003598  90D8               	bcf	status,0,c
  5160  00359A  3785               	rlcf	sqrt@tfrac& (0+255),f,b
  5161  00359C  3786               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  5162  00359E  3787               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  5163  0035A0  3788               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  5164                           
  5165                           ; BSR set to: 1
  5166  0035A2  0101               	movlb	1	; () banked
  5167  0035A4  2B84               	incf	sqrt@i& (0+255),f,b
  5168  0035A6                     l6687:
  5169                           
  5170                           ; BSR set to: 1
  5171  0035A6  0E18               	movlw	24
  5172  0035A8  0101               	movlb	1	; () banked
  5173  0035AA  6584               	cpfsgt	sqrt@i& (0+255),b
  5174  0035AC  D77E               	goto	l6675
  5175                           
  5176                           ; BSR set to: 1
  5177                           
  5178                           ; BSR set to: 1
  5179  0035AE  C194  F0C5         	movff	sqrt@frac,??_sqrt
  5180  0035B2  C195  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  5181  0035B6  C196  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  5182  0035BA  C197  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  5183  0035BE  0100               	movlb	0	; () banked
  5184  0035C0  90D8               	bcf	status,0,c
  5185  0035C2  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  5186  0035C4  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  5187  0035C6  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  5188  0035C8  33C5               	rrcf	??_sqrt& (0+255),f,b
  5189  0035CA  C0C5  F194         	movff	??_sqrt,sqrt@frac
  5190  0035CE  C0C6  F195         	movff	??_sqrt+1,sqrt@frac+1
  5191  0035D2  C0C7  F196         	movff	??_sqrt+2,sqrt@frac+2
  5192  0035D6  C0C8  F197         	movff	??_sqrt+3,sqrt@frac+3
  5193                           
  5194                           ; BSR set to: 0
  5195  0035DA  0E01               	movlw	1
  5196  0035DC  0101               	movlb	1	; () banked
  5197  0035DE  1594               	andwf	sqrt@frac& (0+255),w,b
  5198  0035E0  0101               	movlb	1	; () banked
  5199  0035E2  6F8A               	movwf	sqrt@grs& (0+255),b
  5200  0035E4  0E00               	movlw	0
  5201  0035E6  0101               	movlb	1	; () banked
  5202  0035E8  1595               	andwf	(sqrt@frac+1)& (0+255),w,b
  5203  0035EA  0101               	movlb	1	; () banked
  5204  0035EC  6F8B               	movwf	(sqrt@grs+1)& (0+255),b
  5205  0035EE  0E00               	movlw	0
  5206  0035F0  0101               	movlb	1	; () banked
  5207  0035F2  1596               	andwf	(sqrt@frac+2)& (0+255),w,b
  5208  0035F4  0101               	movlb	1	; () banked
  5209  0035F6  6F8C               	movwf	(sqrt@grs+2)& (0+255),b
  5210  0035F8  0E00               	movlw	0
  5211  0035FA  0101               	movlb	1	; () banked
  5212  0035FC  1597               	andwf	(sqrt@frac+3)& (0+255),w,b
  5213  0035FE  0101               	movlb	1	; () banked
  5214  003600  6F8D               	movwf	(sqrt@grs+3)& (0+255),b
  5215                           
  5216                           ; BSR set to: 1
  5217  003602  C194  F0C5         	movff	sqrt@frac,??_sqrt
  5218  003606  C195  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  5219  00360A  C196  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  5220  00360E  C197  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  5221  003612  0100               	movlb	0	; () banked
  5222  003614  90D8               	bcf	status,0,c
  5223  003616  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  5224  003618  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  5225  00361A  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  5226  00361C  33C5               	rrcf	??_sqrt& (0+255),f,b
  5227  00361E  C0C5  F194         	movff	??_sqrt,sqrt@frac
  5228  003622  C0C6  F195         	movff	??_sqrt+1,sqrt@frac+1
  5229  003626  C0C7  F196         	movff	??_sqrt+2,sqrt@frac+2
  5230  00362A  C0C8  F197         	movff	??_sqrt+3,sqrt@frac+3
  5231  00362E  0101               	movlb	1	; () banked
  5232  003630  518A               	movf	sqrt@grs& (0+255),w,b
  5233  003632  0101               	movlb	1	; () banked
  5234  003634  2794               	addwf	sqrt@frac& (0+255),f,b
  5235  003636  0101               	movlb	1	; () banked
  5236  003638  518B               	movf	(sqrt@grs+1)& (0+255),w,b
  5237  00363A  0101               	movlb	1	; () banked
  5238  00363C  2395               	addwfc	(sqrt@frac+1)& (0+255),f,b
  5239  00363E  0101               	movlb	1	; () banked
  5240  003640  518C               	movf	(sqrt@grs+2)& (0+255),w,b
  5241  003642  0101               	movlb	1	; () banked
  5242  003644  2396               	addwfc	(sqrt@frac+2)& (0+255),f,b
  5243  003646  0101               	movlb	1	; () banked
  5244  003648  518D               	movf	(sqrt@grs+3)& (0+255),w,b
  5245  00364A  0101               	movlb	1	; () banked
  5246  00364C  2397               	addwfc	(sqrt@frac+3)& (0+255),f,b
  5247                           
  5248                           ; BSR set to: 1
  5249  00364E  0101               	movlb	1	; () banked
  5250  003650  A197               	btfss	(sqrt@frac+3)& (0+255),0,b
  5251  003652  D019               	goto	l6699
  5252                           
  5253                           ; BSR set to: 1
  5254  003654  C194  F0C5         	movff	sqrt@frac,??_sqrt
  5255  003658  C195  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  5256  00365C  C196  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  5257  003660  C197  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  5258  003664  0100               	movlb	0	; () banked
  5259  003666  90D8               	bcf	status,0,c
  5260  003668  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  5261  00366A  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  5262  00366C  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  5263  00366E  33C5               	rrcf	??_sqrt& (0+255),f,b
  5264  003670  C0C5  F194         	movff	??_sqrt,sqrt@frac
  5265  003674  C0C6  F195         	movff	??_sqrt+1,sqrt@frac+1
  5266  003678  C0C7  F196         	movff	??_sqrt+2,sqrt@frac+2
  5267  00367C  C0C8  F197         	movff	??_sqrt+3,sqrt@frac+3
  5268  003680  0101               	movlb	1	; () banked
  5269  003682  4B8E               	infsnz	sqrt@exp& (0+255),f,b
  5270  003684  2B8F               	incf	(sqrt@exp+1)& (0+255),f,b
  5271  003686                     l6699:
  5272                           
  5273                           ; BSR set to: 1
  5274  003686  0EFF               	movlw	255
  5275  003688  0101               	movlb	1	; () banked
  5276  00368A  1594               	andwf	sqrt@frac& (0+255),w,b
  5277  00368C  0101               	movlb	1	; () banked
  5278  00368E  6F90               	movwf	sqrt@root& (0+255),b
  5279  003690  0EFF               	movlw	255
  5280  003692  0101               	movlb	1	; () banked
  5281  003694  1595               	andwf	(sqrt@frac+1)& (0+255),w,b
  5282  003696  0101               	movlb	1	; () banked
  5283  003698  6F91               	movwf	(sqrt@root+1)& (0+255),b
  5284  00369A  0E7F               	movlw	127
  5285  00369C  0101               	movlb	1	; () banked
  5286  00369E  1596               	andwf	(sqrt@frac+2)& (0+255),w,b
  5287  0036A0  0101               	movlb	1	; () banked
  5288  0036A2  6F92               	movwf	(sqrt@root+2)& (0+255),b
  5289  0036A4  0E00               	movlw	0
  5290  0036A6  0101               	movlb	1	; () banked
  5291  0036A8  1597               	andwf	(sqrt@frac+3)& (0+255),w,b
  5292  0036AA  0101               	movlb	1	; () banked
  5293  0036AC  6F93               	movwf	(sqrt@root+3)& (0+255),b
  5294                           
  5295                           ; BSR set to: 1
  5296  0036AE  C18E  F189         	movff	sqrt@exp,sqrt@p
  5297                           
  5298                           ; BSR set to: 1
  5299  0036B2  0101               	movlb	1	; () banked
  5300  0036B4  A189               	btfss	sqrt@p& (0+255),0,b
  5301  0036B6  D002               	goto	l6707
  5302                           
  5303                           ; BSR set to: 1
  5304  0036B8  0101               	movlb	1	; () banked
  5305  0036BA  8F92               	bsf	(sqrt@root+2)& (0+255),7,b
  5306  0036BC                     l6707:
  5307                           
  5308                           ; BSR set to: 1
  5309  0036BC  0101               	movlb	1	; () banked
  5310  0036BE  90D8               	bcf	status,0,c
  5311  0036C0  3189               	rrcf	sqrt@p& (0+255),w,b
  5312  0036C2  0101               	movlb	1	; () banked
  5313  0036C4  6F93               	movwf	(sqrt@root+3)& (0+255),b
  5314                           
  5315                           ; BSR set to: 1
  5316  0036C6  0101               	movlb	1	; () banked
  5317  0036C8  9F93               	bcf	(sqrt@root+3)& (0+255),7,b
  5318                           
  5319                           ; BSR set to: 1
  5320  0036CA  C190  F0C1         	movff	sqrt@root,?_sqrt
  5321  0036CE  C191  F0C2         	movff	sqrt@root+1,?_sqrt+1
  5322  0036D2  C192  F0C3         	movff	sqrt@root+2,?_sqrt+2
  5323  0036D6  C193  F0C4         	movff	sqrt@root+3,?_sqrt+3
  5324  0036DA  0012               	return	
  5325  0036DC                     __end_of_sqrt:
  5326                           	opt stack 0
  5327                           tblptru	equ	0xFF8
  5328                           tblptrh	equ	0xFF7
  5329                           tblptrl	equ	0xFF6
  5330                           tablat	equ	0xFF5
  5331                           postinc0	equ	0xFEE
  5332                           wreg	equ	0xFE8
  5333                           postdec1	equ	0xFE5
  5334                           fsr1l	equ	0xFE1
  5335                           postinc2	equ	0xFDE
  5336                           postdec2	equ	0xFDD
  5337                           fsr2h	equ	0xFDA
  5338                           fsr2l	equ	0xFD9
  5339                           status	equ	0xFD8
  5340                           
  5341 ;; *************** function _atan *****************
  5342 ;; Defined at:
  5343 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  5344 ;; Parameters:    Size  Location     Type
  5345 ;;  f               4  113[BANK0 ] unsigned char 
  5346 ;; Auto vars:     Size  Location     Type
  5347 ;;  val             4   13[BANK1 ] unsigned char 
  5348 ;;  val_squared     4    9[BANK1 ] unsigned char 
  5349 ;;  x               4    4[BANK1 ] unsigned char 
  5350 ;;  y               4    0[BANK1 ] unsigned char 
  5351 ;;  recip           1    8[BANK1 ] unsigned char 
  5352 ;; Return value:  Size  Location     Type
  5353 ;;                  4  113[BANK0 ] unsigned char 
  5354 ;; Registers used:
  5355 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5356 ;; Tracked objects:
  5357 ;;		On entry : 0/0
  5358 ;;		On exit  : 0/0
  5359 ;;		Unchanged: 0/0
  5360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5361 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5362 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5364 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5365 ;;Total ram usage:       21 bytes
  5366 ;; Hardware stack levels used:    1
  5367 ;; Hardware stack levels required when called:    6
  5368 ;; This function calls:
  5369 ;;		___fladd
  5370 ;;		___fldiv
  5371 ;;		___flge
  5372 ;;		___flmul
  5373 ;;		___flneg
  5374 ;;		_eval_poly
  5375 ;;		_fabs
  5376 ;; This function is called by:
  5377 ;;		_asin
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           
  5381                           	psect	text15
  5382  0046F0                     __ptext15:
  5383                           	opt stack 0
  5384  0046F0                     _atan:
  5385                           	opt stack 21
  5386                           
  5387                           ;incstack = 0
  5388  0046F0  C0D1  F0AD         	movff	atan@f,fabs@d
  5389  0046F4  C0D2  F0AE         	movff	atan@f+1,fabs@d+1
  5390  0046F8  C0D3  F0AF         	movff	atan@f+2,fabs@d+2
  5391  0046FC  C0D4  F0B0         	movff	atan@f+3,fabs@d+3
  5392  004700  EC9C  F02D         	call	_fabs	;wreg free
  5393  004704  C0AD  F190         	movff	?_fabs,atan@val
  5394  004708  C0AE  F191         	movff	?_fabs+1,atan@val+1
  5395  00470C  C0AF  F192         	movff	?_fabs+2,atan@val+2
  5396  004710  C0B0  F193         	movff	?_fabs+3,atan@val+3
  5397  004714  0101               	movlb	1	; () banked
  5398  004716  5190               	movf	atan@val& (0+255),w,b
  5399  004718  0101               	movlb	1	; () banked
  5400  00471A  1191               	iorwf	(atan@val+1)& (0+255),w,b
  5401  00471C  0101               	movlb	1	; () banked
  5402  00471E  1192               	iorwf	(atan@val+2)& (0+255),w,b
  5403  004720  0101               	movlb	1	; () banked
  5404  004722  1193               	iorwf	(atan@val+3)& (0+255),w,b
  5405  004724  A4D8               	btfss	status,2,c
  5406  004726  D00A               	goto	l6721
  5407                           
  5408                           ; BSR set to: 1
  5409  004728  0E00               	movlw	0
  5410  00472A  0100               	movlb	0	; () banked
  5411  00472C  6FD1               	movwf	?_atan& (0+255),b
  5412  00472E  0E00               	movlw	0
  5413  004730  6FD2               	movwf	(?_atan+1)& (0+255),b
  5414  004732  0E00               	movlw	0
  5415  004734  6FD3               	movwf	(?_atan+2)& (0+255),b
  5416  004736  0E00               	movlw	0
  5417  004738  6FD4               	movwf	(?_atan+3)& (0+255),b
  5418                           
  5419                           ; BSR set to: 0
  5420  00473A  0012               	return	
  5421  00473C                     l6721:
  5422  00473C  0E00               	movlw	0
  5423  00473E  0100               	movlb	0	; () banked
  5424  004740  6FB1               	movwf	___flge@ff1& (0+255),b
  5425  004742  0E00               	movlw	0
  5426  004744  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  5427  004746  0E80               	movlw	128
  5428  004748  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  5429  00474A  0E3F               	movlw	63
  5430  00474C  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  5431  00474E  C190  F0B5         	movff	atan@val,___flge@ff2
  5432  004752  C191  F0B6         	movff	atan@val+1,___flge@ff2+1
  5433  004756  C192  F0B7         	movff	atan@val+2,___flge@ff2+2
  5434  00475A  C193  F0B8         	movff	atan@val+3,___flge@ff2+3
  5435  00475E  EC48  F028         	call	___flge	;wreg free
  5436  004762  0100               	movlb	0	; () banked
  5437  004764  B0D8               	btfsc	status,0,c
  5438  004766  D002               	goto	u8510
  5439  004768  0E01               	movlw	1
  5440  00476A  D001               	goto	u8520
  5441  00476C                     u8510:
  5442  00476C  0E00               	movlw	0
  5443  00476E                     u8520:
  5444  00476E  0101               	movlb	1	; () banked
  5445  004770  6F8B               	movwf	atan@recip& (0+255),b
  5446  004772  0101               	movlb	1	; () banked
  5447  004774  518B               	movf	atan@recip& (0+255),w,b
  5448  004776  B4D8               	btfsc	status,2,c
  5449  004778  D01B               	goto	l6725
  5450                           
  5451                           ; BSR set to: 1
  5452  00477A  0E00               	movlw	0
  5453  00477C  0100               	movlb	0	; () banked
  5454  00477E  6F77               	movwf	___fldiv@b& (0+255),b
  5455  004780  0E00               	movlw	0
  5456  004782  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5457  004784  0E80               	movlw	128
  5458  004786  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5459  004788  0E3F               	movlw	63
  5460  00478A  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5461  00478C  C190  F07B         	movff	atan@val,___fldiv@a
  5462  004790  C191  F07C         	movff	atan@val+1,___fldiv@a+1
  5463  004794  C192  F07D         	movff	atan@val+2,___fldiv@a+2
  5464  004798  C193  F07E         	movff	atan@val+3,___fldiv@a+3
  5465  00479C  EC6E  F01B         	call	___fldiv	;wreg free
  5466  0047A0  C077  F190         	movff	?___fldiv,atan@val
  5467  0047A4  C078  F191         	movff	?___fldiv+1,atan@val+1
  5468  0047A8  C079  F192         	movff	?___fldiv+2,atan@val+2
  5469  0047AC  C07A  F193         	movff	?___fldiv+3,atan@val+3
  5470  0047B0                     l6725:
  5471  0047B0  C190  F090         	movff	atan@val,___flmul@b
  5472  0047B4  C191  F091         	movff	atan@val+1,___flmul@b+1
  5473  0047B8  C192  F092         	movff	atan@val+2,___flmul@b+2
  5474  0047BC  C193  F093         	movff	atan@val+3,___flmul@b+3
  5475  0047C0  C190  F094         	movff	atan@val,___flmul@a
  5476  0047C4  C191  F095         	movff	atan@val+1,___flmul@a+1
  5477  0047C8  C192  F096         	movff	atan@val+2,___flmul@a+2
  5478  0047CC  C193  F097         	movff	atan@val+3,___flmul@a+3
  5479  0047D0  EC36  F017         	call	___flmul	;wreg free
  5480  0047D4  C090  F18C         	movff	?___flmul,atan@val_squared
  5481  0047D8  C091  F18D         	movff	?___flmul+1,atan@val_squared+1
  5482  0047DC  C092  F18E         	movff	?___flmul+2,atan@val_squared+2
  5483  0047E0  C093  F18F         	movff	?___flmul+3,atan@val_squared+3
  5484  0047E4  C18C  F0C1         	movff	atan@val_squared,eval_poly@x
  5485  0047E8  C18D  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  5486  0047EC  C18E  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  5487  0047F0  C18F  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  5488  0047F4  0E19               	movlw	low atan@coeff_b
  5489  0047F6  0100               	movlb	0	; () banked
  5490  0047F8  6FC5               	movwf	eval_poly@d& (0+255),b
  5491  0047FA  0E0D               	movlw	high atan@coeff_b
  5492  0047FC  0100               	movlb	0	; () banked
  5493  0047FE  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  5494  004800  0E00               	movlw	0
  5495  004802  0100               	movlb	0	; () banked
  5496  004804  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  5497  004806  0E04               	movlw	4
  5498  004808  6FC7               	movwf	eval_poly@n& (0+255),b
  5499  00480A  EC3A  F02A         	call	_eval_poly	;wreg free
  5500  00480E  C0C1  F183         	movff	?_eval_poly,atan@y
  5501  004812  C0C2  F184         	movff	?_eval_poly+1,atan@y+1
  5502  004816  C0C3  F185         	movff	?_eval_poly+2,atan@y+2
  5503  00481A  C0C4  F186         	movff	?_eval_poly+3,atan@y+3
  5504  00481E  C18C  F0C1         	movff	atan@val_squared,eval_poly@x
  5505  004822  C18D  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  5506  004826  C18E  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  5507  00482A  C18F  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  5508  00482E  0E01               	movlw	low atan@coeff_a
  5509  004830  0100               	movlb	0	; () banked
  5510  004832  6FC5               	movwf	eval_poly@d& (0+255),b
  5511  004834  0E0D               	movlw	high atan@coeff_a
  5512  004836  0100               	movlb	0	; () banked
  5513  004838  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  5514  00483A  0E00               	movlw	0
  5515  00483C  0100               	movlb	0	; () banked
  5516  00483E  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  5517  004840  0E05               	movlw	5
  5518  004842  6FC7               	movwf	eval_poly@n& (0+255),b
  5519  004844  EC3A  F02A         	call	_eval_poly	;wreg free
  5520  004848  C0C1  F187         	movff	?_eval_poly,atan@x
  5521  00484C  C0C2  F188         	movff	?_eval_poly+1,atan@x+1
  5522  004850  C0C3  F189         	movff	?_eval_poly+2,atan@x+2
  5523  004854  C0C4  F18A         	movff	?_eval_poly+3,atan@x+3
  5524  004858  C190  F090         	movff	atan@val,___flmul@b
  5525  00485C  C191  F091         	movff	atan@val+1,___flmul@b+1
  5526  004860  C192  F092         	movff	atan@val+2,___flmul@b+2
  5527  004864  C193  F093         	movff	atan@val+3,___flmul@b+3
  5528  004868  C183  F07B         	movff	atan@y,___fldiv@a
  5529  00486C  C184  F07C         	movff	atan@y+1,___fldiv@a+1
  5530  004870  C185  F07D         	movff	atan@y+2,___fldiv@a+2
  5531  004874  C186  F07E         	movff	atan@y+3,___fldiv@a+3
  5532  004878  C187  F077         	movff	atan@x,___fldiv@b
  5533  00487C  C188  F078         	movff	atan@x+1,___fldiv@b+1
  5534  004880  C189  F079         	movff	atan@x+2,___fldiv@b+2
  5535  004884  C18A  F07A         	movff	atan@x+3,___fldiv@b+3
  5536  004888  EC6E  F01B         	call	___fldiv	;wreg free
  5537  00488C  C077  F094         	movff	?___fldiv,___flmul@a
  5538  004890  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  5539  004894  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  5540  004898  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  5541  00489C  EC36  F017         	call	___flmul	;wreg free
  5542  0048A0  C090  F190         	movff	?___flmul,atan@val
  5543  0048A4  C091  F191         	movff	?___flmul+1,atan@val+1
  5544  0048A8  C092  F192         	movff	?___flmul+2,atan@val+2
  5545  0048AC  C093  F193         	movff	?___flmul+3,atan@val+3
  5546  0048B0  0101               	movlb	1	; () banked
  5547  0048B2  518B               	movf	atan@recip& (0+255),w,b
  5548  0048B4  0101               	movlb	1	; () banked
  5549  0048B6  B4D8               	btfsc	status,2,c
  5550  0048B8  D025               	goto	l6737
  5551                           
  5552                           ; BSR set to: 1
  5553  0048BA  C190  F0A9         	movff	atan@val,___flneg@f1
  5554  0048BE  C191  F0AA         	movff	atan@val+1,___flneg@f1+1
  5555  0048C2  C192  F0AB         	movff	atan@val+2,___flneg@f1+2
  5556  0048C6  C193  F0AC         	movff	atan@val+3,___flneg@f1+3
  5557  0048CA  ECD8  F02D         	call	___flneg	;wreg free
  5558  0048CE  C0A9  F0AD         	movff	?___flneg,___fladd@b
  5559  0048D2  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  5560  0048D6  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  5561  0048DA  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  5562  0048DE  0EDB               	movlw	219
  5563  0048E0  0100               	movlb	0	; () banked
  5564  0048E2  6FB1               	movwf	___fladd@a& (0+255),b
  5565  0048E4  0E0F               	movlw	15
  5566  0048E6  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  5567  0048E8  0EC9               	movlw	201
  5568  0048EA  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  5569  0048EC  0E3F               	movlw	63
  5570  0048EE  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  5571  0048F0  ECE2  F014         	call	___fladd	;wreg free
  5572  0048F4  C0AD  F190         	movff	?___fladd,atan@val
  5573  0048F8  C0AE  F191         	movff	?___fladd+1,atan@val+1
  5574  0048FC  C0AF  F192         	movff	?___fladd+2,atan@val+2
  5575  004900  C0B0  F193         	movff	?___fladd+3,atan@val+3
  5576  004904                     l6737:
  5577  004904  0100               	movlb	0	; () banked
  5578  004906  BFD4               	btfsc	(atan@f+3)& (0+255),7,b
  5579  004908  D009               	goto	l6741
  5580                           
  5581                           ; BSR set to: 0
  5582  00490A  C190  F0D1         	movff	atan@val,?_atan
  5583  00490E  C191  F0D2         	movff	atan@val+1,?_atan+1
  5584  004912  C192  F0D3         	movff	atan@val+2,?_atan+2
  5585  004916  C193  F0D4         	movff	atan@val+3,?_atan+3
  5586  00491A  0012               	return	
  5587  00491C                     l6741:
  5588                           
  5589                           ; BSR set to: 0
  5590  00491C  C190  F0A9         	movff	atan@val,___flneg@f1
  5591  004920  C191  F0AA         	movff	atan@val+1,___flneg@f1+1
  5592  004924  C192  F0AB         	movff	atan@val+2,___flneg@f1+2
  5593  004928  C193  F0AC         	movff	atan@val+3,___flneg@f1+3
  5594  00492C  ECD8  F02D         	call	___flneg	;wreg free
  5595  004930  C0A9  F0D1         	movff	?___flneg,?_atan
  5596  004934  C0AA  F0D2         	movff	?___flneg+1,?_atan+1
  5597  004938  C0AB  F0D3         	movff	?___flneg+2,?_atan+2
  5598  00493C  C0AC  F0D4         	movff	?___flneg+3,?_atan+3
  5599  004940  0012               	return	
  5600  004942                     __end_of_atan:
  5601                           	opt stack 0
  5602                           tblptru	equ	0xFF8
  5603                           tblptrh	equ	0xFF7
  5604                           tblptrl	equ	0xFF6
  5605                           tablat	equ	0xFF5
  5606                           postinc0	equ	0xFEE
  5607                           wreg	equ	0xFE8
  5608                           postdec1	equ	0xFE5
  5609                           fsr1l	equ	0xFE1
  5610                           postinc2	equ	0xFDE
  5611                           postdec2	equ	0xFDD
  5612                           fsr2h	equ	0xFDA
  5613                           fsr2l	equ	0xFD9
  5614                           status	equ	0xFD8
  5615                           
  5616 ;; *************** function _fabs *****************
  5617 ;; Defined at:
  5618 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;  d               4   77[BANK0 ] unsigned char 
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;		None
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  4   77[BANK0 ] unsigned char 
  5625 ;; Registers used:
  5626 ;;		wreg, status,2, status,0, cstack
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5632 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5635 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5636 ;;Total ram usage:        4 bytes
  5637 ;; Hardware stack levels used:    1
  5638 ;; Hardware stack levels required when called:    5
  5639 ;; This function calls:
  5640 ;;		___flneg
  5641 ;; This function is called by:
  5642 ;;		_asin
  5643 ;;		_atan
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647                           	psect	text16
  5648  005B38                     __ptext16:
  5649                           	opt stack 0
  5650  005B38                     _fabs:
  5651                           	opt stack 22
  5652                           
  5653                           ;incstack = 0
  5654  005B38  0100               	movlb	0	; () banked
  5655  005B3A  AFB0               	btfss	(fabs@d+3)& (0+255),7,b
  5656  005B3C  D013               	goto	l1045
  5657                           
  5658                           ; BSR set to: 0
  5659  005B3E  C0AD  F0A9         	movff	fabs@d,___flneg@f1
  5660  005B42  C0AE  F0AA         	movff	fabs@d+1,___flneg@f1+1
  5661  005B46  C0AF  F0AB         	movff	fabs@d+2,___flneg@f1+2
  5662  005B4A  C0B0  F0AC         	movff	fabs@d+3,___flneg@f1+3
  5663  005B4E  ECD8  F02D         	call	___flneg	;wreg free
  5664  005B52  C0A9  F0AD         	movff	?___flneg,?_fabs
  5665  005B56  C0AA  F0AE         	movff	?___flneg+1,?_fabs+1
  5666  005B5A  C0AB  F0AF         	movff	?___flneg+2,?_fabs+2
  5667  005B5E  C0AC  F0B0         	movff	?___flneg+3,?_fabs+3
  5668  005B62  0012               	return	
  5669  005B64                     l1045:
  5670                           
  5671                           ; BSR set to: 0
  5672  005B64  C0AD  F0AD         	movff	fabs@d,?_fabs
  5673  005B68  C0AE  F0AE         	movff	fabs@d+1,?_fabs+1
  5674  005B6C  C0AF  F0AF         	movff	fabs@d+2,?_fabs+2
  5675  005B70  C0B0  F0B0         	movff	fabs@d+3,?_fabs+3
  5676  005B74  0012               	return		;funcret
  5677  005B76                     __end_of_fabs:
  5678                           	opt stack 0
  5679                           tblptru	equ	0xFF8
  5680                           tblptrh	equ	0xFF7
  5681                           tblptrl	equ	0xFF6
  5682                           tablat	equ	0xFF5
  5683                           postinc0	equ	0xFEE
  5684                           wreg	equ	0xFE8
  5685                           postdec1	equ	0xFE5
  5686                           fsr1l	equ	0xFE1
  5687                           postinc2	equ	0xFDE
  5688                           postdec2	equ	0xFDD
  5689                           fsr2h	equ	0xFDA
  5690                           fsr2l	equ	0xFD9
  5691                           status	equ	0xFD8
  5692                           
  5693 ;; *************** function ___flneg *****************
  5694 ;; Defined at:
  5695 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  5696 ;; Parameters:    Size  Location     Type
  5697 ;;  f1              4   73[BANK0 ] unsigned char 
  5698 ;; Auto vars:     Size  Location     Type
  5699 ;;		None
  5700 ;; Return value:  Size  Location     Type
  5701 ;;                  4   73[BANK0 ] unsigned char 
  5702 ;; Registers used:
  5703 ;;		wreg, status,2, status,0
  5704 ;; Tracked objects:
  5705 ;;		On entry : 0/0
  5706 ;;		On exit  : 0/0
  5707 ;;		Unchanged: 0/0
  5708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5709 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5712 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5713 ;;Total ram usage:        4 bytes
  5714 ;; Hardware stack levels used:    1
  5715 ;; Hardware stack levels required when called:    4
  5716 ;; This function calls:
  5717 ;;		Nothing
  5718 ;; This function is called by:
  5719 ;;		_matematica
  5720 ;;		_asin
  5721 ;;		_atan
  5722 ;;		_fabs
  5723 ;;		_sin
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text17
  5728  005BB0                     __ptext17:
  5729                           	opt stack 0
  5730  005BB0                     ___flneg:
  5731                           	opt stack 22
  5732                           
  5733                           ;incstack = 0
  5734  005BB0  0100               	movlb	0	; () banked
  5735  005BB2  51A9               	movf	___flneg@f1& (0+255),w,b
  5736  005BB4  0100               	movlb	0	; () banked
  5737  005BB6  11AA               	iorwf	(___flneg@f1+1)& (0+255),w,b
  5738  005BB8  0100               	movlb	0	; () banked
  5739  005BBA  11AB               	iorwf	(___flneg@f1+2)& (0+255),w,b
  5740  005BBC  0100               	movlb	0	; () banked
  5741  005BBE  11AC               	iorwf	(___flneg@f1+3)& (0+255),w,b
  5742  005BC0  B4D8               	btfsc	status,2,c
  5743  005BC2  D009               	goto	l6333
  5744                           
  5745                           ; BSR set to: 0
  5746  005BC4  0E00               	movlw	0
  5747  005BC6  0100               	movlb	0	; () banked
  5748  005BC8  1BA9               	xorwf	___flneg@f1& (0+255),f,b
  5749  005BCA  0E00               	movlw	0
  5750  005BCC  1BAA               	xorwf	(___flneg@f1+1)& (0+255),f,b
  5751  005BCE  0E00               	movlw	0
  5752  005BD0  1BAB               	xorwf	(___flneg@f1+2)& (0+255),f,b
  5753  005BD2  0E80               	movlw	128
  5754  005BD4  1BAC               	xorwf	(___flneg@f1+3)& (0+255),f,b
  5755  005BD6                     l6333:
  5756                           
  5757                           ; BSR set to: 0
  5758  005BD6  C0A9  F0A9         	movff	___flneg@f1,?___flneg
  5759  005BDA  C0AA  F0AA         	movff	___flneg@f1+1,?___flneg+1
  5760  005BDE  C0AB  F0AB         	movff	___flneg@f1+2,?___flneg+2
  5761  005BE2  C0AC  F0AC         	movff	___flneg@f1+3,?___flneg+3
  5762  005BE6  0012               	return	
  5763  005BE8                     __end_of___flneg:
  5764                           	opt stack 0
  5765                           tblptru	equ	0xFF8
  5766                           tblptrh	equ	0xFF7
  5767                           tblptrl	equ	0xFF6
  5768                           tablat	equ	0xFF5
  5769                           postinc0	equ	0xFEE
  5770                           wreg	equ	0xFE8
  5771                           postdec1	equ	0xFE5
  5772                           fsr1l	equ	0xFE1
  5773                           postinc2	equ	0xFDE
  5774                           postdec2	equ	0xFDD
  5775                           fsr2h	equ	0xFDA
  5776                           fsr2l	equ	0xFD9
  5777                           status	equ	0xFD8
  5778                           
  5779 ;; *************** function _eval_poly *****************
  5780 ;; Defined at:
  5781 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  5782 ;; Parameters:    Size  Location     Type
  5783 ;;  x               4   97[BANK0 ] unsigned char 
  5784 ;;  d               2  101[BANK0 ] PTR const 
  5785 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
  5786 ;;  n               2  103[BANK0 ] int 
  5787 ;; Auto vars:     Size  Location     Type
  5788 ;;  res             4  109[BANK0 ] int 
  5789 ;; Return value:  Size  Location     Type
  5790 ;;                  4   97[BANK0 ] int 
  5791 ;; Registers used:
  5792 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5793 ;; Tracked objects:
  5794 ;;		On entry : 0/0
  5795 ;;		On exit  : 0/0
  5796 ;;		Unchanged: 0/0
  5797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5798 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5799 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5800 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5801 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5802 ;;Total ram usage:       16 bytes
  5803 ;; Hardware stack levels used:    1
  5804 ;; Hardware stack levels required when called:    5
  5805 ;; This function calls:
  5806 ;;		___fladd
  5807 ;;		___flmul
  5808 ;; This function is called by:
  5809 ;;		_atan
  5810 ;;		_sin
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text18
  5815  005474                     __ptext18:
  5816                           	opt stack 0
  5817  005474                     _eval_poly:
  5818                           	opt stack 21
  5819                           
  5820                           ; BSR set to: 0
  5821                           ;incstack = 0
  5822  005474  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  5823  005478  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  5824  00547C  0100               	movlb	0	; () banked
  5825  00547E  90D8               	bcf	status,0,c
  5826  005480  37C9               	rlcf	??_eval_poly& (0+255),f,b
  5827  005482  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5828  005484  0100               	movlb	0	; () banked
  5829  005486  90D8               	bcf	status,0,c
  5830  005488  37C9               	rlcf	??_eval_poly& (0+255),f,b
  5831  00548A  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5832  00548C  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  5833  005490  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  5834  005494  0100               	movlb	0	; () banked
  5835  005496  51C9               	movf	??_eval_poly& (0+255),w,b
  5836  005498  0100               	movlb	0	; () banked
  5837  00549A  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  5838  00549C  0100               	movlb	0	; () banked
  5839  00549E  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  5840  0054A0  0100               	movlb	0	; () banked
  5841  0054A2  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  5842  0054A4  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  5843  0054A8  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  5844  0054AC                     	if	0	;tblptru may be non-zero
  5845  0054AC                     	endif
  5846  0054AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5847  0054AC  0E00               	movlw	low (__mediumconst shr (0+16))
  5848  0054AE  6EF8               	movwf	tblptru,c
  5849  0054B0                     	endif
  5850  0054B0  0009               	tblrd		*+
  5851  0054B2  CFF5 F0CD          	movff	tablat,eval_poly@res
  5852  0054B6  0009               	tblrd		*+
  5853  0054B8  CFF5 F0CE          	movff	tablat,eval_poly@res+1
  5854  0054BC  0009               	tblrd		*+
  5855  0054BE  CFF5 F0CF          	movff	tablat,eval_poly@res+2
  5856  0054C2  000A               	tblrd		*-
  5857  0054C4  CFF5 F0D0          	movff	tablat,eval_poly@res+3
  5858  0054C8  D052               	goto	l6591
  5859  0054CA                     l6589:
  5860                           
  5861                           ; BSR set to: 0
  5862  0054CA  C0CD  F094         	movff	eval_poly@res,___flmul@a
  5863  0054CE  C0CE  F095         	movff	eval_poly@res+1,___flmul@a+1
  5864  0054D2  C0CF  F096         	movff	eval_poly@res+2,___flmul@a+2
  5865  0054D6  C0D0  F097         	movff	eval_poly@res+3,___flmul@a+3
  5866  0054DA  C0C1  F090         	movff	eval_poly@x,___flmul@b
  5867  0054DE  C0C2  F091         	movff	eval_poly@x+1,___flmul@b+1
  5868  0054E2  C0C3  F092         	movff	eval_poly@x+2,___flmul@b+2
  5869  0054E6  C0C4  F093         	movff	eval_poly@x+3,___flmul@b+3
  5870  0054EA  EC36  F017         	call	___flmul	;wreg free
  5871  0054EE  C090  F0AD         	movff	?___flmul,___fladd@b
  5872  0054F2  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  5873  0054F6  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  5874  0054FA  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  5875  0054FE  0100               	movlb	0	; () banked
  5876  005500  07C7               	decf	eval_poly@n& (0+255),f,b
  5877  005502  A0D8               	btfss	status,0,c
  5878  005504  07C8               	decf	(eval_poly@n+1)& (0+255),f,b
  5879  005506  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  5880  00550A  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  5881  00550E  0100               	movlb	0	; () banked
  5882  005510  90D8               	bcf	status,0,c
  5883  005512  37C9               	rlcf	??_eval_poly& (0+255),f,b
  5884  005514  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5885  005516  0100               	movlb	0	; () banked
  5886  005518  90D8               	bcf	status,0,c
  5887  00551A  37C9               	rlcf	??_eval_poly& (0+255),f,b
  5888  00551C  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5889  00551E  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  5890  005522  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  5891  005526  0100               	movlb	0	; () banked
  5892  005528  51C9               	movf	??_eval_poly& (0+255),w,b
  5893  00552A  0100               	movlb	0	; () banked
  5894  00552C  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  5895  00552E  0100               	movlb	0	; () banked
  5896  005530  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  5897  005532  0100               	movlb	0	; () banked
  5898  005534  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  5899  005536  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  5900  00553A  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  5901  00553E                     	if	0	;tblptru may be non-zero
  5902  00553E                     	endif
  5903  00553E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5904  00553E  0E00               	movlw	low (__mediumconst shr (0+16))
  5905  005540  6EF8               	movwf	tblptru,c
  5906  005542                     	endif
  5907  005542  0009               	tblrd		*+
  5908  005544  CFF5 F0B1          	movff	tablat,___fladd@a
  5909  005548  0009               	tblrd		*+
  5910  00554A  CFF5 F0B2          	movff	tablat,___fladd@a+1
  5911  00554E  0009               	tblrd		*+
  5912  005550  CFF5 F0B3          	movff	tablat,___fladd@a+2
  5913  005554  000A               	tblrd		*-
  5914  005556  CFF5 F0B4          	movff	tablat,___fladd@a+3
  5915  00555A  ECE2  F014         	call	___fladd	;wreg free
  5916  00555E  C0AD  F0CD         	movff	?___fladd,eval_poly@res
  5917  005562  C0AE  F0CE         	movff	?___fladd+1,eval_poly@res+1
  5918  005566  C0AF  F0CF         	movff	?___fladd+2,eval_poly@res+2
  5919  00556A  C0B0  F0D0         	movff	?___fladd+3,eval_poly@res+3
  5920  00556E                     l6591:
  5921  00556E  0100               	movlb	0	; () banked
  5922  005570  51C7               	movf	eval_poly@n& (0+255),w,b
  5923  005572  0100               	movlb	0	; () banked
  5924  005574  11C8               	iorwf	(eval_poly@n+1)& (0+255),w,b
  5925  005576  A4D8               	btfss	status,2,c
  5926  005578  D7A8               	goto	l6589
  5927                           
  5928                           ; BSR set to: 0
  5929  00557A  C0CD  F0C1         	movff	eval_poly@res,?_eval_poly
  5930  00557E  C0CE  F0C2         	movff	eval_poly@res+1,?_eval_poly+1
  5931  005582  C0CF  F0C3         	movff	eval_poly@res+2,?_eval_poly+2
  5932  005586  C0D0  F0C4         	movff	eval_poly@res+3,?_eval_poly+3
  5933                           
  5934                           ; BSR set to: 0
  5935  00558A  0012               	return		;funcret
  5936  00558C                     __end_of_eval_poly:
  5937                           	opt stack 0
  5938                           tblptru	equ	0xFF8
  5939                           tblptrh	equ	0xFF7
  5940                           tblptrl	equ	0xFF6
  5941                           tablat	equ	0xFF5
  5942                           postinc0	equ	0xFEE
  5943                           wreg	equ	0xFE8
  5944                           postdec1	equ	0xFE5
  5945                           fsr1l	equ	0xFE1
  5946                           postinc2	equ	0xFDE
  5947                           postdec2	equ	0xFDD
  5948                           fsr2h	equ	0xFDA
  5949                           fsr2l	equ	0xFD9
  5950                           status	equ	0xFD8
  5951                           
  5952 ;; *************** function ___flmul *****************
  5953 ;; Defined at:
  5954 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;  b               4   48[BANK0 ] int 
  5957 ;;  a               4   52[BANK0 ] int 
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;  prod            4   67[BANK0 ] struct .
  5960 ;;  grs             4   62[BANK0 ] unsigned long 
  5961 ;;  temp            2   71[BANK0 ] struct .
  5962 ;;  bexp            1   66[BANK0 ] unsigned char 
  5963 ;;  aexp            1   61[BANK0 ] unsigned char 
  5964 ;;  sign            1   60[BANK0 ] unsigned char 
  5965 ;; Return value:  Size  Location     Type
  5966 ;;                  4   48[BANK0 ] unsigned char 
  5967 ;; Registers used:
  5968 ;;		wreg, status,2, status,0, prodl, prodh
  5969 ;; Tracked objects:
  5970 ;;		On entry : 0/0
  5971 ;;		On exit  : 0/0
  5972 ;;		Unchanged: 0/0
  5973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5974 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5975 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5976 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5977 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5978 ;;Total ram usage:       25 bytes
  5979 ;; Hardware stack levels used:    1
  5980 ;; Hardware stack levels required when called:    4
  5981 ;; This function calls:
  5982 ;;		Nothing
  5983 ;; This function is called by:
  5984 ;;		_parallelo
  5985 ;;		_matematica
  5986 ;;		_asin
  5987 ;;		_atan
  5988 ;;		_eval_poly
  5989 ;;		_sin
  5990 ;; This function uses a non-reentrant model
  5991 ;;
  5992                           
  5993                           	psect	text19
  5994  002E6C                     __ptext19:
  5995                           	opt stack 0
  5996  002E6C                     ___flmul:
  5997                           	opt stack 21
  5998                           
  5999                           ; BSR set to: 0
  6000                           ;incstack = 0
  6001  002E6C  0100               	movlb	0	; () banked
  6002  002E6E  5193               	movf	(___flmul@b+3)& (0+255),w,b
  6003  002E70  0B80               	andlw	128
  6004  002E72  0100               	movlb	0	; () banked
  6005  002E74  6F9C               	movwf	___flmul@sign& (0+255),b
  6006  002E76  0100               	movlb	0	; () banked
  6007  002E78  5193               	movf	(___flmul@b+3)& (0+255),w,b
  6008  002E7A  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  6009  002E7C  0100               	movlb	0	; () banked
  6010  002E7E  6FA2               	movwf	___flmul@bexp& (0+255),b
  6011                           
  6012                           ; BSR set to: 0
  6013  002E80  0100               	movlb	0	; () banked
  6014  002E82  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  6015  002E84  D002               	goto	l6183
  6016                           
  6017                           ; BSR set to: 0
  6018  002E86  0100               	movlb	0	; () banked
  6019  002E88  81A2               	bsf	___flmul@bexp& (0+255),0,b
  6020  002E8A                     l6183:
  6021                           
  6022                           ; BSR set to: 0
  6023  002E8A  0100               	movlb	0	; () banked
  6024  002E8C  51A2               	movf	___flmul@bexp& (0+255),w,b
  6025  002E8E  0100               	movlb	0	; () banked
  6026  002E90  B4D8               	btfsc	status,2,c
  6027  002E92  D010               	goto	l6191
  6028                           
  6029                           ; BSR set to: 0
  6030  002E94  0100               	movlb	0	; () banked
  6031  002E96  29A2               	incf	___flmul@bexp& (0+255),w,b
  6032  002E98  A4D8               	btfss	status,2,c
  6033  002E9A  D009               	goto	l6189
  6034                           
  6035                           ; BSR set to: 0
  6036  002E9C  0E00               	movlw	0
  6037  002E9E  0100               	movlb	0	; () banked
  6038  002EA0  6F90               	movwf	___flmul@b& (0+255),b
  6039  002EA2  0E00               	movlw	0
  6040  002EA4  6F91               	movwf	(___flmul@b+1)& (0+255),b
  6041  002EA6  0E00               	movlw	0
  6042  002EA8  6F92               	movwf	(___flmul@b+2)& (0+255),b
  6043  002EAA  0E00               	movlw	0
  6044  002EAC  6F93               	movwf	(___flmul@b+3)& (0+255),b
  6045  002EAE                     l6189:
  6046                           
  6047                           ; BSR set to: 0
  6048  002EAE  0100               	movlb	0	; () banked
  6049  002EB0  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  6050  002EB2  D009               	goto	l6193
  6051  002EB4                     l6191:
  6052                           
  6053                           ; BSR set to: 0
  6054  002EB4  0E00               	movlw	0
  6055  002EB6  0100               	movlb	0	; () banked
  6056  002EB8  6F90               	movwf	___flmul@b& (0+255),b
  6057  002EBA  0E00               	movlw	0
  6058  002EBC  6F91               	movwf	(___flmul@b+1)& (0+255),b
  6059  002EBE  0E00               	movlw	0
  6060  002EC0  6F92               	movwf	(___flmul@b+2)& (0+255),b
  6061  002EC2  0E00               	movlw	0
  6062  002EC4  6F93               	movwf	(___flmul@b+3)& (0+255),b
  6063  002EC6                     l6193:
  6064                           
  6065                           ; BSR set to: 0
  6066  002EC6  0100               	movlb	0	; () banked
  6067  002EC8  5197               	movf	(___flmul@a+3)& (0+255),w,b
  6068  002ECA  0B80               	andlw	128
  6069  002ECC  0100               	movlb	0	; () banked
  6070  002ECE  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  6071                           
  6072                           ; BSR set to: 0
  6073  002ED0  0100               	movlb	0	; () banked
  6074  002ED2  5197               	movf	(___flmul@a+3)& (0+255),w,b
  6075  002ED4  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  6076  002ED6  0100               	movlb	0	; () banked
  6077  002ED8  6F9D               	movwf	___flmul@aexp& (0+255),b
  6078                           
  6079                           ; BSR set to: 0
  6080  002EDA  0100               	movlb	0	; () banked
  6081  002EDC  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  6082  002EDE  D002               	goto	l6201
  6083                           
  6084                           ; BSR set to: 0
  6085  002EE0  0100               	movlb	0	; () banked
  6086  002EE2  819D               	bsf	___flmul@aexp& (0+255),0,b
  6087  002EE4                     l6201:
  6088                           
  6089                           ; BSR set to: 0
  6090  002EE4  0100               	movlb	0	; () banked
  6091  002EE6  519D               	movf	___flmul@aexp& (0+255),w,b
  6092  002EE8  0100               	movlb	0	; () banked
  6093  002EEA  B4D8               	btfsc	status,2,c
  6094  002EEC  D010               	goto	l6209
  6095                           
  6096                           ; BSR set to: 0
  6097  002EEE  0100               	movlb	0	; () banked
  6098  002EF0  299D               	incf	___flmul@aexp& (0+255),w,b
  6099  002EF2  A4D8               	btfss	status,2,c
  6100  002EF4  D009               	goto	l6207
  6101                           
  6102                           ; BSR set to: 0
  6103  002EF6  0E00               	movlw	0
  6104  002EF8  0100               	movlb	0	; () banked
  6105  002EFA  6F94               	movwf	___flmul@a& (0+255),b
  6106  002EFC  0E00               	movlw	0
  6107  002EFE  6F95               	movwf	(___flmul@a+1)& (0+255),b
  6108  002F00  0E00               	movlw	0
  6109  002F02  6F96               	movwf	(___flmul@a+2)& (0+255),b
  6110  002F04  0E00               	movlw	0
  6111  002F06  6F97               	movwf	(___flmul@a+3)& (0+255),b
  6112  002F08                     l6207:
  6113                           
  6114                           ; BSR set to: 0
  6115  002F08  0100               	movlb	0	; () banked
  6116  002F0A  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  6117  002F0C  D009               	goto	l1390
  6118  002F0E                     l6209:
  6119                           
  6120                           ; BSR set to: 0
  6121  002F0E  0E00               	movlw	0
  6122  002F10  0100               	movlb	0	; () banked
  6123  002F12  6F94               	movwf	___flmul@a& (0+255),b
  6124  002F14  0E00               	movlw	0
  6125  002F16  6F95               	movwf	(___flmul@a+1)& (0+255),b
  6126  002F18  0E00               	movlw	0
  6127  002F1A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  6128  002F1C  0E00               	movlw	0
  6129  002F1E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  6130  002F20                     l1390:
  6131                           
  6132                           ; BSR set to: 0
  6133  002F20  0100               	movlb	0	; () banked
  6134  002F22  519D               	movf	___flmul@aexp& (0+255),w,b
  6135  002F24  0100               	movlb	0	; () banked
  6136  002F26  B4D8               	btfsc	status,2,c
  6137  002F28  D005               	goto	l6213
  6138                           
  6139                           ; BSR set to: 0
  6140  002F2A  0100               	movlb	0	; () banked
  6141  002F2C  51A2               	movf	___flmul@bexp& (0+255),w,b
  6142  002F2E  0100               	movlb	0	; () banked
  6143  002F30  A4D8               	btfss	status,2,c
  6144  002F32  D00A               	goto	l6217
  6145  002F34                     l6213:
  6146                           
  6147                           ; BSR set to: 0
  6148  002F34  0E00               	movlw	0
  6149  002F36  0100               	movlb	0	; () banked
  6150  002F38  6F90               	movwf	?___flmul& (0+255),b
  6151  002F3A  0E00               	movlw	0
  6152  002F3C  6F91               	movwf	(?___flmul+1)& (0+255),b
  6153  002F3E  0E00               	movlw	0
  6154  002F40  6F92               	movwf	(?___flmul+2)& (0+255),b
  6155  002F42  0E00               	movlw	0
  6156  002F44  6F93               	movwf	(?___flmul+3)& (0+255),b
  6157                           
  6158                           ; BSR set to: 0
  6159  002F46  0012               	return	
  6160  002F48                     l6217:
  6161                           
  6162                           ; BSR set to: 0
  6163  002F48  0100               	movlb	0	; () banked
  6164  002F4A  5196               	movf	(___flmul@a+2)& (0+255),w,b
  6165  002F4C  0100               	movlb	0	; () banked
  6166  002F4E  0390               	mulwf	___flmul@b& (0+255),b
  6167  002F50  CFF3 F0A7          	movff	prodl,___flmul@temp
  6168  002F54  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6169                           
  6170                           ; BSR set to: 0
  6171  002F58  0100               	movlb	0	; () banked
  6172  002F5A  51A7               	movf	___flmul@temp& (0+255),w,b
  6173  002F5C  0100               	movlb	0	; () banked
  6174  002F5E  6F9E               	movwf	___flmul@grs& (0+255),b
  6175  002F60  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  6176  002F62  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  6177  002F64  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  6178                           
  6179                           ; BSR set to: 0
  6180  002F66  0100               	movlb	0	; () banked
  6181  002F68  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6182  002F6A  0100               	movlb	0	; () banked
  6183  002F6C  6FA3               	movwf	___flmul@prod& (0+255),b
  6184  002F6E  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  6185  002F70  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  6186  002F72  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  6187  002F74  0100               	movlb	0	; () banked
  6188  002F76  5195               	movf	(___flmul@a+1)& (0+255),w,b
  6189  002F78  0100               	movlb	0	; () banked
  6190  002F7A  0391               	mulwf	(___flmul@b+1)& (0+255),b
  6191  002F7C  CFF3 F0A7          	movff	prodl,___flmul@temp
  6192  002F80  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6193                           
  6194                           ; BSR set to: 0
  6195  002F84  0100               	movlb	0	; () banked
  6196  002F86  51A7               	movf	___flmul@temp& (0+255),w,b
  6197  002F88  0100               	movlb	0	; () banked
  6198  002F8A  279E               	addwf	___flmul@grs& (0+255),f,b
  6199  002F8C  0E00               	movlw	0
  6200  002F8E  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6201  002F90  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6202  002F92  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6203                           
  6204                           ; BSR set to: 0
  6205  002F94  0100               	movlb	0	; () banked
  6206  002F96  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6207  002F98  0100               	movlb	0	; () banked
  6208  002F9A  27A3               	addwf	___flmul@prod& (0+255),f,b
  6209  002F9C  0E00               	movlw	0
  6210  002F9E  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6211  002FA0  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6212  002FA2  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6213  002FA4  0100               	movlb	0	; () banked
  6214  002FA6  5194               	movf	___flmul@a& (0+255),w,b
  6215  002FA8  0100               	movlb	0	; () banked
  6216  002FAA  0392               	mulwf	(___flmul@b+2)& (0+255),b
  6217  002FAC  CFF3 F0A7          	movff	prodl,___flmul@temp
  6218  002FB0  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6219                           
  6220                           ; BSR set to: 0
  6221  002FB4  0100               	movlb	0	; () banked
  6222  002FB6  51A7               	movf	___flmul@temp& (0+255),w,b
  6223  002FB8  0100               	movlb	0	; () banked
  6224  002FBA  279E               	addwf	___flmul@grs& (0+255),f,b
  6225  002FBC  0E00               	movlw	0
  6226  002FBE  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6227  002FC0  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6228  002FC2  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6229                           
  6230                           ; BSR set to: 0
  6231  002FC4  0100               	movlb	0	; () banked
  6232  002FC6  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6233  002FC8  0100               	movlb	0	; () banked
  6234  002FCA  27A3               	addwf	___flmul@prod& (0+255),f,b
  6235  002FCC  0E00               	movlw	0
  6236  002FCE  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6237  002FD0  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6238  002FD2  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6239                           
  6240                           ; BSR set to: 0
  6241  002FD4  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  6242  002FD8  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  6243  002FDC  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  6244  002FE0  0100               	movlb	0	; () banked
  6245  002FE2  6B9E               	clrf	___flmul@grs& (0+255),b
  6246                           
  6247                           ; BSR set to: 0
  6248  002FE4  0100               	movlb	0	; () banked
  6249  002FE6  5194               	movf	___flmul@a& (0+255),w,b
  6250  002FE8  0100               	movlb	0	; () banked
  6251  002FEA  0391               	mulwf	(___flmul@b+1)& (0+255),b
  6252  002FEC  CFF3 F0A7          	movff	prodl,___flmul@temp
  6253  002FF0  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6254                           
  6255                           ; BSR set to: 0
  6256  002FF4  0100               	movlb	0	; () banked
  6257  002FF6  51A7               	movf	___flmul@temp& (0+255),w,b
  6258  002FF8  0100               	movlb	0	; () banked
  6259  002FFA  279E               	addwf	___flmul@grs& (0+255),f,b
  6260  002FFC  0100               	movlb	0	; () banked
  6261  002FFE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6262  003000  0100               	movlb	0	; () banked
  6263  003002  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6264  003004  0E00               	movlw	0
  6265  003006  0100               	movlb	0	; () banked
  6266  003008  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6267  00300A  0E00               	movlw	0
  6268  00300C  0100               	movlb	0	; () banked
  6269  00300E  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6270                           
  6271                           ; BSR set to: 0
  6272  003010  0100               	movlb	0	; () banked
  6273  003012  5195               	movf	(___flmul@a+1)& (0+255),w,b
  6274  003014  0100               	movlb	0	; () banked
  6275  003016  0390               	mulwf	___flmul@b& (0+255),b
  6276  003018  CFF3 F0A7          	movff	prodl,___flmul@temp
  6277  00301C  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6278                           
  6279                           ; BSR set to: 0
  6280  003020  0100               	movlb	0	; () banked
  6281  003022  51A7               	movf	___flmul@temp& (0+255),w,b
  6282  003024  0100               	movlb	0	; () banked
  6283  003026  279E               	addwf	___flmul@grs& (0+255),f,b
  6284  003028  0100               	movlb	0	; () banked
  6285  00302A  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6286  00302C  0100               	movlb	0	; () banked
  6287  00302E  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6288  003030  0E00               	movlw	0
  6289  003032  0100               	movlb	0	; () banked
  6290  003034  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6291  003036  0E00               	movlw	0
  6292  003038  0100               	movlb	0	; () banked
  6293  00303A  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6294                           
  6295                           ; BSR set to: 0
  6296  00303C  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  6297  003040  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  6298  003044  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  6299  003048  0100               	movlb	0	; () banked
  6300  00304A  6B9E               	clrf	___flmul@grs& (0+255),b
  6301  00304C  0100               	movlb	0	; () banked
  6302  00304E  5194               	movf	___flmul@a& (0+255),w,b
  6303  003050  0100               	movlb	0	; () banked
  6304  003052  0390               	mulwf	___flmul@b& (0+255),b
  6305  003054  CFF3 F0A7          	movff	prodl,___flmul@temp
  6306  003058  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6307                           
  6308                           ; BSR set to: 0
  6309  00305C  0100               	movlb	0	; () banked
  6310  00305E  51A7               	movf	___flmul@temp& (0+255),w,b
  6311  003060  0100               	movlb	0	; () banked
  6312  003062  279E               	addwf	___flmul@grs& (0+255),f,b
  6313  003064  0100               	movlb	0	; () banked
  6314  003066  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6315  003068  0100               	movlb	0	; () banked
  6316  00306A  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6317  00306C  0E00               	movlw	0
  6318  00306E  0100               	movlb	0	; () banked
  6319  003070  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6320  003072  0E00               	movlw	0
  6321  003074  0100               	movlb	0	; () banked
  6322  003076  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6323                           
  6324                           ; BSR set to: 0
  6325  003078  0100               	movlb	0	; () banked
  6326  00307A  5196               	movf	(___flmul@a+2)& (0+255),w,b
  6327  00307C  0100               	movlb	0	; () banked
  6328  00307E  0391               	mulwf	(___flmul@b+1)& (0+255),b
  6329  003080  CFF3 F0A7          	movff	prodl,___flmul@temp
  6330  003084  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6331  003088  0100               	movlb	0	; () banked
  6332  00308A  51A7               	movf	___flmul@temp& (0+255),w,b
  6333  00308C  0100               	movlb	0	; () banked
  6334  00308E  27A3               	addwf	___flmul@prod& (0+255),f,b
  6335  003090  0100               	movlb	0	; () banked
  6336  003092  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6337  003094  0100               	movlb	0	; () banked
  6338  003096  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6339  003098  0E00               	movlw	0
  6340  00309A  0100               	movlb	0	; () banked
  6341  00309C  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6342  00309E  0E00               	movlw	0
  6343  0030A0  0100               	movlb	0	; () banked
  6344  0030A2  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6345                           
  6346                           ; BSR set to: 0
  6347  0030A4  0100               	movlb	0	; () banked
  6348  0030A6  5195               	movf	(___flmul@a+1)& (0+255),w,b
  6349  0030A8  0100               	movlb	0	; () banked
  6350  0030AA  0392               	mulwf	(___flmul@b+2)& (0+255),b
  6351  0030AC  CFF3 F0A7          	movff	prodl,___flmul@temp
  6352  0030B0  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6353                           
  6354                           ; BSR set to: 0
  6355  0030B4  0100               	movlb	0	; () banked
  6356  0030B6  51A7               	movf	___flmul@temp& (0+255),w,b
  6357  0030B8  0100               	movlb	0	; () banked
  6358  0030BA  27A3               	addwf	___flmul@prod& (0+255),f,b
  6359  0030BC  0100               	movlb	0	; () banked
  6360  0030BE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6361  0030C0  0100               	movlb	0	; () banked
  6362  0030C2  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6363  0030C4  0E00               	movlw	0
  6364  0030C6  0100               	movlb	0	; () banked
  6365  0030C8  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6366  0030CA  0E00               	movlw	0
  6367  0030CC  0100               	movlb	0	; () banked
  6368  0030CE  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6369  0030D0  0100               	movlb	0	; () banked
  6370  0030D2  5196               	movf	(___flmul@a+2)& (0+255),w,b
  6371  0030D4  0100               	movlb	0	; () banked
  6372  0030D6  0392               	mulwf	(___flmul@b+2)& (0+255),b
  6373  0030D8  CFF3 F0A7          	movff	prodl,___flmul@temp
  6374  0030DC  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6375                           
  6376                           ; BSR set to: 0
  6377  0030E0  0100               	movlb	0	; () banked
  6378  0030E2  51A7               	movf	___flmul@temp& (0+255),w,b
  6379  0030E4  0100               	movlb	0	; () banked
  6380  0030E6  6F98               	movwf	??___flmul& (0+255),b
  6381  0030E8  0100               	movlb	0	; () banked
  6382  0030EA  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6383  0030EC  0100               	movlb	0	; () banked
  6384  0030EE  6F99               	movwf	(??___flmul+1)& (0+255),b
  6385  0030F0  0100               	movlb	0	; () banked
  6386  0030F2  6B9A               	clrf	(??___flmul+2)& (0+255),b
  6387  0030F4  0100               	movlb	0	; () banked
  6388  0030F6  6B9B               	clrf	(??___flmul+3)& (0+255),b
  6389  0030F8  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  6390  0030FC  C099  F09A         	movff	??___flmul+1,??___flmul+2
  6391  003100  C098  F099         	movff	??___flmul,??___flmul+1
  6392  003104  0100               	movlb	0	; () banked
  6393  003106  6B98               	clrf	??___flmul& (0+255),b
  6394  003108  0100               	movlb	0	; () banked
  6395  00310A  5198               	movf	??___flmul& (0+255),w,b
  6396  00310C  0100               	movlb	0	; () banked
  6397  00310E  27A3               	addwf	___flmul@prod& (0+255),f,b
  6398  003110  0100               	movlb	0	; () banked
  6399  003112  5199               	movf	(??___flmul+1)& (0+255),w,b
  6400  003114  0100               	movlb	0	; () banked
  6401  003116  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6402  003118  0100               	movlb	0	; () banked
  6403  00311A  519A               	movf	(??___flmul+2)& (0+255),w,b
  6404  00311C  0100               	movlb	0	; () banked
  6405  00311E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6406  003120  0100               	movlb	0	; () banked
  6407  003122  519B               	movf	(??___flmul+3)& (0+255),w,b
  6408  003124  0100               	movlb	0	; () banked
  6409  003126  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6410                           
  6411                           ; BSR set to: 0
  6412  003128  C09E  F098         	movff	___flmul@grs,??___flmul
  6413  00312C  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  6414  003130  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  6415  003134  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  6416  003138  0E19               	movlw	25
  6417  00313A  D006               	goto	u7740
  6418  00313C                     u7745:
  6419  00313C  0100               	movlb	0	; () banked
  6420  00313E  90D8               	bcf	status,0,c
  6421  003140  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  6422  003142  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  6423  003144  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  6424  003146  3398               	rrcf	??___flmul& (0+255),f,b
  6425  003148                     u7740:
  6426  003148  2EE8               	decfsz	wreg,f,c
  6427  00314A  D7F8               	goto	u7745
  6428  00314C  0100               	movlb	0	; () banked
  6429  00314E  5198               	movf	??___flmul& (0+255),w,b
  6430  003150  0100               	movlb	0	; () banked
  6431  003152  27A3               	addwf	___flmul@prod& (0+255),f,b
  6432  003154  0100               	movlb	0	; () banked
  6433  003156  5199               	movf	(??___flmul+1)& (0+255),w,b
  6434  003158  0100               	movlb	0	; () banked
  6435  00315A  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6436  00315C  0100               	movlb	0	; () banked
  6437  00315E  519A               	movf	(??___flmul+2)& (0+255),w,b
  6438  003160  0100               	movlb	0	; () banked
  6439  003162  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6440  003164  0100               	movlb	0	; () banked
  6441  003166  519B               	movf	(??___flmul+3)& (0+255),w,b
  6442  003168  0100               	movlb	0	; () banked
  6443  00316A  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6444                           
  6445                           ; BSR set to: 0
  6446  00316C  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  6447  003170  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  6448  003174  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  6449  003178  0100               	movlb	0	; () banked
  6450  00317A  6B9E               	clrf	___flmul@grs& (0+255),b
  6451                           
  6452                           ; BSR set to: 0
  6453  00317C  0100               	movlb	0	; () banked
  6454  00317E  519D               	movf	___flmul@aexp& (0+255),w,b
  6455  003180  C0A2  F098         	movff	___flmul@bexp,??___flmul
  6456  003184  0100               	movlb	0	; () banked
  6457  003186  6B99               	clrf	(??___flmul+1)& (0+255),b
  6458  003188  0100               	movlb	0	; () banked
  6459  00318A  2798               	addwf	??___flmul& (0+255),f,b
  6460  00318C  0E00               	movlw	0
  6461  00318E  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  6462  003190  0E82               	movlw	130
  6463  003192  0100               	movlb	0	; () banked
  6464  003194  2598               	addwf	??___flmul& (0+255),w,b
  6465  003196  0100               	movlb	0	; () banked
  6466  003198  6FA7               	movwf	___flmul@temp& (0+255),b
  6467  00319A  0EFF               	movlw	255
  6468  00319C  0100               	movlb	0	; () banked
  6469  00319E  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  6470  0031A0  0100               	movlb	0	; () banked
  6471  0031A2  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  6472  0031A4  D015               	goto	l6265
  6473  0031A6                     l6259:
  6474                           
  6475                           ; BSR set to: 0
  6476  0031A6  0100               	movlb	0	; () banked
  6477  0031A8  90D8               	bcf	status,0,c
  6478  0031AA  37A3               	rlcf	___flmul@prod& (0+255),f,b
  6479  0031AC  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6480  0031AE  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6481  0031B0  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6482                           
  6483                           ; BSR set to: 0
  6484  0031B2  0100               	movlb	0	; () banked
  6485  0031B4  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  6486  0031B6  D002               	goto	l1397
  6487                           
  6488                           ; BSR set to: 0
  6489  0031B8  0100               	movlb	0	; () banked
  6490  0031BA  81A3               	bsf	___flmul@prod& (0+255),0,b
  6491  0031BC                     l1397:
  6492                           
  6493                           ; BSR set to: 0
  6494  0031BC  0100               	movlb	0	; () banked
  6495  0031BE  90D8               	bcf	status,0,c
  6496  0031C0  379E               	rlcf	___flmul@grs& (0+255),f,b
  6497  0031C2  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6498  0031C4  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6499  0031C6  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6500  0031C8  0100               	movlb	0	; () banked
  6501  0031CA  07A7               	decf	___flmul@temp& (0+255),f,b
  6502  0031CC  A0D8               	btfss	status,0,c
  6503  0031CE  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  6504  0031D0                     l6265:
  6505                           
  6506                           ; BSR set to: 0
  6507  0031D0  0100               	movlb	0	; () banked
  6508  0031D2  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  6509  0031D4  D7E8               	goto	l6259
  6510                           
  6511                           ; BSR set to: 0
  6512                           
  6513                           ; BSR set to: 0
  6514  0031D6  0E00               	movlw	0
  6515  0031D8  0100               	movlb	0	; () banked
  6516  0031DA  6F9D               	movwf	___flmul@aexp& (0+255),b
  6517                           
  6518                           ; BSR set to: 0
  6519  0031DC  0100               	movlb	0	; () banked
  6520  0031DE  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  6521  0031E0  D024               	goto	l1399
  6522                           
  6523                           ; BSR set to: 0
  6524  0031E2  0EFF               	movlw	255
  6525  0031E4  0100               	movlb	0	; () banked
  6526  0031E6  159E               	andwf	___flmul@grs& (0+255),w,b
  6527  0031E8  0100               	movlb	0	; () banked
  6528  0031EA  6F98               	movwf	??___flmul& (0+255),b
  6529  0031EC  0EFF               	movlw	255
  6530  0031EE  0100               	movlb	0	; () banked
  6531  0031F0  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  6532  0031F2  0100               	movlb	0	; () banked
  6533  0031F4  6F99               	movwf	(??___flmul+1)& (0+255),b
  6534  0031F6  0EFF               	movlw	255
  6535  0031F8  0100               	movlb	0	; () banked
  6536  0031FA  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  6537  0031FC  0100               	movlb	0	; () banked
  6538  0031FE  6F9A               	movwf	(??___flmul+2)& (0+255),b
  6539  003200  0E7F               	movlw	127
  6540  003202  0100               	movlb	0	; () banked
  6541  003204  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  6542  003206  0100               	movlb	0	; () banked
  6543  003208  6F9B               	movwf	(??___flmul+3)& (0+255),b
  6544  00320A  0100               	movlb	0	; () banked
  6545  00320C  5198               	movf	??___flmul& (0+255),w,b
  6546  00320E  0100               	movlb	0	; () banked
  6547  003210  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  6548  003212  0100               	movlb	0	; () banked
  6549  003214  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  6550  003216  0100               	movlb	0	; () banked
  6551  003218  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  6552  00321A  A4D8               	btfss	status,2,c
  6553  00321C  D003               	goto	l6275
  6554                           
  6555                           ; BSR set to: 0
  6556                           
  6557                           ; BSR set to: 0
  6558  00321E  0100               	movlb	0	; () banked
  6559  003220  A1A3               	btfss	___flmul@prod& (0+255),0,b
  6560  003222  D003               	goto	l1399
  6561  003224                     l6275:
  6562                           
  6563                           ; BSR set to: 0
  6564  003224  0E01               	movlw	1
  6565  003226  0100               	movlb	0	; () banked
  6566  003228  6F9D               	movwf	___flmul@aexp& (0+255),b
  6567  00322A                     l1399:
  6568                           
  6569                           ; BSR set to: 0
  6570  00322A  0100               	movlb	0	; () banked
  6571  00322C  519D               	movf	___flmul@aexp& (0+255),w,b
  6572  00322E  0100               	movlb	0	; () banked
  6573  003230  B4D8               	btfsc	status,2,c
  6574  003232  D023               	goto	l6285
  6575                           
  6576                           ; BSR set to: 0
  6577  003234  0E01               	movlw	1
  6578  003236  0100               	movlb	0	; () banked
  6579  003238  27A3               	addwf	___flmul@prod& (0+255),f,b
  6580  00323A  0E00               	movlw	0
  6581  00323C  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6582  00323E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6583  003240  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6584                           
  6585                           ; BSR set to: 0
  6586  003242  0100               	movlb	0	; () banked
  6587  003244  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  6588  003246  D019               	goto	l6285
  6589                           
  6590                           ; BSR set to: 0
  6591  003248  C0A3  F098         	movff	___flmul@prod,??___flmul
  6592  00324C  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  6593  003250  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  6594  003254  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  6595  003258  0100               	movlb	0	; () banked
  6596  00325A  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  6597  00325C  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  6598  00325E  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  6599  003260  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  6600  003262  3398               	rrcf	??___flmul& (0+255),f,b
  6601  003264  C098  F0A3         	movff	??___flmul,___flmul@prod
  6602  003268  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  6603  00326C  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  6604  003270  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  6605                           
  6606                           ; BSR set to: 0
  6607  003274  0100               	movlb	0	; () banked
  6608  003276  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  6609  003278  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  6610  00327A                     l6285:
  6611                           
  6612                           ; BSR set to: 0
  6613  00327A  0100               	movlb	0	; () banked
  6614  00327C  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6615  00327E  D010               	goto	l6289
  6616  003280  0100               	movlb	0	; () banked
  6617  003282  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6618  003284  E104               	bnz	u7820
  6619  003286  0100               	movlb	0	; () banked
  6620  003288  29A7               	incf	___flmul@temp& (0+255),w,b
  6621  00328A  A0D8               	btfss	status,0,c
  6622  00328C  D009               	goto	l6289
  6623  00328E                     u7820:
  6624                           
  6625                           ; BSR set to: 0
  6626  00328E  0E00               	movlw	0
  6627  003290  0100               	movlb	0	; () banked
  6628  003292  6FA3               	movwf	___flmul@prod& (0+255),b
  6629  003294  0E00               	movlw	0
  6630  003296  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  6631  003298  0E80               	movlw	128
  6632  00329A  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  6633  00329C  0E7F               	movlw	127
  6634  00329E  D02B               	goto	L2
  6635  0032A0                     l6289:
  6636                           
  6637                           ; BSR set to: 0
  6638  0032A0  0100               	movlb	0	; () banked
  6639  0032A2  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6640  0032A4  D007               	goto	l6291
  6641  0032A6  0100               	movlb	0	; () banked
  6642  0032A8  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6643  0032AA  E111               	bnz	l1407
  6644  0032AC  0100               	movlb	0	; () banked
  6645  0032AE  05A7               	decf	___flmul@temp& (0+255),w,b
  6646  0032B0  B0D8               	btfsc	status,0,c
  6647  0032B2  D00D               	goto	l1407
  6648  0032B4                     l6291:
  6649                           
  6650                           ; BSR set to: 0
  6651  0032B4  0E00               	movlw	0
  6652  0032B6  0100               	movlb	0	; () banked
  6653  0032B8  6FA3               	movwf	___flmul@prod& (0+255),b
  6654  0032BA  0E00               	movlw	0
  6655  0032BC  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  6656  0032BE  0E00               	movlw	0
  6657  0032C0  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  6658  0032C2  0E00               	movlw	0
  6659  0032C4  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  6660  0032C6  0E00               	movlw	0
  6661  0032C8  0100               	movlb	0	; () banked
  6662  0032CA  6F9C               	movwf	___flmul@sign& (0+255),b
  6663  0032CC  D015               	goto	l6301
  6664  0032CE                     l1407:
  6665                           
  6666                           ; BSR set to: 0
  6667  0032CE  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  6668                           
  6669                           ; BSR set to: 0
  6670  0032D2  0EFF               	movlw	255
  6671  0032D4  0100               	movlb	0	; () banked
  6672  0032D6  17A3               	andwf	___flmul@prod& (0+255),f,b
  6673  0032D8  0EFF               	movlw	255
  6674  0032DA  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  6675  0032DC  0E7F               	movlw	127
  6676  0032DE  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  6677  0032E0  0E00               	movlw	0
  6678  0032E2  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  6679                           
  6680                           ; BSR set to: 0
  6681  0032E4  0100               	movlb	0	; () banked
  6682  0032E6  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  6683  0032E8  D002               	goto	l6299
  6684                           
  6685                           ; BSR set to: 0
  6686  0032EA  0100               	movlb	0	; () banked
  6687  0032EC  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  6688  0032EE                     l6299:
  6689                           
  6690                           ; BSR set to: 0
  6691  0032EE  0100               	movlb	0	; () banked
  6692  0032F0  90D8               	bcf	status,0,c
  6693  0032F2  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  6694  0032F4  0100               	movlb	0	; () banked
  6695  0032F6                     L2:
  6696  0032F6  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  6697  0032F8                     l6301:
  6698                           
  6699                           ; BSR set to: 0
  6700  0032F8  0100               	movlb	0	; () banked
  6701  0032FA  519C               	movf	___flmul@sign& (0+255),w,b
  6702  0032FC  0100               	movlb	0	; () banked
  6703  0032FE  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6704                           
  6705                           ; BSR set to: 0
  6706  003300  C0A3  F090         	movff	___flmul@prod,?___flmul
  6707  003304  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  6708  003308  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  6709  00330C  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  6710  003310  0012               	return	
  6711  003312                     __end_of___flmul:
  6712                           	opt stack 0
  6713                           tblptru	equ	0xFF8
  6714                           tblptrh	equ	0xFF7
  6715                           tblptrl	equ	0xFF6
  6716                           tablat	equ	0xFF5
  6717                           prodh	equ	0xFF4
  6718                           prodl	equ	0xFF3
  6719                           postinc0	equ	0xFEE
  6720                           wreg	equ	0xFE8
  6721                           postdec1	equ	0xFE5
  6722                           fsr1l	equ	0xFE1
  6723                           postinc2	equ	0xFDE
  6724                           postdec2	equ	0xFDD
  6725                           fsr2h	equ	0xFDA
  6726                           fsr2l	equ	0xFD9
  6727                           status	equ	0xFD8
  6728                           
  6729 ;; *************** function ___fladd *****************
  6730 ;; Defined at:
  6731 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  b               4   77[BANK0 ] unsigned char 
  6734 ;;  a               4   81[BANK0 ] unsigned char 
  6735 ;; Auto vars:     Size  Location     Type
  6736 ;;  grs             1   96[BANK0 ] unsigned char 
  6737 ;;  bexp            1   95[BANK0 ] unsigned char 
  6738 ;;  aexp            1   94[BANK0 ] unsigned char 
  6739 ;;  signs           1   93[BANK0 ] unsigned char 
  6740 ;; Return value:  Size  Location     Type
  6741 ;;                  4   77[BANK0 ] unsigned char 
  6742 ;; Registers used:
  6743 ;;		wreg, status,2, status,0
  6744 ;; Tracked objects:
  6745 ;;		On entry : 0/0
  6746 ;;		On exit  : 0/0
  6747 ;;		Unchanged: 0/0
  6748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6749 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6750 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6751 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6752 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6753 ;;Total ram usage:       20 bytes
  6754 ;; Hardware stack levels used:    1
  6755 ;; Hardware stack levels required when called:    4
  6756 ;; This function calls:
  6757 ;;		Nothing
  6758 ;; This function is called by:
  6759 ;;		_park_routine
  6760 ;;		_parallelo
  6761 ;;		_matematica
  6762 ;;		_asin
  6763 ;;		_atan
  6764 ;;		_cos
  6765 ;;		_eval_poly
  6766 ;;		_sin
  6767 ;;		___flsub
  6768 ;;		_floor
  6769 ;; This function uses a non-reentrant model
  6770 ;;
  6771                           
  6772                           	psect	text20
  6773  0029C4                     __ptext20:
  6774                           	opt stack 0
  6775  0029C4                     ___fladd:
  6776                           	opt stack 21
  6777                           
  6778                           ; BSR set to: 0
  6779                           ;incstack = 0
  6780  0029C4  0100               	movlb	0	; () banked
  6781  0029C6  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  6782  0029C8  0B80               	andlw	128
  6783  0029CA  0100               	movlb	0	; () banked
  6784  0029CC  6FBD               	movwf	___fladd@signs& (0+255),b
  6785  0029CE  0100               	movlb	0	; () banked
  6786  0029D0  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  6787  0029D2  25B0               	addwf	(___fladd@b+3)& (0+255),w,b
  6788  0029D4  0100               	movlb	0	; () banked
  6789  0029D6  6FBF               	movwf	___fladd@bexp& (0+255),b
  6790                           
  6791                           ; BSR set to: 0
  6792  0029D8  0100               	movlb	0	; () banked
  6793  0029DA  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  6794  0029DC  D002               	goto	l5981
  6795                           
  6796                           ; BSR set to: 0
  6797  0029DE  0100               	movlb	0	; () banked
  6798  0029E0  81BF               	bsf	___fladd@bexp& (0+255),0,b
  6799  0029E2                     l5981:
  6800                           
  6801                           ; BSR set to: 0
  6802  0029E2  0100               	movlb	0	; () banked
  6803  0029E4  51BF               	movf	___fladd@bexp& (0+255),w,b
  6804  0029E6  0100               	movlb	0	; () banked
  6805  0029E8  B4D8               	btfsc	status,2,c
  6806  0029EA  D012               	goto	l5991
  6807                           
  6808                           ; BSR set to: 0
  6809  0029EC  0100               	movlb	0	; () banked
  6810  0029EE  29BF               	incf	___fladd@bexp& (0+255),w,b
  6811  0029F0  A4D8               	btfss	status,2,c
  6812  0029F2  D009               	goto	l5987
  6813                           
  6814                           ; BSR set to: 0
  6815  0029F4  0E00               	movlw	0
  6816  0029F6  0100               	movlb	0	; () banked
  6817  0029F8  6FAD               	movwf	___fladd@b& (0+255),b
  6818  0029FA  0E00               	movlw	0
  6819  0029FC  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  6820  0029FE  0E00               	movlw	0
  6821  002A00  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  6822  002A02  0E00               	movlw	0
  6823  002A04  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  6824  002A06                     l5987:
  6825                           
  6826                           ; BSR set to: 0
  6827  002A06  0100               	movlb	0	; () banked
  6828  002A08  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  6829                           
  6830                           ; BSR set to: 0
  6831  002A0A  0E00               	movlw	0
  6832  002A0C  0100               	movlb	0	; () banked
  6833  002A0E  D008               	goto	L3
  6834  002A10                     l5991:
  6835                           
  6836                           ; BSR set to: 0
  6837  002A10  0E00               	movlw	0
  6838  002A12  0100               	movlb	0	; () banked
  6839  002A14  6FAD               	movwf	___fladd@b& (0+255),b
  6840  002A16  0E00               	movlw	0
  6841  002A18  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  6842  002A1A  0E00               	movlw	0
  6843  002A1C  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  6844  002A1E  0E00               	movlw	0
  6845  002A20                     L3:
  6846  002A20  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  6847                           
  6848                           ; BSR set to: 0
  6849                           
  6850                           ; BSR set to: 0
  6851  002A22  0100               	movlb	0	; () banked
  6852  002A24  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  6853  002A26  0B80               	andlw	128
  6854  002A28  0100               	movlb	0	; () banked
  6855  002A2A  6FBE               	movwf	___fladd@aexp& (0+255),b
  6856                           
  6857                           ; BSR set to: 0
  6858  002A2C  0100               	movlb	0	; () banked
  6859  002A2E  51BD               	movf	___fladd@signs& (0+255),w,b
  6860  002A30  0100               	movlb	0	; () banked
  6861  002A32  19BE               	xorwf	___fladd@aexp& (0+255),w,b
  6862  002A34  B4D8               	btfsc	status,2,c
  6863  002A36  D002               	goto	l5999
  6864                           
  6865                           ; BSR set to: 0
  6866  002A38  0100               	movlb	0	; () banked
  6867  002A3A  8DBD               	bsf	___fladd@signs& (0+255),6,b
  6868  002A3C                     l5999:
  6869                           
  6870                           ; BSR set to: 0
  6871  002A3C  0100               	movlb	0	; () banked
  6872  002A3E  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  6873  002A40  25B4               	addwf	(___fladd@a+3)& (0+255),w,b
  6874  002A42  0100               	movlb	0	; () banked
  6875  002A44  6FBE               	movwf	___fladd@aexp& (0+255),b
  6876                           
  6877                           ; BSR set to: 0
  6878  002A46  0100               	movlb	0	; () banked
  6879  002A48  AFB3               	btfss	(___fladd@a+2)& (0+255),7,b
  6880  002A4A  D002               	goto	l6005
  6881                           
  6882                           ; BSR set to: 0
  6883  002A4C  0100               	movlb	0	; () banked
  6884  002A4E  81BE               	bsf	___fladd@aexp& (0+255),0,b
  6885  002A50                     l6005:
  6886                           
  6887                           ; BSR set to: 0
  6888  002A50  0100               	movlb	0	; () banked
  6889  002A52  51BE               	movf	___fladd@aexp& (0+255),w,b
  6890  002A54  0100               	movlb	0	; () banked
  6891  002A56  B4D8               	btfsc	status,2,c
  6892  002A58  D012               	goto	l6015
  6893                           
  6894                           ; BSR set to: 0
  6895  002A5A  0100               	movlb	0	; () banked
  6896  002A5C  29BE               	incf	___fladd@aexp& (0+255),w,b
  6897  002A5E  A4D8               	btfss	status,2,c
  6898  002A60  D009               	goto	l6011
  6899                           
  6900                           ; BSR set to: 0
  6901  002A62  0E00               	movlw	0
  6902  002A64  0100               	movlb	0	; () banked
  6903  002A66  6FB1               	movwf	___fladd@a& (0+255),b
  6904  002A68  0E00               	movlw	0
  6905  002A6A  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  6906  002A6C  0E00               	movlw	0
  6907  002A6E  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  6908  002A70  0E00               	movlw	0
  6909  002A72  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  6910  002A74                     l6011:
  6911                           
  6912                           ; BSR set to: 0
  6913  002A74  0100               	movlb	0	; () banked
  6914  002A76  8FB3               	bsf	(___fladd@a+2)& (0+255),7,b
  6915                           
  6916                           ; BSR set to: 0
  6917  002A78  0E00               	movlw	0
  6918  002A7A  0100               	movlb	0	; () banked
  6919  002A7C  D008               	goto	L4
  6920  002A7E                     l6015:
  6921                           
  6922                           ; BSR set to: 0
  6923  002A7E  0E00               	movlw	0
  6924  002A80  0100               	movlb	0	; () banked
  6925  002A82  6FB1               	movwf	___fladd@a& (0+255),b
  6926  002A84  0E00               	movlw	0
  6927  002A86  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  6928  002A88  0E00               	movlw	0
  6929  002A8A  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  6930  002A8C  0E00               	movlw	0
  6931  002A8E                     L4:
  6932  002A8E  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  6933                           
  6934                           ; BSR set to: 0
  6935                           
  6936                           ; BSR set to: 0
  6937  002A90  0100               	movlb	0	; () banked
  6938  002A92  51BF               	movf	___fladd@bexp& (0+255),w,b
  6939  002A94  0100               	movlb	0	; () banked
  6940  002A96  5DBE               	subwf	___fladd@aexp& (0+255),w,b
  6941  002A98  B0D8               	btfsc	status,0,c
  6942  002A9A  D024               	goto	l6053
  6943                           
  6944                           ; BSR set to: 0
  6945  002A9C  0100               	movlb	0	; () banked
  6946  002A9E  ADBD               	btfss	___fladd@signs& (0+255),6,b
  6947  002AA0  D003               	goto	l6023
  6948                           
  6949                           ; BSR set to: 0
  6950  002AA2  0E80               	movlw	128
  6951  002AA4  0100               	movlb	0	; () banked
  6952  002AA6  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  6953  002AA8                     l6023:
  6954                           
  6955                           ; BSR set to: 0
  6956  002AA8  C0BF  F0C0         	movff	___fladd@bexp,___fladd@grs
  6957                           
  6958                           ; BSR set to: 0
  6959  002AAC  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  6960                           
  6961                           ; BSR set to: 0
  6962  002AB0  C0C0  F0BE         	movff	___fladd@grs,___fladd@aexp
  6963                           
  6964                           ; BSR set to: 0
  6965  002AB4  C0AD  F0C0         	movff	___fladd@b,___fladd@grs
  6966                           
  6967                           ; BSR set to: 0
  6968  002AB8  C0B1  F0AD         	movff	___fladd@a,___fladd@b
  6969                           
  6970                           ; BSR set to: 0
  6971  002ABC  C0C0  F0B1         	movff	___fladd@grs,___fladd@a
  6972                           
  6973                           ; BSR set to: 0
  6974  002AC0  C0AE  F0C0         	movff	___fladd@b+1,___fladd@grs
  6975                           
  6976                           ; BSR set to: 0
  6977  002AC4  C0B2  F0AE         	movff	___fladd@a+1,___fladd@b+1
  6978                           
  6979                           ; BSR set to: 0
  6980  002AC8  C0C0  F0B2         	movff	___fladd@grs,___fladd@a+1
  6981                           
  6982                           ; BSR set to: 0
  6983  002ACC  C0AF  F0C0         	movff	___fladd@b+2,___fladd@grs
  6984                           
  6985                           ; BSR set to: 0
  6986  002AD0  C0B3  F0AF         	movff	___fladd@a+2,___fladd@b+2
  6987                           
  6988                           ; BSR set to: 0
  6989  002AD4  C0C0  F0B3         	movff	___fladd@grs,___fladd@a+2
  6990                           
  6991                           ; BSR set to: 0
  6992  002AD8  C0B0  F0C0         	movff	___fladd@b+3,___fladd@grs
  6993                           
  6994                           ; BSR set to: 0
  6995  002ADC  C0B4  F0B0         	movff	___fladd@a+3,___fladd@b+3
  6996                           
  6997                           ; BSR set to: 0
  6998  002AE0  C0C0  F0B4         	movff	___fladd@grs,___fladd@a+3
  6999  002AE4                     l6053:
  7000                           
  7001                           ; BSR set to: 0
  7002  002AE4  0E00               	movlw	0
  7003  002AE6  0100               	movlb	0	; () banked
  7004  002AE8  6FC0               	movwf	___fladd@grs& (0+255),b
  7005                           
  7006                           ; BSR set to: 0
  7007  002AEA  0100               	movlb	0	; () banked
  7008  002AEC  51BF               	movf	___fladd@bexp& (0+255),w,b
  7009  002AEE  0100               	movlb	0	; () banked
  7010  002AF0  6FB5               	movwf	??___fladd& (0+255),b
  7011  002AF2  6BB6               	clrf	(??___fladd+1)& (0+255),b
  7012  002AF4  0100               	movlb	0	; () banked
  7013  002AF6  1FB5               	comf	??___fladd& (0+255),f,b
  7014  002AF8  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  7015  002AFA  4BB5               	infsnz	??___fladd& (0+255),f,b
  7016  002AFC  2BB6               	incf	(??___fladd+1)& (0+255),f,b
  7017  002AFE  0100               	movlb	0	; () banked
  7018  002B00  51BE               	movf	___fladd@aexp& (0+255),w,b
  7019  002B02  0100               	movlb	0	; () banked
  7020  002B04  6FB7               	movwf	(??___fladd+2)& (0+255),b
  7021  002B06  6BB8               	clrf	(??___fladd+3)& (0+255),b
  7022  002B08  0100               	movlb	0	; () banked
  7023  002B0A  51B5               	movf	??___fladd& (0+255),w,b
  7024  002B0C  0100               	movlb	0	; () banked
  7025  002B0E  27B7               	addwf	(??___fladd+2)& (0+255),f,b
  7026  002B10  0100               	movlb	0	; () banked
  7027  002B12  51B6               	movf	(??___fladd+1)& (0+255),w,b
  7028  002B14  0100               	movlb	0	; () banked
  7029  002B16  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  7030  002B18  0100               	movlb	0	; () banked
  7031  002B1A  BFB8               	btfsc	(??___fladd+3)& (0+255),7,b
  7032  002B1C  D03D               	goto	l1305
  7033  002B1E  0100               	movlb	0	; () banked
  7034  002B20  51B8               	movf	(??___fladd+3)& (0+255),w,b
  7035  002B22  E105               	bnz	u7360
  7036  002B24  0E1A               	movlw	26
  7037  002B26  0100               	movlb	0	; () banked
  7038  002B28  5DB7               	subwf	(??___fladd+2)& (0+255),w,b
  7039  002B2A  A0D8               	btfss	status,0,c
  7040  002B2C  D035               	goto	l1305
  7041  002B2E                     u7360:
  7042                           
  7043                           ; BSR set to: 0
  7044  002B2E  0100               	movlb	0	; () banked
  7045  002B30  51AD               	movf	___fladd@b& (0+255),w,b
  7046  002B32  0100               	movlb	0	; () banked
  7047  002B34  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  7048  002B36  0100               	movlb	0	; () banked
  7049  002B38  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  7050  002B3A  0100               	movlb	0	; () banked
  7051  002B3C  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  7052  002B3E  B4D8               	btfsc	status,2,c
  7053  002B40  D002               	goto	u7370
  7054  002B42  0E01               	movlw	1
  7055  002B44  D001               	goto	u7380
  7056  002B46                     u7370:
  7057  002B46  0E00               	movlw	0
  7058  002B48                     u7380:
  7059  002B48  0100               	movlb	0	; () banked
  7060  002B4A  6FC0               	movwf	___fladd@grs& (0+255),b
  7061                           
  7062                           ; BSR set to: 0
  7063  002B4C  0E00               	movlw	0
  7064  002B4E  0100               	movlb	0	; () banked
  7065  002B50  6FAD               	movwf	___fladd@b& (0+255),b
  7066  002B52  0E00               	movlw	0
  7067  002B54  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  7068  002B56  0E00               	movlw	0
  7069  002B58  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  7070  002B5A  0E00               	movlw	0
  7071  002B5C  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7072                           
  7073                           ; BSR set to: 0
  7074  002B5E  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  7075  002B62  D020               	goto	l1304
  7076  002B64                     l1306:
  7077                           
  7078                           ; BSR set to: 0
  7079  002B64  0100               	movlb	0	; () banked
  7080  002B66  A1C0               	btfss	___fladd@grs& (0+255),0,b
  7081  002B68  D007               	goto	l6065
  7082                           
  7083                           ; BSR set to: 0
  7084  002B6A  0100               	movlb	0	; () banked
  7085  002B6C  90D8               	bcf	status,0,c
  7086  002B6E  31C0               	rrcf	___fladd@grs& (0+255),w,b
  7087  002B70  0901               	iorlw	1
  7088  002B72  0100               	movlb	0	; () banked
  7089  002B74  6FC0               	movwf	___fladd@grs& (0+255),b
  7090  002B76  D003               	goto	l6067
  7091  002B78                     l6065:
  7092                           
  7093                           ; BSR set to: 0
  7094  002B78  0100               	movlb	0	; () banked
  7095  002B7A  90D8               	bcf	status,0,c
  7096  002B7C  33C0               	rrcf	___fladd@grs& (0+255),f,b
  7097  002B7E                     l6067:
  7098                           
  7099                           ; BSR set to: 0
  7100  002B7E  0100               	movlb	0	; () banked
  7101  002B80  A1AD               	btfss	___fladd@b& (0+255),0,b
  7102  002B82  D002               	goto	l6071
  7103                           
  7104                           ; BSR set to: 0
  7105  002B84  0100               	movlb	0	; () banked
  7106  002B86  8FC0               	bsf	___fladd@grs& (0+255),7,b
  7107  002B88                     l6071:
  7108                           
  7109                           ; BSR set to: 0
  7110  002B88  0100               	movlb	0	; () banked
  7111  002B8A  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  7112  002B8C  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  7113  002B8E  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  7114  002B90  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  7115  002B92  33AD               	rrcf	___fladd@b& (0+255),f,b
  7116                           
  7117                           ; BSR set to: 0
  7118  002B94  0100               	movlb	0	; () banked
  7119  002B96  2BBF               	incf	___fladd@bexp& (0+255),f,b
  7120  002B98                     l1305:
  7121                           
  7122                           ; BSR set to: 0
  7123  002B98  0100               	movlb	0	; () banked
  7124  002B9A  51BE               	movf	___fladd@aexp& (0+255),w,b
  7125  002B9C  0100               	movlb	0	; () banked
  7126  002B9E  5DBF               	subwf	___fladd@bexp& (0+255),w,b
  7127  002BA0  A0D8               	btfss	status,0,c
  7128  002BA2  D7E0               	goto	l1306
  7129  002BA4                     l1304:
  7130                           
  7131                           ; BSR set to: 0
  7132  002BA4  0100               	movlb	0	; () banked
  7133  002BA6  BDBD               	btfsc	___fladd@signs& (0+255),6,b
  7134  002BA8  D03F               	goto	l6099
  7135                           
  7136                           ; BSR set to: 0
  7137  002BAA  0100               	movlb	0	; () banked
  7138  002BAC  51BF               	movf	___fladd@bexp& (0+255),w,b
  7139  002BAE  0100               	movlb	0	; () banked
  7140  002BB0  A4D8               	btfss	status,2,c
  7141  002BB2  D00A               	goto	l6081
  7142                           
  7143                           ; BSR set to: 0
  7144  002BB4  0E00               	movlw	0
  7145  002BB6  0100               	movlb	0	; () banked
  7146  002BB8  6FAD               	movwf	?___fladd& (0+255),b
  7147  002BBA  0E00               	movlw	0
  7148  002BBC  6FAE               	movwf	(?___fladd+1)& (0+255),b
  7149  002BBE  0E00               	movlw	0
  7150  002BC0  6FAF               	movwf	(?___fladd+2)& (0+255),b
  7151  002BC2  0E00               	movlw	0
  7152  002BC4  6FB0               	movwf	(?___fladd+3)& (0+255),b
  7153                           
  7154                           ; BSR set to: 0
  7155  002BC6  0012               	return	
  7156  002BC8                     l6081:
  7157                           
  7158                           ; BSR set to: 0
  7159  002BC8  0100               	movlb	0	; () banked
  7160  002BCA  51B1               	movf	___fladd@a& (0+255),w,b
  7161  002BCC  0100               	movlb	0	; () banked
  7162  002BCE  27AD               	addwf	___fladd@b& (0+255),f,b
  7163  002BD0  0100               	movlb	0	; () banked
  7164  002BD2  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  7165  002BD4  0100               	movlb	0	; () banked
  7166  002BD6  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  7167  002BD8  0100               	movlb	0	; () banked
  7168  002BDA  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  7169  002BDC  0100               	movlb	0	; () banked
  7170  002BDE  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  7171  002BE0  0100               	movlb	0	; () banked
  7172  002BE2  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7173  002BE4  0100               	movlb	0	; () banked
  7174  002BE6  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  7175                           
  7176                           ; BSR set to: 0
  7177  002BE8  0100               	movlb	0	; () banked
  7178  002BEA  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  7179  002BEC  D0CC               	goto	l6135
  7180                           
  7181                           ; BSR set to: 0
  7182  002BEE  0100               	movlb	0	; () banked
  7183  002BF0  A1C0               	btfss	___fladd@grs& (0+255),0,b
  7184  002BF2  D009               	goto	l6089
  7185                           
  7186                           ; BSR set to: 0
  7187  002BF4  0100               	movlb	0	; () banked
  7188  002BF6  90D8               	bcf	status,0,c
  7189  002BF8  33C0               	rrcf	___fladd@grs& (0+255),f,b
  7190  002BFA  0100               	movlb	0	; () banked
  7191  002BFC  51C0               	movf	___fladd@grs& (0+255),w,b
  7192  002BFE  0901               	iorlw	1
  7193  002C00  0100               	movlb	0	; () banked
  7194  002C02  6FC0               	movwf	___fladd@grs& (0+255),b
  7195  002C04  D003               	goto	l6091
  7196  002C06                     l6089:
  7197                           
  7198                           ; BSR set to: 0
  7199  002C06  0100               	movlb	0	; () banked
  7200  002C08  90D8               	bcf	status,0,c
  7201  002C0A  33C0               	rrcf	___fladd@grs& (0+255),f,b
  7202  002C0C                     l6091:
  7203                           
  7204                           ; BSR set to: 0
  7205  002C0C  0100               	movlb	0	; () banked
  7206  002C0E  A1AD               	btfss	___fladd@b& (0+255),0,b
  7207  002C10  D002               	goto	l6095
  7208                           
  7209                           ; BSR set to: 0
  7210  002C12  0100               	movlb	0	; () banked
  7211  002C14  8FC0               	bsf	___fladd@grs& (0+255),7,b
  7212  002C16                     l6095:
  7213                           
  7214                           ; BSR set to: 0
  7215  002C16  0100               	movlb	0	; () banked
  7216  002C18  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  7217  002C1A  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  7218  002C1C  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  7219  002C1E  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  7220  002C20  33AD               	rrcf	___fladd@b& (0+255),f,b
  7221                           
  7222                           ; BSR set to: 0
  7223  002C22  0100               	movlb	0	; () banked
  7224  002C24  2BBF               	incf	___fladd@bexp& (0+255),f,b
  7225                           
  7226                           ; BSR set to: 0
  7227  002C26  D0AF               	goto	l6135
  7228  002C28                     l6099:
  7229                           
  7230                           ; BSR set to: 0
  7231  002C28  0100               	movlb	0	; () banked
  7232  002C2A  51B1               	movf	___fladd@a& (0+255),w,b
  7233  002C2C  0100               	movlb	0	; () banked
  7234  002C2E  5DAD               	subwf	___fladd@b& (0+255),w,b
  7235  002C30  0100               	movlb	0	; () banked
  7236  002C32  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  7237  002C34  0100               	movlb	0	; () banked
  7238  002C36  59AE               	subwfb	(___fladd@b+1)& (0+255),w,b
  7239  002C38  0100               	movlb	0	; () banked
  7240  002C3A  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  7241  002C3C  0100               	movlb	0	; () banked
  7242  002C3E  59AF               	subwfb	(___fladd@b+2)& (0+255),w,b
  7243  002C40  0100               	movlb	0	; () banked
  7244  002C42  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  7245  002C44  0A80               	xorlw	128
  7246  002C46  0100               	movlb	0	; () banked
  7247  002C48  6FB5               	movwf	??___fladd& (0+255),b
  7248  002C4A  0100               	movlb	0	; () banked
  7249  002C4C  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7250  002C4E  0A80               	xorlw	128
  7251  002C50  0100               	movlb	0	; () banked
  7252  002C52  59B5               	subwfb	??___fladd& (0+255),w,b
  7253  002C54  B0D8               	btfsc	status,0,c
  7254  002C56  D050               	goto	l6109
  7255                           
  7256                           ; BSR set to: 0
  7257  002C58  C0AD  F0B5         	movff	___fladd@b,??___fladd
  7258  002C5C  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  7259  002C60  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  7260  002C64  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  7261  002C68  0100               	movlb	0	; () banked
  7262  002C6A  1FB5               	comf	??___fladd& (0+255),f,b
  7263  002C6C  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  7264  002C6E  1FB7               	comf	(??___fladd+2)& (0+255),f,b
  7265  002C70  1FB8               	comf	(??___fladd+3)& (0+255),f,b
  7266  002C72  2BB5               	incf	??___fladd& (0+255),f,b
  7267  002C74  0E00               	movlw	0
  7268  002C76  23B6               	addwfc	(??___fladd+1)& (0+255),f,b
  7269  002C78  23B7               	addwfc	(??___fladd+2)& (0+255),f,b
  7270  002C7A  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  7271  002C7C  0100               	movlb	0	; () banked
  7272  002C7E  51B1               	movf	___fladd@a& (0+255),w,b
  7273  002C80  0100               	movlb	0	; () banked
  7274  002C82  25B5               	addwf	??___fladd& (0+255),w,b
  7275  002C84  0100               	movlb	0	; () banked
  7276  002C86  6FB9               	movwf	(??___fladd+4)& (0+255),b
  7277  002C88  0100               	movlb	0	; () banked
  7278  002C8A  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  7279  002C8C  0100               	movlb	0	; () banked
  7280  002C8E  21B6               	addwfc	(??___fladd+1)& (0+255),w,b
  7281  002C90  0100               	movlb	0	; () banked
  7282  002C92  6FBA               	movwf	(??___fladd+5)& (0+255),b
  7283  002C94  0100               	movlb	0	; () banked
  7284  002C96  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  7285  002C98  0100               	movlb	0	; () banked
  7286  002C9A  21B7               	addwfc	(??___fladd+2)& (0+255),w,b
  7287  002C9C  0100               	movlb	0	; () banked
  7288  002C9E  6FBB               	movwf	(??___fladd+6)& (0+255),b
  7289  002CA0  0100               	movlb	0	; () banked
  7290  002CA2  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7291  002CA4  0100               	movlb	0	; () banked
  7292  002CA6  21B8               	addwfc	(??___fladd+3)& (0+255),w,b
  7293  002CA8  0100               	movlb	0	; () banked
  7294  002CAA  6FBC               	movwf	(??___fladd+7)& (0+255),b
  7295  002CAC  0EFF               	movlw	255
  7296  002CAE  0100               	movlb	0	; () banked
  7297  002CB0  25B9               	addwf	(??___fladd+4)& (0+255),w,b
  7298  002CB2  0100               	movlb	0	; () banked
  7299  002CB4  6FAD               	movwf	___fladd@b& (0+255),b
  7300  002CB6  0EFF               	movlw	255
  7301  002CB8  0100               	movlb	0	; () banked
  7302  002CBA  21BA               	addwfc	(??___fladd+5)& (0+255),w,b
  7303  002CBC  0100               	movlb	0	; () banked
  7304  002CBE  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  7305  002CC0  0EFF               	movlw	255
  7306  002CC2  0100               	movlb	0	; () banked
  7307  002CC4  21BB               	addwfc	(??___fladd+6)& (0+255),w,b
  7308  002CC6  0100               	movlb	0	; () banked
  7309  002CC8  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  7310  002CCA  0EFF               	movlw	255
  7311  002CCC  0100               	movlb	0	; () banked
  7312  002CCE  21BC               	addwfc	(??___fladd+7)& (0+255),w,b
  7313  002CD0  0100               	movlb	0	; () banked
  7314  002CD2  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7315  002CD4  0E80               	movlw	128
  7316  002CD6  0100               	movlb	0	; () banked
  7317  002CD8  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  7318                           
  7319                           ; BSR set to: 0
  7320  002CDA  0100               	movlb	0	; () banked
  7321  002CDC  6DC0               	negf	___fladd@grs& (0+255),b
  7322                           
  7323                           ; BSR set to: 0
  7324  002CDE  0100               	movlb	0	; () banked
  7325  002CE0  51C0               	movf	___fladd@grs& (0+255),w,b
  7326  002CE2  0100               	movlb	0	; () banked
  7327  002CE4  A4D8               	btfss	status,2,c
  7328  002CE6  D018               	goto	l1321
  7329                           
  7330                           ; BSR set to: 0
  7331  002CE8  0E01               	movlw	1
  7332  002CEA  0100               	movlb	0	; () banked
  7333  002CEC  27AD               	addwf	___fladd@b& (0+255),f,b
  7334  002CEE  0E00               	movlw	0
  7335  002CF0  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  7336  002CF2  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  7337  002CF4  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  7338                           
  7339                           ; BSR set to: 0
  7340  002CF6  D010               	goto	l1321
  7341  002CF8                     l6109:
  7342                           
  7343                           ; BSR set to: 0
  7344  002CF8  0100               	movlb	0	; () banked
  7345  002CFA  51B1               	movf	___fladd@a& (0+255),w,b
  7346  002CFC  0100               	movlb	0	; () banked
  7347  002CFE  5FAD               	subwf	___fladd@b& (0+255),f,b
  7348  002D00  0100               	movlb	0	; () banked
  7349  002D02  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  7350  002D04  0100               	movlb	0	; () banked
  7351  002D06  5BAE               	subwfb	(___fladd@b+1)& (0+255),f,b
  7352  002D08  0100               	movlb	0	; () banked
  7353  002D0A  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  7354  002D0C  0100               	movlb	0	; () banked
  7355  002D0E  5BAF               	subwfb	(___fladd@b+2)& (0+255),f,b
  7356  002D10  0100               	movlb	0	; () banked
  7357  002D12  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7358  002D14  0100               	movlb	0	; () banked
  7359  002D16  5BB0               	subwfb	(___fladd@b+3)& (0+255),f,b
  7360  002D18                     l1321:
  7361                           
  7362                           ; BSR set to: 0
  7363  002D18  0100               	movlb	0	; () banked
  7364  002D1A  51AD               	movf	___fladd@b& (0+255),w,b
  7365  002D1C  0100               	movlb	0	; () banked
  7366  002D1E  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  7367  002D20  0100               	movlb	0	; () banked
  7368  002D22  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  7369  002D24  0100               	movlb	0	; () banked
  7370  002D26  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  7371  002D28  A4D8               	btfss	status,2,c
  7372  002D2A  D02A               	goto	l6133
  7373                           
  7374                           ; BSR set to: 0
  7375  002D2C  0100               	movlb	0	; () banked
  7376  002D2E  51C0               	movf	___fladd@grs& (0+255),w,b
  7377  002D30  0100               	movlb	0	; () banked
  7378  002D32  A4D8               	btfss	status,2,c
  7379  002D34  D025               	goto	l6133
  7380                           
  7381                           ; BSR set to: 0
  7382  002D36  0E00               	movlw	0
  7383  002D38  0100               	movlb	0	; () banked
  7384  002D3A  6FAD               	movwf	?___fladd& (0+255),b
  7385  002D3C  0E00               	movlw	0
  7386  002D3E  6FAE               	movwf	(?___fladd+1)& (0+255),b
  7387  002D40  0E00               	movlw	0
  7388  002D42  6FAF               	movwf	(?___fladd+2)& (0+255),b
  7389  002D44  0E00               	movlw	0
  7390  002D46  6FB0               	movwf	(?___fladd+3)& (0+255),b
  7391                           
  7392                           ; BSR set to: 0
  7393  002D48  0012               	return	
  7394  002D4A                     l6117:
  7395                           
  7396                           ; BSR set to: 0
  7397  002D4A  0100               	movlb	0	; () banked
  7398  002D4C  90D8               	bcf	status,0,c
  7399  002D4E  37AD               	rlcf	___fladd@b& (0+255),f,b
  7400  002D50  37AE               	rlcf	(___fladd@b+1)& (0+255),f,b
  7401  002D52  37AF               	rlcf	(___fladd@b+2)& (0+255),f,b
  7402  002D54  37B0               	rlcf	(___fladd@b+3)& (0+255),f,b
  7403                           
  7404                           ; BSR set to: 0
  7405  002D56  0100               	movlb	0	; () banked
  7406  002D58  AFC0               	btfss	___fladd@grs& (0+255),7,b
  7407  002D5A  D002               	goto	l6123
  7408                           
  7409                           ; BSR set to: 0
  7410  002D5C  0100               	movlb	0	; () banked
  7411  002D5E  81AD               	bsf	___fladd@b& (0+255),0,b
  7412  002D60                     l6123:
  7413                           
  7414                           ; BSR set to: 0
  7415  002D60  0100               	movlb	0	; () banked
  7416  002D62  A1C0               	btfss	___fladd@grs& (0+255),0,b
  7417  002D64  D003               	goto	l6127
  7418                           
  7419                           ; BSR set to: 0
  7420  002D66  80D8               	bsf	status,0,c
  7421  002D68  0100               	movlb	0	; () banked
  7422  002D6A  D002               	goto	L5
  7423  002D6C                     l6127:
  7424                           
  7425                           ; BSR set to: 0
  7426  002D6C  0100               	movlb	0	; () banked
  7427  002D6E  90D8               	bcf	status,0,c
  7428  002D70                     L5:
  7429  002D70  37C0               	rlcf	___fladd@grs& (0+255),f,b
  7430                           
  7431                           ; BSR set to: 0
  7432                           
  7433                           ; BSR set to: 0
  7434  002D72  0100               	movlb	0	; () banked
  7435  002D74  51BF               	movf	___fladd@bexp& (0+255),w,b
  7436  002D76  0100               	movlb	0	; () banked
  7437  002D78  B4D8               	btfsc	status,2,c
  7438  002D7A  D002               	goto	l6133
  7439                           
  7440                           ; BSR set to: 0
  7441  002D7C  0100               	movlb	0	; () banked
  7442  002D7E  07BF               	decf	___fladd@bexp& (0+255),f,b
  7443  002D80                     l6133:
  7444                           
  7445                           ; BSR set to: 0
  7446  002D80  0100               	movlb	0	; () banked
  7447  002D82  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  7448  002D84  D7E2               	goto	l6117
  7449  002D86                     l6135:
  7450                           
  7451                           ; BSR set to: 0
  7452  002D86  0E00               	movlw	0
  7453  002D88  0100               	movlb	0	; () banked
  7454  002D8A  6FBE               	movwf	___fladd@aexp& (0+255),b
  7455                           
  7456                           ; BSR set to: 0
  7457  002D8C  0100               	movlb	0	; () banked
  7458  002D8E  AFC0               	btfss	___fladd@grs& (0+255),7,b
  7459  002D90  D00D               	goto	l1330
  7460                           
  7461                           ; BSR set to: 0
  7462  002D92  C0C0  F0B5         	movff	___fladd@grs,??___fladd
  7463  002D96  0E7F               	movlw	127
  7464  002D98  0100               	movlb	0	; () banked
  7465  002D9A  17B5               	andwf	??___fladd& (0+255),f,b
  7466  002D9C  A4D8               	btfss	status,2,c
  7467  002D9E  D003               	goto	l6143
  7468                           
  7469                           ; BSR set to: 0
  7470                           
  7471                           ; BSR set to: 0
  7472  002DA0  0100               	movlb	0	; () banked
  7473  002DA2  A1AD               	btfss	___fladd@b& (0+255),0,b
  7474  002DA4  D003               	goto	l1330
  7475  002DA6                     l6143:
  7476                           
  7477                           ; BSR set to: 0
  7478  002DA6  0E01               	movlw	1
  7479  002DA8  0100               	movlb	0	; () banked
  7480  002DAA  6FBE               	movwf	___fladd@aexp& (0+255),b
  7481  002DAC                     l1330:
  7482                           
  7483                           ; BSR set to: 0
  7484  002DAC  0100               	movlb	0	; () banked
  7485  002DAE  51BE               	movf	___fladd@aexp& (0+255),w,b
  7486  002DB0  0100               	movlb	0	; () banked
  7487  002DB2  B4D8               	btfsc	status,2,c
  7488  002DB4  D026               	goto	l6153
  7489                           
  7490                           ; BSR set to: 0
  7491  002DB6  0E01               	movlw	1
  7492  002DB8  0100               	movlb	0	; () banked
  7493  002DBA  27AD               	addwf	___fladd@b& (0+255),f,b
  7494  002DBC  0E00               	movlw	0
  7495  002DBE  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  7496  002DC0  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  7497  002DC2  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  7498                           
  7499                           ; BSR set to: 0
  7500  002DC4  0100               	movlb	0	; () banked
  7501  002DC6  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  7502  002DC8  D01C               	goto	l6153
  7503                           
  7504                           ; BSR set to: 0
  7505  002DCA  C0AD  F0B5         	movff	___fladd@b,??___fladd
  7506  002DCE  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  7507  002DD2  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  7508  002DD6  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  7509  002DDA  0100               	movlb	0	; () banked
  7510  002DDC  35B8               	rlcf	(??___fladd+3)& (0+255),w,b
  7511  002DDE  33B8               	rrcf	(??___fladd+3)& (0+255),f,b
  7512  002DE0  33B7               	rrcf	(??___fladd+2)& (0+255),f,b
  7513  002DE2  33B6               	rrcf	(??___fladd+1)& (0+255),f,b
  7514  002DE4  33B5               	rrcf	??___fladd& (0+255),f,b
  7515  002DE6  C0B5  F0AD         	movff	??___fladd,___fladd@b
  7516  002DEA  C0B6  F0AE         	movff	??___fladd+1,___fladd@b+1
  7517  002DEE  C0B7  F0AF         	movff	??___fladd+2,___fladd@b+2
  7518  002DF2  C0B8  F0B0         	movff	??___fladd+3,___fladd@b+3
  7519  002DF6  0100               	movlb	0	; () banked
  7520  002DF8  29BF               	incf	___fladd@bexp& (0+255),w,b
  7521  002DFA  B4D8               	btfsc	status,2,c
  7522  002DFC  D002               	goto	l6153
  7523                           
  7524                           ; BSR set to: 0
  7525  002DFE  0100               	movlb	0	; () banked
  7526  002E00  2BBF               	incf	___fladd@bexp& (0+255),f,b
  7527  002E02                     l6153:
  7528                           
  7529                           ; BSR set to: 0
  7530  002E02  0100               	movlb	0	; () banked
  7531  002E04  29BF               	incf	___fladd@bexp& (0+255),w,b
  7532  002E06  B4D8               	btfsc	status,2,c
  7533  002E08  D005               	goto	l6157
  7534                           
  7535                           ; BSR set to: 0
  7536  002E0A  0100               	movlb	0	; () banked
  7537  002E0C  51BF               	movf	___fladd@bexp& (0+255),w,b
  7538  002E0E  0100               	movlb	0	; () banked
  7539  002E10  A4D8               	btfss	status,2,c
  7540  002E12  D011               	goto	l6161
  7541  002E14                     l6157:
  7542                           
  7543                           ; BSR set to: 0
  7544  002E14  0E00               	movlw	0
  7545  002E16  0100               	movlb	0	; () banked
  7546  002E18  6FAD               	movwf	___fladd@b& (0+255),b
  7547  002E1A  0E00               	movlw	0
  7548  002E1C  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  7549  002E1E  0E00               	movlw	0
  7550  002E20  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  7551  002E22  0E00               	movlw	0
  7552  002E24  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7553  002E26  0100               	movlb	0	; () banked
  7554  002E28  51BF               	movf	___fladd@bexp& (0+255),w,b
  7555  002E2A  0100               	movlb	0	; () banked
  7556  002E2C  A4D8               	btfss	status,2,c
  7557  002E2E  D003               	goto	l6161
  7558                           
  7559                           ; BSR set to: 0
  7560  002E30  0E00               	movlw	0
  7561  002E32  0100               	movlb	0	; () banked
  7562  002E34  6FBD               	movwf	___fladd@signs& (0+255),b
  7563  002E36                     l6161:
  7564                           
  7565                           ; BSR set to: 0
  7566  002E36  0100               	movlb	0	; () banked
  7567  002E38  A1BF               	btfss	___fladd@bexp& (0+255),0,b
  7568  002E3A  D003               	goto	l6165
  7569                           
  7570                           ; BSR set to: 0
  7571  002E3C  0100               	movlb	0	; () banked
  7572  002E3E  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  7573  002E40  D002               	goto	l6167
  7574  002E42                     l6165:
  7575                           
  7576                           ; BSR set to: 0
  7577  002E42  0100               	movlb	0	; () banked
  7578  002E44  9FAF               	bcf	(___fladd@b+2)& (0+255),7,b
  7579  002E46                     l6167:
  7580                           
  7581                           ; BSR set to: 0
  7582  002E46  0100               	movlb	0	; () banked
  7583  002E48  90D8               	bcf	status,0,c
  7584  002E4A  31BF               	rrcf	___fladd@bexp& (0+255),w,b
  7585  002E4C  0100               	movlb	0	; () banked
  7586  002E4E  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7587                           
  7588                           ; BSR set to: 0
  7589  002E50  0100               	movlb	0	; () banked
  7590  002E52  AFBD               	btfss	___fladd@signs& (0+255),7,b
  7591  002E54  D002               	goto	l6173
  7592                           
  7593                           ; BSR set to: 0
  7594  002E56  0100               	movlb	0	; () banked
  7595  002E58  8FB0               	bsf	(___fladd@b+3)& (0+255),7,b
  7596  002E5A                     l6173:
  7597                           
  7598                           ; BSR set to: 0
  7599  002E5A  C0AD  F0AD         	movff	___fladd@b,?___fladd
  7600  002E5E  C0AE  F0AE         	movff	___fladd@b+1,?___fladd+1
  7601  002E62  C0AF  F0AF         	movff	___fladd@b+2,?___fladd+2
  7602  002E66  C0B0  F0B0         	movff	___fladd@b+3,?___fladd+3
  7603  002E6A  0012               	return	
  7604  002E6C                     __end_of___fladd:
  7605                           	opt stack 0
  7606                           tblptru	equ	0xFF8
  7607                           tblptrh	equ	0xFF7
  7608                           tblptrl	equ	0xFF6
  7609                           tablat	equ	0xFF5
  7610                           prodh	equ	0xFF4
  7611                           prodl	equ	0xFF3
  7612                           postinc0	equ	0xFEE
  7613                           wreg	equ	0xFE8
  7614                           postdec1	equ	0xFE5
  7615                           fsr1l	equ	0xFE1
  7616                           postinc2	equ	0xFDE
  7617                           postdec2	equ	0xFDD
  7618                           fsr2h	equ	0xFDA
  7619                           fsr2l	equ	0xFD9
  7620                           status	equ	0xFD8
  7621                           
  7622 ;; *************** function ___flge *****************
  7623 ;; Defined at:
  7624 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  7625 ;; Parameters:    Size  Location     Type
  7626 ;;  ff1             4   81[BANK0 ] unsigned char 
  7627 ;;  ff2             4   85[BANK0 ] unsigned char 
  7628 ;; Auto vars:     Size  Location     Type
  7629 ;;		None
  7630 ;; Return value:  Size  Location     Type
  7631 ;;		None               void
  7632 ;; Registers used:
  7633 ;;		wreg, status,2, status,0
  7634 ;; Tracked objects:
  7635 ;;		On entry : 0/0
  7636 ;;		On exit  : 0/0
  7637 ;;		Unchanged: 0/0
  7638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7639 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7641 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7642 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7643 ;;Total ram usage:       12 bytes
  7644 ;; Hardware stack levels used:    1
  7645 ;; Hardware stack levels required when called:    4
  7646 ;; This function calls:
  7647 ;;		Nothing
  7648 ;; This function is called by:
  7649 ;;		_parallelo
  7650 ;;		_asin
  7651 ;;		_atan
  7652 ;;		_cos
  7653 ;;		_sin
  7654 ;;		_floor
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text21
  7659  005090                     __ptext21:
  7660                           	opt stack 0
  7661  005090                     ___flge:
  7662                           	opt stack 22
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;incstack = 0
  7666  005090  0E00               	movlw	0
  7667  005092  0100               	movlb	0	; () banked
  7668  005094  15B1               	andwf	___flge@ff1& (0+255),w,b
  7669  005096  0100               	movlb	0	; () banked
  7670  005098  6FB9               	movwf	??___flge& (0+255),b
  7671  00509A  0E00               	movlw	0
  7672  00509C  0100               	movlb	0	; () banked
  7673  00509E  15B2               	andwf	(___flge@ff1+1)& (0+255),w,b
  7674  0050A0  0100               	movlb	0	; () banked
  7675  0050A2  6FBA               	movwf	(??___flge+1)& (0+255),b
  7676  0050A4  0E80               	movlw	128
  7677  0050A6  0100               	movlb	0	; () banked
  7678  0050A8  15B3               	andwf	(___flge@ff1+2)& (0+255),w,b
  7679  0050AA  0100               	movlb	0	; () banked
  7680  0050AC  6FBB               	movwf	(??___flge+2)& (0+255),b
  7681  0050AE  0E7F               	movlw	127
  7682  0050B0  0100               	movlb	0	; () banked
  7683  0050B2  15B4               	andwf	(___flge@ff1+3)& (0+255),w,b
  7684  0050B4  0100               	movlb	0	; () banked
  7685  0050B6  6FBC               	movwf	(??___flge+3)& (0+255),b
  7686  0050B8  0100               	movlb	0	; () banked
  7687  0050BA  51B9               	movf	??___flge& (0+255),w,b
  7688  0050BC  0100               	movlb	0	; () banked
  7689  0050BE  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  7690  0050C0  0100               	movlb	0	; () banked
  7691  0050C2  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  7692  0050C4  0100               	movlb	0	; () banked
  7693  0050C6  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  7694  0050C8  A4D8               	btfss	status,2,c
  7695  0050CA  D009               	goto	l6311
  7696                           
  7697                           ; BSR set to: 0
  7698  0050CC  0E00               	movlw	0
  7699  0050CE  0100               	movlb	0	; () banked
  7700  0050D0  6FB1               	movwf	___flge@ff1& (0+255),b
  7701  0050D2  0E00               	movlw	0
  7702  0050D4  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  7703  0050D6  0E00               	movlw	0
  7704  0050D8  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  7705  0050DA  0E00               	movlw	0
  7706  0050DC  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  7707  0050DE                     l6311:
  7708                           
  7709                           ; BSR set to: 0
  7710  0050DE  0E00               	movlw	0
  7711  0050E0  0100               	movlb	0	; () banked
  7712  0050E2  15B5               	andwf	___flge@ff2& (0+255),w,b
  7713  0050E4  0100               	movlb	0	; () banked
  7714  0050E6  6FB9               	movwf	??___flge& (0+255),b
  7715  0050E8  0E00               	movlw	0
  7716  0050EA  0100               	movlb	0	; () banked
  7717  0050EC  15B6               	andwf	(___flge@ff2+1)& (0+255),w,b
  7718  0050EE  0100               	movlb	0	; () banked
  7719  0050F0  6FBA               	movwf	(??___flge+1)& (0+255),b
  7720  0050F2  0E80               	movlw	128
  7721  0050F4  0100               	movlb	0	; () banked
  7722  0050F6  15B7               	andwf	(___flge@ff2+2)& (0+255),w,b
  7723  0050F8  0100               	movlb	0	; () banked
  7724  0050FA  6FBB               	movwf	(??___flge+2)& (0+255),b
  7725  0050FC  0E7F               	movlw	127
  7726  0050FE  0100               	movlb	0	; () banked
  7727  005100  15B8               	andwf	(___flge@ff2+3)& (0+255),w,b
  7728  005102  0100               	movlb	0	; () banked
  7729  005104  6FBC               	movwf	(??___flge+3)& (0+255),b
  7730  005106  0100               	movlb	0	; () banked
  7731  005108  51B9               	movf	??___flge& (0+255),w,b
  7732  00510A  0100               	movlb	0	; () banked
  7733  00510C  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  7734  00510E  0100               	movlb	0	; () banked
  7735  005110  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  7736  005112  0100               	movlb	0	; () banked
  7737  005114  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  7738  005116  A4D8               	btfss	status,2,c
  7739  005118  D009               	goto	l6315
  7740                           
  7741                           ; BSR set to: 0
  7742  00511A  0E00               	movlw	0
  7743  00511C  0100               	movlb	0	; () banked
  7744  00511E  6FB5               	movwf	___flge@ff2& (0+255),b
  7745  005120  0E00               	movlw	0
  7746  005122  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  7747  005124  0E00               	movlw	0
  7748  005126  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  7749  005128  0E00               	movlw	0
  7750  00512A  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  7751  00512C                     l6315:
  7752                           
  7753                           ; BSR set to: 0
  7754  00512C  0100               	movlb	0	; () banked
  7755  00512E  AFB4               	btfss	(___flge@ff1+3)& (0+255),7,b
  7756  005130  D026               	goto	l6319
  7757                           
  7758                           ; BSR set to: 0
  7759  005132  C0B1  F0B9         	movff	___flge@ff1,??___flge
  7760  005136  C0B2  F0BA         	movff	___flge@ff1+1,??___flge+1
  7761  00513A  C0B3  F0BB         	movff	___flge@ff1+2,??___flge+2
  7762  00513E  C0B4  F0BC         	movff	___flge@ff1+3,??___flge+3
  7763  005142  0100               	movlb	0	; () banked
  7764  005144  1FB9               	comf	??___flge& (0+255),f,b
  7765  005146  1FBA               	comf	(??___flge+1)& (0+255),f,b
  7766  005148  1FBB               	comf	(??___flge+2)& (0+255),f,b
  7767  00514A  1FBC               	comf	(??___flge+3)& (0+255),f,b
  7768  00514C  2BB9               	incf	??___flge& (0+255),f,b
  7769  00514E  0E00               	movlw	0
  7770  005150  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  7771  005152  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  7772  005154  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  7773  005156  0E00               	movlw	0
  7774  005158  0100               	movlb	0	; () banked
  7775  00515A  25B9               	addwf	??___flge& (0+255),w,b
  7776  00515C  0100               	movlb	0	; () banked
  7777  00515E  6FB1               	movwf	___flge@ff1& (0+255),b
  7778  005160  0E00               	movlw	0
  7779  005162  0100               	movlb	0	; () banked
  7780  005164  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  7781  005166  0100               	movlb	0	; () banked
  7782  005168  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  7783  00516A  0E00               	movlw	0
  7784  00516C  0100               	movlb	0	; () banked
  7785  00516E  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  7786  005170  0100               	movlb	0	; () banked
  7787  005172  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  7788  005174  0E80               	movlw	128
  7789  005176  0100               	movlb	0	; () banked
  7790  005178  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  7791  00517A  0100               	movlb	0	; () banked
  7792  00517C  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  7793  00517E                     l6319:
  7794                           
  7795                           ; BSR set to: 0
  7796  00517E  0100               	movlb	0	; () banked
  7797  005180  AFB8               	btfss	(___flge@ff2+3)& (0+255),7,b
  7798  005182  D026               	goto	l1052
  7799                           
  7800                           ; BSR set to: 0
  7801  005184  C0B5  F0B9         	movff	___flge@ff2,??___flge
  7802  005188  C0B6  F0BA         	movff	___flge@ff2+1,??___flge+1
  7803  00518C  C0B7  F0BB         	movff	___flge@ff2+2,??___flge+2
  7804  005190  C0B8  F0BC         	movff	___flge@ff2+3,??___flge+3
  7805  005194  0100               	movlb	0	; () banked
  7806  005196  1FB9               	comf	??___flge& (0+255),f,b
  7807  005198  1FBA               	comf	(??___flge+1)& (0+255),f,b
  7808  00519A  1FBB               	comf	(??___flge+2)& (0+255),f,b
  7809  00519C  1FBC               	comf	(??___flge+3)& (0+255),f,b
  7810  00519E  2BB9               	incf	??___flge& (0+255),f,b
  7811  0051A0  0E00               	movlw	0
  7812  0051A2  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  7813  0051A4  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  7814  0051A6  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  7815  0051A8  0E00               	movlw	0
  7816  0051AA  0100               	movlb	0	; () banked
  7817  0051AC  25B9               	addwf	??___flge& (0+255),w,b
  7818  0051AE  0100               	movlb	0	; () banked
  7819  0051B0  6FB5               	movwf	___flge@ff2& (0+255),b
  7820  0051B2  0E00               	movlw	0
  7821  0051B4  0100               	movlb	0	; () banked
  7822  0051B6  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  7823  0051B8  0100               	movlb	0	; () banked
  7824  0051BA  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  7825  0051BC  0E00               	movlw	0
  7826  0051BE  0100               	movlb	0	; () banked
  7827  0051C0  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  7828  0051C2  0100               	movlb	0	; () banked
  7829  0051C4  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  7830  0051C6  0E80               	movlw	128
  7831  0051C8  0100               	movlb	0	; () banked
  7832  0051CA  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  7833  0051CC  0100               	movlb	0	; () banked
  7834  0051CE  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  7835  0051D0                     l1052:
  7836                           
  7837                           ; BSR set to: 0
  7838  0051D0  0E00               	movlw	0
  7839  0051D2  0100               	movlb	0	; () banked
  7840  0051D4  1BB1               	xorwf	___flge@ff1& (0+255),f,b
  7841  0051D6  0E00               	movlw	0
  7842  0051D8  1BB2               	xorwf	(___flge@ff1+1)& (0+255),f,b
  7843  0051DA  0E00               	movlw	0
  7844  0051DC  1BB3               	xorwf	(___flge@ff1+2)& (0+255),f,b
  7845  0051DE  0E80               	movlw	128
  7846  0051E0  1BB4               	xorwf	(___flge@ff1+3)& (0+255),f,b
  7847  0051E2  0E00               	movlw	0
  7848  0051E4  0100               	movlb	0	; () banked
  7849  0051E6  1BB5               	xorwf	___flge@ff2& (0+255),f,b
  7850  0051E8  0E00               	movlw	0
  7851  0051EA  1BB6               	xorwf	(___flge@ff2+1)& (0+255),f,b
  7852  0051EC  0E00               	movlw	0
  7853  0051EE  1BB7               	xorwf	(___flge@ff2+2)& (0+255),f,b
  7854  0051F0  0E80               	movlw	128
  7855  0051F2  1BB8               	xorwf	(___flge@ff2+3)& (0+255),f,b
  7856  0051F4  0100               	movlb	0	; () banked
  7857  0051F6  51B5               	movf	___flge@ff2& (0+255),w,b
  7858  0051F8  0100               	movlb	0	; () banked
  7859  0051FA  5DB1               	subwf	___flge@ff1& (0+255),w,b
  7860  0051FC  0100               	movlb	0	; () banked
  7861  0051FE  51B6               	movf	(___flge@ff2+1)& (0+255),w,b
  7862  005200  0100               	movlb	0	; () banked
  7863  005202  59B2               	subwfb	(___flge@ff1+1)& (0+255),w,b
  7864  005204  0100               	movlb	0	; () banked
  7865  005206  51B7               	movf	(___flge@ff2+2)& (0+255),w,b
  7866  005208  0100               	movlb	0	; () banked
  7867  00520A  59B3               	subwfb	(___flge@ff1+2)& (0+255),w,b
  7868  00520C  0100               	movlb	0	; () banked
  7869  00520E  51B8               	movf	(___flge@ff2+3)& (0+255),w,b
  7870  005210  0100               	movlb	0	; () banked
  7871  005212  59B4               	subwfb	(___flge@ff1+3)& (0+255),w,b
  7872  005214  B0D8               	btfsc	status,0,c
  7873  005216  D002               	goto	l6325
  7874                           
  7875                           ; BSR set to: 0
  7876  005218  90D8               	bcf	status,0,c
  7877  00521A  0012               	return	
  7878  00521C                     l6325:
  7879                           
  7880                           ; BSR set to: 0
  7881  00521C  80D8               	bsf	status,0,c
  7882                           
  7883                           ; BSR set to: 0
  7884  00521E  0012               	return	
  7885  005220                     __end_of___flge:
  7886                           	opt stack 0
  7887                           tblptru	equ	0xFF8
  7888                           tblptrh	equ	0xFF7
  7889                           tblptrl	equ	0xFF6
  7890                           tablat	equ	0xFF5
  7891                           prodh	equ	0xFF4
  7892                           prodl	equ	0xFF3
  7893                           postinc0	equ	0xFEE
  7894                           wreg	equ	0xFE8
  7895                           postdec1	equ	0xFE5
  7896                           fsr1l	equ	0xFE1
  7897                           postinc2	equ	0xFDE
  7898                           postdec2	equ	0xFDD
  7899                           fsr2h	equ	0xFDA
  7900                           fsr2l	equ	0xFD9
  7901                           status	equ	0xFD8
  7902                           
  7903 ;; *************** function ___fldiv *****************
  7904 ;; Defined at:
  7905 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
  7906 ;; Parameters:    Size  Location     Type
  7907 ;;  b               4   23[BANK0 ] unsigned char 
  7908 ;;  a               4   27[BANK0 ] unsigned char 
  7909 ;; Auto vars:     Size  Location     Type
  7910 ;;  grs             4   42[BANK0 ] unsigned long 
  7911 ;;  rem             4   36[BANK0 ] unsigned long 
  7912 ;;  new_exp         2   40[BANK0 ] int 
  7913 ;;  aexp            1   47[BANK0 ] unsigned char 
  7914 ;;  bexp            1   46[BANK0 ] unsigned char 
  7915 ;;  sign            1   35[BANK0 ] unsigned char 
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  4   23[BANK0 ] unsigned char 
  7918 ;; Registers used:
  7919 ;;		wreg, status,2, status,0
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7925 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7926 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7927 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7928 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7929 ;;Total ram usage:       25 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; Hardware stack levels required when called:    4
  7932 ;; This function calls:
  7933 ;;		Nothing
  7934 ;; This function is called by:
  7935 ;;		_parallelo
  7936 ;;		_matematica
  7937 ;;		_asin
  7938 ;;		_atan
  7939 ;;		_sin
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           	psect	text22
  7944  0036DC                     __ptext22:
  7945                           	opt stack 0
  7946  0036DC                     ___fldiv:
  7947                           	opt stack 22
  7948                           
  7949                           ; BSR set to: 0
  7950                           ;incstack = 0
  7951  0036DC  0100               	movlb	0	; () banked
  7952  0036DE  517A               	movf	(___fldiv@b+3)& (0+255),w,b
  7953  0036E0  0B80               	andlw	128
  7954  0036E2  0100               	movlb	0	; () banked
  7955  0036E4  6F83               	movwf	___fldiv@sign& (0+255),b
  7956  0036E6  0100               	movlb	0	; () banked
  7957  0036E8  517A               	movf	(___fldiv@b+3)& (0+255),w,b
  7958  0036EA  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
  7959  0036EC  0100               	movlb	0	; () banked
  7960  0036EE  6F8E               	movwf	___fldiv@bexp& (0+255),b
  7961                           
  7962                           ; BSR set to: 0
  7963  0036F0  0100               	movlb	0	; () banked
  7964  0036F2  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
  7965  0036F4  D002               	goto	l6445
  7966                           
  7967                           ; BSR set to: 0
  7968  0036F6  0100               	movlb	0	; () banked
  7969  0036F8  818E               	bsf	___fldiv@bexp& (0+255),0,b
  7970  0036FA                     l6445:
  7971                           
  7972                           ; BSR set to: 0
  7973  0036FA  0100               	movlb	0	; () banked
  7974  0036FC  518E               	movf	___fldiv@bexp& (0+255),w,b
  7975  0036FE  0100               	movlb	0	; () banked
  7976  003700  B4D8               	btfsc	status,2,c
  7977  003702  D012               	goto	l6455
  7978                           
  7979                           ; BSR set to: 0
  7980  003704  0100               	movlb	0	; () banked
  7981  003706  298E               	incf	___fldiv@bexp& (0+255),w,b
  7982  003708  A4D8               	btfss	status,2,c
  7983  00370A  D009               	goto	l6451
  7984                           
  7985                           ; BSR set to: 0
  7986  00370C  0E00               	movlw	0
  7987  00370E  0100               	movlb	0	; () banked
  7988  003710  6F77               	movwf	___fldiv@b& (0+255),b
  7989  003712  0E00               	movlw	0
  7990  003714  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7991  003716  0E00               	movlw	0
  7992  003718  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7993  00371A  0E00               	movlw	0
  7994  00371C  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7995  00371E                     l6451:
  7996                           
  7997                           ; BSR set to: 0
  7998  00371E  0100               	movlb	0	; () banked
  7999  003720  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
  8000                           
  8001                           ; BSR set to: 0
  8002  003722  0E00               	movlw	0
  8003  003724  0100               	movlb	0	; () banked
  8004  003726  D008               	goto	L6
  8005  003728                     l6455:
  8006                           
  8007                           ; BSR set to: 0
  8008  003728  0E00               	movlw	0
  8009  00372A  0100               	movlb	0	; () banked
  8010  00372C  6F77               	movwf	___fldiv@b& (0+255),b
  8011  00372E  0E00               	movlw	0
  8012  003730  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8013  003732  0E00               	movlw	0
  8014  003734  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8015  003736  0E00               	movlw	0
  8016  003738                     L6:
  8017  003738  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8018                           
  8019                           ; BSR set to: 0
  8020                           
  8021                           ; BSR set to: 0
  8022  00373A  0100               	movlb	0	; () banked
  8023  00373C  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  8024  00373E  0B80               	andlw	128
  8025  003740  0100               	movlb	0	; () banked
  8026  003742  1B83               	xorwf	___fldiv@sign& (0+255),f,b
  8027                           
  8028                           ; BSR set to: 0
  8029  003744  0100               	movlb	0	; () banked
  8030  003746  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  8031  003748  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
  8032  00374A  0100               	movlb	0	; () banked
  8033  00374C  6F8F               	movwf	___fldiv@aexp& (0+255),b
  8034                           
  8035                           ; BSR set to: 0
  8036  00374E  0100               	movlb	0	; () banked
  8037  003750  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
  8038  003752  D002               	goto	l6465
  8039                           
  8040                           ; BSR set to: 0
  8041  003754  0100               	movlb	0	; () banked
  8042  003756  818F               	bsf	___fldiv@aexp& (0+255),0,b
  8043  003758                     l6465:
  8044                           
  8045                           ; BSR set to: 0
  8046  003758  0100               	movlb	0	; () banked
  8047  00375A  518F               	movf	___fldiv@aexp& (0+255),w,b
  8048  00375C  0100               	movlb	0	; () banked
  8049  00375E  B4D8               	btfsc	status,2,c
  8050  003760  D012               	goto	l6475
  8051                           
  8052                           ; BSR set to: 0
  8053  003762  0100               	movlb	0	; () banked
  8054  003764  298F               	incf	___fldiv@aexp& (0+255),w,b
  8055  003766  A4D8               	btfss	status,2,c
  8056  003768  D009               	goto	l6471
  8057                           
  8058                           ; BSR set to: 0
  8059  00376A  0E00               	movlw	0
  8060  00376C  0100               	movlb	0	; () banked
  8061  00376E  6F7B               	movwf	___fldiv@a& (0+255),b
  8062  003770  0E00               	movlw	0
  8063  003772  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  8064  003774  0E00               	movlw	0
  8065  003776  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  8066  003778  0E00               	movlw	0
  8067  00377A  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  8068  00377C                     l6471:
  8069                           
  8070                           ; BSR set to: 0
  8071  00377C  0100               	movlb	0	; () banked
  8072  00377E  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
  8073                           
  8074                           ; BSR set to: 0
  8075  003780  0E00               	movlw	0
  8076  003782  0100               	movlb	0	; () banked
  8077  003784  D008               	goto	L7
  8078  003786                     l6475:
  8079                           
  8080                           ; BSR set to: 0
  8081  003786  0E00               	movlw	0
  8082  003788  0100               	movlb	0	; () banked
  8083  00378A  6F7B               	movwf	___fldiv@a& (0+255),b
  8084  00378C  0E00               	movlw	0
  8085  00378E  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  8086  003790  0E00               	movlw	0
  8087  003792  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  8088  003794  0E00               	movlw	0
  8089  003796                     L7:
  8090  003796  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  8091                           
  8092                           ; BSR set to: 0
  8093                           
  8094                           ; BSR set to: 0
  8095  003798  0100               	movlb	0	; () banked
  8096  00379A  517B               	movf	___fldiv@a& (0+255),w,b
  8097  00379C  0100               	movlb	0	; () banked
  8098  00379E  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
  8099  0037A0  0100               	movlb	0	; () banked
  8100  0037A2  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
  8101  0037A4  0100               	movlb	0	; () banked
  8102  0037A6  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
  8103  0037A8  A4D8               	btfss	status,2,c
  8104  0037AA  D017               	goto	l6487
  8105                           
  8106                           ; BSR set to: 0
  8107  0037AC  0E00               	movlw	0
  8108  0037AE  0100               	movlb	0	; () banked
  8109  0037B0  6F77               	movwf	___fldiv@b& (0+255),b
  8110  0037B2  0E00               	movlw	0
  8111  0037B4  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8112  0037B6  0E00               	movlw	0
  8113  0037B8  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8114  0037BA  0E00               	movlw	0
  8115  0037BC  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8116                           
  8117                           ; BSR set to: 0
  8118  0037BE  0100               	movlb	0	; () banked
  8119  0037C0  0E80               	movlw	128
  8120  0037C2  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
  8121  0037C4  0E7F               	movlw	127
  8122  0037C6  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
  8123                           
  8124                           ; BSR set to: 0
  8125  0037C8  C077  F077         	movff	___fldiv@b,?___fldiv
  8126  0037CC  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  8127  0037D0  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  8128  0037D4  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  8129                           
  8130                           ; BSR set to: 0
  8131  0037D8  0012               	return	
  8132  0037DA                     l6487:
  8133                           
  8134                           ; BSR set to: 0
  8135  0037DA  0100               	movlb	0	; () banked
  8136  0037DC  518E               	movf	___fldiv@bexp& (0+255),w,b
  8137  0037DE  0100               	movlb	0	; () banked
  8138  0037E0  A4D8               	btfss	status,2,c
  8139  0037E2  D012               	goto	l6495
  8140                           
  8141                           ; BSR set to: 0
  8142  0037E4  0E00               	movlw	0
  8143  0037E6  0100               	movlb	0	; () banked
  8144  0037E8  6F77               	movwf	___fldiv@b& (0+255),b
  8145  0037EA  0E00               	movlw	0
  8146  0037EC  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8147  0037EE  0E00               	movlw	0
  8148  0037F0  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8149  0037F2  0E00               	movlw	0
  8150  0037F4  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8151                           
  8152                           ; BSR set to: 0
  8153  0037F6  C077  F077         	movff	___fldiv@b,?___fldiv
  8154  0037FA  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  8155  0037FE  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  8156  003802  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  8157                           
  8158                           ; BSR set to: 0
  8159  003806  0012               	return	
  8160  003808                     l6495:
  8161                           
  8162                           ; BSR set to: 0
  8163  003808  0100               	movlb	0	; () banked
  8164  00380A  518F               	movf	___fldiv@aexp& (0+255),w,b
  8165  00380C  0100               	movlb	0	; () banked
  8166  00380E  6F7F               	movwf	??___fldiv& (0+255),b
  8167  003810  6B80               	clrf	(??___fldiv+1)& (0+255),b
  8168  003812  0100               	movlb	0	; () banked
  8169  003814  1F7F               	comf	??___fldiv& (0+255),f,b
  8170  003816  1F80               	comf	(??___fldiv+1)& (0+255),f,b
  8171  003818  4B7F               	infsnz	??___fldiv& (0+255),f,b
  8172  00381A  2B80               	incf	(??___fldiv+1)& (0+255),f,b
  8173  00381C  0100               	movlb	0	; () banked
  8174  00381E  518E               	movf	___fldiv@bexp& (0+255),w,b
  8175  003820  0100               	movlb	0	; () banked
  8176  003822  6F81               	movwf	(??___fldiv+2)& (0+255),b
  8177  003824  6B82               	clrf	(??___fldiv+3)& (0+255),b
  8178  003826  0100               	movlb	0	; () banked
  8179  003828  517F               	movf	??___fldiv& (0+255),w,b
  8180  00382A  0100               	movlb	0	; () banked
  8181  00382C  2781               	addwf	(??___fldiv+2)& (0+255),f,b
  8182  00382E  0100               	movlb	0	; () banked
  8183  003830  5180               	movf	(??___fldiv+1)& (0+255),w,b
  8184  003832  0100               	movlb	0	; () banked
  8185  003834  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
  8186  003836  0E7F               	movlw	127
  8187  003838  0100               	movlb	0	; () banked
  8188  00383A  2581               	addwf	(??___fldiv+2)& (0+255),w,b
  8189  00383C  0100               	movlb	0	; () banked
  8190  00383E  6F88               	movwf	___fldiv@new_exp& (0+255),b
  8191  003840  0E00               	movlw	0
  8192  003842  0100               	movlb	0	; () banked
  8193  003844  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
  8194  003846  0100               	movlb	0	; () banked
  8195  003848  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8196                           
  8197                           ; BSR set to: 0
  8198  00384A  C077  F084         	movff	___fldiv@b,___fldiv@rem
  8199  00384E  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
  8200  003852  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
  8201  003856  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
  8202                           
  8203                           ; BSR set to: 0
  8204  00385A  0E00               	movlw	0
  8205  00385C  0100               	movlb	0	; () banked
  8206  00385E  6F77               	movwf	___fldiv@b& (0+255),b
  8207  003860  0E00               	movlw	0
  8208  003862  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8209  003864  0E00               	movlw	0
  8210  003866  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8211  003868  0E00               	movlw	0
  8212  00386A  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8213                           
  8214                           ; BSR set to: 0
  8215  00386C  0E00               	movlw	0
  8216  00386E  0100               	movlb	0	; () banked
  8217  003870  6F8A               	movwf	___fldiv@grs& (0+255),b
  8218  003872  0E00               	movlw	0
  8219  003874  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
  8220  003876  0E00               	movlw	0
  8221  003878  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
  8222  00387A  0E00               	movlw	0
  8223  00387C  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
  8224                           
  8225                           ; BSR set to: 0
  8226  00387E  0E00               	movlw	0
  8227  003880  0100               	movlb	0	; () banked
  8228  003882  6F8F               	movwf	___fldiv@aexp& (0+255),b
  8229  003884  D042               	goto	l1360
  8230  003886                     l6505:
  8231                           
  8232                           ; BSR set to: 0
  8233  003886  0100               	movlb	0	; () banked
  8234  003888  518F               	movf	___fldiv@aexp& (0+255),w,b
  8235  00388A  0100               	movlb	0	; () banked
  8236  00388C  B4D8               	btfsc	status,2,c
  8237  00388E  D017               	goto	l6513
  8238                           
  8239                           ; BSR set to: 0
  8240  003890  0100               	movlb	0	; () banked
  8241  003892  90D8               	bcf	status,0,c
  8242  003894  3784               	rlcf	___fldiv@rem& (0+255),f,b
  8243  003896  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  8244  003898  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  8245  00389A  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  8246  00389C  0100               	movlb	0	; () banked
  8247  00389E  90D8               	bcf	status,0,c
  8248  0038A0  3777               	rlcf	___fldiv@b& (0+255),f,b
  8249  0038A2  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
  8250  0038A4  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
  8251  0038A6  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
  8252                           
  8253                           ; BSR set to: 0
  8254  0038A8  0100               	movlb	0	; () banked
  8255  0038AA  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8256  0038AC  D002               	goto	l1363
  8257                           
  8258                           ; BSR set to: 0
  8259  0038AE  0100               	movlb	0	; () banked
  8260  0038B0  8177               	bsf	___fldiv@b& (0+255),0,b
  8261  0038B2                     l1363:
  8262                           
  8263                           ; BSR set to: 0
  8264  0038B2  0100               	movlb	0	; () banked
  8265  0038B4  90D8               	bcf	status,0,c
  8266  0038B6  378A               	rlcf	___fldiv@grs& (0+255),f,b
  8267  0038B8  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8268  0038BA  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8269  0038BC  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8270  0038BE                     l6513:
  8271                           
  8272                           ; BSR set to: 0
  8273  0038BE  0100               	movlb	0	; () banked
  8274  0038C0  517B               	movf	___fldiv@a& (0+255),w,b
  8275  0038C2  0100               	movlb	0	; () banked
  8276  0038C4  5D84               	subwf	___fldiv@rem& (0+255),w,b
  8277  0038C6  0100               	movlb	0	; () banked
  8278  0038C8  517C               	movf	(___fldiv@a+1)& (0+255),w,b
  8279  0038CA  0100               	movlb	0	; () banked
  8280  0038CC  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  8281  0038CE  0100               	movlb	0	; () banked
  8282  0038D0  517D               	movf	(___fldiv@a+2)& (0+255),w,b
  8283  0038D2  0100               	movlb	0	; () banked
  8284  0038D4  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  8285  0038D6  0100               	movlb	0	; () banked
  8286  0038D8  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  8287  0038DA  0100               	movlb	0	; () banked
  8288  0038DC  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  8289  0038DE  A0D8               	btfss	status,0,c
  8290  0038E0  D012               	goto	l6519
  8291                           
  8292                           ; BSR set to: 0
  8293  0038E2  0100               	movlb	0	; () banked
  8294  0038E4  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
  8295                           
  8296                           ; BSR set to: 0
  8297  0038E6  0100               	movlb	0	; () banked
  8298  0038E8  517B               	movf	___fldiv@a& (0+255),w,b
  8299  0038EA  0100               	movlb	0	; () banked
  8300  0038EC  5F84               	subwf	___fldiv@rem& (0+255),f,b
  8301  0038EE  0100               	movlb	0	; () banked
  8302  0038F0  517C               	movf	(___fldiv@a+1)& (0+255),w,b
  8303  0038F2  0100               	movlb	0	; () banked
  8304  0038F4  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  8305  0038F6  0100               	movlb	0	; () banked
  8306  0038F8  517D               	movf	(___fldiv@a+2)& (0+255),w,b
  8307  0038FA  0100               	movlb	0	; () banked
  8308  0038FC  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  8309  0038FE  0100               	movlb	0	; () banked
  8310  003900  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  8311  003902  0100               	movlb	0	; () banked
  8312  003904  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  8313  003906                     l6519:
  8314                           
  8315                           ; BSR set to: 0
  8316  003906  0100               	movlb	0	; () banked
  8317  003908  2B8F               	incf	___fldiv@aexp& (0+255),f,b
  8318  00390A                     l1360:
  8319                           
  8320                           ; BSR set to: 0
  8321  00390A  0E19               	movlw	25
  8322  00390C  0100               	movlb	0	; () banked
  8323  00390E  658F               	cpfsgt	___fldiv@aexp& (0+255),b
  8324  003910  D7BA               	goto	l6505
  8325                           
  8326                           ; BSR set to: 0
  8327                           
  8328                           ; BSR set to: 0
  8329  003912  0100               	movlb	0	; () banked
  8330  003914  5184               	movf	___fldiv@rem& (0+255),w,b
  8331  003916  0100               	movlb	0	; () banked
  8332  003918  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  8333  00391A  0100               	movlb	0	; () banked
  8334  00391C  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  8335  00391E  0100               	movlb	0	; () banked
  8336  003920  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  8337  003922  B4D8               	btfsc	status,2,c
  8338  003924  D018               	goto	l6531
  8339                           
  8340                           ; BSR set to: 0
  8341  003926  0100               	movlb	0	; () banked
  8342  003928  818A               	bsf	___fldiv@grs& (0+255),0,b
  8343                           
  8344                           ; BSR set to: 0
  8345  00392A  D015               	goto	l6531
  8346  00392C                     l6525:
  8347                           
  8348                           ; BSR set to: 0
  8349  00392C  0100               	movlb	0	; () banked
  8350  00392E  90D8               	bcf	status,0,c
  8351  003930  3777               	rlcf	___fldiv@b& (0+255),f,b
  8352  003932  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
  8353  003934  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
  8354  003936  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
  8355                           
  8356                           ; BSR set to: 0
  8357  003938  0100               	movlb	0	; () banked
  8358  00393A  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8359  00393C  D002               	goto	l1369
  8360                           
  8361                           ; BSR set to: 0
  8362  00393E  0100               	movlb	0	; () banked
  8363  003940  8177               	bsf	___fldiv@b& (0+255),0,b
  8364  003942                     l1369:
  8365                           
  8366                           ; BSR set to: 0
  8367  003942  0100               	movlb	0	; () banked
  8368  003944  90D8               	bcf	status,0,c
  8369  003946  378A               	rlcf	___fldiv@grs& (0+255),f,b
  8370  003948  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8371  00394A  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8372  00394C  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8373  00394E  0100               	movlb	0	; () banked
  8374  003950  0788               	decf	___fldiv@new_exp& (0+255),f,b
  8375  003952  A0D8               	btfss	status,0,c
  8376  003954  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  8377  003956                     l6531:
  8378                           
  8379                           ; BSR set to: 0
  8380  003956  0100               	movlb	0	; () banked
  8381  003958  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
  8382  00395A  D7E8               	goto	l6525
  8383                           
  8384                           ; BSR set to: 0
  8385                           
  8386                           ; BSR set to: 0
  8387  00395C  0E00               	movlw	0
  8388  00395E  0100               	movlb	0	; () banked
  8389  003960  6F8F               	movwf	___fldiv@aexp& (0+255),b
  8390                           
  8391                           ; BSR set to: 0
  8392  003962  0100               	movlb	0	; () banked
  8393  003964  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8394  003966  D024               	goto	l1371
  8395                           
  8396                           ; BSR set to: 0
  8397  003968  0EFF               	movlw	255
  8398  00396A  0100               	movlb	0	; () banked
  8399  00396C  158A               	andwf	___fldiv@grs& (0+255),w,b
  8400  00396E  0100               	movlb	0	; () banked
  8401  003970  6F7F               	movwf	??___fldiv& (0+255),b
  8402  003972  0EFF               	movlw	255
  8403  003974  0100               	movlb	0	; () banked
  8404  003976  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
  8405  003978  0100               	movlb	0	; () banked
  8406  00397A  6F80               	movwf	(??___fldiv+1)& (0+255),b
  8407  00397C  0EFF               	movlw	255
  8408  00397E  0100               	movlb	0	; () banked
  8409  003980  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
  8410  003982  0100               	movlb	0	; () banked
  8411  003984  6F81               	movwf	(??___fldiv+2)& (0+255),b
  8412  003986  0E7F               	movlw	127
  8413  003988  0100               	movlb	0	; () banked
  8414  00398A  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
  8415  00398C  0100               	movlb	0	; () banked
  8416  00398E  6F82               	movwf	(??___fldiv+3)& (0+255),b
  8417  003990  0100               	movlb	0	; () banked
  8418  003992  517F               	movf	??___fldiv& (0+255),w,b
  8419  003994  0100               	movlb	0	; () banked
  8420  003996  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
  8421  003998  0100               	movlb	0	; () banked
  8422  00399A  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
  8423  00399C  0100               	movlb	0	; () banked
  8424  00399E  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
  8425  0039A0  A4D8               	btfss	status,2,c
  8426  0039A2  D003               	goto	l6541
  8427                           
  8428                           ; BSR set to: 0
  8429                           
  8430                           ; BSR set to: 0
  8431  0039A4  0100               	movlb	0	; () banked
  8432  0039A6  A177               	btfss	___fldiv@b& (0+255),0,b
  8433  0039A8  D003               	goto	l1371
  8434  0039AA                     l6541:
  8435                           
  8436                           ; BSR set to: 0
  8437  0039AA  0E01               	movlw	1
  8438  0039AC  0100               	movlb	0	; () banked
  8439  0039AE  6F8F               	movwf	___fldiv@aexp& (0+255),b
  8440  0039B0                     l1371:
  8441                           
  8442                           ; BSR set to: 0
  8443  0039B0  0100               	movlb	0	; () banked
  8444  0039B2  518F               	movf	___fldiv@aexp& (0+255),w,b
  8445  0039B4  0100               	movlb	0	; () banked
  8446  0039B6  B4D8               	btfsc	status,2,c
  8447  0039B8  D023               	goto	l6551
  8448                           
  8449                           ; BSR set to: 0
  8450  0039BA  0E01               	movlw	1
  8451  0039BC  0100               	movlb	0	; () banked
  8452  0039BE  2777               	addwf	___fldiv@b& (0+255),f,b
  8453  0039C0  0E00               	movlw	0
  8454  0039C2  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
  8455  0039C4  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
  8456  0039C6  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
  8457                           
  8458                           ; BSR set to: 0
  8459  0039C8  0100               	movlb	0	; () banked
  8460  0039CA  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
  8461  0039CC  D019               	goto	l6551
  8462                           
  8463                           ; BSR set to: 0
  8464  0039CE  C077  F07F         	movff	___fldiv@b,??___fldiv
  8465  0039D2  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
  8466  0039D6  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
  8467  0039DA  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
  8468  0039DE  0100               	movlb	0	; () banked
  8469  0039E0  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
  8470  0039E2  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
  8471  0039E4  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
  8472  0039E6  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
  8473  0039E8  337F               	rrcf	??___fldiv& (0+255),f,b
  8474  0039EA  C07F  F077         	movff	??___fldiv,___fldiv@b
  8475  0039EE  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
  8476  0039F2  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
  8477  0039F6  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
  8478                           
  8479                           ; BSR set to: 0
  8480  0039FA  0100               	movlb	0	; () banked
  8481  0039FC  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
  8482  0039FE  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  8483  003A00                     l6551:
  8484                           
  8485                           ; BSR set to: 0
  8486  003A00  0100               	movlb	0	; () banked
  8487  003A02  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8488  003A04  D014               	goto	l6555
  8489  003A06  0100               	movlb	0	; () banked
  8490  003A08  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8491  003A0A  E104               	bnz	u8300
  8492  003A0C  0100               	movlb	0	; () banked
  8493  003A0E  2988               	incf	___fldiv@new_exp& (0+255),w,b
  8494  003A10  A0D8               	btfss	status,0,c
  8495  003A12  D00D               	goto	l6555
  8496  003A14                     u8300:
  8497                           
  8498                           ; BSR set to: 0
  8499  003A14  0E00               	movlw	0
  8500  003A16  0100               	movlb	0	; () banked
  8501  003A18  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8502  003A1A  6988               	setf	___fldiv@new_exp& (0+255),b
  8503  003A1C  0E00               	movlw	0
  8504  003A1E  0100               	movlb	0	; () banked
  8505  003A20  6F77               	movwf	___fldiv@b& (0+255),b
  8506  003A22  0E00               	movlw	0
  8507  003A24  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8508  003A26  0E00               	movlw	0
  8509  003A28  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8510  003A2A  0E00               	movlw	0
  8511  003A2C  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8512  003A2E                     l6555:
  8513                           
  8514                           ; BSR set to: 0
  8515  003A2E  0100               	movlb	0	; () banked
  8516  003A30  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8517  003A32  D007               	goto	l6557
  8518  003A34  0100               	movlb	0	; () banked
  8519  003A36  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8520  003A38  E115               	bnz	l6559
  8521  003A3A  0100               	movlb	0	; () banked
  8522  003A3C  0588               	decf	___fldiv@new_exp& (0+255),w,b
  8523  003A3E  B0D8               	btfsc	status,0,c
  8524  003A40  D011               	goto	l6559
  8525  003A42                     l6557:
  8526                           
  8527                           ; BSR set to: 0
  8528  003A42  0E00               	movlw	0
  8529  003A44  0100               	movlb	0	; () banked
  8530  003A46  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8531  003A48  0E00               	movlw	0
  8532  003A4A  6F88               	movwf	___fldiv@new_exp& (0+255),b
  8533  003A4C  0E00               	movlw	0
  8534  003A4E  0100               	movlb	0	; () banked
  8535  003A50  6F77               	movwf	___fldiv@b& (0+255),b
  8536  003A52  0E00               	movlw	0
  8537  003A54  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8538  003A56  0E00               	movlw	0
  8539  003A58  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8540  003A5A  0E00               	movlw	0
  8541  003A5C  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8542  003A5E  0E00               	movlw	0
  8543  003A60  0100               	movlb	0	; () banked
  8544  003A62  6F83               	movwf	___fldiv@sign& (0+255),b
  8545  003A64                     l6559:
  8546                           
  8547                           ; BSR set to: 0
  8548  003A64  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
  8549                           
  8550                           ; BSR set to: 0
  8551  003A68  0100               	movlb	0	; () banked
  8552  003A6A  A18E               	btfss	___fldiv@bexp& (0+255),0,b
  8553  003A6C  D003               	goto	l6565
  8554                           
  8555                           ; BSR set to: 0
  8556  003A6E  0100               	movlb	0	; () banked
  8557  003A70  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
  8558  003A72  D002               	goto	l6567
  8559  003A74                     l6565:
  8560                           
  8561                           ; BSR set to: 0
  8562  003A74  0100               	movlb	0	; () banked
  8563  003A76  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
  8564  003A78                     l6567:
  8565                           
  8566                           ; BSR set to: 0
  8567  003A78  0100               	movlb	0	; () banked
  8568  003A7A  90D8               	bcf	status,0,c
  8569  003A7C  318E               	rrcf	___fldiv@bexp& (0+255),w,b
  8570  003A7E  0100               	movlb	0	; () banked
  8571  003A80  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8572                           
  8573                           ; BSR set to: 0
  8574  003A82  0100               	movlb	0	; () banked
  8575  003A84  5183               	movf	___fldiv@sign& (0+255),w,b
  8576  003A86  0100               	movlb	0	; () banked
  8577  003A88  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
  8578                           
  8579                           ; BSR set to: 0
  8580  003A8A  C077  F077         	movff	___fldiv@b,?___fldiv
  8581  003A8E  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  8582  003A92  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  8583  003A96  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  8584  003A9A  0012               	return	
  8585  003A9C                     __end_of___fldiv:
  8586                           	opt stack 0
  8587                           tblptru	equ	0xFF8
  8588                           tblptrh	equ	0xFF7
  8589                           tblptrl	equ	0xFF6
  8590                           tablat	equ	0xFF5
  8591                           prodh	equ	0xFF4
  8592                           prodl	equ	0xFF3
  8593                           postinc0	equ	0xFEE
  8594                           wreg	equ	0xFE8
  8595                           postdec1	equ	0xFE5
  8596                           fsr1l	equ	0xFE1
  8597                           postinc2	equ	0xFDE
  8598                           postdec2	equ	0xFDD
  8599                           fsr2h	equ	0xFDA
  8600                           fsr2l	equ	0xFD9
  8601                           status	equ	0xFD8
  8602                           
  8603 ;; *************** function _delay_s *****************
  8604 ;; Defined at:
  8605 ;;		line 102 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  8606 ;; Parameters:    Size  Location     Type
  8607 ;;  value_s         1    wreg     unsigned char 
  8608 ;; Auto vars:     Size  Location     Type
  8609 ;;  value_s         1   31[BANK0 ] unsigned char 
  8610 ;;  repeat_loop     1   32[BANK0 ] unsigned char 
  8611 ;; Return value:  Size  Location     Type
  8612 ;;		None               void
  8613 ;; Registers used:
  8614 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8615 ;; Tracked objects:
  8616 ;;		On entry : 0/0
  8617 ;;		On exit  : 0/0
  8618 ;;		Unchanged: 0/0
  8619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8621 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8623 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8624 ;;Total ram usage:        2 bytes
  8625 ;; Hardware stack levels used:    1
  8626 ;; Hardware stack levels required when called:    6
  8627 ;; This function calls:
  8628 ;;		_delay_ms
  8629 ;; This function is called by:
  8630 ;;		_park_routine
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           
  8634                           	psect	text23
  8635  005C4A                     __ptext23:
  8636                           	opt stack 0
  8637  005C4A                     _delay_s:
  8638                           	opt stack 23
  8639                           
  8640                           ; BSR set to: 0
  8641                           ;incstack = 0
  8642                           ;delay_s@value_s stored from wreg
  8643  005C4A  0100               	movlb	0	; () banked
  8644  005C4C  6F7F               	movwf	delay_s@value_s& (0+255),b
  8645                           
  8646                           ;src\delay.c: 104: unsigned char repeat_loop;
  8647                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
  8648  005C4E  0E00               	movlw	0
  8649  005C50  0100               	movlb	0	; () banked
  8650  005C52  6F80               	movwf	delay_s@repeat_loop& (0+255),b
  8651  005C54  D009               	goto	l5391
  8652  005C56                     l5387:
  8653                           
  8654                           ; BSR set to: 0
  8655                           ;src\delay.c: 107: delay_ms (1000);
  8656  005C56  0E03               	movlw	3
  8657  005C58  0100               	movlb	0	; () banked
  8658  005C5A  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  8659  005C5C  0EE8               	movlw	232
  8660  005C5E  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  8661  005C60  ECBB  F02D         	call	_delay_ms	;wreg free
  8662  005C64  0100               	movlb	0	; () banked
  8663  005C66  2B80               	incf	delay_s@repeat_loop& (0+255),f,b
  8664  005C68                     l5391:
  8665                           
  8666                           ; BSR set to: 0
  8667  005C68  0100               	movlb	0	; () banked
  8668  005C6A  517F               	movf	delay_s@value_s& (0+255),w,b
  8669  005C6C  0100               	movlb	0	; () banked
  8670  005C6E  5D80               	subwf	delay_s@repeat_loop& (0+255),w,b
  8671  005C70  B0D8               	btfsc	status,0,c
  8672  005C72  0012               	return	
  8673  005C74  D7F0               	goto	l5387
  8674  005C76                     __end_of_delay_s:
  8675                           	opt stack 0
  8676                           tblptru	equ	0xFF8
  8677                           tblptrh	equ	0xFF7
  8678                           tblptrl	equ	0xFF6
  8679                           tablat	equ	0xFF5
  8680                           prodh	equ	0xFF4
  8681                           prodl	equ	0xFF3
  8682                           postinc0	equ	0xFEE
  8683                           wreg	equ	0xFE8
  8684                           postdec1	equ	0xFE5
  8685                           fsr1l	equ	0xFE1
  8686                           postinc2	equ	0xFDE
  8687                           postdec2	equ	0xFDD
  8688                           fsr2h	equ	0xFDA
  8689                           fsr2l	equ	0xFD9
  8690                           status	equ	0xFD8
  8691                           
  8692 ;; *************** function _delay_ms *****************
  8693 ;; Defined at:
  8694 ;;		line 61 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  8695 ;; Parameters:    Size  Location     Type
  8696 ;;  value_ms        2   29[BANK0 ] unsigned int 
  8697 ;; Auto vars:     Size  Location     Type
  8698 ;;		None
  8699 ;; Return value:  Size  Location     Type
  8700 ;;		None               void
  8701 ;; Registers used:
  8702 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8703 ;; Tracked objects:
  8704 ;;		On entry : 0/0
  8705 ;;		On exit  : 0/0
  8706 ;;		Unchanged: 0/0
  8707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8708 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8711 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8712 ;;Total ram usage:        2 bytes
  8713 ;; Hardware stack levels used:    1
  8714 ;; Hardware stack levels required when called:    5
  8715 ;; This function calls:
  8716 ;;		___wmul
  8717 ;; This function is called by:
  8718 ;;		_delay_s
  8719 ;; This function uses a non-reentrant model
  8720 ;;
  8721                           
  8722                           	psect	text24
  8723  005B76                     __ptext24:
  8724                           	opt stack 0
  8725  005B76                     _delay_ms:
  8726                           	opt stack 23
  8727                           
  8728                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  8729                           
  8730                           ; BSR set to: 0
  8731                           ;incstack = 0
  8732  005B76  C0E7  F077         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  8733  005B7A  0100               	movlb	0	; () banked
  8734  005B7C  6B78               	clrf	(___wmul@multiplier+1)& (0+255),b
  8735  005B7E  C07D  F079         	movff	delay_ms@value_ms,___wmul@multiplicand
  8736  005B82  C07E  F07A         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  8737  005B86  ECF4  F02D         	call	___wmul	;wreg free
  8738  005B8A  C077  F0E1         	movff	?___wmul,_clock_counter_reference	;volatile
  8739  005B8E  C078  F0E2         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  8740                           
  8741                           ;src\delay.c: 75: while (clock_counter_reference) {
  8742  005B92  D007               	goto	l569
  8743  005B94                     l5243:
  8744                           
  8745                           ;src\delay.c: 85: _delay(240);
  8746  005B94  0E50               	movlw	80
  8747  005B96                     u9007:
  8748  005B96  2EE8               	decfsz	wreg,f,c
  8749  005B98  D7FE               	goto	u9007
  8750                           
  8751                           ;src\delay.c: 88: clock_counter_reference--;
  8752  005B9A  0100               	movlb	0	; () banked
  8753  005B9C  07E1               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  8754  005B9E  A0D8               	btfss	status,0,c
  8755  005BA0  07E2               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  8756  005BA2                     l569:
  8757  005BA2  0100               	movlb	0	; () banked
  8758  005BA4  51E1               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  8759  005BA6  0100               	movlb	0	; () banked
  8760  005BA8  11E2               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  8761  005BAA  B4D8               	btfsc	status,2,c
  8762  005BAC  0012               	return	
  8763  005BAE  D7F2               	goto	l5243
  8764  005BB0                     __end_of_delay_ms:
  8765                           	opt stack 0
  8766                           tblptru	equ	0xFF8
  8767                           tblptrh	equ	0xFF7
  8768                           tblptrl	equ	0xFF6
  8769                           tablat	equ	0xFF5
  8770                           prodh	equ	0xFF4
  8771                           prodl	equ	0xFF3
  8772                           postinc0	equ	0xFEE
  8773                           wreg	equ	0xFE8
  8774                           postdec1	equ	0xFE5
  8775                           fsr1l	equ	0xFE1
  8776                           postinc2	equ	0xFDE
  8777                           postdec2	equ	0xFDD
  8778                           fsr2h	equ	0xFDA
  8779                           fsr2l	equ	0xFD9
  8780                           status	equ	0xFD8
  8781                           
  8782 ;; *************** function ___wmul *****************
  8783 ;; Defined at:
  8784 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;  multiplier      2   23[BANK0 ] unsigned int 
  8787 ;;  multiplicand    2   25[BANK0 ] unsigned int 
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;  product         2   27[BANK0 ] unsigned int 
  8790 ;; Return value:  Size  Location     Type
  8791 ;;                  2   23[BANK0 ] unsigned int 
  8792 ;; Registers used:
  8793 ;;		wreg, status,2, status,0, prodl, prodh
  8794 ;; Tracked objects:
  8795 ;;		On entry : 0/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8799 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8800 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8802 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8803 ;;Total ram usage:        6 bytes
  8804 ;; Hardware stack levels used:    1
  8805 ;; Hardware stack levels required when called:    4
  8806 ;; This function calls:
  8807 ;;		Nothing
  8808 ;; This function is called by:
  8809 ;;		_delay_ms
  8810 ;; This function uses a non-reentrant model
  8811 ;;
  8812                           
  8813                           	psect	text25
  8814  005BE8                     __ptext25:
  8815                           	opt stack 0
  8816  005BE8                     ___wmul:
  8817                           	opt stack 23
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;incstack = 0
  8821  005BE8  0100               	movlb	0	; () banked
  8822  005BEA  5177               	movf	___wmul@multiplier& (0+255),w,b
  8823  005BEC  0100               	movlb	0	; () banked
  8824  005BEE  0379               	mulwf	___wmul@multiplicand& (0+255),b
  8825  005BF0  CFF3 F07B          	movff	prodl,___wmul@product
  8826  005BF4  CFF4 F07C          	movff	prodh,___wmul@product+1
  8827  005BF8  0100               	movlb	0	; () banked
  8828  005BFA  5177               	movf	___wmul@multiplier& (0+255),w,b
  8829  005BFC  0100               	movlb	0	; () banked
  8830  005BFE  037A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8831  005C00  50F3               	movf	prodl,w,c
  8832  005C02  0100               	movlb	0	; () banked
  8833  005C04  277C               	addwf	(___wmul@product+1)& (0+255),f,b
  8834  005C06  0100               	movlb	0	; () banked
  8835  005C08  5178               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8836  005C0A  0100               	movlb	0	; () banked
  8837  005C0C  0379               	mulwf	___wmul@multiplicand& (0+255),b
  8838  005C0E  50F3               	movf	prodl,w,c
  8839  005C10  0100               	movlb	0	; () banked
  8840  005C12  277C               	addwf	(___wmul@product+1)& (0+255),f,b
  8841                           
  8842                           ; BSR set to: 0
  8843  005C14  C07B  F077         	movff	___wmul@product,?___wmul
  8844  005C18  C07C  F078         	movff	___wmul@product+1,?___wmul+1
  8845  005C1C  0012               	return	
  8846  005C1E                     __end_of___wmul:
  8847                           	opt stack 0
  8848                           tblptru	equ	0xFF8
  8849                           tblptrh	equ	0xFF7
  8850                           tblptrl	equ	0xFF6
  8851                           tablat	equ	0xFF5
  8852                           prodh	equ	0xFF4
  8853                           prodl	equ	0xFF3
  8854                           postinc0	equ	0xFEE
  8855                           wreg	equ	0xFE8
  8856                           postdec1	equ	0xFE5
  8857                           fsr1l	equ	0xFE1
  8858                           postinc2	equ	0xFDE
  8859                           postdec2	equ	0xFDD
  8860                           fsr2h	equ	0xFDA
  8861                           fsr2l	equ	0xFD9
  8862                           status	equ	0xFD8
  8863                           
  8864 ;; *************** function _can_send *****************
  8865 ;; Defined at:
  8866 ;;		line 309 in file "parcheggio.c"
  8867 ;; Parameters:    Size  Location     Type
  8868 ;;		None
  8869 ;; Auto vars:     Size  Location     Type
  8870 ;;  data_correct    0   39[BANK0 ] unsigned char [0]
  8871 ;; Return value:  Size  Location     Type
  8872 ;;		None               void
  8873 ;; Registers used:
  8874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8875 ;; Tracked objects:
  8876 ;;		On entry : 0/0
  8877 ;;		On exit  : 0/0
  8878 ;;		Unchanged: 0/0
  8879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8884 ;;Total ram usage:        0 bytes
  8885 ;; Hardware stack levels used:    1
  8886 ;; Hardware stack levels required when called:    5
  8887 ;; This function calls:
  8888 ;;		_CANisTxReady
  8889 ;;		_CANsendMessage
  8890 ;; This function is called by:
  8891 ;;		_park_routine
  8892 ;;		_parallelo
  8893 ;; This function uses a non-reentrant model
  8894 ;;
  8895                           
  8896                           	psect	text26
  8897  005220                     __ptext26:
  8898                           	opt stack 0
  8899  005220                     _can_send:
  8900                           	opt stack 23
  8901                           
  8902                           ;parcheggio.c: 310: if (PORTBbits.RB5 == 1) {
  8903                           
  8904                           ; BSR set to: 0
  8905                           ;incstack = 0
  8906  005220  AA81               	btfss	3969,5,c	;volatile
  8907  005222  D060               	goto	l5273
  8908  005224                     l5255:
  8909  005224  EC3B  F02E         	call	_CANisTxReady	;wreg free
  8910  005228  06E8               	decf	wreg,f,c
  8911  00522A  A4D8               	btfss	status,2,c
  8912  00522C  D7FB               	goto	l5255
  8913                           
  8914                           ;parcheggio.c: 312: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  8915  00522E  0E05               	movlw	5
  8916  005230  0100               	movlb	0	; () banked
  8917  005232  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  8918  005234  0E00               	movlw	0
  8919  005236  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  8920  005238  0E00               	movlw	0
  8921  00523A  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  8922  00523C  0E00               	movlw	0
  8923  00523E  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  8924  005240  0E73               	movlw	low _data_steering
  8925  005242  0100               	movlb	0	; () banked
  8926  005244  6F7B               	movwf	CANsendMessage@data& (0+255),b
  8927  005246  0E01               	movlw	high _data_steering
  8928  005248  0100               	movlb	0	; () banked
  8929  00524A  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  8930  00524C  0E08               	movlw	8
  8931  00524E  0100               	movlb	0	; () banked
  8932  005250  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  8933  005252  0EBC               	movlw	188
  8934  005254  0100               	movlb	0	; () banked
  8935  005256  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  8936  005258  EC2C  F00C         	call	_CANsendMessage	;wreg free
  8937                           
  8938                           ;parcheggio.c: 313: data_speed[0] = set_speed;
  8939  00525C  C0E5  F16B         	movff	_set_speed,_data_speed
  8940                           
  8941                           ;parcheggio.c: 314: data_speed[1] = (set_speed >> 8);
  8942  005260  0100               	movlb	0	; () banked
  8943  005262  51E6               	movf	(_set_speed+1)& (0+255),w,b
  8944  005264  0101               	movlb	1	; () banked
  8945  005266  6F6C               	movwf	(_data_speed+1)& (0+255),b
  8946                           
  8947                           ; BSR set to: 1
  8948                           ;parcheggio.c: 315: data_speed[2] = dir;
  8949  005268  0E00               	movlw	0
  8950  00526A  B444               	btfsc	_dir/(0+8),_dir& (0+7),c
  8951  00526C  0E01               	movlw	1
  8952  00526E  0101               	movlb	1	; () banked
  8953  005270  6F6D               	movwf	(_data_speed+2)& (0+255),b
  8954  005272                     l5265:
  8955  005272  EC3B  F02E         	call	_CANisTxReady	;wreg free
  8956  005276  06E8               	decf	wreg,f,c
  8957  005278  A4D8               	btfss	status,2,c
  8958  00527A  D7FB               	goto	l5265
  8959                           
  8960                           ;parcheggio.c: 317: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  8961  00527C  0E03               	movlw	3
  8962  00527E  0100               	movlb	0	; () banked
  8963  005280  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  8964  005282  0E00               	movlw	0
  8965  005284  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  8966  005286  0E00               	movlw	0
  8967  005288  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  8968  00528A  0E00               	movlw	0
  8969  00528C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  8970  00528E  0E6B               	movlw	low _data_speed
  8971  005290  0100               	movlb	0	; () banked
  8972  005292  6F7B               	movwf	CANsendMessage@data& (0+255),b
  8973  005294  0E01               	movlw	high _data_speed
  8974  005296  0100               	movlb	0	; () banked
  8975  005298  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  8976  00529A  0E08               	movlw	8
  8977  00529C  0100               	movlb	0	; () banked
  8978  00529E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  8979  0052A0  0EBC               	movlw	188
  8980  0052A2  0100               	movlb	0	; () banked
  8981  0052A4  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  8982  0052A6  EC2C  F00C         	call	_CANsendMessage	;wreg free
  8983  0052AA                     l5269:
  8984  0052AA  EC3B  F02E         	call	_CANisTxReady	;wreg free
  8985  0052AE  06E8               	decf	wreg,f,c
  8986  0052B0  A4D8               	btfss	status,2,c
  8987  0052B2  D7FB               	goto	l5269
  8988                           
  8989                           ;parcheggio.c: 319: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  8990  0052B4  0E04               	movlw	4
  8991  0052B6  0100               	movlb	0	; () banked
  8992  0052B8  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  8993  0052BA  0E00               	movlw	0
  8994  0052BC  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  8995  0052BE  0E00               	movlw	0
  8996  0052C0  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  8997  0052C2  0E00               	movlw	0
  8998  0052C4  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  8999  0052C6  0E5B               	movlw	low _data_brake
  9000  0052C8  0100               	movlb	0	; () banked
  9001  0052CA  6F7B               	movwf	CANsendMessage@data& (0+255),b
  9002  0052CC  0E01               	movlw	high _data_brake
  9003  0052CE  0100               	movlb	0	; () banked
  9004  0052D0  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  9005  0052D2  0E08               	movlw	8
  9006  0052D4  0100               	movlb	0	; () banked
  9007  0052D6  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  9008  0052D8  0EBC               	movlw	188
  9009  0052DA  0100               	movlb	0	; () banked
  9010  0052DC  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  9011  0052DE  EC2C  F00C         	call	_CANsendMessage	;wreg free
  9012                           
  9013                           ;parcheggio.c: 320: } else {
  9014  0052E2  0012               	return	
  9015  0052E4                     l5273:
  9016                           
  9017                           ;parcheggio.c: 321: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  9018  0052E4  0E0E               	movlw	14
  9019  0052E6  0100               	movlb	0	; () banked
  9020  0052E8  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  9021  0052EA  0E00               	movlw	0
  9022  0052EC  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  9023  0052EE  0E00               	movlw	0
  9024  0052F0  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  9025  0052F2  0E00               	movlw	0
  9026  0052F4  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  9027  0052F6  0E63               	movlw	low _data_correction
  9028  0052F8  0100               	movlb	0	; () banked
  9029  0052FA  6F7B               	movwf	CANsendMessage@data& (0+255),b
  9030  0052FC  0E01               	movlw	high _data_correction
  9031  0052FE  0100               	movlb	0	; () banked
  9032  005300  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  9033  005302  0E08               	movlw	8
  9034  005304  0100               	movlb	0	; () banked
  9035  005306  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  9036  005308  0EBC               	movlw	188
  9037  00530A  0100               	movlb	0	; () banked
  9038  00530C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  9039  00530E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  9040                           
  9041                           ;parcheggio.c: 322: unsigned char data_correction1[];
  9042                           ;parcheggio.c: 323: data_correction1[0] = data_correction[0];
  9043  005312  EE20  F087         	lfsr	2,can_send@data_correction1
  9044  005316  C163  FFDF         	movff	_data_correction,indf2
  9045                           
  9046                           ;parcheggio.c: 324: data_correction1[1] = 0;
  9047  00531A  0E00               	movlw	0
  9048  00531C  CFE8 F088          	movff	wreg,can_send@data_correction1+1
  9049                           
  9050                           ;parcheggio.c: 325: CANsendMessage(0xAA, data_correction1, 8, CAN_CONFIG_STD_MSG & CAN_N
      +                          ORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  9051  005320  0EAA               	movlw	170
  9052  005322  0100               	movlb	0	; () banked
  9053  005324  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  9054  005326  0E00               	movlw	0
  9055  005328  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  9056  00532A  0E00               	movlw	0
  9057  00532C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  9058  00532E  0E00               	movlw	0
  9059  005330  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  9060  005332  0E87               	movlw	low can_send@data_correction1
  9061  005334  0100               	movlb	0	; () banked
  9062  005336  6F7B               	movwf	CANsendMessage@data& (0+255),b
  9063  005338  0E00               	movlw	high can_send@data_correction1
  9064  00533A  0100               	movlb	0	; () banked
  9065  00533C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  9066  00533E  0E08               	movlw	8
  9067  005340  0100               	movlb	0	; () banked
  9068  005342  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  9069  005344  0EBC               	movlw	188
  9070  005346  0100               	movlb	0	; () banked
  9071  005348  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  9072  00534A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  9073  00534E  0012               	return	
  9074  005350                     __end_of_can_send:
  9075                           	opt stack 0
  9076                           tblptru	equ	0xFF8
  9077                           tblptrh	equ	0xFF7
  9078                           tblptrl	equ	0xFF6
  9079                           tablat	equ	0xFF5
  9080                           prodh	equ	0xFF4
  9081                           prodl	equ	0xFF3
  9082                           postinc0	equ	0xFEE
  9083                           wreg	equ	0xFE8
  9084                           postdec1	equ	0xFE5
  9085                           fsr1l	equ	0xFE1
  9086                           indf2	equ	0xFDF
  9087                           postinc2	equ	0xFDE
  9088                           postdec2	equ	0xFDD
  9089                           fsr2h	equ	0xFDA
  9090                           fsr2l	equ	0xFD9
  9091                           status	equ	0xFD8
  9092                           
  9093 ;; *************** function _CANsendMessage *****************
  9094 ;; Defined at:
  9095 ;;		line 294 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  9096 ;; Parameters:    Size  Location     Type
  9097 ;;  identifier      4   23[BANK0 ] unsigned long 
  9098 ;;  data            2   27[BANK0 ] PTR unsigned char 
  9099 ;;		 -> can_send@data_correction1(0), data_correction(8), data_speed(8), data_test(8), 
  9100 ;;		 -> data_steering(8), data_brake(8), data(8), 
  9101 ;;  dataLength      1   29[BANK0 ] unsigned char 
  9102 ;;  flags           1   30[BANK0 ] enum E16335
  9103 ;; Auto vars:     Size  Location     Type
  9104 ;;  tamp            4   35[BANK0 ] unsigned long 
  9105 ;; Return value:  Size  Location     Type
  9106 ;;		None               void
  9107 ;; Registers used:
  9108 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9109 ;; Tracked objects:
  9110 ;;		On entry : 0/0
  9111 ;;		On exit  : 0/0
  9112 ;;		Unchanged: 0/0
  9113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9114 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9115 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9116 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9117 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9118 ;;Total ram usage:       16 bytes
  9119 ;; Hardware stack levels used:    1
  9120 ;; Hardware stack levels required when called:    4
  9121 ;; This function calls:
  9122 ;;		Nothing
  9123 ;; This function is called by:
  9124 ;;		_park_search
  9125 ;;		_park_routine
  9126 ;;		_can_send
  9127 ;; This function uses a non-reentrant model
  9128 ;;
  9129                           
  9130                           	psect	text27
  9131  001858                     __ptext27:
  9132                           	opt stack 0
  9133  001858                     _CANsendMessage:
  9134                           	opt stack 23
  9135                           
  9136                           ;inc\CANlib.h: 296: unsigned long tamp;
  9137                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  9138                           
  9139                           ;incstack = 0
  9140  001858  010F               	movlb	15	; () banked
  9141  00185A  B740               	btfsc	64,3,b	;volatile
  9142  00185C  D13F               	goto	l363
  9143                           
  9144                           ; BSR set to: 15
  9145                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  9146  00185E  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  9147                           
  9148                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  9149  001862  0100               	movlb	0	; () banked
  9150  001864  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  9151  001866  D003               	goto	l364
  9152                           
  9153                           ; BSR set to: 0
  9154                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  9155  001868  010F               	movlb	15	; () banked
  9156  00186A  8D45               	bsf	69,6,b	;volatile
  9157  00186C  D002               	goto	l365
  9158  00186E                     l364:
  9159                           
  9160                           ; BSR set to: 0
  9161                           ;inc\CANlib.h: 302: else
  9162                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  9163  00186E  010F               	movlb	15	; () banked
  9164  001870  9D45               	bcf	69,6,b	;volatile
  9165  001872                     l365:
  9166                           
  9167                           ; BSR set to: 15
  9168                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  9169  001872  0100               	movlb	0	; () banked
  9170  001874  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  9171  001876  D079               	goto	l366
  9172                           
  9173                           ; BSR set to: 0
  9174                           ;inc\CANlib.h: 306: {
  9175                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  9176  001878  0100               	movlb	0	; () banked
  9177  00187A  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  9178  00187C  0100               	movlb	0	; () banked
  9179  00187E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9180  001880  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9181  001882  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9182  001884  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9183                           
  9184                           ; BSR set to: 0
  9185                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  9186  001886  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  9190  00188A  0E00               	movlw	0
  9191  00188C  0100               	movlb	0	; () banked
  9192  00188E  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  9193  001890  0100               	movlb	0	; () banked
  9194  001892  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9195  001894  0EFF               	movlw	255
  9196  001896  0100               	movlb	0	; () banked
  9197  001898  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  9198  00189A  0100               	movlb	0	; () banked
  9199  00189C  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  9200  00189E  0E00               	movlw	0
  9201  0018A0  0100               	movlb	0	; () banked
  9202  0018A2  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  9203  0018A4  0100               	movlb	0	; () banked
  9204  0018A6  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  9205  0018A8  0E00               	movlw	0
  9206  0018AA  0100               	movlb	0	; () banked
  9207  0018AC  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  9208  0018AE  0100               	movlb	0	; () banked
  9209  0018B0  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  9210                           
  9211                           ; BSR set to: 0
  9212                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  9213  0018B2  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  9214  0018B6  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  9215  0018BA  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  9216  0018BE  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  9217  0018C2  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  9218  0018C6  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  9219  0018CA  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  9220  0018CE  0100               	movlb	0	; () banked
  9221  0018D0  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  9222  0018D2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9223  0018D6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9224  0018DA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9225  0018DE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9226                           
  9227                           ; BSR set to: 0
  9228                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  9229  0018E2  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  9230                           
  9231                           ; BSR set to: 0
  9232                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  9233  0018E6  0E00               	movlw	0
  9234  0018E8  010F               	movlb	15	; () banked
  9235  0018EA  6F42               	movwf	66,b	;volatile
  9236                           
  9237                           ; BSR set to: 15
  9238                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  9239  0018EC  010F               	movlb	15	; () banked
  9240  0018EE  8742               	bsf	66,3,b	;volatile
  9241                           
  9242                           ; BSR set to: 15
  9243                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  9244  0018F0  0100               	movlb	0	; () banked
  9245  0018F2  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  9246  0018F4  D002               	goto	l367
  9247                           
  9248                           ; BSR set to: 0
  9249                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  9250  0018F6  010F               	movlb	15	; () banked
  9251  0018F8  8142               	bsf	66,0,b	;volatile
  9252  0018FA                     l367:
  9253                           
  9254                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  9255  0018FA  0100               	movlb	0	; () banked
  9256  0018FC  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  9257  0018FE  D002               	goto	l368
  9258                           
  9259                           ; BSR set to: 0
  9260                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  9261  001900  010F               	movlb	15	; () banked
  9262  001902  8342               	bsf	66,1,b	;volatile
  9263  001904                     l368:
  9264                           
  9265                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  9266  001904  0100               	movlb	0	; () banked
  9267  001906  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  9268  001908  D002               	goto	l369
  9269                           
  9270                           ; BSR set to: 0
  9271                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  9272  00190A  010F               	movlb	15	; () banked
  9273  00190C  8B42               	bsf	66,5,b	;volatile
  9274  00190E                     l369:
  9275                           
  9276                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  9277  00190E  0100               	movlb	0	; () banked
  9278  001910  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  9279  001912  D002               	goto	l370
  9280                           
  9281                           ; BSR set to: 0
  9282                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  9283  001914  010F               	movlb	15	; () banked
  9284  001916  8D42               	bsf	66,6,b	;volatile
  9285  001918                     l370:
  9286                           
  9287                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  9288  001918  0100               	movlb	0	; () banked
  9289  00191A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  9290  00191C  D002               	goto	l4447
  9291                           
  9292                           ; BSR set to: 0
  9293                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  9294  00191E  010F               	movlb	15	; () banked
  9295  001920  8F42               	bsf	66,7,b	;volatile
  9296  001922                     l4447:
  9297                           
  9298                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  9299  001922  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  9300  001926  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  9301  00192A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  9302  00192E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  9303  001932  0E16               	movlw	22
  9304  001934  D006               	goto	u4850
  9305  001936                     u4855:
  9306  001936  0100               	movlb	0	; () banked
  9307  001938  90D8               	bcf	status,0,c
  9308  00193A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  9309  00193C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  9310  00193E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  9311  001940  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  9312  001942                     u4850:
  9313  001942  2EE8               	decfsz	wreg,f,c
  9314  001944  D7F8               	goto	u4855
  9315  001946  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9316  00194A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9317  00194E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9318  001952  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9319                           
  9320                           ; BSR set to: 0
  9321                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  9322  001956  0100               	movlb	0	; () banked
  9323  001958  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  9324  00195A  0100               	movlb	0	; () banked
  9325  00195C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9326  00195E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9327  001960  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9328  001962  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9329                           
  9330                           ; BSR set to: 0
  9331                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  9332  001964  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  9333                           
  9334                           ;inc\CANlib.h: 332: }
  9335  001968  D059               	goto	l4467
  9336  00196A                     l366:
  9337                           
  9338                           ; BSR set to: 0
  9339                           ;inc\CANlib.h: 334: else
  9340                           ;inc\CANlib.h: 336: {
  9341                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  9342  00196A  010F               	movlb	15	; () banked
  9343  00196C  9742               	bcf	66,3,b	;volatile
  9344                           
  9345                           ; BSR set to: 15
  9346                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  9347  00196E  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  9348  001972  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  9349  001976  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  9350  00197A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  9351  00197E  0E04               	movlw	4
  9352  001980  D006               	goto	u4860
  9353  001982                     u4865:
  9354  001982  0100               	movlb	0	; () banked
  9355  001984  90D8               	bcf	status,0,c
  9356  001986  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  9357  001988  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  9358  00198A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  9359  00198C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  9360  00198E                     u4860:
  9361  00198E  2EE8               	decfsz	wreg,f,c
  9362  001990  D7F8               	goto	u4865
  9363  001992  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9364  001996  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9365  00199A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9366  00199E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9367                           
  9368                           ; BSR set to: 0
  9369                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  9370  0019A2  0100               	movlb	0	; () banked
  9371  0019A4  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  9372  0019A6  0100               	movlb	0	; () banked
  9373  0019A8  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9374  0019AA  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9375  0019AC  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9376  0019AE  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9377                           
  9378                           ; BSR set to: 0
  9379                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  9380  0019B0  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  9381                           
  9382                           ; BSR set to: 0
  9383                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  9384  0019B4  0E07               	movlw	7
  9385  0019B6  0100               	movlb	0	; () banked
  9386  0019B8  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  9387  0019BA  0100               	movlb	0	; () banked
  9388  0019BC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9389  0019BE  0E00               	movlw	0
  9390  0019C0  0100               	movlb	0	; () banked
  9391  0019C2  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  9392  0019C4  0100               	movlb	0	; () banked
  9393  0019C6  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  9394  0019C8  0E00               	movlw	0
  9395  0019CA  0100               	movlb	0	; () banked
  9396  0019CC  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  9397  0019CE  0100               	movlb	0	; () banked
  9398  0019D0  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  9399  0019D2  0E00               	movlw	0
  9400  0019D4  0100               	movlb	0	; () banked
  9401  0019D6  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  9402  0019D8  0100               	movlb	0	; () banked
  9403  0019DA  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  9404                           
  9405                           ; BSR set to: 0
  9406                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  9407  0019DC  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  9408  0019E0  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  9409  0019E4  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  9410  0019E8  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  9411  0019EC  0E05               	movlw	5
  9412  0019EE                     u4875:
  9413  0019EE  90D8               	bcf	status,0,c
  9414  0019F0  0100               	movlb	0	; () banked
  9415  0019F2  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  9416  0019F4  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  9417  0019F6  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  9418  0019F8  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  9419  0019FA  2EE8               	decfsz	wreg,f,c
  9420  0019FC  D7F8               	goto	u4875
  9421  0019FE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9422  001A02  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9423  001A06  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9424  001A0A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9425                           
  9426                           ; BSR set to: 0
  9427                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  9428  001A0E  010F               	movlb	15	; () banked
  9429  001A10  5142               	movf	66,w,b	;volatile
  9430  001A12  0B1F               	andlw	31
  9431  001A14  010F               	movlb	15	; () banked
  9432  001A16  6F42               	movwf	66,b	;volatile
  9433                           
  9434                           ; BSR set to: 15
  9435                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  9436  001A18  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  9437  001A1C                     l4467:
  9438                           
  9439                           ;inc\CANlib.h: 347: }
  9440                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  9441  001A1C  0100               	movlb	0	; () banked
  9442  001A1E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  9443  001A20  D003               	goto	l373
  9444                           
  9445                           ; BSR set to: 0
  9446                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  9447  001A22  010F               	movlb	15	; () banked
  9448  001A24  8140               	bsf	64,0,b	;volatile
  9449  001A26  D002               	goto	l374
  9450  001A28                     l373:
  9451                           
  9452                           ; BSR set to: 0
  9453                           ;inc\CANlib.h: 351: else
  9454                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  9455  001A28  010F               	movlb	15	; () banked
  9456  001A2A  9140               	bcf	64,0,b	;volatile
  9457  001A2C                     l374:
  9458                           
  9459                           ; BSR set to: 15
  9460                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  9461  001A2C  0100               	movlb	0	; () banked
  9462  001A2E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  9463  001A30  D003               	goto	l375
  9464                           
  9465                           ; BSR set to: 0
  9466                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  9467  001A32  010F               	movlb	15	; () banked
  9468  001A34  8340               	bsf	64,1,b	;volatile
  9469  001A36  D002               	goto	l4473
  9470  001A38                     l375:
  9471                           
  9472                           ; BSR set to: 0
  9473                           ;inc\CANlib.h: 355: else
  9474                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  9475  001A38  010F               	movlb	15	; () banked
  9476  001A3A  9340               	bcf	64,1,b	;volatile
  9477  001A3C                     l4473:
  9478                           
  9479                           ; BSR set to: 15
  9480                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  9481  001A3C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  9482  001A40  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  9483  001A44  50DF               	movf	indf2,w,c
  9484  001A46  010F               	movlb	15	; () banked
  9485  001A48  6F46               	movwf	70,b	;volatile
  9486                           
  9487                           ; BSR set to: 15
  9488                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  9489  001A4A  0100               	movlb	0	; () banked
  9490  001A4C  EE20 F001          	lfsr	2,1
  9491  001A50  517B               	movf	CANsendMessage@data& (0+255),w,b
  9492  001A52  26D9               	addwf	fsr2l,f,c
  9493  001A54  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9494  001A56  22DA               	addwfc	fsr2h,f,c
  9495  001A58  50DF               	movf	indf2,w,c
  9496  001A5A  010F               	movlb	15	; () banked
  9497  001A5C  6F47               	movwf	71,b	;volatile
  9498                           
  9499                           ; BSR set to: 15
  9500                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  9501  001A5E  0100               	movlb	0	; () banked
  9502  001A60  EE20 F002          	lfsr	2,2
  9503  001A64  517B               	movf	CANsendMessage@data& (0+255),w,b
  9504  001A66  26D9               	addwf	fsr2l,f,c
  9505  001A68  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9506  001A6A  22DA               	addwfc	fsr2h,f,c
  9507  001A6C  50DF               	movf	indf2,w,c
  9508  001A6E  010F               	movlb	15	; () banked
  9509  001A70  6F48               	movwf	72,b	;volatile
  9510                           
  9511                           ; BSR set to: 15
  9512                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  9513  001A72  0100               	movlb	0	; () banked
  9514  001A74  EE20 F003          	lfsr	2,3
  9515  001A78  517B               	movf	CANsendMessage@data& (0+255),w,b
  9516  001A7A  26D9               	addwf	fsr2l,f,c
  9517  001A7C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9518  001A7E  22DA               	addwfc	fsr2h,f,c
  9519  001A80  50DF               	movf	indf2,w,c
  9520  001A82  010F               	movlb	15	; () banked
  9521  001A84  6F49               	movwf	73,b	;volatile
  9522                           
  9523                           ; BSR set to: 15
  9524                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  9525  001A86  0100               	movlb	0	; () banked
  9526  001A88  EE20 F004          	lfsr	2,4
  9527  001A8C  517B               	movf	CANsendMessage@data& (0+255),w,b
  9528  001A8E  26D9               	addwf	fsr2l,f,c
  9529  001A90  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9530  001A92  22DA               	addwfc	fsr2h,f,c
  9531  001A94  50DF               	movf	indf2,w,c
  9532  001A96  010F               	movlb	15	; () banked
  9533  001A98  6F4A               	movwf	74,b	;volatile
  9534                           
  9535                           ; BSR set to: 15
  9536                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  9537  001A9A  0100               	movlb	0	; () banked
  9538  001A9C  EE20 F005          	lfsr	2,5
  9539  001AA0  517B               	movf	CANsendMessage@data& (0+255),w,b
  9540  001AA2  26D9               	addwf	fsr2l,f,c
  9541  001AA4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9542  001AA6  22DA               	addwfc	fsr2h,f,c
  9543  001AA8  50DF               	movf	indf2,w,c
  9544  001AAA  010F               	movlb	15	; () banked
  9545  001AAC  6F4B               	movwf	75,b	;volatile
  9546                           
  9547                           ; BSR set to: 15
  9548                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  9549  001AAE  0100               	movlb	0	; () banked
  9550  001AB0  EE20 F006          	lfsr	2,6
  9551  001AB4  517B               	movf	CANsendMessage@data& (0+255),w,b
  9552  001AB6  26D9               	addwf	fsr2l,f,c
  9553  001AB8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9554  001ABA  22DA               	addwfc	fsr2h,f,c
  9555  001ABC  50DF               	movf	indf2,w,c
  9556  001ABE  010F               	movlb	15	; () banked
  9557  001AC0  6F4C               	movwf	76,b	;volatile
  9558                           
  9559                           ; BSR set to: 15
  9560                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  9561  001AC2  0100               	movlb	0	; () banked
  9562  001AC4  EE20 F007          	lfsr	2,7
  9563  001AC8  517B               	movf	CANsendMessage@data& (0+255),w,b
  9564  001ACA  26D9               	addwf	fsr2l,f,c
  9565  001ACC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9566  001ACE  22DA               	addwfc	fsr2h,f,c
  9567  001AD0  50DF               	movf	indf2,w,c
  9568  001AD2  010F               	movlb	15	; () banked
  9569  001AD4  6F4D               	movwf	77,b	;volatile
  9570                           
  9571                           ; BSR set to: 15
  9572                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  9573  001AD6  010F               	movlb	15	; () banked
  9574  001AD8  8740               	bsf	64,3,b	;volatile
  9575                           
  9576                           ; BSR set to: 15
  9577                           ;inc\CANlib.h: 368: return;
  9578  001ADA  0012               	return	
  9579  001ADC                     l363:
  9580                           
  9581                           ; BSR set to: 15
  9582                           ;inc\CANlib.h: 369: }
  9583                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  9584  001ADC  010F               	movlb	15	; () banked
  9585  001ADE  B730               	btfsc	48,3,b	;volatile
  9586  001AE0  D13F               	goto	l378
  9587                           
  9588                           ; BSR set to: 15
  9589                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  9590  001AE2  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  9591                           
  9592                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  9593  001AE6  0100               	movlb	0	; () banked
  9594  001AE8  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  9595  001AEA  D003               	goto	l379
  9596                           
  9597                           ; BSR set to: 0
  9598                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  9599  001AEC  010F               	movlb	15	; () banked
  9600  001AEE  8D35               	bsf	53,6,b	;volatile
  9601  001AF0  D002               	goto	l380
  9602  001AF2                     l379:
  9603                           
  9604                           ; BSR set to: 0
  9605                           ;inc\CANlib.h: 378: else
  9606                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  9607  001AF2  010F               	movlb	15	; () banked
  9608  001AF4  9D35               	bcf	53,6,b	;volatile
  9609  001AF6                     l380:
  9610                           
  9611                           ; BSR set to: 15
  9612                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  9613  001AF6  0100               	movlb	0	; () banked
  9614  001AF8  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  9615  001AFA  D079               	goto	l381
  9616                           
  9617                           ; BSR set to: 0
  9618                           ;inc\CANlib.h: 382: {
  9619                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  9620  001AFC  0100               	movlb	0	; () banked
  9621  001AFE  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  9622  001B00  0100               	movlb	0	; () banked
  9623  001B02  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9624  001B04  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9625  001B06  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9626  001B08  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9627                           
  9628                           ; BSR set to: 0
  9629                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  9630  001B0A  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  9634  001B0E  0E00               	movlw	0
  9635  001B10  0100               	movlb	0	; () banked
  9636  001B12  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  9637  001B14  0100               	movlb	0	; () banked
  9638  001B16  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9639  001B18  0EFF               	movlw	255
  9640  001B1A  0100               	movlb	0	; () banked
  9641  001B1C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  9642  001B1E  0100               	movlb	0	; () banked
  9643  001B20  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  9644  001B22  0E00               	movlw	0
  9645  001B24  0100               	movlb	0	; () banked
  9646  001B26  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  9647  001B28  0100               	movlb	0	; () banked
  9648  001B2A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  9649  001B2C  0E00               	movlw	0
  9650  001B2E  0100               	movlb	0	; () banked
  9651  001B30  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  9652  001B32  0100               	movlb	0	; () banked
  9653  001B34  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  9654                           
  9655                           ; BSR set to: 0
  9656                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  9657  001B36  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  9658  001B3A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  9659  001B3E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  9660  001B42  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  9661  001B46  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  9662  001B4A  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  9663  001B4E  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  9664  001B52  0100               	movlb	0	; () banked
  9665  001B54  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  9666  001B56  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9667  001B5A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9668  001B5E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9669  001B62  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9670                           
  9671                           ; BSR set to: 0
  9672                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  9673  001B66  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  9674                           
  9675                           ; BSR set to: 0
  9676                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  9677  001B6A  0E00               	movlw	0
  9678  001B6C  010F               	movlb	15	; () banked
  9679  001B6E  6F32               	movwf	50,b	;volatile
  9680                           
  9681                           ; BSR set to: 15
  9682                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  9683  001B70  010F               	movlb	15	; () banked
  9684  001B72  8732               	bsf	50,3,b	;volatile
  9685                           
  9686                           ; BSR set to: 15
  9687                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  9688  001B74  0100               	movlb	0	; () banked
  9689  001B76  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  9690  001B78  D002               	goto	l382
  9691                           
  9692                           ; BSR set to: 0
  9693                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  9694  001B7A  010F               	movlb	15	; () banked
  9695  001B7C  8132               	bsf	50,0,b	;volatile
  9696  001B7E                     l382:
  9697                           
  9698                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  9699  001B7E  0100               	movlb	0	; () banked
  9700  001B80  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  9701  001B82  D002               	goto	l383
  9702                           
  9703                           ; BSR set to: 0
  9704                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  9705  001B84  010F               	movlb	15	; () banked
  9706  001B86  8332               	bsf	50,1,b	;volatile
  9707  001B88                     l383:
  9708                           
  9709                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  9710  001B88  0100               	movlb	0	; () banked
  9711  001B8A  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  9712  001B8C  D002               	goto	l384
  9713                           
  9714                           ; BSR set to: 0
  9715                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  9716  001B8E  010F               	movlb	15	; () banked
  9717  001B90  8B32               	bsf	50,5,b	;volatile
  9718  001B92                     l384:
  9719                           
  9720                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  9721  001B92  0100               	movlb	0	; () banked
  9722  001B94  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  9723  001B96  D002               	goto	l385
  9724                           
  9725                           ; BSR set to: 0
  9726                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  9727  001B98  010F               	movlb	15	; () banked
  9728  001B9A  8D32               	bsf	50,6,b	;volatile
  9729  001B9C                     l385:
  9730                           
  9731                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  9732  001B9C  0100               	movlb	0	; () banked
  9733  001B9E  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  9734  001BA0  D002               	goto	l4523
  9735                           
  9736                           ; BSR set to: 0
  9737                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  9738  001BA2  010F               	movlb	15	; () banked
  9739  001BA4  8F32               	bsf	50,7,b	;volatile
  9740  001BA6                     l4523:
  9741                           
  9742                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  9743  001BA6  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  9744  001BAA  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  9745  001BAE  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  9746  001BB2  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  9747  001BB6  0E16               	movlw	22
  9748  001BB8  D006               	goto	u4980
  9749  001BBA                     u4985:
  9750  001BBA  0100               	movlb	0	; () banked
  9751  001BBC  90D8               	bcf	status,0,c
  9752  001BBE  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  9753  001BC0  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  9754  001BC2  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  9755  001BC4  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  9756  001BC6                     u4980:
  9757  001BC6  2EE8               	decfsz	wreg,f,c
  9758  001BC8  D7F8               	goto	u4985
  9759  001BCA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9760  001BCE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9761  001BD2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9762  001BD6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9763                           
  9764                           ; BSR set to: 0
  9765                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  9766  001BDA  0100               	movlb	0	; () banked
  9767  001BDC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  9768  001BDE  0100               	movlb	0	; () banked
  9769  001BE0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9770  001BE2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9771  001BE4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9772  001BE6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9773                           
  9774                           ; BSR set to: 0
  9775                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  9776  001BE8  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  9777                           
  9778                           ;inc\CANlib.h: 407: }
  9779  001BEC  D059               	goto	l4543
  9780  001BEE                     l381:
  9781                           
  9782                           ; BSR set to: 0
  9783                           ;inc\CANlib.h: 409: else
  9784                           ;inc\CANlib.h: 411: {
  9785                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  9786  001BEE  010F               	movlb	15	; () banked
  9787  001BF0  9732               	bcf	50,3,b	;volatile
  9788                           
  9789                           ; BSR set to: 15
  9790                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  9791  001BF2  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  9792  001BF6  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  9793  001BFA  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  9794  001BFE  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  9795  001C02  0E04               	movlw	4
  9796  001C04  D006               	goto	u4990
  9797  001C06                     u4995:
  9798  001C06  0100               	movlb	0	; () banked
  9799  001C08  90D8               	bcf	status,0,c
  9800  001C0A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  9801  001C0C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  9802  001C0E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  9803  001C10  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  9804  001C12                     u4990:
  9805  001C12  2EE8               	decfsz	wreg,f,c
  9806  001C14  D7F8               	goto	u4995
  9807  001C16  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9808  001C1A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9809  001C1E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9810  001C22  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9811                           
  9812                           ; BSR set to: 0
  9813                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  9814  001C26  0100               	movlb	0	; () banked
  9815  001C28  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  9816  001C2A  0100               	movlb	0	; () banked
  9817  001C2C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9818  001C2E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9819  001C30  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9820  001C32  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9821                           
  9822                           ; BSR set to: 0
  9823                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  9824  001C34  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  9825                           
  9826                           ; BSR set to: 0
  9827                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  9828  001C38  0E07               	movlw	7
  9829  001C3A  0100               	movlb	0	; () banked
  9830  001C3C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  9831  001C3E  0100               	movlb	0	; () banked
  9832  001C40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9833  001C42  0E00               	movlw	0
  9834  001C44  0100               	movlb	0	; () banked
  9835  001C46  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  9836  001C48  0100               	movlb	0	; () banked
  9837  001C4A  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  9838  001C4C  0E00               	movlw	0
  9839  001C4E  0100               	movlb	0	; () banked
  9840  001C50  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  9841  001C52  0100               	movlb	0	; () banked
  9842  001C54  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  9843  001C56  0E00               	movlw	0
  9844  001C58  0100               	movlb	0	; () banked
  9845  001C5A  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  9846  001C5C  0100               	movlb	0	; () banked
  9847  001C5E  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  9848                           
  9849                           ; BSR set to: 0
  9850                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  9851  001C60  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  9852  001C64  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  9853  001C68  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  9854  001C6C  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  9855  001C70  0E05               	movlw	5
  9856  001C72                     u5005:
  9857  001C72  90D8               	bcf	status,0,c
  9858  001C74  0100               	movlb	0	; () banked
  9859  001C76  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  9860  001C78  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  9861  001C7A  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  9862  001C7C  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  9863  001C7E  2EE8               	decfsz	wreg,f,c
  9864  001C80  D7F8               	goto	u5005
  9865  001C82  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9866  001C86  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9867  001C8A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9868  001C8E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9869                           
  9870                           ; BSR set to: 0
  9871                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  9872  001C92  010F               	movlb	15	; () banked
  9873  001C94  5132               	movf	50,w,b	;volatile
  9874  001C96  0B1F               	andlw	31
  9875  001C98  010F               	movlb	15	; () banked
  9876  001C9A  6F32               	movwf	50,b	;volatile
  9877                           
  9878                           ; BSR set to: 15
  9879                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  9880  001C9C  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  9881  001CA0                     l4543:
  9882                           
  9883                           ;inc\CANlib.h: 422: }
  9884                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  9885  001CA0  0100               	movlb	0	; () banked
  9886  001CA2  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  9887  001CA4  D003               	goto	l388
  9888                           
  9889                           ; BSR set to: 0
  9890                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  9891  001CA6  010F               	movlb	15	; () banked
  9892  001CA8  8130               	bsf	48,0,b	;volatile
  9893  001CAA  D002               	goto	l389
  9894  001CAC                     l388:
  9895                           
  9896                           ; BSR set to: 0
  9897                           ;inc\CANlib.h: 426: else
  9898                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  9899  001CAC  010F               	movlb	15	; () banked
  9900  001CAE  9130               	bcf	48,0,b	;volatile
  9901  001CB0                     l389:
  9902                           
  9903                           ; BSR set to: 15
  9904                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  9905  001CB0  0100               	movlb	0	; () banked
  9906  001CB2  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  9907  001CB4  D003               	goto	l390
  9908                           
  9909                           ; BSR set to: 0
  9910                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  9911  001CB6  010F               	movlb	15	; () banked
  9912  001CB8  8330               	bsf	48,1,b	;volatile
  9913  001CBA  D002               	goto	l4549
  9914  001CBC                     l390:
  9915                           
  9916                           ; BSR set to: 0
  9917                           ;inc\CANlib.h: 430: else
  9918                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  9919  001CBC  010F               	movlb	15	; () banked
  9920  001CBE  9330               	bcf	48,1,b	;volatile
  9921  001CC0                     l4549:
  9922                           
  9923                           ; BSR set to: 15
  9924                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  9925  001CC0  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  9926  001CC4  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  9927  001CC8  50DF               	movf	indf2,w,c
  9928  001CCA  010F               	movlb	15	; () banked
  9929  001CCC  6F36               	movwf	54,b	;volatile
  9930                           
  9931                           ; BSR set to: 15
  9932                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  9933  001CCE  0100               	movlb	0	; () banked
  9934  001CD0  EE20 F001          	lfsr	2,1
  9935  001CD4  517B               	movf	CANsendMessage@data& (0+255),w,b
  9936  001CD6  26D9               	addwf	fsr2l,f,c
  9937  001CD8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9938  001CDA  22DA               	addwfc	fsr2h,f,c
  9939  001CDC  50DF               	movf	indf2,w,c
  9940  001CDE  010F               	movlb	15	; () banked
  9941  001CE0  6F37               	movwf	55,b	;volatile
  9942                           
  9943                           ; BSR set to: 15
  9944                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  9945  001CE2  0100               	movlb	0	; () banked
  9946  001CE4  EE20 F002          	lfsr	2,2
  9947  001CE8  517B               	movf	CANsendMessage@data& (0+255),w,b
  9948  001CEA  26D9               	addwf	fsr2l,f,c
  9949  001CEC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9950  001CEE  22DA               	addwfc	fsr2h,f,c
  9951  001CF0  50DF               	movf	indf2,w,c
  9952  001CF2  010F               	movlb	15	; () banked
  9953  001CF4  6F38               	movwf	56,b	;volatile
  9954                           
  9955                           ; BSR set to: 15
  9956                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  9957  001CF6  0100               	movlb	0	; () banked
  9958  001CF8  EE20 F003          	lfsr	2,3
  9959  001CFC  517B               	movf	CANsendMessage@data& (0+255),w,b
  9960  001CFE  26D9               	addwf	fsr2l,f,c
  9961  001D00  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9962  001D02  22DA               	addwfc	fsr2h,f,c
  9963  001D04  50DF               	movf	indf2,w,c
  9964  001D06  010F               	movlb	15	; () banked
  9965  001D08  6F39               	movwf	57,b	;volatile
  9966                           
  9967                           ; BSR set to: 15
  9968                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  9969  001D0A  0100               	movlb	0	; () banked
  9970  001D0C  EE20 F004          	lfsr	2,4
  9971  001D10  517B               	movf	CANsendMessage@data& (0+255),w,b
  9972  001D12  26D9               	addwf	fsr2l,f,c
  9973  001D14  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9974  001D16  22DA               	addwfc	fsr2h,f,c
  9975  001D18  50DF               	movf	indf2,w,c
  9976  001D1A  010F               	movlb	15	; () banked
  9977  001D1C  6F3A               	movwf	58,b	;volatile
  9978                           
  9979                           ; BSR set to: 15
  9980                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  9981  001D1E  0100               	movlb	0	; () banked
  9982  001D20  EE20 F005          	lfsr	2,5
  9983  001D24  517B               	movf	CANsendMessage@data& (0+255),w,b
  9984  001D26  26D9               	addwf	fsr2l,f,c
  9985  001D28  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9986  001D2A  22DA               	addwfc	fsr2h,f,c
  9987  001D2C  50DF               	movf	indf2,w,c
  9988  001D2E  010F               	movlb	15	; () banked
  9989  001D30  6F3B               	movwf	59,b	;volatile
  9990                           
  9991                           ; BSR set to: 15
  9992                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  9993  001D32  0100               	movlb	0	; () banked
  9994  001D34  EE20 F006          	lfsr	2,6
  9995  001D38  517B               	movf	CANsendMessage@data& (0+255),w,b
  9996  001D3A  26D9               	addwf	fsr2l,f,c
  9997  001D3C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9998  001D3E  22DA               	addwfc	fsr2h,f,c
  9999  001D40  50DF               	movf	indf2,w,c
 10000  001D42  010F               	movlb	15	; () banked
 10001  001D44  6F3C               	movwf	60,b	;volatile
 10002                           
 10003                           ; BSR set to: 15
 10004                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
 10005  001D46  0100               	movlb	0	; () banked
 10006  001D48  EE20 F007          	lfsr	2,7
 10007  001D4C  517B               	movf	CANsendMessage@data& (0+255),w,b
 10008  001D4E  26D9               	addwf	fsr2l,f,c
 10009  001D50  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10010  001D52  22DA               	addwfc	fsr2h,f,c
 10011  001D54  50DF               	movf	indf2,w,c
 10012  001D56  010F               	movlb	15	; () banked
 10013  001D58  6F3D               	movwf	61,b	;volatile
 10014                           
 10015                           ; BSR set to: 15
 10016                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
 10017  001D5A  010F               	movlb	15	; () banked
 10018  001D5C  8730               	bsf	48,3,b	;volatile
 10019                           
 10020                           ; BSR set to: 15
 10021                           ;inc\CANlib.h: 444: return;
 10022  001D5E  0012               	return	
 10023  001D60                     l378:
 10024                           
 10025                           ; BSR set to: 15
 10026                           ;inc\CANlib.h: 445: }
 10027                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
 10028  001D60  010F               	movlb	15	; () banked
 10029  001D62  B720               	btfsc	32,3,b	;volatile
 10030  001D64  0012               	return	
 10031                           
 10032                           ; BSR set to: 15
 10033                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
 10034  001D66  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
 10035                           
 10036                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
 10037  001D6A  0100               	movlb	0	; () banked
 10038  001D6C  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
 10039  001D6E  D003               	goto	l393
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
 10043  001D70  010F               	movlb	15	; () banked
 10044  001D72  8D25               	bsf	37,6,b	;volatile
 10045  001D74  D002               	goto	l394
 10046  001D76                     l393:
 10047                           
 10048                           ; BSR set to: 0
 10049                           ;inc\CANlib.h: 454: else
 10050                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
 10051  001D76  010F               	movlb	15	; () banked
 10052  001D78  9D25               	bcf	37,6,b	;volatile
 10053  001D7A                     l394:
 10054                           
 10055                           ; BSR set to: 15
 10056                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
 10057  001D7A  0100               	movlb	0	; () banked
 10058  001D7C  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
 10059  001D7E  D079               	goto	l395
 10060                           
 10061                           ; BSR set to: 0
 10062                           ;inc\CANlib.h: 458: {
 10063                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 10064  001D80  0100               	movlb	0	; () banked
 10065  001D82  5177               	movf	CANsendMessage@identifier& (0+255),w,b
 10066  001D84  0100               	movlb	0	; () banked
 10067  001D86  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10068  001D88  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 10069  001D8A  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 10070  001D8C  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 10071                           
 10072                           ; BSR set to: 0
 10073                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 10074  001D8E  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 10075                           
 10076                           ; BSR set to: 0
 10077                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 10078  001D92  0E00               	movlw	0
 10079  001D94  0100               	movlb	0	; () banked
 10080  001D96  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
 10081  001D98  0100               	movlb	0	; () banked
 10082  001D9A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10083  001D9C  0EFF               	movlw	255
 10084  001D9E  0100               	movlb	0	; () banked
 10085  001DA0  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 10086  001DA2  0100               	movlb	0	; () banked
 10087  001DA4  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 10088  001DA6  0E00               	movlw	0
 10089  001DA8  0100               	movlb	0	; () banked
 10090  001DAA  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 10091  001DAC  0100               	movlb	0	; () banked
 10092  001DAE  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 10093  001DB0  0E00               	movlw	0
 10094  001DB2  0100               	movlb	0	; () banked
 10095  001DB4  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 10096  001DB6  0100               	movlb	0	; () banked
 10097  001DB8  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 10098                           
 10099                           ; BSR set to: 0
 10100                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 10101  001DBA  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
 10102  001DBE  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 10103  001DC2  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 10104  001DC6  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 10105  001DCA  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
 10106  001DCE  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 10107  001DD2  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 10108  001DD6  0100               	movlb	0	; () banked
 10109  001DD8  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
 10110  001DDA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10111  001DDE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10112  001DE2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10113  001DE6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10114                           
 10115                           ; BSR set to: 0
 10116                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 10117  001DEA  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 10118                           
 10119                           ; BSR set to: 0
 10120                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 10121  001DEE  0E00               	movlw	0
 10122  001DF0  010F               	movlb	15	; () banked
 10123  001DF2  6F22               	movwf	34,b	;volatile
 10124                           
 10125                           ; BSR set to: 15
 10126                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 10127  001DF4  010F               	movlb	15	; () banked
 10128  001DF6  8722               	bsf	34,3,b	;volatile
 10129                           
 10130                           ; BSR set to: 15
 10131                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 10132  001DF8  0100               	movlb	0	; () banked
 10133  001DFA  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 10134  001DFC  D002               	goto	l396
 10135                           
 10136                           ; BSR set to: 0
 10137                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 10138  001DFE  010F               	movlb	15	; () banked
 10139  001E00  8122               	bsf	34,0,b	;volatile
 10140  001E02                     l396:
 10141                           
 10142                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 10143  001E02  0100               	movlb	0	; () banked
 10144  001E04  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 10145  001E06  D002               	goto	l397
 10146                           
 10147                           ; BSR set to: 0
 10148                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 10149  001E08  010F               	movlb	15	; () banked
 10150  001E0A  8322               	bsf	34,1,b	;volatile
 10151  001E0C                     l397:
 10152                           
 10153                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 10154  001E0C  0100               	movlb	0	; () banked
 10155  001E0E  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 10156  001E10  D002               	goto	l398
 10157                           
 10158                           ; BSR set to: 0
 10159                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 10160  001E12  010F               	movlb	15	; () banked
 10161  001E14  8B22               	bsf	34,5,b	;volatile
 10162  001E16                     l398:
 10163                           
 10164                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 10165  001E16  0100               	movlb	0	; () banked
 10166  001E18  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 10167  001E1A  D002               	goto	l399
 10168                           
 10169                           ; BSR set to: 0
 10170                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 10171  001E1C  010F               	movlb	15	; () banked
 10172  001E1E  8D22               	bsf	34,6,b	;volatile
 10173  001E20                     l399:
 10174                           
 10175                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 10176  001E20  0100               	movlb	0	; () banked
 10177  001E22  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 10178  001E24  D002               	goto	l4599
 10179                           
 10180                           ; BSR set to: 0
 10181                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 10182  001E26  010F               	movlb	15	; () banked
 10183  001E28  8F22               	bsf	34,7,b	;volatile
 10184  001E2A                     l4599:
 10185                           
 10186                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 10187  001E2A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
 10188  001E2E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 10189  001E32  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 10190  001E36  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 10191  001E3A  0E16               	movlw	22
 10192  001E3C  D006               	goto	u5110
 10193  001E3E                     u5115:
 10194  001E3E  0100               	movlb	0	; () banked
 10195  001E40  90D8               	bcf	status,0,c
 10196  001E42  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 10197  001E44  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 10198  001E46  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 10199  001E48  337F               	rrcf	??_CANsendMessage& (0+255),f,b
 10200  001E4A                     u5110:
 10201  001E4A  2EE8               	decfsz	wreg,f,c
 10202  001E4C  D7F8               	goto	u5115
 10203  001E4E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10204  001E52  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10205  001E56  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10206  001E5A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10207                           
 10208                           ; BSR set to: 0
 10209                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 10210  001E5E  0100               	movlb	0	; () banked
 10211  001E60  5183               	movf	CANsendMessage@tamp& (0+255),w,b
 10212  001E62  0100               	movlb	0	; () banked
 10213  001E64  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10214  001E66  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 10215  001E68  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 10216  001E6A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 10217                           
 10218                           ; BSR set to: 0
 10219                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 10220  001E6C  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 10221                           
 10222                           ;inc\CANlib.h: 483: }
 10223  001E70  D059               	goto	l4619
 10224  001E72                     l395:
 10225                           
 10226                           ; BSR set to: 0
 10227                           ;inc\CANlib.h: 485: else
 10228                           ;inc\CANlib.h: 487: {
 10229                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 10230  001E72  010F               	movlb	15	; () banked
 10231  001E74  9722               	bcf	34,3,b	;volatile
 10232                           
 10233                           ; BSR set to: 15
 10234                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 10235  001E76  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
 10236  001E7A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 10237  001E7E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 10238  001E82  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 10239  001E86  0E04               	movlw	4
 10240  001E88  D006               	goto	u5120
 10241  001E8A                     u5125:
 10242  001E8A  0100               	movlb	0	; () banked
 10243  001E8C  90D8               	bcf	status,0,c
 10244  001E8E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 10245  001E90  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 10246  001E92  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 10247  001E94  337F               	rrcf	??_CANsendMessage& (0+255),f,b
 10248  001E96                     u5120:
 10249  001E96  2EE8               	decfsz	wreg,f,c
 10250  001E98  D7F8               	goto	u5125
 10251  001E9A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10252  001E9E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10253  001EA2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10254  001EA6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10255                           
 10256                           ; BSR set to: 0
 10257                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 10258  001EAA  0100               	movlb	0	; () banked
 10259  001EAC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
 10260  001EAE  0100               	movlb	0	; () banked
 10261  001EB0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10262  001EB2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 10263  001EB4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 10264  001EB6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 10265                           
 10266                           ; BSR set to: 0
 10267                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 10268  001EB8  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 10269                           
 10270                           ; BSR set to: 0
 10271                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 10272  001EBC  0E07               	movlw	7
 10273  001EBE  0100               	movlb	0	; () banked
 10274  001EC0  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
 10275  001EC2  0100               	movlb	0	; () banked
 10276  001EC4  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10277  001EC6  0E00               	movlw	0
 10278  001EC8  0100               	movlb	0	; () banked
 10279  001ECA  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 10280  001ECC  0100               	movlb	0	; () banked
 10281  001ECE  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 10282  001ED0  0E00               	movlw	0
 10283  001ED2  0100               	movlb	0	; () banked
 10284  001ED4  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 10285  001ED6  0100               	movlb	0	; () banked
 10286  001ED8  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 10287  001EDA  0E00               	movlw	0
 10288  001EDC  0100               	movlb	0	; () banked
 10289  001EDE  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 10290  001EE0  0100               	movlb	0	; () banked
 10291  001EE2  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 10292                           
 10293                           ; BSR set to: 0
 10294                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 10295  001EE4  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
 10296  001EE8  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 10297  001EEC  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 10298  001EF0  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 10299  001EF4  0E05               	movlw	5
 10300  001EF6                     u5135:
 10301  001EF6  90D8               	bcf	status,0,c
 10302  001EF8  0100               	movlb	0	; () banked
 10303  001EFA  377F               	rlcf	??_CANsendMessage& (0+255),f,b
 10304  001EFC  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 10305  001EFE  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 10306  001F00  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 10307  001F02  2EE8               	decfsz	wreg,f,c
 10308  001F04  D7F8               	goto	u5135
 10309  001F06  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10310  001F0A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10311  001F0E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10312  001F12  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10313                           
 10314                           ; BSR set to: 0
 10315                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 10316  001F16  010F               	movlb	15	; () banked
 10317  001F18  5122               	movf	34,w,b	;volatile
 10318  001F1A  0B1F               	andlw	31
 10319  001F1C  010F               	movlb	15	; () banked
 10320  001F1E  6F22               	movwf	34,b	;volatile
 10321                           
 10322                           ; BSR set to: 15
 10323                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 10324  001F20  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 10325  001F24                     l4619:
 10326                           
 10327                           ;inc\CANlib.h: 498: }
 10328                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 10329  001F24  0100               	movlb	0	; () banked
 10330  001F26  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
 10331  001F28  D003               	goto	l402
 10332                           
 10333                           ; BSR set to: 0
 10334                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 10335  001F2A  010F               	movlb	15	; () banked
 10336  001F2C  8120               	bsf	32,0,b	;volatile
 10337  001F2E  D002               	goto	l403
 10338  001F30                     l402:
 10339                           
 10340                           ; BSR set to: 0
 10341                           ;inc\CANlib.h: 502: else
 10342                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 10343  001F30  010F               	movlb	15	; () banked
 10344  001F32  9120               	bcf	32,0,b	;volatile
 10345  001F34                     l403:
 10346                           
 10347                           ; BSR set to: 15
 10348                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 10349  001F34  0100               	movlb	0	; () banked
 10350  001F36  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
 10351  001F38  D003               	goto	l404
 10352                           
 10353                           ; BSR set to: 0
 10354                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 10355  001F3A  010F               	movlb	15	; () banked
 10356  001F3C  8320               	bsf	32,1,b	;volatile
 10357  001F3E  D002               	goto	l4625
 10358  001F40                     l404:
 10359                           
 10360                           ; BSR set to: 0
 10361                           ;inc\CANlib.h: 506: else
 10362                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 10363  001F40  010F               	movlb	15	; () banked
 10364  001F42  9320               	bcf	32,1,b	;volatile
 10365  001F44                     l4625:
 10366                           
 10367                           ; BSR set to: 15
 10368                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 10369  001F44  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
 10370  001F48  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
 10371  001F4C  50DF               	movf	indf2,w,c
 10372  001F4E  010F               	movlb	15	; () banked
 10373  001F50  6F26               	movwf	38,b	;volatile
 10374                           
 10375                           ; BSR set to: 15
 10376                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 10377  001F52  0100               	movlb	0	; () banked
 10378  001F54  EE20 F001          	lfsr	2,1
 10379  001F58  517B               	movf	CANsendMessage@data& (0+255),w,b
 10380  001F5A  26D9               	addwf	fsr2l,f,c
 10381  001F5C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10382  001F5E  22DA               	addwfc	fsr2h,f,c
 10383  001F60  50DF               	movf	indf2,w,c
 10384  001F62  010F               	movlb	15	; () banked
 10385  001F64  6F27               	movwf	39,b	;volatile
 10386                           
 10387                           ; BSR set to: 15
 10388                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 10389  001F66  0100               	movlb	0	; () banked
 10390  001F68  EE20 F002          	lfsr	2,2
 10391  001F6C  517B               	movf	CANsendMessage@data& (0+255),w,b
 10392  001F6E  26D9               	addwf	fsr2l,f,c
 10393  001F70  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10394  001F72  22DA               	addwfc	fsr2h,f,c
 10395  001F74  50DF               	movf	indf2,w,c
 10396  001F76  010F               	movlb	15	; () banked
 10397  001F78  6F28               	movwf	40,b	;volatile
 10398                           
 10399                           ; BSR set to: 15
 10400                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 10401  001F7A  0100               	movlb	0	; () banked
 10402  001F7C  EE20 F003          	lfsr	2,3
 10403  001F80  517B               	movf	CANsendMessage@data& (0+255),w,b
 10404  001F82  26D9               	addwf	fsr2l,f,c
 10405  001F84  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10406  001F86  22DA               	addwfc	fsr2h,f,c
 10407  001F88  50DF               	movf	indf2,w,c
 10408  001F8A  010F               	movlb	15	; () banked
 10409  001F8C  6F29               	movwf	41,b	;volatile
 10410                           
 10411                           ; BSR set to: 15
 10412                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 10413  001F8E  0100               	movlb	0	; () banked
 10414  001F90  EE20 F004          	lfsr	2,4
 10415  001F94  517B               	movf	CANsendMessage@data& (0+255),w,b
 10416  001F96  26D9               	addwf	fsr2l,f,c
 10417  001F98  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10418  001F9A  22DA               	addwfc	fsr2h,f,c
 10419  001F9C  50DF               	movf	indf2,w,c
 10420  001F9E  010F               	movlb	15	; () banked
 10421  001FA0  6F2A               	movwf	42,b	;volatile
 10422                           
 10423                           ; BSR set to: 15
 10424                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 10425  001FA2  0100               	movlb	0	; () banked
 10426  001FA4  EE20 F005          	lfsr	2,5
 10427  001FA8  517B               	movf	CANsendMessage@data& (0+255),w,b
 10428  001FAA  26D9               	addwf	fsr2l,f,c
 10429  001FAC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10430  001FAE  22DA               	addwfc	fsr2h,f,c
 10431  001FB0  50DF               	movf	indf2,w,c
 10432  001FB2  010F               	movlb	15	; () banked
 10433  001FB4  6F2B               	movwf	43,b	;volatile
 10434                           
 10435                           ; BSR set to: 15
 10436                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 10437  001FB6  0100               	movlb	0	; () banked
 10438  001FB8  EE20 F006          	lfsr	2,6
 10439  001FBC  517B               	movf	CANsendMessage@data& (0+255),w,b
 10440  001FBE  26D9               	addwf	fsr2l,f,c
 10441  001FC0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10442  001FC2  22DA               	addwfc	fsr2h,f,c
 10443  001FC4  50DF               	movf	indf2,w,c
 10444  001FC6  010F               	movlb	15	; () banked
 10445  001FC8  6F2C               	movwf	44,b	;volatile
 10446                           
 10447                           ; BSR set to: 15
 10448                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 10449  001FCA  0100               	movlb	0	; () banked
 10450  001FCC  EE20 F007          	lfsr	2,7
 10451  001FD0  517B               	movf	CANsendMessage@data& (0+255),w,b
 10452  001FD2  26D9               	addwf	fsr2l,f,c
 10453  001FD4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10454  001FD6  22DA               	addwfc	fsr2h,f,c
 10455  001FD8  50DF               	movf	indf2,w,c
 10456  001FDA  010F               	movlb	15	; () banked
 10457  001FDC  6F2D               	movwf	45,b	;volatile
 10458                           
 10459                           ; BSR set to: 15
 10460                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 10461  001FDE  010F               	movlb	15	; () banked
 10462  001FE0  8720               	bsf	32,3,b	;volatile
 10463                           
 10464                           ; BSR set to: 15
 10465                           ;inc\CANlib.h: 520: return;
 10466  001FE2  0012               	return	
 10467  001FE4                     __end_of_CANsendMessage:
 10468                           	opt stack 0
 10469                           tblptru	equ	0xFF8
 10470                           tblptrh	equ	0xFF7
 10471                           tblptrl	equ	0xFF6
 10472                           tablat	equ	0xFF5
 10473                           prodh	equ	0xFF4
 10474                           prodl	equ	0xFF3
 10475                           postinc0	equ	0xFEE
 10476                           wreg	equ	0xFE8
 10477                           postdec1	equ	0xFE5
 10478                           fsr1l	equ	0xFE1
 10479                           indf2	equ	0xFDF
 10480                           postinc2	equ	0xFDE
 10481                           postdec2	equ	0xFDD
 10482                           fsr2h	equ	0xFDA
 10483                           fsr2l	equ	0xFD9
 10484                           status	equ	0xFD8
 10485                           
 10486 ;; *************** function _CANisTxReady *****************
 10487 ;; Defined at:
 10488 ;;		line 1154 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 10489 ;; Parameters:    Size  Location     Type
 10490 ;;		None
 10491 ;; Auto vars:     Size  Location     Type
 10492 ;;		None
 10493 ;; Return value:  Size  Location     Type
 10494 ;;                  1    wreg      unsigned char 
 10495 ;; Registers used:
 10496 ;;		wreg, status,2
 10497 ;; Tracked objects:
 10498 ;;		On entry : 0/0
 10499 ;;		On exit  : 0/0
 10500 ;;		Unchanged: 0/0
 10501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10503 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10505 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10506 ;;Total ram usage:        1 bytes
 10507 ;; Hardware stack levels used:    1
 10508 ;; Hardware stack levels required when called:    4
 10509 ;; This function calls:
 10510 ;;		Nothing
 10511 ;; This function is called by:
 10512 ;;		_park_search
 10513 ;;		_can_send
 10514 ;; This function uses a non-reentrant model
 10515 ;;
 10516                           
 10517                           	psect	text28
 10518  005C76                     __ptext28:
 10519                           	opt stack 0
 10520  005C76                     _CANisTxReady:
 10521                           	opt stack 23
 10522                           
 10523                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 10524                           
 10525                           ; BSR set to: 15
 10526                           ;incstack = 0
 10527  005C76  0E01               	movlw	1
 10528  005C78  0100               	movlb	0	; () banked
 10529  005C7A  6F77               	movwf	_CANisTxReady$2845& (0+255),b
 10530                           
 10531                           ; BSR set to: 0
 10532  005C7C  010F               	movlb	15	; () banked
 10533  005C7E  A740               	btfss	64,3,b	;volatile
 10534  005C80  D009               	goto	l556
 10535                           
 10536                           ; BSR set to: 15
 10537  005C82  010F               	movlb	15	; () banked
 10538  005C84  A730               	btfss	48,3,b	;volatile
 10539  005C86  D006               	goto	l556
 10540                           
 10541                           ; BSR set to: 15
 10542  005C88  010F               	movlb	15	; () banked
 10543  005C8A  A720               	btfss	32,3,b	;volatile
 10544  005C8C  D003               	goto	l556
 10545                           
 10546                           ; BSR set to: 15
 10547  005C8E  0E00               	movlw	0
 10548  005C90  0100               	movlb	0	; () banked
 10549  005C92  6F77               	movwf	_CANisTxReady$2845& (0+255),b
 10550  005C94                     l556:
 10551  005C94  0100               	movlb	0	; () banked
 10552  005C96  5177               	movf	_CANisTxReady$2845& (0+255),w,b
 10553  005C98  0012               	return	
 10554  005C9A                     __end_of_CANisTxReady:
 10555                           	opt stack 0
 10556                           tblptru	equ	0xFF8
 10557                           tblptrh	equ	0xFF7
 10558                           tblptrl	equ	0xFF6
 10559                           tablat	equ	0xFF5
 10560                           prodh	equ	0xFF4
 10561                           prodl	equ	0xFF3
 10562                           postinc0	equ	0xFEE
 10563                           wreg	equ	0xFE8
 10564                           postdec1	equ	0xFE5
 10565                           fsr1l	equ	0xFE1
 10566                           indf2	equ	0xFDF
 10567                           postinc2	equ	0xFDE
 10568                           postdec2	equ	0xFDD
 10569                           fsr2h	equ	0xFDA
 10570                           fsr2l	equ	0xFD9
 10571                           status	equ	0xFD8
 10572                           
 10573 ;; *************** function _configurazione *****************
 10574 ;; Defined at:
 10575 ;;		line 390 in file "parcheggio.c"
 10576 ;; Parameters:    Size  Location     Type
 10577 ;;		None
 10578 ;; Auto vars:     Size  Location     Type
 10579 ;;		None
 10580 ;; Return value:  Size  Location     Type
 10581 ;;		None               void
 10582 ;; Registers used:
 10583 ;;		wreg, status,2, status,0, cstack
 10584 ;; Tracked objects:
 10585 ;;		On entry : 0/0
 10586 ;;		On exit  : 0/0
 10587 ;;		Unchanged: 0/0
 10588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10593 ;;Total ram usage:        0 bytes
 10594 ;; Hardware stack levels used:    1
 10595 ;; Hardware stack levels required when called:    6
 10596 ;; This function calls:
 10597 ;;		_CANInitialize
 10598 ;; This function is called by:
 10599 ;;		_main
 10600 ;; This function uses a non-reentrant model
 10601 ;;
 10602                           
 10603                           	psect	text29
 10604  0059E4                     __ptext29:
 10605                           	opt stack 0
 10606  0059E4                     _configurazione:
 10607                           	opt stack 24
 10608                           
 10609                           ;parcheggio.c: 391: LATA = 0x00;
 10610                           
 10611                           ; BSR set to: 0
 10612                           ;incstack = 0
 10613  0059E4  0E00               	movlw	0
 10614  0059E6  6E89               	movwf	3977,c	;volatile
 10615                           
 10616                           ;parcheggio.c: 392: TRISA = 0b11110000;
 10617  0059E8  0EF0               	movlw	240
 10618  0059EA  6E92               	movwf	3986,c	;volatile
 10619                           
 10620                           ;parcheggio.c: 394: LATB = 0x00;
 10621  0059EC  0E00               	movlw	0
 10622  0059EE  6E8A               	movwf	3978,c	;volatile
 10623                           
 10624                           ;parcheggio.c: 395: TRISB = 0b10001010;
 10625  0059F0  0E8A               	movlw	138
 10626  0059F2  6E93               	movwf	3987,c	;volatile
 10627                           
 10628                           ;parcheggio.c: 397: LATC = 0x00;
 10629  0059F4  0E00               	movlw	0
 10630  0059F6  6E8B               	movwf	3979,c	;volatile
 10631                           
 10632                           ;parcheggio.c: 398: TRISC = 0b11111111;
 10633  0059F8  6894               	setf	3988,c	;volatile
 10634                           
 10635                           ;parcheggio.c: 400: ADCON1 = 0xFF;
 10636  0059FA  68C1               	setf	4033,c	;volatile
 10637                           
 10638                           ;parcheggio.c: 401: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
 10639  0059FC  0E06               	movlw	6
 10640  0059FE  0100               	movlb	0	; () banked
 10641  005A00  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 10642  005A02  0E05               	movlw	5
 10643  005A04  0100               	movlb	0	; () banked
 10644  005A06  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
 10645  005A08  0E01               	movlw	1
 10646  005A0A  0100               	movlb	0	; () banked
 10647  005A0C  6F87               	movwf	CANInitialize@SJW& (0+255),b
 10648  005A0E  0E03               	movlw	3
 10649  005A10  0100               	movlb	0	; () banked
 10650  005A12  6F88               	movwf	CANInitialize@BRP& (0+255),b
 10651  005A14  0E9D               	movlw	157
 10652  005A16  0100               	movlb	0	; () banked
 10653  005A18  6F89               	movwf	CANInitialize@flags& (0+255),b
 10654  005A1A  0E04               	movlw	4
 10655  005A1C  EC91  F026         	call	_CANInitialize
 10656                           
 10657                           ;parcheggio.c: 403: RCONbits.IPEN = 1;
 10658  005A20  8ED0               	bsf	4048,7,c	;volatile
 10659                           
 10660                           ;parcheggio.c: 404: PIR3bits.RXB1IF = 0;
 10661  005A22  92A4               	bcf	4004,1,c	;volatile
 10662                           
 10663                           ;parcheggio.c: 405: PIR3bits.RXB0IF = 0;
 10664  005A24  90A4               	bcf	4004,0,c	;volatile
 10665                           
 10666                           ;parcheggio.c: 406: IPR3bits.RXB1IP = 0;
 10667  005A26  92A5               	bcf	4005,1,c	;volatile
 10668                           
 10669                           ;parcheggio.c: 407: IPR3bits.RXB0IP = 0;
 10670  005A28  90A5               	bcf	4005,0,c	;volatile
 10671                           
 10672                           ;parcheggio.c: 408: PIE3bits.RXB1IE = 1;
 10673  005A2A  82A3               	bsf	4003,1,c	;volatile
 10674                           
 10675                           ;parcheggio.c: 409: PIE3bits.RXB0IE = 1;
 10676  005A2C  80A3               	bsf	4003,0,c	;volatile
 10677                           
 10678                           ;parcheggio.c: 410: INTCON2bits.TMR0IP = 0;
 10679  005A2E  94F1               	bcf	intcon2,2,c	;volatile
 10680                           
 10681                           ;parcheggio.c: 411: T0CON = 0x80;
 10682  005A30  0E80               	movlw	128
 10683  005A32  6ED5               	movwf	4053,c	;volatile
 10684                           
 10685                           ;parcheggio.c: 412: T3CON = 0x11;
 10686  005A34  0E11               	movlw	17
 10687  005A36  6EB1               	movwf	4017,c	;volatile
 10688                           
 10689                           ;parcheggio.c: 413: TMR0H = 0x34;
 10690  005A38  0E34               	movlw	52
 10691  005A3A  6ED7               	movwf	4055,c	;volatile
 10692                           
 10693                           ;parcheggio.c: 414: TMR0L = 0xE0;
 10694  005A3C  0EE0               	movlw	224
 10695  005A3E  6ED6               	movwf	4054,c	;volatile
 10696                           
 10697                           ;parcheggio.c: 415: INTCONbits.TMR0IF = 0;
 10698  005A40  94F2               	bcf	intcon,2,c	;volatile
 10699                           
 10700                           ;parcheggio.c: 416: INTCONbits.TMR0IE = 1;
 10701  005A42  8AF2               	bsf	intcon,5,c	;volatile
 10702                           
 10703                           ;parcheggio.c: 417: INTCON2bits.INTEDG0 = 1;
 10704  005A44  8CF1               	bsf	intcon2,6,c	;volatile
 10705                           
 10706                           ;parcheggio.c: 418: INTCONbits.INT0IF = 0;
 10707  005A46  92F2               	bcf	intcon,1,c	;volatile
 10708                           
 10709                           ;parcheggio.c: 419: INTCONbits.INT0IE = 0;
 10710  005A48  98F2               	bcf	intcon,4,c	;volatile
 10711                           
 10712                           ;parcheggio.c: 420: INTCONbits.GIEL = 1;
 10713  005A4A  8CF2               	bsf	intcon,6,c	;volatile
 10714                           
 10715                           ;parcheggio.c: 421: INTCONbits.GIEH = 1;
 10716  005A4C  8EF2               	bsf	intcon,7,c	;volatile
 10717  005A4E  0012               	return		;funcret
 10718  005A50                     __end_of_configurazione:
 10719                           	opt stack 0
 10720                           tblptru	equ	0xFF8
 10721                           tblptrh	equ	0xFF7
 10722                           tblptrl	equ	0xFF6
 10723                           tablat	equ	0xFF5
 10724                           prodh	equ	0xFF4
 10725                           prodl	equ	0xFF3
 10726                           intcon	equ	0xFF2
 10727                           intcon2	equ	0xFF1
 10728                           postinc0	equ	0xFEE
 10729                           wreg	equ	0xFE8
 10730                           postdec1	equ	0xFE5
 10731                           fsr1l	equ	0xFE1
 10732                           indf2	equ	0xFDF
 10733                           postinc2	equ	0xFDE
 10734                           postdec2	equ	0xFDD
 10735                           fsr2h	equ	0xFDA
 10736                           fsr2l	equ	0xFD9
 10737                           status	equ	0xFD8
 10738                           
 10739 ;; *************** function _CANInitialize *****************
 10740 ;; Defined at:
 10741 ;;		line 218 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 10742 ;; Parameters:    Size  Location     Type
 10743 ;;  propSeg         1    wreg     unsigned char 
 10744 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
 10745 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
 10746 ;;  SJW             1   39[BANK0 ] unsigned char 
 10747 ;;  BRP             1   40[BANK0 ] unsigned char 
 10748 ;;  flags           1   41[BANK0 ] enum E16313
 10749 ;; Auto vars:     Size  Location     Type
 10750 ;;  propSeg         1   46[BANK0 ] unsigned char 
 10751 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
 10752 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
 10753 ;; Return value:  Size  Location     Type
 10754 ;;		None               void
 10755 ;; Registers used:
 10756 ;;		wreg, status,2, status,0, cstack
 10757 ;; Tracked objects:
 10758 ;;		On entry : 0/0
 10759 ;;		On exit  : 0/0
 10760 ;;		Unchanged: 0/0
 10761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10762 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10763 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10764 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10765 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10766 ;;Total ram usage:       12 bytes
 10767 ;; Hardware stack levels used:    1
 10768 ;; Hardware stack levels required when called:    5
 10769 ;; This function calls:
 10770 ;;		_CANOperationMode
 10771 ;;		_CANSetFilter
 10772 ;;		_CANSetMask
 10773 ;; This function is called by:
 10774 ;;		_configurazione
 10775 ;; This function uses a non-reentrant model
 10776 ;;
 10777                           
 10778                           	psect	text30
 10779  004D22                     __ptext30:
 10780                           	opt stack 0
 10781  004D22                     _CANInitialize:
 10782                           	opt stack 24
 10783                           
 10784                           ;incstack = 0
 10785                           ;CANInitialize@propSeg stored from wreg
 10786  004D22  0100               	movlb	0	; () banked
 10787  004D24  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
 10788                           
 10789                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
 10790                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
 10791                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
 10792  004D26  0E80               	movlw	128
 10793  004D28  EC4D  F02E         	call	_CANOperationMode
 10794                           
 10795                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
 10796  004D2C  0E00               	movlw	0
 10797  004D2E  6E70               	movwf	3952,c	;volatile
 10798                           
 10799                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
 10800  004D30  0E00               	movlw	0
 10801  004D32  6E71               	movwf	3953,c	;volatile
 10802                           
 10803                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
 10804  004D34  0E00               	movlw	0
 10805  004D36  6E72               	movwf	3954,c	;volatile
 10806                           
 10807                           ;inc\CANlib.h: 229: SJW= SJW << 6;
 10808  004D38  0100               	movlb	0	; () banked
 10809  004D3A  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
 10810  004D3C  42E8               	rrncf	wreg,f,c
 10811  004D3E  0BC0               	andlw	192
 10812  004D40  0100               	movlb	0	; () banked
 10813  004D42  6F87               	movwf	CANInitialize@SJW& (0+255),b
 10814                           
 10815                           ; BSR set to: 0
 10816                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
 10817  004D44  0100               	movlb	0	; () banked
 10818  004D46  5187               	movf	CANInitialize@SJW& (0+255),w,b
 10819  004D48  1270               	iorwf	3952,f,c	;volatile
 10820                           
 10821                           ; BSR set to: 0
 10822                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
 10823  004D4A  0100               	movlb	0	; () banked
 10824  004D4C  5188               	movf	CANInitialize@BRP& (0+255),w,b
 10825  004D4E  1270               	iorwf	3952,f,c	;volatile
 10826                           
 10827                           ; BSR set to: 0
 10828                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
 10829  004D50  0100               	movlb	0	; () banked
 10830  004D52  518E               	movf	CANInitialize@propSeg& (0+255),w,b
 10831  004D54  1271               	iorwf	3953,f,c	;volatile
 10832                           
 10833                           ; BSR set to: 0
 10834                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
 10835  004D56  0100               	movlb	0	; () banked
 10836  004D58  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
 10837  004D5A  42E8               	rrncf	wreg,f,c
 10838  004D5C  0BF8               	andlw	248
 10839  004D5E  0100               	movlb	0	; () banked
 10840  004D60  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 10841                           
 10842                           ; BSR set to: 0
 10843                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
 10844  004D62  0100               	movlb	0	; () banked
 10845  004D64  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
 10846  004D66  1271               	iorwf	3953,f,c	;volatile
 10847                           
 10848                           ; BSR set to: 0
 10849                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
 10850  004D68  0100               	movlb	0	; () banked
 10851  004D6A  A589               	btfss	CANInitialize@flags& (0+255),2,b
 10852                           
 10853                           ; BSR set to: 0
 10854                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
 10855  004D6C  8C71               	bsf	3953,6,c	;volatile
 10856                           
 10857                           ; BSR set to: 0
 10858                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
 10859  004D6E  0100               	movlb	0	; () banked
 10860  004D70  B189               	btfsc	CANInitialize@flags& (0+255),0,b
 10861                           
 10862                           ; BSR set to: 0
 10863                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
 10864  004D72  8E71               	bsf	3953,7,c	;volatile
 10865                           
 10866                           ; BSR set to: 0
 10867                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
 10868                           
 10869                           ; BSR set to: 0
 10870  004D74  0100               	movlb	0	; () banked
 10871  004D76  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
 10872  004D78  1272               	iorwf	3954,f,c	;volatile
 10873                           
 10874                           ; BSR set to: 0
 10875                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
 10876  004D7A  0100               	movlb	0	; () banked
 10877  004D7C  B389               	btfsc	CANInitialize@flags& (0+255),1,b
 10878                           
 10879                           ; BSR set to: 0
 10880                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
 10881  004D7E  8C72               	bsf	3954,6,c	;volatile
 10882                           
 10883                           ; BSR set to: 0
 10884                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
 10885                           
 10886                           ; BSR set to: 0
 10887  004D80  0100               	movlb	0	; () banked
 10888  004D82  5189               	movf	CANInitialize@flags& (0+255),w,b
 10889  004D84  0B60               	andlw	96
 10890  004D86  6E60               	movwf	3936,c	;volatile
 10891                           
 10892                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
 10893  004D88  0100               	movlb	0	; () banked
 10894  004D8A  5189               	movf	CANInitialize@flags& (0+255),w,b
 10895  004D8C  0B10               	andlw	16
 10896  004D8E  0AFF               	xorlw	255
 10897  004D90  B4D8               	btfsc	status,2,c
 10898                           
 10899                           ; BSR set to: 0
 10900                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
 10901  004D92  8460               	bsf	3936,2,c	;volatile
 10902                           
 10903                           ; BSR set to: 0
 10904                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
 10905  004D94  CF60 FF50          	movff	3936,3920	;volatile
 10906                           
 10907                           ; BSR set to: 0
 10908                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
 10909  004D98  0E00               	movlw	0
 10910  004D9A  0100               	movlb	0	; () banked
 10911  004D9C  6F77               	movwf	CANSetMask@mask& (0+255),b
 10912  004D9E  0E00               	movlw	0
 10913  004DA0  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 10914  004DA2  0E00               	movlw	0
 10915  004DA4  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 10916  004DA6  0E00               	movlw	0
 10917  004DA8  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 10918  004DAA  0EF7               	movlw	247
 10919  004DAC  0100               	movlb	0	; () banked
 10920  004DAE  6F7B               	movwf	CANSetMask@type& (0+255),b
 10921  004DB0  0E01               	movlw	1
 10922  004DB2  EC4E  F01D         	call	_CANSetMask
 10923                           
 10924                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
 10925  004DB6  0E00               	movlw	0
 10926  004DB8  0100               	movlb	0	; () banked
 10927  004DBA  6F77               	movwf	CANSetMask@mask& (0+255),b
 10928  004DBC  0E00               	movlw	0
 10929  004DBE  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 10930  004DC0  0E00               	movlw	0
 10931  004DC2  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 10932  004DC4  0E00               	movlw	0
 10933  004DC6  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 10934  004DC8  0EF7               	movlw	247
 10935  004DCA  0100               	movlb	0	; () banked
 10936  004DCC  6F7B               	movwf	CANSetMask@type& (0+255),b
 10937  004DCE  0E02               	movlw	2
 10938  004DD0  EC4E  F01D         	call	_CANSetMask
 10939                           
 10940                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
 10941  004DD4  D00F               	goto	l5377
 10942  004DD6                     l5371:
 10943                           
 10944                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
 10945  004DD6  0EF7               	movlw	247
 10946  004DD8  0100               	movlb	0	; () banked
 10947  004DDA  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
 10948  004DDC  D007               	goto	l5373
 10949  004DDE                     l358:
 10950                           
 10951                           ; BSR set to: 0
 10952                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
 10953  004DDE  0100               	movlb	0	; () banked
 10954  004DE0  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 10955                           
 10956                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
 10957  004DE2  0100               	movlb	0	; () banked
 10958  004DE4  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
 10959                           
 10960                           ;inc\CANlib.h: 273: break;
 10961  004DE6  D028               	goto	l5379
 10962  004DE8                     l359:
 10963                           
 10964                           ; BSR set to: 0
 10965                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
 10966  004DE8  0100               	movlb	0	; () banked
 10967  004DEA  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 10968  004DEC                     l5373:
 10969                           
 10970                           ; BSR set to: 0
 10971                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
 10972  004DEC  0EF7               	movlw	247
 10973  004DEE  0100               	movlb	0	; () banked
 10974  004DF0  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
 10975                           
 10976                           ; BSR set to: 0
 10977                           ;inc\CANlib.h: 278: }
 10978                           
 10979                           ;inc\CANlib.h: 277: break;
 10980  004DF2  D022               	goto	l5379
 10981  004DF4                     l5377:
 10982  004DF4  0E9F               	movlw	159
 10983  004DF6  0100               	movlb	0	; () banked
 10984  004DF8  6F8A               	movwf	??_CANInitialize& (0+255),b
 10985  004DFA  0EFF               	movlw	255
 10986  004DFC  0100               	movlb	0	; () banked
 10987  004DFE  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
 10988  004E00  0100               	movlb	0	; () banked
 10989  004E02  5189               	movf	CANInitialize@flags& (0+255),w,b
 10990  004E04  0B60               	andlw	96
 10991  004E06  0100               	movlb	0	; () banked
 10992  004E08  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
 10993  004E0A  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
 10994  004E0C  0100               	movlb	0	; () banked
 10995  004E0E  518A               	movf	??_CANInitialize& (0+255),w,b
 10996  004E10  0100               	movlb	0	; () banked
 10997  004E12  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
 10998  004E14  0100               	movlb	0	; () banked
 10999  004E16  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
 11000  004E18  0100               	movlb	0	; () banked
 11001  004E1A  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
 11002                           
 11003                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11004                           ; Switch size 1, requested type "space"
 11005                           ; Number of cases is 1, Range of values is 0 to 0
 11006                           ; switch strategies available:
 11007                           ; Name         Instructions Cycles
 11008                           ; simple_byte            4     3 (average)
 11009                           ;	Chosen strategy is simple_byte
 11010  004E1C  0100               	movlb	0	; () banked
 11011  004E1E  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
 11012  004E20  0A00               	xorlw	0	; case 0
 11013  004E22  A4D8               	btfss	status,2,c
 11014  004E24  D7E1               	goto	l359
 11015                           
 11016                           ; BSR set to: 0
 11017                           ; Switch size 1, requested type "space"
 11018                           ; Number of cases is 2, Range of values is 191 to 223
 11019                           ; switch strategies available:
 11020                           ; Name         Instructions Cycles
 11021                           ; simple_byte            7     4 (average)
 11022                           ;	Chosen strategy is simple_byte
 11023  004E26  0100               	movlb	0	; () banked
 11024  004E28  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
 11025  004E2A  0ABF               	xorlw	191	; case 191
 11026  004E2C  B4D8               	btfsc	status,2,c
 11027  004E2E  D7D7               	goto	l358
 11028  004E30  0A60               	xorlw	96	; case 223
 11029  004E32  B4D8               	btfsc	status,2,c
 11030  004E34  D7D0               	goto	l5371
 11031  004E36  D7D8               	goto	l359
 11032  004E38                     l5379:
 11033                           
 11034                           ; BSR set to: 0
 11035                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
 11036  004E38  0E00               	movlw	0
 11037  004E3A  0100               	movlb	0	; () banked
 11038  004E3C  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11039  004E3E  0E00               	movlw	0
 11040  004E40  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11041  004E42  0E00               	movlw	0
 11042  004E44  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11043  004E46  0E00               	movlw	0
 11044  004E48  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11045  004E4A  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11046  004E4E  0E00               	movlw	0
 11047  004E50  ECA9  F006         	call	_CANSetFilter
 11048                           
 11049                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
 11050  004E54  0E00               	movlw	0
 11051  004E56  0100               	movlb	0	; () banked
 11052  004E58  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11053  004E5A  0E00               	movlw	0
 11054  004E5C  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11055  004E5E  0E00               	movlw	0
 11056  004E60  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11057  004E62  0E00               	movlw	0
 11058  004E64  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11059  004E66  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11060  004E6A  0E01               	movlw	1
 11061  004E6C  ECA9  F006         	call	_CANSetFilter
 11062                           
 11063                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
 11064  004E70  0E00               	movlw	0
 11065  004E72  0100               	movlb	0	; () banked
 11066  004E74  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11067  004E76  0E00               	movlw	0
 11068  004E78  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11069  004E7A  0E00               	movlw	0
 11070  004E7C  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11071  004E7E  0E00               	movlw	0
 11072  004E80  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11073  004E82  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11074  004E86  0E02               	movlw	2
 11075  004E88  ECA9  F006         	call	_CANSetFilter
 11076                           
 11077                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
 11078  004E8C  0E00               	movlw	0
 11079  004E8E  0100               	movlb	0	; () banked
 11080  004E90  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11081  004E92  0E00               	movlw	0
 11082  004E94  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11083  004E96  0E00               	movlw	0
 11084  004E98  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11085  004E9A  0E00               	movlw	0
 11086  004E9C  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11087  004E9E  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11088  004EA2  0E03               	movlw	3
 11089  004EA4  ECA9  F006         	call	_CANSetFilter
 11090                           
 11091                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
 11092  004EA8  0E00               	movlw	0
 11093  004EAA  0100               	movlb	0	; () banked
 11094  004EAC  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11095  004EAE  0E00               	movlw	0
 11096  004EB0  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11097  004EB2  0E00               	movlw	0
 11098  004EB4  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11099  004EB6  0E00               	movlw	0
 11100  004EB8  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11101  004EBA  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11102  004EBE  0E04               	movlw	4
 11103  004EC0  ECA9  F006         	call	_CANSetFilter
 11104                           
 11105                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
 11106  004EC4  0E00               	movlw	0
 11107  004EC6  0100               	movlb	0	; () banked
 11108  004EC8  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11109  004ECA  0E00               	movlw	0
 11110  004ECC  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11111  004ECE  0E00               	movlw	0
 11112  004ED0  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11113  004ED2  0E00               	movlw	0
 11114  004ED4  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11115  004ED6  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11116  004EDA  0E05               	movlw	5
 11117  004EDC  ECA9  F006         	call	_CANSetFilter
 11118                           
 11119                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
 11120  004EE0  0E00               	movlw	0
 11121  004EE2  EC4D  F02E         	call	_CANOperationMode
 11122  004EE6  0012               	return		;funcret
 11123  004EE8                     __end_of_CANInitialize:
 11124                           	opt stack 0
 11125                           tblptru	equ	0xFF8
 11126                           tblptrh	equ	0xFF7
 11127                           tblptrl	equ	0xFF6
 11128                           tablat	equ	0xFF5
 11129                           prodh	equ	0xFF4
 11130                           prodl	equ	0xFF3
 11131                           intcon	equ	0xFF2
 11132                           intcon2	equ	0xFF1
 11133                           postinc0	equ	0xFEE
 11134                           wreg	equ	0xFE8
 11135                           postdec1	equ	0xFE5
 11136                           fsr1l	equ	0xFE1
 11137                           indf2	equ	0xFDF
 11138                           postinc2	equ	0xFDE
 11139                           postdec2	equ	0xFDD
 11140                           fsr2h	equ	0xFDA
 11141                           fsr2l	equ	0xFD9
 11142                           status	equ	0xFD8
 11143                           
 11144 ;; *************** function _CANSetMask *****************
 11145 ;; Defined at:
 11146 ;;		line 640 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 11147 ;; Parameters:    Size  Location     Type
 11148 ;;  numBuffer       1    wreg     enum E16347
 11149 ;;  mask            4   23[BANK0 ] unsigned long 
 11150 ;;  type            1   27[BANK0 ] enum E16313
 11151 ;; Auto vars:     Size  Location     Type
 11152 ;;  numBuffer       1   32[BANK0 ] enum E16347
 11153 ;;  tamp            4   33[BANK0 ] unsigned long 
 11154 ;; Return value:  Size  Location     Type
 11155 ;;		None               void
 11156 ;; Registers used:
 11157 ;;		wreg, status,2, status,0
 11158 ;; Tracked objects:
 11159 ;;		On entry : 0/0
 11160 ;;		On exit  : 0/0
 11161 ;;		Unchanged: 0/0
 11162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11163 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11164 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11165 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11166 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11167 ;;Total ram usage:       14 bytes
 11168 ;; Hardware stack levels used:    1
 11169 ;; Hardware stack levels required when called:    4
 11170 ;; This function calls:
 11171 ;;		Nothing
 11172 ;; This function is called by:
 11173 ;;		_CANInitialize
 11174 ;; This function uses a non-reentrant model
 11175 ;;
 11176                           
 11177                           	psect	text31
 11178  003A9C                     __ptext31:
 11179                           	opt stack 0
 11180  003A9C                     _CANSetMask:
 11181                           	opt stack 24
 11182                           
 11183                           ;incstack = 0
 11184                           ;CANSetMask@numBuffer stored from wreg
 11185  003A9C  0100               	movlb	0	; () banked
 11186  003A9E  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
 11187                           
 11188                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
 11189  003AA0  0100               	movlb	0	; () banked
 11190  003AA2  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11191  003AA4  A4D8               	btfss	status,2,c
 11192  003AA6  D056               	goto	l4849
 11193                           
 11194                           ; BSR set to: 0
 11195  003AA8  0100               	movlb	0	; () banked
 11196  003AAA  297B               	incf	CANSetMask@type& (0+255),w,b
 11197  003AAC  A4D8               	btfss	status,2,c
 11198  003AAE  D052               	goto	l4849
 11199                           
 11200                           ; BSR set to: 0
 11201                           ;inc\CANlib.h: 644: {
 11202                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
 11203  003AB0  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11204  003AB4  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11205  003AB8  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11206  003ABC  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11207  003AC0  0E04               	movlw	4
 11208  003AC2  D006               	goto	u5450
 11209  003AC4                     u5455:
 11210  003AC4  0100               	movlb	0	; () banked
 11211  003AC6  90D8               	bcf	status,0,c
 11212  003AC8  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11213  003ACA  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11214  003ACC  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11215  003ACE  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11216  003AD0                     u5450:
 11217  003AD0  2EE8               	decfsz	wreg,f,c
 11218  003AD2  D7F8               	goto	u5455
 11219  003AD4  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11220  003AD8  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11221  003ADC  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11222  003AE0  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11223                           
 11224                           ; BSR set to: 0
 11225                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
 11226  003AE4  0100               	movlb	0	; () banked
 11227  003AE6  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11228  003AE8  0100               	movlb	0	; () banked
 11229  003AEA  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11230  003AEC  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11231  003AEE  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11232  003AF0  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11233                           
 11234                           ; BSR set to: 0
 11235                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
 11236  003AF2  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11237                           
 11238                           ; BSR set to: 0
 11239                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
 11240  003AF6  0E07               	movlw	7
 11241  003AF8  0100               	movlb	0	; () banked
 11242  003AFA  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11243  003AFC  0100               	movlb	0	; () banked
 11244  003AFE  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11245  003B00  0E00               	movlw	0
 11246  003B02  0100               	movlb	0	; () banked
 11247  003B04  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11248  003B06  0100               	movlb	0	; () banked
 11249  003B08  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11250  003B0A  0E00               	movlw	0
 11251  003B0C  0100               	movlb	0	; () banked
 11252  003B0E  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11253  003B10  0100               	movlb	0	; () banked
 11254  003B12  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11255  003B14  0E00               	movlw	0
 11256  003B16  0100               	movlb	0	; () banked
 11257  003B18  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11258  003B1A  0100               	movlb	0	; () banked
 11259  003B1C  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11260                           
 11261                           ; BSR set to: 0
 11262                           ;inc\CANlib.h: 650: tamp = tamp << 5;
 11263  003B1E  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11264  003B22  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11265  003B26  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11266  003B2A  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11267  003B2E  0E05               	movlw	5
 11268  003B30                     u5465:
 11269  003B30  90D8               	bcf	status,0,c
 11270  003B32  0100               	movlb	0	; () banked
 11271  003B34  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11272  003B36  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11273  003B38  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11274  003B3A  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11275  003B3C  2EE8               	decfsz	wreg,f,c
 11276  003B3E  D7F8               	goto	u5465
 11277  003B40  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11278  003B44  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11279  003B48  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11280  003B4C  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11281                           
 11282                           ; BSR set to: 0
 11283                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
 11284  003B50  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
 11285  003B54                     l4849:
 11286                           
 11287                           ; BSR set to: 0
 11288                           ;inc\CANlib.h: 652: }
 11289                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
 11290  003B54  0E02               	movlw	2
 11291  003B56  0100               	movlb	0	; () banked
 11292  003B58  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11293  003B5A  A4D8               	btfss	status,2,c
 11294  003B5C  D056               	goto	l4865
 11295                           
 11296                           ; BSR set to: 0
 11297  003B5E  0100               	movlb	0	; () banked
 11298  003B60  297B               	incf	CANSetMask@type& (0+255),w,b
 11299  003B62  A4D8               	btfss	status,2,c
 11300  003B64  D052               	goto	l4865
 11301                           
 11302                           ; BSR set to: 0
 11303                           ;inc\CANlib.h: 655: {
 11304                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
 11305  003B66  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11306  003B6A  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11307  003B6E  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11308  003B72  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11309  003B76  0E04               	movlw	4
 11310  003B78  D006               	goto	u5490
 11311  003B7A                     u5495:
 11312  003B7A  0100               	movlb	0	; () banked
 11313  003B7C  90D8               	bcf	status,0,c
 11314  003B7E  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11315  003B80  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11316  003B82  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11317  003B84  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11318  003B86                     u5490:
 11319  003B86  2EE8               	decfsz	wreg,f,c
 11320  003B88  D7F8               	goto	u5495
 11321  003B8A  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11322  003B8E  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11323  003B92  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11324  003B96  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11325                           
 11326                           ; BSR set to: 0
 11327                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
 11328  003B9A  0100               	movlb	0	; () banked
 11329  003B9C  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11330  003B9E  0100               	movlb	0	; () banked
 11331  003BA0  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11332  003BA2  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11333  003BA4  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11334  003BA6  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11335                           
 11336                           ; BSR set to: 0
 11337                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
 11338  003BA8  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11339                           
 11340                           ; BSR set to: 0
 11341                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
 11342  003BAC  0E07               	movlw	7
 11343  003BAE  0100               	movlb	0	; () banked
 11344  003BB0  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11345  003BB2  0100               	movlb	0	; () banked
 11346  003BB4  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11347  003BB6  0E00               	movlw	0
 11348  003BB8  0100               	movlb	0	; () banked
 11349  003BBA  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11350  003BBC  0100               	movlb	0	; () banked
 11351  003BBE  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11352  003BC0  0E00               	movlw	0
 11353  003BC2  0100               	movlb	0	; () banked
 11354  003BC4  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11355  003BC6  0100               	movlb	0	; () banked
 11356  003BC8  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11357  003BCA  0E00               	movlw	0
 11358  003BCC  0100               	movlb	0	; () banked
 11359  003BCE  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11360  003BD0  0100               	movlb	0	; () banked
 11361  003BD2  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11362                           
 11363                           ; BSR set to: 0
 11364                           ;inc\CANlib.h: 661: tamp = tamp << 5;
 11365  003BD4  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11366  003BD8  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11367  003BDC  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11368  003BE0  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11369  003BE4  0E05               	movlw	5
 11370  003BE6                     u5505:
 11371  003BE6  90D8               	bcf	status,0,c
 11372  003BE8  0100               	movlb	0	; () banked
 11373  003BEA  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11374  003BEC  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11375  003BEE  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11376  003BF0  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11377  003BF2  2EE8               	decfsz	wreg,f,c
 11378  003BF4  D7F8               	goto	u5505
 11379  003BF6  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11380  003BFA  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11381  003BFE  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11382  003C02  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11383                           
 11384                           ; BSR set to: 0
 11385                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
 11386  003C06  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
 11387  003C0A                     l4865:
 11388                           
 11389                           ; BSR set to: 0
 11390                           ;inc\CANlib.h: 663: }
 11391                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
 11392  003C0A  0100               	movlb	0	; () banked
 11393  003C0C  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11394  003C0E  A4D8               	btfss	status,2,c
 11395  003C10  D087               	goto	l4897
 11396                           
 11397                           ; BSR set to: 0
 11398  003C12  0EF7               	movlw	247
 11399  003C14  0100               	movlb	0	; () banked
 11400  003C16  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11401  003C18  A4D8               	btfss	status,2,c
 11402  003C1A  D082               	goto	l4897
 11403                           
 11404                           ; BSR set to: 0
 11405                           ;inc\CANlib.h: 666: {
 11406                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
 11407  003C1C  0100               	movlb	0	; () banked
 11408  003C1E  5177               	movf	CANSetMask@mask& (0+255),w,b
 11409  003C20  0100               	movlb	0	; () banked
 11410  003C22  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11411  003C24  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11412  003C26  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11413  003C28  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11414                           
 11415                           ; BSR set to: 0
 11416                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
 11417  003C2A  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
 11418                           
 11419                           ; BSR set to: 0
 11420                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
 11421  003C2E  0E00               	movlw	0
 11422  003C30  0100               	movlb	0	; () banked
 11423  003C32  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11424  003C34  0100               	movlb	0	; () banked
 11425  003C36  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11426  003C38  0EFF               	movlw	255
 11427  003C3A  0100               	movlb	0	; () banked
 11428  003C3C  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11429  003C3E  0100               	movlb	0	; () banked
 11430  003C40  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11431  003C42  0E00               	movlw	0
 11432  003C44  0100               	movlb	0	; () banked
 11433  003C46  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11434  003C48  0100               	movlb	0	; () banked
 11435  003C4A  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11436  003C4C  0E00               	movlw	0
 11437  003C4E  0100               	movlb	0	; () banked
 11438  003C50  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11439  003C52  0100               	movlb	0	; () banked
 11440  003C54  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11441                           
 11442                           ; BSR set to: 0
 11443                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
 11444  003C56  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11445  003C5A  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11446  003C5E  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11447  003C62  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11448  003C66  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 11449  003C6A  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 11450  003C6E  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 11451  003C72  0100               	movlb	0	; () banked
 11452  003C74  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 11453  003C76  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11454  003C7A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11455  003C7E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11456  003C82  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11457                           
 11458                           ; BSR set to: 0
 11459                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
 11460  003C86  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
 11461                           
 11462                           ; BSR set to: 0
 11463                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
 11464  003C8A  0100               	movlb	0	; () banked
 11465  003C8C  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 11466  003C8E  D003               	goto	l432
 11467                           
 11468                           ; BSR set to: 0
 11469                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
 11470  003C90  010F               	movlb	15	; () banked
 11471  003C92  8119               	bsf	25,0,b	;volatile
 11472  003C94  D002               	goto	l433
 11473  003C96                     l432:
 11474                           
 11475                           ; BSR set to: 0
 11476                           ;inc\CANlib.h: 676: else
 11477                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
 11478  003C96  010F               	movlb	15	; () banked
 11479  003C98  9119               	bcf	25,0,b	;volatile
 11480  003C9A                     l433:
 11481                           
 11482                           ; BSR set to: 15
 11483                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
 11484  003C9A  0100               	movlb	0	; () banked
 11485  003C9C  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 11486  003C9E  D003               	goto	l434
 11487                           
 11488                           ; BSR set to: 0
 11489                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
 11490  003CA0  010F               	movlb	15	; () banked
 11491  003CA2  8319               	bsf	25,1,b	;volatile
 11492  003CA4  D002               	goto	l435
 11493  003CA6                     l434:
 11494                           
 11495                           ; BSR set to: 0
 11496                           ;inc\CANlib.h: 681: else
 11497                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
 11498  003CA6  010F               	movlb	15	; () banked
 11499  003CA8  9319               	bcf	25,1,b	;volatile
 11500  003CAA                     l435:
 11501                           
 11502                           ; BSR set to: 15
 11503                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
 11504  003CAA  0100               	movlb	0	; () banked
 11505  003CAC  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 11506  003CAE  D003               	goto	l436
 11507                           
 11508                           ; BSR set to: 0
 11509                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
 11510  003CB0  010F               	movlb	15	; () banked
 11511  003CB2  8B19               	bsf	25,5,b	;volatile
 11512  003CB4  D002               	goto	l437
 11513  003CB6                     l436:
 11514                           
 11515                           ; BSR set to: 0
 11516                           ;inc\CANlib.h: 686: else
 11517                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
 11518  003CB6  010F               	movlb	15	; () banked
 11519  003CB8  9B19               	bcf	25,5,b	;volatile
 11520  003CBA                     l437:
 11521                           
 11522                           ; BSR set to: 15
 11523                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
 11524  003CBA  0100               	movlb	0	; () banked
 11525  003CBC  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 11526  003CBE  D003               	goto	l438
 11527                           
 11528                           ; BSR set to: 0
 11529                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
 11530  003CC0  010F               	movlb	15	; () banked
 11531  003CC2  8D19               	bsf	25,6,b	;volatile
 11532  003CC4  D002               	goto	l439
 11533  003CC6                     l438:
 11534                           
 11535                           ; BSR set to: 0
 11536                           ;inc\CANlib.h: 691: else
 11537                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
 11538  003CC6  010F               	movlb	15	; () banked
 11539  003CC8  9D19               	bcf	25,6,b	;volatile
 11540  003CCA                     l439:
 11541                           
 11542                           ; BSR set to: 15
 11543                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
 11544  003CCA  0100               	movlb	0	; () banked
 11545  003CCC  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 11546  003CCE  D003               	goto	l440
 11547                           
 11548                           ; BSR set to: 0
 11549                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
 11550  003CD0  010F               	movlb	15	; () banked
 11551  003CD2  8F19               	bsf	25,7,b	;volatile
 11552  003CD4  D002               	goto	l4891
 11553  003CD6                     l440:
 11554                           
 11555                           ; BSR set to: 0
 11556                           ;inc\CANlib.h: 696: else
 11557                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
 11558  003CD6  010F               	movlb	15	; () banked
 11559  003CD8  9F19               	bcf	25,7,b	;volatile
 11560  003CDA                     l4891:
 11561                           
 11562                           ; BSR set to: 15
 11563                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
 11564  003CDA  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11565  003CDE  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11566  003CE2  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11567  003CE6  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11568  003CEA  0E16               	movlw	22
 11569  003CEC  D006               	goto	u5580
 11570  003CEE                     u5585:
 11571  003CEE  0100               	movlb	0	; () banked
 11572  003CF0  90D8               	bcf	status,0,c
 11573  003CF2  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11574  003CF4  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11575  003CF6  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11576  003CF8  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11577  003CFA                     u5580:
 11578  003CFA  2EE8               	decfsz	wreg,f,c
 11579  003CFC  D7F8               	goto	u5585
 11580  003CFE  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11581  003D02  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11582  003D06  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11583  003D0A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11584                           
 11585                           ; BSR set to: 0
 11586                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
 11587  003D0E  0100               	movlb	0	; () banked
 11588  003D10  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11589  003D12  0100               	movlb	0	; () banked
 11590  003D14  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11591  003D16  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11592  003D18  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11593  003D1A  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11594                           
 11595                           ; BSR set to: 0
 11596                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
 11597  003D1C  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11598  003D20                     l4897:
 11599                           
 11600                           ; BSR set to: 0
 11601                           ;inc\CANlib.h: 702: }
 11602                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
 11603  003D20  0E02               	movlw	2
 11604  003D22  0100               	movlb	0	; () banked
 11605  003D24  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11606  003D26  A4D8               	btfss	status,2,c
 11607  003D28  0012               	return	
 11608                           
 11609                           ; BSR set to: 0
 11610  003D2A  0EF7               	movlw	247
 11611  003D2C  0100               	movlb	0	; () banked
 11612  003D2E  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11613  003D30  A4D8               	btfss	status,2,c
 11614  003D32  0012               	return	
 11615                           
 11616                           ; BSR set to: 0
 11617                           ;inc\CANlib.h: 705: {
 11618                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
 11619  003D34  0100               	movlb	0	; () banked
 11620  003D36  5177               	movf	CANSetMask@mask& (0+255),w,b
 11621  003D38  0100               	movlb	0	; () banked
 11622  003D3A  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11623  003D3C  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11624  003D3E  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11625  003D40  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11626                           
 11627                           ; BSR set to: 0
 11628                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
 11629  003D42  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
 11630                           
 11631                           ; BSR set to: 0
 11632                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
 11633  003D46  0E00               	movlw	0
 11634  003D48  0100               	movlb	0	; () banked
 11635  003D4A  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11636  003D4C  0100               	movlb	0	; () banked
 11637  003D4E  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11638  003D50  0EFF               	movlw	255
 11639  003D52  0100               	movlb	0	; () banked
 11640  003D54  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11641  003D56  0100               	movlb	0	; () banked
 11642  003D58  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11643  003D5A  0E00               	movlw	0
 11644  003D5C  0100               	movlb	0	; () banked
 11645  003D5E  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11646  003D60  0100               	movlb	0	; () banked
 11647  003D62  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11648  003D64  0E00               	movlw	0
 11649  003D66  0100               	movlb	0	; () banked
 11650  003D68  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11651  003D6A  0100               	movlb	0	; () banked
 11652  003D6C  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11653                           
 11654                           ; BSR set to: 0
 11655                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
 11656  003D6E  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11657  003D72  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11658  003D76  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11659  003D7A  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11660  003D7E  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 11661  003D82  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 11662  003D86  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 11663  003D8A  0100               	movlb	0	; () banked
 11664  003D8C  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 11665  003D8E  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11666  003D92  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11667  003D96  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11668  003D9A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11669                           
 11670                           ; BSR set to: 0
 11671                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
 11672  003D9E  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
 11673                           
 11674                           ; BSR set to: 0
 11675                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
 11676  003DA2  0100               	movlb	0	; () banked
 11677  003DA4  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 11678  003DA6  D003               	goto	l443
 11679                           
 11680                           ; BSR set to: 0
 11681                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
 11682  003DA8  010F               	movlb	15	; () banked
 11683  003DAA  811D               	bsf	29,0,b	;volatile
 11684  003DAC  D002               	goto	l444
 11685  003DAE                     l443:
 11686                           
 11687                           ; BSR set to: 0
 11688                           ;inc\CANlib.h: 715: else
 11689                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
 11690  003DAE  010F               	movlb	15	; () banked
 11691  003DB0  911D               	bcf	29,0,b	;volatile
 11692  003DB2                     l444:
 11693                           
 11694                           ; BSR set to: 15
 11695                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
 11696  003DB2  0100               	movlb	0	; () banked
 11697  003DB4  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 11698  003DB6  D003               	goto	l445
 11699                           
 11700                           ; BSR set to: 0
 11701                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
 11702  003DB8  010F               	movlb	15	; () banked
 11703  003DBA  831D               	bsf	29,1,b	;volatile
 11704  003DBC  D002               	goto	l446
 11705  003DBE                     l445:
 11706                           
 11707                           ; BSR set to: 0
 11708                           ;inc\CANlib.h: 720: else
 11709                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
 11710  003DBE  010F               	movlb	15	; () banked
 11711  003DC0  931D               	bcf	29,1,b	;volatile
 11712  003DC2                     l446:
 11713                           
 11714                           ; BSR set to: 15
 11715                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
 11716  003DC2  0100               	movlb	0	; () banked
 11717  003DC4  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 11718  003DC6  D003               	goto	l447
 11719                           
 11720                           ; BSR set to: 0
 11721                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
 11722  003DC8  010F               	movlb	15	; () banked
 11723  003DCA  8B1D               	bsf	29,5,b	;volatile
 11724  003DCC  D002               	goto	l448
 11725  003DCE                     l447:
 11726                           
 11727                           ; BSR set to: 0
 11728                           ;inc\CANlib.h: 725: else
 11729                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
 11730  003DCE  010F               	movlb	15	; () banked
 11731  003DD0  9B1D               	bcf	29,5,b	;volatile
 11732  003DD2                     l448:
 11733                           
 11734                           ; BSR set to: 15
 11735                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
 11736  003DD2  0100               	movlb	0	; () banked
 11737  003DD4  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 11738  003DD6  D003               	goto	l449
 11739                           
 11740                           ; BSR set to: 0
 11741                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
 11742  003DD8  010F               	movlb	15	; () banked
 11743  003DDA  8D1D               	bsf	29,6,b	;volatile
 11744  003DDC  D002               	goto	l450
 11745  003DDE                     l449:
 11746                           
 11747                           ; BSR set to: 0
 11748                           ;inc\CANlib.h: 730: else
 11749                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
 11750  003DDE  010F               	movlb	15	; () banked
 11751  003DE0  9D1D               	bcf	29,6,b	;volatile
 11752  003DE2                     l450:
 11753                           
 11754                           ; BSR set to: 15
 11755                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
 11756  003DE2  0100               	movlb	0	; () banked
 11757  003DE4  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 11758  003DE6  D003               	goto	l451
 11759                           
 11760                           ; BSR set to: 0
 11761                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
 11762  003DE8  010F               	movlb	15	; () banked
 11763  003DEA  8F1D               	bsf	29,7,b	;volatile
 11764  003DEC  D002               	goto	l4923
 11765  003DEE                     l451:
 11766                           
 11767                           ; BSR set to: 0
 11768                           ;inc\CANlib.h: 735: else
 11769                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
 11770  003DEE  010F               	movlb	15	; () banked
 11771  003DF0  9F1D               	bcf	29,7,b	;volatile
 11772  003DF2                     l4923:
 11773                           
 11774                           ; BSR set to: 15
 11775                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
 11776  003DF2  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11777  003DF6  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11778  003DFA  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11779  003DFE  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11780  003E02  0E16               	movlw	22
 11781  003E04  D006               	goto	u5660
 11782  003E06                     u5665:
 11783  003E06  0100               	movlb	0	; () banked
 11784  003E08  90D8               	bcf	status,0,c
 11785  003E0A  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11786  003E0C  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11787  003E0E  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11788  003E10  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11789  003E12                     u5660:
 11790  003E12  2EE8               	decfsz	wreg,f,c
 11791  003E14  D7F8               	goto	u5665
 11792  003E16  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11793  003E1A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11794  003E1E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11795  003E22  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11796                           
 11797                           ; BSR set to: 0
 11798                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
 11799  003E26  0100               	movlb	0	; () banked
 11800  003E28  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11801  003E2A  0100               	movlb	0	; () banked
 11802  003E2C  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11803  003E2E  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11804  003E30  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11805  003E32  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11806                           
 11807                           ; BSR set to: 0
 11808                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
 11809  003E34  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11810  003E38  0012               	return	
 11811  003E3A                     __end_of_CANSetMask:
 11812                           	opt stack 0
 11813                           tblptru	equ	0xFF8
 11814                           tblptrh	equ	0xFF7
 11815                           tblptrl	equ	0xFF6
 11816                           tablat	equ	0xFF5
 11817                           prodh	equ	0xFF4
 11818                           prodl	equ	0xFF3
 11819                           intcon	equ	0xFF2
 11820                           intcon2	equ	0xFF1
 11821                           postinc0	equ	0xFEE
 11822                           wreg	equ	0xFE8
 11823                           postdec1	equ	0xFE5
 11824                           fsr1l	equ	0xFE1
 11825                           indf2	equ	0xFDF
 11826                           postinc2	equ	0xFDE
 11827                           postdec2	equ	0xFDD
 11828                           fsr2h	equ	0xFDA
 11829                           fsr2l	equ	0xFD9
 11830                           status	equ	0xFD8
 11831                           
 11832 ;; *************** function _CANSetFilter *****************
 11833 ;; Defined at:
 11834 ;;		line 748 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 11835 ;; Parameters:    Size  Location     Type
 11836 ;;  numBuffer       1    wreg     enum E16350
 11837 ;;  filter          4   23[BANK0 ] unsigned long 
 11838 ;;  type            1   27[BANK0 ] enum E16313
 11839 ;; Auto vars:     Size  Location     Type
 11840 ;;  numBuffer       1   32[BANK0 ] enum E16350
 11841 ;;  tamp            4   33[BANK0 ] unsigned long 
 11842 ;; Return value:  Size  Location     Type
 11843 ;;		None               void
 11844 ;; Registers used:
 11845 ;;		wreg, status,2, status,0
 11846 ;; Tracked objects:
 11847 ;;		On entry : 0/0
 11848 ;;		On exit  : 0/0
 11849 ;;		Unchanged: 0/0
 11850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11851 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11852 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11853 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11854 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11855 ;;Total ram usage:       14 bytes
 11856 ;; Hardware stack levels used:    1
 11857 ;; Hardware stack levels required when called:    4
 11858 ;; This function calls:
 11859 ;;		Nothing
 11860 ;; This function is called by:
 11861 ;;		_CANInitialize
 11862 ;; This function uses a non-reentrant model
 11863 ;;
 11864                           
 11865                           	psect	text32
 11866  000D52                     __ptext32:
 11867                           	opt stack 0
 11868  000D52                     _CANSetFilter:
 11869                           	opt stack 24
 11870                           
 11871                           ; BSR set to: 0
 11872                           ;incstack = 0
 11873                           ;CANSetFilter@numBuffer stored from wreg
 11874  000D52  0100               	movlb	0	; () banked
 11875  000D54  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
 11876                           
 11877                           ;inc\CANlib.h: 750: unsigned long tamp;
 11878                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
 11879  000D56  0100               	movlb	0	; () banked
 11880  000D58  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 11881  000D5A  0100               	movlb	0	; () banked
 11882  000D5C  A4D8               	btfss	status,2,c
 11883  000D5E  D058               	goto	l4947
 11884                           
 11885                           ; BSR set to: 0
 11886  000D60  0100               	movlb	0	; () banked
 11887  000D62  297B               	incf	CANSetFilter@type& (0+255),w,b
 11888  000D64  A4D8               	btfss	status,2,c
 11889  000D66  D054               	goto	l4947
 11890                           
 11891                           ; BSR set to: 0
 11892                           ;inc\CANlib.h: 753: {
 11893                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
 11894  000D68  010F               	movlb	15	; () banked
 11895  000D6A  9701               	bcf	1,3,b	;volatile
 11896                           
 11897                           ; BSR set to: 15
 11898                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
 11899  000D6C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 11900  000D70  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 11901  000D74  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 11902  000D78  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 11903  000D7C  0E04               	movlw	4
 11904  000D7E  D006               	goto	u5690
 11905  000D80                     u5695:
 11906  000D80  0100               	movlb	0	; () banked
 11907  000D82  90D8               	bcf	status,0,c
 11908  000D84  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 11909  000D86  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 11910  000D88  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 11911  000D8A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 11912  000D8C                     u5690:
 11913  000D8C  2EE8               	decfsz	wreg,f,c
 11914  000D8E  D7F8               	goto	u5695
 11915  000D90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11916  000D94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11917  000D98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11918  000D9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11919                           
 11920                           ; BSR set to: 0
 11921                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
 11922  000DA0  0100               	movlb	0	; () banked
 11923  000DA2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 11924  000DA4  0100               	movlb	0	; () banked
 11925  000DA6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11926  000DA8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11927  000DAA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11928  000DAC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11929                           
 11930                           ; BSR set to: 0
 11931                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
 11932  000DAE  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 11933                           
 11934                           ; BSR set to: 0
 11935                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
 11936  000DB2  0E07               	movlw	7
 11937  000DB4  0100               	movlb	0	; () banked
 11938  000DB6  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 11939  000DB8  0100               	movlb	0	; () banked
 11940  000DBA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11941  000DBC  0E00               	movlw	0
 11942  000DBE  0100               	movlb	0	; () banked
 11943  000DC0  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 11944  000DC2  0100               	movlb	0	; () banked
 11945  000DC4  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 11946  000DC6  0E00               	movlw	0
 11947  000DC8  0100               	movlb	0	; () banked
 11948  000DCA  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 11949  000DCC  0100               	movlb	0	; () banked
 11950  000DCE  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 11951  000DD0  0E00               	movlw	0
 11952  000DD2  0100               	movlb	0	; () banked
 11953  000DD4  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 11954  000DD6  0100               	movlb	0	; () banked
 11955  000DD8  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 11956                           
 11957                           ; BSR set to: 0
 11958                           ;inc\CANlib.h: 761: tamp = tamp << 5;
 11959  000DDA  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 11960  000DDE  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 11961  000DE2  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 11962  000DE6  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 11963  000DEA  0E05               	movlw	5
 11964  000DEC                     u5705:
 11965  000DEC  90D8               	bcf	status,0,c
 11966  000DEE  0100               	movlb	0	; () banked
 11967  000DF0  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 11968  000DF2  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 11969  000DF4  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 11970  000DF6  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 11971  000DF8  2EE8               	decfsz	wreg,f,c
 11972  000DFA  D7F8               	goto	u5705
 11973  000DFC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11974  000E00  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11975  000E04  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11976  000E08  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11977                           
 11978                           ; BSR set to: 0
 11979                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
 11980  000E0C  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
 11981  000E10                     l4947:
 11982                           
 11983                           ; BSR set to: 0
 11984                           ;inc\CANlib.h: 763: }
 11985                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
 11986  000E10  0100               	movlb	0	; () banked
 11987  000E12  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 11988  000E14  A4D8               	btfss	status,2,c
 11989  000E16  D058               	goto	l4965
 11990                           
 11991                           ; BSR set to: 0
 11992  000E18  0100               	movlb	0	; () banked
 11993  000E1A  297B               	incf	CANSetFilter@type& (0+255),w,b
 11994  000E1C  A4D8               	btfss	status,2,c
 11995  000E1E  D054               	goto	l4965
 11996                           
 11997                           ; BSR set to: 0
 11998                           ;inc\CANlib.h: 766: {
 11999                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
 12000  000E20  010F               	movlb	15	; () banked
 12001  000E22  9705               	bcf	5,3,b	;volatile
 12002                           
 12003                           ; BSR set to: 15
 12004                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
 12005  000E24  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12006  000E28  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12007  000E2C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12008  000E30  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12009  000E34  0E04               	movlw	4
 12010  000E36  D006               	goto	u5730
 12011  000E38                     u5735:
 12012  000E38  0100               	movlb	0	; () banked
 12013  000E3A  90D8               	bcf	status,0,c
 12014  000E3C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12015  000E3E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12016  000E40  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12017  000E42  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12018  000E44                     u5730:
 12019  000E44  2EE8               	decfsz	wreg,f,c
 12020  000E46  D7F8               	goto	u5735
 12021  000E48  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12022  000E4C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12023  000E50  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12024  000E54  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12025                           
 12026                           ; BSR set to: 0
 12027                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
 12028  000E58  0100               	movlb	0	; () banked
 12029  000E5A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12030  000E5C  0100               	movlb	0	; () banked
 12031  000E5E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12032  000E60  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12033  000E62  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12034  000E64  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12035                           
 12036                           ; BSR set to: 0
 12037                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
 12038  000E66  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 12039                           
 12040                           ; BSR set to: 0
 12041                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
 12042  000E6A  0E07               	movlw	7
 12043  000E6C  0100               	movlb	0	; () banked
 12044  000E6E  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12045  000E70  0100               	movlb	0	; () banked
 12046  000E72  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12047  000E74  0E00               	movlw	0
 12048  000E76  0100               	movlb	0	; () banked
 12049  000E78  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12050  000E7A  0100               	movlb	0	; () banked
 12051  000E7C  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12052  000E7E  0E00               	movlw	0
 12053  000E80  0100               	movlb	0	; () banked
 12054  000E82  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12055  000E84  0100               	movlb	0	; () banked
 12056  000E86  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12057  000E88  0E00               	movlw	0
 12058  000E8A  0100               	movlb	0	; () banked
 12059  000E8C  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12060  000E8E  0100               	movlb	0	; () banked
 12061  000E90  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12062                           
 12063                           ; BSR set to: 0
 12064                           ;inc\CANlib.h: 774: tamp = tamp << 5;
 12065  000E92  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12066  000E96  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12067  000E9A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12068  000E9E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12069  000EA2  0E05               	movlw	5
 12070  000EA4                     u5745:
 12071  000EA4  90D8               	bcf	status,0,c
 12072  000EA6  0100               	movlb	0	; () banked
 12073  000EA8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12074  000EAA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12075  000EAC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12076  000EAE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12077  000EB0  2EE8               	decfsz	wreg,f,c
 12078  000EB2  D7F8               	goto	u5745
 12079  000EB4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12080  000EB8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12081  000EBC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12082  000EC0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12083                           
 12084                           ; BSR set to: 0
 12085                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
 12086  000EC4  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
 12087  000EC8                     l4965:
 12088                           
 12089                           ; BSR set to: 0
 12090                           ;inc\CANlib.h: 776: }
 12091                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
 12092  000EC8  0E02               	movlw	2
 12093  000ECA  0100               	movlb	0	; () banked
 12094  000ECC  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12095  000ECE  A4D8               	btfss	status,2,c
 12096  000ED0  D058               	goto	l4983
 12097                           
 12098                           ; BSR set to: 0
 12099  000ED2  0100               	movlb	0	; () banked
 12100  000ED4  297B               	incf	CANSetFilter@type& (0+255),w,b
 12101  000ED6  A4D8               	btfss	status,2,c
 12102  000ED8  D054               	goto	l4983
 12103                           
 12104                           ; BSR set to: 0
 12105                           ;inc\CANlib.h: 779: {
 12106                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
 12107  000EDA  010F               	movlb	15	; () banked
 12108  000EDC  9709               	bcf	9,3,b	;volatile
 12109                           
 12110                           ; BSR set to: 15
 12111                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
 12112  000EDE  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12113  000EE2  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12114  000EE6  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12115  000EEA  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12116  000EEE  0E04               	movlw	4
 12117  000EF0  D006               	goto	u5770
 12118  000EF2                     u5775:
 12119  000EF2  0100               	movlb	0	; () banked
 12120  000EF4  90D8               	bcf	status,0,c
 12121  000EF6  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12122  000EF8  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12123  000EFA  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12124  000EFC  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12125  000EFE                     u5770:
 12126  000EFE  2EE8               	decfsz	wreg,f,c
 12127  000F00  D7F8               	goto	u5775
 12128  000F02  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12129  000F06  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12130  000F0A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12131  000F0E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12132                           
 12133                           ; BSR set to: 0
 12134                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
 12135  000F12  0100               	movlb	0	; () banked
 12136  000F14  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12137  000F16  0100               	movlb	0	; () banked
 12138  000F18  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12139  000F1A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12140  000F1C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12141  000F1E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12142                           
 12143                           ; BSR set to: 0
 12144                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
 12145  000F20  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 12146                           
 12147                           ; BSR set to: 0
 12148                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
 12149  000F24  0E07               	movlw	7
 12150  000F26  0100               	movlb	0	; () banked
 12151  000F28  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12152  000F2A  0100               	movlb	0	; () banked
 12153  000F2C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12154  000F2E  0E00               	movlw	0
 12155  000F30  0100               	movlb	0	; () banked
 12156  000F32  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12157  000F34  0100               	movlb	0	; () banked
 12158  000F36  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12159  000F38  0E00               	movlw	0
 12160  000F3A  0100               	movlb	0	; () banked
 12161  000F3C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12162  000F3E  0100               	movlb	0	; () banked
 12163  000F40  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12164  000F42  0E00               	movlw	0
 12165  000F44  0100               	movlb	0	; () banked
 12166  000F46  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12167  000F48  0100               	movlb	0	; () banked
 12168  000F4A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12169                           
 12170                           ; BSR set to: 0
 12171                           ;inc\CANlib.h: 787: tamp = tamp << 5;
 12172  000F4C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12173  000F50  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12174  000F54  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12175  000F58  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12176  000F5C  0E05               	movlw	5
 12177  000F5E                     u5785:
 12178  000F5E  90D8               	bcf	status,0,c
 12179  000F60  0100               	movlb	0	; () banked
 12180  000F62  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12181  000F64  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12182  000F66  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12183  000F68  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12184  000F6A  2EE8               	decfsz	wreg,f,c
 12185  000F6C  D7F8               	goto	u5785
 12186  000F6E  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12187  000F72  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12188  000F76  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12189  000F7A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12190                           
 12191                           ; BSR set to: 0
 12192                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
 12193  000F7E  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
 12194  000F82                     l4983:
 12195                           
 12196                           ; BSR set to: 0
 12197                           ;inc\CANlib.h: 789: }
 12198                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
 12199  000F82  0E03               	movlw	3
 12200  000F84  0100               	movlb	0	; () banked
 12201  000F86  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12202  000F88  A4D8               	btfss	status,2,c
 12203  000F8A  D058               	goto	l5001
 12204                           
 12205                           ; BSR set to: 0
 12206  000F8C  0100               	movlb	0	; () banked
 12207  000F8E  297B               	incf	CANSetFilter@type& (0+255),w,b
 12208  000F90  A4D8               	btfss	status,2,c
 12209  000F92  D054               	goto	l5001
 12210                           
 12211                           ; BSR set to: 0
 12212                           ;inc\CANlib.h: 792: {
 12213                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
 12214  000F94  010F               	movlb	15	; () banked
 12215  000F96  970D               	bcf	13,3,b	;volatile
 12216                           
 12217                           ; BSR set to: 15
 12218                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
 12219  000F98  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12220  000F9C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12221  000FA0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12222  000FA4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12223  000FA8  0E04               	movlw	4
 12224  000FAA  D006               	goto	u5810
 12225  000FAC                     u5815:
 12226  000FAC  0100               	movlb	0	; () banked
 12227  000FAE  90D8               	bcf	status,0,c
 12228  000FB0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12229  000FB2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12230  000FB4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12231  000FB6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12232  000FB8                     u5810:
 12233  000FB8  2EE8               	decfsz	wreg,f,c
 12234  000FBA  D7F8               	goto	u5815
 12235  000FBC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12236  000FC0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12237  000FC4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12238  000FC8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12239                           
 12240                           ; BSR set to: 0
 12241                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
 12242  000FCC  0100               	movlb	0	; () banked
 12243  000FCE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12244  000FD0  0100               	movlb	0	; () banked
 12245  000FD2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12246  000FD4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12247  000FD6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12248  000FD8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12249                           
 12250                           ; BSR set to: 0
 12251                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
 12252  000FDA  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 12253                           
 12254                           ; BSR set to: 0
 12255                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
 12256  000FDE  0E07               	movlw	7
 12257  000FE0  0100               	movlb	0	; () banked
 12258  000FE2  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12259  000FE4  0100               	movlb	0	; () banked
 12260  000FE6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12261  000FE8  0E00               	movlw	0
 12262  000FEA  0100               	movlb	0	; () banked
 12263  000FEC  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12264  000FEE  0100               	movlb	0	; () banked
 12265  000FF0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12266  000FF2  0E00               	movlw	0
 12267  000FF4  0100               	movlb	0	; () banked
 12268  000FF6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12269  000FF8  0100               	movlb	0	; () banked
 12270  000FFA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12271  000FFC  0E00               	movlw	0
 12272  000FFE  0100               	movlb	0	; () banked
 12273  001000  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12274  001002  0100               	movlb	0	; () banked
 12275  001004  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12276                           
 12277                           ; BSR set to: 0
 12278                           ;inc\CANlib.h: 800: tamp = tamp << 5;
 12279  001006  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12280  00100A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12281  00100E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12282  001012  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12283  001016  0E05               	movlw	5
 12284  001018                     u5825:
 12285  001018  90D8               	bcf	status,0,c
 12286  00101A  0100               	movlb	0	; () banked
 12287  00101C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12288  00101E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12289  001020  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12290  001022  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12291  001024  2EE8               	decfsz	wreg,f,c
 12292  001026  D7F8               	goto	u5825
 12293  001028  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12294  00102C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12295  001030  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12296  001034  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12297                           
 12298                           ; BSR set to: 0
 12299                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
 12300  001038  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
 12301  00103C                     l5001:
 12302                           
 12303                           ; BSR set to: 0
 12304                           ;inc\CANlib.h: 802: }
 12305                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
 12306  00103C  0E04               	movlw	4
 12307  00103E  0100               	movlb	0	; () banked
 12308  001040  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12309  001042  A4D8               	btfss	status,2,c
 12310  001044  D058               	goto	l5019
 12311                           
 12312                           ; BSR set to: 0
 12313  001046  0100               	movlb	0	; () banked
 12314  001048  297B               	incf	CANSetFilter@type& (0+255),w,b
 12315  00104A  A4D8               	btfss	status,2,c
 12316  00104C  D054               	goto	l5019
 12317                           
 12318                           ; BSR set to: 0
 12319                           ;inc\CANlib.h: 805: {
 12320                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
 12321  00104E  010F               	movlb	15	; () banked
 12322  001050  9711               	bcf	17,3,b	;volatile
 12323                           
 12324                           ; BSR set to: 15
 12325                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
 12326  001052  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12327  001056  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12328  00105A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12329  00105E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12330  001062  0E04               	movlw	4
 12331  001064  D006               	goto	u5850
 12332  001066                     u5855:
 12333  001066  0100               	movlb	0	; () banked
 12334  001068  90D8               	bcf	status,0,c
 12335  00106A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12336  00106C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12337  00106E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12338  001070  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12339  001072                     u5850:
 12340  001072  2EE8               	decfsz	wreg,f,c
 12341  001074  D7F8               	goto	u5855
 12342  001076  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12343  00107A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12344  00107E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12345  001082  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12346                           
 12347                           ; BSR set to: 0
 12348                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
 12349  001086  0100               	movlb	0	; () banked
 12350  001088  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12351  00108A  0100               	movlb	0	; () banked
 12352  00108C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12353  00108E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12354  001090  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12355  001092  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12356                           
 12357                           ; BSR set to: 0
 12358                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
 12359  001094  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 12360                           
 12361                           ; BSR set to: 0
 12362                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
 12363  001098  0E07               	movlw	7
 12364  00109A  0100               	movlb	0	; () banked
 12365  00109C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12366  00109E  0100               	movlb	0	; () banked
 12367  0010A0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12368  0010A2  0E00               	movlw	0
 12369  0010A4  0100               	movlb	0	; () banked
 12370  0010A6  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12371  0010A8  0100               	movlb	0	; () banked
 12372  0010AA  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12373  0010AC  0E00               	movlw	0
 12374  0010AE  0100               	movlb	0	; () banked
 12375  0010B0  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12376  0010B2  0100               	movlb	0	; () banked
 12377  0010B4  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12378  0010B6  0E00               	movlw	0
 12379  0010B8  0100               	movlb	0	; () banked
 12380  0010BA  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12381  0010BC  0100               	movlb	0	; () banked
 12382  0010BE  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12383                           
 12384                           ; BSR set to: 0
 12385                           ;inc\CANlib.h: 813: tamp = tamp << 5;
 12386  0010C0  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12387  0010C4  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12388  0010C8  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12389  0010CC  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12390  0010D0  0E05               	movlw	5
 12391  0010D2                     u5865:
 12392  0010D2  90D8               	bcf	status,0,c
 12393  0010D4  0100               	movlb	0	; () banked
 12394  0010D6  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12395  0010D8  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12396  0010DA  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12397  0010DC  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12398  0010DE  2EE8               	decfsz	wreg,f,c
 12399  0010E0  D7F8               	goto	u5865
 12400  0010E2  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12401  0010E6  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12402  0010EA  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12403  0010EE  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12404                           
 12405                           ; BSR set to: 0
 12406                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
 12407  0010F2  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 12408  0010F6                     l5019:
 12409                           
 12410                           ; BSR set to: 0
 12411                           ;inc\CANlib.h: 815: }
 12412                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 12413  0010F6  0E05               	movlw	5
 12414  0010F8  0100               	movlb	0	; () banked
 12415  0010FA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12416  0010FC  A4D8               	btfss	status,2,c
 12417  0010FE  D058               	goto	l5037
 12418                           
 12419                           ; BSR set to: 0
 12420  001100  0100               	movlb	0	; () banked
 12421  001102  297B               	incf	CANSetFilter@type& (0+255),w,b
 12422  001104  A4D8               	btfss	status,2,c
 12423  001106  D054               	goto	l5037
 12424                           
 12425                           ; BSR set to: 0
 12426                           ;inc\CANlib.h: 818: {
 12427                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
 12428  001108  010F               	movlb	15	; () banked
 12429  00110A  9715               	bcf	21,3,b	;volatile
 12430                           
 12431                           ; BSR set to: 15
 12432                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
 12433  00110C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12434  001110  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12435  001114  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12436  001118  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12437  00111C  0E04               	movlw	4
 12438  00111E  D006               	goto	u5890
 12439  001120                     u5895:
 12440  001120  0100               	movlb	0	; () banked
 12441  001122  90D8               	bcf	status,0,c
 12442  001124  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12443  001126  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12444  001128  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12445  00112A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12446  00112C                     u5890:
 12447  00112C  2EE8               	decfsz	wreg,f,c
 12448  00112E  D7F8               	goto	u5895
 12449  001130  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12450  001134  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12451  001138  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12452  00113C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12453                           
 12454                           ; BSR set to: 0
 12455                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
 12456  001140  0100               	movlb	0	; () banked
 12457  001142  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12458  001144  0100               	movlb	0	; () banked
 12459  001146  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12460  001148  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12461  00114A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12462  00114C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12463                           
 12464                           ; BSR set to: 0
 12465                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
 12466  00114E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 12467                           
 12468                           ; BSR set to: 0
 12469                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
 12470  001152  0E07               	movlw	7
 12471  001154  0100               	movlb	0	; () banked
 12472  001156  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12473  001158  0100               	movlb	0	; () banked
 12474  00115A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12475  00115C  0E00               	movlw	0
 12476  00115E  0100               	movlb	0	; () banked
 12477  001160  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12478  001162  0100               	movlb	0	; () banked
 12479  001164  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12480  001166  0E00               	movlw	0
 12481  001168  0100               	movlb	0	; () banked
 12482  00116A  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12483  00116C  0100               	movlb	0	; () banked
 12484  00116E  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12485  001170  0E00               	movlw	0
 12486  001172  0100               	movlb	0	; () banked
 12487  001174  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12488  001176  0100               	movlb	0	; () banked
 12489  001178  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12490                           
 12491                           ; BSR set to: 0
 12492                           ;inc\CANlib.h: 826: tamp = tamp << 5;
 12493  00117A  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12494  00117E  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12495  001182  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12496  001186  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12497  00118A  0E05               	movlw	5
 12498  00118C                     u5905:
 12499  00118C  90D8               	bcf	status,0,c
 12500  00118E  0100               	movlb	0	; () banked
 12501  001190  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12502  001192  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12503  001194  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12504  001196  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12505  001198  2EE8               	decfsz	wreg,f,c
 12506  00119A  D7F8               	goto	u5905
 12507  00119C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12508  0011A0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12509  0011A4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12510  0011A8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12511                           
 12512                           ; BSR set to: 0
 12513                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
 12514  0011AC  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 12515  0011B0                     l5037:
 12516                           
 12517                           ; BSR set to: 0
 12518                           ;inc\CANlib.h: 828: }
 12519                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 12520  0011B0  0100               	movlb	0	; () banked
 12521  0011B2  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12522  0011B4  0100               	movlb	0	; () banked
 12523  0011B6  A4D8               	btfss	status,2,c
 12524  0011B8  D089               	goto	l5071
 12525                           
 12526                           ; BSR set to: 0
 12527  0011BA  0EF7               	movlw	247
 12528  0011BC  0100               	movlb	0	; () banked
 12529  0011BE  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 12530  0011C0  A4D8               	btfss	status,2,c
 12531  0011C2  D084               	goto	l5071
 12532                           
 12533                           ; BSR set to: 0
 12534                           ;inc\CANlib.h: 832: {
 12535                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
 12536  0011C4  010F               	movlb	15	; () banked
 12537  0011C6  8701               	bsf	1,3,b	;volatile
 12538                           
 12539                           ; BSR set to: 15
 12540                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
 12541  0011C8  0100               	movlb	0	; () banked
 12542  0011CA  5177               	movf	CANSetFilter@filter& (0+255),w,b
 12543  0011CC  0100               	movlb	0	; () banked
 12544  0011CE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12545  0011D0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12546  0011D2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12547  0011D4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12548                           
 12549                           ; BSR set to: 0
 12550                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
 12551  0011D6  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 12552                           
 12553                           ; BSR set to: 0
 12554                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
 12555  0011DA  0E00               	movlw	0
 12556  0011DC  0100               	movlb	0	; () banked
 12557  0011DE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12558  0011E0  0100               	movlb	0	; () banked
 12559  0011E2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12560  0011E4  0EFF               	movlw	255
 12561  0011E6  0100               	movlb	0	; () banked
 12562  0011E8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12563  0011EA  0100               	movlb	0	; () banked
 12564  0011EC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12565  0011EE  0E00               	movlw	0
 12566  0011F0  0100               	movlb	0	; () banked
 12567  0011F2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12568  0011F4  0100               	movlb	0	; () banked
 12569  0011F6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12570  0011F8  0E00               	movlw	0
 12571  0011FA  0100               	movlb	0	; () banked
 12572  0011FC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12573  0011FE  0100               	movlb	0	; () banked
 12574  001200  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12575                           
 12576                           ; BSR set to: 0
 12577                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
 12578  001202  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12579  001206  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12580  00120A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12581  00120E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12582  001212  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 12583  001216  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 12584  00121A  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 12585  00121E  0100               	movlb	0	; () banked
 12586  001220  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 12587  001222  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12588  001226  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12589  00122A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12590  00122E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12591                           
 12592                           ; BSR set to: 0
 12593                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
 12594  001232  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 12595                           
 12596                           ; BSR set to: 0
 12597                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
 12598  001236  0100               	movlb	0	; () banked
 12599  001238  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 12600  00123A  D003               	goto	l463
 12601                           
 12602                           ; BSR set to: 0
 12603                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
 12604  00123C  010F               	movlb	15	; () banked
 12605  00123E  8101               	bsf	1,0,b	;volatile
 12606  001240  D002               	goto	l464
 12607  001242                     l463:
 12608                           
 12609                           ; BSR set to: 0
 12610                           ;inc\CANlib.h: 844: else
 12611                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
 12612  001242  010F               	movlb	15	; () banked
 12613  001244  9101               	bcf	1,0,b	;volatile
 12614  001246                     l464:
 12615                           
 12616                           ; BSR set to: 15
 12617                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
 12618  001246  0100               	movlb	0	; () banked
 12619  001248  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 12620  00124A  D003               	goto	l465
 12621                           
 12622                           ; BSR set to: 0
 12623                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
 12624  00124C  010F               	movlb	15	; () banked
 12625  00124E  8301               	bsf	1,1,b	;volatile
 12626  001250  D002               	goto	l466
 12627  001252                     l465:
 12628                           
 12629                           ; BSR set to: 0
 12630                           ;inc\CANlib.h: 849: else
 12631                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
 12632  001252  010F               	movlb	15	; () banked
 12633  001254  9301               	bcf	1,1,b	;volatile
 12634  001256                     l466:
 12635                           
 12636                           ; BSR set to: 15
 12637                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
 12638  001256  0100               	movlb	0	; () banked
 12639  001258  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 12640  00125A  D003               	goto	l467
 12641                           
 12642                           ; BSR set to: 0
 12643                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
 12644  00125C  010F               	movlb	15	; () banked
 12645  00125E  8B01               	bsf	1,5,b	;volatile
 12646  001260  D002               	goto	l468
 12647  001262                     l467:
 12648                           
 12649                           ; BSR set to: 0
 12650                           ;inc\CANlib.h: 854: else
 12651                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
 12652  001262  010F               	movlb	15	; () banked
 12653  001264  9B01               	bcf	1,5,b	;volatile
 12654  001266                     l468:
 12655                           
 12656                           ; BSR set to: 15
 12657                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
 12658  001266  0100               	movlb	0	; () banked
 12659  001268  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 12660  00126A  D003               	goto	l469
 12661                           
 12662                           ; BSR set to: 0
 12663                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
 12664  00126C  010F               	movlb	15	; () banked
 12665  00126E  8D01               	bsf	1,6,b	;volatile
 12666  001270  D002               	goto	l470
 12667  001272                     l469:
 12668                           
 12669                           ; BSR set to: 0
 12670                           ;inc\CANlib.h: 859: else
 12671                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
 12672  001272  010F               	movlb	15	; () banked
 12673  001274  9D01               	bcf	1,6,b	;volatile
 12674  001276                     l470:
 12675                           
 12676                           ; BSR set to: 15
 12677                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
 12678  001276  0100               	movlb	0	; () banked
 12679  001278  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 12680  00127A  D003               	goto	l471
 12681                           
 12682                           ; BSR set to: 0
 12683                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
 12684  00127C  010F               	movlb	15	; () banked
 12685  00127E  8F01               	bsf	1,7,b	;volatile
 12686  001280  D002               	goto	l5065
 12687  001282                     l471:
 12688                           
 12689                           ; BSR set to: 0
 12690                           ;inc\CANlib.h: 864: else
 12691                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
 12692  001282  010F               	movlb	15	; () banked
 12693  001284  9F01               	bcf	1,7,b	;volatile
 12694  001286                     l5065:
 12695                           
 12696                           ; BSR set to: 15
 12697                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
 12698  001286  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12699  00128A  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12700  00128E  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12701  001292  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12702  001296  0E16               	movlw	22
 12703  001298  D006               	goto	u5980
 12704  00129A                     u5985:
 12705  00129A  0100               	movlb	0	; () banked
 12706  00129C  90D8               	bcf	status,0,c
 12707  00129E  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12708  0012A0  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12709  0012A2  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12710  0012A4  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12711  0012A6                     u5980:
 12712  0012A6  2EE8               	decfsz	wreg,f,c
 12713  0012A8  D7F8               	goto	u5985
 12714  0012AA  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12715  0012AE  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12716  0012B2  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12717  0012B6  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12718                           
 12719                           ; BSR set to: 0
 12720                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
 12721  0012BA  0100               	movlb	0	; () banked
 12722  0012BC  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12723  0012BE  0100               	movlb	0	; () banked
 12724  0012C0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12725  0012C2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12726  0012C4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12727  0012C6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12728                           
 12729                           ; BSR set to: 0
 12730                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
 12731  0012C8  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12732  0012CC                     l5071:
 12733                           
 12734                           ; BSR set to: 0
 12735                           ;inc\CANlib.h: 870: }
 12736                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 12737  0012CC  0100               	movlb	0	; () banked
 12738  0012CE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12739  0012D0  A4D8               	btfss	status,2,c
 12740  0012D2  D089               	goto	l5105
 12741                           
 12742                           ; BSR set to: 0
 12743  0012D4  0EF7               	movlw	247
 12744  0012D6  0100               	movlb	0	; () banked
 12745  0012D8  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 12746  0012DA  A4D8               	btfss	status,2,c
 12747  0012DC  D084               	goto	l5105
 12748                           
 12749                           ; BSR set to: 0
 12750                           ;inc\CANlib.h: 873: {
 12751                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
 12752  0012DE  010F               	movlb	15	; () banked
 12753  0012E0  8705               	bsf	5,3,b	;volatile
 12754                           
 12755                           ; BSR set to: 15
 12756                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
 12757  0012E2  0100               	movlb	0	; () banked
 12758  0012E4  5177               	movf	CANSetFilter@filter& (0+255),w,b
 12759  0012E6  0100               	movlb	0	; () banked
 12760  0012E8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12761  0012EA  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12762  0012EC  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12763  0012EE  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12764                           
 12765                           ; BSR set to: 0
 12766                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
 12767  0012F0  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 12768                           
 12769                           ; BSR set to: 0
 12770                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
 12771  0012F4  0E00               	movlw	0
 12772  0012F6  0100               	movlb	0	; () banked
 12773  0012F8  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12774  0012FA  0100               	movlb	0	; () banked
 12775  0012FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12776  0012FE  0EFF               	movlw	255
 12777  001300  0100               	movlb	0	; () banked
 12778  001302  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12779  001304  0100               	movlb	0	; () banked
 12780  001306  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12781  001308  0E00               	movlw	0
 12782  00130A  0100               	movlb	0	; () banked
 12783  00130C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12784  00130E  0100               	movlb	0	; () banked
 12785  001310  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12786  001312  0E00               	movlw	0
 12787  001314  0100               	movlb	0	; () banked
 12788  001316  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12789  001318  0100               	movlb	0	; () banked
 12790  00131A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12791                           
 12792                           ; BSR set to: 0
 12793                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
 12794  00131C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12795  001320  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12796  001324  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12797  001328  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12798  00132C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 12799  001330  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 12800  001334  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 12801  001338  0100               	movlb	0	; () banked
 12802  00133A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 12803  00133C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12804  001340  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12805  001344  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12806  001348  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12807                           
 12808                           ; BSR set to: 0
 12809                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
 12810  00134C  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 12811                           
 12812                           ; BSR set to: 0
 12813                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
 12814  001350  0100               	movlb	0	; () banked
 12815  001352  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 12816  001354  D003               	goto	l474
 12817                           
 12818                           ; BSR set to: 0
 12819                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
 12820  001356  010F               	movlb	15	; () banked
 12821  001358  8105               	bsf	5,0,b	;volatile
 12822  00135A  D002               	goto	l475
 12823  00135C                     l474:
 12824                           
 12825                           ; BSR set to: 0
 12826                           ;inc\CANlib.h: 885: else
 12827                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
 12828  00135C  010F               	movlb	15	; () banked
 12829  00135E  9105               	bcf	5,0,b	;volatile
 12830  001360                     l475:
 12831                           
 12832                           ; BSR set to: 15
 12833                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
 12834  001360  0100               	movlb	0	; () banked
 12835  001362  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 12836  001364  D003               	goto	l476
 12837                           
 12838                           ; BSR set to: 0
 12839                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
 12840  001366  010F               	movlb	15	; () banked
 12841  001368  8305               	bsf	5,1,b	;volatile
 12842  00136A  D002               	goto	l477
 12843  00136C                     l476:
 12844                           
 12845                           ; BSR set to: 0
 12846                           ;inc\CANlib.h: 890: else
 12847                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
 12848  00136C  010F               	movlb	15	; () banked
 12849  00136E  9305               	bcf	5,1,b	;volatile
 12850  001370                     l477:
 12851                           
 12852                           ; BSR set to: 15
 12853                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
 12854  001370  0100               	movlb	0	; () banked
 12855  001372  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 12856  001374  D003               	goto	l478
 12857                           
 12858                           ; BSR set to: 0
 12859                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
 12860  001376  010F               	movlb	15	; () banked
 12861  001378  8B05               	bsf	5,5,b	;volatile
 12862  00137A  D002               	goto	l479
 12863  00137C                     l478:
 12864                           
 12865                           ; BSR set to: 0
 12866                           ;inc\CANlib.h: 895: else
 12867                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
 12868  00137C  010F               	movlb	15	; () banked
 12869  00137E  9B05               	bcf	5,5,b	;volatile
 12870  001380                     l479:
 12871                           
 12872                           ; BSR set to: 15
 12873                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
 12874  001380  0100               	movlb	0	; () banked
 12875  001382  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 12876  001384  D003               	goto	l480
 12877                           
 12878                           ; BSR set to: 0
 12879                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
 12880  001386  010F               	movlb	15	; () banked
 12881  001388  8D05               	bsf	5,6,b	;volatile
 12882  00138A  D002               	goto	l481
 12883  00138C                     l480:
 12884                           
 12885                           ; BSR set to: 0
 12886                           ;inc\CANlib.h: 900: else
 12887                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
 12888  00138C  010F               	movlb	15	; () banked
 12889  00138E  9D05               	bcf	5,6,b	;volatile
 12890  001390                     l481:
 12891                           
 12892                           ; BSR set to: 15
 12893                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
 12894  001390  0100               	movlb	0	; () banked
 12895  001392  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 12896  001394  D003               	goto	l482
 12897                           
 12898                           ; BSR set to: 0
 12899                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
 12900  001396  010F               	movlb	15	; () banked
 12901  001398  8F05               	bsf	5,7,b	;volatile
 12902  00139A  D002               	goto	l5099
 12903  00139C                     l482:
 12904                           
 12905                           ; BSR set to: 0
 12906                           ;inc\CANlib.h: 905: else
 12907                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
 12908  00139C  010F               	movlb	15	; () banked
 12909  00139E  9F05               	bcf	5,7,b	;volatile
 12910  0013A0                     l5099:
 12911                           
 12912                           ; BSR set to: 15
 12913                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
 12914  0013A0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12915  0013A4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12916  0013A8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12917  0013AC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12918  0013B0  0E16               	movlw	22
 12919  0013B2  D006               	goto	u6060
 12920  0013B4                     u6065:
 12921  0013B4  0100               	movlb	0	; () banked
 12922  0013B6  90D8               	bcf	status,0,c
 12923  0013B8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12924  0013BA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12925  0013BC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12926  0013BE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12927  0013C0                     u6060:
 12928  0013C0  2EE8               	decfsz	wreg,f,c
 12929  0013C2  D7F8               	goto	u6065
 12930  0013C4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12931  0013C8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12932  0013CC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12933  0013D0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12934                           
 12935                           ; BSR set to: 0
 12936                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
 12937  0013D4  0100               	movlb	0	; () banked
 12938  0013D6  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12939  0013D8  0100               	movlb	0	; () banked
 12940  0013DA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12941  0013DC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12942  0013DE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12943  0013E0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12944                           
 12945                           ; BSR set to: 0
 12946                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
 12947  0013E2  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 12948  0013E6                     l5105:
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;inc\CANlib.h: 911: }
 12952                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 12953  0013E6  0E02               	movlw	2
 12954  0013E8  0100               	movlb	0	; () banked
 12955  0013EA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12956  0013EC  A4D8               	btfss	status,2,c
 12957  0013EE  D089               	goto	l5139
 12958                           
 12959                           ; BSR set to: 0
 12960  0013F0  0EF7               	movlw	247
 12961  0013F2  0100               	movlb	0	; () banked
 12962  0013F4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 12963  0013F6  A4D8               	btfss	status,2,c
 12964  0013F8  D084               	goto	l5139
 12965                           
 12966                           ; BSR set to: 0
 12967                           ;inc\CANlib.h: 915: {
 12968                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
 12969  0013FA  010F               	movlb	15	; () banked
 12970  0013FC  8709               	bsf	9,3,b	;volatile
 12971                           
 12972                           ; BSR set to: 15
 12973                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
 12974  0013FE  0100               	movlb	0	; () banked
 12975  001400  5177               	movf	CANSetFilter@filter& (0+255),w,b
 12976  001402  0100               	movlb	0	; () banked
 12977  001404  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12978  001406  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12979  001408  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12980  00140A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12981                           
 12982                           ; BSR set to: 0
 12983                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
 12984  00140C  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 12985                           
 12986                           ; BSR set to: 0
 12987                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
 12988  001410  0E00               	movlw	0
 12989  001412  0100               	movlb	0	; () banked
 12990  001414  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12991  001416  0100               	movlb	0	; () banked
 12992  001418  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12993  00141A  0EFF               	movlw	255
 12994  00141C  0100               	movlb	0	; () banked
 12995  00141E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12996  001420  0100               	movlb	0	; () banked
 12997  001422  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12998  001424  0E00               	movlw	0
 12999  001426  0100               	movlb	0	; () banked
 13000  001428  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13001  00142A  0100               	movlb	0	; () banked
 13002  00142C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13003  00142E  0E00               	movlw	0
 13004  001430  0100               	movlb	0	; () banked
 13005  001432  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13006  001434  0100               	movlb	0	; () banked
 13007  001436  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13008                           
 13009                           ; BSR set to: 0
 13010                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
 13011  001438  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13012  00143C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13013  001440  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13014  001444  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13015  001448  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13016  00144C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13017  001450  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13018  001454  0100               	movlb	0	; () banked
 13019  001456  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13020  001458  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13021  00145C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13022  001460  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13023  001464  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13024                           
 13025                           ; BSR set to: 0
 13026                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
 13027  001468  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 13028                           
 13029                           ; BSR set to: 0
 13030                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
 13031  00146C  0100               	movlb	0	; () banked
 13032  00146E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13033  001470  D003               	goto	l485
 13034                           
 13035                           ; BSR set to: 0
 13036                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
 13037  001472  010F               	movlb	15	; () banked
 13038  001474  8109               	bsf	9,0,b	;volatile
 13039  001476  D002               	goto	l486
 13040  001478                     l485:
 13041                           
 13042                           ; BSR set to: 0
 13043                           ;inc\CANlib.h: 927: else
 13044                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
 13045  001478  010F               	movlb	15	; () banked
 13046  00147A  9109               	bcf	9,0,b	;volatile
 13047  00147C                     l486:
 13048                           
 13049                           ; BSR set to: 15
 13050                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
 13051  00147C  0100               	movlb	0	; () banked
 13052  00147E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13053  001480  D003               	goto	l487
 13054                           
 13055                           ; BSR set to: 0
 13056                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
 13057  001482  010F               	movlb	15	; () banked
 13058  001484  8309               	bsf	9,1,b	;volatile
 13059  001486  D002               	goto	l488
 13060  001488                     l487:
 13061                           
 13062                           ; BSR set to: 0
 13063                           ;inc\CANlib.h: 932: else
 13064                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
 13065  001488  010F               	movlb	15	; () banked
 13066  00148A  9309               	bcf	9,1,b	;volatile
 13067  00148C                     l488:
 13068                           
 13069                           ; BSR set to: 15
 13070                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
 13071  00148C  0100               	movlb	0	; () banked
 13072  00148E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13073  001490  D003               	goto	l489
 13074                           
 13075                           ; BSR set to: 0
 13076                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
 13077  001492  010F               	movlb	15	; () banked
 13078  001494  8B09               	bsf	9,5,b	;volatile
 13079  001496  D002               	goto	l490
 13080  001498                     l489:
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;inc\CANlib.h: 937: else
 13084                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
 13085  001498  010F               	movlb	15	; () banked
 13086  00149A  9B09               	bcf	9,5,b	;volatile
 13087  00149C                     l490:
 13088                           
 13089                           ; BSR set to: 15
 13090                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
 13091  00149C  0100               	movlb	0	; () banked
 13092  00149E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13093  0014A0  D003               	goto	l491
 13094                           
 13095                           ; BSR set to: 0
 13096                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
 13097  0014A2  010F               	movlb	15	; () banked
 13098  0014A4  8D09               	bsf	9,6,b	;volatile
 13099  0014A6  D002               	goto	l492
 13100  0014A8                     l491:
 13101                           
 13102                           ; BSR set to: 0
 13103                           ;inc\CANlib.h: 942: else
 13104                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
 13105  0014A8  010F               	movlb	15	; () banked
 13106  0014AA  9D09               	bcf	9,6,b	;volatile
 13107  0014AC                     l492:
 13108                           
 13109                           ; BSR set to: 15
 13110                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
 13111  0014AC  0100               	movlb	0	; () banked
 13112  0014AE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13113  0014B0  D003               	goto	l493
 13114                           
 13115                           ; BSR set to: 0
 13116                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
 13117  0014B2  010F               	movlb	15	; () banked
 13118  0014B4  8F09               	bsf	9,7,b	;volatile
 13119  0014B6  D002               	goto	l5133
 13120  0014B8                     l493:
 13121                           
 13122                           ; BSR set to: 0
 13123                           ;inc\CANlib.h: 947: else
 13124                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
 13125  0014B8  010F               	movlb	15	; () banked
 13126  0014BA  9F09               	bcf	9,7,b	;volatile
 13127  0014BC                     l5133:
 13128                           
 13129                           ; BSR set to: 15
 13130                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
 13131  0014BC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13132  0014C0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13133  0014C4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13134  0014C8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13135  0014CC  0E16               	movlw	22
 13136  0014CE  D006               	goto	u6140
 13137  0014D0                     u6145:
 13138  0014D0  0100               	movlb	0	; () banked
 13139  0014D2  90D8               	bcf	status,0,c
 13140  0014D4  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13141  0014D6  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13142  0014D8  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13143  0014DA  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13144  0014DC                     u6140:
 13145  0014DC  2EE8               	decfsz	wreg,f,c
 13146  0014DE  D7F8               	goto	u6145
 13147  0014E0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13148  0014E4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13149  0014E8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13150  0014EC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13151                           
 13152                           ; BSR set to: 0
 13153                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
 13154  0014F0  0100               	movlb	0	; () banked
 13155  0014F2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13156  0014F4  0100               	movlb	0	; () banked
 13157  0014F6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13158  0014F8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13159  0014FA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13160  0014FC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13161                           
 13162                           ; BSR set to: 0
 13163                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
 13164  0014FE  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 13165  001502                     l5139:
 13166                           
 13167                           ; BSR set to: 0
 13168                           ;inc\CANlib.h: 953: }
 13169                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 13170  001502  0E03               	movlw	3
 13171  001504  0100               	movlb	0	; () banked
 13172  001506  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13173  001508  A4D8               	btfss	status,2,c
 13174  00150A  D089               	goto	l5173
 13175                           
 13176                           ; BSR set to: 0
 13177  00150C  0EF7               	movlw	247
 13178  00150E  0100               	movlb	0	; () banked
 13179  001510  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13180  001512  A4D8               	btfss	status,2,c
 13181  001514  D084               	goto	l5173
 13182                           
 13183                           ; BSR set to: 0
 13184                           ;inc\CANlib.h: 956: {
 13185                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
 13186  001516  010F               	movlb	15	; () banked
 13187  001518  870D               	bsf	13,3,b	;volatile
 13188                           
 13189                           ; BSR set to: 15
 13190                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
 13191  00151A  0100               	movlb	0	; () banked
 13192  00151C  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13193  00151E  0100               	movlb	0	; () banked
 13194  001520  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13195  001522  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13196  001524  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13197  001526  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13198                           
 13199                           ; BSR set to: 0
 13200                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
 13201  001528  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 13202                           
 13203                           ; BSR set to: 0
 13204                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
 13205  00152C  0E00               	movlw	0
 13206  00152E  0100               	movlb	0	; () banked
 13207  001530  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13208  001532  0100               	movlb	0	; () banked
 13209  001534  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13210  001536  0EFF               	movlw	255
 13211  001538  0100               	movlb	0	; () banked
 13212  00153A  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13213  00153C  0100               	movlb	0	; () banked
 13214  00153E  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13215  001540  0E00               	movlw	0
 13216  001542  0100               	movlb	0	; () banked
 13217  001544  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13218  001546  0100               	movlb	0	; () banked
 13219  001548  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13220  00154A  0E00               	movlw	0
 13221  00154C  0100               	movlb	0	; () banked
 13222  00154E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13223  001550  0100               	movlb	0	; () banked
 13224  001552  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13225                           
 13226                           ; BSR set to: 0
 13227                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
 13228  001554  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13229  001558  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13230  00155C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13231  001560  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13232  001564  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13233  001568  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13234  00156C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13235  001570  0100               	movlb	0	; () banked
 13236  001572  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13237  001574  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13238  001578  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13239  00157C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13240  001580  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13241                           
 13242                           ; BSR set to: 0
 13243                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
 13244  001584  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 13245                           
 13246                           ; BSR set to: 0
 13247                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
 13248  001588  0100               	movlb	0	; () banked
 13249  00158A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13250  00158C  D003               	goto	l496
 13251                           
 13252                           ; BSR set to: 0
 13253                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
 13254  00158E  010F               	movlb	15	; () banked
 13255  001590  810D               	bsf	13,0,b	;volatile
 13256  001592  D002               	goto	l497
 13257  001594                     l496:
 13258                           
 13259                           ; BSR set to: 0
 13260                           ;inc\CANlib.h: 968: else
 13261                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
 13262  001594  010F               	movlb	15	; () banked
 13263  001596  910D               	bcf	13,0,b	;volatile
 13264  001598                     l497:
 13265                           
 13266                           ; BSR set to: 15
 13267                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
 13268  001598  0100               	movlb	0	; () banked
 13269  00159A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13270  00159C  D003               	goto	l498
 13271                           
 13272                           ; BSR set to: 0
 13273                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
 13274  00159E  010F               	movlb	15	; () banked
 13275  0015A0  830D               	bsf	13,1,b	;volatile
 13276  0015A2  D002               	goto	l499
 13277  0015A4                     l498:
 13278                           
 13279                           ; BSR set to: 0
 13280                           ;inc\CANlib.h: 973: else
 13281                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
 13282  0015A4  010F               	movlb	15	; () banked
 13283  0015A6  930D               	bcf	13,1,b	;volatile
 13284  0015A8                     l499:
 13285                           
 13286                           ; BSR set to: 15
 13287                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
 13288  0015A8  0100               	movlb	0	; () banked
 13289  0015AA  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13290  0015AC  D003               	goto	l500
 13291                           
 13292                           ; BSR set to: 0
 13293                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
 13294  0015AE  010F               	movlb	15	; () banked
 13295  0015B0  8B0D               	bsf	13,5,b	;volatile
 13296  0015B2  D002               	goto	l501
 13297  0015B4                     l500:
 13298                           
 13299                           ; BSR set to: 0
 13300                           ;inc\CANlib.h: 978: else
 13301                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
 13302  0015B4  010F               	movlb	15	; () banked
 13303  0015B6  9B0D               	bcf	13,5,b	;volatile
 13304  0015B8                     l501:
 13305                           
 13306                           ; BSR set to: 15
 13307                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
 13308  0015B8  0100               	movlb	0	; () banked
 13309  0015BA  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13310  0015BC  D003               	goto	l502
 13311                           
 13312                           ; BSR set to: 0
 13313                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
 13314  0015BE  010F               	movlb	15	; () banked
 13315  0015C0  8D0D               	bsf	13,6,b	;volatile
 13316  0015C2  D002               	goto	l503
 13317  0015C4                     l502:
 13318                           
 13319                           ; BSR set to: 0
 13320                           ;inc\CANlib.h: 983: else
 13321                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
 13322  0015C4  010F               	movlb	15	; () banked
 13323  0015C6  9D0D               	bcf	13,6,b	;volatile
 13324  0015C8                     l503:
 13325                           
 13326                           ; BSR set to: 15
 13327                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
 13328  0015C8  0100               	movlb	0	; () banked
 13329  0015CA  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13330  0015CC  D003               	goto	l504
 13331                           
 13332                           ; BSR set to: 0
 13333                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
 13334  0015CE  010F               	movlb	15	; () banked
 13335  0015D0  8F0D               	bsf	13,7,b	;volatile
 13336  0015D2  D002               	goto	l5167
 13337  0015D4                     l504:
 13338                           
 13339                           ; BSR set to: 0
 13340                           ;inc\CANlib.h: 988: else
 13341                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
 13342  0015D4  010F               	movlb	15	; () banked
 13343  0015D6  9F0D               	bcf	13,7,b	;volatile
 13344  0015D8                     l5167:
 13345                           
 13346                           ; BSR set to: 15
 13347                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
 13348  0015D8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13349  0015DC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13350  0015E0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13351  0015E4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13352  0015E8  0E16               	movlw	22
 13353  0015EA  D006               	goto	u6220
 13354  0015EC                     u6225:
 13355  0015EC  0100               	movlb	0	; () banked
 13356  0015EE  90D8               	bcf	status,0,c
 13357  0015F0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13358  0015F2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13359  0015F4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13360  0015F6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13361  0015F8                     u6220:
 13362  0015F8  2EE8               	decfsz	wreg,f,c
 13363  0015FA  D7F8               	goto	u6225
 13364  0015FC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13365  001600  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13366  001604  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13367  001608  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13368                           
 13369                           ; BSR set to: 0
 13370                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
 13371  00160C  0100               	movlb	0	; () banked
 13372  00160E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13373  001610  0100               	movlb	0	; () banked
 13374  001612  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13375  001614  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13376  001616  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13377  001618  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13378                           
 13379                           ; BSR set to: 0
 13380                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
 13381  00161A  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 13382  00161E                     l5173:
 13383                           
 13384                           ; BSR set to: 0
 13385                           ;inc\CANlib.h: 994: }
 13386                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 13387  00161E  0E04               	movlw	4
 13388  001620  0100               	movlb	0	; () banked
 13389  001622  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13390  001624  A4D8               	btfss	status,2,c
 13391  001626  D089               	goto	l5207
 13392                           
 13393                           ; BSR set to: 0
 13394  001628  0EF7               	movlw	247
 13395  00162A  0100               	movlb	0	; () banked
 13396  00162C  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13397  00162E  A4D8               	btfss	status,2,c
 13398  001630  D084               	goto	l5207
 13399                           
 13400                           ; BSR set to: 0
 13401                           ;inc\CANlib.h: 997: {
 13402                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
 13403  001632  010F               	movlb	15	; () banked
 13404  001634  8711               	bsf	17,3,b	;volatile
 13405                           
 13406                           ; BSR set to: 15
 13407                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
 13408  001636  0100               	movlb	0	; () banked
 13409  001638  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13410  00163A  0100               	movlb	0	; () banked
 13411  00163C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13412  00163E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13413  001640  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13414  001642  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13415                           
 13416                           ; BSR set to: 0
 13417                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
 13418  001644  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 13419                           
 13420                           ; BSR set to: 0
 13421                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
 13422  001648  0E00               	movlw	0
 13423  00164A  0100               	movlb	0	; () banked
 13424  00164C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13425  00164E  0100               	movlb	0	; () banked
 13426  001650  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13427  001652  0EFF               	movlw	255
 13428  001654  0100               	movlb	0	; () banked
 13429  001656  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13430  001658  0100               	movlb	0	; () banked
 13431  00165A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13432  00165C  0E00               	movlw	0
 13433  00165E  0100               	movlb	0	; () banked
 13434  001660  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13435  001662  0100               	movlb	0	; () banked
 13436  001664  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13437  001666  0E00               	movlw	0
 13438  001668  0100               	movlb	0	; () banked
 13439  00166A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13440  00166C  0100               	movlb	0	; () banked
 13441  00166E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13442                           
 13443                           ; BSR set to: 0
 13444                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
 13445  001670  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13446  001674  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13447  001678  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13448  00167C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13449  001680  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13450  001684  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13451  001688  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13452  00168C  0100               	movlb	0	; () banked
 13453  00168E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13454  001690  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13455  001694  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13456  001698  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13457  00169C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13458                           
 13459                           ; BSR set to: 0
 13460                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
 13461  0016A0  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 13462                           
 13463                           ; BSR set to: 0
 13464                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
 13465  0016A4  0100               	movlb	0	; () banked
 13466  0016A6  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13467  0016A8  D003               	goto	l507
 13468                           
 13469                           ; BSR set to: 0
 13470                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
 13471  0016AA  010F               	movlb	15	; () banked
 13472  0016AC  8111               	bsf	17,0,b	;volatile
 13473  0016AE  D002               	goto	l508
 13474  0016B0                     l507:
 13475                           
 13476                           ; BSR set to: 0
 13477                           ;inc\CANlib.h: 1009: else
 13478                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
 13479  0016B0  010F               	movlb	15	; () banked
 13480  0016B2  9111               	bcf	17,0,b	;volatile
 13481  0016B4                     l508:
 13482                           
 13483                           ; BSR set to: 15
 13484                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
 13485  0016B4  0100               	movlb	0	; () banked
 13486  0016B6  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13487  0016B8  D003               	goto	l509
 13488                           
 13489                           ; BSR set to: 0
 13490                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
 13491  0016BA  010F               	movlb	15	; () banked
 13492  0016BC  8311               	bsf	17,1,b	;volatile
 13493  0016BE  D002               	goto	l510
 13494  0016C0                     l509:
 13495                           
 13496                           ; BSR set to: 0
 13497                           ;inc\CANlib.h: 1014: else
 13498                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
 13499  0016C0  010F               	movlb	15	; () banked
 13500  0016C2  9311               	bcf	17,1,b	;volatile
 13501  0016C4                     l510:
 13502                           
 13503                           ; BSR set to: 15
 13504                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
 13505  0016C4  0100               	movlb	0	; () banked
 13506  0016C6  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13507  0016C8  D003               	goto	l511
 13508                           
 13509                           ; BSR set to: 0
 13510                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
 13511  0016CA  010F               	movlb	15	; () banked
 13512  0016CC  8B11               	bsf	17,5,b	;volatile
 13513  0016CE  D002               	goto	l512
 13514  0016D0                     l511:
 13515                           
 13516                           ; BSR set to: 0
 13517                           ;inc\CANlib.h: 1019: else
 13518                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
 13519  0016D0  010F               	movlb	15	; () banked
 13520  0016D2  9B11               	bcf	17,5,b	;volatile
 13521  0016D4                     l512:
 13522                           
 13523                           ; BSR set to: 15
 13524                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
 13525  0016D4  0100               	movlb	0	; () banked
 13526  0016D6  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13527  0016D8  D003               	goto	l513
 13528                           
 13529                           ; BSR set to: 0
 13530                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
 13531  0016DA  010F               	movlb	15	; () banked
 13532  0016DC  8D11               	bsf	17,6,b	;volatile
 13533  0016DE  D002               	goto	l514
 13534  0016E0                     l513:
 13535                           
 13536                           ; BSR set to: 0
 13537                           ;inc\CANlib.h: 1024: else
 13538                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
 13539  0016E0  010F               	movlb	15	; () banked
 13540  0016E2  9D11               	bcf	17,6,b	;volatile
 13541  0016E4                     l514:
 13542                           
 13543                           ; BSR set to: 15
 13544                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
 13545  0016E4  0100               	movlb	0	; () banked
 13546  0016E6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13547  0016E8  D003               	goto	l515
 13548                           
 13549                           ; BSR set to: 0
 13550                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
 13551  0016EA  010F               	movlb	15	; () banked
 13552  0016EC  8F11               	bsf	17,7,b	;volatile
 13553  0016EE  D002               	goto	l5201
 13554  0016F0                     l515:
 13555                           
 13556                           ; BSR set to: 0
 13557                           ;inc\CANlib.h: 1029: else
 13558                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
 13559  0016F0  010F               	movlb	15	; () banked
 13560  0016F2  9F11               	bcf	17,7,b	;volatile
 13561  0016F4                     l5201:
 13562                           
 13563                           ; BSR set to: 15
 13564                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
 13565  0016F4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13566  0016F8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13567  0016FC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13568  001700  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13569  001704  0E16               	movlw	22
 13570  001706  D006               	goto	u6300
 13571  001708                     u6305:
 13572  001708  0100               	movlb	0	; () banked
 13573  00170A  90D8               	bcf	status,0,c
 13574  00170C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13575  00170E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13576  001710  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13577  001712  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13578  001714                     u6300:
 13579  001714  2EE8               	decfsz	wreg,f,c
 13580  001716  D7F8               	goto	u6305
 13581  001718  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13582  00171C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13583  001720  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13584  001724  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13585                           
 13586                           ; BSR set to: 0
 13587                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
 13588  001728  0100               	movlb	0	; () banked
 13589  00172A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13590  00172C  0100               	movlb	0	; () banked
 13591  00172E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13592  001730  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13593  001732  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13594  001734  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13595                           
 13596                           ; BSR set to: 0
 13597                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
 13598  001736  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 13599  00173A                     l5207:
 13600                           
 13601                           ; BSR set to: 0
 13602                           ;inc\CANlib.h: 1035: }
 13603                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 13604  00173A  0E05               	movlw	5
 13605  00173C  0100               	movlb	0	; () banked
 13606  00173E  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13607  001740  A4D8               	btfss	status,2,c
 13608  001742  0012               	return	
 13609                           
 13610                           ; BSR set to: 0
 13611  001744  0EF7               	movlw	247
 13612  001746  0100               	movlb	0	; () banked
 13613  001748  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13614  00174A  A4D8               	btfss	status,2,c
 13615  00174C  0012               	return	
 13616                           
 13617                           ; BSR set to: 0
 13618                           ;inc\CANlib.h: 1038: {
 13619                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
 13620  00174E  010F               	movlb	15	; () banked
 13621  001750  8715               	bsf	21,3,b	;volatile
 13622                           
 13623                           ; BSR set to: 15
 13624                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
 13625  001752  0100               	movlb	0	; () banked
 13626  001754  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13627  001756  0100               	movlb	0	; () banked
 13628  001758  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13629  00175A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13630  00175C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13631  00175E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13632                           
 13633                           ; BSR set to: 0
 13634                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
 13635  001760  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 13636                           
 13637                           ; BSR set to: 0
 13638                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
 13639  001764  0E00               	movlw	0
 13640  001766  0100               	movlb	0	; () banked
 13641  001768  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13642  00176A  0100               	movlb	0	; () banked
 13643  00176C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13644  00176E  0EFF               	movlw	255
 13645  001770  0100               	movlb	0	; () banked
 13646  001772  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13647  001774  0100               	movlb	0	; () banked
 13648  001776  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13649  001778  0E00               	movlw	0
 13650  00177A  0100               	movlb	0	; () banked
 13651  00177C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13652  00177E  0100               	movlb	0	; () banked
 13653  001780  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13654  001782  0E00               	movlw	0
 13655  001784  0100               	movlb	0	; () banked
 13656  001786  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13657  001788  0100               	movlb	0	; () banked
 13658  00178A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13659                           
 13660                           ; BSR set to: 0
 13661                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
 13662  00178C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13663  001790  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13664  001794  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13665  001798  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13666  00179C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13667  0017A0  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13668  0017A4  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13669  0017A8  0100               	movlb	0	; () banked
 13670  0017AA  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13671  0017AC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13672  0017B0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13673  0017B4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13674  0017B8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13675                           
 13676                           ; BSR set to: 0
 13677                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
 13678  0017BC  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 13679                           
 13680                           ; BSR set to: 0
 13681                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
 13682  0017C0  0100               	movlb	0	; () banked
 13683  0017C2  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13684  0017C4  D003               	goto	l518
 13685                           
 13686                           ; BSR set to: 0
 13687                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
 13688  0017C6  010F               	movlb	15	; () banked
 13689  0017C8  8115               	bsf	21,0,b	;volatile
 13690  0017CA  D002               	goto	l519
 13691  0017CC                     l518:
 13692                           
 13693                           ; BSR set to: 0
 13694                           ;inc\CANlib.h: 1050: else
 13695                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
 13696  0017CC  010F               	movlb	15	; () banked
 13697  0017CE  9115               	bcf	21,0,b	;volatile
 13698  0017D0                     l519:
 13699                           
 13700                           ; BSR set to: 15
 13701                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
 13702  0017D0  0100               	movlb	0	; () banked
 13703  0017D2  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13704  0017D4  D003               	goto	l520
 13705                           
 13706                           ; BSR set to: 0
 13707                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
 13708  0017D6  010F               	movlb	15	; () banked
 13709  0017D8  8315               	bsf	21,1,b	;volatile
 13710  0017DA  D002               	goto	l521
 13711  0017DC                     l520:
 13712                           
 13713                           ; BSR set to: 0
 13714                           ;inc\CANlib.h: 1055: else
 13715                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
 13716  0017DC  010F               	movlb	15	; () banked
 13717  0017DE  9315               	bcf	21,1,b	;volatile
 13718  0017E0                     l521:
 13719                           
 13720                           ; BSR set to: 15
 13721                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
 13722  0017E0  0100               	movlb	0	; () banked
 13723  0017E2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13724  0017E4  D003               	goto	l522
 13725                           
 13726                           ; BSR set to: 0
 13727                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
 13728  0017E6  010F               	movlb	15	; () banked
 13729  0017E8  8B15               	bsf	21,5,b	;volatile
 13730  0017EA  D002               	goto	l523
 13731  0017EC                     l522:
 13732                           
 13733                           ; BSR set to: 0
 13734                           ;inc\CANlib.h: 1060: else
 13735                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
 13736  0017EC  010F               	movlb	15	; () banked
 13737  0017EE  9B15               	bcf	21,5,b	;volatile
 13738  0017F0                     l523:
 13739                           
 13740                           ; BSR set to: 15
 13741                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
 13742  0017F0  0100               	movlb	0	; () banked
 13743  0017F2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13744  0017F4  D003               	goto	l524
 13745                           
 13746                           ; BSR set to: 0
 13747                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
 13748  0017F6  010F               	movlb	15	; () banked
 13749  0017F8  8D15               	bsf	21,6,b	;volatile
 13750  0017FA  D002               	goto	l525
 13751  0017FC                     l524:
 13752                           
 13753                           ; BSR set to: 0
 13754                           ;inc\CANlib.h: 1065: else
 13755                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
 13756  0017FC  010F               	movlb	15	; () banked
 13757  0017FE  9D15               	bcf	21,6,b	;volatile
 13758  001800                     l525:
 13759                           
 13760                           ; BSR set to: 15
 13761                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
 13762  001800  0100               	movlb	0	; () banked
 13763  001802  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13764  001804  D003               	goto	l526
 13765                           
 13766                           ; BSR set to: 0
 13767                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
 13768  001806  010F               	movlb	15	; () banked
 13769  001808  8F15               	bsf	21,7,b	;volatile
 13770  00180A  D002               	goto	l5235
 13771  00180C                     l526:
 13772                           
 13773                           ; BSR set to: 0
 13774                           ;inc\CANlib.h: 1070: else
 13775                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
 13776  00180C  010F               	movlb	15	; () banked
 13777  00180E  9F15               	bcf	21,7,b	;volatile
 13778  001810                     l5235:
 13779                           
 13780                           ; BSR set to: 15
 13781                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
 13782  001810  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13783  001814  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13784  001818  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13785  00181C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13786  001820  0E16               	movlw	22
 13787  001822  D006               	goto	u6380
 13788  001824                     u6385:
 13789  001824  0100               	movlb	0	; () banked
 13790  001826  90D8               	bcf	status,0,c
 13791  001828  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13792  00182A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13793  00182C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13794  00182E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13795  001830                     u6380:
 13796  001830  2EE8               	decfsz	wreg,f,c
 13797  001832  D7F8               	goto	u6385
 13798  001834  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13799  001838  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13800  00183C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13801  001840  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13802                           
 13803                           ; BSR set to: 0
 13804                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
 13805  001844  0100               	movlb	0	; () banked
 13806  001846  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13807  001848  0100               	movlb	0	; () banked
 13808  00184A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13809  00184C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13810  00184E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13811  001850  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13812                           
 13813                           ; BSR set to: 0
 13814                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
 13815  001852  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 13816  001856  0012               	return	
 13817  001858                     __end_of_CANSetFilter:
 13818                           	opt stack 0
 13819                           tblptru	equ	0xFF8
 13820                           tblptrh	equ	0xFF7
 13821                           tblptrl	equ	0xFF6
 13822                           tablat	equ	0xFF5
 13823                           prodh	equ	0xFF4
 13824                           prodl	equ	0xFF3
 13825                           intcon	equ	0xFF2
 13826                           intcon2	equ	0xFF1
 13827                           postinc0	equ	0xFEE
 13828                           wreg	equ	0xFE8
 13829                           postdec1	equ	0xFE5
 13830                           fsr1l	equ	0xFE1
 13831                           indf2	equ	0xFDF
 13832                           postinc2	equ	0xFDE
 13833                           postdec2	equ	0xFDD
 13834                           fsr2h	equ	0xFDA
 13835                           fsr2l	equ	0xFD9
 13836                           status	equ	0xFD8
 13837                           
 13838 ;; *************** function _CANOperationMode *****************
 13839 ;; Defined at:
 13840 ;;		line 206 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 13841 ;; Parameters:    Size  Location     Type
 13842 ;;  mode            1    wreg     enum E16307
 13843 ;; Auto vars:     Size  Location     Type
 13844 ;;  mode            1   23[BANK0 ] enum E16307
 13845 ;; Return value:  Size  Location     Type
 13846 ;;		None               void
 13847 ;; Registers used:
 13848 ;;		wreg, status,2, status,0
 13849 ;; Tracked objects:
 13850 ;;		On entry : 0/0
 13851 ;;		On exit  : 0/0
 13852 ;;		Unchanged: 0/0
 13853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13855 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13857 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13858 ;;Total ram usage:        1 bytes
 13859 ;; Hardware stack levels used:    1
 13860 ;; Hardware stack levels required when called:    4
 13861 ;; This function calls:
 13862 ;;		Nothing
 13863 ;; This function is called by:
 13864 ;;		_CANInitialize
 13865 ;; This function uses a non-reentrant model
 13866 ;;
 13867                           
 13868                           	psect	text33
 13869  005C9A                     __ptext33:
 13870                           	opt stack 0
 13871  005C9A                     _CANOperationMode:
 13872                           	opt stack 24
 13873                           
 13874                           ; BSR set to: 0
 13875                           ;incstack = 0
 13876                           ;CANOperationMode@mode stored from wreg
 13877  005C9A  0100               	movlb	0	; () banked
 13878  005C9C  6F77               	movwf	CANOperationMode@mode& (0+255),b
 13879                           
 13880                           ;inc\CANlib.h: 208: CANCON = mode;
 13881  005C9E  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 13882  005CA2                     l4831:
 13883  005CA2  506E               	movf	3950,w,c	;volatile
 13884  005CA4  0BE0               	andlw	224
 13885  005CA6  0100               	movlb	0	; () banked
 13886  005CA8  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 13887  005CAA  B4D8               	btfsc	status,2,c
 13888  005CAC  0012               	return	
 13889  005CAE  D7F9               	goto	l4831
 13890  005CB0                     __end_of_CANOperationMode:
 13891                           	opt stack 0
 13892                           tblptru	equ	0xFF8
 13893                           tblptrh	equ	0xFF7
 13894                           tblptrl	equ	0xFF6
 13895                           tablat	equ	0xFF5
 13896                           prodh	equ	0xFF4
 13897                           prodl	equ	0xFF3
 13898                           intcon	equ	0xFF2
 13899                           intcon2	equ	0xFF1
 13900                           postinc0	equ	0xFEE
 13901                           wreg	equ	0xFE8
 13902                           postdec1	equ	0xFE5
 13903                           fsr1l	equ	0xFE1
 13904                           indf2	equ	0xFDF
 13905                           postinc2	equ	0xFDE
 13906                           postdec2	equ	0xFDD
 13907                           fsr2h	equ	0xFDA
 13908                           fsr2l	equ	0xFD9
 13909                           status	equ	0xFD8
 13910                           
 13911 ;; *************** function _can_interpreter *****************
 13912 ;; Defined at:
 13913 ;;		line 382 in file "parcheggio.c"
 13914 ;; Parameters:    Size  Location     Type
 13915 ;;		None
 13916 ;; Auto vars:     Size  Location     Type
 13917 ;;		None
 13918 ;; Return value:  Size  Location     Type
 13919 ;;		None               void
 13920 ;; Registers used:
 13921 ;;		wreg, status,2, status,0
 13922 ;; Tracked objects:
 13923 ;;		On entry : 0/0
 13924 ;;		On exit  : 0/0
 13925 ;;		Unchanged: 0/0
 13926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13929 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13930 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13931 ;;Total ram usage:        4 bytes
 13932 ;; Hardware stack levels used:    1
 13933 ;; Hardware stack levels required when called:    4
 13934 ;; This function calls:
 13935 ;;		Nothing
 13936 ;; This function is called by:
 13937 ;;		_main
 13938 ;; This function uses a non-reentrant model
 13939 ;;
 13940                           
 13941                           	psect	text34
 13942  005A50                     __ptext34:
 13943                           	opt stack 0
 13944  005A50                     _can_interpreter:
 13945                           	opt stack 26
 13946                           
 13947                           ;parcheggio.c: 383: left_speed = data_speed_rx[1];
 13948                           
 13949                           ; BSR set to: 0
 13950                           ;incstack = 0
 13951  005A50  C109  F038         	movff	_data_speed_rx+1,_left_speed
 13952  005A54  6A39               	clrf	_left_speed+1,c
 13953                           
 13954                           ;parcheggio.c: 384: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 13955  005A56  5038               	movf	_left_speed,w,c
 13956  005A58  0100               	movlb	0	; () banked
 13957  005A5A  6F77               	movwf	??_can_interpreter& (0+255),b
 13958  005A5C  0101               	movlb	1	; () banked
 13959  005A5E  5108               	movf	_data_speed_rx& (0+255),w,b
 13960  005A60  6E38               	movwf	_left_speed,c
 13961  005A62  C077  F039         	movff	??_can_interpreter,_left_speed+1
 13962                           
 13963                           ; BSR set to: 1
 13964                           ;parcheggio.c: 385: right_speed = data_speed_rx[3];
 13965  005A66  C10B  F03C         	movff	_data_speed_rx+3,_right_speed
 13966  005A6A  6A3D               	clrf	_right_speed+1,c
 13967                           
 13968                           ;parcheggio.c: 386: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 13969  005A6C  503C               	movf	_right_speed,w,c
 13970  005A6E  0100               	movlb	0	; () banked
 13971  005A70  6F77               	movwf	??_can_interpreter& (0+255),b
 13972  005A72  0101               	movlb	1	; () banked
 13973  005A74  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 13974  005A76  6E3C               	movwf	_right_speed,c
 13975  005A78  C077  F03D         	movff	??_can_interpreter,_right_speed+1
 13976                           
 13977                           ; BSR set to: 1
 13978                           ;parcheggio.c: 387: actual_speed = (right_speed + left_speed) / 2;
 13979  005A7C  5038               	movf	_left_speed,w,c
 13980  005A7E  243C               	addwf	_right_speed,w,c
 13981  005A80  0100               	movlb	0	; () banked
 13982  005A82  6F77               	movwf	??_can_interpreter& (0+255),b
 13983  005A84  5039               	movf	_left_speed+1,w,c
 13984  005A86  203D               	addwfc	_right_speed+1,w,c
 13985  005A88  0100               	movlb	0	; () banked
 13986  005A8A  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 13987  005A8C  90D8               	bcf	status,0,c
 13988  005A8E  0100               	movlb	0	; () banked
 13989  005A90  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 13990  005A92  0100               	movlb	0	; () banked
 13991  005A94  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 13992  005A96  0100               	movlb	0	; () banked
 13993  005A98  3177               	rrcf	??_can_interpreter& (0+255),w,b
 13994  005A9A  0100               	movlb	0	; () banked
 13995  005A9C  6FDF               	movwf	_actual_speed& (0+255),b
 13996  005A9E  C079  F0E0         	movff	??_can_interpreter+2,_actual_speed+1
 13997                           
 13998                           ; BSR set to: 0
 13999  005AA2  0012               	return		;funcret
 14000  005AA4                     __end_of_can_interpreter:
 14001                           	opt stack 0
 14002                           tblptru	equ	0xFF8
 14003                           tblptrh	equ	0xFF7
 14004                           tblptrl	equ	0xFF6
 14005                           tablat	equ	0xFF5
 14006                           prodh	equ	0xFF4
 14007                           prodl	equ	0xFF3
 14008                           intcon	equ	0xFF2
 14009                           intcon2	equ	0xFF1
 14010                           postinc0	equ	0xFEE
 14011                           wreg	equ	0xFE8
 14012                           postdec1	equ	0xFE5
 14013                           fsr1l	equ	0xFE1
 14014                           indf2	equ	0xFDF
 14015                           postinc2	equ	0xFDE
 14016                           postdec2	equ	0xFDD
 14017                           fsr2h	equ	0xFDA
 14018                           fsr2l	equ	0xFD9
 14019                           status	equ	0xFD8
 14020                           
 14021 ;; *************** function _ISR_Bassa *****************
 14022 ;; Defined at:
 14023 ;;		line 109 in file "parcheggio.c"
 14024 ;; Parameters:    Size  Location     Type
 14025 ;;		None
 14026 ;; Auto vars:     Size  Location     Type
 14027 ;;  i               1   34[COMRAM] unsigned char 
 14028 ;;  gigi            1   33[COMRAM] unsigned char 
 14029 ;; Return value:  Size  Location     Type
 14030 ;;		None               void
 14031 ;; Registers used:
 14032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14033 ;; Tracked objects:
 14034 ;;		On entry : 0/0
 14035 ;;		On exit  : 0/0
 14036 ;;		Unchanged: 0/0
 14037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14039 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14040 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14041 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14042 ;;Total ram usage:       23 bytes
 14043 ;; Hardware stack levels used:    1
 14044 ;; Hardware stack levels required when called:    3
 14045 ;; This function calls:
 14046 ;;		_CANreceiveMessage
 14047 ;; This function is called by:
 14048 ;;		Interrupt level 1
 14049 ;; This function uses a non-reentrant model
 14050 ;;
 14051                           
 14052                           	psect	intcodelo
 14053  000018                     __pintcodelo:
 14054                           	opt stack 0
 14055  000018                     _ISR_Bassa:
 14056                           	opt stack 21
 14057                           
 14058                           ; BSR set to: 0
 14059                           ;incstack = 0
 14060  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14061  00001A  CFD8 F011          	movff	status,??_ISR_Bassa+4
 14062  00001E  CFE8 F012          	movff	wreg,??_ISR_Bassa+5
 14063  000022  CFE0 F013          	movff	bsr,??_ISR_Bassa+6
 14064  000026  CFFA F014          	movff	pclath,??_ISR_Bassa+7
 14065  00002A  CFFB F015          	movff	pclatu,??_ISR_Bassa+8
 14066  00002E  CFE9 F016          	movff	fsr0l,??_ISR_Bassa+9
 14067  000032  CFEA F017          	movff	fsr0h,??_ISR_Bassa+10
 14068  000036  CFE1 F018          	movff	fsr1l,??_ISR_Bassa+11
 14069  00003A  CFE2 F019          	movff	fsr1h,??_ISR_Bassa+12
 14070  00003E  CFD9 F01A          	movff	fsr2l,??_ISR_Bassa+13
 14071  000042  CFDA F01B          	movff	fsr2h,??_ISR_Bassa+14
 14072  000046  CFF3 F01C          	movff	prodl,??_ISR_Bassa+15
 14073  00004A  CFF4 F01D          	movff	prodh,??_ISR_Bassa+16
 14074  00004E  CFF6 F01E          	movff	tblptrl,??_ISR_Bassa+17
 14075  000052  CFF7 F01F          	movff	tblptrh,??_ISR_Bassa+18
 14076  000056  CFF8 F020          	movff	tblptru,??_ISR_Bassa+19
 14077  00005A  CFF5 F021          	movff	tablat,??_ISR_Bassa+20
 14078                           
 14079                           ;parcheggio.c: 111: if (INTCONbits.TMR0IF == 1) {
 14080  00005E  A4F2               	btfss	intcon,2,c	;volatile
 14081  000060  D036               	goto	i1l5877
 14082                           
 14083                           ;parcheggio.c: 112: INTCONbits.INT0IE = 0;
 14084  000062  98F2               	bcf	intcon,4,c	;volatile
 14085                           
 14086                           ;parcheggio.c: 113: T0CONbits.TMR0ON = 0;
 14087  000064  9ED5               	bcf	4053,7,c	;volatile
 14088                           
 14089                           ;parcheggio.c: 114: TMR0H = 0x34;
 14090  000066  0E34               	movlw	52
 14091  000068  6ED7               	movwf	4055,c	;volatile
 14092                           
 14093                           ;parcheggio.c: 115: TMR0L = 0xE0;
 14094  00006A  0EE0               	movlw	224
 14095  00006C  6ED6               	movwf	4054,c	;volatile
 14096                           
 14097                           ;parcheggio.c: 116: T0CONbits.TMR0ON = 1;
 14098  00006E  8ED5               	bsf	4053,7,c	;volatile
 14099                           
 14100                           ;parcheggio.c: 117: if (distance_error == 1) {
 14101  000070  A644               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14102  000072  D00C               	goto	i1l5847
 14103                           
 14104                           ;parcheggio.c: 118: sensor_distance[MUX_index] = 5000;
 14105  000074  5040               	movf	_MUX_index,w,c	;volatile
 14106  000076  0D02               	mullw	2
 14107  000078  0E24               	movlw	low _sensor_distance
 14108  00007A  24F3               	addwf	prodl,w,c
 14109  00007C  6ED9               	movwf	fsr2l,c
 14110  00007E  0E00               	movlw	high _sensor_distance
 14111  000080  20F4               	addwfc	prodh,w,c
 14112  000082  6EDA               	movwf	fsr2h,c
 14113  000084  0E88               	movlw	136
 14114  000086  6EDE               	movwf	postinc2,c
 14115  000088  0E13               	movlw	19
 14116  00008A  6EDD               	movwf	postdec2,c
 14117  00008C                     i1l5847:
 14118                           
 14119                           ;parcheggio.c: 119: }
 14120                           ;parcheggio.c: 120: MUX_index++;
 14121  00008C  2A40               	incf	_MUX_index,f,c	;volatile
 14122                           
 14123                           ;parcheggio.c: 121: if (MUX_index == 8) {
 14124  00008E  0E08               	movlw	8
 14125  000090  1840               	xorwf	_MUX_index,w,c	;volatile
 14126  000092  A4D8               	btfss	status,2,c
 14127  000094  D002               	goto	i1l695
 14128                           
 14129                           ;parcheggio.c: 122: MUX_index = 0;
 14130  000096  0E00               	movlw	0
 14131  000098  6E40               	movwf	_MUX_index,c	;volatile
 14132  00009A                     i1l695:
 14133                           
 14134                           ;parcheggio.c: 123: }
 14135                           ;parcheggio.c: 125: unsigned char gigi = 0;
 14136  00009A  0E00               	movlw	0
 14137  00009C  6E22               	movwf	ISR_Bassa@gigi,c
 14138                           
 14139                           ;parcheggio.c: 126: gigi = MUX_select[MUX_index];
 14140  00009E  5040               	movf	_MUX_index,w,c	;volatile
 14141  0000A0  0D01               	mullw	1
 14142  0000A2  0E00               	movlw	low _MUX_select
 14143  0000A4  24F3               	addwf	prodl,w,c
 14144  0000A6  6ED9               	movwf	fsr2l,c
 14145  0000A8  0E01               	movlw	high _MUX_select
 14146  0000AA  20F4               	addwfc	prodh,w,c
 14147  0000AC  6EDA               	movwf	fsr2h,c
 14148  0000AE  50DF               	movf	indf2,w,c
 14149  0000B0  6E22               	movwf	ISR_Bassa@gigi,c
 14150                           
 14151                           ;parcheggio.c: 127: PORTA = gigi;
 14152  0000B2  C022  FF80         	movff	ISR_Bassa@gigi,3968	;volatile
 14153                           
 14154                           ;parcheggio.c: 128: TRISBbits.RB0 = 0;
 14155  0000B6  9093               	bcf	3987,0,c	;volatile
 14156                           
 14157                           ;parcheggio.c: 129: LATBbits.LATB0 = 1;
 14158  0000B8  808A               	bsf	3978,0,c	;volatile
 14159                           
 14160                           ;parcheggio.c: 130: _delay((unsigned long)((15)*(16000000/4000000.0)));
 14161  0000BA  0E14               	movlw	20
 14162  0000BC                     i1u901_27:
 14163  0000BC  2EE8               	decfsz	wreg,f,c
 14164  0000BE  D7FE               	goto	i1u901_27
 14165                           
 14166                           ;parcheggio.c: 131: distance_error = 1;
 14167  0000C0  8644               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14168                           
 14169                           ;parcheggio.c: 132: LATBbits.LATB0 = 0;
 14170  0000C2  908A               	bcf	3978,0,c	;volatile
 14171                           
 14172                           ;parcheggio.c: 133: TRISBbits.RB0 = 1;
 14173  0000C4  8093               	bsf	3987,0,c	;volatile
 14174                           
 14175                           ;parcheggio.c: 134: INTCONbits.INT0IF = 0;
 14176  0000C6  92F2               	bcf	intcon,1,c	;volatile
 14177                           
 14178                           ;parcheggio.c: 135: INTCONbits.INT0IE = 1;
 14179  0000C8  88F2               	bsf	intcon,4,c	;volatile
 14180                           
 14181                           ;parcheggio.c: 136: INTCONbits.TMR0IF = 0;
 14182  0000CA  94F2               	bcf	intcon,2,c	;volatile
 14183                           
 14184                           ;parcheggio.c: 137: INTCON2bits.INTEDG0 = 1;
 14185  0000CC  8CF1               	bsf	intcon2,6,c	;volatile
 14186  0000CE                     i1l5877:
 14187                           
 14188                           ;parcheggio.c: 138: }
 14189                           ;parcheggio.c: 140: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 14190  0000CE  A0A4               	btfss	4004,0,c	;volatile
 14191  0000D0  B2A4               	btfsc	4004,1,c	;volatile
 14192  0000D2  D001               	goto	i1l5881
 14193  0000D4  D09D               	goto	i1l709
 14194  0000D6                     i1l5881:
 14195                           
 14196                           ;parcheggio.c: 141: CANreceiveMessage(&msg);
 14197  0000D6  0E44               	movlw	low _msg
 14198  0000D8  6E01               	movwf	CANreceiveMessage@msg,c
 14199  0000DA  0E01               	movlw	high _msg
 14200  0000DC  6E02               	movwf	CANreceiveMessage@msg+1,c
 14201  0000DE  ECF2  F00F         	call	_CANreceiveMessage	;wreg free
 14202                           
 14203                           ;parcheggio.c: 142: if (msg.identifier == 0b00000001101) {
 14204  0000E2  0E0D               	movlw	13
 14205  0000E4  0101               	movlb	1	; () banked
 14206  0000E6  1944               	xorwf	_msg& (0+255),w,b
 14207  0000E8  0101               	movlb	1	; () banked
 14208  0000EA  1145               	iorwf	(_msg+1)& (0+255),w,b
 14209  0000EC  0101               	movlb	1	; () banked
 14210  0000EE  1146               	iorwf	(_msg+2)& (0+255),w,b
 14211  0000F0  0101               	movlb	1	; () banked
 14212  0000F2  1147               	iorwf	(_msg+3)& (0+255),w,b
 14213  0000F4  B4D8               	btfsc	status,2,c
 14214                           
 14215                           ; BSR set to: 1
 14216                           ;parcheggio.c: 143: asd = 0;
 14217  0000F6  9244               	bcf	_asd/(0+8),_asd& (0+7),c	;volatile
 14218                           
 14219                           ; BSR set to: 1
 14220                           ;parcheggio.c: 144: }
 14221                           ;parcheggio.c: 145: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 14222                           
 14223                           ; BSR set to: 1
 14224  0000F8  0E07               	movlw	7
 14225  0000FA  0101               	movlb	1	; () banked
 14226  0000FC  1944               	xorwf	_msg& (0+255),w,b
 14227  0000FE  0101               	movlb	1	; () banked
 14228  000100  1145               	iorwf	(_msg+1)& (0+255),w,b
 14229  000102  0101               	movlb	1	; () banked
 14230  000104  1146               	iorwf	(_msg+2)& (0+255),w,b
 14231  000106  0101               	movlb	1	; () banked
 14232  000108  1147               	iorwf	(_msg+3)& (0+255),w,b
 14233  00010A  A4D8               	btfss	status,2,c
 14234  00010C  D02D               	goto	i1l5903
 14235                           
 14236                           ; BSR set to: 1
 14237  00010E  0101               	movlb	1	; () banked
 14238  000110  0552               	decf	(_msg+14)& (0+255),w,b
 14239  000112  B4D8               	btfsc	status,2,c
 14240  000114  D029               	goto	i1l5903
 14241                           
 14242                           ; BSR set to: 1
 14243                           ;parcheggio.c: 146: distance_average = 0;
 14244  000116  0E00               	movlw	0
 14245  000118  0100               	movlb	0	; () banked
 14246  00011A  6FE4               	movwf	(_distance_average+1)& (0+255),b	;volatile
 14247  00011C  0E00               	movlw	0
 14248  00011E  6FE3               	movwf	_distance_average& (0+255),b	;volatile
 14249                           
 14250                           ; BSR set to: 0
 14251                           ;parcheggio.c: 147: distance_dx = msg.data[1];
 14252  000120  C149  F034         	movff	_msg+5,_distance_dx	;volatile
 14253  000124  6A35               	clrf	_distance_dx+1,c	;volatile
 14254                           
 14255                           ;parcheggio.c: 148: distance_dx = ((distance_dx << 8) | msg.data[0]);
 14256  000126  5034               	movf	_distance_dx,w,c	;volatile
 14257  000128  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14258  00012A  0101               	movlb	1	; () banked
 14259  00012C  5148               	movf	(_msg+4)& (0+255),w,b
 14260  00012E  6E34               	movwf	_distance_dx,c	;volatile
 14261  000130  C00D  F035         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 14262                           
 14263                           ; BSR set to: 1
 14264                           ;parcheggio.c: 149: distance_sx = msg.data[3];
 14265  000134  C14B  F036         	movff	_msg+7,_distance_sx	;volatile
 14266  000138  6A37               	clrf	_distance_sx+1,c	;volatile
 14267                           
 14268                           ;parcheggio.c: 150: distance_sx = ((distance_sx << 8) | msg.data[2]);
 14269  00013A  5036               	movf	_distance_sx,w,c	;volatile
 14270  00013C  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14271  00013E  0101               	movlb	1	; () banked
 14272  000140  514A               	movf	(_msg+6)& (0+255),w,b
 14273  000142  6E36               	movwf	_distance_sx,c	;volatile
 14274  000144  C00D  F037         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 14275                           
 14276                           ; BSR set to: 1
 14277                           ;parcheggio.c: 151: distance_average = (distance_sx + distance_dx) / 2;
 14278  000148  5034               	movf	_distance_dx,w,c	;volatile
 14279  00014A  2436               	addwf	_distance_sx,w,c	;volatile
 14280  00014C  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14281  00014E  5035               	movf	_distance_dx+1,w,c	;volatile
 14282  000150  2037               	addwfc	_distance_sx+1,w,c	;volatile
 14283  000152  6E0E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14284  000154  90D8               	bcf	status,0,c
 14285  000156  300E               	rrcf	??_ISR_Bassa+1,w,c
 14286  000158  6E0F               	movwf	(??_ISR_Bassa+2)& (0+255),c
 14287  00015A  300D               	rrcf	??_ISR_Bassa,w,c
 14288  00015C  0100               	movlb	0	; () banked
 14289  00015E  6FE3               	movwf	_distance_average& (0+255),b	;volatile
 14290  000160  C00F  F0E4         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 14291                           
 14292                           ; BSR set to: 0
 14293                           ;parcheggio.c: 152: distance_received = 1;
 14294  000164  8844               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 14295                           
 14296                           ; BSR set to: 0
 14297                           ;parcheggio.c: 153: distance_received1 = 1;
 14298  000166  8A44               	bsf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
 14299  000168                     i1l5903:
 14300                           
 14301                           ;parcheggio.c: 154: }
 14302                           ;parcheggio.c: 155: if (msg.identifier == 0b00000001010) {
 14303  000168  0E0A               	movlw	10
 14304  00016A  0101               	movlb	1	; () banked
 14305  00016C  1944               	xorwf	_msg& (0+255),w,b
 14306  00016E  0101               	movlb	1	; () banked
 14307  000170  1145               	iorwf	(_msg+1)& (0+255),w,b
 14308  000172  0101               	movlb	1	; () banked
 14309  000174  1146               	iorwf	(_msg+2)& (0+255),w,b
 14310  000176  0101               	movlb	1	; () banked
 14311  000178  1147               	iorwf	(_msg+3)& (0+255),w,b
 14312  00017A  A4D8               	btfss	status,2,c
 14313  00017C  D00C               	goto	i1l5909
 14314                           
 14315                           ; BSR set to: 1
 14316                           ;parcheggio.c: 156: if (msg.data[0] == 1) {
 14317  00017E  0101               	movlb	1	; () banked
 14318  000180  0548               	decf	(_msg+4)& (0+255),w,b
 14319  000182  A4D8               	btfss	status,2,c
 14320  000184  D003               	goto	i1l702
 14321                           
 14322                           ; BSR set to: 1
 14323                           ;parcheggio.c: 157: activation = 1;
 14324  000186  8044               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 14325                           
 14326                           ;parcheggio.c: 158: PORTBbits.RB6 = 1;
 14327  000188  8C81               	bsf	3969,6,c	;volatile
 14328                           
 14329                           ;parcheggio.c: 159: } else {
 14330  00018A  D005               	goto	i1l5909
 14331  00018C                     i1l702:
 14332                           
 14333                           ; BSR set to: 1
 14334                           ;parcheggio.c: 160: activation = 0;
 14335  00018C  9044               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 14336                           
 14337                           ;parcheggio.c: 161: PORTBbits.RB4 = 0;
 14338  00018E  9881               	bcf	3969,4,c	;volatile
 14339                           
 14340                           ;parcheggio.c: 162: PORTBbits.RB5 = 0;
 14341  000190  9A81               	bcf	3969,5,c	;volatile
 14342                           
 14343                           ;parcheggio.c: 163: PORTBbits.RB6 = 0;
 14344  000192  9C81               	bcf	3969,6,c	;volatile
 14345                           
 14346                           ;parcheggio.c: 164: request_sent = 0;
 14347  000194  9045               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
 14348  000196                     i1l5909:
 14349                           
 14350                           ; BSR set to: 1
 14351                           ;parcheggio.c: 165: }
 14352                           ;parcheggio.c: 166: }
 14353                           ;parcheggio.c: 167: if (msg.identifier == 0b00000001100) {
 14354  000196  0E0C               	movlw	12
 14355  000198  0101               	movlb	1	; () banked
 14356  00019A  1944               	xorwf	_msg& (0+255),w,b
 14357  00019C  0101               	movlb	1	; () banked
 14358  00019E  1145               	iorwf	(_msg+1)& (0+255),w,b
 14359  0001A0  0101               	movlb	1	; () banked
 14360  0001A2  1146               	iorwf	(_msg+2)& (0+255),w,b
 14361  0001A4  0101               	movlb	1	; () banked
 14362  0001A6  1147               	iorwf	(_msg+3)& (0+255),w,b
 14363  0001A8  B4D8               	btfsc	status,2,c
 14364                           
 14365                           ; BSR set to: 1
 14366                           ;parcheggio.c: 168: start_operation = 1;
 14367  0001AA  8445               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14368                           
 14369                           ; BSR set to: 1
 14370                           ;parcheggio.c: 169: }
 14371                           ;parcheggio.c: 170: if (msg.identifier == 0b00000000110) {
 14372                           
 14373                           ; BSR set to: 1
 14374  0001AC  0E06               	movlw	6
 14375  0001AE  0101               	movlb	1	; () banked
 14376  0001B0  1944               	xorwf	_msg& (0+255),w,b
 14377  0001B2  0101               	movlb	1	; () banked
 14378  0001B4  1145               	iorwf	(_msg+1)& (0+255),w,b
 14379  0001B6  0101               	movlb	1	; () banked
 14380  0001B8  1146               	iorwf	(_msg+2)& (0+255),w,b
 14381  0001BA  0101               	movlb	1	; () banked
 14382  0001BC  1147               	iorwf	(_msg+3)& (0+255),w,b
 14383  0001BE  A4D8               	btfss	status,2,c
 14384  0001C0  D025               	goto	i1l705
 14385                           
 14386                           ; BSR set to: 1
 14387                           ;parcheggio.c: 171: for (unsigned char i = 0; i < 8; i++) {
 14388  0001C2  0E00               	movlw	0
 14389  0001C4  6E23               	movwf	ISR_Bassa@i,c
 14390  0001C6                     i1l5917:
 14391                           
 14392                           ; BSR set to: 1
 14393  0001C6  0E07               	movlw	7
 14394  0001C8  6423               	cpfsgt	ISR_Bassa@i,c
 14395  0001CA  D001               	goto	i1l5921
 14396  0001CC  D014               	goto	i1l5927
 14397  0001CE                     i1l5921:
 14398                           
 14399                           ;parcheggio.c: 172: data_speed_rx[i] = msg.data[i];
 14400  0001CE  5023               	movf	ISR_Bassa@i,w,c
 14401  0001D0  0D01               	mullw	1
 14402  0001D2  0E48               	movlw	low (_msg+4)
 14403  0001D4  24F3               	addwf	prodl,w,c
 14404  0001D6  6ED9               	movwf	fsr2l,c
 14405  0001D8  0E01               	movlw	high (_msg+4)
 14406  0001DA  20F4               	addwfc	prodh,w,c
 14407  0001DC  6EDA               	movwf	fsr2h,c
 14408  0001DE  5023               	movf	ISR_Bassa@i,w,c
 14409  0001E0  0D01               	mullw	1
 14410  0001E2  0E08               	movlw	low _data_speed_rx
 14411  0001E4  24F3               	addwf	prodl,w,c
 14412  0001E6  6EE1               	movwf	fsr1l,c
 14413  0001E8  0E01               	movlw	high _data_speed_rx
 14414  0001EA  20F4               	addwfc	prodh,w,c
 14415  0001EC  6EE2               	movwf	fsr1h,c
 14416  0001EE  CFDF FFE7          	movff	indf2,indf1
 14417  0001F2  2A23               	incf	ISR_Bassa@i,f,c
 14418  0001F4  D7E8               	goto	i1l5917
 14419  0001F6                     i1l5927:
 14420                           
 14421                           ;parcheggio.c: 173: }
 14422                           ;parcheggio.c: 174: if (msg.identifier == 0b00000001101) {
 14423  0001F6  0E0D               	movlw	13
 14424  0001F8  0101               	movlb	1	; () banked
 14425  0001FA  1944               	xorwf	_msg& (0+255),w,b
 14426  0001FC  0101               	movlb	1	; () banked
 14427  0001FE  1145               	iorwf	(_msg+1)& (0+255),w,b
 14428  000200  0101               	movlb	1	; () banked
 14429  000202  1146               	iorwf	(_msg+2)& (0+255),w,b
 14430  000204  0101               	movlb	1	; () banked
 14431  000206  1147               	iorwf	(_msg+3)& (0+255),w,b
 14432  000208  B4D8               	btfsc	status,2,c
 14433                           
 14434                           ; BSR set to: 1
 14435                           ;parcheggio.c: 175: distance_wait = 0;
 14436  00020A  9C44               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 14437  00020C                     i1l705:
 14438                           
 14439                           ; BSR set to: 1
 14440                           ;parcheggio.c: 176: }
 14441                           ;parcheggio.c: 178: }
 14442                           ;parcheggio.c: 180: PIR3bits.RXB0IF = 0;
 14443  00020C  90A4               	bcf	4004,0,c	;volatile
 14444                           
 14445                           ;parcheggio.c: 181: PIR3bits.RXB1IF = 0;
 14446  00020E  92A4               	bcf	4004,1,c	;volatile
 14447  000210                     i1l709:
 14448  000210  C021  FFF5         	movff	??_ISR_Bassa+20,tablat
 14449  000214  C020  FFF8         	movff	??_ISR_Bassa+19,tblptru
 14450  000218  C01F  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 14451  00021C  C01E  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 14452  000220  C01D  FFF4         	movff	??_ISR_Bassa+16,prodh
 14453  000224  C01C  FFF3         	movff	??_ISR_Bassa+15,prodl
 14454  000228  C01B  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 14455  00022C  C01A  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 14456  000230  C019  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 14457  000234  C018  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 14458  000238  C017  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 14459  00023C  C016  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 14460  000240  C015  FFFB         	movff	??_ISR_Bassa+8,pclatu
 14461  000244  C014  FFFA         	movff	??_ISR_Bassa+7,pclath
 14462  000248  C013  FFE0         	movff	??_ISR_Bassa+6,bsr
 14463  00024C  C012  FFE8         	movff	??_ISR_Bassa+5,wreg
 14464  000250  C011  FFD8         	movff	??_ISR_Bassa+4,status
 14465  000254  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 14466  000256  0010               	retfie	
 14467  000258                     __end_of_ISR_Bassa:
 14468                           	opt stack 0
 14469                           pclatu	equ	0xFFB
 14470                           pclath	equ	0xFFA
 14471                           tblptru	equ	0xFF8
 14472                           tblptrh	equ	0xFF7
 14473                           tblptrl	equ	0xFF6
 14474                           tablat	equ	0xFF5
 14475                           prodh	equ	0xFF4
 14476                           prodl	equ	0xFF3
 14477                           intcon	equ	0xFF2
 14478                           intcon2	equ	0xFF1
 14479                           postinc0	equ	0xFEE
 14480                           fsr0h	equ	0xFEA
 14481                           fsr0l	equ	0xFE9
 14482                           wreg	equ	0xFE8
 14483                           indf1	equ	0xFE7
 14484                           postdec1	equ	0xFE5
 14485                           fsr1h	equ	0xFE2
 14486                           fsr1l	equ	0xFE1
 14487                           bsr	equ	0xFE0
 14488                           indf2	equ	0xFDF
 14489                           postinc2	equ	0xFDE
 14490                           postdec2	equ	0xFDD
 14491                           fsr2h	equ	0xFDA
 14492                           fsr2l	equ	0xFD9
 14493                           status	equ	0xFD8
 14494                           
 14495 ;; *************** function _CANreceiveMessage *****************
 14496 ;; Defined at:
 14497 ;;		line 528 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 14498 ;; Parameters:    Size  Location     Type
 14499 ;;  msg             2    0[COMRAM] PTR struct .
 14500 ;;		 -> msg(15), 
 14501 ;; Auto vars:     Size  Location     Type
 14502 ;;  tamp            1   11[COMRAM] unsigned char 
 14503 ;;  error           1   10[COMRAM] unsigned char 
 14504 ;; Return value:  Size  Location     Type
 14505 ;;                  1    wreg      unsigned char 
 14506 ;; Registers used:
 14507 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14508 ;; Tracked objects:
 14509 ;;		On entry : 0/0
 14510 ;;		On exit  : 0/0
 14511 ;;		Unchanged: 0/0
 14512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14514 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14515 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14516 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14517 ;;Total ram usage:       12 bytes
 14518 ;; Hardware stack levels used:    1
 14519 ;; Hardware stack levels required when called:    2
 14520 ;; This function calls:
 14521 ;;		Nothing
 14522 ;; This function is called by:
 14523 ;;		_ISR_Bassa
 14524 ;; This function uses a non-reentrant model
 14525 ;;
 14526                           
 14527                           	psect	text36
 14528  001FE4                     __ptext36:
 14529                           	opt stack 0
 14530  001FE4                     _CANreceiveMessage:
 14531                           	opt stack 21
 14532                           
 14533                           ;inc\CANlib.h: 530: BYTE tamp;
 14534                           ;inc\CANlib.h: 531: BYTE error = 0;
 14535                           
 14536                           ;incstack = 0
 14537  001FE4  0E00               	movlw	0
 14538  001FE6  6E0B               	movwf	CANreceiveMessage@error,c
 14539                           
 14540                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 14541  001FE8  BE74               	btfsc	3956,7,c	;volatile
 14542                           
 14543                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 14544  001FEA  800B               	bsf	CANreceiveMessage@error,0,c
 14545                           
 14546                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 14547  001FEC  BC74               	btfsc	3956,6,c	;volatile
 14548                           
 14549                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 14550  001FEE  820B               	bsf	CANreceiveMessage@error,1,c
 14551                           
 14552                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 14553  001FF0  010F               	movlb	15	; () banked
 14554  001FF2  AF50               	btfss	80,7,b	;volatile
 14555  001FF4  D143               	goto	i1l410
 14556                           
 14557                           ; BSR set to: 15
 14558                           ;inc\CANlib.h: 541: {
 14559                           ;inc\CANlib.h: 542: msg->identifier = 0;
 14560  001FF6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14561  001FFA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14562  001FFE  6ADE               	clrf	postinc2,c
 14563  002000  6ADE               	clrf	postinc2,c
 14564  002002  6ADE               	clrf	postinc2,c
 14565  002004  6ADD               	clrf	postdec2,c
 14566                           
 14567                           ; BSR set to: 15
 14568                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 14569  002006  EE20 F004          	lfsr	2,4
 14570  00200A  5001               	movf	CANreceiveMessage@msg,w,c
 14571  00200C  26D9               	addwf	fsr2l,f,c
 14572  00200E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14573  002010  22DA               	addwfc	fsr2h,f,c
 14574  002012  CF56 FFDF          	movff	3926,indf2	;volatile
 14575                           
 14576                           ; BSR set to: 15
 14577                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 14578  002016  EE20 F005          	lfsr	2,5
 14579  00201A  5001               	movf	CANreceiveMessage@msg,w,c
 14580  00201C  26D9               	addwf	fsr2l,f,c
 14581  00201E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14582  002020  22DA               	addwfc	fsr2h,f,c
 14583  002022  CF57 FFDF          	movff	3927,indf2	;volatile
 14584                           
 14585                           ; BSR set to: 15
 14586                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 14587  002026  EE20 F006          	lfsr	2,6
 14588  00202A  5001               	movf	CANreceiveMessage@msg,w,c
 14589  00202C  26D9               	addwf	fsr2l,f,c
 14590  00202E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14591  002030  22DA               	addwfc	fsr2h,f,c
 14592  002032  CF58 FFDF          	movff	3928,indf2	;volatile
 14593                           
 14594                           ; BSR set to: 15
 14595                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 14596  002036  EE20 F007          	lfsr	2,7
 14597  00203A  5001               	movf	CANreceiveMessage@msg,w,c
 14598  00203C  26D9               	addwf	fsr2l,f,c
 14599  00203E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14600  002040  22DA               	addwfc	fsr2h,f,c
 14601  002042  CF59 FFDF          	movff	3929,indf2	;volatile
 14602                           
 14603                           ; BSR set to: 15
 14604                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 14605  002046  EE20 F008          	lfsr	2,8
 14606  00204A  5001               	movf	CANreceiveMessage@msg,w,c
 14607  00204C  26D9               	addwf	fsr2l,f,c
 14608  00204E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14609  002050  22DA               	addwfc	fsr2h,f,c
 14610  002052  CF5A FFDF          	movff	3930,indf2	;volatile
 14611                           
 14612                           ; BSR set to: 15
 14613                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 14614  002056  EE20 F009          	lfsr	2,9
 14615  00205A  5001               	movf	CANreceiveMessage@msg,w,c
 14616  00205C  26D9               	addwf	fsr2l,f,c
 14617  00205E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14618  002060  22DA               	addwfc	fsr2h,f,c
 14619  002062  CF5B FFDF          	movff	3931,indf2	;volatile
 14620                           
 14621                           ; BSR set to: 15
 14622                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 14623  002066  EE20 F00A          	lfsr	2,10
 14624  00206A  5001               	movf	CANreceiveMessage@msg,w,c
 14625  00206C  26D9               	addwf	fsr2l,f,c
 14626  00206E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14627  002070  22DA               	addwfc	fsr2h,f,c
 14628  002072  CF5C FFDF          	movff	3932,indf2	;volatile
 14629                           
 14630                           ; BSR set to: 15
 14631                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 14632  002076  EE20 F00B          	lfsr	2,11
 14633  00207A  5001               	movf	CANreceiveMessage@msg,w,c
 14634  00207C  26D9               	addwf	fsr2l,f,c
 14635  00207E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14636  002080  22DA               	addwfc	fsr2h,f,c
 14637  002082  CF5D FFDF          	movff	3933,indf2	;volatile
 14638                           
 14639                           ; BSR set to: 15
 14640                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 14641  002086  EE20 F00E          	lfsr	2,14
 14642  00208A  5001               	movf	CANreceiveMessage@msg,w,c
 14643  00208C  26D9               	addwf	fsr2l,f,c
 14644  00208E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14645  002090  22DA               	addwfc	fsr2h,f,c
 14646  002092  010F               	movlb	15	; () banked
 14647  002094  AD55               	btfss	85,6,b	;volatile
 14648  002096  D002               	goto	i1u667_20
 14649  002098  0E01               	movlw	1
 14650  00209A  D001               	goto	i1u667_26
 14651  00209C                     i1u667_20:
 14652  00209C  0E00               	movlw	0
 14653  00209E                     i1u667_26:
 14654  00209E  6EDF               	movwf	indf2,c
 14655                           
 14656                           ; BSR set to: 15
 14657                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 14658  0020A0  EE20 F00D          	lfsr	2,13
 14659  0020A4  5001               	movf	CANreceiveMessage@msg,w,c
 14660  0020A6  26D9               	addwf	fsr2l,f,c
 14661  0020A8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14662  0020AA  22DA               	addwfc	fsr2h,f,c
 14663  0020AC  010F               	movlb	15	; () banked
 14664  0020AE  5155               	movf	85,w,b	;volatile
 14665  0020B0  0B0F               	andlw	15
 14666  0020B2  6EDF               	movwf	indf2,c
 14667                           
 14668                           ; BSR set to: 15
 14669                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 14670  0020B4  EE20 F00C          	lfsr	2,12
 14671  0020B8  5001               	movf	CANreceiveMessage@msg,w,c
 14672  0020BA  26D9               	addwf	fsr2l,f,c
 14673  0020BC  5002               	movf	CANreceiveMessage@msg+1,w,c
 14674  0020BE  22DA               	addwfc	fsr2h,f,c
 14675  0020C0  010F               	movlb	15	; () banked
 14676  0020C2  A752               	btfss	82,3,b	;volatile
 14677  0020C4  D002               	goto	i1u668_20
 14678  0020C6  0E01               	movlw	1
 14679  0020C8  D001               	goto	i1u668_26
 14680  0020CA                     i1u668_20:
 14681  0020CA  0E00               	movlw	0
 14682  0020CC                     i1u668_26:
 14683  0020CC  6EDF               	movwf	indf2,c
 14684                           
 14685                           ; BSR set to: 15
 14686                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 14687  0020CE  010F               	movlb	15	; () banked
 14688  0020D0  B752               	btfsc	82,3,b	;volatile
 14689  0020D2  D044               	goto	i1l5515
 14690                           
 14691                           ; BSR set to: 15
 14692                           ;inc\CANlib.h: 559: {
 14693                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 14694  0020D4  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 14695  0020D8  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14696  0020DA  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14697  0020DC  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14698  0020DE  0E03               	movlw	3
 14699  0020E0                     i1u670_25:
 14700  0020E0  90D8               	bcf	status,0,c
 14701  0020E2  3603               	rlcf	??_CANreceiveMessage,f,c
 14702  0020E4  3604               	rlcf	??_CANreceiveMessage+1,f,c
 14703  0020E6  3605               	rlcf	??_CANreceiveMessage+2,f,c
 14704  0020E8  3606               	rlcf	??_CANreceiveMessage+3,f,c
 14705  0020EA  2EE8               	decfsz	wreg,f,c
 14706  0020EC  D7F9               	goto	i1u670_25
 14707  0020EE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14708  0020F2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14709  0020F6  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 14710  0020FA  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 14711  0020FE  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 14712  002102  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 14713                           
 14714                           ; BSR set to: 15
 14715                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 14716  002106  010F               	movlb	15	; () banked
 14717  002108  3952               	swapf	82,w,b	;volatile
 14718  00210A  42E8               	rrncf	wreg,f,c
 14719  00210C  0B07               	andlw	7
 14720  00210E  0B07               	andlw	7
 14721  002110  6E0C               	movwf	CANreceiveMessage@tamp,c
 14722                           
 14723                           ; BSR set to: 15
 14724                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 14725  002112  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14726  002116  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14727  00211A  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 14728  00211E  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 14729  002122  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 14730  002126  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 14731  00212A  500C               	movf	CANreceiveMessage@tamp,w,c
 14732  00212C  2403               	addwf	??_CANreceiveMessage,w,c
 14733  00212E  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 14734  002130  0E00               	movlw	0
 14735  002132  2004               	addwfc	??_CANreceiveMessage+1,w,c
 14736  002134  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 14737  002136  0E00               	movlw	0
 14738  002138  2005               	addwfc	??_CANreceiveMessage+2,w,c
 14739  00213A  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 14740  00213C  0E00               	movlw	0
 14741  00213E  2006               	addwfc	??_CANreceiveMessage+3,w,c
 14742  002140  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 14743  002142  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14744  002146  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14745  00214A  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 14746  00214E  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 14747  002152  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 14748  002156  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 14749                           
 14750                           ;inc\CANlib.h: 563: }
 14751  00215A  D08D               	goto	i1l5541
 14752  00215C                     i1l5515:
 14753                           
 14754                           ; BSR set to: 15
 14755                           ;inc\CANlib.h: 564: else
 14756                           ;inc\CANlib.h: 565: {
 14757                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 14758  00215C  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
 14759  002160  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14760  002162  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14761  002164  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14762  002166  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14763  00216A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14764  00216E  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 14765  002172  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 14766  002176  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 14767  00217A  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 14768                           
 14769                           ; BSR set to: 15
 14770                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 14771  00217E  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
 14772  002182  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14773  002184  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14774  002186  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14775  002188  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 14776  00218C  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 14777  002190  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 14778  002194  6A03               	clrf	??_CANreceiveMessage,c
 14779  002196  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14780  00219A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14781  00219E  5003               	movf	??_CANreceiveMessage,w,c
 14782  0021A0  26DE               	addwf	postinc2,f,c
 14783  0021A2  5004               	movf	??_CANreceiveMessage+1,w,c
 14784  0021A4  22DE               	addwfc	postinc2,f,c
 14785  0021A6  5005               	movf	??_CANreceiveMessage+2,w,c
 14786  0021A8  22DE               	addwfc	postinc2,f,c
 14787  0021AA  5006               	movf	??_CANreceiveMessage+3,w,c
 14788  0021AC  22DE               	addwfc	postinc2,f,c
 14789                           
 14790                           ; BSR set to: 15
 14791                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 14792  0021AE  010F               	movlb	15	; () banked
 14793  0021B0  A152               	btfss	82,0,b	;volatile
 14794  0021B2  D00C               	goto	i1l5523
 14795                           
 14796                           ; BSR set to: 15
 14797                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 14798  0021B4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14799  0021B8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14800  0021BC  0E00               	movlw	0
 14801  0021BE  12DE               	iorwf	postinc2,f,c
 14802  0021C0  0E00               	movlw	0
 14803  0021C2  12DE               	iorwf	postinc2,f,c
 14804  0021C4  0E01               	movlw	1
 14805  0021C6  12DE               	iorwf	postinc2,f,c
 14806  0021C8  0E00               	movlw	0
 14807  0021CA  12DE               	iorwf	postinc2,f,c
 14808  0021CC                     i1l5523:
 14809                           
 14810                           ; BSR set to: 15
 14811                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 14812  0021CC  010F               	movlb	15	; () banked
 14813  0021CE  A352               	btfss	82,1,b	;volatile
 14814  0021D0  D00C               	goto	i1l5527
 14815                           
 14816                           ; BSR set to: 15
 14817                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 14818  0021D2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14819  0021D6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14820  0021DA  0E00               	movlw	0
 14821  0021DC  12DE               	iorwf	postinc2,f,c
 14822  0021DE  0E00               	movlw	0
 14823  0021E0  12DE               	iorwf	postinc2,f,c
 14824  0021E2  0E02               	movlw	2
 14825  0021E4  12DE               	iorwf	postinc2,f,c
 14826  0021E6  0E00               	movlw	0
 14827  0021E8  12DE               	iorwf	postinc2,f,c
 14828  0021EA                     i1l5527:
 14829                           
 14830                           ; BSR set to: 15
 14831                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 14832  0021EA  010F               	movlb	15	; () banked
 14833  0021EC  AB52               	btfss	82,5,b	;volatile
 14834  0021EE  D00C               	goto	i1l5531
 14835                           
 14836                           ; BSR set to: 15
 14837                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 14838  0021F0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14839  0021F4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14840  0021F8  0E00               	movlw	0
 14841  0021FA  12DE               	iorwf	postinc2,f,c
 14842  0021FC  0E00               	movlw	0
 14843  0021FE  12DE               	iorwf	postinc2,f,c
 14844  002200  0E04               	movlw	4
 14845  002202  12DE               	iorwf	postinc2,f,c
 14846  002204  0E00               	movlw	0
 14847  002206  12DE               	iorwf	postinc2,f,c
 14848  002208                     i1l5531:
 14849                           
 14850                           ; BSR set to: 15
 14851                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 14852  002208  010F               	movlb	15	; () banked
 14853  00220A  AD52               	btfss	82,6,b	;volatile
 14854  00220C  D00C               	goto	i1l5535
 14855                           
 14856                           ; BSR set to: 15
 14857                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 14858  00220E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14859  002212  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14860  002216  0E00               	movlw	0
 14861  002218  12DE               	iorwf	postinc2,f,c
 14862  00221A  0E00               	movlw	0
 14863  00221C  12DE               	iorwf	postinc2,f,c
 14864  00221E  0E08               	movlw	8
 14865  002220  12DE               	iorwf	postinc2,f,c
 14866  002222  0E00               	movlw	0
 14867  002224  12DE               	iorwf	postinc2,f,c
 14868  002226                     i1l5535:
 14869                           
 14870                           ; BSR set to: 15
 14871                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 14872  002226  010F               	movlb	15	; () banked
 14873  002228  AF52               	btfss	82,7,b	;volatile
 14874  00222A  D00C               	goto	i1l5539
 14875                           
 14876                           ; BSR set to: 15
 14877                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 14878  00222C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14879  002230  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14880  002234  0E00               	movlw	0
 14881  002236  12DE               	iorwf	postinc2,f,c
 14882  002238  0E00               	movlw	0
 14883  00223A  12DE               	iorwf	postinc2,f,c
 14884  00223C  0E10               	movlw	16
 14885  00223E  12DE               	iorwf	postinc2,f,c
 14886  002240  0E00               	movlw	0
 14887  002242  12DE               	iorwf	postinc2,f,c
 14888  002244                     i1l5539:
 14889                           
 14890                           ; BSR set to: 15
 14891                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 14892  002244  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 14893  002248  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14894  00224A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14895  00224C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14896  00224E  0E15               	movlw	21
 14897  002250                     i1u676_25:
 14898  002250  90D8               	bcf	status,0,c
 14899  002252  3603               	rlcf	??_CANreceiveMessage,f,c
 14900  002254  3604               	rlcf	??_CANreceiveMessage+1,f,c
 14901  002256  3605               	rlcf	??_CANreceiveMessage+2,f,c
 14902  002258  3606               	rlcf	??_CANreceiveMessage+3,f,c
 14903  00225A  2EE8               	decfsz	wreg,f,c
 14904  00225C  D7F9               	goto	i1u676_25
 14905  00225E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14906  002262  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14907  002266  5003               	movf	??_CANreceiveMessage,w,c
 14908  002268  12DE               	iorwf	postinc2,f,c
 14909  00226A  5004               	movf	??_CANreceiveMessage+1,w,c
 14910  00226C  12DE               	iorwf	postinc2,f,c
 14911  00226E  5005               	movf	??_CANreceiveMessage+2,w,c
 14912  002270  12DE               	iorwf	postinc2,f,c
 14913  002272  5006               	movf	??_CANreceiveMessage+3,w,c
 14914  002274  12DE               	iorwf	postinc2,f,c
 14915  002276                     i1l5541:
 14916                           
 14917                           ; BSR set to: 15
 14918                           ;inc\CANlib.h: 581: }
 14919                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 14920  002276  010F               	movlb	15	; () banked
 14921  002278  9F50               	bcf	80,7,b	;volatile
 14922                           
 14923                           ; BSR set to: 15
 14924                           ;inc\CANlib.h: 584: return (error);
 14925                           ;	Return value of _CANreceiveMessage is never used
 14926  00227A  0012               	return	
 14927  00227C                     i1l410:
 14928                           
 14929                           ; BSR set to: 15
 14930                           ;inc\CANlib.h: 585: }
 14931                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 14932  00227C  AE60               	btfss	3936,7,c	;volatile
 14933  00227E  0012               	return	
 14934                           
 14935                           ; BSR set to: 15
 14936                           ;inc\CANlib.h: 588: {
 14937                           ;inc\CANlib.h: 589: msg->identifier = 0;
 14938  002280  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14939  002284  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14940  002288  6ADE               	clrf	postinc2,c
 14941  00228A  6ADE               	clrf	postinc2,c
 14942  00228C  6ADE               	clrf	postinc2,c
 14943  00228E  6ADD               	clrf	postdec2,c
 14944                           
 14945                           ; BSR set to: 15
 14946                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 14947  002290  EE20 F004          	lfsr	2,4
 14948  002294  5001               	movf	CANreceiveMessage@msg,w,c
 14949  002296  26D9               	addwf	fsr2l,f,c
 14950  002298  5002               	movf	CANreceiveMessage@msg+1,w,c
 14951  00229A  22DA               	addwfc	fsr2h,f,c
 14952  00229C  CF66 FFDF          	movff	3942,indf2	;volatile
 14953                           
 14954                           ; BSR set to: 15
 14955                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 14956  0022A0  EE20 F005          	lfsr	2,5
 14957  0022A4  5001               	movf	CANreceiveMessage@msg,w,c
 14958  0022A6  26D9               	addwf	fsr2l,f,c
 14959  0022A8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14960  0022AA  22DA               	addwfc	fsr2h,f,c
 14961  0022AC  CF67 FFDF          	movff	3943,indf2	;volatile
 14962                           
 14963                           ; BSR set to: 15
 14964                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 14965  0022B0  EE20 F006          	lfsr	2,6
 14966  0022B4  5001               	movf	CANreceiveMessage@msg,w,c
 14967  0022B6  26D9               	addwf	fsr2l,f,c
 14968  0022B8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14969  0022BA  22DA               	addwfc	fsr2h,f,c
 14970  0022BC  CF68 FFDF          	movff	3944,indf2	;volatile
 14971                           
 14972                           ; BSR set to: 15
 14973                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 14974  0022C0  EE20 F007          	lfsr	2,7
 14975  0022C4  5001               	movf	CANreceiveMessage@msg,w,c
 14976  0022C6  26D9               	addwf	fsr2l,f,c
 14977  0022C8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14978  0022CA  22DA               	addwfc	fsr2h,f,c
 14979  0022CC  CF69 FFDF          	movff	3945,indf2	;volatile
 14980                           
 14981                           ; BSR set to: 15
 14982                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 14983  0022D0  EE20 F008          	lfsr	2,8
 14984  0022D4  5001               	movf	CANreceiveMessage@msg,w,c
 14985  0022D6  26D9               	addwf	fsr2l,f,c
 14986  0022D8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14987  0022DA  22DA               	addwfc	fsr2h,f,c
 14988  0022DC  CF6A FFDF          	movff	3946,indf2	;volatile
 14989                           
 14990                           ; BSR set to: 15
 14991                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 14992  0022E0  EE20 F009          	lfsr	2,9
 14993  0022E4  5001               	movf	CANreceiveMessage@msg,w,c
 14994  0022E6  26D9               	addwf	fsr2l,f,c
 14995  0022E8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14996  0022EA  22DA               	addwfc	fsr2h,f,c
 14997  0022EC  CF6B FFDF          	movff	3947,indf2	;volatile
 14998                           
 14999                           ; BSR set to: 15
 15000                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 15001  0022F0  EE20 F00A          	lfsr	2,10
 15002  0022F4  5001               	movf	CANreceiveMessage@msg,w,c
 15003  0022F6  26D9               	addwf	fsr2l,f,c
 15004  0022F8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15005  0022FA  22DA               	addwfc	fsr2h,f,c
 15006  0022FC  CF6C FFDF          	movff	3948,indf2	;volatile
 15007                           
 15008                           ; BSR set to: 15
 15009                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 15010  002300  EE20 F00B          	lfsr	2,11
 15011  002304  5001               	movf	CANreceiveMessage@msg,w,c
 15012  002306  26D9               	addwf	fsr2l,f,c
 15013  002308  5002               	movf	CANreceiveMessage@msg+1,w,c
 15014  00230A  22DA               	addwfc	fsr2h,f,c
 15015  00230C  CF6D FFDF          	movff	3949,indf2	;volatile
 15016                           
 15017                           ; BSR set to: 15
 15018                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 15019  002310  EE20 F00E          	lfsr	2,14
 15020  002314  5001               	movf	CANreceiveMessage@msg,w,c
 15021  002316  26D9               	addwf	fsr2l,f,c
 15022  002318  5002               	movf	CANreceiveMessage@msg+1,w,c
 15023  00231A  22DA               	addwfc	fsr2h,f,c
 15024  00231C  AC65               	btfss	3941,6,c	;volatile
 15025  00231E  D002               	goto	i1u678_20
 15026  002320  0E01               	movlw	1
 15027  002322  D001               	goto	i1u678_26
 15028  002324                     i1u678_20:
 15029  002324  0E00               	movlw	0
 15030  002326                     i1u678_26:
 15031  002326  6EDF               	movwf	indf2,c
 15032                           
 15033                           ; BSR set to: 15
 15034                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 15035  002328  EE20 F00D          	lfsr	2,13
 15036  00232C  5001               	movf	CANreceiveMessage@msg,w,c
 15037  00232E  26D9               	addwf	fsr2l,f,c
 15038  002330  5002               	movf	CANreceiveMessage@msg+1,w,c
 15039  002332  22DA               	addwfc	fsr2h,f,c
 15040  002334  5065               	movf	3941,w,c	;volatile
 15041  002336  0B0F               	andlw	15
 15042  002338  6EDF               	movwf	indf2,c
 15043                           
 15044                           ; BSR set to: 15
 15045                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 15046  00233A  EE20 F00C          	lfsr	2,12
 15047  00233E  5001               	movf	CANreceiveMessage@msg,w,c
 15048  002340  26D9               	addwf	fsr2l,f,c
 15049  002342  5002               	movf	CANreceiveMessage@msg+1,w,c
 15050  002344  22DA               	addwfc	fsr2h,f,c
 15051  002346  A662               	btfss	3938,3,c	;volatile
 15052  002348  D002               	goto	i1u679_20
 15053  00234A  0E01               	movlw	1
 15054  00234C  D001               	goto	i1u679_26
 15055  00234E                     i1u679_20:
 15056  00234E  0E00               	movlw	0
 15057  002350                     i1u679_26:
 15058  002350  6EDF               	movwf	indf2,c
 15059                           
 15060                           ; BSR set to: 15
 15061                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 15062  002352  B662               	btfsc	3938,3,c	;volatile
 15063  002354  D043               	goto	i1l5577
 15064                           
 15065                           ; BSR set to: 15
 15066                           ;inc\CANlib.h: 606: {
 15067                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 15068  002356  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15069  00235A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15070  00235C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15071  00235E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15072  002360  0E03               	movlw	3
 15073  002362                     i1u681_25:
 15074  002362  90D8               	bcf	status,0,c
 15075  002364  3603               	rlcf	??_CANreceiveMessage,f,c
 15076  002366  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15077  002368  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15078  00236A  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15079  00236C  2EE8               	decfsz	wreg,f,c
 15080  00236E  D7F9               	goto	i1u681_25
 15081  002370  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15082  002374  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15083  002378  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15084  00237C  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15085  002380  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15086  002384  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15087                           
 15088                           ; BSR set to: 15
 15089                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 15090  002388  3862               	swapf	3938,w,c	;volatile
 15091  00238A  42E8               	rrncf	wreg,f,c
 15092  00238C  0B07               	andlw	7
 15093  00238E  0B07               	andlw	7
 15094  002390  6E0C               	movwf	CANreceiveMessage@tamp,c
 15095                           
 15096                           ; BSR set to: 15
 15097                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 15098  002392  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15099  002396  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15100  00239A  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 15101  00239E  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 15102  0023A2  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 15103  0023A6  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 15104  0023AA  500C               	movf	CANreceiveMessage@tamp,w,c
 15105  0023AC  2403               	addwf	??_CANreceiveMessage,w,c
 15106  0023AE  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 15107  0023B0  0E00               	movlw	0
 15108  0023B2  2004               	addwfc	??_CANreceiveMessage+1,w,c
 15109  0023B4  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 15110  0023B6  0E00               	movlw	0
 15111  0023B8  2005               	addwfc	??_CANreceiveMessage+2,w,c
 15112  0023BA  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 15113  0023BC  0E00               	movlw	0
 15114  0023BE  2006               	addwfc	??_CANreceiveMessage+3,w,c
 15115  0023C0  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 15116  0023C2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15117  0023C6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15118  0023CA  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 15119  0023CE  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 15120  0023D2  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 15121  0023D6  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 15122                           
 15123                           ;inc\CANlib.h: 610: }
 15124  0023DA  D088               	goto	i1l5603
 15125  0023DC                     i1l5577:
 15126                           
 15127                           ; BSR set to: 15
 15128                           ;inc\CANlib.h: 611: else
 15129                           ;inc\CANlib.h: 612: {
 15130                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 15131  0023DC  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
 15132  0023E0  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15133  0023E2  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15134  0023E4  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15135  0023E6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15136  0023EA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15137  0023EE  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15138  0023F2  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15139  0023F6  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15140  0023FA  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15141                           
 15142                           ; BSR set to: 15
 15143                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 15144  0023FE  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
 15145  002402  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15146  002404  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15147  002406  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15148  002408  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 15149  00240C  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 15150  002410  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 15151  002414  6A03               	clrf	??_CANreceiveMessage,c
 15152  002416  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15153  00241A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15154  00241E  5003               	movf	??_CANreceiveMessage,w,c
 15155  002420  26DE               	addwf	postinc2,f,c
 15156  002422  5004               	movf	??_CANreceiveMessage+1,w,c
 15157  002424  22DE               	addwfc	postinc2,f,c
 15158  002426  5005               	movf	??_CANreceiveMessage+2,w,c
 15159  002428  22DE               	addwfc	postinc2,f,c
 15160  00242A  5006               	movf	??_CANreceiveMessage+3,w,c
 15161  00242C  22DE               	addwfc	postinc2,f,c
 15162                           
 15163                           ; BSR set to: 15
 15164                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 15165  00242E  A062               	btfss	3938,0,c	;volatile
 15166  002430  D00C               	goto	i1l5585
 15167                           
 15168                           ; BSR set to: 15
 15169                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 15170  002432  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15171  002436  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15172  00243A  0E00               	movlw	0
 15173  00243C  12DE               	iorwf	postinc2,f,c
 15174  00243E  0E00               	movlw	0
 15175  002440  12DE               	iorwf	postinc2,f,c
 15176  002442  0E01               	movlw	1
 15177  002444  12DE               	iorwf	postinc2,f,c
 15178  002446  0E00               	movlw	0
 15179  002448  12DE               	iorwf	postinc2,f,c
 15180  00244A                     i1l5585:
 15181                           
 15182                           ; BSR set to: 15
 15183                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 15184  00244A  A262               	btfss	3938,1,c	;volatile
 15185  00244C  D00C               	goto	i1l5589
 15186                           
 15187                           ; BSR set to: 15
 15188                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 15189  00244E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15190  002452  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15191  002456  0E00               	movlw	0
 15192  002458  12DE               	iorwf	postinc2,f,c
 15193  00245A  0E00               	movlw	0
 15194  00245C  12DE               	iorwf	postinc2,f,c
 15195  00245E  0E02               	movlw	2
 15196  002460  12DE               	iorwf	postinc2,f,c
 15197  002462  0E00               	movlw	0
 15198  002464  12DE               	iorwf	postinc2,f,c
 15199  002466                     i1l5589:
 15200                           
 15201                           ; BSR set to: 15
 15202                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 15203  002466  AA62               	btfss	3938,5,c	;volatile
 15204  002468  D00C               	goto	i1l5593
 15205                           
 15206                           ; BSR set to: 15
 15207                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 15208  00246A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15209  00246E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15210  002472  0E00               	movlw	0
 15211  002474  12DE               	iorwf	postinc2,f,c
 15212  002476  0E00               	movlw	0
 15213  002478  12DE               	iorwf	postinc2,f,c
 15214  00247A  0E04               	movlw	4
 15215  00247C  12DE               	iorwf	postinc2,f,c
 15216  00247E  0E00               	movlw	0
 15217  002480  12DE               	iorwf	postinc2,f,c
 15218  002482                     i1l5593:
 15219                           
 15220                           ; BSR set to: 15
 15221                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 15222  002482  AC62               	btfss	3938,6,c	;volatile
 15223  002484  D00C               	goto	i1l5597
 15224                           
 15225                           ; BSR set to: 15
 15226                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 15227  002486  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15228  00248A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15229  00248E  0E00               	movlw	0
 15230  002490  12DE               	iorwf	postinc2,f,c
 15231  002492  0E00               	movlw	0
 15232  002494  12DE               	iorwf	postinc2,f,c
 15233  002496  0E08               	movlw	8
 15234  002498  12DE               	iorwf	postinc2,f,c
 15235  00249A  0E00               	movlw	0
 15236  00249C  12DE               	iorwf	postinc2,f,c
 15237  00249E                     i1l5597:
 15238                           
 15239                           ; BSR set to: 15
 15240                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 15241  00249E  AE62               	btfss	3938,7,c	;volatile
 15242  0024A0  D00C               	goto	i1l5601
 15243                           
 15244                           ; BSR set to: 15
 15245                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 15246  0024A2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15247  0024A6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15248  0024AA  0E00               	movlw	0
 15249  0024AC  12DE               	iorwf	postinc2,f,c
 15250  0024AE  0E00               	movlw	0
 15251  0024B0  12DE               	iorwf	postinc2,f,c
 15252  0024B2  0E10               	movlw	16
 15253  0024B4  12DE               	iorwf	postinc2,f,c
 15254  0024B6  0E00               	movlw	0
 15255  0024B8  12DE               	iorwf	postinc2,f,c
 15256  0024BA                     i1l5601:
 15257                           
 15258                           ; BSR set to: 15
 15259                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 15260  0024BA  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15261  0024BE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15262  0024C0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15263  0024C2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15264  0024C4  0E15               	movlw	21
 15265  0024C6                     i1u687_25:
 15266  0024C6  90D8               	bcf	status,0,c
 15267  0024C8  3603               	rlcf	??_CANreceiveMessage,f,c
 15268  0024CA  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15269  0024CC  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15270  0024CE  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15271  0024D0  2EE8               	decfsz	wreg,f,c
 15272  0024D2  D7F9               	goto	i1u687_25
 15273  0024D4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15274  0024D8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15275  0024DC  5003               	movf	??_CANreceiveMessage,w,c
 15276  0024DE  12DE               	iorwf	postinc2,f,c
 15277  0024E0  5004               	movf	??_CANreceiveMessage+1,w,c
 15278  0024E2  12DE               	iorwf	postinc2,f,c
 15279  0024E4  5005               	movf	??_CANreceiveMessage+2,w,c
 15280  0024E6  12DE               	iorwf	postinc2,f,c
 15281  0024E8  5006               	movf	??_CANreceiveMessage+3,w,c
 15282  0024EA  12DE               	iorwf	postinc2,f,c
 15283  0024EC                     i1l5603:
 15284                           
 15285                           ; BSR set to: 15
 15286                           ;inc\CANlib.h: 629: }
 15287                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 15288  0024EC  9E60               	bcf	3936,7,c	;volatile
 15289                           
 15290                           ; BSR set to: 15
 15291                           ;inc\CANlib.h: 632: return (error);
 15292                           ;	Return value of _CANreceiveMessage is never used
 15293  0024EE  0012               	return	
 15294  0024F0                     __end_of_CANreceiveMessage:
 15295                           	opt stack 0
 15296                           pclatu	equ	0xFFB
 15297                           pclath	equ	0xFFA
 15298                           tblptru	equ	0xFF8
 15299                           tblptrh	equ	0xFF7
 15300                           tblptrl	equ	0xFF6
 15301                           tablat	equ	0xFF5
 15302                           prodh	equ	0xFF4
 15303                           prodl	equ	0xFF3
 15304                           intcon	equ	0xFF2
 15305                           intcon2	equ	0xFF1
 15306                           postinc0	equ	0xFEE
 15307                           fsr0h	equ	0xFEA
 15308                           fsr0l	equ	0xFE9
 15309                           wreg	equ	0xFE8
 15310                           indf1	equ	0xFE7
 15311                           postdec1	equ	0xFE5
 15312                           fsr1h	equ	0xFE2
 15313                           fsr1l	equ	0xFE1
 15314                           bsr	equ	0xFE0
 15315                           indf2	equ	0xFDF
 15316                           postinc2	equ	0xFDE
 15317                           postdec2	equ	0xFDD
 15318                           fsr2h	equ	0xFDA
 15319                           fsr2l	equ	0xFD9
 15320                           status	equ	0xFD8
 15321                           
 15322 ;; *************** function _ISR_Alta *****************
 15323 ;; Defined at:
 15324 ;;		line 91 in file "parcheggio.c"
 15325 ;; Parameters:    Size  Location     Type
 15326 ;;		None
 15327 ;; Auto vars:     Size  Location     Type
 15328 ;;		None
 15329 ;; Return value:  Size  Location     Type
 15330 ;;		None               void
 15331 ;; Registers used:
 15332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15333 ;; Tracked objects:
 15334 ;;		On entry : 0/0
 15335 ;;		On exit  : 0/0
 15336 ;;		Unchanged: 0/0
 15337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15340 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15341 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15342 ;;Total ram usage:       16 bytes
 15343 ;; Hardware stack levels used:    1
 15344 ;; Hardware stack levels required when called:    1
 15345 ;; This function calls:
 15346 ;;		___lwdiv
 15347 ;; This function is called by:
 15348 ;;		Interrupt level 2
 15349 ;; This function uses a non-reentrant model
 15350 ;;
 15351                           
 15352                           	psect	intcode
 15353  000008                     __pintcode:
 15354                           	opt stack 0
 15355  000008                     _ISR_Alta:
 15356                           	opt stack 21
 15357                           
 15358                           ; BSR set to: 15
 15359                           ;incstack = 0
 15360  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15361  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 15362  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 15363  000012  EFBE  F02B         	goto	int_func
 15364                           pclatu	equ	0xFFB
 15365                           pclath	equ	0xFFA
 15366                           tblptru	equ	0xFF8
 15367                           tblptrh	equ	0xFF7
 15368                           tblptrl	equ	0xFF6
 15369                           tablat	equ	0xFF5
 15370                           prodh	equ	0xFF4
 15371                           prodl	equ	0xFF3
 15372                           intcon	equ	0xFF2
 15373                           intcon2	equ	0xFF1
 15374                           postinc0	equ	0xFEE
 15375                           fsr0h	equ	0xFEA
 15376                           fsr0l	equ	0xFE9
 15377                           wreg	equ	0xFE8
 15378                           indf1	equ	0xFE7
 15379                           postdec1	equ	0xFE5
 15380                           fsr1h	equ	0xFE2
 15381                           fsr1l	equ	0xFE1
 15382                           bsr	equ	0xFE0
 15383                           indf2	equ	0xFDF
 15384                           postinc2	equ	0xFDE
 15385                           postdec2	equ	0xFDD
 15386                           fsr2h	equ	0xFDA
 15387                           fsr2l	equ	0xFD9
 15388                           status	equ	0xFD8
 15389                           
 15390                           	psect	intcode_body
 15391  00577C                     __pintcode_body:
 15392                           	opt stack 21
 15393  00577C                     int_func:
 15394                           	opt stack 21
 15395  00577C  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 15396  005780  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 15397  005784  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 15398  005788  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 15399  00578C  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 15400  005790  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 15401  005794  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 15402  005798  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 15403  00579C  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 15404  0057A0  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 15405  0057A4  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 15406  0057A8  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 15407                           
 15408                           ;parcheggio.c: 92: if (INTCON2bits.INTEDG0 == 1) {
 15409  0057AC  ACF1               	btfss	intcon2,6,c	;volatile
 15410  0057AE  D007               	goto	i2l688
 15411                           
 15412                           ;parcheggio.c: 93: INTCON2bits.INTEDG0 = 0;
 15413  0057B0  9CF1               	bcf	intcon2,6,c	;volatile
 15414                           
 15415                           ;parcheggio.c: 94: TMR3H = 0;
 15416  0057B2  0E00               	movlw	0
 15417  0057B4  6EB3               	movwf	4019,c	;volatile
 15418                           
 15419                           ;parcheggio.c: 95: TMR3L = 0;
 15420  0057B6  0E00               	movlw	0
 15421  0057B8  6EB2               	movwf	4018,c	;volatile
 15422                           
 15423                           ;parcheggio.c: 96: distance_error = 0;
 15424  0057BA  9644               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 15425                           
 15426                           ;parcheggio.c: 97: } else {
 15427  0057BC  D030               	goto	i2l7083
 15428  0057BE                     i2l688:
 15429                           
 15430                           ;parcheggio.c: 98: gianni = TMR3H;
 15431  0057BE  CFB3 F042          	movff	4019,_gianni	;volatile
 15432                           
 15433                           ;parcheggio.c: 99: asus = TMR3L;
 15434  0057C2  CFB2 F041          	movff	4018,_asus	;volatile
 15435                           
 15436                           ;parcheggio.c: 100: timerValue2 = gianni;
 15437  0057C6  C042  F03E         	movff	_gianni,_timerValue2	;volatile
 15438  0057CA  6A3F               	clrf	_timerValue2+1,c	;volatile
 15439                           
 15440                           ;parcheggio.c: 101: timerValue2 = ((timerValue2 << 8) | (asus));
 15441  0057CC  503E               	movf	_timerValue2,w,c	;volatile
 15442  0057CE  0100               	movlb	0	; () banked
 15443  0057D0  6F67               	movwf	??_ISR_Alta& (0+255),b
 15444  0057D2  5041               	movf	_asus,w,c	;volatile
 15445  0057D4  6E3E               	movwf	_timerValue2,c	;volatile
 15446  0057D6  C067  F03F         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 15447                           
 15448                           ; BSR set to: 0
 15449                           ;parcheggio.c: 102: pulse_time = timerValue2 / 2;
 15450  0057DA  90D8               	bcf	status,0,c
 15451  0057DC  303F               	rrcf	_timerValue2+1,w,c	;volatile
 15452  0057DE  0100               	movlb	0	; () banked
 15453  0057E0  6F67               	movwf	??_ISR_Alta& (0+255),b
 15454  0057E2  303E               	rrcf	_timerValue2,w,c	;volatile
 15455  0057E4  6E3A               	movwf	_pulse_time,c	;volatile
 15456  0057E6  C067  F03B         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 15457                           
 15458                           ; BSR set to: 0
 15459                           ;parcheggio.c: 103: sensor_distance[MUX_index] = pulse_time / 58;
 15460  0057EA  C03A  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 15461  0057EE  C03B  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 15462  0057F2  0E00               	movlw	0
 15463  0057F4  0100               	movlb	0	; () banked
 15464  0057F6  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 15465  0057F8  0E3A               	movlw	58
 15466  0057FA  6F62               	movwf	___lwdiv@divisor& (0+255),b
 15467  0057FC  ECB6  F02C         	call	___lwdiv	;wreg free
 15468  005800  5040               	movf	_MUX_index,w,c	;volatile
 15469  005802  0D02               	mullw	2
 15470  005804  0E24               	movlw	low _sensor_distance
 15471  005806  24F3               	addwf	prodl,w,c
 15472  005808  6ED9               	movwf	fsr2l,c
 15473  00580A  0E00               	movlw	high _sensor_distance
 15474  00580C  20F4               	addwfc	prodh,w,c
 15475  00580E  6EDA               	movwf	fsr2h,c
 15476  005810  0100               	movlb	0	; () banked
 15477  005812  C060  FFDE         	movff	?___lwdiv,postinc2
 15478  005816  0100               	movlb	0	; () banked
 15479  005818  C061  FFDD         	movff	?___lwdiv+1,postdec2
 15480                           
 15481                           ; BSR set to: 0
 15482                           ;parcheggio.c: 104: INTCON2bits.INTEDG0 = 1;
 15483  00581C  8CF1               	bsf	intcon2,6,c	;volatile
 15484  00581E                     i2l7083:
 15485                           
 15486                           ;parcheggio.c: 105: }
 15487                           ;parcheggio.c: 106: INTCONbits.INT0IF = 0;
 15488  00581E  92F2               	bcf	intcon,1,c	;volatile
 15489  005820  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 15490  005824  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 15491  005828  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 15492  00582C  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 15493  005830  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 15494  005834  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 15495  005838  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 15496  00583C  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 15497  005840  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 15498  005844  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 15499  005848  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 15500  00584C  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 15501  005850  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 15502  005854  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 15503  005858  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 15504  00585A  0011               	retfie		f
 15505  00585C                     __end_of_ISR_Alta:
 15506                           	opt stack 0
 15507                           pclatu	equ	0xFFB
 15508                           pclath	equ	0xFFA
 15509                           tblptru	equ	0xFF8
 15510                           tblptrh	equ	0xFF7
 15511                           tblptrl	equ	0xFF6
 15512                           tablat	equ	0xFF5
 15513                           prodh	equ	0xFF4
 15514                           prodl	equ	0xFF3
 15515                           intcon	equ	0xFF2
 15516                           intcon2	equ	0xFF1
 15517                           postinc0	equ	0xFEE
 15518                           fsr0h	equ	0xFEA
 15519                           fsr0l	equ	0xFE9
 15520                           wreg	equ	0xFE8
 15521                           indf1	equ	0xFE7
 15522                           postdec1	equ	0xFE5
 15523                           fsr1h	equ	0xFE2
 15524                           fsr1l	equ	0xFE1
 15525                           bsr	equ	0xFE0
 15526                           indf2	equ	0xFDF
 15527                           postinc2	equ	0xFDE
 15528                           postdec2	equ	0xFDD
 15529                           fsr2h	equ	0xFDA
 15530                           fsr2l	equ	0xFD9
 15531                           status	equ	0xFD8
 15532                           
 15533 ;; *************** function ___lwdiv *****************
 15534 ;; Defined at:
 15535 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 15536 ;; Parameters:    Size  Location     Type
 15537 ;;  dividend        2    0[BANK0 ] unsigned int 
 15538 ;;  divisor         2    2[BANK0 ] unsigned int 
 15539 ;; Auto vars:     Size  Location     Type
 15540 ;;  quotient        2    5[BANK0 ] unsigned int 
 15541 ;;  counter         1    4[BANK0 ] unsigned char 
 15542 ;; Return value:  Size  Location     Type
 15543 ;;                  2    0[BANK0 ] unsigned int 
 15544 ;; Registers used:
 15545 ;;		wreg, status,2, status,0
 15546 ;; Tracked objects:
 15547 ;;		On entry : 0/0
 15548 ;;		On exit  : 0/0
 15549 ;;		Unchanged: 0/0
 15550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15551 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15552 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15554 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15555 ;;Total ram usage:        7 bytes
 15556 ;; Hardware stack levels used:    1
 15557 ;; This function calls:
 15558 ;;		Nothing
 15559 ;; This function is called by:
 15560 ;;		_ISR_Alta
 15561 ;; This function uses a non-reentrant model
 15562 ;;
 15563                           
 15564                           	psect	text38
 15565  00596C                     __ptext38:
 15566                           	opt stack 0
 15567  00596C                     ___lwdiv:
 15568                           	opt stack 21
 15569                           
 15570                           ;incstack = 0
 15571  00596C  0E00               	movlw	0
 15572  00596E  0100               	movlb	0	; () banked
 15573  005970  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 15574  005972  0E00               	movlw	0
 15575  005974  6F65               	movwf	___lwdiv@quotient& (0+255),b
 15576                           
 15577                           ; BSR set to: 0
 15578  005976  0100               	movlb	0	; () banked
 15579  005978  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15580  00597A  0100               	movlb	0	; () banked
 15581  00597C  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 15582  00597E  B4D8               	btfsc	status,2,c
 15583  005980  D02C               	goto	i2l1252
 15584                           
 15585                           ; BSR set to: 0
 15586  005982  0E01               	movlw	1
 15587  005984  0100               	movlb	0	; () banked
 15588  005986  6F64               	movwf	___lwdiv@counter& (0+255),b
 15589  005988  D006               	goto	i2l7053
 15590  00598A                     i2l7051:
 15591                           
 15592                           ; BSR set to: 0
 15593  00598A  0100               	movlb	0	; () banked
 15594  00598C  90D8               	bcf	status,0,c
 15595  00598E  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 15596  005990  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 15597  005992  0100               	movlb	0	; () banked
 15598  005994  2B64               	incf	___lwdiv@counter& (0+255),f,b
 15599  005996                     i2l7053:
 15600                           
 15601                           ; BSR set to: 0
 15602  005996  0100               	movlb	0	; () banked
 15603  005998  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 15604  00599A  D7F7               	goto	i2l7051
 15605  00599C                     i2l7055:
 15606                           
 15607                           ; BSR set to: 0
 15608  00599C  0100               	movlb	0	; () banked
 15609  00599E  90D8               	bcf	status,0,c
 15610  0059A0  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 15611  0059A2  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 15612                           
 15613                           ; BSR set to: 0
 15614  0059A4  0100               	movlb	0	; () banked
 15615  0059A6  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15616  0059A8  0100               	movlb	0	; () banked
 15617  0059AA  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 15618  0059AC  0100               	movlb	0	; () banked
 15619  0059AE  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15620  0059B0  0100               	movlb	0	; () banked
 15621  0059B2  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 15622  0059B4  A0D8               	btfss	status,0,c
 15623  0059B6  D00A               	goto	i2l7063
 15624                           
 15625                           ; BSR set to: 0
 15626  0059B8  0100               	movlb	0	; () banked
 15627  0059BA  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15628  0059BC  0100               	movlb	0	; () banked
 15629  0059BE  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 15630  0059C0  0100               	movlb	0	; () banked
 15631  0059C2  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15632  0059C4  0100               	movlb	0	; () banked
 15633  0059C6  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 15634                           
 15635                           ; BSR set to: 0
 15636  0059C8  0100               	movlb	0	; () banked
 15637  0059CA  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 15638  0059CC                     i2l7063:
 15639                           
 15640                           ; BSR set to: 0
 15641  0059CC  0100               	movlb	0	; () banked
 15642  0059CE  90D8               	bcf	status,0,c
 15643  0059D0  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 15644  0059D2  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 15645                           
 15646                           ; BSR set to: 0
 15647  0059D4  0100               	movlb	0	; () banked
 15648  0059D6  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 15649  0059D8  D7E1               	goto	i2l7055
 15650  0059DA                     i2l1252:
 15651                           
 15652                           ; BSR set to: 0
 15653  0059DA  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 15654  0059DE  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15655                           
 15656                           ; BSR set to: 0
 15657  0059E2  0012               	return		;funcret
 15658  0059E4                     __end_of___lwdiv:
 15659                           	opt stack 0
 15660                           pclatu	equ	0xFFB
 15661                           pclath	equ	0xFFA
 15662                           tblptru	equ	0xFF8
 15663                           tblptrh	equ	0xFF7
 15664                           tblptrl	equ	0xFF6
 15665                           tablat	equ	0xFF5
 15666                           prodh	equ	0xFF4
 15667                           prodl	equ	0xFF3
 15668                           intcon	equ	0xFF2
 15669                           intcon2	equ	0xFF1
 15670                           postinc0	equ	0xFEE
 15671                           fsr0h	equ	0xFEA
 15672                           fsr0l	equ	0xFE9
 15673                           wreg	equ	0xFE8
 15674                           indf1	equ	0xFE7
 15675                           postdec1	equ	0xFE5
 15676                           fsr1h	equ	0xFE2
 15677                           fsr1l	equ	0xFE1
 15678                           bsr	equ	0xFE0
 15679                           indf2	equ	0xFDF
 15680                           postinc2	equ	0xFDE
 15681                           postdec2	equ	0xFDD
 15682                           fsr2h	equ	0xFDA
 15683                           fsr2l	equ	0xFD9
 15684                           status	equ	0xFD8
 15685                           pclatu	equ	0xFFB
 15686                           pclath	equ	0xFFA
 15687                           tblptru	equ	0xFF8
 15688                           tblptrh	equ	0xFF7
 15689                           tblptrl	equ	0xFF6
 15690                           tablat	equ	0xFF5
 15691                           prodh	equ	0xFF4
 15692                           prodl	equ	0xFF3
 15693                           intcon	equ	0xFF2
 15694                           intcon2	equ	0xFF1
 15695                           postinc0	equ	0xFEE
 15696                           fsr0h	equ	0xFEA
 15697                           fsr0l	equ	0xFE9
 15698                           wreg	equ	0xFE8
 15699                           indf1	equ	0xFE7
 15700                           postdec1	equ	0xFE5
 15701                           fsr1h	equ	0xFE2
 15702                           fsr1l	equ	0xFE1
 15703                           bsr	equ	0xFE0
 15704                           indf2	equ	0xFDF
 15705                           postinc2	equ	0xFDE
 15706                           postdec2	equ	0xFDD
 15707                           fsr2h	equ	0xFDA
 15708                           fsr2l	equ	0xFD9
 15709                           status	equ	0xFD8
 15710                           
 15711                           	psect	param0
 15712  0000                     pclatu	equ	0xFFB
 15713                           pclath	equ	0xFFA
 15714                           tblptru	equ	0xFF8
 15715                           tblptrh	equ	0xFF7
 15716                           tblptrl	equ	0xFF6
 15717                           tablat	equ	0xFF5
 15718                           prodh	equ	0xFF4
 15719                           prodl	equ	0xFF3
 15720                           intcon	equ	0xFF2
 15721                           intcon2	equ	0xFF1
 15722                           postinc0	equ	0xFEE
 15723                           fsr0h	equ	0xFEA
 15724                           fsr0l	equ	0xFE9
 15725                           wreg	equ	0xFE8
 15726                           indf1	equ	0xFE7
 15727                           postdec1	equ	0xFE5
 15728                           fsr1h	equ	0xFE2
 15729                           fsr1l	equ	0xFE1
 15730                           bsr	equ	0xFE0
 15731                           indf2	equ	0xFDF
 15732                           postinc2	equ	0xFDE
 15733                           postdec2	equ	0xFDD
 15734                           fsr2h	equ	0xFDA
 15735                           fsr2l	equ	0xFD9
 15736                           status	equ	0xFD8
 15737                           
 15738                           	psect	temp
 15739  000048                     btemp:
 15740                           	opt stack 0
 15741  000048                     	ds	1
 15742  0000                     int$flags	set	btemp
 15743                           pclatu	equ	0xFFB
 15744                           pclath	equ	0xFFA
 15745                           tblptru	equ	0xFF8
 15746                           tblptrh	equ	0xFF7
 15747                           tblptrl	equ	0xFF6
 15748                           tablat	equ	0xFF5
 15749                           prodh	equ	0xFF4
 15750                           prodl	equ	0xFF3
 15751                           intcon	equ	0xFF2
 15752                           intcon2	equ	0xFF1
 15753                           postinc0	equ	0xFEE
 15754                           fsr0h	equ	0xFEA
 15755                           fsr0l	equ	0xFE9
 15756                           wreg	equ	0xFE8
 15757                           indf1	equ	0xFE7
 15758                           postdec1	equ	0xFE5
 15759                           fsr1h	equ	0xFE2
 15760                           fsr1l	equ	0xFE1
 15761                           bsr	equ	0xFE0
 15762                           indf2	equ	0xFDF
 15763                           postinc2	equ	0xFDE
 15764                           postdec2	equ	0xFDD
 15765                           fsr2h	equ	0xFDA
 15766                           fsr2l	equ	0xFD9
 15767                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        11
    BSS         179
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      71
    BANK0           160    119     136
    BANK1           256     85     224
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK1[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> can_send@data_correction1(BANK0[0]), data_correction(BANK1[8]), data_speed(BANK1[8]), data_test(BANK1[8]), 
		 -> data_steering(BANK1[8]), data_brake(BANK1[8]), data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _park_search->_parallelo
    _sin->_floor
    _floor->___xxtofl
    ___xxtofl->___fltol
    ___fltol->___fladd
    ___flsub->_floor
    _asin->_atan
    _sqrt->___fladd
    _atan->_eval_poly
    _fabs->___flneg
    ___flneg->___flmul
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flneg
    ___flge->_fabs
    _delay_s->_delay_ms
    _delay_ms->___wmul
    _can_send->_CANsendMessage
    _configurazione->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _parallelo->_asin
    _park_routine->_matematica
    _matematica->_cos
    _cos->_asin
    _sin->___flsub
    _floor->___xxtofl
    ___flsub->_floor
    _asin->_sqrt

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  235319
                    _can_interpreter
                     _configurazione
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   85923
                                             45 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   79454
                                            117 BANK0      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     194
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _park_routine                                         0     0      0  143462
                     _CANsendMessage
                            ___fladd
                            ___fltol
                           ___xxtofl
                           _can_send
                            _delay_s
                         _matematica
 ---------------------------------------------------------------------------------
 (2) _matematica                                          32    32      0  124911
                                             53 BANK1     32    32      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                               _asin
                                _cos
 ---------------------------------------------------------------------------------
 (3) _cos                                                 12     8      4   54115
                                             45 BANK1      8     4      4
                            ___fladd
                             ___flge
                               _asin (ARG)
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 17    13      4   46560
                                             20 BANK1     17    13      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4    9498
                                            115 BANK0      4     0      4
                                              6 BANK1      6     6      0
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                8     2      6     452
                                             23 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     784
                                            107 BANK0      8     4      4
                                              0 BANK1      6     6      0
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     645
                                             97 BANK0     10     6      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6161
                                             12 BANK1      8     0      8
                            ___fladd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   54204
                                             21 BANK1     24    20      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0      8     4      4
                                              0 BANK1     21    21      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   32321
                                            113 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1544
                                             77 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1220
                                             73 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   12239
                                             97 BANK0     16     8      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5387
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    5674
                                             77 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1498
                                             81 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4039
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0     419
                                             31 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     373
                                             29 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    5562
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    5467
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      24
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    5934
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    1251
                                             12 COMRAM    23    23      0
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_interpreter
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _park_routine
     _CANsendMessage
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
       ___flneg (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _abs (ARG)
     _can_send
       _CANisTxReady
       _CANsendMessage
     _delay_s
       _delay_ms
         ___wmul
     _matematica
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___fldiv
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _cos
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _asin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _atan
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___fldiv
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _fabs
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           _sqrt
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _sin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             _floor (ARG)
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___flge
                 _fabs (ARG)
                   ___flneg
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                   ___flneg (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___xxtofl
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                     ___flneg (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                 _abs (ARG)
               _frexp
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _floor
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___xxtofl
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                   ___flneg (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               _abs (ARG)
             _frexp
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _abs (ARG)
     _abs
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     55      E0       7       87.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     77      88       5       85.0%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     23      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AF      20        0.0%
DATA                 0      0     1AF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Apr 25 18:41:02 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _n 0130  
                           _x 013C                             _z 00DB          __end_of_CANSetFilter 1858  
                ___fldiv@sign 0083            delay_s@repeat_loop 0080                            bsr 000FE0  
         ___wmul@multiplicand 0079                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                    _MUX_select 0100                           l402 1F30  
                         l403 1F34                           l500 15B4                           l404 1F40  
                         l501 15B8                           l510 16C4                           l502 15C4  
                         l511 16D0                           l503 15C8                           l520 17DC  
                         l512 16D4                           l504 15D4                           l440 3CD6  
                         l432 3C96                           l521 17E0                           l513 16E0  
                         l433 3C9A                           l522 17EC                           l514 16E4  
                         l450 3DE2                           l434 3CA6                           l370 1918  
                         l523 17F0                           l515 16F0                           l507 16B0  
                         l451 3DEE                           l443 3DAE                           l435 3CAA  
                         l363 1ADC                           l524 17FC                           l508 16B4  
                         l444 3DB2                           l436 3CB6                           l380 1AF6  
                         l364 186E                           l525 1800                           l509 16C0  
                         l445 3DBE                           l437 3CBA                           l381 1BEE  
                         l373 1A28                           l365 1872                           l526 180C  
                         l518 17CC                           l470 1276                           l446 3DC2  
                         l438 3CC6                           l358 4DDE                           l390 1CBC  
                         l382 1B7E                           l374 1A2C                           l366 196A  
                         l519 17D0                           l471 1282                           l463 1242  
                         l447 3DCE                           l439 3CCA                           l359 4DE8  
                         l383 1B88                           l375 1A38                           l367 18FA  
                         l480 138C                           l464 1246                           l448 3DD2  
                         l384 1B92                           l368 1904                           l720 4F4E  
                         l481 1390                           l465 1252                           l449 3DDE  
                         l393 1D76                           l385 1B9C                           l369 190E  
                         l490 149C                           l482 139C                           l474 135C  
                         l466 1256                           l394 1D7A                           l378 1D60  
                         l491 14A8                           l475 1360                           l467 1262  
                         l395 1E72                           l379 1AF2                           l731 5082  
                         l492 14AC                           l476 136C                           l468 1266  
                         l556 5C94                           l396 1E02                           l388 1CAC  
                         l493 14B8                           l485 1478                           l477 1370  
                         l469 1272                           l397 1E0C                           l389 1CB0  
                         l486 147C                           l478 137C                           l398 1E16  
                         l742 49BA                           l718 5086                           l487 1488  
                         l479 1380                           l399 1E20                           l496 1594  
                         l488 148C                           l752 4B28                           l497 1598  
                         l489 1498                           l569 5BA2                           l498 15A4  
                         l746 4A1E                           l499 15A8                           l749 4A9E  
                         l845 5C40                           l781 46A0                           l775 46DE  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           _abs 5C1E  
                         _asd 0221                           _dir 0222                           _cos 5698  
                         _jjj 0128                           _kkk 012C                           _msg 0144  
                         _sin 3E3A                           prod 000FF3                           wreg 000FE8  
                ___flmul@aexp 009D                  ___flmul@bexp 00A2               ?_configurazione 0001  
                ___flmul@sign 009C                  ___flmul@temp 00A7                  ___flmul@prod 00A3  
                __CFG_LVP$OFF 000000                  ___fltol@exp1 00CA                  __CFG_WDT$OFF 000000  
                        ?_abs 0077                          l1052 51D0                          l1045 5B64  
                        l1304 2BA4                          l1321 2D18                          l1305 2B98  
                        l1330 2DAC                          l1306 2B64                          l1407 32CE  
                        l1360 390A                          l1432 4B9E                          l1371 39B0  
                        l1363 38B2                          l1390 2F20                          l1446 4CA6  
                        l1447 4CBE                          l1439 4C4A                          l1288 4140  
                        l5001 103C                          l1369 3942                          l1457 5462  
                        l1397 31BC                          l1399 322A                          l5201 16F4  
                        l5105 13E6                          l5019 10F6                          l6011 2A74  
                        l5133 14BC                          l5037 11B0                          l6005 2A50  
                        ?_cos 01B0                          l5207 173A                          l5071 12CC  
                        l6023 2AA8                          l6015 2A7E                          l5065 1286  
                        l6201 2EE4                          l5235 1810                          l5139 1502  
                        l4523 1BA6                          l5243 5B94                          l6123 2D60  
                        l5173 161E                          l6117 2D4A                          l6133 2D80  
                        l6109 2CF8                          l6053 2AE4                          l6301 32F8  
                        l6213 2F34                          l5167 15D8                          l4543 1CA0  
                        l4447 1922                          l5255 5224                          l6311 50DE  
                        l6143 2DA6                          l6127 2D6C                          l6135 2D86  
                        l6071 2B88                          l6207 2F08                          l4625 1F44  
                        l4473 1A3C                          l5265 5272                          l5273 52E4  
                        l6161 2E36                          l6153 2E02                          l6081 2BC8  
                        l6065 2B78                          l6217 2F48                          l6209 2F0E  
                        l5099 13A0                          l5371 4DD6                          l4619 1F24  
                        l4467 1A1C                          l6315 512C                          l6091 2C0C  
                        l6067 2B7E                          l5373 4DEC                          l4549 1CC0  
                        l5269 52AA                          l6325 521C                          l6173 2E5A  
                        l6165 2E42                          l6157 2E14                          l6333 5BD6  
                        l6405 4C88                          l4831 5CA2                          l5391 5C68  
                        l6319 517E                          l6167 2E46                          l6095 2C16  
                        l6191 2EB4                          l6183 2E8A                          l6343 55B2  
                        l6407 4C98                          l7039 4B46                          l5377 4DF4  
                        l6513 38BE                          l6505 3886                          l6089 2C06  
                        l6265 31D0                          l6193 2EC6                          l4923 3DF2  
                        l5379 4E38                          l5387 5C56                          l6531 3956  
                        l6451 371E                          l6099 2C28                          l6291 32B4  
                        l6275 3224                          l6259 31A6                          l6371 5660  
                        l6363 5634                          l6419 4D10                          l6611 53C6  
                        l6603 5390                          l6541 39AA                          l6525 392C  
                        l6445 36FA                          l6285 327A                          l6189 2EAE  
                        l6373 566A                          l6429 5882                          l4599 1E2A  
                        l6551 3A00                          l6519 3906                          l6471 377C  
                        l6455 3728                          l6623 3330                          l6359 5620  
                        l6607 53A4                          l4865 3C0A                          l4849 3B54  
                        l6465 3758                          l6289 32A0                          l6721 473C  
                        l6801 42DE                          l6377 5686                          l6369 5650  
                        l6393 4BD6                          l4947 0E10                          l4891 3CDA  
                        l6555 3A2E                          l6475 3786                          l6299 32EE  
                        l6707 36BC                          l6643 33AE                          l6635 337C  
                        l6395 4BDE                          l6387 4BAE                          l7099 5AE2  
                        l4965 0EC8                          l6565 3A74                          l6557 3A42  
                        l6741 491C                          l6725 47B0                          l6637 338E  
                        l6813 43C0                          l6397 4BEE                          l4983 0F82  
                        l6567 3A78                          l6559 3A64                          l6495 3808  
                        l6487 37DA                          l6591 556E                          l6663 3420  
                        l6655 33F0                          l6399 4C2C                          l4897 3D20  
                        l6737 4904                          l6681 356A                          l6673 34A2  
                        l6753 3E70                          l6675 34AA                          l6923 4EFE  
                        l6915 4EEA                          l5981 29E2                          l6589 54CA  
                        l6765 3F9A                          l6829 5720                          l6941 4FBC  
                        l5991 2A10                          l6679 3530                          l6687 35A6  
                        l6935 4FAC                          l6769 4010                          l6865 46BC  
                        l6945 4FF4                          l5987 2A06                          l6699 3686  
                        l6859 4662                          l6867 46C2                          ?_sin 0197  
                        l6789 41B0                          l5999 2A3C                          l6969 4944  
                        l6999 4A22                          _LATA 000F89                          _LATB 000F8A  
                        _LATC 000F8B                          u5005 1C72                          u5110 1E4A  
                        u5120 1E96                          u5115 1E3E                          u5125 1E8A  
                        u5135 1EF6                          u6300 1714                          u6220 15F8  
                        u6140 14DC                          u6060 13C0                          u6305 1708  
                        u6225 15EC                          u6145 14D0                          u6065 13B4  
                        u5505 3BE6                          u5450 3AD0                          u5455 3AC4  
                        u5705 0DEC                          u5465 3B30                          u5810 0FB8  
                        u5730 0E44                          u5490 3B86                          u4850 1942  
                        u6380 1830                          u5660 3E12                          u5580 3CFA  
                        u4860 198E                          u8300 3A14                          u5815 0FAC  
                        u5735 0E38                          u5495 3B7A                          u4855 1936  
                        u9007 5B96                          u7360 2B2E                          u6385 1824  
                        u5905 118C                          u5825 1018                          u5745 0EA4  
                        u5665 3E06                          u5585 3CEE                          u4865 1982  
                        u5850 1072                          u5770 0EFE                          u5690 0D8C  
                        u7370 2B46                          u8090 58B4                          u4875 19EE  
                        u4980 1BC6                          u7380 2B48                          u4990 1C12  
                        u8510 476C                          u5855 1066                          u5775 0EF2  
                        u5695 0D80                          u8520 476E                          u5865 10D2  
                        u5785 0F5E                          u4985 1BBA                          u5890 112C  
                        u8098 58B8                          u8370 53B4                          u4995 1C06  
                        u5980 12A6                          u7820 328E                          u7740 3148  
                        u5895 1120                          u7920 55D2                          u8720 46BA  
                        u5985 129A                          u7745 313C                          u8580 3F94  
                        u7925 55C6                          u8590 3F96                          u8830 5008  
                        u8671 44F6                          u8760 4EFA                          u8681 4502  
                        u8890 49CE           __size_of_CANSetMask 039E                          abs@a 0077  
                        _alfa 011C                          _fabs 5B38                          _data 0153  
                        _beta 0120                          _atan 46F0                          _asin 4152  
                        _main 5AA4                          _asus 0041                          cos@f 01B0  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          indf1 000FE7                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          btemp 0048  
                        _sqrt 3312                          pclat 000FFA                          sin@f 0197  
                        sin@y 019B                          prodh 000FF4                          prodl 000FF3  
                        start 0258                 __CFG_IESO$OFF 000000               ___fldiv@new_exp 0088  
              delay_s@value_s 007F                 __CFG_MCLRE$ON 000000                  ___param_bank 000000  
            _CANOperationMode 5C9A                         ??_abs 0079                         ??_cos 00D7  
                       ??_sin 00D7    __size_of_CANreceiveMessage 050C                         ?_fabs 00AD  
               ___fltol@sign1 00C9                         ?_atan 00D1                         ?_asin 0198  
             __end_of___fladd 2E6C                         ?_main 0001               __end_of___fldiv 3A9C  
             __end_of___flneg 5BE8               __end_of___flmul 3312               __end_of___flsub 5B38  
             __end_of___fltol 5698                         ?_sqrt 00C1                         _T0CON 000FD5  
                       _T3CON 000FB1            __size_of_ISR_Bassa 0240               __end_of___lwdiv 59E4  
                       i1l410 227C                         i1l702 018C                         i1l705 020C  
                       i1l709 0210                         i1l695 009A                         i2l688 57BE  
                       _TMR0H 000FD7                         _TMR0L 000FD6                         _TMR3H 000FB3  
                       _TMR3L 000FB2                         _PORTA 000F80                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94            __end_ofsin@coeff_a 0D41  
          __end_ofsin@coeff_b 0D51                 __CFG_PWRT$OFF 000000              __end_of_ISR_Alta 585C  
             __end_of_delay_s 5C76                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000            CANInitialize@flags 0089  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000  
               __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000  
                       _bordo 0124                         fabs@d 00AD                         _floor 5350  
                       _frexp 585C                         _errno 0142                         atan@f 00D1  
                       atan@x 0187                         atan@y 0183                         asin@x 0198  
                       asin@y 01A8      can_send@data_correction1 0087                __pbitbssCOMRAM 0220  
                       sin@x2 01A3                         tablat 000FF5          __end_of_CANisTxReady 5C9A  
                       sqrt@a 00C1                         sqrt@i 0184                         sqrt@p 0189  
                       status 000FD8                  ?_park_search 0001               __initialization 58F0  
                __end_of_fabs 5B76                  __end_of_atan 4942                  __end_of_asin 4464  
                __end_of_main 5AF0                  __end_of_sqrt 36DC                        ??_fabs 00B1  
                      ??_atan 00D5                        ??_asin 00D5                        ??_main 00D7  
                      ??_sqrt 00C5                 __activetblptr 000003             _CANisTxReady$2845 0077  
                      _ADCON1 000FC1                        ?_floor 00D3                        ?_frexp 0077  
                      _CANCON 000F6F            _distance_received1 0225               __CFG_BBSIZ$1024 000000  
           _spazio_parcheggio 0046                        i2l1252 59DA                        i1l5601 24BA  
                      i1l5603 24EC                        i1l5531 2208                        i1l5523 21CC  
                      i1l5515 215C                        i1l5541 2276                        i1l5535 2226  
                      i1l5527 21EA                        i1l5539 2244                        i1l5903 0168  
                      i1l5593 2482                        i1l5585 244A                        i1l5577 23DC  
                      i1l5921 01CE                        i1l5597 249E                        i1l5589 2466  
                      i1l5917 01C6                        i1l5909 0196                        i1l5927 01F6  
                      i1l5847 008C                        i1l5881 00D6                        i1l5877 00CE  
                      i2l7051 598A                        i2l7053 5996                        i2l7063 59CC  
                      i2l7055 599C                        i2l7083 581E                        _RXB0D0 000F66  
                      _RXB0D1 000F67                        _RXB0D2 000F68                        _RXB0D3 000F69  
                      _RXB0D4 000F6A                        _RXB1D0 000F56                        _RXB0D5 000F6B  
                      _RXB1D1 000F57                        _RXB0D6 000F6C                        _RXB1D2 000F58  
                      _RXB0D7 000F6D                        _RXB1D3 000F59                        _RXB1D4 000F5A  
                      _RXB1D5 000F5B                        _RXB1D6 000F5C                        _RXB1D7 000F5D  
                      _TXB0D0 000F46                        _TXB0D1 000F47                        _TXB0D2 000F48  
                      _TXB0D3 000F49                        _TXB1D0 000F36                        _TXB0D4 000F4A  
                      _TXB1D1 000F37                        _TXB0D5 000F4B                        _TXB1D2 000F38  
                      _TXB0D6 000F4C                        _TXB1D3 000F39                        _TXB0D7 000F4D  
                      _TXB2D0 000F26                        _TXB1D4 000F3A                        _TXB2D1 000F27  
                      _TXB1D5 000F3B                        _TXB2D2 000F28                        _TXB1D6 000F3C  
                      _TXB2D3 000F29                        _TXB1D7 000F3D                        _TXB2D4 000F2A  
                      _TXB2D5 000F2B                        _TXB2D6 000F2C                        _TXB2D7 000F2D  
          CANsendMessage@data 007B              __end_of_can_send 5350            CANsendMessage@tamp 0083  
            __end_of___xxtofl 4D22             __end_of_ISR_Bassa 0258              __end_of_delay_ms 5BB0  
       __size_of_CANSetFilter 0B06                __CFG_XINST$OFF 000000                        ___flge 5090  
             _data_correction 0163                     ??___fladd 00B5                        ___wmul 5BE8  
                   ??___fldiv 007F                     ??___flneg 00AD                __CFG_STVREN$ON 000000  
                   ??___flmul 0098                     ??___flsub 00D7                     ??___fltol 00C5  
                   ??___lwdiv 0064                  ??_CANSetMask 007C                        _gianni 0042  
                      _raggio 01DC                        clear_0 58F6                        clear_1 5902  
                      clear_2 5912                     ??_delay_s 007F                        floor@i 0189  
                      floor@x 00D3               __CFG_BOREN$BOHW 000000                  __pdataCOMRAM 0046  
                      sin@sgn 01A7                  __mediumconst 0000                        tblptrh 000FF7  
                      tblptrl 000FF6                        tblptru 000FF8                  _CANSetFilter 0D52  
                  ___flge@ff1 00B1                    ___flge@ff2 00B5                  ___xxtofl@arg 0185  
                ___xxtofl@exp 0184                  ___xxtofl@val 00CB                    __accesstop 0060  
     __end_of__initialization 5962            __end_of_CANSetMask 3E3A               __CFG_PBADEN$OFF 000000  
                  ___flneg@f1 00A9                 ?_park_routine 0001                  eval_poly@res 00CD  
               ___rparam_used 000000                    ___fltol@f1 00C1                __pcstackCOMRAM 0001  
                   ?_ISR_Alta 0001                  __pidataBANK0 5CBA                  __pidataBANK1 5CB0  
               __end_of_floor 5474                 __end_of_frexp 58F0              ??_configurazione 0091  
       CANSetFilter@numBuffer 0080                  _actual_speed 00DF         __size_of_CANisTxReady 0024  
                     ??_floor 00D7                       ??_frexp 007D      __end_of_CANOperationMode 5CB0  
                  __pbssBANK0 00D7                    __pbssBANK1 0100               _sensor_distance 0024  
          __size_of_eval_poly 0118                    _data_brake 015B                ??_park_routine 00D7  
               ISR_Bassa@gigi 0022       __size_of_CANsendMessage 078C                    _data_speed 016B  
                  _activation 0220      __size_of_can_interpreter 0054            __size_of_parallelo 028C  
        __size_of_park_search 01A8             _old_alignment_gap 0134                    ??_ISR_Alta 0067  
                     ?___flge 00B1                       ?___wmul 0077                       _CANSTAT 000F6E  
                _CANisTxReady 5C76                       _BRGCON1 000F70                       _BRGCON2 000F71  
                     _BRGCON3 000F72                     ?_can_send 0001                     ?___xxtofl 00CB  
      __size_of_CANInitialize 01C6                     ?_delay_ms 007D                       _RXB0DLC 000F65  
                     _RXB1DLC 000F55                       _RXB0CON 000F60                       _RXB1CON 000F50  
                     _TXB0DLC 000F45                       _TXB1DLC 000F35                       _TXB2DLC 000F25  
         CANsendMessage@flags 007E                       __Hparam 0000                    _left_speed 0038  
                     __Lparam 0000              delay_ms@value_ms 007D                       _Pminimo 0118  
             __size_of___flge 0190                    _matematica 24F0                       ___fladd 29C4  
                     ___fldiv 36DC                       ___flneg 5BB0                       ___flmul 2E6C  
                     ___flsub 5AF0                       ___fltol 558C               __size_of___wmul 0036  
                     ___lwdiv 596C                  __psmallconst 0D00          CANInitialize@propSeg 008E  
                     __pcinit 58F0             __end_of_eval_poly 558C                       _delay_s 5C4A  
                     __ramtop 0D00                       __ptext0 5AA4                       __ptext1 4EE8  
                     __ptext2 4464                       __ptext3 5C1E                       __ptext4 4942  
                     __ptext5 24F0                       __ptext6 5698                       __ptext7 3E3A  
                     __ptext8 5350                       __ptext9 585C                     _T0CONbits 000FD5  
                  ??_can_send 0087                  __size_of_abs 002C                  __size_of_cos 00E4  
             atan@val_squared 018C                  __size_of_sin 0318                    ??___xxtofl 00CF  
                     atan@val 0190             __end_of_parallelo 46F0                    ??_delay_ms 007F  
                     asin@sgn 019C        CANreceiveMessage@error 000B               _start_operation 022A  
              __pintcode_body 577C          end_of_initialization 5962                       int_func 577C  
               _CANInitialize 4D22                     _ISR_Bassa 0018                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc2 000FDE  
                     sqrt@grs 018A                       sqrt@exp 018E             ??_can_interpreter 0077  
     _steering_correction_dir 022B                     _PORTBbits 000F81                CANSetMask@mask 0077  
              CANSetMask@tamp 0081                  _distance_set 0110                CANSetMask@type 007B  
        __end_of_park_routine 4B54                   ___fladd@grs 00C0                 ___xxtofl@sign 0183  
                   _TRISBbits 000F93                   ___fldiv@grs 008A                   ___fldiv@rem 0084  
                   _MUX_index 0040                    _pulse_time 003A       _clock_counter_reference 00E1  
                 ___flmul@grs 009E                _CANsendMessage 1858              CANInitialize@BRP 0088  
            CANInitialize@SJW 0087                ?_CANInitialize 0085                    ?_ISR_Bassa 0001  
                 ?_matematica 0001                __end_of___flge 5220             __size_of_ISR_Alta 5854  
              __end_of___wmul 5C1E                 __pidataCOMRAM 5CB8                    floor@expon 018D  
         start_initialization 58F0                    eval_poly@d 00C5                    eval_poly@n 00C7  
                  eval_poly@x 00C1                   __end_of_abs 5C4A                   __end_of_cos 577C  
                 __end_of_sin 4152           CANSetMask@numBuffer 0080                 _data_speed_rx 0108  
      __end_of_CANsendMessage 1FE4             ?_CANOperationMode 0001                 _data_steering 0173  
                  frexp@value 0077            ??_CANOperationMode 0077             _distance_received 0224  
  CANInitialize@FilterConfig1 008F    CANInitialize@FilterConfig2 0090           _steering_correction 0043  
                    ??___flge 00B9                      ??___wmul 007B                   __pdataBANK0 00E7  
                 __pdataBANK1 01D8              __CFG_LPT1OSC$OFF 000000                     ___fladd@a 00B1  
                   ___fladd@b 00AD        CANInitialize@phaseSeg1 0085        CANInitialize@phaseSeg2 0086  
                   ___fldiv@a 007B                     ___fldiv@b 0077                     ___flmul@a 0094  
                   ___flmul@b 0090                   __pbssCOMRAM 0024                     ___flsub@a 0193  
                   ___flsub@b 018F                 __pcstackBANK0 0060                 __pcstackBANK1 0183  
                 _BRGCON2bits 000F71                   _BRGCON3bits 000F72             __size_of_can_send 0130  
           __size_of___xxtofl 01CE             __size_of_delay_ms 003A               ?_CANsendMessage 0077  
         __size_of_matematica 04D4               ??_CANInitialize 008A                     _asin$3746 01AC  
                   _asin$3747 01A4                     _asin$3748 01A0                    sin@coeff_a 0D2D  
                  sin@coeff_b 0D41                 ??_park_search 01B0                 _alignment_gap 00D7  
          CANSetFilter@filter 0077                     _data_test 017B              ___lwdiv@dividend 0060  
                  ISR_Bassa@i 0023                   ??_ISR_Bassa 000D                     __pintcode 0008  
                    ?___fladd 00AD                      ?___fldiv 0077                      ?___flneg 00A9  
                    ?___flmul 0090                      ?___flsub 018F                      ?___fltol 00C1  
       __size_of_park_routine 0212                      ?___lwdiv 0060                   __pintcodelo 0018  
                    ?_delay_s 0001                   __smallconst 0D00                   _COMSTATbits 000F74  
                   _eval_poly 5474                     _larghezza 01D8              ___lwdiv@quotient 0065  
              __size_of_floor 0124                __size_of_frexp 0094       __size_of_configurazione 006C  
                   _parallelo 4464         CANreceiveMessage@tamp 000C                _prima_sterzata 0138  
              ___wmul@product 007B                      _LATBbits 000F8A               _can_interpreter 5A50  
                   atan@recip 018B                  _park_routine 4942  _delay_quartz_frequency_value 00E7  
                    _IPR3bits 000FA5                      _PIE3bits 000FA3                      i1u901_27 00BC  
                    i1u670_25 20E0                      i1u681_25 2362                      i1u667_20 209C  
                    i1u667_26 209E                      i1u668_20 20CA                      i1u676_25 2250  
                    i1u668_26 20CC                      _PIR3bits 000FA4                      i1u678_20 2324  
                    i1u678_26 2326                      i1u679_20 234E                      i1u687_25 24C6  
                    i1u679_26 2350                      _RXB0EIDH 000F63                      _RXB0EIDL 000F64  
                    _RXB1EIDH 000F53                      _RXB1EIDL 000F54                      _ISR_Alta 0008  
                   _set_speed 00E5                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
                    _RXB0SIDH 000F61                      _RXB0SIDL 000F62                      _RXF0EIDH 000F02  
                    _RXB1SIDH 000F51                      _RXF0EIDL 000F03                      _RXB1SIDL 000F52  
                    _RXF1EIDH 000F06                      _RXF1EIDL 000F07                      _RXF2EIDH 000F0A  
                    _RXF2EIDL 000F0B                      _RXF3EIDH 000F0E                      _RXF3EIDL 000F0F  
                    _RXF4EIDH 000F12                      _RXF4EIDL 000F13                      _RXF5EIDH 000F16  
                    _RXF5EIDL 000F17                      _RXF0SIDH 000F00                      _RXF0SIDL 000F01  
         __end_of_park_search 5090                      _TXB0EIDH 000F43                      _RXF1SIDH 000F04  
                    _TXB0EIDL 000F44                      _RXF1SIDL 000F05                      _TXB1EIDH 000F33  
                    _RXF2SIDH 000F08                      _TXB1EIDL 000F34                      _RXF2SIDL 000F09  
                    _TXB2EIDH 000F23                      _RXF3SIDH 000F0C                      _TXB2EIDL 000F24  
                    _RXF3SIDL 000F0D                      _RXF4SIDH 000F10                      _RXF4SIDL 000F11  
                    _RXF5SIDH 000F14                      _RXF5SIDL 000F15                      _RXM0EIDH 000F1A  
                    _RXM0EIDL 000F1B                      _TXB0SIDH 000F41                      _RXM1EIDH 000F1E  
                    _TXB0SIDL 000F42                      _RXM1EIDL 000F1F                      _TXB1SIDH 000F31  
                    _TXB1SIDL 000F32                      _TXB2SIDH 000F21                      _TXB2SIDL 000F22  
                    _RXM0SIDH 000F18                      _RXM0SIDL 000F19                      _RXM1SIDH 000F1C  
                    _RXM1SIDL 000F1D                   _distance_dx 0034                   _distance_sx 0036  
                    _RXERRCNT 000F75                      _TXERRCNT 000F76             ___wmul@multiplier 0077  
                  ?_eval_poly 00C1           __end_ofatan@coeff_a 0D19           __end_ofatan@coeff_b 0D2D  
               ?_CANSetFilter 0077                   _INTCON2bits 000FF1                     copy_data0 592C  
                  _CANCONbits 000F6F                    ?_parallelo 0001              _distance_average 00E3  
                   frexp@eptr 007B                      __Hparam0 0000                      __Lparam0 0000  
                _RXB0SIDLbits 000F62                  _RXB1SIDLbits 000F52                  ??_matematica 00D7  
               _request_sent1 0229              __size_of___fladd 04A8                    _CANSetMask 3A9C  
            __size_of___fldiv 03C0              __size_of___flneg 0038              __size_of___flmul 04A6  
            __size_of___flsub 0048              __size_of___fltol 010C                      _cos$3749 01B4  
            __size_of___lwdiv 0078              __size_of_delay_s 002C                      _can_send 5220  
                    ___xxtofl 4B54                  _RXF0SIDLbits 000F01                      _delay_ms 5B76  
             ___lwdiv@divisor 0062                  _RXF1SIDLbits 000F05               ___lwdiv@counter 0064  
              ??_CANSetFilter 007C                      __ptext10 4B54                      __ptext11 558C  
                    __ptext20 29C4                      __ptext12 5AF0                      __ptext21 5090  
                    __ptext13 4152                      __ptext30 4D22                      __ptext22 36DC  
                    __ptext14 3312                      __ptext31 3A9C                      __ptext23 5C4A  
                    __ptext15 46F0                      __ptext32 0D52                      __ptext24 5B76  
                    __ptext16 5B38                      __ptext33 5C9A                      __ptext25 5BE8  
                    __ptext17 5BB0                      __ptext34 5A50                      __ptext26 5220  
                    __ptext18 5474                      __ptext27 1858                      __ptext19 2E6C  
                    __ptext36 1FE4                      __ptext28 5C76                      __ptext29 59E4  
                    __ptext38 596C                  _RXF2SIDLbits 000F09                      _sin$3750 019F  
     __end_of_can_interpreter 5AA4                  _RXF3SIDLbits 000F0D                      _distance 0140  
          __end_of_matematica 29C4                  _RXF4SIDLbits 000F11                  _RXF5SIDLbits 000F15  
    CANsendMessage@dataLength 007D                 __size_of_fabs 003E                 __size_of_atan 0252  
               __size_of_asin 0312                 __size_of_main 004C                 __size_of_sqrt 03CA  
                 _park_search 4EE8          CANreceiveMessage@msg 0001                  _TXB0SIDLbits 000F42  
                _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22                      int$flags 0048  
   __size_of_CANOperationMode 0016                 ?_CANisTxReady 0001                   atan@coeff_a 0D01  
                 atan@coeff_b 0D19                   _RXB0DLCbits 000F65                   _RXB1DLCbits 000F55  
                _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60                   _RXB1CONbits 000F50  
           _CANreceiveMessage 1FE4                  _RXM1SIDLbits 000F1D                    _INTCONbits 000FF2  
                 ??_eval_poly 00C9              ??_CANsendMessage 007F            ?_CANreceiveMessage 0001  
                _request_sent 0228                     sqrt@tfrac 0185                _configurazione 59E4  
    CANsendMessage@identifier 0077                   ??_parallelo 00D5                      intlevel1 0000  
                    intlevel2 0000              CANSetFilter@tamp 0081              CANSetFilter@type 007B  
         ??_CANreceiveMessage 0003           _old_data_correction 0227                   _TXB0DLCbits 000F45  
                 _right_speed 003C                   _TXB1DLCbits 000F35                   _TXB0CONbits 000F40  
                 _TXB2DLCbits 000F25                   _TXB1CONbits 000F30                   _TXB2CONbits 000F20  
        CANOperationMode@mode 0077                   ?_CANSetMask 0077                ??_CANisTxReady 0077  
              _distance_error 0223               _matematica$3740 01C0               _matematica$3741 01C4  
             _matematica$3742 01C8               _matematica$3743 01CC               _matematica$3744 01D0  
             _matematica$3745 01D4               _matematica$3738 01B8               _matematica$3739 01BC  
   __end_of_CANreceiveMessage 24F0                      sqrt@frac 0194                      sqrt@sign 0183  
                    sqrt@root 0190                   _timerValue2 003E        __end_of_configurazione 5A50  
               ___fladd@signs 00BD                 _distance_wait 0226              ?_can_interpreter 0001  
                ___fladd@aexp 00BE                  ___fladd@bexp 00BF         __end_of_CANInitialize 4EE8  
