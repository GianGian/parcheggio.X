

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat May 07 22:08:29 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    59                           	psect	param0,global,class=BANK0,space=1,delta=1
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61  0000                     
    62                           	psect	idataBANK0
    63  005FC4                     __pidataBANK0:
    64                           	opt stack 0
    65                           
    66                           ;initializer for _delay_quartz_frequency_value
    67  005FC4  10                 	db	16
    68                           
    69                           	psect	idataBANK1
    70  005FBA                     __pidataBANK1:
    71                           	opt stack 0
    72                           
    73                           ;initializer for _larghezza
    74  005FBA  0000               	dw	0
    75  005FBC  4200               	dw	16896
    76                           
    77                           ;initializer for _spazio_parcheggio
    78  005FBE  0064               	dw	100
    79                           
    80                           ;initializer for _raggio
    81  005FC0  0000               	dw	0
    82  005FC2  424C               	dw	16972
    83                           
    84                           	psect	smallconst
    85  000D00                     __psmallconst:
    86                           	opt stack 0
    87  000D00  00                 	db	0
    88  000D01                     atan@coeff_a:
    89                           	opt stack 0
    90  000D01  3C06               	dw	15366
    91  000D03  4204               	dw	16900
    92  000D05  9F7D               	dw	40829
    93  000D07  426A               	dw	17002
    94  000D09  905C               	dw	36956
    95  000D0B  4201               	dw	16897
    96  000D0D  4D60               	dw	19808
    97  000D0F  40BB               	dw	16571
    98  000D11  EC51               	dw	60497
    99  000D13  3E47               	dw	15943
   100  000D15  8DDE               	dw	36318
   101  000D17  BB1F               	dw	47903
   102  000D19                     __end_ofatan@coeff_a:
   103                           	opt stack 0
   104  000D19                     atan@coeff_b:
   105                           	opt stack 0
   106  000D19  3C06               	dw	15366
   107  000D1B  4204               	dw	16900
   108  000D1D  59C0               	dw	22976
   109  000D1F  428B               	dw	17035
   110  000D21  0474               	dw	1140
   111  000D23  4244               	dw	16964
   112  000D25  9BF9               	dw	39929
   113  000D27  414F               	dw	16719
   114  000D29  0000               	dw	0
   115  000D2B  3F80               	dw	16256
   116  000D2D                     __end_ofatan@coeff_b:
   117                           	opt stack 0
   118  000D2D                     sin@coeff_a:
   119                           	opt stack 0
   120  000D2D  F3EC               	dw	62444
   121  000D2F  484A               	dw	18506
   122  000D31  9535               	dw	38197
   123  000D33  C795               	dw	51093
   124  000D35  C117               	dw	49431
   125  000D37  45DC               	dw	17884
   126  000D39  DBFD               	dw	56317
   127  000D3B  C36D               	dw	50029
   128  000D3D  B372               	dw	45938
   129  000D3F  4033               	dw	16435
   130  000D41                     __end_ofsin@coeff_a:
   131                           	opt stack 0
   132  000D41                     sin@coeff_b:
   133                           	opt stack 0
   134  000D41  342B               	dw	13355
   135  000D43  4801               	dw	18433
   136  000D45  9D7F               	dw	40319
   137  000D47  45B0               	dw	17840
   138  000D49  FFE7               	dw	65511
   139  000D4B  42D9               	dw	17113
   140  000D4D  0000               	dw	0
   141  000D4F  3F80               	dw	16256
   142  000D51                     __end_ofsin@coeff_b:
   143                           	opt stack 0
   144  0000                     _RXB1CON	set	3920
   145  0000                     _RXB1CONbits	set	3920
   146  0000                     _RXB1D0	set	3926
   147  0000                     _RXB1D1	set	3927
   148  0000                     _RXB1D2	set	3928
   149  0000                     _RXB1D3	set	3929
   150  0000                     _RXB1D4	set	3930
   151  0000                     _RXB1D5	set	3931
   152  0000                     _RXB1D6	set	3932
   153  0000                     _RXB1D7	set	3933
   154  0000                     _RXB1DLC	set	3925
   155  0000                     _RXB1DLCbits	set	3925
   156  0000                     _RXB1EIDH	set	3923
   157  0000                     _RXB1EIDL	set	3924
   158  0000                     _RXB1SIDH	set	3921
   159  0000                     _RXB1SIDL	set	3922
   160  0000                     _RXB1SIDLbits	set	3922
   161  0000                     _RXF0EIDH	set	3842
   162  0000                     _RXF0EIDL	set	3843
   163  0000                     _RXF0SIDH	set	3840
   164  0000                     _RXF0SIDL	set	3841
   165  0000                     _RXF0SIDLbits	set	3841
   166  0000                     _RXF1EIDH	set	3846
   167  0000                     _RXF1EIDL	set	3847
   168  0000                     _RXF1SIDH	set	3844
   169  0000                     _RXF1SIDL	set	3845
   170  0000                     _RXF1SIDLbits	set	3845
   171  0000                     _RXF2EIDH	set	3850
   172  0000                     _RXF2EIDL	set	3851
   173  0000                     _RXF2SIDH	set	3848
   174  0000                     _RXF2SIDL	set	3849
   175  0000                     _RXF2SIDLbits	set	3849
   176  0000                     _RXF3EIDH	set	3854
   177  0000                     _RXF3EIDL	set	3855
   178  0000                     _RXF3SIDH	set	3852
   179  0000                     _RXF3SIDL	set	3853
   180  0000                     _RXF3SIDLbits	set	3853
   181  0000                     _RXF4EIDH	set	3858
   182  0000                     _RXF4EIDL	set	3859
   183  0000                     _RXF4SIDH	set	3856
   184  0000                     _RXF4SIDL	set	3857
   185  0000                     _RXF4SIDLbits	set	3857
   186  0000                     _RXF5EIDH	set	3862
   187  0000                     _RXF5EIDL	set	3863
   188  0000                     _RXF5SIDH	set	3860
   189  0000                     _RXF5SIDL	set	3861
   190  0000                     _RXF5SIDLbits	set	3861
   191  0000                     _RXM0EIDH	set	3866
   192  0000                     _RXM0EIDL	set	3867
   193  0000                     _RXM0SIDH	set	3864
   194  0000                     _RXM0SIDL	set	3865
   195  0000                     _RXM0SIDLbits	set	3865
   196  0000                     _RXM1EIDH	set	3870
   197  0000                     _RXM1EIDL	set	3871
   198  0000                     _RXM1SIDH	set	3868
   199  0000                     _RXM1SIDL	set	3869
   200  0000                     _RXM1SIDLbits	set	3869
   201  0000                     _TXB0CONbits	set	3904
   202  0000                     _TXB0D0	set	3910
   203  0000                     _TXB0D1	set	3911
   204  0000                     _TXB0D2	set	3912
   205  0000                     _TXB0D3	set	3913
   206  0000                     _TXB0D4	set	3914
   207  0000                     _TXB0D5	set	3915
   208  0000                     _TXB0D6	set	3916
   209  0000                     _TXB0D7	set	3917
   210  0000                     _TXB0DLC	set	3909
   211  0000                     _TXB0DLCbits	set	3909
   212  0000                     _TXB0EIDH	set	3907
   213  0000                     _TXB0EIDL	set	3908
   214  0000                     _TXB0SIDH	set	3905
   215  0000                     _TXB0SIDL	set	3906
   216  0000                     _TXB0SIDLbits	set	3906
   217  0000                     _TXB1CONbits	set	3888
   218  0000                     _TXB1D0	set	3894
   219  0000                     _TXB1D1	set	3895
   220  0000                     _TXB1D2	set	3896
   221  0000                     _TXB1D3	set	3897
   222  0000                     _TXB1D4	set	3898
   223  0000                     _TXB1D5	set	3899
   224  0000                     _TXB1D6	set	3900
   225  0000                     _TXB1D7	set	3901
   226  0000                     _TXB1DLC	set	3893
   227  0000                     _TXB1DLCbits	set	3893
   228  0000                     _TXB1EIDH	set	3891
   229  0000                     _TXB1EIDL	set	3892
   230  0000                     _TXB1SIDH	set	3889
   231  0000                     _TXB1SIDL	set	3890
   232  0000                     _TXB1SIDLbits	set	3890
   233  0000                     _TXB2CONbits	set	3872
   234  0000                     _TXB2D0	set	3878
   235  0000                     _TXB2D1	set	3879
   236  0000                     _TXB2D2	set	3880
   237  0000                     _TXB2D3	set	3881
   238  0000                     _TXB2D4	set	3882
   239  0000                     _TXB2D5	set	3883
   240  0000                     _TXB2D6	set	3884
   241  0000                     _TXB2D7	set	3885
   242  0000                     _TXB2DLC	set	3877
   243  0000                     _TXB2DLCbits	set	3877
   244  0000                     _TXB2EIDH	set	3875
   245  0000                     _TXB2EIDL	set	3876
   246  0000                     _TXB2SIDH	set	3873
   247  0000                     _TXB2SIDL	set	3874
   248  0000                     _TXB2SIDLbits	set	3874
   249  0000                     _ADCON1	set	4033
   250  0000                     _BRGCON1	set	3952
   251  0000                     _BRGCON2	set	3953
   252  0000                     _BRGCON2bits	set	3953
   253  0000                     _BRGCON3	set	3954
   254  0000                     _BRGCON3bits	set	3954
   255  0000                     _CANCON	set	3951
   256  0000                     _CANCONbits	set	3951
   257  0000                     _CANSTAT	set	3950
   258  0000                     _COMSTATbits	set	3956
   259  0000                     _INTCON2bits	set	4081
   260  0000                     _INTCONbits	set	4082
   261  0000                     _IPR3bits	set	4005
   262  0000                     _LATA	set	3977
   263  0000                     _LATB	set	3978
   264  0000                     _LATBbits	set	3978
   265  0000                     _LATC	set	3979
   266  0000                     _PIE3bits	set	4003
   267  0000                     _PIR3bits	set	4004
   268  0000                     _PORTA	set	3968
   269  0000                     _PORTBbits	set	3969
   270  0000                     _RCONbits	set	4048
   271  0000                     _RXB0CON	set	3936
   272  0000                     _RXB0CONbits	set	3936
   273  0000                     _RXB0D0	set	3942
   274  0000                     _RXB0D1	set	3943
   275  0000                     _RXB0D2	set	3944
   276  0000                     _RXB0D3	set	3945
   277  0000                     _RXB0D4	set	3946
   278  0000                     _RXB0D5	set	3947
   279  0000                     _RXB0D6	set	3948
   280  0000                     _RXB0D7	set	3949
   281  0000                     _RXB0DLC	set	3941
   282  0000                     _RXB0DLCbits	set	3941
   283  0000                     _RXB0EIDH	set	3939
   284  0000                     _RXB0EIDL	set	3940
   285  0000                     _RXB0SIDH	set	3937
   286  0000                     _RXB0SIDL	set	3938
   287  0000                     _RXB0SIDLbits	set	3938
   288  0000                     _RXERRCNT	set	3957
   289  0000                     _T0CON	set	4053
   290  0000                     _T0CONbits	set	4053
   291  0000                     _T3CON	set	4017
   292  0000                     _TMR0H	set	4055
   293  0000                     _TMR0L	set	4054
   294  0000                     _TMR3H	set	4019
   295  0000                     _TMR3L	set	4018
   296  0000                     _TRISA	set	3986
   297  0000                     _TRISB	set	3987
   298  0000                     _TRISBbits	set	3987
   299  0000                     _TRISC	set	3988
   300  0000                     _TXERRCNT	set	3958
   301                           
   302                           ; #config settings
   303  000D51  00                 	db	0	; dummy byte at the end
   304  0000                     
   305                           	psect	cinit
   306  005CFA                     __pcinit:
   307                           	opt stack 0
   308  005CFA                     start_initialization:
   309                           	opt stack 0
   310  005CFA                     __initialization:
   311                           	opt stack 0
   312                           
   313                           ; Clear objects allocated to BANK1 (141 bytes)
   314  005CFA  EE01  F000         	lfsr	0,__pbssBANK1
   315  005CFE  0E8D               	movlw	141
   316  005D00                     clear_0:
   317  005D00  6AEE               	clrf	postinc0,c
   318  005D02  06E8               	decf	wreg,f,c
   319  005D04  E1FD               	bnz	clear_0
   320                           
   321                           ; Clear objects allocated to BANK0 (4 bytes)
   322  005D06  0100               	movlb	0
   323  005D08  6BE7               	clrf	(__pbssBANK0+3)& (0+255),b
   324  005D0A  6BE6               	clrf	(__pbssBANK0+2)& (0+255),b
   325  005D0C  6BE5               	clrf	(__pbssBANK0+1)& (0+255),b
   326  005D0E  6BE4               	clrf	__pbssBANK0& (0+255),b
   327                           
   328                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   329  005D10  6A47               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   330  005D12  6A46               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   331                           
   332                           ; Clear objects allocated to COMRAM (34 bytes)
   333  005D14  EE00  F024         	lfsr	0,__pbssCOMRAM
   334  005D18  0E22               	movlw	34
   335  005D1A                     clear_1:
   336  005D1A  6AEE               	clrf	postinc0,c
   337  005D1C  06E8               	decf	wreg,f,c
   338  005D1E  E1FD               	bnz	clear_1
   339                           
   340                           ; Initialize objects allocated to BANK1 (10 bytes)
   341                           ; load TBLPTR registers with __pidataBANK1
   342  005D20  0EBA               	movlw	low __pidataBANK1
   343  005D22  6EF6               	movwf	tblptrl,c
   344  005D24  0E5F               	movlw	high __pidataBANK1
   345  005D26  6EF7               	movwf	tblptrh,c
   346  005D28  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   347  005D2A  6EF8               	movwf	tblptru,c
   348  005D2C  EE01  F0E2         	lfsr	0,__pdataBANK1
   349  005D30  EE10 F00A          	lfsr	1,10
   350  005D34                     copy_data0:
   351  005D34  0009               	tblrd		*+
   352  005D36  CFF5 FFEE          	movff	tablat,postinc0
   353  005D3A  50E5               	movf	postdec1,w,c
   354  005D3C  50E1               	movf	fsr1l,w,c
   355  005D3E  E1FA               	bnz	copy_data0
   356                           
   357                           ; Initialize objects allocated to BANK0 (1 bytes)
   358                           ; load TBLPTR registers with __pidataBANK0
   359  005D40  0EC4               	movlw	low __pidataBANK0
   360  005D42  6EF6               	movwf	tblptrl,c
   361  005D44  0E5F               	movlw	high __pidataBANK0
   362  005D46  6EF7               	movwf	tblptrh,c
   363  005D48  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   364  005D4A  6EF8               	movwf	tblptru,c
   365  005D4C  0009               	tblrd		*+	;fetch initializer
   366  005D4E  CFF5 F0E8          	movff	tablat,__pdataBANK0
   367  005D52                     end_of_initialization:
   368                           	opt stack 0
   369  005D52                     __end_of__initialization:
   370                           	opt stack 0
   371  005D52  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   372  005D54  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   373  005D56  0100               	movlb	0
   374  005D58  EFD8  F02E         	goto	_main	;jump to C main() function
   375                           tblptru	equ	0xFF8
   376                           tblptrh	equ	0xFF7
   377                           tblptrl	equ	0xFF6
   378                           tablat	equ	0xFF5
   379                           postinc0	equ	0xFEE
   380                           wreg	equ	0xFE8
   381                           postdec1	equ	0xFE5
   382                           fsr1l	equ	0xFE1
   383                           
   384                           	psect	bitbssCOMRAM
   385  000230                     __pbitbssCOMRAM:
   386                           	opt stack 0
   387  000230                     _activation:
   388                           	opt stack 0
   389  000230                     	ds	1
   390  000231                     _asd:
   391                           	opt stack 0
   392  000231                     	ds	1
   393  000232                     _dir:
   394                           	opt stack 0
   395  000232                     	ds	1
   396  000233                     _distance_error:
   397                           	opt stack 0
   398  000233                     	ds	1
   399  000234                     _distance_received:
   400                           	opt stack 0
   401  000234                     	ds	1
   402  000235                     _distance_received1:
   403                           	opt stack 0
   404  000235                     	ds	1
   405  000236                     _distance_wait:
   406                           	opt stack 0
   407  000236                     	ds	1
   408  000237                     _first:
   409                           	opt stack 0
   410  000237                     	ds	1
   411  000238                     _old_data_correction:
   412                           	opt stack 0
   413  000238                     	ds	1
   414  000239                     _request_sent:
   415                           	opt stack 0
   416  000239                     	ds	1
   417  00023A                     _request_sent1:
   418                           	opt stack 0
   419  00023A                     	ds	1
   420  00023B                     _start_operation:
   421                           	opt stack 0
   422  00023B                     	ds	1
   423  00023C                     _steering_correction_dir:
   424                           	opt stack 0
   425  00023C                     	ds	1
   426                           tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           tblptrl	equ	0xFF6
   429                           tablat	equ	0xFF5
   430                           postinc0	equ	0xFEE
   431                           wreg	equ	0xFE8
   432                           postdec1	equ	0xFE5
   433                           fsr1l	equ	0xFE1
   434                           
   435                           	psect	bssCOMRAM
   436  000024                     __pbssCOMRAM:
   437                           	opt stack 0
   438  000024                     _sensor_distance:
   439                           	opt stack 0
   440  000024                     	ds	16
   441  000034                     _clock_counter_reference:
   442                           	opt stack 0
   443  000034                     	ds	2
   444  000036                     _distance_average:
   445                           	opt stack 0
   446  000036                     	ds	2
   447  000038                     _distance_dx:
   448                           	opt stack 0
   449  000038                     	ds	2
   450  00003A                     _distance_sx:
   451                           	opt stack 0
   452  00003A                     	ds	2
   453  00003C                     _left_speed:
   454                           	opt stack 0
   455  00003C                     	ds	2
   456  00003E                     _right_speed:
   457                           	opt stack 0
   458  00003E                     	ds	2
   459  000040                     _timerValue2:
   460                           	opt stack 0
   461  000040                     	ds	2
   462  000042                     _MUX_index:
   463                           	opt stack 0
   464  000042                     	ds	1
   465  000043                     _asus:
   466                           	opt stack 0
   467  000043                     	ds	1
   468  000044                     _gianni:
   469                           	opt stack 0
   470  000044                     	ds	1
   471  000045                     _steering_correction:
   472                           	opt stack 0
   473  000045                     	ds	1
   474                           tblptru	equ	0xFF8
   475                           tblptrh	equ	0xFF7
   476                           tblptrl	equ	0xFF6
   477                           tablat	equ	0xFF5
   478                           postinc0	equ	0xFEE
   479                           wreg	equ	0xFE8
   480                           postdec1	equ	0xFE5
   481                           fsr1l	equ	0xFE1
   482                           
   483                           	psect	bssBANK0
   484  0000E4                     __pbssBANK0:
   485                           	opt stack 0
   486  0000E4                     _alignment_gap:
   487                           	opt stack 0
   488  0000E4                     	ds	4
   489                           tblptru	equ	0xFF8
   490                           tblptrh	equ	0xFF7
   491                           tblptrl	equ	0xFF6
   492                           tablat	equ	0xFF5
   493                           postinc0	equ	0xFEE
   494                           wreg	equ	0xFE8
   495                           postdec1	equ	0xFE5
   496                           fsr1l	equ	0xFE1
   497                           
   498                           	psect	dataBANK0
   499  0000E8                     __pdataBANK0:
   500                           	opt stack 0
   501  0000E8                     _delay_quartz_frequency_value:
   502                           	opt stack 0
   503  0000E8                     	ds	1
   504                           tblptru	equ	0xFF8
   505                           tblptrh	equ	0xFF7
   506                           tblptrl	equ	0xFF6
   507                           tablat	equ	0xFF5
   508                           postinc0	equ	0xFEE
   509                           wreg	equ	0xFE8
   510                           postdec1	equ	0xFE5
   511                           fsr1l	equ	0xFE1
   512                           
   513                           	psect	bssBANK1
   514  000100                     __pbssBANK1:
   515                           	opt stack 0
   516  000100                     _MUX_select:
   517                           	opt stack 0
   518  000100                     	ds	8
   519  000108                     _data_speed_rx:
   520                           	opt stack 0
   521  000108                     	ds	8
   522  000110                     _distance_set:
   523                           	opt stack 0
   524  000110                     	ds	8
   525  000118                     _Pminimo:
   526                           	opt stack 0
   527  000118                     	ds	4
   528  00011C                     _alfa:
   529                           	opt stack 0
   530  00011C                     	ds	4
   531  000120                     _beta:
   532                           	opt stack 0
   533  000120                     	ds	4
   534  000124                     _bordo:
   535                           	opt stack 0
   536  000124                     	ds	4
   537  000128                     _jjj:
   538                           	opt stack 0
   539  000128                     	ds	4
   540  00012C                     _kkk:
   541                           	opt stack 0
   542  00012C                     	ds	4
   543  000130                     _n:
   544                           	opt stack 0
   545  000130                     	ds	4
   546  000134                     _old_alignment_gap:
   547                           	opt stack 0
   548  000134                     	ds	4
   549  000138                     _prima_sterzata:
   550                           	opt stack 0
   551  000138                     	ds	4
   552  00013C                     _x:
   553                           	opt stack 0
   554  00013C                     	ds	4
   555  000140                     _z:
   556                           	opt stack 0
   557  000140                     	ds	4
   558  000144                     _actual_speed:
   559                           	opt stack 0
   560  000144                     	ds	2
   561  000146                     _distance:
   562                           	opt stack 0
   563  000146                     	ds	2
   564  000148                     _errno:
   565                           	opt stack 0
   566  000148                     	ds	2
   567  00014A                     _pulse_time:
   568                           	opt stack 0
   569  00014A                     	ds	2
   570  00014C                     _set_speed:
   571                           	opt stack 0
   572  00014C                     	ds	2
   573  00014E                     _msg:
   574                           	opt stack 0
   575  00014E                     	ds	15
   576  00015D                     _data:
   577                           	opt stack 0
   578  00015D                     	ds	8
   579  000165                     _data_brake:
   580                           	opt stack 0
   581  000165                     	ds	8
   582  00016D                     _data_correction:
   583                           	opt stack 0
   584  00016D                     	ds	8
   585  000175                     _data_speed:
   586                           	opt stack 0
   587  000175                     	ds	8
   588  00017D                     _data_steering:
   589                           	opt stack 0
   590  00017D                     	ds	8
   591  000185                     _data_test:
   592                           	opt stack 0
   593  000185                     	ds	8
   594                           tblptru	equ	0xFF8
   595                           tblptrh	equ	0xFF7
   596                           tblptrl	equ	0xFF6
   597                           tablat	equ	0xFF5
   598                           postinc0	equ	0xFEE
   599                           wreg	equ	0xFE8
   600                           postdec1	equ	0xFE5
   601                           fsr1l	equ	0xFE1
   602                           
   603                           	psect	dataBANK1
   604  0001E2                     __pdataBANK1:
   605                           	opt stack 0
   606  0001E2                     _larghezza:
   607                           	opt stack 0
   608  0001E2                     	ds	4
   609  0001E6                     _spazio_parcheggio:
   610                           	opt stack 0
   611  0001E6                     	ds	2
   612  0001E8                     _raggio:
   613                           	opt stack 0
   614  0001E8                     	ds	4
   615                           tblptru	equ	0xFF8
   616                           tblptrh	equ	0xFF7
   617                           tblptrl	equ	0xFF6
   618                           tablat	equ	0xFF5
   619                           postinc0	equ	0xFEE
   620                           wreg	equ	0xFE8
   621                           postdec1	equ	0xFE5
   622                           fsr1l	equ	0xFE1
   623                           
   624                           	psect	cstackBANK1
   625  00018D                     __pcstackBANK1:
   626                           	opt stack 0
   627  00018D                     ?___flsub:
   628                           	opt stack 0
   629  00018D                     atan@y:
   630                           	opt stack 0
   631  00018D                     ___flsub@b:
   632                           	opt stack 0
   633                           
   634                           ; 4 bytes @ 0x0
   635  00018D                     	ds	4
   636  000191                     atan@x:
   637                           	opt stack 0
   638  000191                     ___flsub@a:
   639                           	opt stack 0
   640                           
   641                           ; 4 bytes @ 0x4
   642  000191                     	ds	4
   643  000195                     ?_sin:
   644                           	opt stack 0
   645  000195                     atan@recip:
   646                           	opt stack 0
   647  000195                     sin@f:
   648                           	opt stack 0
   649                           
   650                           ; 4 bytes @ 0x8
   651  000195                     	ds	1
   652  000196                     atan@val_squared:
   653                           	opt stack 0
   654                           
   655                           ; 4 bytes @ 0x9
   656  000196                     	ds	3
   657  000199                     sin@y:
   658                           	opt stack 0
   659                           
   660                           ; 4 bytes @ 0xC
   661  000199                     	ds	1
   662  00019A                     atan@val:
   663                           	opt stack 0
   664                           
   665                           ; 4 bytes @ 0xD
   666  00019A                     	ds	3
   667  00019D                     _sin$3752:
   668                           	opt stack 0
   669                           
   670                           ; 4 bytes @ 0x10
   671  00019D                     	ds	1
   672  00019E                     asin@sgn:
   673                           	opt stack 0
   674                           
   675                           ; 4 bytes @ 0x11
   676  00019E                     	ds	3
   677  0001A1                     sin@x2:
   678                           	opt stack 0
   679                           
   680                           ; 4 bytes @ 0x14
   681  0001A1                     	ds	1
   682  0001A2                     _asin$3750:
   683                           	opt stack 0
   684                           
   685                           ; 4 bytes @ 0x15
   686  0001A2                     	ds	3
   687  0001A5                     sin@sgn:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x18
   691  0001A5                     	ds	1
   692  0001A6                     _asin$3749:
   693                           	opt stack 0
   694                           
   695                           ; 4 bytes @ 0x19
   696  0001A6                     	ds	4
   697  0001AA                     asin@y:
   698                           	opt stack 0
   699                           
   700                           ; 4 bytes @ 0x1D
   701  0001AA                     	ds	4
   702  0001AE                     _asin$3748:
   703                           	opt stack 0
   704                           
   705                           ; 4 bytes @ 0x21
   706  0001AE                     	ds	4
   707  0001B2                     ??_park_search:
   708  0001B2                     ?_cos:
   709                           	opt stack 0
   710  0001B2                     cos@f:
   711                           	opt stack 0
   712                           
   713                           ; 4 bytes @ 0x25
   714  0001B2                     	ds	4
   715  0001B6                     _cos$3751:
   716                           	opt stack 0
   717                           
   718                           ; 4 bytes @ 0x29
   719  0001B6                     	ds	4
   720  0001BA                     _matematica$3741:
   721                           	opt stack 0
   722                           
   723                           ; 4 bytes @ 0x2D
   724  0001BA                     	ds	4
   725  0001BE                     _matematica$3742:
   726                           	opt stack 0
   727                           
   728                           ; 4 bytes @ 0x31
   729  0001BE                     	ds	4
   730  0001C2                     _matematica$3743:
   731                           	opt stack 0
   732                           
   733                           ; 4 bytes @ 0x35
   734  0001C2                     	ds	4
   735  0001C6                     _matematica$3744:
   736                           	opt stack 0
   737                           
   738                           ; 4 bytes @ 0x39
   739  0001C6                     	ds	4
   740  0001CA                     _matematica$3746:
   741                           	opt stack 0
   742                           
   743                           ; 4 bytes @ 0x3D
   744  0001CA                     	ds	4
   745  0001CE                     _matematica$3747:
   746                           	opt stack 0
   747                           
   748                           ; 4 bytes @ 0x41
   749  0001CE                     	ds	4
   750  0001D2                     _matematica$3745:
   751                           	opt stack 0
   752                           
   753                           ; 4 bytes @ 0x45
   754  0001D2                     	ds	4
   755  0001D6                     ??_park_routine:
   756                           
   757                           ; 0 bytes @ 0x49
   758  0001D6                     	ds	4
   759  0001DA                     _park_routine$3739:
   760                           	opt stack 0
   761                           
   762                           ; 4 bytes @ 0x4D
   763  0001DA                     	ds	4
   764  0001DE                     _park_routine$3740:
   765                           	opt stack 0
   766                           
   767                           ; 4 bytes @ 0x51
   768  0001DE                     	ds	4
   769                           tblptru	equ	0xFF8
   770                           tblptrh	equ	0xFF7
   771                           tblptrl	equ	0xFF6
   772                           tablat	equ	0xFF5
   773                           postinc0	equ	0xFEE
   774                           wreg	equ	0xFE8
   775                           postdec1	equ	0xFE5
   776                           fsr1l	equ	0xFE1
   777                           
   778                           	psect	cstackBANK0
   779  000060                     __pcstackBANK0:
   780                           	opt stack 0
   781  000060                     ?___lwdiv:
   782                           	opt stack 0
   783  000060                     ___lwdiv@dividend:
   784                           	opt stack 0
   785                           
   786                           ; 2 bytes @ 0x0
   787  000060                     	ds	2
   788  000062                     ___lwdiv@divisor:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x2
   792  000062                     	ds	2
   793  000064                     ___lwdiv@counter:
   794                           	opt stack 0
   795                           
   796                           ; 1 bytes @ 0x4
   797  000064                     	ds	1
   798  000065                     ___lwdiv@quotient:
   799                           	opt stack 0
   800                           
   801                           ; 2 bytes @ 0x5
   802  000065                     	ds	2
   803  000067                     ??_ISR_Alta:
   804                           
   805                           ; 0 bytes @ 0x7
   806  000067                     	ds	16
   807  000077                     ??_can_interpreter:
   808  000077                     ?_abs:
   809                           	opt stack 0
   810  000077                     ?___wmul:
   811                           	opt stack 0
   812  000077                     ?___fldiv:
   813                           	opt stack 0
   814  000077                     CANOperationMode@mode:
   815                           	opt stack 0
   816  000077                     _CANisTxReady$2845:
   817                           	opt stack 0
   818  000077                     ___wmul@multiplier:
   819                           	opt stack 0
   820  000077                     abs@a:
   821                           	opt stack 0
   822  000077                     CANsendMessage@identifier:
   823                           	opt stack 0
   824  000077                     CANSetMask@mask:
   825                           	opt stack 0
   826  000077                     CANSetFilter@filter:
   827                           	opt stack 0
   828  000077                     ___fldiv@b:
   829                           	opt stack 0
   830  000077                     frexp@value:
   831                           	opt stack 0
   832                           
   833                           ; 4 bytes @ 0x17
   834  000077                     	ds	2
   835  000079                     ??_abs:
   836  000079                     ___wmul@multiplicand:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x19
   840  000079                     	ds	2
   841  00007B                     CANSetMask@type:
   842                           	opt stack 0
   843  00007B                     CANSetFilter@type:
   844                           	opt stack 0
   845  00007B                     CANsendMessage@data:
   846                           	opt stack 0
   847  00007B                     ___wmul@product:
   848                           	opt stack 0
   849  00007B                     frexp@eptr:
   850                           	opt stack 0
   851  00007B                     ___fldiv@a:
   852                           	opt stack 0
   853                           
   854                           ; 4 bytes @ 0x1B
   855  00007B                     	ds	1
   856  00007C                     ??_CANSetMask:
   857  00007C                     ??_CANSetFilter:
   858                           
   859                           ; 0 bytes @ 0x1C
   860  00007C                     	ds	1
   861  00007D                     ??_frexp:
   862  00007D                     CANsendMessage@dataLength:
   863                           	opt stack 0
   864  00007D                     delay_ms@value_ms:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0x1D
   868  00007D                     	ds	1
   869  00007E                     CANsendMessage@flags:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0x1E
   873  00007E                     	ds	1
   874  00007F                     ??___fldiv:
   875  00007F                     ??_CANsendMessage:
   876  00007F                     delay_s@value_s:
   877                           	opt stack 0
   878                           
   879                           ; 1 bytes @ 0x1F
   880  00007F                     	ds	1
   881  000080                     CANSetMask@numBuffer:
   882                           	opt stack 0
   883  000080                     CANSetFilter@numBuffer:
   884                           	opt stack 0
   885  000080                     delay_s@repeat_loop:
   886                           	opt stack 0
   887                           
   888                           ; 1 bytes @ 0x20
   889  000080                     	ds	1
   890  000081                     CANSetMask@tamp:
   891                           	opt stack 0
   892  000081                     CANSetFilter@tamp:
   893                           	opt stack 0
   894                           
   895                           ; 4 bytes @ 0x21
   896  000081                     	ds	2
   897  000083                     ___fldiv@sign:
   898                           	opt stack 0
   899  000083                     CANsendMessage@tamp:
   900                           	opt stack 0
   901                           
   902                           ; 4 bytes @ 0x23
   903  000083                     	ds	1
   904  000084                     ___fldiv@rem:
   905                           	opt stack 0
   906                           
   907                           ; 4 bytes @ 0x24
   908  000084                     	ds	1
   909  000085                     CANInitialize@phaseSeg1:
   910                           	opt stack 0
   911                           
   912                           ; 1 bytes @ 0x25
   913  000085                     	ds	1
   914  000086                     CANInitialize@phaseSeg2:
   915                           	opt stack 0
   916                           
   917                           ; 1 bytes @ 0x26
   918  000086                     	ds	1
   919  000087                     can_send@data_correction1:
   920                           	opt stack 0
   921  000087                     CANInitialize@SJW:
   922                           	opt stack 0
   923                           
   924                           ; 1 bytes @ 0x27
   925  000087                     	ds	1
   926  000088                     CANInitialize@BRP:
   927                           	opt stack 0
   928  000088                     ___fldiv@new_exp:
   929                           	opt stack 0
   930                           
   931                           ; 2 bytes @ 0x28
   932  000088                     	ds	1
   933  000089                     CANInitialize@flags:
   934                           	opt stack 0
   935                           
   936                           ; 1 bytes @ 0x29
   937  000089                     	ds	1
   938  00008A                     ??_CANInitialize:
   939  00008A                     ___fldiv@grs:
   940                           	opt stack 0
   941                           
   942                           ; 4 bytes @ 0x2A
   943  00008A                     	ds	4
   944  00008E                     CANInitialize@propSeg:
   945                           	opt stack 0
   946  00008E                     ___fldiv@bexp:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x2E
   950  00008E                     	ds	1
   951  00008F                     CANInitialize@FilterConfig1:
   952                           	opt stack 0
   953  00008F                     ___fldiv@aexp:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0x2F
   957  00008F                     	ds	1
   958  000090                     ?___flmul:
   959                           	opt stack 0
   960  000090                     CANInitialize@FilterConfig2:
   961                           	opt stack 0
   962  000090                     ___flmul@b:
   963                           	opt stack 0
   964                           
   965                           ; 4 bytes @ 0x30
   966  000090                     	ds	1
   967  000091                     
   968                           ; 0 bytes @ 0x31
   969  000091                     	ds	3
   970  000094                     ___flmul@a:
   971                           	opt stack 0
   972                           
   973                           ; 4 bytes @ 0x34
   974  000094                     	ds	4
   975  000098                     ??___flmul:
   976                           
   977                           ; 0 bytes @ 0x38
   978  000098                     	ds	4
   979  00009C                     ___flmul@sign:
   980                           	opt stack 0
   981                           
   982                           ; 1 bytes @ 0x3C
   983  00009C                     	ds	1
   984  00009D                     ___flmul@aexp:
   985                           	opt stack 0
   986                           
   987                           ; 1 bytes @ 0x3D
   988  00009D                     	ds	1
   989  00009E                     ___flmul@grs:
   990                           	opt stack 0
   991                           
   992                           ; 4 bytes @ 0x3E
   993  00009E                     	ds	4
   994  0000A2                     ___flmul@bexp:
   995                           	opt stack 0
   996                           
   997                           ; 1 bytes @ 0x42
   998  0000A2                     	ds	1
   999  0000A3                     ___flmul@prod:
  1000                           	opt stack 0
  1001                           
  1002                           ; 4 bytes @ 0x43
  1003  0000A3                     	ds	4
  1004  0000A7                     ___flmul@temp:
  1005                           	opt stack 0
  1006                           
  1007                           ; 2 bytes @ 0x47
  1008  0000A7                     	ds	2
  1009  0000A9                     ?___fladd:
  1010                           	opt stack 0
  1011  0000A9                     ___fladd@b:
  1012                           	opt stack 0
  1013                           
  1014                           ; 4 bytes @ 0x49
  1015  0000A9                     	ds	4
  1016  0000AD                     ___fladd@a:
  1017                           	opt stack 0
  1018                           
  1019                           ; 4 bytes @ 0x4D
  1020  0000AD                     	ds	4
  1021  0000B1                     ??___fladd:
  1022                           
  1023                           ; 0 bytes @ 0x51
  1024  0000B1                     	ds	8
  1025  0000B9                     ___fladd@signs:
  1026                           	opt stack 0
  1027                           
  1028                           ; 1 bytes @ 0x59
  1029  0000B9                     	ds	1
  1030  0000BA                     ___fladd@aexp:
  1031                           	opt stack 0
  1032                           
  1033                           ; 1 bytes @ 0x5A
  1034  0000BA                     	ds	1
  1035  0000BB                     ___fladd@bexp:
  1036                           	opt stack 0
  1037                           
  1038                           ; 1 bytes @ 0x5B
  1039  0000BB                     	ds	1
  1040  0000BC                     ___fladd@grs:
  1041                           	opt stack 0
  1042                           
  1043                           ; 1 bytes @ 0x5C
  1044  0000BC                     	ds	1
  1045  0000BD                     ?_eval_poly:
  1046                           	opt stack 0
  1047  0000BD                     ?___flneg:
  1048                           	opt stack 0
  1049  0000BD                     eval_poly@x:
  1050                           	opt stack 0
  1051  0000BD                     ___flneg@f1:
  1052                           	opt stack 0
  1053                           
  1054                           ; 4 bytes @ 0x5D
  1055  0000BD                     	ds	4
  1056  0000C1                     ?_sqrt:
  1057                           	opt stack 0
  1058  0000C1                     ?_fabs:
  1059                           	opt stack 0
  1060  0000C1                     ?___fltol:
  1061                           	opt stack 0
  1062  0000C1                     eval_poly@d:
  1063                           	opt stack 0
  1064  0000C1                     fabs@d:
  1065                           	opt stack 0
  1066  0000C1                     ___fltol@f1:
  1067                           	opt stack 0
  1068  0000C1                     sqrt@a:
  1069                           	opt stack 0
  1070                           
  1071                           ; 4 bytes @ 0x61
  1072  0000C1                     	ds	2
  1073  0000C3                     eval_poly@n:
  1074                           	opt stack 0
  1075                           
  1076                           ; 2 bytes @ 0x63
  1077  0000C3                     	ds	2
  1078  0000C5                     ??_sqrt:
  1079  0000C5                     ??_eval_poly:
  1080  0000C5                     ??___fltol:
  1081  0000C5                     ___flge@ff1:
  1082                           	opt stack 0
  1083                           
  1084                           ; 4 bytes @ 0x65
  1085  0000C5                     	ds	4
  1086  0000C9                     ___fltol@sign1:
  1087                           	opt stack 0
  1088  0000C9                     sqrt@sign:
  1089                           	opt stack 0
  1090  0000C9                     eval_poly@res:
  1091                           	opt stack 0
  1092  0000C9                     ___flge@ff2:
  1093                           	opt stack 0
  1094                           
  1095                           ; 4 bytes @ 0x69
  1096  0000C9                     	ds	1
  1097  0000CA                     ___fltol@exp1:
  1098                           	opt stack 0
  1099  0000CA                     sqrt@i:
  1100                           	opt stack 0
  1101                           
  1102                           ; 1 bytes @ 0x6A
  1103  0000CA                     	ds	1
  1104  0000CB                     ?___xxtofl:
  1105                           	opt stack 0
  1106  0000CB                     sqrt@tfrac:
  1107                           	opt stack 0
  1108  0000CB                     ___xxtofl@val:
  1109                           	opt stack 0
  1110                           
  1111                           ; 4 bytes @ 0x6B
  1112  0000CB                     	ds	2
  1113  0000CD                     ??___flge:
  1114                           
  1115                           ; 0 bytes @ 0x6D
  1116  0000CD                     	ds	2
  1117  0000CF                     ??___xxtofl:
  1118  0000CF                     sqrt@p:
  1119                           	opt stack 0
  1120                           
  1121                           ; 1 bytes @ 0x6F
  1122  0000CF                     	ds	1
  1123  0000D0                     sqrt@grs:
  1124                           	opt stack 0
  1125                           
  1126                           ; 4 bytes @ 0x70
  1127  0000D0                     	ds	1
  1128  0000D1                     ?_atan:
  1129                           	opt stack 0
  1130  0000D1                     atan@f:
  1131                           	opt stack 0
  1132                           
  1133                           ; 4 bytes @ 0x71
  1134  0000D1                     	ds	2
  1135  0000D3                     ___xxtofl@sign:
  1136                           	opt stack 0
  1137                           
  1138                           ; 1 bytes @ 0x73
  1139  0000D3                     	ds	1
  1140  0000D4                     ___xxtofl@exp:
  1141                           	opt stack 0
  1142  0000D4                     sqrt@exp:
  1143                           	opt stack 0
  1144                           
  1145                           ; 2 bytes @ 0x74
  1146  0000D4                     	ds	1
  1147  0000D5                     ___xxtofl@arg:
  1148                           	opt stack 0
  1149                           
  1150                           ; 4 bytes @ 0x75
  1151  0000D5                     	ds	1
  1152  0000D6                     sqrt@root:
  1153                           	opt stack 0
  1154                           
  1155                           ; 4 bytes @ 0x76
  1156  0000D6                     	ds	3
  1157  0000D9                     ?_floor:
  1158                           	opt stack 0
  1159  0000D9                     floor@x:
  1160                           	opt stack 0
  1161                           
  1162                           ; 4 bytes @ 0x79
  1163  0000D9                     	ds	1
  1164  0000DA                     sqrt@frac:
  1165                           	opt stack 0
  1166                           
  1167                           ; 4 bytes @ 0x7A
  1168  0000DA                     	ds	3
  1169  0000DD                     floor@i:
  1170                           	opt stack 0
  1171                           
  1172                           ; 4 bytes @ 0x7D
  1173  0000DD                     	ds	1
  1174  0000DE                     ?_asin:
  1175                           	opt stack 0
  1176  0000DE                     asin@x:
  1177                           	opt stack 0
  1178                           
  1179                           ; 4 bytes @ 0x7E
  1180  0000DE                     	ds	3
  1181  0000E1                     floor@expon:
  1182                           	opt stack 0
  1183                           
  1184                           ; 2 bytes @ 0x81
  1185  0000E1                     	ds	1
  1186  0000E2                     ??_parallelo:
  1187  0000E2                     
  1188                           ; 0 bytes @ 0x82
  1189  0000E2                     	ds	1
  1190  0000E3                     
  1191                           ; 0 bytes @ 0x83
  1192  0000E3                     	ds	1
  1193  0000E4                     tblptru	equ	0xFF8
  1194                           tblptrh	equ	0xFF7
  1195                           tblptrl	equ	0xFF6
  1196                           tablat	equ	0xFF5
  1197                           postinc0	equ	0xFEE
  1198                           wreg	equ	0xFE8
  1199                           postdec1	equ	0xFE5
  1200                           fsr1l	equ	0xFE1
  1201                           
  1202                           ; 0 bytes @ 0x84
  1203                           
  1204                           	psect	cstackCOMRAM
  1205  000001                     __pcstackCOMRAM:
  1206                           	opt stack 0
  1207  000001                     CANreceiveMessage@msg:
  1208                           	opt stack 0
  1209                           
  1210                           ; 2 bytes @ 0x0
  1211  000001                     	ds	2
  1212  000003                     ??_CANreceiveMessage:
  1213                           
  1214                           ; 0 bytes @ 0x2
  1215  000003                     	ds	8
  1216  00000B                     CANreceiveMessage@error:
  1217                           	opt stack 0
  1218                           
  1219                           ; 1 bytes @ 0xA
  1220  00000B                     	ds	1
  1221  00000C                     CANreceiveMessage@tamp:
  1222                           	opt stack 0
  1223                           
  1224                           ; 1 bytes @ 0xB
  1225  00000C                     	ds	1
  1226  00000D                     ??_ISR_Bassa:
  1227                           
  1228                           ; 0 bytes @ 0xC
  1229  00000D                     	ds	21
  1230  000022                     ISR_Bassa@gigi:
  1231                           	opt stack 0
  1232                           
  1233                           ; 1 bytes @ 0x21
  1234  000022                     	ds	1
  1235  000023                     ISR_Bassa@i:
  1236                           	opt stack 0
  1237                           
  1238                           ; 1 bytes @ 0x22
  1239  000023                     	ds	1
  1240                           tblptru	equ	0xFF8
  1241                           tblptrh	equ	0xFF7
  1242                           tblptrl	equ	0xFF6
  1243                           tablat	equ	0xFF5
  1244                           postinc0	equ	0xFEE
  1245                           wreg	equ	0xFE8
  1246                           postdec1	equ	0xFE5
  1247                           fsr1l	equ	0xFE1
  1248                           
  1249 ;;
  1250 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1251 ;;
  1252 ;; *************** function _main *****************
  1253 ;; Defined at:
  1254 ;;		line 188 in file "parcheggio.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;		None
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;		None
  1259 ;; Return value:  Size  Location     Type
  1260 ;;		None               void
  1261 ;; Registers used:
  1262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1272 ;;Total ram usage:        0 bytes
  1273 ;; Hardware stack levels required when called:   10
  1274 ;; This function calls:
  1275 ;;		_can_interpreter
  1276 ;;		_configurazione
  1277 ;;		_park_routine
  1278 ;;		_park_search
  1279 ;; This function is called by:
  1280 ;;		Startup code after reset
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text0
  1285  005DB0                     __ptext0:
  1286                           	opt stack 0
  1287  005DB0                     _main:
  1288                           	opt stack 21
  1289                           
  1290                           ;parcheggio.c: 189: MUX_select[0] = 0b00000000;
  1291                           
  1292                           ; BSR set to: 15
  1293                           ;incstack = 0
  1294  005DB0  0E00               	movlw	0
  1295  005DB2  0101               	movlb	1	; () banked
  1296  005DB4  6F00               	movwf	_MUX_select& (0+255),b
  1297                           
  1298                           ;parcheggio.c: 190: MUX_select[1] = 0b00000001;
  1299  005DB6  0E01               	movlw	1
  1300  005DB8  0101               	movlb	1	; () banked
  1301  005DBA  6F01               	movwf	(_MUX_select+1)& (0+255),b
  1302                           
  1303                           ;parcheggio.c: 191: MUX_select[2] = 0b00000010;
  1304  005DBC  0E02               	movlw	2
  1305  005DBE  0101               	movlb	1	; () banked
  1306  005DC0  6F02               	movwf	(_MUX_select+2)& (0+255),b
  1307                           
  1308                           ;parcheggio.c: 192: MUX_select[3] = 0b00000011;
  1309  005DC2  0E03               	movlw	3
  1310  005DC4  0101               	movlb	1	; () banked
  1311  005DC6  6F03               	movwf	(_MUX_select+3)& (0+255),b
  1312                           
  1313                           ;parcheggio.c: 193: MUX_select[4] = 0b00000100;
  1314  005DC8  0E04               	movlw	4
  1315  005DCA  0101               	movlb	1	; () banked
  1316  005DCC  6F04               	movwf	(_MUX_select+4)& (0+255),b
  1317                           
  1318                           ;parcheggio.c: 194: MUX_select[5] = 0b00000101;
  1319  005DCE  0E05               	movlw	5
  1320  005DD0  0101               	movlb	1	; () banked
  1321  005DD2  6F05               	movwf	(_MUX_select+5)& (0+255),b
  1322                           
  1323                           ;parcheggio.c: 195: MUX_select[6] = 0b00000110;
  1324  005DD4  0E06               	movlw	6
  1325  005DD6  0101               	movlb	1	; () banked
  1326  005DD8  6F06               	movwf	(_MUX_select+6)& (0+255),b
  1327                           
  1328                           ;parcheggio.c: 196: MUX_select[7] = 0b00000111;
  1329  005DDA  0E07               	movlw	7
  1330  005DDC  0101               	movlb	1	; () banked
  1331  005DDE  6F07               	movwf	(_MUX_select+7)& (0+255),b
  1332                           
  1333                           ; BSR set to: 1
  1334                           ;parcheggio.c: 197: configurazione();
  1335  005DE0  EC47  F02E         	call	_configurazione	;wreg free
  1336                           
  1337                           ;parcheggio.c: 198: PORTBbits.RB4 = 0;
  1338  005DE4  9881               	bcf	3969,4,c	;volatile
  1339                           
  1340                           ;parcheggio.c: 199: PORTBbits.RB5 = 0;
  1341  005DE6  9A81               	bcf	3969,5,c	;volatile
  1342                           
  1343                           ;parcheggio.c: 200: PORTBbits.RB6 = 0;
  1344  005DE8  9C81               	bcf	3969,6,c	;volatile
  1345                           
  1346                           ;parcheggio.c: 201: request_sent = 0;
  1347  005DEA  9247               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1348                           
  1349                           ;parcheggio.c: 202: start_operation = 0;
  1350  005DEC  9647               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1351  005DEE                     l715:
  1352  005DEE  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1353  005DF0  D7FE               	goto	l715
  1354                           
  1355                           ;parcheggio.c: 219: park_search();
  1356  005DF2  ECFC  F028         	call	_park_search	;wreg free
  1357                           
  1358                           ;parcheggio.c: 220: can_interpreter();
  1359  005DF6  ECAE  F02E         	call	_can_interpreter	;wreg free
  1360                           
  1361                           ;parcheggio.c: 221: park_routine();
  1362  005DFA  ECE4  F019         	call	_park_routine	;wreg free
  1363  005DFE  D7F7               	goto	l715
  1364  005E00                     __end_of_main:
  1365                           	opt stack 0
  1366                           tblptru	equ	0xFF8
  1367                           tblptrh	equ	0xFF7
  1368                           tblptrl	equ	0xFF6
  1369                           tablat	equ	0xFF5
  1370                           postinc0	equ	0xFEE
  1371                           wreg	equ	0xFE8
  1372                           postdec1	equ	0xFE5
  1373                           fsr1l	equ	0xFE1
  1374                           
  1375 ;; *************** function _park_search *****************
  1376 ;; Defined at:
  1377 ;;		line 225 in file "parcheggio.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;		None               void
  1384 ;; Registers used:
  1385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1393 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1394 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1395 ;;Total ram usage:        2 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; Hardware stack levels required when called:    9
  1398 ;; This function calls:
  1399 ;;		_CANisTxReady
  1400 ;;		_CANsendMessage
  1401 ;;		___xxtofl
  1402 ;;		_abs
  1403 ;;		_parallelo
  1404 ;; This function is called by:
  1405 ;;		_main
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text1
  1410  0051F8                     __ptext1:
  1411                           	opt stack 0
  1412  0051F8                     _park_search:
  1413                           	opt stack 21
  1414                           
  1415                           ;parcheggio.c: 226: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1416                           
  1417                           ;incstack = 0
  1418  0051F8  D0D5               	goto	l723
  1419  0051FA                     l7405:
  1420                           
  1421                           ;parcheggio.c: 227: parallelo();
  1422  0051FA  ECC3  F024         	call	_parallelo	;wreg free
  1423                           
  1424                           ;parcheggio.c: 228: if (sensor_distance[0] > 50) {
  1425  0051FE  5025               	movf	_sensor_distance+1,w,c	;volatile
  1426  005200  E104               	bnz	u9510
  1427  005202  0E33               	movlw	51
  1428  005204  5C24               	subwf	_sensor_distance,w,c	;volatile
  1429  005206  A0D8               	btfss	status,0,c
  1430  005208  D02A               	goto	l725
  1431  00520A                     u9510:
  1432                           
  1433                           ;parcheggio.c: 229: if (request_sent == 0) {
  1434  00520A  B247               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1435  00520C  D057               	goto	l7425
  1436  00520E                     l7413:
  1437  00520E  ECC0  F02F         	call	_CANisTxReady	;wreg free
  1438  005212  0900               	iorlw	0
  1439  005214  B4D8               	btfsc	status,2,c
  1440  005216  D7FB               	goto	l7413
  1441                           
  1442                           ;parcheggio.c: 231: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1443  005218  0E08               	movlw	8
  1444  00521A  0100               	movlb	0	; () banked
  1445  00521C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1446  00521E  0E00               	movlw	0
  1447  005220  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1448  005222  0E00               	movlw	0
  1449  005224  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1450  005226  0E00               	movlw	0
  1451  005228  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1452  00522A  0E5D               	movlw	low _data
  1453  00522C  0100               	movlb	0	; () banked
  1454  00522E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1455  005230  0E01               	movlw	high _data
  1456  005232  0100               	movlb	0	; () banked
  1457  005234  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1458  005236  0E08               	movlw	8
  1459  005238  0100               	movlb	0	; () banked
  1460  00523A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1461  00523C  0EFC               	movlw	252
  1462  00523E  0100               	movlb	0	; () banked
  1463  005240  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1464  005242  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1465                           
  1466                           ;parcheggio.c: 232: request_sent = 1;
  1467  005246  8247               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1468                           
  1469                           ;parcheggio.c: 233: alignment_gap = 0;
  1470  005248  0E00               	movlw	0
  1471  00524A  0100               	movlb	0	; () banked
  1472  00524C  6FE4               	movwf	_alignment_gap& (0+255),b
  1473  00524E  0E00               	movlw	0
  1474  005250  6FE5               	movwf	(_alignment_gap+1)& (0+255),b
  1475  005252  0E00               	movlw	0
  1476  005254  6FE6               	movwf	(_alignment_gap+2)& (0+255),b
  1477  005256  0E00               	movlw	0
  1478  005258  6FE7               	movwf	(_alignment_gap+3)& (0+255),b
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;parcheggio.c: 234: LATBbits.LATB4 = 1;
  1482  00525A  888A               	bsf	3978,4,c	;volatile
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;parcheggio.c: 235: }
  1486                           ;parcheggio.c: 236: } else {
  1487  00525C  D02F               	goto	l7425
  1488  00525E                     l725:
  1489                           
  1490                           ;parcheggio.c: 237: LATBbits.LATB4 = 0;
  1491  00525E  988A               	bcf	3978,4,c	;volatile
  1492                           
  1493                           ;parcheggio.c: 238: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1494  005260  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1495  005264  CFDE F1B2          	movff	postinc2,??_park_search
  1496  005268  CFDD F1B3          	movff	postdec2,??_park_search+1
  1497  00526C  0101               	movlb	1	; () banked
  1498  00526E  1FB2               	comf	??_park_search& (0+255),f,b
  1499  005270  1FB3               	comf	(??_park_search+1)& (0+255),f,b
  1500  005272  4BB2               	infsnz	??_park_search& (0+255),f,b
  1501  005274  2BB3               	incf	(??_park_search+1)& (0+255),f,b
  1502  005276  5024               	movf	_sensor_distance,w,c	;volatile
  1503  005278  0101               	movlb	1	; () banked
  1504  00527A  25B2               	addwf	??_park_search& (0+255),w,b
  1505  00527C  0100               	movlb	0	; () banked
  1506  00527E  6F77               	movwf	abs@a& (0+255),b
  1507  005280  5025               	movf	_sensor_distance+1,w,c	;volatile
  1508  005282  0101               	movlb	1	; () banked
  1509  005284  21B3               	addwfc	(??_park_search+1)& (0+255),w,b
  1510  005286  0100               	movlb	0	; () banked
  1511  005288  6F78               	movwf	(abs@a+1)& (0+255),b
  1512  00528A  EC94  F02F         	call	_abs	;wreg free
  1513  00528E  0100               	movlb	0	; () banked
  1514  005290  C077  F0CB         	movff	?_abs,___xxtofl@val
  1515  005294  0100               	movlb	0	; () banked
  1516  005296  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  1517  00529A  0100               	movlb	0	; () banked
  1518  00529C  0E00               	movlw	0
  1519  00529E  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1520  0052A0  0EFF               	movlw	-1
  1521  0052A2  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  1522  0052A4  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  1523  0052A6  0E01               	movlw	1
  1524  0052A8  EC32  F027         	call	___xxtofl
  1525  0052AC  C0CB  F0E4         	movff	?___xxtofl,_alignment_gap
  1526  0052B0  C0CC  F0E5         	movff	?___xxtofl+1,_alignment_gap+1
  1527  0052B4  C0CD  F0E6         	movff	?___xxtofl+2,_alignment_gap+2
  1528  0052B8  C0CE  F0E7         	movff	?___xxtofl+3,_alignment_gap+3
  1529  0052BC                     l7425:
  1530                           
  1531                           ;parcheggio.c: 239: }
  1532                           ;parcheggio.c: 240: if ((sensor_distance[0] < 50) && (request_sent == 1)) {
  1533  0052BC  5025               	movf	_sensor_distance+1,w,c	;volatile
  1534  0052BE  E122               	bnz	l7435
  1535  0052C0  0E32               	movlw	50
  1536  0052C2  5C24               	subwf	_sensor_distance,w,c	;volatile
  1537  0052C4  A0D8               	btfss	status,0,c
  1538  0052C6  A247               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1539  0052C8  D01D               	goto	l7435
  1540                           
  1541                           ;parcheggio.c: 241: request_sent = 0;
  1542  0052CA  9247               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1543  0052CC                     l7431:
  1544  0052CC  ECC0  F02F         	call	_CANisTxReady	;wreg free
  1545  0052D0  0900               	iorlw	0
  1546  0052D2  B4D8               	btfsc	status,2,c
  1547  0052D4  D7FB               	goto	l7431
  1548                           
  1549                           ;parcheggio.c: 243: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1550  0052D6  0E07               	movlw	7
  1551  0052D8  0100               	movlb	0	; () banked
  1552  0052DA  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1553  0052DC  0E00               	movlw	0
  1554  0052DE  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1555  0052E0  0E00               	movlw	0
  1556  0052E2  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1557  0052E4  0E00               	movlw	0
  1558  0052E6  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1559  0052E8  0E5D               	movlw	low _data
  1560  0052EA  0100               	movlb	0	; () banked
  1561  0052EC  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1562  0052EE  0E01               	movlw	high _data
  1563  0052F0  0100               	movlb	0	; () banked
  1564  0052F2  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1565  0052F4  0E08               	movlw	8
  1566  0052F6  0100               	movlb	0	; () banked
  1567  0052F8  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1568  0052FA  0EFC               	movlw	252
  1569  0052FC  0100               	movlb	0	; () banked
  1570  0052FE  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1571  005300  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1572  005304                     l7435:
  1573                           
  1574                           ;parcheggio.c: 244: }
  1575                           ;parcheggio.c: 245: if (distance_received == 1) {
  1576  005304  A846               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1577  005306  D04E               	goto	l723
  1578                           
  1579                           ;parcheggio.c: 246: if (distance_average > 65) {
  1580  005308  5037               	movf	_distance_average+1,w,c	;volatile
  1581  00530A  E104               	bnz	u9580
  1582  00530C  0E42               	movlw	66
  1583  00530E  5C36               	subwf	_distance_average,w,c	;volatile
  1584  005310  A0D8               	btfss	status,0,c
  1585  005312  D046               	goto	l736
  1586  005314                     u9580:
  1587                           
  1588                           ;parcheggio.c: 247: PORTBbits.RB5 = 1;
  1589  005314  8A81               	bsf	3969,5,c	;volatile
  1590                           
  1591                           ;parcheggio.c: 248: data[0] = 1;
  1592  005316  0E01               	movlw	1
  1593  005318  0101               	movlb	1	; () banked
  1594  00531A  6F5D               	movwf	_data& (0+255),b
  1595                           
  1596                           ; BSR set to: 1
  1597                           ;parcheggio.c: 249: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1598  00531C  0E0B               	movlw	11
  1599  00531E  0100               	movlb	0	; () banked
  1600  005320  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1601  005322  0E00               	movlw	0
  1602  005324  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1603  005326  0E00               	movlw	0
  1604  005328  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1605  00532A  0E00               	movlw	0
  1606  00532C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1607  00532E  0E5D               	movlw	low _data
  1608  005330  0100               	movlb	0	; () banked
  1609  005332  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1610  005334  0E01               	movlw	high _data
  1611  005336  0100               	movlb	0	; () banked
  1612  005338  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1613  00533A  0E01               	movlw	1
  1614  00533C  0100               	movlb	0	; () banked
  1615  00533E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1616  005340  0EBC               	movlw	188
  1617  005342  0100               	movlb	0	; () banked
  1618  005344  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1619  005346  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1620                           
  1621                           ;parcheggio.c: 250: if ((request_sent1 == 0)&&(sensor_distance[0] < 40)) {
  1622  00534A  B447               	btfsc	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1623  00534C  D02B               	goto	l723
  1624  00534E  5025               	movf	_sensor_distance+1,w,c	;volatile
  1625  005350  E129               	bnz	l723
  1626  005352  0E28               	movlw	40
  1627  005354  5C24               	subwf	_sensor_distance,w,c	;volatile
  1628  005356  B0D8               	btfsc	status,0,c
  1629  005358  D025               	goto	l723
  1630                           
  1631                           ;parcheggio.c: 251: data_test[0] = 80;
  1632  00535A  0E50               	movlw	80
  1633  00535C  0101               	movlb	1	; () banked
  1634  00535E  6F85               	movwf	_data_test& (0+255),b
  1635                           
  1636                           ; BSR set to: 1
  1637                           ;parcheggio.c: 252: asd = 1;
  1638  005360  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  1639  005362                     l7453:
  1640  005362  ECC0  F02F         	call	_CANisTxReady	;wreg free
  1641  005366  0900               	iorlw	0
  1642  005368  B4D8               	btfsc	status,2,c
  1643  00536A  D7FB               	goto	l7453
  1644                           
  1645                           ;parcheggio.c: 254: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1646  00536C  0E0D               	movlw	13
  1647  00536E  0100               	movlb	0	; () banked
  1648  005370  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1649  005372  0E00               	movlw	0
  1650  005374  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1651  005376  0E00               	movlw	0
  1652  005378  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1653  00537A  0E00               	movlw	0
  1654  00537C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1655  00537E  0E85               	movlw	low _data_test
  1656  005380  0100               	movlb	0	; () banked
  1657  005382  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1658  005384  0E01               	movlw	high _data_test
  1659  005386  0100               	movlb	0	; () banked
  1660  005388  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1661  00538A  0E08               	movlw	8
  1662  00538C  0100               	movlb	0	; () banked
  1663  00538E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1664  005390  0EBC               	movlw	188
  1665  005392  0100               	movlb	0	; () banked
  1666  005394  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1667  005396  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1668                           
  1669                           ;parcheggio.c: 256: distance_received1 = 0;
  1670  00539A  9A46               	bcf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  1671                           
  1672                           ;parcheggio.c: 257: request_sent1 = 1;
  1673  00539C  8447               	bsf	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1674                           
  1675                           ;parcheggio.c: 258: }
  1676                           ;parcheggio.c: 259: } else {
  1677  00539E  D002               	goto	l723
  1678  0053A0                     l736:
  1679                           
  1680                           ;parcheggio.c: 260: distance_received = 0;
  1681  0053A0  9846               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1682                           
  1683                           ;parcheggio.c: 261: PORTBbits.RB5 = 0;
  1684  0053A2  9A81               	bcf	3969,5,c	;volatile
  1685  0053A4                     l723:
  1686  0053A4  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1687  0053A6  0012               	return	
  1688  0053A8  BA81               	btfsc	3969,5,c	;volatile
  1689  0053AA  0012               	return	
  1690  0053AC  D726               	goto	l7405
  1691  0053AE                     __end_of_park_search:
  1692                           	opt stack 0
  1693                           tblptru	equ	0xFF8
  1694                           tblptrh	equ	0xFF7
  1695                           tblptrl	equ	0xFF6
  1696                           tablat	equ	0xFF5
  1697                           postinc0	equ	0xFEE
  1698                           wreg	equ	0xFE8
  1699                           postdec1	equ	0xFE5
  1700                           fsr1l	equ	0xFE1
  1701                           postinc2	equ	0xFDE
  1702                           postdec2	equ	0xFDD
  1703                           status	equ	0xFD8
  1704                           
  1705 ;; *************** function _park_routine *****************
  1706 ;; Defined at:
  1707 ;;		line 267 in file "parcheggio.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;		None
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;		None
  1712 ;; Return value:  Size  Location     Type
  1713 ;;		None               void
  1714 ;; Registers used:
  1715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1722 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1723 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1724 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  1725 ;;Total ram usage:       12 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    9
  1728 ;; This function calls:
  1729 ;;		_CANisTxReady
  1730 ;;		_CANsendMessage
  1731 ;;		___fladd
  1732 ;;		___flneg
  1733 ;;		___fltol
  1734 ;;		___xxtofl
  1735 ;;		_can_send
  1736 ;;		_delay_ms
  1737 ;;		_delay_s
  1738 ;;		_matematica
  1739 ;;		_parallelo
  1740 ;; This function is called by:
  1741 ;;		_main
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text2
  1746  0033C8                     __ptext2:
  1747                           	opt stack 0
  1748  0033C8                     _park_routine:
  1749                           	opt stack 21
  1750                           
  1751                           ;parcheggio.c: 268: while ((asd == 1)&&(PORTBbits.RB5 == 1) && (activation == 1)) {
  1752                           
  1753                           ;incstack = 0
  1754  0033C8  D037               	goto	l7475
  1755  0033CA                     l7465:
  1756                           
  1757                           ;parcheggio.c: 269: PORTBbits.RB6 = ~PORTBbits.RB6;
  1758  0033CA  AC81               	btfss	3969,6,c	;volatile
  1759  0033CC  D002               	goto	u9640
  1760  0033CE  0E01               	movlw	1
  1761  0033D0  D001               	goto	u9646
  1762  0033D2                     u9640:
  1763  0033D2  0E00               	movlw	0
  1764  0033D4                     u9646:
  1765  0033D4  0AFF               	xorlw	255
  1766  0033D6  0101               	movlb	1	; () banked
  1767  0033D8  6FD6               	movwf	??_park_routine& (0+255),b
  1768  0033DA  0101               	movlb	1	; () banked
  1769  0033DC  3BD6               	swapf	??_park_routine& (0+255),f,b
  1770  0033DE  47D6               	rlncf	??_park_routine& (0+255),f,b
  1771  0033E0  47D6               	rlncf	??_park_routine& (0+255),f,b
  1772  0033E2  5081               	movf	3969,w,c	;volatile
  1773  0033E4  0101               	movlb	1	; () banked
  1774  0033E6  19D6               	xorwf	??_park_routine& (0+255),w,b
  1775  0033E8  0BBF               	andlw	-65
  1776  0033EA  19D6               	xorwf	??_park_routine& (0+255),w,b
  1777  0033EC  6E81               	movwf	3969,c	;volatile
  1778                           
  1779                           ; BSR set to: 1
  1780                           ;parcheggio.c: 270: parallelo();
  1781  0033EE  ECC3  F024         	call	_parallelo	;wreg free
  1782  0033F2                     l7469:
  1783  0033F2  ECC0  F02F         	call	_CANisTxReady	;wreg free
  1784  0033F6  0900               	iorlw	0
  1785  0033F8  B4D8               	btfsc	status,2,c
  1786  0033FA  D7FB               	goto	l7469
  1787                           
  1788                           ;parcheggio.c: 272: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1789  0033FC  0E0E               	movlw	14
  1790  0033FE  0100               	movlb	0	; () banked
  1791  003400  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1792  003402  0E00               	movlw	0
  1793  003404  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1794  003406  0E00               	movlw	0
  1795  003408  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1796  00340A  0E00               	movlw	0
  1797  00340C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1798  00340E  0E6D               	movlw	low _data_correction
  1799  003410  0100               	movlb	0	; () banked
  1800  003412  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1801  003414  0E01               	movlw	high _data_correction
  1802  003416  0100               	movlb	0	; () banked
  1803  003418  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1804  00341A  0E08               	movlw	8
  1805  00341C  0100               	movlb	0	; () banked
  1806  00341E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1807  003420  0EBC               	movlw	188
  1808  003422  0100               	movlb	0	; () banked
  1809  003424  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1810  003426  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1811                           
  1812                           ;parcheggio.c: 273: delay_ms(100);
  1813  00342A  0E00               	movlw	0
  1814  00342C  0100               	movlb	0	; () banked
  1815  00342E  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1816  003430  0E64               	movlw	100
  1817  003432  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1818  003434  EC7A  F02F         	call	_delay_ms	;wreg free
  1819  003438                     l7475:
  1820  003438  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  1821  00343A  AA81               	btfss	3969,5,c	;volatile
  1822  00343C  D002               	goto	l755
  1823  00343E  B046               	btfsc	_activation/(0+8),_activation& (0+7),c	;volatile
  1824  003440  D7C4               	goto	l7465
  1825  003442                     l755:
  1826                           
  1827                           ;parcheggio.c: 274: }
  1828                           ;parcheggio.c: 275: if ((PORTBbits.RB5 == 1) && (activation == 1)) {
  1829  003442  BA81               	btfsc	3969,5,c	;volatile
  1830  003444  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1831  003446  D02F               	goto	l7495
  1832                           
  1833                           ;parcheggio.c: 276: PORTBbits.RB6 = 0;
  1834  003448  9C81               	bcf	3969,6,c	;volatile
  1835                           
  1836                           ;parcheggio.c: 277: data[0] = 2;
  1837  00344A  0E02               	movlw	2
  1838  00344C  0101               	movlb	1	; () banked
  1839  00344E  6F5D               	movwf	_data& (0+255),b
  1840                           
  1841                           ; BSR set to: 1
  1842                           ;parcheggio.c: 278: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1843  003450  0E0B               	movlw	11
  1844  003452  0100               	movlb	0	; () banked
  1845  003454  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1846  003456  0E00               	movlw	0
  1847  003458  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1848  00345A  0E00               	movlw	0
  1849  00345C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1850  00345E  0E00               	movlw	0
  1851  003460  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1852  003462  0E5D               	movlw	low _data
  1853  003464  0100               	movlb	0	; () banked
  1854  003466  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1855  003468  0E01               	movlw	high _data
  1856  00346A  0100               	movlb	0	; () banked
  1857  00346C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1858  00346E  0E01               	movlw	1
  1859  003470  0100               	movlb	0	; () banked
  1860  003472  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1861  003474  0EBC               	movlw	188
  1862  003476  0100               	movlb	0	; () banked
  1863  003478  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1864  00347A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1865                           
  1866                           ;parcheggio.c: 279: }
  1867                           ;parcheggio.c: 280: while ((start_operation != 1)&&(activation == 1)) {
  1868  00347E  D013               	goto	l7495
  1869  003480                     l758:
  1870                           
  1871                           ;parcheggio.c: 281: if (first == 0) {
  1872  003480  BE46               	btfsc	_first/(0+8),_first& (0+7),c	;volatile
  1873  003482  D011               	goto	l7495
  1874                           
  1875                           ;parcheggio.c: 282: set_speed = 0;
  1876  003484  0E00               	movlw	0
  1877  003486  0101               	movlb	1	; () banked
  1878  003488  6F4D               	movwf	(_set_speed+1)& (0+255),b
  1879  00348A  0E00               	movlw	0
  1880  00348C  6F4C               	movwf	_set_speed& (0+255),b
  1881                           
  1882                           ;parcheggio.c: 283: data_steering[0] = 90;
  1883  00348E  0E5A               	movlw	90
  1884  003490  0101               	movlb	1	; () banked
  1885  003492  6F7D               	movwf	_data_steering& (0+255),b
  1886                           
  1887                           ;parcheggio.c: 284: data_brake [0] = 0;
  1888  003494  0E00               	movlw	0
  1889  003496  0101               	movlb	1	; () banked
  1890  003498  6F65               	movwf	_data_brake& (0+255),b
  1891                           
  1892                           ;parcheggio.c: 285: data_brake [1] = 1;
  1893  00349A  0E01               	movlw	1
  1894  00349C  0101               	movlb	1	; () banked
  1895  00349E  6F66               	movwf	(_data_brake+1)& (0+255),b
  1896                           
  1897                           ; BSR set to: 1
  1898                           ;parcheggio.c: 286: can_send();
  1899  0034A0  EC9F  F02A         	call	_can_send	;wreg free
  1900                           
  1901                           ;parcheggio.c: 287: first = 1;
  1902  0034A4  8E46               	bsf	_first/(0+8),_first& (0+7),c	;volatile
  1903  0034A6                     l7495:
  1904  0034A6  A647               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1905  0034A8  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1906  0034AA  D1BD               	goto	l7607
  1907  0034AC  D7E9               	goto	l758
  1908  0034AE                     l764:
  1909                           
  1910                           ;parcheggio.c: 291: LATBbits.LATB4 = 1;
  1911  0034AE  888A               	bsf	3978,4,c	;volatile
  1912                           
  1913                           ;parcheggio.c: 293: bordo = (sensor_distance[0] + sensor_distance[1]) / 2;
  1914  0034B0  5024               	movf	_sensor_distance,w,c	;volatile
  1915  0034B2  2426               	addwf	_sensor_distance+2,w,c	;volatile
  1916  0034B4  0101               	movlb	1	; () banked
  1917  0034B6  6FD6               	movwf	??_park_routine& (0+255),b
  1918  0034B8  5025               	movf	_sensor_distance+1,w,c	;volatile
  1919  0034BA  2027               	addwfc	_sensor_distance+3,w,c	;volatile
  1920  0034BC  0101               	movlb	1	; () banked
  1921  0034BE  6FD7               	movwf	(??_park_routine+1)& (0+255),b
  1922  0034C0  90D8               	bcf	status,0,c
  1923  0034C2  0101               	movlb	1	; () banked
  1924  0034C4  31D7               	rrcf	(??_park_routine+1)& (0+255),w,b
  1925  0034C6  0101               	movlb	1	; () banked
  1926  0034C8  6FD9               	movwf	(??_park_routine+3)& (0+255),b
  1927  0034CA  0101               	movlb	1	; () banked
  1928  0034CC  31D6               	rrcf	??_park_routine& (0+255),w,b
  1929  0034CE  0101               	movlb	1	; () banked
  1930  0034D0  6FD8               	movwf	(??_park_routine+2)& (0+255),b
  1931  0034D2  C1D8  F0CB         	movff	??_park_routine+2,___xxtofl@val
  1932  0034D6  C1D9  F0CC         	movff	??_park_routine+3,___xxtofl@val+1
  1933  0034DA  0100               	movlb	0	; () banked
  1934  0034DC  6BCD               	clrf	(___xxtofl@val+2)& (0+255),b
  1935  0034DE  6BCE               	clrf	(___xxtofl@val+3)& (0+255),b
  1936  0034E0  0E00               	movlw	0
  1937  0034E2  EC32  F027         	call	___xxtofl
  1938  0034E6  C0CB  F124         	movff	?___xxtofl,_bordo	;volatile
  1939  0034EA  C0CC  F125         	movff	?___xxtofl+1,_bordo+1	;volatile
  1940  0034EE  C0CD  F126         	movff	?___xxtofl+2,_bordo+2	;volatile
  1941  0034F2  C0CE  F127         	movff	?___xxtofl+3,_bordo+3	;volatile
  1942                           
  1943                           ;parcheggio.c: 294: matematica();
  1944  0034F6  ECF2  F00F         	call	_matematica	;wreg free
  1945                           
  1946                           ;parcheggio.c: 295: set_speed = 0;
  1947  0034FA  0E00               	movlw	0
  1948  0034FC  0101               	movlb	1	; () banked
  1949  0034FE  6F4D               	movwf	(_set_speed+1)& (0+255),b
  1950  003500  0E00               	movlw	0
  1951  003502  6F4C               	movwf	_set_speed& (0+255),b
  1952                           
  1953                           ; BSR set to: 1
  1954                           ;parcheggio.c: 296: data_steering[0] = 90;
  1955  003504  0E5A               	movlw	90
  1956  003506  0101               	movlb	1	; () banked
  1957  003508  6F7D               	movwf	_data_steering& (0+255),b
  1958                           
  1959                           ; BSR set to: 1
  1960                           ;parcheggio.c: 297: data_brake [0] = 0;
  1961  00350A  0E00               	movlw	0
  1962  00350C  0101               	movlb	1	; () banked
  1963  00350E  6F65               	movwf	_data_brake& (0+255),b
  1964                           
  1965                           ; BSR set to: 1
  1966                           ;parcheggio.c: 298: data_brake [1] = 1;
  1967  003510  0E01               	movlw	1
  1968  003512  0101               	movlb	1	; () banked
  1969  003514  6F66               	movwf	(_data_brake+1)& (0+255),b
  1970                           
  1971                           ; BSR set to: 1
  1972                           ;parcheggio.c: 299: can_send();
  1973  003516  EC9F  F02A         	call	_can_send	;wreg free
  1974                           
  1975                           ;parcheggio.c: 300: delay_s(1);
  1976  00351A  0E01               	movlw	1
  1977  00351C  ECAA  F02F         	call	_delay_s
  1978                           
  1979                           ;parcheggio.c: 302: data_brake [0] = 3;
  1980  003520  0E03               	movlw	3
  1981  003522  0101               	movlb	1	; () banked
  1982  003524  6F65               	movwf	_data_brake& (0+255),b
  1983                           
  1984                           ; BSR set to: 1
  1985                           ;parcheggio.c: 303: data_brake [1] = 1;
  1986  003526  0E01               	movlw	1
  1987  003528  0101               	movlb	1	; () banked
  1988  00352A  6F66               	movwf	(_data_brake+1)& (0+255),b
  1989                           
  1990                           ; BSR set to: 1
  1991                           ;parcheggio.c: 305: set_speed = 1000;
  1992  00352C  0E03               	movlw	3
  1993  00352E  0101               	movlb	1	; () banked
  1994  003530  6F4D               	movwf	(_set_speed+1)& (0+255),b
  1995  003532  0EE8               	movlw	232
  1996  003534  6F4C               	movwf	_set_speed& (0+255),b
  1997                           
  1998                           ; BSR set to: 1
  1999                           ;parcheggio.c: 306: dir = 0;
  2000  003536  9446               	bcf	_dir/(0+8),_dir& (0+7),c
  2001                           
  2002                           ; BSR set to: 1
  2003                           ;parcheggio.c: 307: data_steering[0] = 90;
  2004  003538  0E5A               	movlw	90
  2005  00353A  0101               	movlb	1	; () banked
  2006  00353C  6F7D               	movwf	_data_steering& (0+255),b
  2007                           
  2008                           ; BSR set to: 1
  2009                           ;parcheggio.c: 308: data_test[0] = ((80 + Pminimo + 5)-(n + 41));
  2010  00353E  0E00               	movlw	0
  2011  003540  0100               	movlb	0	; () banked
  2012  003542  6FAD               	movwf	___fladd@a& (0+255),b
  2013  003544  0E00               	movlw	0
  2014  003546  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2015  003548  0E24               	movlw	36
  2016  00354A  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2017  00354C  0E42               	movlw	66
  2018  00354E  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2019  003550  C130  F0A9         	movff	_n,___fladd@b
  2020  003554  C131  F0AA         	movff	_n+1,___fladd@b+1
  2021  003558  C132  F0AB         	movff	_n+2,___fladd@b+2
  2022  00355C  C133  F0AC         	movff	_n+3,___fladd@b+3
  2023  003560  EC3D  F015         	call	___fladd	;wreg free
  2024  003564  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  2025  003568  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  2026  00356C  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  2027  003570  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  2028  003574  EC43  F02F         	call	___flneg	;wreg free
  2029  003578  C0BD  F1DA         	movff	?___flneg,_park_routine$3739
  2030  00357C  C0BE  F1DB         	movff	?___flneg+1,_park_routine$3739+1
  2031  003580  C0BF  F1DC         	movff	?___flneg+2,_park_routine$3739+2
  2032  003584  C0C0  F1DD         	movff	?___flneg+3,_park_routine$3739+3
  2033                           
  2034                           ;parcheggio.c: 308: data_test[0] = ((80 + Pminimo + 5)-(n + 41));
  2035  003588  C118  F0AD         	movff	_Pminimo,___fladd@a
  2036  00358C  C119  F0AE         	movff	_Pminimo+1,___fladd@a+1
  2037  003590  C11A  F0AF         	movff	_Pminimo+2,___fladd@a+2
  2038  003594  C11B  F0B0         	movff	_Pminimo+3,___fladd@a+3
  2039  003598  C1DA  F0A9         	movff	_park_routine$3739,___fladd@b
  2040  00359C  C1DB  F0AA         	movff	_park_routine$3739+1,___fladd@b+1
  2041  0035A0  C1DC  F0AB         	movff	_park_routine$3739+2,___fladd@b+2
  2042  0035A4  C1DD  F0AC         	movff	_park_routine$3739+3,___fladd@b+3
  2043  0035A8  EC3D  F015         	call	___fladd	;wreg free
  2044  0035AC  C0A9  F1DE         	movff	?___fladd,_park_routine$3740
  2045  0035B0  C0AA  F1DF         	movff	?___fladd+1,_park_routine$3740+1
  2046  0035B4  C0AB  F1E0         	movff	?___fladd+2,_park_routine$3740+2
  2047  0035B8  C0AC  F1E1         	movff	?___fladd+3,_park_routine$3740+3
  2048                           
  2049                           ;parcheggio.c: 308: data_test[0] = ((80 + Pminimo + 5)-(n + 41));
  2050  0035BC  0E00               	movlw	0
  2051  0035BE  0100               	movlb	0	; () banked
  2052  0035C0  6FAD               	movwf	___fladd@a& (0+255),b
  2053  0035C2  0E00               	movlw	0
  2054  0035C4  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2055  0035C6  0EAA               	movlw	170
  2056  0035C8  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2057  0035CA  0E42               	movlw	66
  2058  0035CC  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2059  0035CE  C1DE  F0A9         	movff	_park_routine$3740,___fladd@b
  2060  0035D2  C1DF  F0AA         	movff	_park_routine$3740+1,___fladd@b+1
  2061  0035D6  C1E0  F0AB         	movff	_park_routine$3740+2,___fladd@b+2
  2062  0035DA  C1E1  F0AC         	movff	_park_routine$3740+3,___fladd@b+3
  2063  0035DE  EC3D  F015         	call	___fladd	;wreg free
  2064  0035E2  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2065  0035E6  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2066  0035EA  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2067  0035EE  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2068  0035F2  EC58  F02C         	call	___fltol	;wreg free
  2069  0035F6  0100               	movlb	0	; () banked
  2070  0035F8  51C1               	movf	?___fltol& (0+255),w,b
  2071  0035FA  0101               	movlb	1	; () banked
  2072  0035FC  6F85               	movwf	_data_test& (0+255),b
  2073                           
  2074                           ; BSR set to: 1
  2075                           ;parcheggio.c: 309: asd = 1;
  2076  0035FE  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2077                           
  2078                           ; BSR set to: 1
  2079                           ;parcheggio.c: 310: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2080  003600  0E0D               	movlw	13
  2081  003602  0100               	movlb	0	; () banked
  2082  003604  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2083  003606  0E00               	movlw	0
  2084  003608  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2085  00360A  0E00               	movlw	0
  2086  00360C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2087  00360E  0E00               	movlw	0
  2088  003610  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2089  003612  0E85               	movlw	low _data_test
  2090  003614  0100               	movlb	0	; () banked
  2091  003616  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2092  003618  0E01               	movlw	high _data_test
  2093  00361A  0100               	movlb	0	; () banked
  2094  00361C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2095  00361E  0E08               	movlw	8
  2096  003620  0100               	movlb	0	; () banked
  2097  003622  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2098  003624  0EBC               	movlw	188
  2099  003626  0100               	movlb	0	; () banked
  2100  003628  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2101  00362A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2102                           
  2103                           ;parcheggio.c: 311: can_send();
  2104  00362E  EC9F  F02A         	call	_can_send	;wreg free
  2105  003632                     l765:
  2106  003632  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2107  003634  D7FE               	goto	l765
  2108                           
  2109                           ;parcheggio.c: 314: set_speed = 0;
  2110  003636  0E00               	movlw	0
  2111  003638  0101               	movlb	1	; () banked
  2112  00363A  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2113  00363C  0E00               	movlw	0
  2114  00363E  6F4C               	movwf	_set_speed& (0+255),b
  2115                           
  2116                           ;parcheggio.c: 315: data_steering[0] = 90;
  2117  003640  0E5A               	movlw	90
  2118  003642  0101               	movlb	1	; () banked
  2119  003644  6F7D               	movwf	_data_steering& (0+255),b
  2120                           
  2121                           ;parcheggio.c: 316: data_brake [0] = 0;
  2122  003646  0E00               	movlw	0
  2123  003648  0101               	movlb	1	; () banked
  2124  00364A  6F65               	movwf	_data_brake& (0+255),b
  2125                           
  2126                           ;parcheggio.c: 317: data_brake [1] = 1;
  2127  00364C  0E01               	movlw	1
  2128  00364E  0101               	movlb	1	; () banked
  2129  003650  6F66               	movwf	(_data_brake+1)& (0+255),b
  2130                           
  2131                           ; BSR set to: 1
  2132                           ;parcheggio.c: 318: can_send();
  2133  003652  EC9F  F02A         	call	_can_send	;wreg free
  2134                           
  2135                           ;parcheggio.c: 319: delay_s(1);
  2136  003656  0E01               	movlw	1
  2137  003658  ECAA  F02F         	call	_delay_s
  2138                           
  2139                           ;parcheggio.c: 321: data_brake [0] = 3;
  2140  00365C  0E03               	movlw	3
  2141  00365E  0101               	movlb	1	; () banked
  2142  003660  6F65               	movwf	_data_brake& (0+255),b
  2143                           
  2144                           ; BSR set to: 1
  2145                           ;parcheggio.c: 322: data_brake [1] = 1;
  2146  003662  0E01               	movlw	1
  2147  003664  0101               	movlb	1	; () banked
  2148  003666  6F66               	movwf	(_data_brake+1)& (0+255),b
  2149                           
  2150                           ; BSR set to: 1
  2151                           ;parcheggio.c: 323: set_speed = 1000;
  2152  003668  0E03               	movlw	3
  2153  00366A  0101               	movlb	1	; () banked
  2154  00366C  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2155  00366E  0EE8               	movlw	232
  2156  003670  6F4C               	movwf	_set_speed& (0+255),b
  2157                           
  2158                           ; BSR set to: 1
  2159                           ;parcheggio.c: 324: dir = 0;
  2160  003672  9446               	bcf	_dir/(0+8),_dir& (0+7),c
  2161                           
  2162                           ; BSR set to: 1
  2163                           ;parcheggio.c: 325: data_steering[0] = 180;
  2164  003674  0EB4               	movlw	180
  2165  003676  0101               	movlb	1	; () banked
  2166  003678  6F7D               	movwf	_data_steering& (0+255),b
  2167                           
  2168                           ; BSR set to: 1
  2169                           ;parcheggio.c: 326: data_test[0] = prima_sterzata;
  2170  00367A  C138  F0C1         	movff	_prima_sterzata,___fltol@f1
  2171  00367E  C139  F0C2         	movff	_prima_sterzata+1,___fltol@f1+1
  2172  003682  C13A  F0C3         	movff	_prima_sterzata+2,___fltol@f1+2
  2173  003686  C13B  F0C4         	movff	_prima_sterzata+3,___fltol@f1+3
  2174  00368A  EC58  F02C         	call	___fltol	;wreg free
  2175  00368E  0100               	movlb	0	; () banked
  2176  003690  51C1               	movf	?___fltol& (0+255),w,b
  2177  003692  0101               	movlb	1	; () banked
  2178  003694  6F85               	movwf	_data_test& (0+255),b
  2179                           
  2180                           ; BSR set to: 1
  2181                           ;parcheggio.c: 327: asd = 1;
  2182  003696  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2183                           
  2184                           ; BSR set to: 1
  2185                           ;parcheggio.c: 328: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2186  003698  0E0D               	movlw	13
  2187  00369A  0100               	movlb	0	; () banked
  2188  00369C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2189  00369E  0E00               	movlw	0
  2190  0036A0  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2191  0036A2  0E00               	movlw	0
  2192  0036A4  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2193  0036A6  0E00               	movlw	0
  2194  0036A8  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2195  0036AA  0E85               	movlw	low _data_test
  2196  0036AC  0100               	movlb	0	; () banked
  2197  0036AE  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2198  0036B0  0E01               	movlw	high _data_test
  2199  0036B2  0100               	movlb	0	; () banked
  2200  0036B4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2201  0036B6  0E08               	movlw	8
  2202  0036B8  0100               	movlb	0	; () banked
  2203  0036BA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2204  0036BC  0EBC               	movlw	188
  2205  0036BE  0100               	movlb	0	; () banked
  2206  0036C0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2207  0036C2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2208                           
  2209                           ;parcheggio.c: 329: can_send();
  2210  0036C6  EC9F  F02A         	call	_can_send	;wreg free
  2211  0036CA                     l768:
  2212  0036CA  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2213  0036CC  D7FE               	goto	l768
  2214                           
  2215                           ;parcheggio.c: 331: set_speed = 1000;
  2216  0036CE  0E03               	movlw	3
  2217  0036D0  0101               	movlb	1	; () banked
  2218  0036D2  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2219  0036D4  0EE8               	movlw	232
  2220  0036D6  6F4C               	movwf	_set_speed& (0+255),b
  2221                           
  2222                           ;parcheggio.c: 332: data_steering[0] = 0;
  2223  0036D8  0E00               	movlw	0
  2224  0036DA  0101               	movlb	1	; () banked
  2225  0036DC  6F7D               	movwf	_data_steering& (0+255),b
  2226                           
  2227                           ; BSR set to: 1
  2228                           ;parcheggio.c: 333: asd = 1;
  2229  0036DE  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2230                           
  2231                           ; BSR set to: 1
  2232                           ;parcheggio.c: 334: data_test[0] = prima_sterzata + 13;
  2233  0036E0  0E00               	movlw	0
  2234  0036E2  0100               	movlb	0	; () banked
  2235  0036E4  6FAD               	movwf	___fladd@a& (0+255),b
  2236  0036E6  0E00               	movlw	0
  2237  0036E8  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2238  0036EA  0E50               	movlw	80
  2239  0036EC  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2240  0036EE  0E41               	movlw	65
  2241  0036F0  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2242  0036F2  C138  F0A9         	movff	_prima_sterzata,___fladd@b
  2243  0036F6  C139  F0AA         	movff	_prima_sterzata+1,___fladd@b+1
  2244  0036FA  C13A  F0AB         	movff	_prima_sterzata+2,___fladd@b+2
  2245  0036FE  C13B  F0AC         	movff	_prima_sterzata+3,___fladd@b+3
  2246  003702  EC3D  F015         	call	___fladd	;wreg free
  2247  003706  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2248  00370A  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2249  00370E  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2250  003712  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2251  003716  EC58  F02C         	call	___fltol	;wreg free
  2252  00371A  0100               	movlb	0	; () banked
  2253  00371C  51C1               	movf	?___fltol& (0+255),w,b
  2254  00371E  0101               	movlb	1	; () banked
  2255  003720  6F85               	movwf	_data_test& (0+255),b
  2256                           
  2257                           ; BSR set to: 1
  2258                           ;parcheggio.c: 335: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2259  003722  0E0D               	movlw	13
  2260  003724  0100               	movlb	0	; () banked
  2261  003726  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2262  003728  0E00               	movlw	0
  2263  00372A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2264  00372C  0E00               	movlw	0
  2265  00372E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2266  003730  0E00               	movlw	0
  2267  003732  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2268  003734  0E85               	movlw	low _data_test
  2269  003736  0100               	movlb	0	; () banked
  2270  003738  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2271  00373A  0E01               	movlw	high _data_test
  2272  00373C  0100               	movlb	0	; () banked
  2273  00373E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2274  003740  0E08               	movlw	8
  2275  003742  0100               	movlb	0	; () banked
  2276  003744  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2277  003746  0EBC               	movlw	188
  2278  003748  0100               	movlb	0	; () banked
  2279  00374A  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2280  00374C  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2281                           
  2282                           ;parcheggio.c: 336: can_send();
  2283  003750  EC9F  F02A         	call	_can_send	;wreg free
  2284  003754                     l771:
  2285  003754  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2286  003756  D7FE               	goto	l771
  2287                           
  2288                           ;parcheggio.c: 338: data_brake [0] = 0;
  2289  003758  0E00               	movlw	0
  2290  00375A  0101               	movlb	1	; () banked
  2291  00375C  6F65               	movwf	_data_brake& (0+255),b
  2292                           
  2293                           ;parcheggio.c: 339: data_brake [1] = 1;
  2294  00375E  0E01               	movlw	1
  2295  003760  0101               	movlb	1	; () banked
  2296  003762  6F66               	movwf	(_data_brake+1)& (0+255),b
  2297                           
  2298                           ;parcheggio.c: 340: set_speed = 0;
  2299  003764  0E00               	movlw	0
  2300  003766  0101               	movlb	1	; () banked
  2301  003768  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2302  00376A  0E00               	movlw	0
  2303  00376C  6F4C               	movwf	_set_speed& (0+255),b
  2304                           
  2305                           ;parcheggio.c: 341: data_steering[0] = 90;
  2306  00376E  0E5A               	movlw	90
  2307  003770  0101               	movlb	1	; () banked
  2308  003772  6F7D               	movwf	_data_steering& (0+255),b
  2309                           
  2310                           ; BSR set to: 1
  2311                           ;parcheggio.c: 342: can_send();
  2312  003774  EC9F  F02A         	call	_can_send	;wreg free
  2313                           
  2314                           ;parcheggio.c: 343: delay_s(1);
  2315  003778  0E01               	movlw	1
  2316  00377A  ECAA  F02F         	call	_delay_s
  2317                           
  2318                           ;parcheggio.c: 344: if (sensor_distance [2] > 20) {
  2319  00377E  5029               	movf	_sensor_distance+5,w,c	;volatile
  2320  003780  E104               	bnz	u9770
  2321  003782  0E15               	movlw	21
  2322  003784  5C28               	subwf	_sensor_distance+4,w,c	;volatile
  2323  003786  A0D8               	btfss	status,0,c
  2324  003788  D017               	goto	l7587
  2325  00378A                     u9770:
  2326                           
  2327                           ;parcheggio.c: 345: data_brake [0] = 3;
  2328  00378A  0E03               	movlw	3
  2329  00378C  0101               	movlb	1	; () banked
  2330  00378E  6F65               	movwf	_data_brake& (0+255),b
  2331                           
  2332                           ;parcheggio.c: 346: data_brake [1] = 1;
  2333  003790  0E01               	movlw	1
  2334  003792  0101               	movlb	1	; () banked
  2335  003794  6F66               	movwf	(_data_brake+1)& (0+255),b
  2336                           
  2337                           ;parcheggio.c: 347: set_speed = 500;
  2338  003796  0E01               	movlw	1
  2339  003798  0101               	movlb	1	; () banked
  2340  00379A  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2341  00379C  0EF4               	movlw	244
  2342  00379E  6F4C               	movwf	_set_speed& (0+255),b
  2343                           
  2344                           ;parcheggio.c: 348: data_steering[0] = 90;
  2345  0037A0  0E5A               	movlw	90
  2346  0037A2  0101               	movlb	1	; () banked
  2347  0037A4  6F7D               	movwf	_data_steering& (0+255),b
  2348                           
  2349                           ; BSR set to: 1
  2350                           ;parcheggio.c: 349: dir = 1;
  2351  0037A6  8446               	bsf	_dir/(0+8),_dir& (0+7),c
  2352                           
  2353                           ; BSR set to: 1
  2354                           ;parcheggio.c: 350: can_send();
  2355  0037A8  EC9F  F02A         	call	_can_send	;wreg free
  2356  0037AC                     l7585:
  2357  0037AC  5029               	movf	_sensor_distance+5,w,c	;volatile
  2358  0037AE  E1FE               	bnz	l7585
  2359  0037B0  0E15               	movlw	21
  2360  0037B2  5C28               	subwf	_sensor_distance+4,w,c	;volatile
  2361  0037B4  B0D8               	btfsc	status,0,c
  2362  0037B6  D7FA               	goto	l7585
  2363  0037B8                     l7587:
  2364                           
  2365                           ;parcheggio.c: 352: }
  2366                           ;parcheggio.c: 353: data_brake [0] = 0;
  2367  0037B8  0E00               	movlw	0
  2368  0037BA  0101               	movlb	1	; () banked
  2369  0037BC  6F65               	movwf	_data_brake& (0+255),b
  2370                           
  2371                           ;parcheggio.c: 354: data_brake [1] = 1;
  2372  0037BE  0E01               	movlw	1
  2373  0037C0  0101               	movlb	1	; () banked
  2374  0037C2  6F66               	movwf	(_data_brake+1)& (0+255),b
  2375                           
  2376                           ;parcheggio.c: 355: set_speed = 0;
  2377  0037C4  0E00               	movlw	0
  2378  0037C6  0101               	movlb	1	; () banked
  2379  0037C8  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2380  0037CA  0E00               	movlw	0
  2381  0037CC  6F4C               	movwf	_set_speed& (0+255),b
  2382                           
  2383                           ;parcheggio.c: 356: data_steering[0] = 90;
  2384  0037CE  0E5A               	movlw	90
  2385  0037D0  0101               	movlb	1	; () banked
  2386  0037D2  6F7D               	movwf	_data_steering& (0+255),b
  2387                           
  2388                           ; BSR set to: 1
  2389                           ;parcheggio.c: 357: dir = 0;
  2390  0037D4  9446               	bcf	_dir/(0+8),_dir& (0+7),c
  2391                           
  2392                           ; BSR set to: 1
  2393                           ;parcheggio.c: 358: can_send();
  2394  0037D6  EC9F  F02A         	call	_can_send	;wreg free
  2395                           
  2396                           ;parcheggio.c: 359: delay_s(1);
  2397  0037DA  0E01               	movlw	1
  2398  0037DC  ECAA  F02F         	call	_delay_s
  2399                           
  2400                           ;parcheggio.c: 360: activation = 0;
  2401  0037E0  9046               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
  2402                           
  2403                           ;parcheggio.c: 361: PORTBbits.RB5 = 0;
  2404  0037E2  9A81               	bcf	3969,5,c	;volatile
  2405                           
  2406                           ;parcheggio.c: 362: start_operation = 0;
  2407  0037E4  9647               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2408                           
  2409                           ;parcheggio.c: 363: data[0] = 3;
  2410  0037E6  0E03               	movlw	3
  2411  0037E8  0101               	movlb	1	; () banked
  2412  0037EA  6F5D               	movwf	_data& (0+255),b
  2413  0037EC                     l7603:
  2414  0037EC  ECC0  F02F         	call	_CANisTxReady	;wreg free
  2415  0037F0  0900               	iorlw	0
  2416  0037F2  B4D8               	btfsc	status,2,c
  2417  0037F4  D7FB               	goto	l7603
  2418                           
  2419                           ;parcheggio.c: 365: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2420  0037F6  0E0B               	movlw	11
  2421  0037F8  0100               	movlb	0	; () banked
  2422  0037FA  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2423  0037FC  0E00               	movlw	0
  2424  0037FE  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2425  003800  0E00               	movlw	0
  2426  003802  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2427  003804  0E00               	movlw	0
  2428  003806  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2429  003808  0E5D               	movlw	low _data
  2430  00380A  0100               	movlb	0	; () banked
  2431  00380C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2432  00380E  0E01               	movlw	high _data
  2433  003810  0100               	movlb	0	; () banked
  2434  003812  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2435  003814  0E01               	movlw	1
  2436  003816  0100               	movlb	0	; () banked
  2437  003818  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2438  00381A  0EBC               	movlw	188
  2439  00381C  0100               	movlb	0	; () banked
  2440  00381E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2441  003820  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2442  003824  00FF               	reset		;# 
  2443  003826                     l7607:
  2444  003826  AA81               	btfss	3969,5,c	;volatile
  2445  003828  0012               	return	
  2446  00382A  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2447  00382C  0012               	return	
  2448  00382E  A647               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2449  003830  0012               	return	
  2450  003832  D63D               	goto	l764
  2451  003834                     __end_of_park_routine:
  2452                           	opt stack 0
  2453                           tblptru	equ	0xFF8
  2454                           tblptrh	equ	0xFF7
  2455                           tblptrl	equ	0xFF6
  2456                           tablat	equ	0xFF5
  2457                           postinc0	equ	0xFEE
  2458                           wreg	equ	0xFE8
  2459                           postdec1	equ	0xFE5
  2460                           fsr1l	equ	0xFE1
  2461                           postinc2	equ	0xFDE
  2462                           postdec2	equ	0xFDD
  2463                           status	equ	0xFD8
  2464                           
  2465 ;; *************** function _parallelo *****************
  2466 ;; Defined at:
  2467 ;;		line 391 in file "parcheggio.c"
  2468 ;; Parameters:    Size  Location     Type
  2469 ;;		None
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;		None
  2472 ;; Return value:  Size  Location     Type
  2473 ;;		None               void
  2474 ;; Registers used:
  2475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2483 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2484 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2485 ;;Total ram usage:        2 bytes
  2486 ;; Hardware stack levels used:    1
  2487 ;; Hardware stack levels required when called:    8
  2488 ;; This function calls:
  2489 ;;		___fladd
  2490 ;;		___fldiv
  2491 ;;		___flge
  2492 ;;		___flmul
  2493 ;;		___fltol
  2494 ;;		___xxtofl
  2495 ;;		_abs
  2496 ;;		_asin
  2497 ;;		_can_send
  2498 ;;		_sqrt
  2499 ;; This function is called by:
  2500 ;;		_park_search
  2501 ;;		_park_routine
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           	psect	text3
  2506  004986                     __ptext3:
  2507                           	opt stack 0
  2508  004986                     _parallelo:
  2509                           	opt stack 21
  2510                           
  2511                           ;parcheggio.c: 392: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  2512                           
  2513                           ;incstack = 0
  2514  004986  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  2515  00498A  CFDE F0E2          	movff	postinc2,??_parallelo
  2516  00498E  CFDD F0E3          	movff	postdec2,??_parallelo+1
  2517  004992  0100               	movlb	0	; () banked
  2518  004994  1FE2               	comf	??_parallelo& (0+255),f,b
  2519  004996  1FE3               	comf	(??_parallelo+1)& (0+255),f,b
  2520  004998  4BE2               	infsnz	??_parallelo& (0+255),f,b
  2521  00499A  2BE3               	incf	(??_parallelo+1)& (0+255),f,b
  2522  00499C  5024               	movf	_sensor_distance,w,c	;volatile
  2523  00499E  0100               	movlb	0	; () banked
  2524  0049A0  25E2               	addwf	??_parallelo& (0+255),w,b
  2525  0049A2  0100               	movlb	0	; () banked
  2526  0049A4  6F77               	movwf	abs@a& (0+255),b
  2527  0049A6  5025               	movf	_sensor_distance+1,w,c	;volatile
  2528  0049A8  0100               	movlb	0	; () banked
  2529  0049AA  21E3               	addwfc	(??_parallelo+1)& (0+255),w,b
  2530  0049AC  0100               	movlb	0	; () banked
  2531  0049AE  6F78               	movwf	(abs@a+1)& (0+255),b
  2532  0049B0  EC94  F02F         	call	_abs	;wreg free
  2533  0049B4  0100               	movlb	0	; () banked
  2534  0049B6  C077  F0CB         	movff	?_abs,___xxtofl@val
  2535  0049BA  0100               	movlb	0	; () banked
  2536  0049BC  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  2537  0049C0  0100               	movlb	0	; () banked
  2538  0049C2  0E00               	movlw	0
  2539  0049C4  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2540  0049C6  0EFF               	movlw	-1
  2541  0049C8  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  2542  0049CA  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  2543  0049CC  0E01               	movlw	1
  2544  0049CE  EC32  F027         	call	___xxtofl
  2545  0049D2  C0CB  F0E4         	movff	?___xxtofl,_alignment_gap
  2546  0049D6  C0CC  F0E5         	movff	?___xxtofl+1,_alignment_gap+1
  2547  0049DA  C0CD  F0E6         	movff	?___xxtofl+2,_alignment_gap+2
  2548  0049DE  C0CE  F0E7         	movff	?___xxtofl+3,_alignment_gap+3
  2549                           
  2550                           ;parcheggio.c: 393: if (alignment_gap < 30) {
  2551  0049E2  C0E4  F0C5         	movff	_alignment_gap,___flge@ff1
  2552  0049E6  C0E5  F0C6         	movff	_alignment_gap+1,___flge@ff1+1
  2553  0049EA  C0E6  F0C7         	movff	_alignment_gap+2,___flge@ff1+2
  2554  0049EE  C0E7  F0C8         	movff	_alignment_gap+3,___flge@ff1+3
  2555  0049F2  0E00               	movlw	0
  2556  0049F4  0100               	movlb	0	; () banked
  2557  0049F6  6FC9               	movwf	___flge@ff2& (0+255),b
  2558  0049F8  0E00               	movlw	0
  2559  0049FA  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  2560  0049FC  0EF0               	movlw	240
  2561  0049FE  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  2562  004A00  0E41               	movlw	65
  2563  004A02  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  2564  004A04  ECD7  F029         	call	___flge	;wreg free
  2565  004A08  0100               	movlb	0	; () banked
  2566  004A0A  B0D8               	btfsc	status,0,c
  2567  004A0C  D0F9               	goto	l801
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;parcheggio.c: 394: if ((sensor_distance[0] < 40) && (sensor_distance[1] < 40)) {
  2571  004A0E  5025               	movf	_sensor_distance+1,w,c	;volatile
  2572  004A10  E103               	bnz	u9421
  2573  004A12  0E28               	movlw	40
  2574  004A14  5C24               	subwf	_sensor_distance,w,c	;volatile
  2575  004A16  B0D8               	btfsc	status,0,c
  2576  004A18                     u9421:
  2577  004A18  D0E5               	goto	l7355
  2578                           
  2579                           ; BSR set to: 0
  2580  004A1A  5027               	movf	_sensor_distance+3,w,c	;volatile
  2581  004A1C  E103               	bnz	u9431
  2582  004A1E  0E28               	movlw	40
  2583  004A20  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  2584  004A22  B0D8               	btfsc	status,0,c
  2585  004A24                     u9431:
  2586  004A24  D0DF               	goto	l7355
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;parcheggio.c: 398: x = ((100) + (alignment_gap * alignment_gap));
  2590  004A26  C0E4  F094         	movff	_alignment_gap,___flmul@a
  2591  004A2A  C0E5  F095         	movff	_alignment_gap+1,___flmul@a+1
  2592  004A2E  C0E6  F096         	movff	_alignment_gap+2,___flmul@a+2
  2593  004A32  C0E7  F097         	movff	_alignment_gap+3,___flmul@a+3
  2594  004A36  C0E4  F090         	movff	_alignment_gap,___flmul@b
  2595  004A3A  C0E5  F091         	movff	_alignment_gap+1,___flmul@b+1
  2596  004A3E  C0E6  F092         	movff	_alignment_gap+2,___flmul@b+2
  2597  004A42  C0E7  F093         	movff	_alignment_gap+3,___flmul@b+3
  2598  004A46  EC91  F017         	call	___flmul	;wreg free
  2599  004A4A  C090  F0A9         	movff	?___flmul,___fladd@b
  2600  004A4E  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  2601  004A52  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  2602  004A56  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  2603  004A5A  0E00               	movlw	0
  2604  004A5C  0100               	movlb	0	; () banked
  2605  004A5E  6FAD               	movwf	___fladd@a& (0+255),b
  2606  004A60  0E00               	movlw	0
  2607  004A62  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2608  004A64  0EC8               	movlw	200
  2609  004A66  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2610  004A68  0E42               	movlw	66
  2611  004A6A  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2612  004A6C  EC3D  F015         	call	___fladd	;wreg free
  2613  004A70  C0A9  F13C         	movff	?___fladd,_x
  2614  004A74  C0AA  F13D         	movff	?___fladd+1,_x+1
  2615  004A78  C0AB  F13E         	movff	?___fladd+2,_x+2
  2616  004A7C  C0AC  F13F         	movff	?___fladd+3,_x+3
  2617                           
  2618                           ;parcheggio.c: 399: x = sqrt(x);
  2619  004A80  C13C  F0C1         	movff	_x,sqrt@a
  2620  004A84  C13D  F0C2         	movff	_x+1,sqrt@a+1
  2621  004A88  C13E  F0C3         	movff	_x+2,sqrt@a+2
  2622  004A8C  C13F  F0C4         	movff	_x+3,sqrt@a+3
  2623  004A90  EC1A  F01C         	call	_sqrt	;wreg free
  2624  004A94  C0C1  F13C         	movff	?_sqrt,_x
  2625  004A98  C0C2  F13D         	movff	?_sqrt+1,_x+1
  2626  004A9C  C0C3  F13E         	movff	?_sqrt+2,_x+2
  2627  004AA0  C0C4  F13F         	movff	?_sqrt+3,_x+3
  2628                           
  2629                           ;parcheggio.c: 400: z = alignment_gap / x;
  2630  004AA4  C0E4  F077         	movff	_alignment_gap,___fldiv@b
  2631  004AA8  C0E5  F078         	movff	_alignment_gap+1,___fldiv@b+1
  2632  004AAC  C0E6  F079         	movff	_alignment_gap+2,___fldiv@b+2
  2633  004AB0  C0E7  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  2634  004AB4  C13C  F07B         	movff	_x,___fldiv@a
  2635  004AB8  C13D  F07C         	movff	_x+1,___fldiv@a+1
  2636  004ABC  C13E  F07D         	movff	_x+2,___fldiv@a+2
  2637  004AC0  C13F  F07E         	movff	_x+3,___fldiv@a+3
  2638  004AC4  ECFF  F01D         	call	___fldiv	;wreg free
  2639  004AC8  C077  F140         	movff	?___fldiv,_z
  2640  004ACC  C078  F141         	movff	?___fldiv+1,_z+1
  2641  004AD0  C079  F142         	movff	?___fldiv+2,_z+2
  2642  004AD4  C07A  F143         	movff	?___fldiv+3,_z+3
  2643                           
  2644                           ;parcheggio.c: 401: z = asin(z);
  2645  004AD8  C140  F0DE         	movff	_z,asin@x
  2646  004ADC  C141  F0DF         	movff	_z+1,asin@x+1
  2647  004AE0  C142  F0E0         	movff	_z+2,asin@x+2
  2648  004AE4  C143  F0E1         	movff	_z+3,asin@x+3
  2649  004AE8  EC3A  F023         	call	_asin	;wreg free
  2650  004AEC  C0DE  F140         	movff	?_asin,_z
  2651  004AF0  C0DF  F141         	movff	?_asin+1,_z+1
  2652  004AF4  C0E0  F142         	movff	?_asin+2,_z+2
  2653  004AF8  C0E1  F143         	movff	?_asin+3,_z+3
  2654                           
  2655                           ;parcheggio.c: 402: z = z / 3.14159265358979323846 * 180;
  2656  004AFC  0EDB               	movlw	219
  2657  004AFE  0100               	movlb	0	; () banked
  2658  004B00  6F7B               	movwf	___fldiv@a& (0+255),b
  2659  004B02  0E0F               	movlw	15
  2660  004B04  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2661  004B06  0E49               	movlw	73
  2662  004B08  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2663  004B0A  0E40               	movlw	64
  2664  004B0C  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2665  004B0E  C140  F077         	movff	_z,___fldiv@b
  2666  004B12  C141  F078         	movff	_z+1,___fldiv@b+1
  2667  004B16  C142  F079         	movff	_z+2,___fldiv@b+2
  2668  004B1A  C143  F07A         	movff	_z+3,___fldiv@b+3
  2669  004B1E  ECFF  F01D         	call	___fldiv	;wreg free
  2670  004B22  C077  F090         	movff	?___fldiv,___flmul@b
  2671  004B26  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  2672  004B2A  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  2673  004B2E  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  2674  004B32  0E00               	movlw	0
  2675  004B34  0100               	movlb	0	; () banked
  2676  004B36  6F94               	movwf	___flmul@a& (0+255),b
  2677  004B38  0E00               	movlw	0
  2678  004B3A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2679  004B3C  0E34               	movlw	52
  2680  004B3E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2681  004B40  0E43               	movlw	67
  2682  004B42  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2683  004B44  EC91  F017         	call	___flmul	;wreg free
  2684  004B48  C090  F140         	movff	?___flmul,_z
  2685  004B4C  C091  F141         	movff	?___flmul+1,_z+1
  2686  004B50  C092  F142         	movff	?___flmul+2,_z+2
  2687  004B54  C093  F143         	movff	?___flmul+3,_z+3
  2688                           
  2689                           ;parcheggio.c: 403: data_correction[0] = z;
  2690  004B58  C140  F0C1         	movff	_z,___fltol@f1
  2691  004B5C  C141  F0C2         	movff	_z+1,___fltol@f1+1
  2692  004B60  C142  F0C3         	movff	_z+2,___fltol@f1+2
  2693  004B64  C143  F0C4         	movff	_z+3,___fltol@f1+3
  2694  004B68  EC58  F02C         	call	___fltol	;wreg free
  2695  004B6C  0100               	movlb	0	; () banked
  2696  004B6E  51C1               	movf	?___fltol& (0+255),w,b
  2697  004B70  0101               	movlb	1	; () banked
  2698  004B72  6F6D               	movwf	_data_correction& (0+255),b
  2699                           
  2700                           ; BSR set to: 1
  2701                           ;parcheggio.c: 405: if (sensor_distance[0] < sensor_distance[1]) {
  2702  004B74  5026               	movf	_sensor_distance+2,w,c	;volatile
  2703  004B76  5C24               	subwf	_sensor_distance,w,c	;volatile
  2704  004B78  5027               	movf	_sensor_distance+3,w,c	;volatile
  2705  004B7A  5825               	subwfb	_sensor_distance+1,w,c	;volatile
  2706  004B7C  B0D8               	btfsc	status,0,c
  2707  004B7E  D002               	goto	l7347
  2708                           
  2709                           ; BSR set to: 1
  2710                           ;parcheggio.c: 406: data_correction[1] = 0;
  2711  004B80  0E00               	movlw	0
  2712  004B82  D001               	goto	L1
  2713  004B84                     l7347:
  2714                           
  2715                           ; BSR set to: 1
  2716                           ;parcheggio.c: 408: data_correction[1] = 1;
  2717  004B84  0E01               	movlw	1
  2718  004B86                     L1:
  2719  004B86  0101               	movlb	1	; () banked
  2720  004B88  6F6E               	movwf	(_data_correction+1)& (0+255),b
  2721                           
  2722                           ; BSR set to: 1
  2723                           ;parcheggio.c: 409: }
  2724                           ;parcheggio.c: 410: if ((old_alignment_gap != alignment_gap) || (old_data_correction != 
      +                          data_correction[1])) {
  2725                           
  2726                           ; BSR set to: 1
  2727  004B8A  0100               	movlb	0	; () banked
  2728  004B8C  51E4               	movf	_alignment_gap& (0+255),w,b
  2729  004B8E  0101               	movlb	1	; () banked
  2730  004B90  1934               	xorwf	_old_alignment_gap& (0+255),w,b
  2731  004B92  E117               	bnz	l807
  2732  004B94  0100               	movlb	0	; () banked
  2733  004B96  51E5               	movf	(_alignment_gap+1)& (0+255),w,b
  2734  004B98  0101               	movlb	1	; () banked
  2735  004B9A  1935               	xorwf	(_old_alignment_gap+1)& (0+255),w,b
  2736  004B9C  E112               	bnz	l807
  2737  004B9E  0100               	movlb	0	; () banked
  2738  004BA0  51E6               	movf	(_alignment_gap+2)& (0+255),w,b
  2739  004BA2  0101               	movlb	1	; () banked
  2740  004BA4  1936               	xorwf	(_old_alignment_gap+2)& (0+255),w,b
  2741  004BA6  E10D               	bnz	l807
  2742  004BA8  0100               	movlb	0	; () banked
  2743  004BAA  51E7               	movf	(_alignment_gap+3)& (0+255),w,b
  2744  004BAC  0101               	movlb	1	; () banked
  2745  004BAE  1937               	xorwf	(_old_alignment_gap+3)& (0+255),w,b
  2746  004BB0  A4D8               	btfss	status,2,c
  2747  004BB2  D007               	goto	l807
  2748                           
  2749                           ; BSR set to: 1
  2750  004BB4  0E00               	movlw	0
  2751  004BB6  B047               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2752  004BB8  0E01               	movlw	1
  2753  004BBA  0101               	movlb	1	; () banked
  2754  004BBC  196E               	xorwf	(_data_correction+1)& (0+255),w,b
  2755  004BBE  B4D8               	btfsc	status,2,c
  2756  004BC0  0012               	return	
  2757  004BC2                     l807:
  2758                           
  2759                           ; BSR set to: 1
  2760                           ;parcheggio.c: 411: old_alignment_gap = alignment_gap;
  2761  004BC2  C0E4  F134         	movff	_alignment_gap,_old_alignment_gap
  2762  004BC6  C0E5  F135         	movff	_alignment_gap+1,_old_alignment_gap+1
  2763  004BCA  C0E6  F136         	movff	_alignment_gap+2,_old_alignment_gap+2
  2764  004BCE  C0E7  F137         	movff	_alignment_gap+3,_old_alignment_gap+3
  2765                           
  2766                           ;parcheggio.c: 412: old_data_correction = data_correction[1];
  2767  004BD2  0101               	movlb	1	; () banked
  2768  004BD4  A16E               	btfss	(_data_correction+1)& (0+255),0,b
  2769  004BD6  D002               	goto	u9470
  2770  004BD8  8047               	bsf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2771  004BDA  D001               	goto	l7353
  2772  004BDC                     u9470:
  2773  004BDC  9047               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2774  004BDE                     l7353:
  2775                           
  2776                           ;parcheggio.c: 413: can_send();
  2777  004BDE  EC9F  F02A         	call	_can_send	;wreg free
  2778                           
  2779                           ;parcheggio.c: 414: }
  2780                           ;parcheggio.c: 415: } else if (data_correction[0] != old_data_correction) {
  2781  004BE2  0012               	return	
  2782  004BE4                     l7355:
  2783  004BE4  0E00               	movlw	0
  2784  004BE6  B047               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2785  004BE8  0E01               	movlw	1
  2786  004BEA  0101               	movlb	1	; () banked
  2787  004BEC  196D               	xorwf	_data_correction& (0+255),w,b
  2788  004BEE  B4D8               	btfsc	status,2,c
  2789  004BF0  0012               	return	
  2790                           
  2791                           ; BSR set to: 1
  2792                           ;parcheggio.c: 416: data_correction[0] = 0;
  2793  004BF2  0E00               	movlw	0
  2794  004BF4  0101               	movlb	1	; () banked
  2795  004BF6  6F6D               	movwf	_data_correction& (0+255),b
  2796                           
  2797                           ; BSR set to: 1
  2798                           ;parcheggio.c: 417: old_data_correction = 0;
  2799  004BF8  9047               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2800                           
  2801                           ; BSR set to: 1
  2802                           ;parcheggio.c: 418: can_send();
  2803  004BFA  EC9F  F02A         	call	_can_send	;wreg free
  2804                           
  2805                           ;parcheggio.c: 419: }
  2806                           ;parcheggio.c: 420: } else {
  2807  004BFE  0012               	return	
  2808  004C00                     l801:
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;parcheggio.c: 421: if (old_data_correction != 0) {
  2812  004C00  A047               	btfss	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2813  004C02  0012               	return	
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;parcheggio.c: 422: data_correction[0] = 0;
  2817  004C04  0E00               	movlw	0
  2818  004C06  0101               	movlb	1	; () banked
  2819  004C08  6F6D               	movwf	_data_correction& (0+255),b
  2820                           
  2821                           ; BSR set to: 1
  2822                           ;parcheggio.c: 423: old_data_correction = 0;
  2823  004C0A  9047               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2824                           
  2825                           ; BSR set to: 1
  2826                           ;parcheggio.c: 424: can_send();
  2827  004C0C  EC9F  F02A         	call	_can_send	;wreg free
  2828  004C10  0012               	return	
  2829  004C12                     __end_of_parallelo:
  2830                           	opt stack 0
  2831                           tblptru	equ	0xFF8
  2832                           tblptrh	equ	0xFF7
  2833                           tblptrl	equ	0xFF6
  2834                           tablat	equ	0xFF5
  2835                           postinc0	equ	0xFEE
  2836                           wreg	equ	0xFE8
  2837                           postdec1	equ	0xFE5
  2838                           fsr1l	equ	0xFE1
  2839                           postinc2	equ	0xFDE
  2840                           postdec2	equ	0xFDD
  2841                           status	equ	0xFD8
  2842                           
  2843 ;; *************** function _can_send *****************
  2844 ;; Defined at:
  2845 ;;		line 370 in file "parcheggio.c"
  2846 ;; Parameters:    Size  Location     Type
  2847 ;;		None
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  data_correct    0   39[BANK0 ] unsigned char [0]
  2850 ;; Return value:  Size  Location     Type
  2851 ;;		None               void
  2852 ;; Registers used:
  2853 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2854 ;; Tracked objects:
  2855 ;;		On entry : 0/0
  2856 ;;		On exit  : 0/0
  2857 ;;		Unchanged: 0/0
  2858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2862 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2863 ;;Total ram usage:        0 bytes
  2864 ;; Hardware stack levels used:    1
  2865 ;; Hardware stack levels required when called:    5
  2866 ;; This function calls:
  2867 ;;		_CANisTxReady
  2868 ;;		_CANsendMessage
  2869 ;; This function is called by:
  2870 ;;		_park_routine
  2871 ;;		_parallelo
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           	psect	text4
  2876  00553E                     __ptext4:
  2877                           	opt stack 0
  2878  00553E                     _can_send:
  2879                           	opt stack 23
  2880                           
  2881                           ;parcheggio.c: 371: if (PORTBbits.RB5 == 1) {
  2882                           
  2883                           ;incstack = 0
  2884  00553E  AA81               	btfss	3969,5,c	;volatile
  2885  005540  D063               	goto	l7255
  2886  005542                     l7235:
  2887  005542  ECC0  F02F         	call	_CANisTxReady	;wreg free
  2888  005546  06E8               	decf	wreg,f,c
  2889  005548  A4D8               	btfss	status,2,c
  2890  00554A  D7FB               	goto	l7235
  2891                           
  2892                           ;parcheggio.c: 373: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2893  00554C  0E05               	movlw	5
  2894  00554E  0100               	movlb	0	; () banked
  2895  005550  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2896  005552  0E00               	movlw	0
  2897  005554  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2898  005556  0E00               	movlw	0
  2899  005558  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2900  00555A  0E00               	movlw	0
  2901  00555C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2902  00555E  0E7D               	movlw	low _data_steering
  2903  005560  0100               	movlb	0	; () banked
  2904  005562  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2905  005564  0E01               	movlw	high _data_steering
  2906  005566  0100               	movlb	0	; () banked
  2907  005568  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2908  00556A  0E08               	movlw	8
  2909  00556C  0100               	movlb	0	; () banked
  2910  00556E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2911  005570  0EBC               	movlw	188
  2912  005572  0100               	movlb	0	; () banked
  2913  005574  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2914  005576  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2915                           
  2916                           ;parcheggio.c: 374: data_speed[0] = set_speed;
  2917  00557A  C14C  F175         	movff	_set_speed,_data_speed
  2918                           
  2919                           ;parcheggio.c: 375: data_speed[1] = (set_speed >> 8);
  2920  00557E  0101               	movlb	1	; () banked
  2921  005580  514D               	movf	(_set_speed+1)& (0+255),w,b
  2922  005582  0101               	movlb	1	; () banked
  2923  005584  6F76               	movwf	(_data_speed+1)& (0+255),b
  2924                           
  2925                           ; BSR set to: 1
  2926                           ;parcheggio.c: 376: data_speed[2] = dir;
  2927  005586  0E00               	movlw	0
  2928  005588  B446               	btfsc	_dir/(0+8),_dir& (0+7),c
  2929  00558A  0E01               	movlw	1
  2930  00558C  0101               	movlb	1	; () banked
  2931  00558E  6F77               	movwf	(_data_speed+2)& (0+255),b
  2932  005590                     l7245:
  2933  005590  ECC0  F02F         	call	_CANisTxReady	;wreg free
  2934  005594  06E8               	decf	wreg,f,c
  2935  005596  A4D8               	btfss	status,2,c
  2936  005598  D7FB               	goto	l7245
  2937                           
  2938                           ;parcheggio.c: 378: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2939  00559A  0E03               	movlw	3
  2940  00559C  0100               	movlb	0	; () banked
  2941  00559E  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2942  0055A0  0E00               	movlw	0
  2943  0055A2  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2944  0055A4  0E00               	movlw	0
  2945  0055A6  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2946  0055A8  0E00               	movlw	0
  2947  0055AA  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2948  0055AC  0E75               	movlw	low _data_speed
  2949  0055AE  0100               	movlb	0	; () banked
  2950  0055B0  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2951  0055B2  0E01               	movlw	high _data_speed
  2952  0055B4  0100               	movlb	0	; () banked
  2953  0055B6  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2954  0055B8  0E08               	movlw	8
  2955  0055BA  0100               	movlb	0	; () banked
  2956  0055BC  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2957  0055BE  0EBC               	movlw	188
  2958  0055C0  0100               	movlb	0	; () banked
  2959  0055C2  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2960  0055C4  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2961  0055C8                     l7249:
  2962  0055C8  ECC0  F02F         	call	_CANisTxReady	;wreg free
  2963  0055CC  06E8               	decf	wreg,f,c
  2964  0055CE  A4D8               	btfss	status,2,c
  2965  0055D0  D7FB               	goto	l7249
  2966                           
  2967                           ;parcheggio.c: 380: data_brake[1] = 0;
  2968  0055D2  0E00               	movlw	0
  2969  0055D4  0101               	movlb	1	; () banked
  2970  0055D6  6F66               	movwf	(_data_brake+1)& (0+255),b
  2971                           
  2972                           ; BSR set to: 1
  2973                           ;parcheggio.c: 381: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2974  0055D8  0E04               	movlw	4
  2975  0055DA  0100               	movlb	0	; () banked
  2976  0055DC  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2977  0055DE  0E00               	movlw	0
  2978  0055E0  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2979  0055E2  0E00               	movlw	0
  2980  0055E4  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2981  0055E6  0E00               	movlw	0
  2982  0055E8  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2983  0055EA  0E65               	movlw	low _data_brake
  2984  0055EC  0100               	movlb	0	; () banked
  2985  0055EE  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2986  0055F0  0E01               	movlw	high _data_brake
  2987  0055F2  0100               	movlb	0	; () banked
  2988  0055F4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2989  0055F6  0E08               	movlw	8
  2990  0055F8  0100               	movlb	0	; () banked
  2991  0055FA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2992  0055FC  0EBC               	movlw	188
  2993  0055FE  0100               	movlb	0	; () banked
  2994  005600  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2995  005602  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2996                           
  2997                           ;parcheggio.c: 382: } else {
  2998  005606  0012               	return	
  2999  005608                     l7255:
  3000                           
  3001                           ;parcheggio.c: 383: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3002  005608  0E0E               	movlw	14
  3003  00560A  0100               	movlb	0	; () banked
  3004  00560C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3005  00560E  0E00               	movlw	0
  3006  005610  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3007  005612  0E00               	movlw	0
  3008  005614  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3009  005616  0E00               	movlw	0
  3010  005618  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3011  00561A  0E6D               	movlw	low _data_correction
  3012  00561C  0100               	movlb	0	; () banked
  3013  00561E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3014  005620  0E01               	movlw	high _data_correction
  3015  005622  0100               	movlb	0	; () banked
  3016  005624  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3017  005626  0E08               	movlw	8
  3018  005628  0100               	movlb	0	; () banked
  3019  00562A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3020  00562C  0EBC               	movlw	188
  3021  00562E  0100               	movlb	0	; () banked
  3022  005630  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3023  005632  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3024                           
  3025                           ;parcheggio.c: 384: unsigned char data_correction1[];
  3026                           ;parcheggio.c: 385: data_correction1[0] = data_correction[0];
  3027  005636  EE20  F087         	lfsr	2,can_send@data_correction1
  3028  00563A  C16D  FFDF         	movff	_data_correction,indf2
  3029                           
  3030                           ;parcheggio.c: 386: data_correction1[1] = 0;
  3031  00563E  0E00               	movlw	0
  3032  005640  CFE8 F088          	movff	wreg,can_send@data_correction1+1
  3033                           
  3034                           ;parcheggio.c: 387: CANsendMessage(0xAA, data_correction1, 8, CAN_CONFIG_STD_MSG & CAN_N
      +                          ORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3035  005644  0EAA               	movlw	170
  3036  005646  0100               	movlb	0	; () banked
  3037  005648  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3038  00564A  0E00               	movlw	0
  3039  00564C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3040  00564E  0E00               	movlw	0
  3041  005650  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3042  005652  0E00               	movlw	0
  3043  005654  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3044  005656  0E87               	movlw	low can_send@data_correction1
  3045  005658  0100               	movlb	0	; () banked
  3046  00565A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3047  00565C  0E00               	movlw	high can_send@data_correction1
  3048  00565E  0100               	movlb	0	; () banked
  3049  005660  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3050  005662  0E08               	movlw	8
  3051  005664  0100               	movlb	0	; () banked
  3052  005666  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3053  005668  0EBC               	movlw	188
  3054  00566A  0100               	movlb	0	; () banked
  3055  00566C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3056  00566E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3057  005672  0012               	return	
  3058  005674                     __end_of_can_send:
  3059                           	opt stack 0
  3060                           tblptru	equ	0xFF8
  3061                           tblptrh	equ	0xFF7
  3062                           tblptrl	equ	0xFF6
  3063                           tablat	equ	0xFF5
  3064                           postinc0	equ	0xFEE
  3065                           wreg	equ	0xFE8
  3066                           postdec1	equ	0xFE5
  3067                           fsr1l	equ	0xFE1
  3068                           indf2	equ	0xFDF
  3069                           postinc2	equ	0xFDE
  3070                           postdec2	equ	0xFDD
  3071                           status	equ	0xFD8
  3072                           
  3073 ;; *************** function _CANsendMessage *****************
  3074 ;; Defined at:
  3075 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  identifier      4   23[BANK0 ] unsigned long 
  3078 ;;  data            2   27[BANK0 ] PTR unsigned char 
  3079 ;;		 -> can_send@data_correction1(0), data_speed(8), data_brake(8), data_steering(8), 
  3080 ;;		 -> data_correction(8), data_test(8), data(8), 
  3081 ;;  dataLength      1   29[BANK0 ] unsigned char 
  3082 ;;  flags           1   30[BANK0 ] enum E16335
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;  tamp            4   35[BANK0 ] unsigned long 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;		None               void
  3087 ;; Registers used:
  3088 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3094 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3095 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3096 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3097 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3098 ;;Total ram usage:       16 bytes
  3099 ;; Hardware stack levels used:    1
  3100 ;; Hardware stack levels required when called:    4
  3101 ;; This function calls:
  3102 ;;		Nothing
  3103 ;; This function is called by:
  3104 ;;		_park_search
  3105 ;;		_park_routine
  3106 ;;		_can_send
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           	psect	text5
  3111  001858                     __ptext5:
  3112                           	opt stack 0
  3113  001858                     _CANsendMessage:
  3114                           	opt stack 23
  3115                           
  3116                           ;inc\CANlib.h: 297: unsigned long tamp;
  3117                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
  3118                           
  3119                           ;incstack = 0
  3120  001858  010F               	movlb	15	; () banked
  3121  00185A  B740               	btfsc	64,3,b	;volatile
  3122  00185C  D13F               	goto	l363
  3123                           
  3124                           ; BSR set to: 15
  3125                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
  3126  00185E  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  3127                           
  3128                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
  3129  001862  0100               	movlb	0	; () banked
  3130  001864  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3131  001866  D003               	goto	l364
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
  3135  001868  010F               	movlb	15	; () banked
  3136  00186A  8D45               	bsf	69,6,b	;volatile
  3137  00186C  D002               	goto	l365
  3138  00186E                     l364:
  3139                           
  3140                           ; BSR set to: 0
  3141                           ;inc\CANlib.h: 303: else
  3142                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
  3143  00186E  010F               	movlb	15	; () banked
  3144  001870  9D45               	bcf	69,6,b	;volatile
  3145  001872                     l365:
  3146                           
  3147                           ; BSR set to: 15
  3148                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
  3149  001872  0100               	movlb	0	; () banked
  3150  001874  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3151  001876  D079               	goto	l366
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;inc\CANlib.h: 307: {
  3155                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
  3156  001878  0100               	movlb	0	; () banked
  3157  00187A  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3158  00187C  0100               	movlb	0	; () banked
  3159  00187E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3160  001880  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3161  001882  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3162  001884  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3163                           
  3164                           ; BSR set to: 0
  3165                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
  3166  001886  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  3167                           
  3168                           ; BSR set to: 0
  3169                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
  3170  00188A  0E00               	movlw	0
  3171  00188C  0100               	movlb	0	; () banked
  3172  00188E  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3173  001890  0100               	movlb	0	; () banked
  3174  001892  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3175  001894  0EFF               	movlw	255
  3176  001896  0100               	movlb	0	; () banked
  3177  001898  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3178  00189A  0100               	movlb	0	; () banked
  3179  00189C  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3180  00189E  0E00               	movlw	0
  3181  0018A0  0100               	movlb	0	; () banked
  3182  0018A2  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3183  0018A4  0100               	movlb	0	; () banked
  3184  0018A6  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3185  0018A8  0E00               	movlw	0
  3186  0018AA  0100               	movlb	0	; () banked
  3187  0018AC  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3188  0018AE  0100               	movlb	0	; () banked
  3189  0018B0  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
  3193  0018B2  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3194  0018B6  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3195  0018BA  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3196  0018BE  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3197  0018C2  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3198  0018C6  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3199  0018CA  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3200  0018CE  0100               	movlb	0	; () banked
  3201  0018D0  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3202  0018D2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3203  0018D6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3204  0018DA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3205  0018DE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3206                           
  3207                           ; BSR set to: 0
  3208                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
  3209  0018E2  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
  3213  0018E6  0E00               	movlw	0
  3214  0018E8  010F               	movlb	15	; () banked
  3215  0018EA  6F42               	movwf	66,b	;volatile
  3216                           
  3217                           ; BSR set to: 15
  3218                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
  3219  0018EC  010F               	movlb	15	; () banked
  3220  0018EE  8742               	bsf	66,3,b	;volatile
  3221                           
  3222                           ; BSR set to: 15
  3223                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
  3224  0018F0  0100               	movlb	0	; () banked
  3225  0018F2  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3226  0018F4  D002               	goto	l367
  3227                           
  3228                           ; BSR set to: 0
  3229                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
  3230  0018F6  010F               	movlb	15	; () banked
  3231  0018F8  8142               	bsf	66,0,b	;volatile
  3232  0018FA                     l367:
  3233                           
  3234                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
  3235  0018FA  0100               	movlb	0	; () banked
  3236  0018FC  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3237  0018FE  D002               	goto	l368
  3238                           
  3239                           ; BSR set to: 0
  3240                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
  3241  001900  010F               	movlb	15	; () banked
  3242  001902  8342               	bsf	66,1,b	;volatile
  3243  001904                     l368:
  3244                           
  3245                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
  3246  001904  0100               	movlb	0	; () banked
  3247  001906  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3248  001908  D002               	goto	l369
  3249                           
  3250                           ; BSR set to: 0
  3251                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
  3252  00190A  010F               	movlb	15	; () banked
  3253  00190C  8B42               	bsf	66,5,b	;volatile
  3254  00190E                     l369:
  3255                           
  3256                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
  3257  00190E  0100               	movlb	0	; () banked
  3258  001910  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3259  001912  D002               	goto	l370
  3260                           
  3261                           ; BSR set to: 0
  3262                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
  3263  001914  010F               	movlb	15	; () banked
  3264  001916  8D42               	bsf	66,6,b	;volatile
  3265  001918                     l370:
  3266                           
  3267                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
  3268  001918  0100               	movlb	0	; () banked
  3269  00191A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3270  00191C  D002               	goto	l6839
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
  3274  00191E  010F               	movlb	15	; () banked
  3275  001920  8F42               	bsf	66,7,b	;volatile
  3276  001922                     l6839:
  3277                           
  3278                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
  3279  001922  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3280  001926  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3281  00192A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3282  00192E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3283  001932  0E16               	movlw	22
  3284  001934  D006               	goto	u8730
  3285  001936                     u8735:
  3286  001936  0100               	movlb	0	; () banked
  3287  001938  90D8               	bcf	status,0,c
  3288  00193A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3289  00193C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3290  00193E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3291  001940  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3292  001942                     u8730:
  3293  001942  2EE8               	decfsz	wreg,f,c
  3294  001944  D7F8               	goto	u8735
  3295  001946  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3296  00194A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3297  00194E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3298  001952  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
  3302  001956  0100               	movlb	0	; () banked
  3303  001958  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3304  00195A  0100               	movlb	0	; () banked
  3305  00195C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3306  00195E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3307  001960  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3308  001962  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3309                           
  3310                           ; BSR set to: 0
  3311                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
  3312  001964  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3313                           
  3314                           ;inc\CANlib.h: 333: }
  3315  001968  D059               	goto	l6859
  3316  00196A                     l366:
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;inc\CANlib.h: 335: else
  3320                           ;inc\CANlib.h: 337: {
  3321                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
  3322  00196A  010F               	movlb	15	; () banked
  3323  00196C  9742               	bcf	66,3,b	;volatile
  3324                           
  3325                           ; BSR set to: 15
  3326                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
  3327  00196E  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3328  001972  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3329  001976  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3330  00197A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3331  00197E  0E04               	movlw	4
  3332  001980  D006               	goto	u8740
  3333  001982                     u8745:
  3334  001982  0100               	movlb	0	; () banked
  3335  001984  90D8               	bcf	status,0,c
  3336  001986  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3337  001988  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3338  00198A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3339  00198C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3340  00198E                     u8740:
  3341  00198E  2EE8               	decfsz	wreg,f,c
  3342  001990  D7F8               	goto	u8745
  3343  001992  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3344  001996  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3345  00199A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3346  00199E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3347                           
  3348                           ; BSR set to: 0
  3349                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
  3350  0019A2  0100               	movlb	0	; () banked
  3351  0019A4  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3352  0019A6  0100               	movlb	0	; () banked
  3353  0019A8  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3354  0019AA  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3355  0019AC  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3356  0019AE  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
  3360  0019B0  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
  3364  0019B4  0E07               	movlw	7
  3365  0019B6  0100               	movlb	0	; () banked
  3366  0019B8  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3367  0019BA  0100               	movlb	0	; () banked
  3368  0019BC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3369  0019BE  0E00               	movlw	0
  3370  0019C0  0100               	movlb	0	; () banked
  3371  0019C2  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3372  0019C4  0100               	movlb	0	; () banked
  3373  0019C6  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3374  0019C8  0E00               	movlw	0
  3375  0019CA  0100               	movlb	0	; () banked
  3376  0019CC  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3377  0019CE  0100               	movlb	0	; () banked
  3378  0019D0  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3379  0019D2  0E00               	movlw	0
  3380  0019D4  0100               	movlb	0	; () banked
  3381  0019D6  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3382  0019D8  0100               	movlb	0	; () banked
  3383  0019DA  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;inc\CANlib.h: 345: tamp = tamp << 5;
  3387  0019DC  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3388  0019E0  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3389  0019E4  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3390  0019E8  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3391  0019EC  0E05               	movlw	5
  3392  0019EE                     u8755:
  3393  0019EE  90D8               	bcf	status,0,c
  3394  0019F0  0100               	movlb	0	; () banked
  3395  0019F2  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3396  0019F4  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3397  0019F6  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3398  0019F8  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3399  0019FA  2EE8               	decfsz	wreg,f,c
  3400  0019FC  D7F8               	goto	u8755
  3401  0019FE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3402  001A02  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3403  001A06  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3404  001A0A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3405                           
  3406                           ; BSR set to: 0
  3407                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
  3408  001A0E  010F               	movlb	15	; () banked
  3409  001A10  5142               	movf	66,w,b	;volatile
  3410  001A12  0B1F               	andlw	31
  3411  001A14  010F               	movlb	15	; () banked
  3412  001A16  6F42               	movwf	66,b	;volatile
  3413                           
  3414                           ; BSR set to: 15
  3415                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
  3416  001A18  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  3417  001A1C                     l6859:
  3418                           
  3419                           ;inc\CANlib.h: 348: }
  3420                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
  3421  001A1C  0100               	movlb	0	; () banked
  3422  001A1E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3423  001A20  D003               	goto	l373
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
  3427  001A22  010F               	movlb	15	; () banked
  3428  001A24  8140               	bsf	64,0,b	;volatile
  3429  001A26  D002               	goto	l374
  3430  001A28                     l373:
  3431                           
  3432                           ; BSR set to: 0
  3433                           ;inc\CANlib.h: 352: else
  3434                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
  3435  001A28  010F               	movlb	15	; () banked
  3436  001A2A  9140               	bcf	64,0,b	;volatile
  3437  001A2C                     l374:
  3438                           
  3439                           ; BSR set to: 15
  3440                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
  3441  001A2C  0100               	movlb	0	; () banked
  3442  001A2E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  3443  001A30  D003               	goto	l375
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
  3447  001A32  010F               	movlb	15	; () banked
  3448  001A34  8340               	bsf	64,1,b	;volatile
  3449  001A36  D002               	goto	l6865
  3450  001A38                     l375:
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;inc\CANlib.h: 356: else
  3454                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
  3455  001A38  010F               	movlb	15	; () banked
  3456  001A3A  9340               	bcf	64,1,b	;volatile
  3457  001A3C                     l6865:
  3458                           
  3459                           ; BSR set to: 15
  3460                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
  3461  001A3C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  3462  001A40  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3463  001A44  50DF               	movf	indf2,w,c
  3464  001A46  010F               	movlb	15	; () banked
  3465  001A48  6F46               	movwf	70,b	;volatile
  3466                           
  3467                           ; BSR set to: 15
  3468                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
  3469  001A4A  0100               	movlb	0	; () banked
  3470  001A4C  EE20 F001          	lfsr	2,1
  3471  001A50  517B               	movf	CANsendMessage@data& (0+255),w,b
  3472  001A52  26D9               	addwf	fsr2l,f,c
  3473  001A54  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3474  001A56  22DA               	addwfc	fsr2h,f,c
  3475  001A58  50DF               	movf	indf2,w,c
  3476  001A5A  010F               	movlb	15	; () banked
  3477  001A5C  6F47               	movwf	71,b	;volatile
  3478                           
  3479                           ; BSR set to: 15
  3480                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
  3481  001A5E  0100               	movlb	0	; () banked
  3482  001A60  EE20 F002          	lfsr	2,2
  3483  001A64  517B               	movf	CANsendMessage@data& (0+255),w,b
  3484  001A66  26D9               	addwf	fsr2l,f,c
  3485  001A68  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3486  001A6A  22DA               	addwfc	fsr2h,f,c
  3487  001A6C  50DF               	movf	indf2,w,c
  3488  001A6E  010F               	movlb	15	; () banked
  3489  001A70  6F48               	movwf	72,b	;volatile
  3490                           
  3491                           ; BSR set to: 15
  3492                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
  3493  001A72  0100               	movlb	0	; () banked
  3494  001A74  EE20 F003          	lfsr	2,3
  3495  001A78  517B               	movf	CANsendMessage@data& (0+255),w,b
  3496  001A7A  26D9               	addwf	fsr2l,f,c
  3497  001A7C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3498  001A7E  22DA               	addwfc	fsr2h,f,c
  3499  001A80  50DF               	movf	indf2,w,c
  3500  001A82  010F               	movlb	15	; () banked
  3501  001A84  6F49               	movwf	73,b	;volatile
  3502                           
  3503                           ; BSR set to: 15
  3504                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
  3505  001A86  0100               	movlb	0	; () banked
  3506  001A88  EE20 F004          	lfsr	2,4
  3507  001A8C  517B               	movf	CANsendMessage@data& (0+255),w,b
  3508  001A8E  26D9               	addwf	fsr2l,f,c
  3509  001A90  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3510  001A92  22DA               	addwfc	fsr2h,f,c
  3511  001A94  50DF               	movf	indf2,w,c
  3512  001A96  010F               	movlb	15	; () banked
  3513  001A98  6F4A               	movwf	74,b	;volatile
  3514                           
  3515                           ; BSR set to: 15
  3516                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
  3517  001A9A  0100               	movlb	0	; () banked
  3518  001A9C  EE20 F005          	lfsr	2,5
  3519  001AA0  517B               	movf	CANsendMessage@data& (0+255),w,b
  3520  001AA2  26D9               	addwf	fsr2l,f,c
  3521  001AA4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3522  001AA6  22DA               	addwfc	fsr2h,f,c
  3523  001AA8  50DF               	movf	indf2,w,c
  3524  001AAA  010F               	movlb	15	; () banked
  3525  001AAC  6F4B               	movwf	75,b	;volatile
  3526                           
  3527                           ; BSR set to: 15
  3528                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
  3529  001AAE  0100               	movlb	0	; () banked
  3530  001AB0  EE20 F006          	lfsr	2,6
  3531  001AB4  517B               	movf	CANsendMessage@data& (0+255),w,b
  3532  001AB6  26D9               	addwf	fsr2l,f,c
  3533  001AB8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3534  001ABA  22DA               	addwfc	fsr2h,f,c
  3535  001ABC  50DF               	movf	indf2,w,c
  3536  001ABE  010F               	movlb	15	; () banked
  3537  001AC0  6F4C               	movwf	76,b	;volatile
  3538                           
  3539                           ; BSR set to: 15
  3540                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
  3541  001AC2  0100               	movlb	0	; () banked
  3542  001AC4  EE20 F007          	lfsr	2,7
  3543  001AC8  517B               	movf	CANsendMessage@data& (0+255),w,b
  3544  001ACA  26D9               	addwf	fsr2l,f,c
  3545  001ACC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3546  001ACE  22DA               	addwfc	fsr2h,f,c
  3547  001AD0  50DF               	movf	indf2,w,c
  3548  001AD2  010F               	movlb	15	; () banked
  3549  001AD4  6F4D               	movwf	77,b	;volatile
  3550                           
  3551                           ; BSR set to: 15
  3552                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
  3553  001AD6  010F               	movlb	15	; () banked
  3554  001AD8  8740               	bsf	64,3,b	;volatile
  3555                           
  3556                           ; BSR set to: 15
  3557                           ;inc\CANlib.h: 369: return;
  3558  001ADA  0012               	return	
  3559  001ADC                     l363:
  3560                           
  3561                           ; BSR set to: 15
  3562                           ;inc\CANlib.h: 370: }
  3563                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
  3564  001ADC  010F               	movlb	15	; () banked
  3565  001ADE  B730               	btfsc	48,3,b	;volatile
  3566  001AE0  D13F               	goto	l378
  3567                           
  3568                           ; BSR set to: 15
  3569                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
  3570  001AE2  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  3571                           
  3572                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
  3573  001AE6  0100               	movlb	0	; () banked
  3574  001AE8  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3575  001AEA  D003               	goto	l379
  3576                           
  3577                           ; BSR set to: 0
  3578                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
  3579  001AEC  010F               	movlb	15	; () banked
  3580  001AEE  8D35               	bsf	53,6,b	;volatile
  3581  001AF0  D002               	goto	l380
  3582  001AF2                     l379:
  3583                           
  3584                           ; BSR set to: 0
  3585                           ;inc\CANlib.h: 379: else
  3586                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
  3587  001AF2  010F               	movlb	15	; () banked
  3588  001AF4  9D35               	bcf	53,6,b	;volatile
  3589  001AF6                     l380:
  3590                           
  3591                           ; BSR set to: 15
  3592                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
  3593  001AF6  0100               	movlb	0	; () banked
  3594  001AF8  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3595  001AFA  D079               	goto	l381
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;inc\CANlib.h: 383: {
  3599                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
  3600  001AFC  0100               	movlb	0	; () banked
  3601  001AFE  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3602  001B00  0100               	movlb	0	; () banked
  3603  001B02  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3604  001B04  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3605  001B06  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3606  001B08  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
  3610  001B0A  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
  3614  001B0E  0E00               	movlw	0
  3615  001B10  0100               	movlb	0	; () banked
  3616  001B12  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3617  001B14  0100               	movlb	0	; () banked
  3618  001B16  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3619  001B18  0EFF               	movlw	255
  3620  001B1A  0100               	movlb	0	; () banked
  3621  001B1C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3622  001B1E  0100               	movlb	0	; () banked
  3623  001B20  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3624  001B22  0E00               	movlw	0
  3625  001B24  0100               	movlb	0	; () banked
  3626  001B26  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3627  001B28  0100               	movlb	0	; () banked
  3628  001B2A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3629  001B2C  0E00               	movlw	0
  3630  001B2E  0100               	movlb	0	; () banked
  3631  001B30  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3632  001B32  0100               	movlb	0	; () banked
  3633  001B34  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
  3637  001B36  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3638  001B3A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3639  001B3E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3640  001B42  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3641  001B46  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3642  001B4A  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3643  001B4E  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3644  001B52  0100               	movlb	0	; () banked
  3645  001B54  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3646  001B56  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3647  001B5A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3648  001B5E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3649  001B62  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3650                           
  3651                           ; BSR set to: 0
  3652                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
  3653  001B66  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  3654                           
  3655                           ; BSR set to: 0
  3656                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
  3657  001B6A  0E00               	movlw	0
  3658  001B6C  010F               	movlb	15	; () banked
  3659  001B6E  6F32               	movwf	50,b	;volatile
  3660                           
  3661                           ; BSR set to: 15
  3662                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
  3663  001B70  010F               	movlb	15	; () banked
  3664  001B72  8732               	bsf	50,3,b	;volatile
  3665                           
  3666                           ; BSR set to: 15
  3667                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
  3668  001B74  0100               	movlb	0	; () banked
  3669  001B76  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3670  001B78  D002               	goto	l382
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
  3674  001B7A  010F               	movlb	15	; () banked
  3675  001B7C  8132               	bsf	50,0,b	;volatile
  3676  001B7E                     l382:
  3677                           
  3678                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
  3679  001B7E  0100               	movlb	0	; () banked
  3680  001B80  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3681  001B82  D002               	goto	l383
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
  3685  001B84  010F               	movlb	15	; () banked
  3686  001B86  8332               	bsf	50,1,b	;volatile
  3687  001B88                     l383:
  3688                           
  3689                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
  3690  001B88  0100               	movlb	0	; () banked
  3691  001B8A  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3692  001B8C  D002               	goto	l384
  3693                           
  3694                           ; BSR set to: 0
  3695                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
  3696  001B8E  010F               	movlb	15	; () banked
  3697  001B90  8B32               	bsf	50,5,b	;volatile
  3698  001B92                     l384:
  3699                           
  3700                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
  3701  001B92  0100               	movlb	0	; () banked
  3702  001B94  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3703  001B96  D002               	goto	l385
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
  3707  001B98  010F               	movlb	15	; () banked
  3708  001B9A  8D32               	bsf	50,6,b	;volatile
  3709  001B9C                     l385:
  3710                           
  3711                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
  3712  001B9C  0100               	movlb	0	; () banked
  3713  001B9E  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3714  001BA0  D002               	goto	l6915
  3715                           
  3716                           ; BSR set to: 0
  3717                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
  3718  001BA2  010F               	movlb	15	; () banked
  3719  001BA4  8F32               	bsf	50,7,b	;volatile
  3720  001BA6                     l6915:
  3721                           
  3722                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
  3723  001BA6  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3724  001BAA  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3725  001BAE  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3726  001BB2  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3727  001BB6  0E16               	movlw	22
  3728  001BB8  D006               	goto	u8860
  3729  001BBA                     u8865:
  3730  001BBA  0100               	movlb	0	; () banked
  3731  001BBC  90D8               	bcf	status,0,c
  3732  001BBE  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3733  001BC0  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3734  001BC2  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3735  001BC4  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3736  001BC6                     u8860:
  3737  001BC6  2EE8               	decfsz	wreg,f,c
  3738  001BC8  D7F8               	goto	u8865
  3739  001BCA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3740  001BCE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3741  001BD2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3742  001BD6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
  3746  001BDA  0100               	movlb	0	; () banked
  3747  001BDC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3748  001BDE  0100               	movlb	0	; () banked
  3749  001BE0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3750  001BE2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3751  001BE4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3752  001BE6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
  3756  001BE8  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3757                           
  3758                           ;inc\CANlib.h: 408: }
  3759  001BEC  D059               	goto	l6935
  3760  001BEE                     l381:
  3761                           
  3762                           ; BSR set to: 0
  3763                           ;inc\CANlib.h: 410: else
  3764                           ;inc\CANlib.h: 412: {
  3765                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
  3766  001BEE  010F               	movlb	15	; () banked
  3767  001BF0  9732               	bcf	50,3,b	;volatile
  3768                           
  3769                           ; BSR set to: 15
  3770                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
  3771  001BF2  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3772  001BF6  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3773  001BFA  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3774  001BFE  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3775  001C02  0E04               	movlw	4
  3776  001C04  D006               	goto	u8870
  3777  001C06                     u8875:
  3778  001C06  0100               	movlb	0	; () banked
  3779  001C08  90D8               	bcf	status,0,c
  3780  001C0A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3781  001C0C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3782  001C0E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3783  001C10  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3784  001C12                     u8870:
  3785  001C12  2EE8               	decfsz	wreg,f,c
  3786  001C14  D7F8               	goto	u8875
  3787  001C16  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3788  001C1A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3789  001C1E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3790  001C22  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
  3794  001C26  0100               	movlb	0	; () banked
  3795  001C28  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3796  001C2A  0100               	movlb	0	; () banked
  3797  001C2C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3798  001C2E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3799  001C30  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3800  001C32  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3801                           
  3802                           ; BSR set to: 0
  3803                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
  3804  001C34  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3805                           
  3806                           ; BSR set to: 0
  3807                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
  3808  001C38  0E07               	movlw	7
  3809  001C3A  0100               	movlb	0	; () banked
  3810  001C3C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3811  001C3E  0100               	movlb	0	; () banked
  3812  001C40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3813  001C42  0E00               	movlw	0
  3814  001C44  0100               	movlb	0	; () banked
  3815  001C46  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3816  001C48  0100               	movlb	0	; () banked
  3817  001C4A  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3818  001C4C  0E00               	movlw	0
  3819  001C4E  0100               	movlb	0	; () banked
  3820  001C50  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3821  001C52  0100               	movlb	0	; () banked
  3822  001C54  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3823  001C56  0E00               	movlw	0
  3824  001C58  0100               	movlb	0	; () banked
  3825  001C5A  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3826  001C5C  0100               	movlb	0	; () banked
  3827  001C5E  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3828                           
  3829                           ; BSR set to: 0
  3830                           ;inc\CANlib.h: 420: tamp = tamp << 5;
  3831  001C60  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3832  001C64  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3833  001C68  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3834  001C6C  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3835  001C70  0E05               	movlw	5
  3836  001C72                     u8885:
  3837  001C72  90D8               	bcf	status,0,c
  3838  001C74  0100               	movlb	0	; () banked
  3839  001C76  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3840  001C78  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3841  001C7A  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3842  001C7C  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3843  001C7E  2EE8               	decfsz	wreg,f,c
  3844  001C80  D7F8               	goto	u8885
  3845  001C82  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3846  001C86  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3847  001C8A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3848  001C8E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3849                           
  3850                           ; BSR set to: 0
  3851                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
  3852  001C92  010F               	movlb	15	; () banked
  3853  001C94  5132               	movf	50,w,b	;volatile
  3854  001C96  0B1F               	andlw	31
  3855  001C98  010F               	movlb	15	; () banked
  3856  001C9A  6F32               	movwf	50,b	;volatile
  3857                           
  3858                           ; BSR set to: 15
  3859                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
  3860  001C9C  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  3861  001CA0                     l6935:
  3862                           
  3863                           ;inc\CANlib.h: 423: }
  3864                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
  3865  001CA0  0100               	movlb	0	; () banked
  3866  001CA2  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3867  001CA4  D003               	goto	l388
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
  3871  001CA6  010F               	movlb	15	; () banked
  3872  001CA8  8130               	bsf	48,0,b	;volatile
  3873  001CAA  D002               	goto	l389
  3874  001CAC                     l388:
  3875                           
  3876                           ; BSR set to: 0
  3877                           ;inc\CANlib.h: 427: else
  3878                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
  3879  001CAC  010F               	movlb	15	; () banked
  3880  001CAE  9130               	bcf	48,0,b	;volatile
  3881  001CB0                     l389:
  3882                           
  3883                           ; BSR set to: 15
  3884                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
  3885  001CB0  0100               	movlb	0	; () banked
  3886  001CB2  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  3887  001CB4  D003               	goto	l390
  3888                           
  3889                           ; BSR set to: 0
  3890                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
  3891  001CB6  010F               	movlb	15	; () banked
  3892  001CB8  8330               	bsf	48,1,b	;volatile
  3893  001CBA  D002               	goto	l6941
  3894  001CBC                     l390:
  3895                           
  3896                           ; BSR set to: 0
  3897                           ;inc\CANlib.h: 431: else
  3898                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
  3899  001CBC  010F               	movlb	15	; () banked
  3900  001CBE  9330               	bcf	48,1,b	;volatile
  3901  001CC0                     l6941:
  3902                           
  3903                           ; BSR set to: 15
  3904                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
  3905  001CC0  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  3906  001CC4  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3907  001CC8  50DF               	movf	indf2,w,c
  3908  001CCA  010F               	movlb	15	; () banked
  3909  001CCC  6F36               	movwf	54,b	;volatile
  3910                           
  3911                           ; BSR set to: 15
  3912                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
  3913  001CCE  0100               	movlb	0	; () banked
  3914  001CD0  EE20 F001          	lfsr	2,1
  3915  001CD4  517B               	movf	CANsendMessage@data& (0+255),w,b
  3916  001CD6  26D9               	addwf	fsr2l,f,c
  3917  001CD8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3918  001CDA  22DA               	addwfc	fsr2h,f,c
  3919  001CDC  50DF               	movf	indf2,w,c
  3920  001CDE  010F               	movlb	15	; () banked
  3921  001CE0  6F37               	movwf	55,b	;volatile
  3922                           
  3923                           ; BSR set to: 15
  3924                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
  3925  001CE2  0100               	movlb	0	; () banked
  3926  001CE4  EE20 F002          	lfsr	2,2
  3927  001CE8  517B               	movf	CANsendMessage@data& (0+255),w,b
  3928  001CEA  26D9               	addwf	fsr2l,f,c
  3929  001CEC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3930  001CEE  22DA               	addwfc	fsr2h,f,c
  3931  001CF0  50DF               	movf	indf2,w,c
  3932  001CF2  010F               	movlb	15	; () banked
  3933  001CF4  6F38               	movwf	56,b	;volatile
  3934                           
  3935                           ; BSR set to: 15
  3936                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
  3937  001CF6  0100               	movlb	0	; () banked
  3938  001CF8  EE20 F003          	lfsr	2,3
  3939  001CFC  517B               	movf	CANsendMessage@data& (0+255),w,b
  3940  001CFE  26D9               	addwf	fsr2l,f,c
  3941  001D00  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3942  001D02  22DA               	addwfc	fsr2h,f,c
  3943  001D04  50DF               	movf	indf2,w,c
  3944  001D06  010F               	movlb	15	; () banked
  3945  001D08  6F39               	movwf	57,b	;volatile
  3946                           
  3947                           ; BSR set to: 15
  3948                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
  3949  001D0A  0100               	movlb	0	; () banked
  3950  001D0C  EE20 F004          	lfsr	2,4
  3951  001D10  517B               	movf	CANsendMessage@data& (0+255),w,b
  3952  001D12  26D9               	addwf	fsr2l,f,c
  3953  001D14  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3954  001D16  22DA               	addwfc	fsr2h,f,c
  3955  001D18  50DF               	movf	indf2,w,c
  3956  001D1A  010F               	movlb	15	; () banked
  3957  001D1C  6F3A               	movwf	58,b	;volatile
  3958                           
  3959                           ; BSR set to: 15
  3960                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
  3961  001D1E  0100               	movlb	0	; () banked
  3962  001D20  EE20 F005          	lfsr	2,5
  3963  001D24  517B               	movf	CANsendMessage@data& (0+255),w,b
  3964  001D26  26D9               	addwf	fsr2l,f,c
  3965  001D28  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3966  001D2A  22DA               	addwfc	fsr2h,f,c
  3967  001D2C  50DF               	movf	indf2,w,c
  3968  001D2E  010F               	movlb	15	; () banked
  3969  001D30  6F3B               	movwf	59,b	;volatile
  3970                           
  3971                           ; BSR set to: 15
  3972                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
  3973  001D32  0100               	movlb	0	; () banked
  3974  001D34  EE20 F006          	lfsr	2,6
  3975  001D38  517B               	movf	CANsendMessage@data& (0+255),w,b
  3976  001D3A  26D9               	addwf	fsr2l,f,c
  3977  001D3C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3978  001D3E  22DA               	addwfc	fsr2h,f,c
  3979  001D40  50DF               	movf	indf2,w,c
  3980  001D42  010F               	movlb	15	; () banked
  3981  001D44  6F3C               	movwf	60,b	;volatile
  3982                           
  3983                           ; BSR set to: 15
  3984                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
  3985  001D46  0100               	movlb	0	; () banked
  3986  001D48  EE20 F007          	lfsr	2,7
  3987  001D4C  517B               	movf	CANsendMessage@data& (0+255),w,b
  3988  001D4E  26D9               	addwf	fsr2l,f,c
  3989  001D50  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3990  001D52  22DA               	addwfc	fsr2h,f,c
  3991  001D54  50DF               	movf	indf2,w,c
  3992  001D56  010F               	movlb	15	; () banked
  3993  001D58  6F3D               	movwf	61,b	;volatile
  3994                           
  3995                           ; BSR set to: 15
  3996                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
  3997  001D5A  010F               	movlb	15	; () banked
  3998  001D5C  8730               	bsf	48,3,b	;volatile
  3999                           
  4000                           ; BSR set to: 15
  4001                           ;inc\CANlib.h: 445: return;
  4002  001D5E  0012               	return	
  4003  001D60                     l378:
  4004                           
  4005                           ; BSR set to: 15
  4006                           ;inc\CANlib.h: 446: }
  4007                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
  4008  001D60  010F               	movlb	15	; () banked
  4009  001D62  B720               	btfsc	32,3,b	;volatile
  4010  001D64  0012               	return	
  4011                           
  4012                           ; BSR set to: 15
  4013                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
  4014  001D66  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  4015                           
  4016                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
  4017  001D6A  0100               	movlb	0	; () banked
  4018  001D6C  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  4019  001D6E  D003               	goto	l393
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
  4023  001D70  010F               	movlb	15	; () banked
  4024  001D72  8D25               	bsf	37,6,b	;volatile
  4025  001D74  D002               	goto	l394
  4026  001D76                     l393:
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;inc\CANlib.h: 455: else
  4030                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
  4031  001D76  010F               	movlb	15	; () banked
  4032  001D78  9D25               	bcf	37,6,b	;volatile
  4033  001D7A                     l394:
  4034                           
  4035                           ; BSR set to: 15
  4036                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
  4037  001D7A  0100               	movlb	0	; () banked
  4038  001D7C  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  4039  001D7E  D079               	goto	l395
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;inc\CANlib.h: 459: {
  4043                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
  4044  001D80  0100               	movlb	0	; () banked
  4045  001D82  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  4046  001D84  0100               	movlb	0	; () banked
  4047  001D86  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4048  001D88  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4049  001D8A  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4050  001D8C  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
  4054  001D8E  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  4055                           
  4056                           ; BSR set to: 0
  4057                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
  4058  001D92  0E00               	movlw	0
  4059  001D94  0100               	movlb	0	; () banked
  4060  001D96  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4061  001D98  0100               	movlb	0	; () banked
  4062  001D9A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4063  001D9C  0EFF               	movlw	255
  4064  001D9E  0100               	movlb	0	; () banked
  4065  001DA0  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4066  001DA2  0100               	movlb	0	; () banked
  4067  001DA4  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4068  001DA6  0E00               	movlw	0
  4069  001DA8  0100               	movlb	0	; () banked
  4070  001DAA  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4071  001DAC  0100               	movlb	0	; () banked
  4072  001DAE  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4073  001DB0  0E00               	movlw	0
  4074  001DB2  0100               	movlb	0	; () banked
  4075  001DB4  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4076  001DB6  0100               	movlb	0	; () banked
  4077  001DB8  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4078                           
  4079                           ; BSR set to: 0
  4080                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
  4081  001DBA  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4082  001DBE  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4083  001DC2  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4084  001DC6  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4085  001DCA  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  4086  001DCE  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  4087  001DD2  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  4088  001DD6  0100               	movlb	0	; () banked
  4089  001DD8  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  4090  001DDA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4091  001DDE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4092  001DE2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4093  001DE6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
  4097  001DEA  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
  4101  001DEE  0E00               	movlw	0
  4102  001DF0  010F               	movlb	15	; () banked
  4103  001DF2  6F22               	movwf	34,b	;volatile
  4104                           
  4105                           ; BSR set to: 15
  4106                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
  4107  001DF4  010F               	movlb	15	; () banked
  4108  001DF6  8722               	bsf	34,3,b	;volatile
  4109                           
  4110                           ; BSR set to: 15
  4111                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
  4112  001DF8  0100               	movlb	0	; () banked
  4113  001DFA  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  4114  001DFC  D002               	goto	l396
  4115                           
  4116                           ; BSR set to: 0
  4117                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
  4118  001DFE  010F               	movlb	15	; () banked
  4119  001E00  8122               	bsf	34,0,b	;volatile
  4120  001E02                     l396:
  4121                           
  4122                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
  4123  001E02  0100               	movlb	0	; () banked
  4124  001E04  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  4125  001E06  D002               	goto	l397
  4126                           
  4127                           ; BSR set to: 0
  4128                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
  4129  001E08  010F               	movlb	15	; () banked
  4130  001E0A  8322               	bsf	34,1,b	;volatile
  4131  001E0C                     l397:
  4132                           
  4133                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
  4134  001E0C  0100               	movlb	0	; () banked
  4135  001E0E  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  4136  001E10  D002               	goto	l398
  4137                           
  4138                           ; BSR set to: 0
  4139                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
  4140  001E12  010F               	movlb	15	; () banked
  4141  001E14  8B22               	bsf	34,5,b	;volatile
  4142  001E16                     l398:
  4143                           
  4144                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
  4145  001E16  0100               	movlb	0	; () banked
  4146  001E18  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  4147  001E1A  D002               	goto	l399
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
  4151  001E1C  010F               	movlb	15	; () banked
  4152  001E1E  8D22               	bsf	34,6,b	;volatile
  4153  001E20                     l399:
  4154                           
  4155                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
  4156  001E20  0100               	movlb	0	; () banked
  4157  001E22  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  4158  001E24  D002               	goto	l6991
  4159                           
  4160                           ; BSR set to: 0
  4161                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
  4162  001E26  010F               	movlb	15	; () banked
  4163  001E28  8F22               	bsf	34,7,b	;volatile
  4164  001E2A                     l6991:
  4165                           
  4166                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
  4167  001E2A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4168  001E2E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4169  001E32  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4170  001E36  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4171  001E3A  0E16               	movlw	22
  4172  001E3C  D006               	goto	u8990
  4173  001E3E                     u8995:
  4174  001E3E  0100               	movlb	0	; () banked
  4175  001E40  90D8               	bcf	status,0,c
  4176  001E42  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4177  001E44  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4178  001E46  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4179  001E48  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4180  001E4A                     u8990:
  4181  001E4A  2EE8               	decfsz	wreg,f,c
  4182  001E4C  D7F8               	goto	u8995
  4183  001E4E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4184  001E52  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4185  001E56  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4186  001E5A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
  4190  001E5E  0100               	movlb	0	; () banked
  4191  001E60  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4192  001E62  0100               	movlb	0	; () banked
  4193  001E64  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4194  001E66  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4195  001E68  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4196  001E6A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4197                           
  4198                           ; BSR set to: 0
  4199                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
  4200  001E6C  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4201                           
  4202                           ;inc\CANlib.h: 484: }
  4203  001E70  D059               	goto	l7011
  4204  001E72                     l395:
  4205                           
  4206                           ; BSR set to: 0
  4207                           ;inc\CANlib.h: 486: else
  4208                           ;inc\CANlib.h: 488: {
  4209                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
  4210  001E72  010F               	movlb	15	; () banked
  4211  001E74  9722               	bcf	34,3,b	;volatile
  4212                           
  4213                           ; BSR set to: 15
  4214                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
  4215  001E76  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4216  001E7A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4217  001E7E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4218  001E82  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4219  001E86  0E04               	movlw	4
  4220  001E88  D006               	goto	u9000
  4221  001E8A                     u9005:
  4222  001E8A  0100               	movlb	0	; () banked
  4223  001E8C  90D8               	bcf	status,0,c
  4224  001E8E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4225  001E90  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4226  001E92  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4227  001E94  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4228  001E96                     u9000:
  4229  001E96  2EE8               	decfsz	wreg,f,c
  4230  001E98  D7F8               	goto	u9005
  4231  001E9A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4232  001E9E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4233  001EA2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4234  001EA6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4235                           
  4236                           ; BSR set to: 0
  4237                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
  4238  001EAA  0100               	movlb	0	; () banked
  4239  001EAC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4240  001EAE  0100               	movlb	0	; () banked
  4241  001EB0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4242  001EB2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4243  001EB4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4244  001EB6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
  4248  001EB8  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4249                           
  4250                           ; BSR set to: 0
  4251                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
  4252  001EBC  0E07               	movlw	7
  4253  001EBE  0100               	movlb	0	; () banked
  4254  001EC0  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4255  001EC2  0100               	movlb	0	; () banked
  4256  001EC4  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4257  001EC6  0E00               	movlw	0
  4258  001EC8  0100               	movlb	0	; () banked
  4259  001ECA  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4260  001ECC  0100               	movlb	0	; () banked
  4261  001ECE  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4262  001ED0  0E00               	movlw	0
  4263  001ED2  0100               	movlb	0	; () banked
  4264  001ED4  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4265  001ED6  0100               	movlb	0	; () banked
  4266  001ED8  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4267  001EDA  0E00               	movlw	0
  4268  001EDC  0100               	movlb	0	; () banked
  4269  001EDE  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4270  001EE0  0100               	movlb	0	; () banked
  4271  001EE2  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4272                           
  4273                           ; BSR set to: 0
  4274                           ;inc\CANlib.h: 496: tamp = tamp << 5;
  4275  001EE4  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4276  001EE8  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4277  001EEC  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4278  001EF0  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4279  001EF4  0E05               	movlw	5
  4280  001EF6                     u9015:
  4281  001EF6  90D8               	bcf	status,0,c
  4282  001EF8  0100               	movlb	0	; () banked
  4283  001EFA  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  4284  001EFC  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  4285  001EFE  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  4286  001F00  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  4287  001F02  2EE8               	decfsz	wreg,f,c
  4288  001F04  D7F8               	goto	u9015
  4289  001F06  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4290  001F0A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4291  001F0E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4292  001F12  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
  4296  001F16  010F               	movlb	15	; () banked
  4297  001F18  5122               	movf	34,w,b	;volatile
  4298  001F1A  0B1F               	andlw	31
  4299  001F1C  010F               	movlb	15	; () banked
  4300  001F1E  6F22               	movwf	34,b	;volatile
  4301                           
  4302                           ; BSR set to: 15
  4303                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
  4304  001F20  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  4305  001F24                     l7011:
  4306                           
  4307                           ;inc\CANlib.h: 499: }
  4308                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
  4309  001F24  0100               	movlb	0	; () banked
  4310  001F26  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  4311  001F28  D003               	goto	l402
  4312                           
  4313                           ; BSR set to: 0
  4314                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
  4315  001F2A  010F               	movlb	15	; () banked
  4316  001F2C  8120               	bsf	32,0,b	;volatile
  4317  001F2E  D002               	goto	l403
  4318  001F30                     l402:
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;inc\CANlib.h: 503: else
  4322                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
  4323  001F30  010F               	movlb	15	; () banked
  4324  001F32  9120               	bcf	32,0,b	;volatile
  4325  001F34                     l403:
  4326                           
  4327                           ; BSR set to: 15
  4328                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
  4329  001F34  0100               	movlb	0	; () banked
  4330  001F36  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  4331  001F38  D003               	goto	l404
  4332                           
  4333                           ; BSR set to: 0
  4334                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
  4335  001F3A  010F               	movlb	15	; () banked
  4336  001F3C  8320               	bsf	32,1,b	;volatile
  4337  001F3E  D002               	goto	l7017
  4338  001F40                     l404:
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;inc\CANlib.h: 507: else
  4342                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
  4343  001F40  010F               	movlb	15	; () banked
  4344  001F42  9320               	bcf	32,1,b	;volatile
  4345  001F44                     l7017:
  4346                           
  4347                           ; BSR set to: 15
  4348                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
  4349  001F44  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  4350  001F48  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4351  001F4C  50DF               	movf	indf2,w,c
  4352  001F4E  010F               	movlb	15	; () banked
  4353  001F50  6F26               	movwf	38,b	;volatile
  4354                           
  4355                           ; BSR set to: 15
  4356                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
  4357  001F52  0100               	movlb	0	; () banked
  4358  001F54  EE20 F001          	lfsr	2,1
  4359  001F58  517B               	movf	CANsendMessage@data& (0+255),w,b
  4360  001F5A  26D9               	addwf	fsr2l,f,c
  4361  001F5C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4362  001F5E  22DA               	addwfc	fsr2h,f,c
  4363  001F60  50DF               	movf	indf2,w,c
  4364  001F62  010F               	movlb	15	; () banked
  4365  001F64  6F27               	movwf	39,b	;volatile
  4366                           
  4367                           ; BSR set to: 15
  4368                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
  4369  001F66  0100               	movlb	0	; () banked
  4370  001F68  EE20 F002          	lfsr	2,2
  4371  001F6C  517B               	movf	CANsendMessage@data& (0+255),w,b
  4372  001F6E  26D9               	addwf	fsr2l,f,c
  4373  001F70  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4374  001F72  22DA               	addwfc	fsr2h,f,c
  4375  001F74  50DF               	movf	indf2,w,c
  4376  001F76  010F               	movlb	15	; () banked
  4377  001F78  6F28               	movwf	40,b	;volatile
  4378                           
  4379                           ; BSR set to: 15
  4380                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
  4381  001F7A  0100               	movlb	0	; () banked
  4382  001F7C  EE20 F003          	lfsr	2,3
  4383  001F80  517B               	movf	CANsendMessage@data& (0+255),w,b
  4384  001F82  26D9               	addwf	fsr2l,f,c
  4385  001F84  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4386  001F86  22DA               	addwfc	fsr2h,f,c
  4387  001F88  50DF               	movf	indf2,w,c
  4388  001F8A  010F               	movlb	15	; () banked
  4389  001F8C  6F29               	movwf	41,b	;volatile
  4390                           
  4391                           ; BSR set to: 15
  4392                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
  4393  001F8E  0100               	movlb	0	; () banked
  4394  001F90  EE20 F004          	lfsr	2,4
  4395  001F94  517B               	movf	CANsendMessage@data& (0+255),w,b
  4396  001F96  26D9               	addwf	fsr2l,f,c
  4397  001F98  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4398  001F9A  22DA               	addwfc	fsr2h,f,c
  4399  001F9C  50DF               	movf	indf2,w,c
  4400  001F9E  010F               	movlb	15	; () banked
  4401  001FA0  6F2A               	movwf	42,b	;volatile
  4402                           
  4403                           ; BSR set to: 15
  4404                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
  4405  001FA2  0100               	movlb	0	; () banked
  4406  001FA4  EE20 F005          	lfsr	2,5
  4407  001FA8  517B               	movf	CANsendMessage@data& (0+255),w,b
  4408  001FAA  26D9               	addwf	fsr2l,f,c
  4409  001FAC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4410  001FAE  22DA               	addwfc	fsr2h,f,c
  4411  001FB0  50DF               	movf	indf2,w,c
  4412  001FB2  010F               	movlb	15	; () banked
  4413  001FB4  6F2B               	movwf	43,b	;volatile
  4414                           
  4415                           ; BSR set to: 15
  4416                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
  4417  001FB6  0100               	movlb	0	; () banked
  4418  001FB8  EE20 F006          	lfsr	2,6
  4419  001FBC  517B               	movf	CANsendMessage@data& (0+255),w,b
  4420  001FBE  26D9               	addwf	fsr2l,f,c
  4421  001FC0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4422  001FC2  22DA               	addwfc	fsr2h,f,c
  4423  001FC4  50DF               	movf	indf2,w,c
  4424  001FC6  010F               	movlb	15	; () banked
  4425  001FC8  6F2C               	movwf	44,b	;volatile
  4426                           
  4427                           ; BSR set to: 15
  4428                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
  4429  001FCA  0100               	movlb	0	; () banked
  4430  001FCC  EE20 F007          	lfsr	2,7
  4431  001FD0  517B               	movf	CANsendMessage@data& (0+255),w,b
  4432  001FD2  26D9               	addwf	fsr2l,f,c
  4433  001FD4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4434  001FD6  22DA               	addwfc	fsr2h,f,c
  4435  001FD8  50DF               	movf	indf2,w,c
  4436  001FDA  010F               	movlb	15	; () banked
  4437  001FDC  6F2D               	movwf	45,b	;volatile
  4438                           
  4439                           ; BSR set to: 15
  4440                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
  4441  001FDE  010F               	movlb	15	; () banked
  4442  001FE0  8720               	bsf	32,3,b	;volatile
  4443                           
  4444                           ; BSR set to: 15
  4445                           ;inc\CANlib.h: 521: return;
  4446  001FE2  0012               	return	
  4447  001FE4                     __end_of_CANsendMessage:
  4448                           	opt stack 0
  4449                           tblptru	equ	0xFF8
  4450                           tblptrh	equ	0xFF7
  4451                           tblptrl	equ	0xFF6
  4452                           tablat	equ	0xFF5
  4453                           postinc0	equ	0xFEE
  4454                           wreg	equ	0xFE8
  4455                           postdec1	equ	0xFE5
  4456                           fsr1l	equ	0xFE1
  4457                           indf2	equ	0xFDF
  4458                           postinc2	equ	0xFDE
  4459                           postdec2	equ	0xFDD
  4460                           fsr2h	equ	0xFDA
  4461                           fsr2l	equ	0xFD9
  4462                           status	equ	0xFD8
  4463                           
  4464 ;; *************** function _CANisTxReady *****************
  4465 ;; Defined at:
  4466 ;;		line 1155 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;		None
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;		None
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      unsigned char 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4481 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4483 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4484 ;;Total ram usage:        1 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:    4
  4487 ;; This function calls:
  4488 ;;		Nothing
  4489 ;; This function is called by:
  4490 ;;		_park_search
  4491 ;;		_park_routine
  4492 ;;		_can_send
  4493 ;; This function uses a non-reentrant model
  4494 ;;
  4495                           
  4496                           	psect	text6
  4497  005F80                     __ptext6:
  4498                           	opt stack 0
  4499  005F80                     _CANisTxReady:
  4500                           	opt stack 23
  4501                           
  4502                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  4503                           
  4504                           ; BSR set to: 15
  4505                           ;incstack = 0
  4506  005F80  0E01               	movlw	1
  4507  005F82  0100               	movlb	0	; () banked
  4508  005F84  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4509                           
  4510                           ; BSR set to: 0
  4511  005F86  010F               	movlb	15	; () banked
  4512  005F88  A740               	btfss	64,3,b	;volatile
  4513  005F8A  D009               	goto	l556
  4514                           
  4515                           ; BSR set to: 15
  4516  005F8C  010F               	movlb	15	; () banked
  4517  005F8E  A730               	btfss	48,3,b	;volatile
  4518  005F90  D006               	goto	l556
  4519                           
  4520                           ; BSR set to: 15
  4521  005F92  010F               	movlb	15	; () banked
  4522  005F94  A720               	btfss	32,3,b	;volatile
  4523  005F96  D003               	goto	l556
  4524                           
  4525                           ; BSR set to: 15
  4526  005F98  0E00               	movlw	0
  4527  005F9A  0100               	movlb	0	; () banked
  4528  005F9C  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4529  005F9E                     l556:
  4530  005F9E  0100               	movlb	0	; () banked
  4531  005FA0  5177               	movf	_CANisTxReady$2845& (0+255),w,b
  4532  005FA2  0012               	return	
  4533  005FA4                     __end_of_CANisTxReady:
  4534                           	opt stack 0
  4535                           tblptru	equ	0xFF8
  4536                           tblptrh	equ	0xFF7
  4537                           tblptrl	equ	0xFF6
  4538                           tablat	equ	0xFF5
  4539                           postinc0	equ	0xFEE
  4540                           wreg	equ	0xFE8
  4541                           postdec1	equ	0xFE5
  4542                           fsr1l	equ	0xFE1
  4543                           indf2	equ	0xFDF
  4544                           postinc2	equ	0xFDE
  4545                           postdec2	equ	0xFDD
  4546                           fsr2h	equ	0xFDA
  4547                           fsr2l	equ	0xFD9
  4548                           status	equ	0xFD8
  4549                           
  4550 ;; *************** function _abs *****************
  4551 ;; Defined at:
  4552 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;  a               2   23[BANK0 ] int 
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;		None
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  2   23[BANK0 ] int 
  4559 ;; Registers used:
  4560 ;;		wreg, status,2, status,0
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4566 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4568 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4569 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4570 ;;Total ram usage:        4 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; Hardware stack levels required when called:    4
  4573 ;; This function calls:
  4574 ;;		Nothing
  4575 ;; This function is called by:
  4576 ;;		_park_search
  4577 ;;		_parallelo
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           	psect	text7
  4582  005F28                     __ptext7:
  4583                           	opt stack 0
  4584  005F28                     _abs:
  4585                           	opt stack 24
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;incstack = 0
  4589  005F28  0100               	movlb	0	; () banked
  4590  005F2A  AF78               	btfss	(abs@a+1)& (0+255),7,b
  4591  005F2C  D00E               	goto	l871
  4592                           
  4593                           ; BSR set to: 0
  4594  005F2E  C077  F079         	movff	abs@a,??_abs
  4595  005F32  C078  F07A         	movff	abs@a+1,??_abs+1
  4596  005F36  0100               	movlb	0	; () banked
  4597  005F38  1F79               	comf	??_abs& (0+255),f,b
  4598  005F3A  1F7A               	comf	(??_abs+1)& (0+255),f,b
  4599  005F3C  4B79               	infsnz	??_abs& (0+255),f,b
  4600  005F3E  2B7A               	incf	(??_abs+1)& (0+255),f,b
  4601  005F40  C079  F077         	movff	??_abs,?_abs
  4602  005F44  C07A  F078         	movff	??_abs+1,?_abs+1
  4603  005F48  0012               	return	
  4604  005F4A                     l871:
  4605                           
  4606                           ; BSR set to: 0
  4607  005F4A  C077  F077         	movff	abs@a,?_abs
  4608  005F4E  C078  F078         	movff	abs@a+1,?_abs+1
  4609                           
  4610                           ; BSR set to: 0
  4611  005F52  0012               	return		;funcret
  4612  005F54                     __end_of_abs:
  4613                           	opt stack 0
  4614                           tblptru	equ	0xFF8
  4615                           tblptrh	equ	0xFF7
  4616                           tblptrl	equ	0xFF6
  4617                           tablat	equ	0xFF5
  4618                           postinc0	equ	0xFEE
  4619                           wreg	equ	0xFE8
  4620                           postdec1	equ	0xFE5
  4621                           fsr1l	equ	0xFE1
  4622                           indf2	equ	0xFDF
  4623                           postinc2	equ	0xFDE
  4624                           postdec2	equ	0xFDD
  4625                           fsr2h	equ	0xFDA
  4626                           fsr2l	equ	0xFD9
  4627                           status	equ	0xFD8
  4628                           
  4629 ;; *************** function _matematica *****************
  4630 ;; Defined at:
  4631 ;;		line 430 in file "parcheggio.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;		None
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;		None
  4636 ;; Return value:  Size  Location     Type
  4637 ;;		None               void
  4638 ;; Registers used:
  4639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4640 ;; Tracked objects:
  4641 ;;		On entry : 0/0
  4642 ;;		On exit  : 0/0
  4643 ;;		Unchanged: 0/0
  4644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4646 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4648 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4649 ;;Total ram usage:       28 bytes
  4650 ;; Hardware stack levels used:    1
  4651 ;; Hardware stack levels required when called:    8
  4652 ;; This function calls:
  4653 ;;		___fladd
  4654 ;;		___fldiv
  4655 ;;		___flmul
  4656 ;;		___flneg
  4657 ;;		_asin
  4658 ;;		_cos
  4659 ;; This function is called by:
  4660 ;;		_park_routine
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           	psect	text8
  4665  001FE4                     __ptext8:
  4666                           	opt stack 0
  4667  001FE4                     _matematica:
  4668                           	opt stack 21
  4669                           
  4670                           ;parcheggio.c: 431: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4671                           
  4672                           ; BSR set to: 0
  4673                           ;incstack = 0
  4674  001FE4  C124  F0AD         	movff	_bordo,___fladd@a	;volatile
  4675  001FE8  C125  F0AE         	movff	_bordo+1,___fladd@a+1	;volatile
  4676  001FEC  C126  F0AF         	movff	_bordo+2,___fladd@a+2	;volatile
  4677  001FF0  C127  F0B0         	movff	_bordo+3,___fladd@a+3	;volatile
  4678  001FF4  0E00               	movlw	0
  4679  001FF6  0100               	movlb	0	; () banked
  4680  001FF8  6F7B               	movwf	___fldiv@a& (0+255),b
  4681  001FFA  0E00               	movlw	0
  4682  001FFC  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4683  001FFE  0E00               	movlw	0
  4684  002000  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4685  002002  0E40               	movlw	64
  4686  002004  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4687  002006  C1E2  F077         	movff	_larghezza,___fldiv@b
  4688  00200A  C1E3  F078         	movff	_larghezza+1,___fldiv@b+1
  4689  00200E  C1E4  F079         	movff	_larghezza+2,___fldiv@b+2
  4690  002012  C1E5  F07A         	movff	_larghezza+3,___fldiv@b+3
  4691  002016  ECFF  F01D         	call	___fldiv	;wreg free
  4692  00201A  C077  F0A9         	movff	?___fldiv,___fladd@b
  4693  00201E  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  4694  002022  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  4695  002026  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  4696  00202A  EC3D  F015         	call	___fladd	;wreg free
  4697  00202E  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  4698  002032  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  4699  002036  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  4700  00203A  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  4701  00203E  EC43  F02F         	call	___flneg	;wreg free
  4702  002042  C0BD  F1BA         	movff	?___flneg,_matematica$3741
  4703  002046  C0BE  F1BB         	movff	?___flneg+1,_matematica$3741+1
  4704  00204A  C0BF  F1BC         	movff	?___flneg+2,_matematica$3741+2
  4705  00204E  C0C0  F1BD         	movff	?___flneg+3,_matematica$3741+3
  4706                           
  4707                           ;parcheggio.c: 431: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4708  002052  C1BA  F0AD         	movff	_matematica$3741,___fladd@a
  4709  002056  C1BB  F0AE         	movff	_matematica$3741+1,___fladd@a+1
  4710  00205A  C1BC  F0AF         	movff	_matematica$3741+2,___fladd@a+2
  4711  00205E  C1BD  F0B0         	movff	_matematica$3741+3,___fladd@a+3
  4712  002062  0E00               	movlw	0
  4713  002064  0100               	movlb	0	; () banked
  4714  002066  6F94               	movwf	___flmul@a& (0+255),b
  4715  002068  0E00               	movlw	0
  4716  00206A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4717  00206C  0E00               	movlw	0
  4718  00206E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4719  002070  0E40               	movlw	64
  4720  002072  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4721  002074  C1E8  F090         	movff	_raggio,___flmul@b
  4722  002078  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4723  00207C  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4724  002080  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4725  002084  EC91  F017         	call	___flmul	;wreg free
  4726  002088  C090  F0A9         	movff	?___flmul,___fladd@b
  4727  00208C  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  4728  002090  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  4729  002094  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  4730  002098  EC3D  F015         	call	___fladd	;wreg free
  4731  00209C  C0A9  F1BE         	movff	?___fladd,_matematica$3742
  4732  0020A0  C0AA  F1BF         	movff	?___fladd+1,_matematica$3742+1
  4733  0020A4  C0AB  F1C0         	movff	?___fladd+2,_matematica$3742+2
  4734  0020A8  C0AC  F1C1         	movff	?___fladd+3,_matematica$3742+3
  4735                           
  4736                           ;parcheggio.c: 431: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4737  0020AC  0E00               	movlw	0
  4738  0020AE  0100               	movlb	0	; () banked
  4739  0020B0  6F7B               	movwf	___fldiv@a& (0+255),b
  4740  0020B2  0E00               	movlw	0
  4741  0020B4  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4742  0020B6  0E00               	movlw	0
  4743  0020B8  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4744  0020BA  0E40               	movlw	64
  4745  0020BC  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4746  0020BE  C1E2  F077         	movff	_larghezza,___fldiv@b
  4747  0020C2  C1E3  F078         	movff	_larghezza+1,___fldiv@b+1
  4748  0020C6  C1E4  F079         	movff	_larghezza+2,___fldiv@b+2
  4749  0020CA  C1E5  F07A         	movff	_larghezza+3,___fldiv@b+3
  4750  0020CE  ECFF  F01D         	call	___fldiv	;wreg free
  4751  0020D2  C077  F0BD         	movff	?___fldiv,___flneg@f1
  4752  0020D6  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  4753  0020DA  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  4754  0020DE  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  4755  0020E2  EC43  F02F         	call	___flneg	;wreg free
  4756  0020E6  C0BD  F0AD         	movff	?___flneg,___fladd@a
  4757  0020EA  C0BE  F0AE         	movff	?___flneg+1,___fladd@a+1
  4758  0020EE  C0BF  F0AF         	movff	?___flneg+2,___fladd@a+2
  4759  0020F2  C0C0  F0B0         	movff	?___flneg+3,___fladd@a+3
  4760  0020F6  C1BE  F0A9         	movff	_matematica$3742,___fladd@b
  4761  0020FA  C1BF  F0AA         	movff	_matematica$3742+1,___fladd@b+1
  4762  0020FE  C1C0  F0AB         	movff	_matematica$3742+2,___fladd@b+2
  4763  002102  C1C1  F0AC         	movff	_matematica$3742+3,___fladd@b+3
  4764  002106  EC3D  F015         	call	___fladd	;wreg free
  4765  00210A  C0A9  F1C2         	movff	?___fladd,_matematica$3743
  4766  00210E  C0AA  F1C3         	movff	?___fladd+1,_matematica$3743+1
  4767  002112  C0AB  F1C4         	movff	?___fladd+2,_matematica$3743+2
  4768  002116  C0AC  F1C5         	movff	?___fladd+3,_matematica$3743+3
  4769                           
  4770                           ;parcheggio.c: 431: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4771  00211A  C1C2  F077         	movff	_matematica$3743,___fldiv@b
  4772  00211E  C1C3  F078         	movff	_matematica$3743+1,___fldiv@b+1
  4773  002122  C1C4  F079         	movff	_matematica$3743+2,___fldiv@b+2
  4774  002126  C1C5  F07A         	movff	_matematica$3743+3,___fldiv@b+3
  4775  00212A  0E00               	movlw	0
  4776  00212C  0100               	movlb	0	; () banked
  4777  00212E  6F94               	movwf	___flmul@a& (0+255),b
  4778  002130  0E00               	movlw	0
  4779  002132  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4780  002134  0E00               	movlw	0
  4781  002136  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4782  002138  0E40               	movlw	64
  4783  00213A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4784  00213C  C1E8  F090         	movff	_raggio,___flmul@b
  4785  002140  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4786  002144  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4787  002148  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4788  00214C  EC91  F017         	call	___flmul	;wreg free
  4789  002150  C090  F07B         	movff	?___flmul,___fldiv@a
  4790  002154  C091  F07C         	movff	?___flmul+1,___fldiv@a+1
  4791  002158  C092  F07D         	movff	?___flmul+2,___fldiv@a+2
  4792  00215C  C093  F07E         	movff	?___flmul+3,___fldiv@a+3
  4793  002160  ECFF  F01D         	call	___fldiv	;wreg free
  4794  002164  C077  F1C6         	movff	?___fldiv,_matematica$3744
  4795  002168  C078  F1C7         	movff	?___fldiv+1,_matematica$3744+1
  4796  00216C  C079  F1C8         	movff	?___fldiv+2,_matematica$3744+2
  4797  002170  C07A  F1C9         	movff	?___fldiv+3,_matematica$3744+3
  4798                           
  4799                           ;parcheggio.c: 431: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4800  002174  C1C6  F0DE         	movff	_matematica$3744,asin@x
  4801  002178  C1C7  F0DF         	movff	_matematica$3744+1,asin@x+1
  4802  00217C  C1C8  F0E0         	movff	_matematica$3744+2,asin@x+2
  4803  002180  C1C9  F0E1         	movff	_matematica$3744+3,asin@x+3
  4804  002184  EC3A  F023         	call	_asin	;wreg free
  4805  002188  C0DE  F11C         	movff	?_asin,_alfa
  4806  00218C  C0DF  F11D         	movff	?_asin+1,_alfa+1
  4807  002190  C0E0  F11E         	movff	?_asin+2,_alfa+2
  4808  002194  C0E1  F11F         	movff	?_asin+3,_alfa+3
  4809                           
  4810                           ;parcheggio.c: 432: alfa = alfa / 3.14159265358979323846 * 180;
  4811  002198  0EDB               	movlw	219
  4812  00219A  0100               	movlb	0	; () banked
  4813  00219C  6F7B               	movwf	___fldiv@a& (0+255),b
  4814  00219E  0E0F               	movlw	15
  4815  0021A0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4816  0021A2  0E49               	movlw	73
  4817  0021A4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4818  0021A6  0E40               	movlw	64
  4819  0021A8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4820  0021AA  C11C  F077         	movff	_alfa,___fldiv@b
  4821  0021AE  C11D  F078         	movff	_alfa+1,___fldiv@b+1
  4822  0021B2  C11E  F079         	movff	_alfa+2,___fldiv@b+2
  4823  0021B6  C11F  F07A         	movff	_alfa+3,___fldiv@b+3
  4824  0021BA  ECFF  F01D         	call	___fldiv	;wreg free
  4825  0021BE  C077  F090         	movff	?___fldiv,___flmul@b
  4826  0021C2  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  4827  0021C6  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  4828  0021CA  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  4829  0021CE  0E00               	movlw	0
  4830  0021D0  0100               	movlb	0	; () banked
  4831  0021D2  6F94               	movwf	___flmul@a& (0+255),b
  4832  0021D4  0E00               	movlw	0
  4833  0021D6  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4834  0021D8  0E34               	movlw	52
  4835  0021DA  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4836  0021DC  0E43               	movlw	67
  4837  0021DE  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4838  0021E0  EC91  F017         	call	___flmul	;wreg free
  4839  0021E4  C090  F11C         	movff	?___flmul,_alfa
  4840  0021E8  C091  F11D         	movff	?___flmul+1,_alfa+1
  4841  0021EC  C092  F11E         	movff	?___flmul+2,_alfa+2
  4842  0021F0  C093  F11F         	movff	?___flmul+3,_alfa+3
  4843                           
  4844                           ;parcheggio.c: 433: beta = 90 - alfa;
  4845  0021F4  C11C  F0BD         	movff	_alfa,___flneg@f1
  4846  0021F8  C11D  F0BE         	movff	_alfa+1,___flneg@f1+1
  4847  0021FC  C11E  F0BF         	movff	_alfa+2,___flneg@f1+2
  4848  002200  C11F  F0C0         	movff	_alfa+3,___flneg@f1+3
  4849  002204  EC43  F02F         	call	___flneg	;wreg free
  4850  002208  C0BD  F0A9         	movff	?___flneg,___fladd@b
  4851  00220C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  4852  002210  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  4853  002214  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  4854  002218  0E00               	movlw	0
  4855  00221A  0100               	movlb	0	; () banked
  4856  00221C  6FAD               	movwf	___fladd@a& (0+255),b
  4857  00221E  0E00               	movlw	0
  4858  002220  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  4859  002222  0EB4               	movlw	180
  4860  002224  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  4861  002226  0E42               	movlw	66
  4862  002228  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  4863  00222A  EC3D  F015         	call	___fladd	;wreg free
  4864  00222E  C0A9  F120         	movff	?___fladd,_beta
  4865  002232  C0AA  F121         	movff	?___fladd+1,_beta+1
  4866  002236  C0AB  F122         	movff	?___fladd+2,_beta+2
  4867  00223A  C0AC  F123         	movff	?___fladd+3,_beta+3
  4868                           
  4869                           ;parcheggio.c: 434: alfa = (alfa * 3.14159265358979323846) / 180;
  4870  00223E  0EDB               	movlw	219
  4871  002240  0100               	movlb	0	; () banked
  4872  002242  6F94               	movwf	___flmul@a& (0+255),b
  4873  002244  0E0F               	movlw	15
  4874  002246  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4875  002248  0E49               	movlw	73
  4876  00224A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4877  00224C  0E40               	movlw	64
  4878  00224E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4879  002250  C11C  F090         	movff	_alfa,___flmul@b
  4880  002254  C11D  F091         	movff	_alfa+1,___flmul@b+1
  4881  002258  C11E  F092         	movff	_alfa+2,___flmul@b+2
  4882  00225C  C11F  F093         	movff	_alfa+3,___flmul@b+3
  4883  002260  EC91  F017         	call	___flmul	;wreg free
  4884  002264  C090  F077         	movff	?___flmul,___fldiv@b
  4885  002268  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  4886  00226C  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  4887  002270  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  4888  002274  0E00               	movlw	0
  4889  002276  0100               	movlb	0	; () banked
  4890  002278  6F7B               	movwf	___fldiv@a& (0+255),b
  4891  00227A  0E00               	movlw	0
  4892  00227C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4893  00227E  0E34               	movlw	52
  4894  002280  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4895  002282  0E43               	movlw	67
  4896  002284  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4897  002286  ECFF  F01D         	call	___fldiv	;wreg free
  4898  00228A  C077  F11C         	movff	?___fldiv,_alfa
  4899  00228E  C078  F11D         	movff	?___fldiv+1,_alfa+1
  4900  002292  C079  F11E         	movff	?___fldiv+2,_alfa+2
  4901  002296  C07A  F11F         	movff	?___fldiv+3,_alfa+3
  4902                           
  4903                           ;parcheggio.c: 435: n = cos(alfa);
  4904  00229A  C11C  F1B2         	movff	_alfa,cos@f
  4905  00229E  C11D  F1B3         	movff	_alfa+1,cos@f+1
  4906  0022A2  C11E  F1B4         	movff	_alfa+2,cos@f+2
  4907  0022A6  C11F  F1B5         	movff	_alfa+3,cos@f+3
  4908  0022AA  ECDE  F02C         	call	_cos	;wreg free
  4909  0022AE  C1B2  F130         	movff	?_cos,_n
  4910  0022B2  C1B3  F131         	movff	?_cos+1,_n+1
  4911  0022B6  C1B4  F132         	movff	?_cos+2,_n+2
  4912  0022BA  C1B5  F133         	movff	?_cos+3,_n+3
  4913                           
  4914                           ;parcheggio.c: 436: n = 2 * raggio *n;
  4915  0022BE  C130  F094         	movff	_n,___flmul@a
  4916  0022C2  C131  F095         	movff	_n+1,___flmul@a+1
  4917  0022C6  C132  F096         	movff	_n+2,___flmul@a+2
  4918  0022CA  C133  F097         	movff	_n+3,___flmul@a+3
  4919  0022CE  C1E8  F090         	movff	_raggio,___flmul@b
  4920  0022D2  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4921  0022D6  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4922  0022DA  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4923  0022DE  EC91  F017         	call	___flmul	;wreg free
  4924  0022E2  C090  F1D2         	movff	?___flmul,_matematica$3745
  4925  0022E6  C091  F1D3         	movff	?___flmul+1,_matematica$3745+1
  4926  0022EA  C092  F1D4         	movff	?___flmul+2,_matematica$3745+2
  4927  0022EE  C093  F1D5         	movff	?___flmul+3,_matematica$3745+3
  4928                           
  4929                           ;parcheggio.c: 436: n = 2 * raggio *n;
  4930  0022F2  C1D2  F090         	movff	_matematica$3745,___flmul@b
  4931  0022F6  C1D3  F091         	movff	_matematica$3745+1,___flmul@b+1
  4932  0022FA  C1D4  F092         	movff	_matematica$3745+2,___flmul@b+2
  4933  0022FE  C1D5  F093         	movff	_matematica$3745+3,___flmul@b+3
  4934  002302  0E00               	movlw	0
  4935  002304  0100               	movlb	0	; () banked
  4936  002306  6F94               	movwf	___flmul@a& (0+255),b
  4937  002308  0E00               	movlw	0
  4938  00230A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4939  00230C  0E00               	movlw	0
  4940  00230E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4941  002310  0E40               	movlw	64
  4942  002312  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4943  002314  EC91  F017         	call	___flmul	;wreg free
  4944  002318  C090  F130         	movff	?___flmul,_n
  4945  00231C  C091  F131         	movff	?___flmul+1,_n+1
  4946  002320  C092  F132         	movff	?___flmul+2,_n+2
  4947  002324  C093  F133         	movff	?___flmul+3,_n+3
  4948                           
  4949                           ;parcheggio.c: 437: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  4950  002328  C120  F094         	movff	_beta,___flmul@a
  4951  00232C  C121  F095         	movff	_beta+1,___flmul@a+1
  4952  002330  C122  F096         	movff	_beta+2,___flmul@a+2
  4953  002334  C123  F097         	movff	_beta+3,___flmul@a+3
  4954  002338  C1E8  F090         	movff	_raggio,___flmul@b
  4955  00233C  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4956  002340  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4957  002344  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4958  002348  EC91  F017         	call	___flmul	;wreg free
  4959  00234C  C090  F1D2         	movff	?___flmul,_matematica$3745
  4960  002350  C091  F1D3         	movff	?___flmul+1,_matematica$3745+1
  4961  002354  C092  F1D4         	movff	?___flmul+2,_matematica$3745+2
  4962  002358  C093  F1D5         	movff	?___flmul+3,_matematica$3745+3
  4963                           
  4964                           ;parcheggio.c: 437: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  4965  00235C  0EDB               	movlw	219
  4966  00235E  0100               	movlb	0	; () banked
  4967  002360  6F94               	movwf	___flmul@a& (0+255),b
  4968  002362  0E0F               	movlw	15
  4969  002364  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4970  002366  0EC9               	movlw	201
  4971  002368  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4972  00236A  0E40               	movlw	64
  4973  00236C  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4974  00236E  C1D2  F090         	movff	_matematica$3745,___flmul@b
  4975  002372  C1D3  F091         	movff	_matematica$3745+1,___flmul@b+1
  4976  002376  C1D4  F092         	movff	_matematica$3745+2,___flmul@b+2
  4977  00237A  C1D5  F093         	movff	_matematica$3745+3,___flmul@b+3
  4978  00237E  EC91  F017         	call	___flmul	;wreg free
  4979  002382  C090  F077         	movff	?___flmul,___fldiv@b
  4980  002386  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  4981  00238A  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  4982  00238E  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  4983  002392  0E00               	movlw	0
  4984  002394  0100               	movlb	0	; () banked
  4985  002396  6F7B               	movwf	___fldiv@a& (0+255),b
  4986  002398  0E00               	movlw	0
  4987  00239A  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4988  00239C  0EB4               	movlw	180
  4989  00239E  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4990  0023A0  0E43               	movlw	67
  4991  0023A2  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4992  0023A4  ECFF  F01D         	call	___fldiv	;wreg free
  4993  0023A8  C077  F138         	movff	?___fldiv,_prima_sterzata
  4994  0023AC  C078  F139         	movff	?___fldiv+1,_prima_sterzata+1
  4995  0023B0  C079  F13A         	movff	?___fldiv+2,_prima_sterzata+2
  4996  0023B4  C07A  F13B         	movff	?___fldiv+3,_prima_sterzata+3
  4997                           
  4998                           ;parcheggio.c: 438: kkk = raggio + (2 * larghezza / 3);
  4999  0023B8  0E00               	movlw	0
  5000  0023BA  0100               	movlb	0	; () banked
  5001  0023BC  6F7B               	movwf	___fldiv@a& (0+255),b
  5002  0023BE  0E00               	movlw	0
  5003  0023C0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5004  0023C2  0E40               	movlw	64
  5005  0023C4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5006  0023C6  0E40               	movlw	64
  5007  0023C8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5008  0023CA  0E00               	movlw	0
  5009  0023CC  0100               	movlb	0	; () banked
  5010  0023CE  6F94               	movwf	___flmul@a& (0+255),b
  5011  0023D0  0E00               	movlw	0
  5012  0023D2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5013  0023D4  0E00               	movlw	0
  5014  0023D6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5015  0023D8  0E40               	movlw	64
  5016  0023DA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5017  0023DC  C1E2  F090         	movff	_larghezza,___flmul@b
  5018  0023E0  C1E3  F091         	movff	_larghezza+1,___flmul@b+1
  5019  0023E4  C1E4  F092         	movff	_larghezza+2,___flmul@b+2
  5020  0023E8  C1E5  F093         	movff	_larghezza+3,___flmul@b+3
  5021  0023EC  EC91  F017         	call	___flmul	;wreg free
  5022  0023F0  C090  F077         	movff	?___flmul,___fldiv@b
  5023  0023F4  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5024  0023F8  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5025  0023FC  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5026  002400  ECFF  F01D         	call	___fldiv	;wreg free
  5027  002404  C077  F0A9         	movff	?___fldiv,___fladd@b
  5028  002408  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  5029  00240C  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  5030  002410  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  5031  002414  C1E8  F0AD         	movff	_raggio,___fladd@a
  5032  002418  C1E9  F0AE         	movff	_raggio+1,___fladd@a+1
  5033  00241C  C1EA  F0AF         	movff	_raggio+2,___fladd@a+2
  5034  002420  C1EB  F0B0         	movff	_raggio+3,___fladd@a+3
  5035  002424  EC3D  F015         	call	___fladd	;wreg free
  5036  002428  C0A9  F12C         	movff	?___fladd,_kkk
  5037  00242C  C0AA  F12D         	movff	?___fladd+1,_kkk+1
  5038  002430  C0AB  F12E         	movff	?___fladd+2,_kkk+2
  5039  002434  C0AC  F12F         	movff	?___fladd+3,_kkk+3
  5040                           
  5041                           ;parcheggio.c: 439: jjj = raggio - (2 * larghezza / 3);
  5042  002438  0E00               	movlw	0
  5043  00243A  0100               	movlb	0	; () banked
  5044  00243C  6F7B               	movwf	___fldiv@a& (0+255),b
  5045  00243E  0E00               	movlw	0
  5046  002440  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5047  002442  0E40               	movlw	64
  5048  002444  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5049  002446  0E40               	movlw	64
  5050  002448  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5051  00244A  0E00               	movlw	0
  5052  00244C  0100               	movlb	0	; () banked
  5053  00244E  6F94               	movwf	___flmul@a& (0+255),b
  5054  002450  0E00               	movlw	0
  5055  002452  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5056  002454  0E00               	movlw	0
  5057  002456  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5058  002458  0E40               	movlw	64
  5059  00245A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5060  00245C  C1E2  F090         	movff	_larghezza,___flmul@b
  5061  002460  C1E3  F091         	movff	_larghezza+1,___flmul@b+1
  5062  002464  C1E4  F092         	movff	_larghezza+2,___flmul@b+2
  5063  002468  C1E5  F093         	movff	_larghezza+3,___flmul@b+3
  5064  00246C  EC91  F017         	call	___flmul	;wreg free
  5065  002470  C090  F077         	movff	?___flmul,___fldiv@b
  5066  002474  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5067  002478  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5068  00247C  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5069  002480  ECFF  F01D         	call	___fldiv	;wreg free
  5070  002484  C077  F0BD         	movff	?___fldiv,___flneg@f1
  5071  002488  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  5072  00248C  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  5073  002490  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  5074  002494  EC43  F02F         	call	___flneg	;wreg free
  5075  002498  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5076  00249C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5077  0024A0  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5078  0024A4  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5079  0024A8  C1E8  F0AD         	movff	_raggio,___fladd@a
  5080  0024AC  C1E9  F0AE         	movff	_raggio+1,___fladd@a+1
  5081  0024B0  C1EA  F0AF         	movff	_raggio+2,___fladd@a+2
  5082  0024B4  C1EB  F0B0         	movff	_raggio+3,___fladd@a+3
  5083  0024B8  EC3D  F015         	call	___fladd	;wreg free
  5084  0024BC  C0A9  F128         	movff	?___fladd,_jjj
  5085  0024C0  C0AA  F129         	movff	?___fladd+1,_jjj+1
  5086  0024C4  C0AB  F12A         	movff	?___fladd+2,_jjj+2
  5087  0024C8  C0AC  F12B         	movff	?___fladd+3,_jjj+3
  5088                           
  5089                           ;parcheggio.c: 440: Pminimo = kkk * cos(asin((jjj / kkk)));
  5090  0024CC  C12C  F07B         	movff	_kkk,___fldiv@a
  5091  0024D0  C12D  F07C         	movff	_kkk+1,___fldiv@a+1
  5092  0024D4  C12E  F07D         	movff	_kkk+2,___fldiv@a+2
  5093  0024D8  C12F  F07E         	movff	_kkk+3,___fldiv@a+3
  5094  0024DC  C128  F077         	movff	_jjj,___fldiv@b
  5095  0024E0  C129  F078         	movff	_jjj+1,___fldiv@b+1
  5096  0024E4  C12A  F079         	movff	_jjj+2,___fldiv@b+2
  5097  0024E8  C12B  F07A         	movff	_jjj+3,___fldiv@b+3
  5098  0024EC  ECFF  F01D         	call	___fldiv	;wreg free
  5099  0024F0  C077  F1CA         	movff	?___fldiv,_matematica$3746
  5100  0024F4  C078  F1CB         	movff	?___fldiv+1,_matematica$3746+1
  5101  0024F8  C079  F1CC         	movff	?___fldiv+2,_matematica$3746+2
  5102  0024FC  C07A  F1CD         	movff	?___fldiv+3,_matematica$3746+3
  5103                           
  5104                           ;parcheggio.c: 440: Pminimo = kkk * cos(asin((jjj / kkk)));
  5105  002500  C1CA  F0DE         	movff	_matematica$3746,asin@x
  5106  002504  C1CB  F0DF         	movff	_matematica$3746+1,asin@x+1
  5107  002508  C1CC  F0E0         	movff	_matematica$3746+2,asin@x+2
  5108  00250C  C1CD  F0E1         	movff	_matematica$3746+3,asin@x+3
  5109  002510  EC3A  F023         	call	_asin	;wreg free
  5110  002514  C0DE  F1B2         	movff	?_asin,cos@f
  5111  002518  C0DF  F1B3         	movff	?_asin+1,cos@f+1
  5112  00251C  C0E0  F1B4         	movff	?_asin+2,cos@f+2
  5113  002520  C0E1  F1B5         	movff	?_asin+3,cos@f+3
  5114  002524  ECDE  F02C         	call	_cos	;wreg free
  5115  002528  C1B2  F1CE         	movff	?_cos,_matematica$3747
  5116  00252C  C1B3  F1CF         	movff	?_cos+1,_matematica$3747+1
  5117  002530  C1B4  F1D0         	movff	?_cos+2,_matematica$3747+2
  5118  002534  C1B5  F1D1         	movff	?_cos+3,_matematica$3747+3
  5119                           
  5120                           ;parcheggio.c: 440: Pminimo = kkk * cos(asin((jjj / kkk)));
  5121  002538  C1CE  F090         	movff	_matematica$3747,___flmul@b
  5122  00253C  C1CF  F091         	movff	_matematica$3747+1,___flmul@b+1
  5123  002540  C1D0  F092         	movff	_matematica$3747+2,___flmul@b+2
  5124  002544  C1D1  F093         	movff	_matematica$3747+3,___flmul@b+3
  5125  002548  C12C  F094         	movff	_kkk,___flmul@a
  5126  00254C  C12D  F095         	movff	_kkk+1,___flmul@a+1
  5127  002550  C12E  F096         	movff	_kkk+2,___flmul@a+2
  5128  002554  C12F  F097         	movff	_kkk+3,___flmul@a+3
  5129  002558  EC91  F017         	call	___flmul	;wreg free
  5130  00255C  C090  F118         	movff	?___flmul,_Pminimo
  5131  002560  C091  F119         	movff	?___flmul+1,_Pminimo+1
  5132  002564  C092  F11A         	movff	?___flmul+2,_Pminimo+2
  5133  002568  C093  F11B         	movff	?___flmul+3,_Pminimo+3
  5134  00256C  0012               	return		;funcret
  5135  00256E                     __end_of_matematica:
  5136                           	opt stack 0
  5137                           tblptru	equ	0xFF8
  5138                           tblptrh	equ	0xFF7
  5139                           tblptrl	equ	0xFF6
  5140                           tablat	equ	0xFF5
  5141                           postinc0	equ	0xFEE
  5142                           wreg	equ	0xFE8
  5143                           postdec1	equ	0xFE5
  5144                           fsr1l	equ	0xFE1
  5145                           indf2	equ	0xFDF
  5146                           postinc2	equ	0xFDE
  5147                           postdec2	equ	0xFDD
  5148                           fsr2h	equ	0xFDA
  5149                           fsr2l	equ	0xFD9
  5150                           status	equ	0xFD8
  5151                           
  5152 ;; *************** function _cos *****************
  5153 ;; Defined at:
  5154 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\cos.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;  f               4   37[BANK1 ] int 
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;		None
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  4   37[BANK1 ] int 
  5161 ;; Registers used:
  5162 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5168 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5169 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5171 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5172 ;;Total ram usage:        8 bytes
  5173 ;; Hardware stack levels used:    1
  5174 ;; Hardware stack levels required when called:    7
  5175 ;; This function calls:
  5176 ;;		___fladd
  5177 ;;		___flge
  5178 ;;		_sin
  5179 ;; This function is called by:
  5180 ;;		_matematica
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           	psect	text9
  5185  0059BC                     __ptext9:
  5186                           	opt stack 0
  5187  0059BC                     _cos:
  5188                           	opt stack 21
  5189                           
  5190                           ;incstack = 0
  5191  0059BC  0EDB               	movlw	219
  5192  0059BE  0100               	movlb	0	; () banked
  5193  0059C0  6FC5               	movwf	___flge@ff1& (0+255),b
  5194  0059C2  0E0F               	movlw	15
  5195  0059C4  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5196  0059C6  0E49               	movlw	73
  5197  0059C8  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5198  0059CA  0E40               	movlw	64
  5199  0059CC  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5200  0059CE  C1B2  F0C9         	movff	cos@f,___flge@ff2
  5201  0059D2  C1B3  F0CA         	movff	cos@f+1,___flge@ff2+1
  5202  0059D6  C1B4  F0CB         	movff	cos@f+2,___flge@ff2+2
  5203  0059DA  C1B5  F0CC         	movff	cos@f+3,___flge@ff2+3
  5204  0059DE  ECD7  F029         	call	___flge	;wreg free
  5205  0059E2  0100               	movlb	0	; () banked
  5206  0059E4  B0D8               	btfsc	status,0,c
  5207  0059E6  D02E               	goto	l7309
  5208                           
  5209                           ; BSR set to: 0
  5210  0059E8  C1B2  F0A9         	movff	cos@f,___fladd@b
  5211  0059EC  C1B3  F0AA         	movff	cos@f+1,___fladd@b+1
  5212  0059F0  C1B4  F0AB         	movff	cos@f+2,___fladd@b+2
  5213  0059F4  C1B5  F0AC         	movff	cos@f+3,___fladd@b+3
  5214  0059F8  0EE4               	movlw	228
  5215  0059FA  0100               	movlb	0	; () banked
  5216  0059FC  6FAD               	movwf	___fladd@a& (0+255),b
  5217  0059FE  0ECB               	movlw	203
  5218  005A00  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5219  005A02  0E96               	movlw	150
  5220  005A04  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5221  005A06  0EC0               	movlw	192
  5222  005A08  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5223  005A0A  EC3D  F015         	call	___fladd	;wreg free
  5224  005A0E  C0A9  F1B6         	movff	?___fladd,_cos$3751
  5225  005A12  C0AA  F1B7         	movff	?___fladd+1,_cos$3751+1
  5226  005A16  C0AB  F1B8         	movff	?___fladd+2,_cos$3751+2
  5227  005A1A  C0AC  F1B9         	movff	?___fladd+3,_cos$3751+3
  5228  005A1E  C1B6  F195         	movff	_cos$3751,sin@f
  5229  005A22  C1B7  F196         	movff	_cos$3751+1,sin@f+1
  5230  005A26  C1B8  F197         	movff	_cos$3751+2,sin@f+2
  5231  005A2A  C1B9  F198         	movff	_cos$3751+3,sin@f+3
  5232  005A2E  ECAE  F021         	call	_sin	;wreg free
  5233  005A32  C195  F1B2         	movff	?_sin,?_cos
  5234  005A36  C196  F1B3         	movff	?_sin+1,?_cos+1
  5235  005A3A  C197  F1B4         	movff	?_sin+2,?_cos+2
  5236  005A3E  C198  F1B5         	movff	?_sin+3,?_cos+3
  5237  005A42  0012               	return	
  5238  005A44                     l7309:
  5239  005A44  C1B2  F0A9         	movff	cos@f,___fladd@b
  5240  005A48  C1B3  F0AA         	movff	cos@f+1,___fladd@b+1
  5241  005A4C  C1B4  F0AB         	movff	cos@f+2,___fladd@b+2
  5242  005A50  C1B5  F0AC         	movff	cos@f+3,___fladd@b+3
  5243  005A54  0EDB               	movlw	219
  5244  005A56  0100               	movlb	0	; () banked
  5245  005A58  6FAD               	movwf	___fladd@a& (0+255),b
  5246  005A5A  0E0F               	movlw	15
  5247  005A5C  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5248  005A5E  0EC9               	movlw	201
  5249  005A60  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5250  005A62  0E3F               	movlw	63
  5251  005A64  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5252  005A66  EC3D  F015         	call	___fladd	;wreg free
  5253  005A6A  C0A9  F1B6         	movff	?___fladd,_cos$3751
  5254  005A6E  C0AA  F1B7         	movff	?___fladd+1,_cos$3751+1
  5255  005A72  C0AB  F1B8         	movff	?___fladd+2,_cos$3751+2
  5256  005A76  C0AC  F1B9         	movff	?___fladd+3,_cos$3751+3
  5257  005A7A  C1B6  F195         	movff	_cos$3751,sin@f
  5258  005A7E  C1B7  F196         	movff	_cos$3751+1,sin@f+1
  5259  005A82  C1B8  F197         	movff	_cos$3751+2,sin@f+2
  5260  005A86  C1B9  F198         	movff	_cos$3751+3,sin@f+3
  5261  005A8A  ECAE  F021         	call	_sin	;wreg free
  5262  005A8E  C195  F1B2         	movff	?_sin,?_cos
  5263  005A92  C196  F1B3         	movff	?_sin+1,?_cos+1
  5264  005A96  C197  F1B4         	movff	?_sin+2,?_cos+2
  5265  005A9A  C198  F1B5         	movff	?_sin+3,?_cos+3
  5266  005A9E  0012               	return	
  5267  005AA0                     __end_of_cos:
  5268                           	opt stack 0
  5269                           tblptru	equ	0xFF8
  5270                           tblptrh	equ	0xFF7
  5271                           tblptrl	equ	0xFF6
  5272                           tablat	equ	0xFF5
  5273                           postinc0	equ	0xFEE
  5274                           wreg	equ	0xFE8
  5275                           postdec1	equ	0xFE5
  5276                           fsr1l	equ	0xFE1
  5277                           indf2	equ	0xFDF
  5278                           postinc2	equ	0xFDE
  5279                           postdec2	equ	0xFDD
  5280                           fsr2h	equ	0xFDA
  5281                           fsr2l	equ	0xFD9
  5282                           status	equ	0xFD8
  5283                           
  5284 ;; *************** function _sin *****************
  5285 ;; Defined at:
  5286 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sin.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;  f               4    8[BANK1 ] int 
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;  x2              4   20[BANK1 ] int 
  5291 ;;  y               4   12[BANK1 ] int 
  5292 ;;  sgn             1   24[BANK1 ] unsigned char 
  5293 ;; Return value:  Size  Location     Type
  5294 ;;                  4    8[BANK1 ] unsigned char 
  5295 ;; Registers used:
  5296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5297 ;; Tracked objects:
  5298 ;;		On entry : 0/0
  5299 ;;		On exit  : 0/0
  5300 ;;		Unchanged: 0/0
  5301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5302 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5303 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5305 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5306 ;;Total ram usage:       17 bytes
  5307 ;; Hardware stack levels used:    1
  5308 ;; Hardware stack levels required when called:    6
  5309 ;; This function calls:
  5310 ;;		___fladd
  5311 ;;		___fldiv
  5312 ;;		___flge
  5313 ;;		___flmul
  5314 ;;		___flneg
  5315 ;;		___flsub
  5316 ;;		_eval_poly
  5317 ;;		_floor
  5318 ;; This function is called by:
  5319 ;;		_cos
  5320 ;; This function uses a non-reentrant model
  5321 ;;
  5322                           
  5323                           	psect	text10
  5324  00435C                     __ptext10:
  5325                           	opt stack 0
  5326  00435C                     _sin:
  5327                           	opt stack 21
  5328                           
  5329                           ;incstack = 0
  5330  00435C  0E00               	movlw	0
  5331  00435E  0101               	movlb	1	; () banked
  5332  004360  6FA5               	movwf	sin@sgn& (0+255),b
  5333                           
  5334                           ; BSR set to: 1
  5335  004362  0101               	movlb	1	; () banked
  5336  004364  AF98               	btfss	(sin@f+3)& (0+255),7,b
  5337  004366  D015               	goto	l7191
  5338                           
  5339                           ; BSR set to: 1
  5340  004368  C195  F0BD         	movff	sin@f,___flneg@f1
  5341  00436C  C196  F0BE         	movff	sin@f+1,___flneg@f1+1
  5342  004370  C197  F0BF         	movff	sin@f+2,___flneg@f1+2
  5343  004374  C198  F0C0         	movff	sin@f+3,___flneg@f1+3
  5344  004378  EC43  F02F         	call	___flneg	;wreg free
  5345  00437C  C0BD  F195         	movff	?___flneg,sin@f
  5346  004380  C0BE  F196         	movff	?___flneg+1,sin@f+1
  5347  004384  C0BF  F197         	movff	?___flneg+2,sin@f+2
  5348  004388  C0C0  F198         	movff	?___flneg+3,sin@f+3
  5349  00438C  0E01               	movlw	1
  5350  00438E  0101               	movlb	1	; () banked
  5351  004390  6FA5               	movwf	sin@sgn& (0+255),b
  5352  004392                     l7191:
  5353                           
  5354                           ; BSR set to: 1
  5355  004392  C195  F090         	movff	sin@f,___flmul@b
  5356  004396  C196  F091         	movff	sin@f+1,___flmul@b+1
  5357  00439A  C197  F092         	movff	sin@f+2,___flmul@b+2
  5358  00439E  C198  F093         	movff	sin@f+3,___flmul@b+3
  5359  0043A2  0E83               	movlw	131
  5360  0043A4  0100               	movlb	0	; () banked
  5361  0043A6  6F94               	movwf	___flmul@a& (0+255),b
  5362  0043A8  0EF9               	movlw	249
  5363  0043AA  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5364  0043AC  0E22               	movlw	34
  5365  0043AE  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5366  0043B0  0E3E               	movlw	62
  5367  0043B2  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5368  0043B4  EC91  F017         	call	___flmul	;wreg free
  5369  0043B8  C090  F195         	movff	?___flmul,sin@f
  5370  0043BC  C091  F196         	movff	?___flmul+1,sin@f+1
  5371  0043C0  C092  F197         	movff	?___flmul+2,sin@f+2
  5372  0043C4  C093  F198         	movff	?___flmul+3,sin@f+3
  5373  0043C8  C195  F18D         	movff	sin@f,___flsub@b
  5374  0043CC  C196  F18E         	movff	sin@f+1,___flsub@b+1
  5375  0043D0  C197  F18F         	movff	sin@f+2,___flsub@b+2
  5376  0043D4  C198  F190         	movff	sin@f+3,___flsub@b+3
  5377  0043D8  C195  F0D9         	movff	sin@f,floor@x
  5378  0043DC  C196  F0DA         	movff	sin@f+1,floor@x+1
  5379  0043E0  C197  F0DB         	movff	sin@f+2,floor@x+2
  5380  0043E4  C198  F0DC         	movff	sin@f+3,floor@x+3
  5381  0043E8  EC3A  F02B         	call	_floor	;wreg free
  5382  0043EC  C0D9  F191         	movff	?_floor,___flsub@a
  5383  0043F0  C0DA  F192         	movff	?_floor+1,___flsub@a+1
  5384  0043F4  C0DB  F193         	movff	?_floor+2,___flsub@a+2
  5385  0043F8  C0DC  F194         	movff	?_floor+3,___flsub@a+3
  5386  0043FC  EC00  F02F         	call	___flsub	;wreg free
  5387  004400  C18D  F195         	movff	?___flsub,sin@f
  5388  004404  C18E  F196         	movff	?___flsub+1,sin@f+1
  5389  004408  C18F  F197         	movff	?___flsub+2,sin@f+2
  5390  00440C  C190  F198         	movff	?___flsub+3,sin@f+3
  5391  004410  C195  F090         	movff	sin@f,___flmul@b
  5392  004414  C196  F091         	movff	sin@f+1,___flmul@b+1
  5393  004418  C197  F092         	movff	sin@f+2,___flmul@b+2
  5394  00441C  C198  F093         	movff	sin@f+3,___flmul@b+3
  5395  004420  0E00               	movlw	0
  5396  004422  0100               	movlb	0	; () banked
  5397  004424  6F94               	movwf	___flmul@a& (0+255),b
  5398  004426  0E00               	movlw	0
  5399  004428  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5400  00442A  0E80               	movlw	128
  5401  00442C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5402  00442E  0E40               	movlw	64
  5403  004430  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5404  004432  EC91  F017         	call	___flmul	;wreg free
  5405  004436  C090  F195         	movff	?___flmul,sin@f
  5406  00443A  C091  F196         	movff	?___flmul+1,sin@f+1
  5407  00443E  C092  F197         	movff	?___flmul+2,sin@f+2
  5408  004442  C093  F198         	movff	?___flmul+3,sin@f+3
  5409  004446  0E00               	movlw	0
  5410  004448  0100               	movlb	0	; () banked
  5411  00444A  6FC5               	movwf	___flge@ff1& (0+255),b
  5412  00444C  0E00               	movlw	0
  5413  00444E  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5414  004450  0E00               	movlw	0
  5415  004452  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5416  004454  0E40               	movlw	64
  5417  004456  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5418  004458  C195  F0C9         	movff	sin@f,___flge@ff2
  5419  00445C  C196  F0CA         	movff	sin@f+1,___flge@ff2+1
  5420  004460  C197  F0CB         	movff	sin@f+2,___flge@ff2+2
  5421  004464  C198  F0CC         	movff	sin@f+3,___flge@ff2+3
  5422  004468  ECD7  F029         	call	___flge	;wreg free
  5423  00446C  0100               	movlb	0	; () banked
  5424  00446E  B0D8               	btfsc	status,0,c
  5425  004470  D025               	goto	l7203
  5426                           
  5427                           ; BSR set to: 0
  5428  004472  C195  F18D         	movff	sin@f,___flsub@b
  5429  004476  C196  F18E         	movff	sin@f+1,___flsub@b+1
  5430  00447A  C197  F18F         	movff	sin@f+2,___flsub@b+2
  5431  00447E  C198  F190         	movff	sin@f+3,___flsub@b+3
  5432  004482  0E00               	movlw	0
  5433  004484  0101               	movlb	1	; () banked
  5434  004486  6F91               	movwf	___flsub@a& (0+255),b
  5435  004488  0E00               	movlw	0
  5436  00448A  6F92               	movwf	(___flsub@a+1)& (0+255),b
  5437  00448C  0E00               	movlw	0
  5438  00448E  6F93               	movwf	(___flsub@a+2)& (0+255),b
  5439  004490  0E40               	movlw	64
  5440  004492  6F94               	movwf	(___flsub@a+3)& (0+255),b
  5441  004494  EC00  F02F         	call	___flsub	;wreg free
  5442  004498  C18D  F195         	movff	?___flsub,sin@f
  5443  00449C  C18E  F196         	movff	?___flsub+1,sin@f+1
  5444  0044A0  C18F  F197         	movff	?___flsub+2,sin@f+2
  5445  0044A4  C190  F198         	movff	?___flsub+3,sin@f+3
  5446  0044A8  0101               	movlb	1	; () banked
  5447  0044AA  51A5               	movf	sin@sgn& (0+255),w,b
  5448  0044AC  0101               	movlb	1	; () banked
  5449  0044AE  A4D8               	btfss	status,2,c
  5450  0044B0  D002               	goto	u9260
  5451  0044B2  0E01               	movlw	1
  5452  0044B4  D001               	goto	u9270
  5453  0044B6                     u9260:
  5454  0044B6  0E00               	movlw	0
  5455  0044B8                     u9270:
  5456  0044B8  0101               	movlb	1	; () banked
  5457  0044BA  6FA5               	movwf	sin@sgn& (0+255),b
  5458  0044BC                     l7203:
  5459  0044BC  0E00               	movlw	0
  5460  0044BE  0100               	movlb	0	; () banked
  5461  0044C0  6FC5               	movwf	___flge@ff1& (0+255),b
  5462  0044C2  0E00               	movlw	0
  5463  0044C4  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5464  0044C6  0E80               	movlw	128
  5465  0044C8  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5466  0044CA  0E3F               	movlw	63
  5467  0044CC  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5468  0044CE  C195  F0C9         	movff	sin@f,___flge@ff2
  5469  0044D2  C196  F0CA         	movff	sin@f+1,___flge@ff2+1
  5470  0044D6  C197  F0CB         	movff	sin@f+2,___flge@ff2+2
  5471  0044DA  C198  F0CC         	movff	sin@f+3,___flge@ff2+3
  5472  0044DE  ECD7  F029         	call	___flge	;wreg free
  5473  0044E2  0100               	movlb	0	; () banked
  5474  0044E4  B0D8               	btfsc	status,0,c
  5475  0044E6  D025               	goto	l7207
  5476                           
  5477                           ; BSR set to: 0
  5478  0044E8  C195  F0BD         	movff	sin@f,___flneg@f1
  5479  0044EC  C196  F0BE         	movff	sin@f+1,___flneg@f1+1
  5480  0044F0  C197  F0BF         	movff	sin@f+2,___flneg@f1+2
  5481  0044F4  C198  F0C0         	movff	sin@f+3,___flneg@f1+3
  5482  0044F8  EC43  F02F         	call	___flneg	;wreg free
  5483  0044FC  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5484  004500  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5485  004504  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5486  004508  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5487  00450C  0E00               	movlw	0
  5488  00450E  0100               	movlb	0	; () banked
  5489  004510  6FAD               	movwf	___fladd@a& (0+255),b
  5490  004512  0E00               	movlw	0
  5491  004514  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5492  004516  0E00               	movlw	0
  5493  004518  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5494  00451A  0E40               	movlw	64
  5495  00451C  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5496  00451E  EC3D  F015         	call	___fladd	;wreg free
  5497  004522  C0A9  F195         	movff	?___fladd,sin@f
  5498  004526  C0AA  F196         	movff	?___fladd+1,sin@f+1
  5499  00452A  C0AB  F197         	movff	?___fladd+2,sin@f+2
  5500  00452E  C0AC  F198         	movff	?___fladd+3,sin@f+3
  5501  004532                     l7207:
  5502  004532  C195  F090         	movff	sin@f,___flmul@b
  5503  004536  C196  F091         	movff	sin@f+1,___flmul@b+1
  5504  00453A  C197  F092         	movff	sin@f+2,___flmul@b+2
  5505  00453E  C198  F093         	movff	sin@f+3,___flmul@b+3
  5506  004542  C195  F094         	movff	sin@f,___flmul@a
  5507  004546  C196  F095         	movff	sin@f+1,___flmul@a+1
  5508  00454A  C197  F096         	movff	sin@f+2,___flmul@a+2
  5509  00454E  C198  F097         	movff	sin@f+3,___flmul@a+3
  5510  004552  EC91  F017         	call	___flmul	;wreg free
  5511  004556  C090  F1A1         	movff	?___flmul,sin@x2
  5512  00455A  C091  F1A2         	movff	?___flmul+1,sin@x2+1
  5513  00455E  C092  F1A3         	movff	?___flmul+2,sin@x2+2
  5514  004562  C093  F1A4         	movff	?___flmul+3,sin@x2+3
  5515  004566  C1A1  F0BD         	movff	sin@x2,eval_poly@x
  5516  00456A  C1A2  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5517  00456E  C1A3  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5518  004572  C1A4  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5519  004576  0E41               	movlw	low sin@coeff_b
  5520  004578  0100               	movlb	0	; () banked
  5521  00457A  6FC1               	movwf	eval_poly@d& (0+255),b
  5522  00457C  0E0D               	movlw	high sin@coeff_b
  5523  00457E  0100               	movlb	0	; () banked
  5524  004580  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5525  004582  0E00               	movlw	0
  5526  004584  0100               	movlb	0	; () banked
  5527  004586  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5528  004588  0E03               	movlw	3
  5529  00458A  6FC3               	movwf	eval_poly@n& (0+255),b
  5530  00458C  ECCC  F02B         	call	_eval_poly	;wreg free
  5531  004590  C0BD  F199         	movff	?_eval_poly,sin@y
  5532  004594  C0BE  F19A         	movff	?_eval_poly+1,sin@y+1
  5533  004598  C0BF  F19B         	movff	?_eval_poly+2,sin@y+2
  5534  00459C  C0C0  F19C         	movff	?_eval_poly+3,sin@y+3
  5535  0045A0  C199  F07B         	movff	sin@y,___fldiv@a
  5536  0045A4  C19A  F07C         	movff	sin@y+1,___fldiv@a+1
  5537  0045A8  C19B  F07D         	movff	sin@y+2,___fldiv@a+2
  5538  0045AC  C19C  F07E         	movff	sin@y+3,___fldiv@a+3
  5539  0045B0  0E00               	movlw	0
  5540  0045B2  0100               	movlb	0	; () banked
  5541  0045B4  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5542  0045B6  0E04               	movlw	4
  5543  0045B8  6FC3               	movwf	eval_poly@n& (0+255),b
  5544  0045BA  0E2D               	movlw	low sin@coeff_a
  5545  0045BC  0100               	movlb	0	; () banked
  5546  0045BE  6FC1               	movwf	eval_poly@d& (0+255),b
  5547  0045C0  0E0D               	movlw	high sin@coeff_a
  5548  0045C2  0100               	movlb	0	; () banked
  5549  0045C4  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5550  0045C6  C1A1  F0BD         	movff	sin@x2,eval_poly@x
  5551  0045CA  C1A2  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5552  0045CE  C1A3  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5553  0045D2  C1A4  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5554  0045D6  ECCC  F02B         	call	_eval_poly	;wreg free
  5555  0045DA  C0BD  F077         	movff	?_eval_poly,___fldiv@b
  5556  0045DE  C0BE  F078         	movff	?_eval_poly+1,___fldiv@b+1
  5557  0045E2  C0BF  F079         	movff	?_eval_poly+2,___fldiv@b+2
  5558  0045E6  C0C0  F07A         	movff	?_eval_poly+3,___fldiv@b+3
  5559  0045EA  ECFF  F01D         	call	___fldiv	;wreg free
  5560  0045EE  C077  F19D         	movff	?___fldiv,_sin$3752
  5561  0045F2  C078  F19E         	movff	?___fldiv+1,_sin$3752+1
  5562  0045F6  C079  F19F         	movff	?___fldiv+2,_sin$3752+2
  5563  0045FA  C07A  F1A0         	movff	?___fldiv+3,_sin$3752+3
  5564  0045FE  C195  F090         	movff	sin@f,___flmul@b
  5565  004602  C196  F091         	movff	sin@f+1,___flmul@b+1
  5566  004606  C197  F092         	movff	sin@f+2,___flmul@b+2
  5567  00460A  C198  F093         	movff	sin@f+3,___flmul@b+3
  5568  00460E  C19D  F094         	movff	_sin$3752,___flmul@a
  5569  004612  C19E  F095         	movff	_sin$3752+1,___flmul@a+1
  5570  004616  C19F  F096         	movff	_sin$3752+2,___flmul@a+2
  5571  00461A  C1A0  F097         	movff	_sin$3752+3,___flmul@a+3
  5572  00461E  EC91  F017         	call	___flmul	;wreg free
  5573  004622  C090  F195         	movff	?___flmul,sin@f
  5574  004626  C091  F196         	movff	?___flmul+1,sin@f+1
  5575  00462A  C092  F197         	movff	?___flmul+2,sin@f+2
  5576  00462E  C093  F198         	movff	?___flmul+3,sin@f+3
  5577  004632  0101               	movlb	1	; () banked
  5578  004634  51A5               	movf	sin@sgn& (0+255),w,b
  5579  004636  0101               	movlb	1	; () banked
  5580  004638  B4D8               	btfsc	status,2,c
  5581  00463A  D013               	goto	l1314
  5582                           
  5583                           ; BSR set to: 1
  5584  00463C  C195  F0BD         	movff	sin@f,___flneg@f1
  5585  004640  C196  F0BE         	movff	sin@f+1,___flneg@f1+1
  5586  004644  C197  F0BF         	movff	sin@f+2,___flneg@f1+2
  5587  004648  C198  F0C0         	movff	sin@f+3,___flneg@f1+3
  5588  00464C  EC43  F02F         	call	___flneg	;wreg free
  5589  004650  C0BD  F195         	movff	?___flneg,?_sin
  5590  004654  C0BE  F196         	movff	?___flneg+1,?_sin+1
  5591  004658  C0BF  F197         	movff	?___flneg+2,?_sin+2
  5592  00465C  C0C0  F198         	movff	?___flneg+3,?_sin+3
  5593  004660  0012               	return	
  5594  004662                     l1314:
  5595                           
  5596                           ; BSR set to: 1
  5597  004662  C195  F195         	movff	sin@f,?_sin
  5598  004666  C196  F196         	movff	sin@f+1,?_sin+1
  5599  00466A  C197  F197         	movff	sin@f+2,?_sin+2
  5600  00466E  C198  F198         	movff	sin@f+3,?_sin+3
  5601  004672  0012               	return		;funcret
  5602  004674                     __end_of_sin:
  5603                           	opt stack 0
  5604                           tblptru	equ	0xFF8
  5605                           tblptrh	equ	0xFF7
  5606                           tblptrl	equ	0xFF6
  5607                           tablat	equ	0xFF5
  5608                           postinc0	equ	0xFEE
  5609                           wreg	equ	0xFE8
  5610                           postdec1	equ	0xFE5
  5611                           fsr1l	equ	0xFE1
  5612                           indf2	equ	0xFDF
  5613                           postinc2	equ	0xFDE
  5614                           postdec2	equ	0xFDD
  5615                           fsr2h	equ	0xFDA
  5616                           fsr2l	equ	0xFD9
  5617                           status	equ	0xFD8
  5618                           
  5619 ;; *************** function _floor *****************
  5620 ;; Defined at:
  5621 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  5622 ;; Parameters:    Size  Location     Type
  5623 ;;  x               4  121[BANK0 ] unsigned char 
  5624 ;; Auto vars:     Size  Location     Type
  5625 ;;  i               4  125[BANK0 ] unsigned char 
  5626 ;;  expon           2  129[BANK0 ] int 
  5627 ;; Return value:  Size  Location     Type
  5628 ;;                  4  121[BANK0 ] int 
  5629 ;; Registers used:
  5630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5631 ;; Tracked objects:
  5632 ;;		On entry : 0/0
  5633 ;;		On exit  : 0/0
  5634 ;;		Unchanged: 0/0
  5635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5636 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5637 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5639 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5640 ;;Total ram usage:       10 bytes
  5641 ;; Hardware stack levels used:    1
  5642 ;; Hardware stack levels required when called:    5
  5643 ;; This function calls:
  5644 ;;		___fladd
  5645 ;;		___flge
  5646 ;;		___fltol
  5647 ;;		___xxtofl
  5648 ;;		_frexp
  5649 ;; This function is called by:
  5650 ;;		_sin
  5651 ;; This function uses a non-reentrant model
  5652 ;;
  5653                           
  5654                           	psect	text11
  5655  005674                     __ptext11:
  5656                           	opt stack 0
  5657  005674                     _floor:
  5658                           	opt stack 21
  5659                           
  5660                           ;incstack = 0
  5661  005674  C0D9  F077         	movff	floor@x,frexp@value
  5662  005678  C0DA  F078         	movff	floor@x+1,frexp@value+1
  5663  00567C  C0DB  F079         	movff	floor@x+2,frexp@value+2
  5664  005680  C0DC  F07A         	movff	floor@x+3,frexp@value+3
  5665  005684  0EE1               	movlw	low floor@expon
  5666  005686  0100               	movlb	0	; () banked
  5667  005688  6F7B               	movwf	frexp@eptr& (0+255),b
  5668  00568A  0E00               	movlw	high floor@expon
  5669  00568C  0100               	movlb	0	; () banked
  5670  00568E  6F7C               	movwf	(frexp@eptr+1)& (0+255),b
  5671  005690  ECC1  F02D         	call	_frexp	;wreg free
  5672  005694  0100               	movlb	0	; () banked
  5673  005696  AFE2               	btfss	(floor@expon+1)& (0+255),7,b
  5674  005698  D017               	goto	l6797
  5675                           
  5676                           ; BSR set to: 0
  5677  00569A  0100               	movlb	0	; () banked
  5678  00569C  AFDC               	btfss	(floor@x+3)& (0+255),7,b
  5679  00569E  D00A               	goto	l6793
  5680                           
  5681                           ; BSR set to: 0
  5682  0056A0  0E00               	movlw	0
  5683  0056A2  0100               	movlb	0	; () banked
  5684  0056A4  6FD9               	movwf	?_floor& (0+255),b
  5685  0056A6  0E00               	movlw	0
  5686  0056A8  6FDA               	movwf	(?_floor+1)& (0+255),b
  5687  0056AA  0E80               	movlw	128
  5688  0056AC  6FDB               	movwf	(?_floor+2)& (0+255),b
  5689  0056AE  0EBF               	movlw	191
  5690  0056B0  6FDC               	movwf	(?_floor+3)& (0+255),b
  5691                           
  5692                           ; BSR set to: 0
  5693  0056B2  0012               	return	
  5694  0056B4                     l6793:
  5695                           
  5696                           ; BSR set to: 0
  5697  0056B4  0E00               	movlw	0
  5698  0056B6  0100               	movlb	0	; () banked
  5699  0056B8  6FD9               	movwf	?_floor& (0+255),b
  5700  0056BA  0E00               	movlw	0
  5701  0056BC  6FDA               	movwf	(?_floor+1)& (0+255),b
  5702  0056BE  0E00               	movlw	0
  5703  0056C0  6FDB               	movwf	(?_floor+2)& (0+255),b
  5704  0056C2  0E00               	movlw	0
  5705  0056C4  6FDC               	movwf	(?_floor+3)& (0+255),b
  5706                           
  5707                           ; BSR set to: 0
  5708  0056C6  0012               	return	
  5709  0056C8                     l6797:
  5710                           
  5711                           ; BSR set to: 0
  5712  0056C8  0100               	movlb	0	; () banked
  5713  0056CA  51E2               	movf	(floor@expon+1)& (0+255),w,b
  5714  0056CC  E105               	bnz	u8630
  5715  0056CE  0E1D               	movlw	29
  5716  0056D0  0100               	movlb	0	; () banked
  5717  0056D2  5DE1               	subwf	floor@expon& (0+255),w,b
  5718  0056D4  A0D8               	btfss	status,0,c
  5719  0056D6  D009               	goto	l6801
  5720  0056D8                     u8630:
  5721                           
  5722                           ; BSR set to: 0
  5723  0056D8  C0D9  F0D9         	movff	floor@x,?_floor
  5724  0056DC  C0DA  F0DA         	movff	floor@x+1,?_floor+1
  5725  0056E0  C0DB  F0DB         	movff	floor@x+2,?_floor+2
  5726  0056E4  C0DC  F0DC         	movff	floor@x+3,?_floor+3
  5727  0056E8  0012               	return	
  5728  0056EA                     l6801:
  5729                           
  5730                           ; BSR set to: 0
  5731  0056EA  C0D9  F0C1         	movff	floor@x,___fltol@f1
  5732  0056EE  C0DA  F0C2         	movff	floor@x+1,___fltol@f1+1
  5733  0056F2  C0DB  F0C3         	movff	floor@x+2,___fltol@f1+2
  5734  0056F6  C0DC  F0C4         	movff	floor@x+3,___fltol@f1+3
  5735  0056FA  EC58  F02C         	call	___fltol	;wreg free
  5736  0056FE  C0C1  F0CB         	movff	?___fltol,___xxtofl@val
  5737  005702  C0C2  F0CC         	movff	?___fltol+1,___xxtofl@val+1
  5738  005706  C0C3  F0CD         	movff	?___fltol+2,___xxtofl@val+2
  5739  00570A  C0C4  F0CE         	movff	?___fltol+3,___xxtofl@val+3
  5740  00570E  0E01               	movlw	1
  5741  005710  EC32  F027         	call	___xxtofl
  5742  005714  C0CB  F0DD         	movff	?___xxtofl,floor@i
  5743  005718  C0CC  F0DE         	movff	?___xxtofl+1,floor@i+1
  5744  00571C  C0CD  F0DF         	movff	?___xxtofl+2,floor@i+2
  5745  005720  C0CE  F0E0         	movff	?___xxtofl+3,floor@i+3
  5746  005724  C0D9  F0C5         	movff	floor@x,___flge@ff1
  5747  005728  C0DA  F0C6         	movff	floor@x+1,___flge@ff1+1
  5748  00572C  C0DB  F0C7         	movff	floor@x+2,___flge@ff1+2
  5749  005730  C0DC  F0C8         	movff	floor@x+3,___flge@ff1+3
  5750  005734  C0DD  F0C9         	movff	floor@i,___flge@ff2
  5751  005738  C0DE  F0CA         	movff	floor@i+1,___flge@ff2+1
  5752  00573C  C0DF  F0CB         	movff	floor@i+2,___flge@ff2+2
  5753  005740  C0E0  F0CC         	movff	floor@i+3,___flge@ff2+3
  5754  005744  ECD7  F029         	call	___flge	;wreg free
  5755  005748  0100               	movlb	0	; () banked
  5756  00574A  B0D8               	btfsc	status,0,c
  5757  00574C  D01C               	goto	l1483
  5758                           
  5759                           ; BSR set to: 0
  5760  00574E  C0DD  F0A9         	movff	floor@i,___fladd@b
  5761  005752  C0DE  F0AA         	movff	floor@i+1,___fladd@b+1
  5762  005756  C0DF  F0AB         	movff	floor@i+2,___fladd@b+2
  5763  00575A  C0E0  F0AC         	movff	floor@i+3,___fladd@b+3
  5764  00575E  0E00               	movlw	0
  5765  005760  0100               	movlb	0	; () banked
  5766  005762  6FAD               	movwf	___fladd@a& (0+255),b
  5767  005764  0E00               	movlw	0
  5768  005766  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5769  005768  0E80               	movlw	128
  5770  00576A  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5771  00576C  0EBF               	movlw	191
  5772  00576E  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5773  005770  EC3D  F015         	call	___fladd	;wreg free
  5774  005774  C0A9  F0D9         	movff	?___fladd,?_floor
  5775  005778  C0AA  F0DA         	movff	?___fladd+1,?_floor+1
  5776  00577C  C0AB  F0DB         	movff	?___fladd+2,?_floor+2
  5777  005780  C0AC  F0DC         	movff	?___fladd+3,?_floor+3
  5778  005784  0012               	return	
  5779  005786                     l1483:
  5780                           
  5781                           ; BSR set to: 0
  5782  005786  C0DD  F0D9         	movff	floor@i,?_floor
  5783  00578A  C0DE  F0DA         	movff	floor@i+1,?_floor+1
  5784  00578E  C0DF  F0DB         	movff	floor@i+2,?_floor+2
  5785  005792  C0E0  F0DC         	movff	floor@i+3,?_floor+3
  5786  005796  0012               	return		;funcret
  5787  005798                     __end_of_floor:
  5788                           	opt stack 0
  5789                           tblptru	equ	0xFF8
  5790                           tblptrh	equ	0xFF7
  5791                           tblptrl	equ	0xFF6
  5792                           tablat	equ	0xFF5
  5793                           postinc0	equ	0xFEE
  5794                           wreg	equ	0xFE8
  5795                           postdec1	equ	0xFE5
  5796                           fsr1l	equ	0xFE1
  5797                           indf2	equ	0xFDF
  5798                           postinc2	equ	0xFDE
  5799                           postdec2	equ	0xFDD
  5800                           fsr2h	equ	0xFDA
  5801                           fsr2l	equ	0xFD9
  5802                           status	equ	0xFD8
  5803                           
  5804 ;; *************** function _frexp *****************
  5805 ;; Defined at:
  5806 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  5807 ;; Parameters:    Size  Location     Type
  5808 ;;  value           4   23[BANK0 ] int 
  5809 ;;  eptr            2   27[BANK0 ] PTR int 
  5810 ;;		 -> floor@expon(2), 
  5811 ;; Auto vars:     Size  Location     Type
  5812 ;;		None
  5813 ;; Return value:  Size  Location     Type
  5814 ;;                  4   23[BANK0 ] PTR int 
  5815 ;; Registers used:
  5816 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5817 ;; Tracked objects:
  5818 ;;		On entry : 0/0
  5819 ;;		On exit  : 0/0
  5820 ;;		Unchanged: 0/0
  5821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5822 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5824 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5825 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5826 ;;Total ram usage:        8 bytes
  5827 ;; Hardware stack levels used:    1
  5828 ;; Hardware stack levels required when called:    4
  5829 ;; This function calls:
  5830 ;;		Nothing
  5831 ;; This function is called by:
  5832 ;;		_floor
  5833 ;; This function uses a non-reentrant model
  5834 ;;
  5835                           
  5836                           	psect	text12
  5837  005B82                     __ptext12:
  5838                           	opt stack 0
  5839  005B82                     _frexp:
  5840                           	opt stack 21
  5841                           
  5842                           ;incstack = 0
  5843  005B82  0100               	movlb	0	; () banked
  5844  005B84  5177               	movf	frexp@value& (0+255),w,b
  5845  005B86  0100               	movlb	0	; () banked
  5846  005B88  1178               	iorwf	(frexp@value+1)& (0+255),w,b
  5847  005B8A  0100               	movlb	0	; () banked
  5848  005B8C  1179               	iorwf	(frexp@value+2)& (0+255),w,b
  5849  005B8E  0100               	movlb	0	; () banked
  5850  005B90  117A               	iorwf	(frexp@value+3)& (0+255),w,b
  5851  005B92  A4D8               	btfss	status,2,c
  5852  005B94  D009               	goto	l6619
  5853                           
  5854                           ; BSR set to: 0
  5855  005B96  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5856  005B9A  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5857  005B9E  0E00               	movlw	0
  5858  005BA0  6EDE               	movwf	postinc2,c
  5859  005BA2  0E00               	movlw	0
  5860  005BA4  6EDD               	movwf	postdec2,c
  5861                           
  5862                           ; BSR set to: 0
  5863                           ;	Return value of _frexp is never used
  5864  005BA6  0012               	return	
  5865  005BA8                     l6619:
  5866                           
  5867                           ; BSR set to: 0
  5868  005BA8  0100               	movlb	0	; () banked
  5869  005BAA  517A               	movf	(frexp@value+3)& (0+255),w,b
  5870  005BAC  0B7F               	andlw	127
  5871  005BAE  0100               	movlb	0	; () banked
  5872  005BB0  6F7D               	movwf	??_frexp& (0+255),b
  5873  005BB2  6B7E               	clrf	(??_frexp+1)& (0+255),b
  5874  005BB4  90D8               	bcf	status,0,c
  5875  005BB6  0100               	movlb	0	; () banked
  5876  005BB8  377D               	rlcf	??_frexp& (0+255),f,b
  5877  005BBA  377E               	rlcf	(??_frexp+1)& (0+255),f,b
  5878  005BBC  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5879  005BC0  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5880  005BC4  C07D  FFDE         	movff	??_frexp,postinc2
  5881  005BC8  C07E  FFDD         	movff	??_frexp+1,postdec2
  5882  005BCC  0100               	movlb	0	; () banked
  5883  005BCE  AF79               	btfss	(frexp@value+2)& (0+255),7,b
  5884  005BD0  D004               	goto	u8350
  5885  005BD2  0100               	movlb	0	; () banked
  5886  005BD4  6B7D               	clrf	??_frexp& (0+255),b
  5887  005BD6  2B7D               	incf	??_frexp& (0+255),f,b
  5888  005BD8  D002               	goto	u8358
  5889  005BDA                     u8350:
  5890  005BDA  0100               	movlb	0	; () banked
  5891  005BDC  6B7D               	clrf	??_frexp& (0+255),b
  5892  005BDE                     u8358:
  5893  005BDE  0100               	movlb	0	; () banked
  5894  005BE0  517D               	movf	??_frexp& (0+255),w,b
  5895  005BE2  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5896  005BE6  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5897  005BEA  12DE               	iorwf	postinc2,f,c
  5898  005BEC  0E00               	movlw	0
  5899  005BEE  12DD               	iorwf	postdec2,f,c
  5900                           
  5901                           ; BSR set to: 0
  5902  005BF0  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5903  005BF4  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5904  005BF8  0E82               	movlw	130
  5905  005BFA  26DE               	addwf	postinc2,f,c
  5906  005BFC  0EFF               	movlw	255
  5907  005BFE  22DD               	addwfc	postdec2,f,c
  5908                           
  5909                           ; BSR set to: 0
  5910  005C00  0100               	movlb	0	; () banked
  5911  005C02  817A               	bsf	(frexp@value+3)& (0+255),0,b
  5912  005C04  837A               	bsf	(frexp@value+3)& (0+255),1,b
  5913  005C06  857A               	bsf	(frexp@value+3)& (0+255),2,b
  5914  005C08  877A               	bsf	(frexp@value+3)& (0+255),3,b
  5915  005C0A  897A               	bsf	(frexp@value+3)& (0+255),4,b
  5916  005C0C  8B7A               	bsf	(frexp@value+3)& (0+255),5,b
  5917  005C0E  9D7A               	bcf	(frexp@value+3)& (0+255),6,b
  5918                           
  5919                           ; BSR set to: 0
  5920  005C10  0100               	movlb	0	; () banked
  5921  005C12  9F79               	bcf	(frexp@value+2)& (0+255),7,b
  5922  005C14  0012               	return	
  5923  005C16                     __end_of_frexp:
  5924                           	opt stack 0
  5925                           tblptru	equ	0xFF8
  5926                           tblptrh	equ	0xFF7
  5927                           tblptrl	equ	0xFF6
  5928                           tablat	equ	0xFF5
  5929                           postinc0	equ	0xFEE
  5930                           wreg	equ	0xFE8
  5931                           postdec1	equ	0xFE5
  5932                           fsr1l	equ	0xFE1
  5933                           indf2	equ	0xFDF
  5934                           postinc2	equ	0xFDE
  5935                           postdec2	equ	0xFDD
  5936                           fsr2h	equ	0xFDA
  5937                           fsr2l	equ	0xFD9
  5938                           status	equ	0xFD8
  5939                           
  5940 ;; *************** function ___xxtofl *****************
  5941 ;; Defined at:
  5942 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  5943 ;; Parameters:    Size  Location     Type
  5944 ;;  sign            1    wreg     unsigned char 
  5945 ;;  val             4  107[BANK0 ] long 
  5946 ;; Auto vars:     Size  Location     Type
  5947 ;;  sign            1  115[BANK0 ] unsigned char 
  5948 ;;  arg             4  117[BANK0 ] unsigned long 
  5949 ;;  exp             1  116[BANK0 ] unsigned char 
  5950 ;; Return value:  Size  Location     Type
  5951 ;;                  4  107[BANK0 ] unsigned char 
  5952 ;; Registers used:
  5953 ;;		wreg, status,2, status,0
  5954 ;; Tracked objects:
  5955 ;;		On entry : 0/0
  5956 ;;		On exit  : 0/0
  5957 ;;		Unchanged: 0/0
  5958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5959 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5960 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5961 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5962 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5963 ;;Total ram usage:       14 bytes
  5964 ;; Hardware stack levels used:    1
  5965 ;; Hardware stack levels required when called:    4
  5966 ;; This function calls:
  5967 ;;		Nothing
  5968 ;; This function is called by:
  5969 ;;		_park_search
  5970 ;;		_park_routine
  5971 ;;		_parallelo
  5972 ;;		_floor
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           	psect	text13
  5977  004E64                     __ptext13:
  5978                           	opt stack 0
  5979  004E64                     ___xxtofl:
  5980                           	opt stack 24
  5981                           
  5982                           ; BSR set to: 0
  5983                           ;incstack = 0
  5984                           ;___xxtofl@sign stored from wreg
  5985  004E64  0100               	movlb	0	; () banked
  5986  004E66  6FD3               	movwf	___xxtofl@sign& (0+255),b
  5987  004E68  0100               	movlb	0	; () banked
  5988  004E6A  51D3               	movf	___xxtofl@sign& (0+255),w,b
  5989  004E6C  0100               	movlb	0	; () banked
  5990  004E6E  B4D8               	btfsc	status,2,c
  5991  004E70  D01E               	goto	l1458
  5992                           
  5993                           ; BSR set to: 0
  5994  004E72  0100               	movlb	0	; () banked
  5995  004E74  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  5996  004E76  D01B               	goto	l1458
  5997                           
  5998                           ; BSR set to: 0
  5999  004E78  C0CB  F0CF         	movff	___xxtofl@val,??___xxtofl
  6000  004E7C  C0CC  F0D0         	movff	___xxtofl@val+1,??___xxtofl+1
  6001  004E80  C0CD  F0D1         	movff	___xxtofl@val+2,??___xxtofl+2
  6002  004E84  C0CE  F0D2         	movff	___xxtofl@val+3,??___xxtofl+3
  6003  004E88  0100               	movlb	0	; () banked
  6004  004E8A  1FCF               	comf	??___xxtofl& (0+255),f,b
  6005  004E8C  1FD0               	comf	(??___xxtofl+1)& (0+255),f,b
  6006  004E8E  1FD1               	comf	(??___xxtofl+2)& (0+255),f,b
  6007  004E90  1FD2               	comf	(??___xxtofl+3)& (0+255),f,b
  6008  004E92  2BCF               	incf	??___xxtofl& (0+255),f,b
  6009  004E94  0E00               	movlw	0
  6010  004E96  23D0               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6011  004E98  23D1               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6012  004E9A  23D2               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6013  004E9C  C0CF  F0D5         	movff	??___xxtofl,___xxtofl@arg
  6014  004EA0  C0D0  F0D6         	movff	??___xxtofl+1,___xxtofl@arg+1
  6015  004EA4  C0D1  F0D7         	movff	??___xxtofl+2,___xxtofl@arg+2
  6016  004EA8  C0D2  F0D8         	movff	??___xxtofl+3,___xxtofl@arg+3
  6017  004EAC  D008               	goto	l6577
  6018  004EAE                     l1458:
  6019                           
  6020                           ; BSR set to: 0
  6021  004EAE  C0CB  F0D5         	movff	___xxtofl@val,___xxtofl@arg
  6022  004EB2  C0CC  F0D6         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6023  004EB6  C0CD  F0D7         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6024  004EBA  C0CE  F0D8         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6025  004EBE                     l6577:
  6026                           
  6027                           ; BSR set to: 0
  6028  004EBE  0100               	movlb	0	; () banked
  6029  004EC0  51CB               	movf	___xxtofl@val& (0+255),w,b
  6030  004EC2  0100               	movlb	0	; () banked
  6031  004EC4  11CC               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6032  004EC6  0100               	movlb	0	; () banked
  6033  004EC8  11CD               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6034  004ECA  0100               	movlb	0	; () banked
  6035  004ECC  11CE               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6036  004ECE  A4D8               	btfss	status,2,c
  6037  004ED0  D00A               	goto	l6583
  6038                           
  6039                           ; BSR set to: 0
  6040  004ED2  0E00               	movlw	0
  6041  004ED4  0100               	movlb	0	; () banked
  6042  004ED6  6FCB               	movwf	?___xxtofl& (0+255),b
  6043  004ED8  0E00               	movlw	0
  6044  004EDA  6FCC               	movwf	(?___xxtofl+1)& (0+255),b
  6045  004EDC  0E00               	movlw	0
  6046  004EDE  6FCD               	movwf	(?___xxtofl+2)& (0+255),b
  6047  004EE0  0E00               	movlw	0
  6048  004EE2  6FCE               	movwf	(?___xxtofl+3)& (0+255),b
  6049                           
  6050                           ; BSR set to: 0
  6051  004EE4  0012               	return	
  6052  004EE6                     l6583:
  6053                           
  6054                           ; BSR set to: 0
  6055  004EE6  0E96               	movlw	150
  6056  004EE8  0100               	movlb	0	; () banked
  6057  004EEA  6FD4               	movwf	___xxtofl@exp& (0+255),b
  6058  004EEC  D008               	goto	l6587
  6059  004EEE                     l6585:
  6060                           
  6061                           ; BSR set to: 0
  6062  004EEE  0100               	movlb	0	; () banked
  6063  004EF0  2BD4               	incf	___xxtofl@exp& (0+255),f,b
  6064  004EF2  0100               	movlb	0	; () banked
  6065  004EF4  90D8               	bcf	status,0,c
  6066  004EF6  33D8               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6067  004EF8  33D7               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6068  004EFA  33D6               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6069  004EFC  33D5               	rrcf	___xxtofl@arg& (0+255),f,b
  6070  004EFE                     l6587:
  6071                           
  6072                           ; BSR set to: 0
  6073  004EFE  0E00               	movlw	0
  6074  004F00  0100               	movlb	0	; () banked
  6075  004F02  15D5               	andwf	___xxtofl@arg& (0+255),w,b
  6076  004F04  0100               	movlb	0	; () banked
  6077  004F06  6FCF               	movwf	??___xxtofl& (0+255),b
  6078  004F08  0E00               	movlw	0
  6079  004F0A  0100               	movlb	0	; () banked
  6080  004F0C  15D6               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6081  004F0E  0100               	movlb	0	; () banked
  6082  004F10  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6083  004F12  0E00               	movlw	0
  6084  004F14  0100               	movlb	0	; () banked
  6085  004F16  15D7               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6086  004F18  0100               	movlb	0	; () banked
  6087  004F1A  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6088  004F1C  0EFE               	movlw	254
  6089  004F1E  0100               	movlb	0	; () banked
  6090  004F20  15D8               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6091  004F22  0100               	movlb	0	; () banked
  6092  004F24  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6093  004F26  0100               	movlb	0	; () banked
  6094  004F28  51CF               	movf	??___xxtofl& (0+255),w,b
  6095  004F2A  0100               	movlb	0	; () banked
  6096  004F2C  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6097  004F2E  0100               	movlb	0	; () banked
  6098  004F30  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6099  004F32  0100               	movlb	0	; () banked
  6100  004F34  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6101  004F36  B4D8               	btfsc	status,2,c
  6102  004F38  D010               	goto	l1465
  6103  004F3A  D7D9               	goto	l6585
  6104  004F3C                     l6589:
  6105                           
  6106                           ; BSR set to: 0
  6107  004F3C  0100               	movlb	0	; () banked
  6108  004F3E  2BD4               	incf	___xxtofl@exp& (0+255),f,b
  6109                           
  6110                           ; BSR set to: 0
  6111  004F40  0E01               	movlw	1
  6112  004F42  0100               	movlb	0	; () banked
  6113  004F44  27D5               	addwf	___xxtofl@arg& (0+255),f,b
  6114  004F46  0E00               	movlw	0
  6115  004F48  23D6               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6116  004F4A  23D7               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6117  004F4C  23D8               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6118                           
  6119                           ; BSR set to: 0
  6120  004F4E  0100               	movlb	0	; () banked
  6121  004F50  90D8               	bcf	status,0,c
  6122  004F52  33D8               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6123  004F54  33D7               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6124  004F56  33D6               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6125  004F58  33D5               	rrcf	___xxtofl@arg& (0+255),f,b
  6126  004F5A                     l1465:
  6127                           
  6128                           ; BSR set to: 0
  6129  004F5A  0E00               	movlw	0
  6130  004F5C  0100               	movlb	0	; () banked
  6131  004F5E  15D5               	andwf	___xxtofl@arg& (0+255),w,b
  6132  004F60  0100               	movlb	0	; () banked
  6133  004F62  6FCF               	movwf	??___xxtofl& (0+255),b
  6134  004F64  0E00               	movlw	0
  6135  004F66  0100               	movlb	0	; () banked
  6136  004F68  15D6               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6137  004F6A  0100               	movlb	0	; () banked
  6138  004F6C  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6139  004F6E  0E00               	movlw	0
  6140  004F70  0100               	movlb	0	; () banked
  6141  004F72  15D7               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6142  004F74  0100               	movlb	0	; () banked
  6143  004F76  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6144  004F78  0EFF               	movlw	255
  6145  004F7A  0100               	movlb	0	; () banked
  6146  004F7C  15D8               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6147  004F7E  0100               	movlb	0	; () banked
  6148  004F80  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6149  004F82  0100               	movlb	0	; () banked
  6150  004F84  51CF               	movf	??___xxtofl& (0+255),w,b
  6151  004F86  0100               	movlb	0	; () banked
  6152  004F88  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6153  004F8A  0100               	movlb	0	; () banked
  6154  004F8C  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6155  004F8E  0100               	movlb	0	; () banked
  6156  004F90  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6157  004F92  B4D8               	btfsc	status,2,c
  6158  004F94  D009               	goto	l6597
  6159  004F96  D7D2               	goto	l6589
  6160  004F98                     l6595:
  6161                           
  6162                           ; BSR set to: 0
  6163  004F98  0100               	movlb	0	; () banked
  6164  004F9A  07D4               	decf	___xxtofl@exp& (0+255),f,b
  6165  004F9C  0100               	movlb	0	; () banked
  6166  004F9E  90D8               	bcf	status,0,c
  6167  004FA0  37D5               	rlcf	___xxtofl@arg& (0+255),f,b
  6168  004FA2  37D6               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6169  004FA4  37D7               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6170  004FA6  37D8               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6171  004FA8                     l6597:
  6172                           
  6173                           ; BSR set to: 0
  6174  004FA8  0100               	movlb	0	; () banked
  6175  004FAA  BFD7               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6176  004FAC  D004               	goto	l1472
  6177                           
  6178                           ; BSR set to: 0
  6179  004FAE  0E02               	movlw	2
  6180  004FB0  0100               	movlb	0	; () banked
  6181  004FB2  61D4               	cpfslt	___xxtofl@exp& (0+255),b
  6182  004FB4  D7F1               	goto	l6595
  6183  004FB6                     l1472:
  6184                           
  6185                           ; BSR set to: 0
  6186  004FB6  0100               	movlb	0	; () banked
  6187  004FB8  B1D4               	btfsc	___xxtofl@exp& (0+255),0,b
  6188  004FBA  D009               	goto	l1473
  6189                           
  6190                           ; BSR set to: 0
  6191  004FBC  0EFF               	movlw	255
  6192  004FBE  0100               	movlb	0	; () banked
  6193  004FC0  17D5               	andwf	___xxtofl@arg& (0+255),f,b
  6194  004FC2  0EFF               	movlw	255
  6195  004FC4  17D6               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  6196  004FC6  0E7F               	movlw	127
  6197  004FC8  17D7               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  6198  004FCA  0EFF               	movlw	255
  6199  004FCC  17D8               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  6200  004FCE                     l1473:
  6201                           
  6202                           ; BSR set to: 0
  6203  004FCE  0100               	movlb	0	; () banked
  6204  004FD0  90D8               	bcf	status,0,c
  6205  004FD2  33D4               	rrcf	___xxtofl@exp& (0+255),f,b
  6206  004FD4  C0D4  F0CF         	movff	___xxtofl@exp,??___xxtofl
  6207  004FD8  0100               	movlb	0	; () banked
  6208  004FDA  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6209  004FDC  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6210  004FDE  6BD2               	clrf	(??___xxtofl+3)& (0+255),b
  6211  004FE0  C0CF  F0D2         	movff	??___xxtofl,??___xxtofl+3
  6212  004FE4  0100               	movlb	0	; () banked
  6213  004FE6  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6214  004FE8  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6215  004FEA  6BCF               	clrf	??___xxtofl& (0+255),b
  6216  004FEC  0100               	movlb	0	; () banked
  6217  004FEE  51CF               	movf	??___xxtofl& (0+255),w,b
  6218  004FF0  0100               	movlb	0	; () banked
  6219  004FF2  13D5               	iorwf	___xxtofl@arg& (0+255),f,b
  6220  004FF4  0100               	movlb	0	; () banked
  6221  004FF6  51D0               	movf	(??___xxtofl+1)& (0+255),w,b
  6222  004FF8  0100               	movlb	0	; () banked
  6223  004FFA  13D6               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6224  004FFC  0100               	movlb	0	; () banked
  6225  004FFE  51D1               	movf	(??___xxtofl+2)& (0+255),w,b
  6226  005000  0100               	movlb	0	; () banked
  6227  005002  13D7               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6228  005004  0100               	movlb	0	; () banked
  6229  005006  51D2               	movf	(??___xxtofl+3)& (0+255),w,b
  6230  005008  0100               	movlb	0	; () banked
  6231  00500A  13D8               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6232                           
  6233                           ; BSR set to: 0
  6234  00500C  0100               	movlb	0	; () banked
  6235  00500E  51D3               	movf	___xxtofl@sign& (0+255),w,b
  6236  005010  0100               	movlb	0	; () banked
  6237  005012  B4D8               	btfsc	status,2,c
  6238  005014  D005               	goto	l6609
  6239                           
  6240                           ; BSR set to: 0
  6241  005016  0100               	movlb	0	; () banked
  6242  005018  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6243  00501A  D002               	goto	l6609
  6244                           
  6245                           ; BSR set to: 0
  6246  00501C  0100               	movlb	0	; () banked
  6247  00501E  8FD8               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6248  005020                     l6609:
  6249                           
  6250                           ; BSR set to: 0
  6251  005020  C0D5  F0CB         	movff	___xxtofl@arg,?___xxtofl
  6252  005024  C0D6  F0CC         	movff	___xxtofl@arg+1,?___xxtofl+1
  6253  005028  C0D7  F0CD         	movff	___xxtofl@arg+2,?___xxtofl+2
  6254  00502C  C0D8  F0CE         	movff	___xxtofl@arg+3,?___xxtofl+3
  6255  005030  0012               	return	
  6256  005032                     __end_of___xxtofl:
  6257                           	opt stack 0
  6258                           tblptru	equ	0xFF8
  6259                           tblptrh	equ	0xFF7
  6260                           tblptrl	equ	0xFF6
  6261                           tablat	equ	0xFF5
  6262                           postinc0	equ	0xFEE
  6263                           wreg	equ	0xFE8
  6264                           postdec1	equ	0xFE5
  6265                           fsr1l	equ	0xFE1
  6266                           indf2	equ	0xFDF
  6267                           postinc2	equ	0xFDE
  6268                           postdec2	equ	0xFDD
  6269                           fsr2h	equ	0xFDA
  6270                           fsr2l	equ	0xFD9
  6271                           status	equ	0xFD8
  6272                           
  6273 ;; *************** function ___fltol *****************
  6274 ;; Defined at:
  6275 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;  f1              4   97[BANK0 ] unsigned char 
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;  exp1            1  106[BANK0 ] unsigned char 
  6280 ;;  sign1           1  105[BANK0 ] unsigned char 
  6281 ;; Return value:  Size  Location     Type
  6282 ;;                  4   97[BANK0 ] long 
  6283 ;; Registers used:
  6284 ;;		wreg, status,2, status,0
  6285 ;; Tracked objects:
  6286 ;;		On entry : 0/0
  6287 ;;		On exit  : 0/0
  6288 ;;		Unchanged: 0/0
  6289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6290 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6291 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6292 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6293 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6294 ;;Total ram usage:       10 bytes
  6295 ;; Hardware stack levels used:    1
  6296 ;; Hardware stack levels required when called:    4
  6297 ;; This function calls:
  6298 ;;		Nothing
  6299 ;; This function is called by:
  6300 ;;		_park_routine
  6301 ;;		_parallelo
  6302 ;;		_floor
  6303 ;; This function uses a non-reentrant model
  6304 ;;
  6305                           
  6306                           	psect	text14
  6307  0058B0                     __ptext14:
  6308                           	opt stack 0
  6309  0058B0                     ___fltol:
  6310                           	opt stack 24
  6311                           
  6312                           ; BSR set to: 0
  6313                           ;incstack = 0
  6314  0058B0  0100               	movlb	0	; () banked
  6315  0058B2  35C3               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6316  0058B4  35C4               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6317  0058B6  0100               	movlb	0	; () banked
  6318  0058B8  6FCA               	movwf	___fltol@exp1& (0+255),b
  6319  0058BA  0100               	movlb	0	; () banked
  6320  0058BC  51CA               	movf	___fltol@exp1& (0+255),w,b
  6321  0058BE  A4D8               	btfss	status,2,c
  6322  0058C0  D00A               	goto	l6533
  6323                           
  6324                           ; BSR set to: 0
  6325  0058C2  0E00               	movlw	0
  6326  0058C4  0100               	movlb	0	; () banked
  6327  0058C6  6FC1               	movwf	?___fltol& (0+255),b
  6328  0058C8  0E00               	movlw	0
  6329  0058CA  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6330  0058CC  0E00               	movlw	0
  6331  0058CE  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6332  0058D0  0E00               	movlw	0
  6333  0058D2  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6334                           
  6335                           ; BSR set to: 0
  6336  0058D4  0012               	return	
  6337  0058D6                     l6533:
  6338                           
  6339                           ; BSR set to: 0
  6340  0058D6  C0C1  F0C5         	movff	___fltol@f1,??___fltol
  6341  0058DA  C0C2  F0C6         	movff	___fltol@f1+1,??___fltol+1
  6342  0058DE  C0C3  F0C7         	movff	___fltol@f1+2,??___fltol+2
  6343  0058E2  C0C4  F0C8         	movff	___fltol@f1+3,??___fltol+3
  6344  0058E6  0E20               	movlw	32
  6345  0058E8  D006               	goto	u8180
  6346  0058EA                     u8185:
  6347  0058EA  0100               	movlb	0	; () banked
  6348  0058EC  90D8               	bcf	status,0,c
  6349  0058EE  33C8               	rrcf	(??___fltol+3)& (0+255),f,b
  6350  0058F0  33C7               	rrcf	(??___fltol+2)& (0+255),f,b
  6351  0058F2  33C6               	rrcf	(??___fltol+1)& (0+255),f,b
  6352  0058F4  33C5               	rrcf	??___fltol& (0+255),f,b
  6353  0058F6                     u8180:
  6354  0058F6  2EE8               	decfsz	wreg,f,c
  6355  0058F8  D7F8               	goto	u8185
  6356  0058FA  0100               	movlb	0	; () banked
  6357  0058FC  51C5               	movf	??___fltol& (0+255),w,b
  6358  0058FE  0100               	movlb	0	; () banked
  6359  005900  6FC9               	movwf	___fltol@sign1& (0+255),b
  6360                           
  6361                           ; BSR set to: 0
  6362  005902  0100               	movlb	0	; () banked
  6363  005904  8FC3               	bsf	(___fltol@f1+2)& (0+255),7,b
  6364                           
  6365                           ; BSR set to: 0
  6366  005906  0EFF               	movlw	255
  6367  005908  0100               	movlb	0	; () banked
  6368  00590A  17C1               	andwf	___fltol@f1& (0+255),f,b
  6369  00590C  0EFF               	movlw	255
  6370  00590E  17C2               	andwf	(___fltol@f1+1)& (0+255),f,b
  6371  005910  0EFF               	movlw	255
  6372  005912  17C3               	andwf	(___fltol@f1+2)& (0+255),f,b
  6373  005914  0E00               	movlw	0
  6374  005916  17C4               	andwf	(___fltol@f1+3)& (0+255),f,b
  6375                           
  6376                           ; BSR set to: 0
  6377  005918  0E96               	movlw	150
  6378  00591A  0100               	movlb	0	; () banked
  6379  00591C  5FCA               	subwf	___fltol@exp1& (0+255),f,b
  6380                           
  6381                           ; BSR set to: 0
  6382  00591E  0100               	movlb	0	; () banked
  6383  005920  AFCA               	btfss	___fltol@exp1& (0+255),7,b
  6384  005922  D01A               	goto	l6553
  6385                           
  6386                           ; BSR set to: 0
  6387  005924  0100               	movlb	0	; () banked
  6388  005926  51CA               	movf	___fltol@exp1& (0+255),w,b
  6389  005928  0A80               	xorlw	128
  6390  00592A  0F97               	addlw	151
  6391  00592C  B0D8               	btfsc	status,0,c
  6392  00592E  D00A               	goto	l6549
  6393                           
  6394                           ; BSR set to: 0
  6395  005930  0E00               	movlw	0
  6396  005932  0100               	movlb	0	; () banked
  6397  005934  6FC1               	movwf	?___fltol& (0+255),b
  6398  005936  0E00               	movlw	0
  6399  005938  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6400  00593A  0E00               	movlw	0
  6401  00593C  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6402  00593E  0E00               	movlw	0
  6403  005940  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6404                           
  6405                           ; BSR set to: 0
  6406  005942  0012               	return	
  6407  005944                     l6549:
  6408                           
  6409                           ; BSR set to: 0
  6410  005944  0100               	movlb	0	; () banked
  6411  005946  90D8               	bcf	status,0,c
  6412  005948  33C4               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6413  00594A  33C3               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6414  00594C  33C2               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6415  00594E  33C1               	rrcf	___fltol@f1& (0+255),f,b
  6416                           
  6417                           ; BSR set to: 0
  6418  005950  0100               	movlb	0	; () banked
  6419  005952  3FCA               	incfsz	___fltol@exp1& (0+255),f,b
  6420  005954  D7F7               	goto	l6549
  6421                           
  6422                           ; BSR set to: 0
  6423  005956  D01B               	goto	l6563
  6424  005958                     l6553:
  6425                           
  6426                           ; BSR set to: 0
  6427  005958  0E1F               	movlw	31
  6428  00595A  0100               	movlb	0	; () banked
  6429  00595C  65CA               	cpfsgt	___fltol@exp1& (0+255),b
  6430  00595E  D012               	goto	l6561
  6431                           
  6432                           ; BSR set to: 0
  6433  005960  0E00               	movlw	0
  6434  005962  0100               	movlb	0	; () banked
  6435  005964  6FC1               	movwf	?___fltol& (0+255),b
  6436  005966  0E00               	movlw	0
  6437  005968  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6438  00596A  0E00               	movlw	0
  6439  00596C  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6440  00596E  0E00               	movlw	0
  6441  005970  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6442                           
  6443                           ; BSR set to: 0
  6444  005972  0012               	return	
  6445  005974                     l6559:
  6446                           
  6447                           ; BSR set to: 0
  6448  005974  0100               	movlb	0	; () banked
  6449  005976  90D8               	bcf	status,0,c
  6450  005978  37C1               	rlcf	___fltol@f1& (0+255),f,b
  6451  00597A  37C2               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6452  00597C  37C3               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6453  00597E  37C4               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6454  005980  0100               	movlb	0	; () banked
  6455  005982  07CA               	decf	___fltol@exp1& (0+255),f,b
  6456  005984                     l6561:
  6457                           
  6458                           ; BSR set to: 0
  6459  005984  0100               	movlb	0	; () banked
  6460  005986  51CA               	movf	___fltol@exp1& (0+255),w,b
  6461  005988  0100               	movlb	0	; () banked
  6462  00598A  A4D8               	btfss	status,2,c
  6463  00598C  D7F3               	goto	l6559
  6464  00598E                     l6563:
  6465                           
  6466                           ; BSR set to: 0
  6467  00598E  0100               	movlb	0	; () banked
  6468  005990  51C9               	movf	___fltol@sign1& (0+255),w,b
  6469  005992  0100               	movlb	0	; () banked
  6470  005994  B4D8               	btfsc	status,2,c
  6471  005996  D009               	goto	l6567
  6472                           
  6473                           ; BSR set to: 0
  6474  005998  0100               	movlb	0	; () banked
  6475  00599A  1FC4               	comf	(___fltol@f1+3)& (0+255),f,b
  6476  00599C  1FC3               	comf	(___fltol@f1+2)& (0+255),f,b
  6477  00599E  1FC2               	comf	(___fltol@f1+1)& (0+255),f,b
  6478  0059A0  6DC1               	negf	___fltol@f1& (0+255),b
  6479  0059A2  0E00               	movlw	0
  6480  0059A4  23C2               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6481  0059A6  23C3               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6482  0059A8  23C4               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6483  0059AA                     l6567:
  6484                           
  6485                           ; BSR set to: 0
  6486  0059AA  C0C1  F0C1         	movff	___fltol@f1,?___fltol
  6487  0059AE  C0C2  F0C2         	movff	___fltol@f1+1,?___fltol+1
  6488  0059B2  C0C3  F0C3         	movff	___fltol@f1+2,?___fltol+2
  6489  0059B6  C0C4  F0C4         	movff	___fltol@f1+3,?___fltol+3
  6490  0059BA  0012               	return	
  6491  0059BC                     __end_of___fltol:
  6492                           	opt stack 0
  6493                           tblptru	equ	0xFF8
  6494                           tblptrh	equ	0xFF7
  6495                           tblptrl	equ	0xFF6
  6496                           tablat	equ	0xFF5
  6497                           postinc0	equ	0xFEE
  6498                           wreg	equ	0xFE8
  6499                           postdec1	equ	0xFE5
  6500                           fsr1l	equ	0xFE1
  6501                           indf2	equ	0xFDF
  6502                           postinc2	equ	0xFDE
  6503                           postdec2	equ	0xFDD
  6504                           fsr2h	equ	0xFDA
  6505                           fsr2l	equ	0xFD9
  6506                           status	equ	0xFD8
  6507                           
  6508 ;; *************** function ___flsub *****************
  6509 ;; Defined at:
  6510 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6511 ;; Parameters:    Size  Location     Type
  6512 ;;  b               4    0[BANK1 ] long 
  6513 ;;  a               4    4[BANK1 ] long 
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;		None
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  4    0[BANK1 ] long 
  6518 ;; Registers used:
  6519 ;;		wreg, status,2, status,0, cstack
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6525 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6528 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6529 ;;Total ram usage:        8 bytes
  6530 ;; Hardware stack levels used:    1
  6531 ;; Hardware stack levels required when called:    5
  6532 ;; This function calls:
  6533 ;;		___fladd
  6534 ;; This function is called by:
  6535 ;;		_sin
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539                           	psect	text15
  6540  005E00                     __ptext15:
  6541                           	opt stack 0
  6542  005E00                     ___flsub:
  6543                           	opt stack 21
  6544                           
  6545                           ; BSR set to: 0
  6546                           ;incstack = 0
  6547  005E00  0E00               	movlw	0
  6548  005E02  0101               	movlb	1	; () banked
  6549  005E04  1B91               	xorwf	___flsub@a& (0+255),f,b
  6550  005E06  0E00               	movlw	0
  6551  005E08  1B92               	xorwf	(___flsub@a+1)& (0+255),f,b
  6552  005E0A  0E00               	movlw	0
  6553  005E0C  1B93               	xorwf	(___flsub@a+2)& (0+255),f,b
  6554  005E0E  0E80               	movlw	128
  6555  005E10  1B94               	xorwf	(___flsub@a+3)& (0+255),f,b
  6556                           
  6557                           ; BSR set to: 1
  6558  005E12  C18D  F0A9         	movff	___flsub@b,___fladd@b
  6559  005E16  C18E  F0AA         	movff	___flsub@b+1,___fladd@b+1
  6560  005E1A  C18F  F0AB         	movff	___flsub@b+2,___fladd@b+2
  6561  005E1E  C190  F0AC         	movff	___flsub@b+3,___fladd@b+3
  6562  005E22  C191  F0AD         	movff	___flsub@a,___fladd@a
  6563  005E26  C192  F0AE         	movff	___flsub@a+1,___fladd@a+1
  6564  005E2A  C193  F0AF         	movff	___flsub@a+2,___fladd@a+2
  6565  005E2E  C194  F0B0         	movff	___flsub@a+3,___fladd@a+3
  6566  005E32  EC3D  F015         	call	___fladd	;wreg free
  6567  005E36  C0A9  F18D         	movff	?___fladd,?___flsub
  6568  005E3A  C0AA  F18E         	movff	?___fladd+1,?___flsub+1
  6569  005E3E  C0AB  F18F         	movff	?___fladd+2,?___flsub+2
  6570  005E42  C0AC  F190         	movff	?___fladd+3,?___flsub+3
  6571  005E46  0012               	return	
  6572  005E48                     __end_of___flsub:
  6573                           	opt stack 0
  6574                           tblptru	equ	0xFF8
  6575                           tblptrh	equ	0xFF7
  6576                           tblptrl	equ	0xFF6
  6577                           tablat	equ	0xFF5
  6578                           postinc0	equ	0xFEE
  6579                           wreg	equ	0xFE8
  6580                           postdec1	equ	0xFE5
  6581                           fsr1l	equ	0xFE1
  6582                           indf2	equ	0xFDF
  6583                           postinc2	equ	0xFDE
  6584                           postdec2	equ	0xFDD
  6585                           fsr2h	equ	0xFDA
  6586                           fsr2l	equ	0xFD9
  6587                           status	equ	0xFD8
  6588                           
  6589 ;; *************** function _asin *****************
  6590 ;; Defined at:
  6591 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\asin.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;  x               4  126[BANK0 ] long 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  y               4   29[BANK1 ] long 
  6596 ;;  sgn             4   17[BANK1 ] long 
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  4  126[BANK0 ] long 
  6599 ;; Registers used:
  6600 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6606 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6607 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6609 ;;      Totals:         0       4      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6610 ;;Total ram usage:       24 bytes
  6611 ;; Hardware stack levels used:    1
  6612 ;; Hardware stack levels required when called:    7
  6613 ;; This function calls:
  6614 ;;		___fladd
  6615 ;;		___fldiv
  6616 ;;		___flge
  6617 ;;		___flmul
  6618 ;;		___flneg
  6619 ;;		_atan
  6620 ;;		_fabs
  6621 ;;		_sqrt
  6622 ;; This function is called by:
  6623 ;;		_parallelo
  6624 ;;		_matematica
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           	psect	text16
  6629  004674                     __ptext16:
  6630                           	opt stack 0
  6631  004674                     _asin:
  6632                           	opt stack 21
  6633                           
  6634                           ;incstack = 0
  6635  004674  0E00               	movlw	0
  6636  004676  0100               	movlb	0	; () banked
  6637  004678  6FC5               	movwf	___flge@ff1& (0+255),b
  6638  00467A  0E00               	movlw	0
  6639  00467C  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  6640  00467E  0E80               	movlw	128
  6641  004680  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  6642  004682  0E3F               	movlw	63
  6643  004684  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  6644  004686  C0DE  F0C1         	movff	asin@x,fabs@d
  6645  00468A  C0DF  F0C2         	movff	asin@x+1,fabs@d+1
  6646  00468E  C0E0  F0C3         	movff	asin@x+2,fabs@d+2
  6647  004692  C0E1  F0C4         	movff	asin@x+3,fabs@d+3
  6648  004696  EC24  F02F         	call	_fabs	;wreg free
  6649  00469A  C0C1  F0C9         	movff	?_fabs,___flge@ff2
  6650  00469E  C0C2  F0CA         	movff	?_fabs+1,___flge@ff2+1
  6651  0046A2  C0C3  F0CB         	movff	?_fabs+2,___flge@ff2+2
  6652  0046A6  C0C4  F0CC         	movff	?_fabs+3,___flge@ff2+3
  6653  0046AA  ECD7  F029         	call	___flge	;wreg free
  6654  0046AE  0100               	movlb	0	; () banked
  6655  0046B0  B0D8               	btfsc	status,0,c
  6656  0046B2  D00F               	goto	l7269
  6657                           
  6658                           ; BSR set to: 0
  6659  0046B4  0E00               	movlw	0
  6660  0046B6  0101               	movlb	1	; () banked
  6661  0046B8  6F49               	movwf	(_errno+1)& (0+255),b
  6662  0046BA  0E21               	movlw	33
  6663  0046BC  6F48               	movwf	_errno& (0+255),b
  6664  0046BE  0E00               	movlw	0
  6665  0046C0  0100               	movlb	0	; () banked
  6666  0046C2  6FDE               	movwf	?_asin& (0+255),b
  6667  0046C4  0E00               	movlw	0
  6668  0046C6  6FDF               	movwf	(?_asin+1)& (0+255),b
  6669  0046C8  0E00               	movlw	0
  6670  0046CA  6FE0               	movwf	(?_asin+2)& (0+255),b
  6671  0046CC  0E00               	movlw	0
  6672  0046CE  6FE1               	movwf	(?_asin+3)& (0+255),b
  6673                           
  6674                           ; BSR set to: 0
  6675  0046D0  0012               	return	
  6676  0046D2                     l7269:
  6677                           
  6678                           ; BSR set to: 0
  6679  0046D2  0E00               	movlw	0
  6680  0046D4  0101               	movlb	1	; () banked
  6681  0046D6  6F9E               	movwf	asin@sgn& (0+255),b
  6682  0046D8  0E00               	movlw	0
  6683  0046DA  6F9F               	movwf	(asin@sgn+1)& (0+255),b
  6684  0046DC  0E80               	movlw	128
  6685  0046DE  6FA0               	movwf	(asin@sgn+2)& (0+255),b
  6686  0046E0  0E3F               	movlw	63
  6687  0046E2  6FA1               	movwf	(asin@sgn+3)& (0+255),b
  6688                           
  6689                           ; BSR set to: 1
  6690  0046E4  C0DE  F094         	movff	asin@x,___flmul@a
  6691  0046E8  C0DF  F095         	movff	asin@x+1,___flmul@a+1
  6692  0046EC  C0E0  F096         	movff	asin@x+2,___flmul@a+2
  6693  0046F0  C0E1  F097         	movff	asin@x+3,___flmul@a+3
  6694  0046F4  C0DE  F090         	movff	asin@x,___flmul@b
  6695  0046F8  C0DF  F091         	movff	asin@x+1,___flmul@b+1
  6696  0046FC  C0E0  F092         	movff	asin@x+2,___flmul@b+2
  6697  004700  C0E1  F093         	movff	asin@x+3,___flmul@b+3
  6698  004704  EC91  F017         	call	___flmul	;wreg free
  6699  004708  C090  F0BD         	movff	?___flmul,___flneg@f1
  6700  00470C  C091  F0BE         	movff	?___flmul+1,___flneg@f1+1
  6701  004710  C092  F0BF         	movff	?___flmul+2,___flneg@f1+2
  6702  004714  C093  F0C0         	movff	?___flmul+3,___flneg@f1+3
  6703  004718  EC43  F02F         	call	___flneg	;wreg free
  6704  00471C  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6705  004720  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6706  004724  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6707  004728  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6708  00472C  0E00               	movlw	0
  6709  00472E  0100               	movlb	0	; () banked
  6710  004730  6FAD               	movwf	___fladd@a& (0+255),b
  6711  004732  0E00               	movlw	0
  6712  004734  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6713  004736  0E80               	movlw	128
  6714  004738  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6715  00473A  0E3F               	movlw	63
  6716  00473C  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6717  00473E  EC3D  F015         	call	___fladd	;wreg free
  6718  004742  C0A9  F0C1         	movff	?___fladd,sqrt@a
  6719  004746  C0AA  F0C2         	movff	?___fladd+1,sqrt@a+1
  6720  00474A  C0AB  F0C3         	movff	?___fladd+2,sqrt@a+2
  6721  00474E  C0AC  F0C4         	movff	?___fladd+3,sqrt@a+3
  6722  004752  EC1A  F01C         	call	_sqrt	;wreg free
  6723  004756  C0C1  F1AA         	movff	?_sqrt,asin@y
  6724  00475A  C0C2  F1AB         	movff	?_sqrt+1,asin@y+1
  6725  00475E  C0C3  F1AC         	movff	?_sqrt+2,asin@y+2
  6726  004762  C0C4  F1AD         	movff	?_sqrt+3,asin@y+3
  6727  004766  C0DE  F0C1         	movff	asin@x,fabs@d
  6728  00476A  C0DF  F0C2         	movff	asin@x+1,fabs@d+1
  6729  00476E  C0E0  F0C3         	movff	asin@x+2,fabs@d+2
  6730  004772  C0E1  F0C4         	movff	asin@x+3,fabs@d+3
  6731  004776  EC24  F02F         	call	_fabs	;wreg free
  6732  00477A  C0C1  F0C5         	movff	?_fabs,___flge@ff1
  6733  00477E  C0C2  F0C6         	movff	?_fabs+1,___flge@ff1+1
  6734  004782  C0C3  F0C7         	movff	?_fabs+2,___flge@ff1+2
  6735  004786  C0C4  F0C8         	movff	?_fabs+3,___flge@ff1+3
  6736  00478A  0E8F               	movlw	143
  6737  00478C  0100               	movlb	0	; () banked
  6738  00478E  6FC9               	movwf	___flge@ff2& (0+255),b
  6739  004790  0EC2               	movlw	194
  6740  004792  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  6741  004794  0E35               	movlw	53
  6742  004796  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  6743  004798  0E3F               	movlw	63
  6744  00479A  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  6745  00479C  ECD7  F029         	call	___flge	;wreg free
  6746  0047A0  0100               	movlb	0	; () banked
  6747  0047A2  B0D8               	btfsc	status,0,c
  6748  0047A4  D02D               	goto	l7281
  6749                           
  6750                           ; BSR set to: 0
  6751  0047A6  C0DE  F077         	movff	asin@x,___fldiv@b
  6752  0047AA  C0DF  F078         	movff	asin@x+1,___fldiv@b+1
  6753  0047AE  C0E0  F079         	movff	asin@x+2,___fldiv@b+2
  6754  0047B2  C0E1  F07A         	movff	asin@x+3,___fldiv@b+3
  6755  0047B6  C1AA  F07B         	movff	asin@y,___fldiv@a
  6756  0047BA  C1AB  F07C         	movff	asin@y+1,___fldiv@a+1
  6757  0047BE  C1AC  F07D         	movff	asin@y+2,___fldiv@a+2
  6758  0047C2  C1AD  F07E         	movff	asin@y+3,___fldiv@a+3
  6759  0047C6  ECFF  F01D         	call	___fldiv	;wreg free
  6760  0047CA  C077  F1AE         	movff	?___fldiv,_asin$3748
  6761  0047CE  C078  F1AF         	movff	?___fldiv+1,_asin$3748+1
  6762  0047D2  C079  F1B0         	movff	?___fldiv+2,_asin$3748+2
  6763  0047D6  C07A  F1B1         	movff	?___fldiv+3,_asin$3748+3
  6764  0047DA  C1AE  F0D1         	movff	_asin$3748,atan@f
  6765  0047DE  C1AF  F0D2         	movff	_asin$3748+1,atan@f+1
  6766  0047E2  C1B0  F0D3         	movff	_asin$3748+2,atan@f+2
  6767  0047E6  C1B1  F0D4         	movff	_asin$3748+3,atan@f+3
  6768  0047EA  EC09  F026         	call	_atan	;wreg free
  6769  0047EE  C0D1  F0DE         	movff	?_atan,?_asin
  6770  0047F2  C0D2  F0DF         	movff	?_atan+1,?_asin+1
  6771  0047F6  C0D3  F0E0         	movff	?_atan+2,?_asin+2
  6772  0047FA  C0D4  F0E1         	movff	?_atan+3,?_asin+3
  6773  0047FE  0012               	return	
  6774  004800                     l7281:
  6775  004800  0100               	movlb	0	; () banked
  6776  004802  AFE1               	btfss	(asin@x+3)& (0+255),7,b
  6777  004804  D06E               	goto	l7293
  6778                           
  6779                           ; BSR set to: 0
  6780  004806  C0DE  F07B         	movff	asin@x,___fldiv@a
  6781  00480A  C0DF  F07C         	movff	asin@x+1,___fldiv@a+1
  6782  00480E  C0E0  F07D         	movff	asin@x+2,___fldiv@a+2
  6783  004812  C0E1  F07E         	movff	asin@x+3,___fldiv@a+3
  6784  004816  C1AA  F0BD         	movff	asin@y,___flneg@f1
  6785  00481A  C1AB  F0BE         	movff	asin@y+1,___flneg@f1+1
  6786  00481E  C1AC  F0BF         	movff	asin@y+2,___flneg@f1+2
  6787  004822  C1AD  F0C0         	movff	asin@y+3,___flneg@f1+3
  6788  004826  EC43  F02F         	call	___flneg	;wreg free
  6789  00482A  C0BD  F077         	movff	?___flneg,___fldiv@b
  6790  00482E  C0BE  F078         	movff	?___flneg+1,___fldiv@b+1
  6791  004832  C0BF  F079         	movff	?___flneg+2,___fldiv@b+2
  6792  004836  C0C0  F07A         	movff	?___flneg+3,___fldiv@b+3
  6793  00483A  ECFF  F01D         	call	___fldiv	;wreg free
  6794  00483E  C077  F1AE         	movff	?___fldiv,_asin$3748
  6795  004842  C078  F1AF         	movff	?___fldiv+1,_asin$3748+1
  6796  004846  C079  F1B0         	movff	?___fldiv+2,_asin$3748+2
  6797  00484A  C07A  F1B1         	movff	?___fldiv+3,_asin$3748+3
  6798  00484E  C1AE  F0D1         	movff	_asin$3748,atan@f
  6799  004852  C1AF  F0D2         	movff	_asin$3748+1,atan@f+1
  6800  004856  C1B0  F0D3         	movff	_asin$3748+2,atan@f+2
  6801  00485A  C1B1  F0D4         	movff	_asin$3748+3,atan@f+3
  6802  00485E  EC09  F026         	call	_atan	;wreg free
  6803  004862  C0D1  F1A6         	movff	?_atan,_asin$3749
  6804  004866  C0D2  F1A7         	movff	?_atan+1,_asin$3749+1
  6805  00486A  C0D3  F1A8         	movff	?_atan+2,_asin$3749+2
  6806  00486E  C0D4  F1A9         	movff	?_atan+3,_asin$3749+3
  6807  004872  0EDB               	movlw	219
  6808  004874  0100               	movlb	0	; () banked
  6809  004876  6FAD               	movwf	___fladd@a& (0+255),b
  6810  004878  0E0F               	movlw	15
  6811  00487A  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6812  00487C  0EC9               	movlw	201
  6813  00487E  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6814  004880  0E3F               	movlw	63
  6815  004882  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6816  004884  C1A6  F0BD         	movff	_asin$3749,___flneg@f1
  6817  004888  C1A7  F0BE         	movff	_asin$3749+1,___flneg@f1+1
  6818  00488C  C1A8  F0BF         	movff	_asin$3749+2,___flneg@f1+2
  6819  004890  C1A9  F0C0         	movff	_asin$3749+3,___flneg@f1+3
  6820  004894  EC43  F02F         	call	___flneg	;wreg free
  6821  004898  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6822  00489C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6823  0048A0  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6824  0048A4  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6825  0048A8  EC3D  F015         	call	___fladd	;wreg free
  6826  0048AC  C0A9  F1A2         	movff	?___fladd,_asin$3750
  6827  0048B0  C0AA  F1A3         	movff	?___fladd+1,_asin$3750+1
  6828  0048B4  C0AB  F1A4         	movff	?___fladd+2,_asin$3750+2
  6829  0048B8  C0AC  F1A5         	movff	?___fladd+3,_asin$3750+3
  6830  0048BC  C1A2  F0BD         	movff	_asin$3750,___flneg@f1
  6831  0048C0  C1A3  F0BE         	movff	_asin$3750+1,___flneg@f1+1
  6832  0048C4  C1A4  F0BF         	movff	_asin$3750+2,___flneg@f1+2
  6833  0048C8  C1A5  F0C0         	movff	_asin$3750+3,___flneg@f1+3
  6834  0048CC  EC43  F02F         	call	___flneg	;wreg free
  6835  0048D0  C0BD  F0DE         	movff	?___flneg,?_asin
  6836  0048D4  C0BE  F0DF         	movff	?___flneg+1,?_asin+1
  6837  0048D8  C0BF  F0E0         	movff	?___flneg+2,?_asin+2
  6838  0048DC  C0C0  F0E1         	movff	?___flneg+3,?_asin+3
  6839  0048E0  0012               	return	
  6840  0048E2                     l7293:
  6841  0048E2  C0DE  F07B         	movff	asin@x,___fldiv@a
  6842  0048E6  C0DF  F07C         	movff	asin@x+1,___fldiv@a+1
  6843  0048EA  C0E0  F07D         	movff	asin@x+2,___fldiv@a+2
  6844  0048EE  C0E1  F07E         	movff	asin@x+3,___fldiv@a+3
  6845  0048F2  C1AA  F077         	movff	asin@y,___fldiv@b
  6846  0048F6  C1AB  F078         	movff	asin@y+1,___fldiv@b+1
  6847  0048FA  C1AC  F079         	movff	asin@y+2,___fldiv@b+2
  6848  0048FE  C1AD  F07A         	movff	asin@y+3,___fldiv@b+3
  6849  004902  ECFF  F01D         	call	___fldiv	;wreg free
  6850  004906  C077  F1AE         	movff	?___fldiv,_asin$3748
  6851  00490A  C078  F1AF         	movff	?___fldiv+1,_asin$3748+1
  6852  00490E  C079  F1B0         	movff	?___fldiv+2,_asin$3748+2
  6853  004912  C07A  F1B1         	movff	?___fldiv+3,_asin$3748+3
  6854  004916  C1AE  F0D1         	movff	_asin$3748,atan@f
  6855  00491A  C1AF  F0D2         	movff	_asin$3748+1,atan@f+1
  6856  00491E  C1B0  F0D3         	movff	_asin$3748+2,atan@f+2
  6857  004922  C1B1  F0D4         	movff	_asin$3748+3,atan@f+3
  6858  004926  EC09  F026         	call	_atan	;wreg free
  6859  00492A  C0D1  F1A6         	movff	?_atan,_asin$3749
  6860  00492E  C0D2  F1A7         	movff	?_atan+1,_asin$3749+1
  6861  004932  C0D3  F1A8         	movff	?_atan+2,_asin$3749+2
  6862  004936  C0D4  F1A9         	movff	?_atan+3,_asin$3749+3
  6863  00493A  C1A6  F0BD         	movff	_asin$3749,___flneg@f1
  6864  00493E  C1A7  F0BE         	movff	_asin$3749+1,___flneg@f1+1
  6865  004942  C1A8  F0BF         	movff	_asin$3749+2,___flneg@f1+2
  6866  004946  C1A9  F0C0         	movff	_asin$3749+3,___flneg@f1+3
  6867  00494A  EC43  F02F         	call	___flneg	;wreg free
  6868  00494E  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6869  004952  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6870  004956  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6871  00495A  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6872  00495E  0EDB               	movlw	219
  6873  004960  0100               	movlb	0	; () banked
  6874  004962  6FAD               	movwf	___fladd@a& (0+255),b
  6875  004964  0E0F               	movlw	15
  6876  004966  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6877  004968  0EC9               	movlw	201
  6878  00496A  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6879  00496C  0E3F               	movlw	63
  6880  00496E  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6881  004970  EC3D  F015         	call	___fladd	;wreg free
  6882  004974  C0A9  F0DE         	movff	?___fladd,?_asin
  6883  004978  C0AA  F0DF         	movff	?___fladd+1,?_asin+1
  6884  00497C  C0AB  F0E0         	movff	?___fladd+2,?_asin+2
  6885  004980  C0AC  F0E1         	movff	?___fladd+3,?_asin+3
  6886  004984  0012               	return	
  6887  004986                     __end_of_asin:
  6888                           	opt stack 0
  6889                           tblptru	equ	0xFF8
  6890                           tblptrh	equ	0xFF7
  6891                           tblptrl	equ	0xFF6
  6892                           tablat	equ	0xFF5
  6893                           postinc0	equ	0xFEE
  6894                           wreg	equ	0xFE8
  6895                           postdec1	equ	0xFE5
  6896                           fsr1l	equ	0xFE1
  6897                           indf2	equ	0xFDF
  6898                           postinc2	equ	0xFDE
  6899                           postdec2	equ	0xFDD
  6900                           fsr2h	equ	0xFDA
  6901                           fsr2l	equ	0xFD9
  6902                           status	equ	0xFD8
  6903                           
  6904 ;; *************** function _sqrt *****************
  6905 ;; Defined at:
  6906 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;  a               4   97[BANK0 ] long 
  6909 ;; Auto vars:     Size  Location     Type
  6910 ;;  frac            4  122[BANK0 ] unsigned long 
  6911 ;;  root            4  118[BANK0 ] struct .
  6912 ;;  grs             4  112[BANK0 ] unsigned long 
  6913 ;;  tfrac           4  107[BANK0 ] unsigned long 
  6914 ;;  exp             2  116[BANK0 ] int 
  6915 ;;  p               1  111[BANK0 ] unsigned char 
  6916 ;;  i               1  106[BANK0 ] unsigned char 
  6917 ;;  sign            1  105[BANK0 ] unsigned char 
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  4   97[BANK0 ] unsigned char 
  6920 ;; Registers used:
  6921 ;;		wreg, status,2, status,0
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6927 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6928 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6929 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6930 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6931 ;;Total ram usage:       29 bytes
  6932 ;; Hardware stack levels used:    1
  6933 ;; Hardware stack levels required when called:    4
  6934 ;; This function calls:
  6935 ;;		Nothing
  6936 ;; This function is called by:
  6937 ;;		_parallelo
  6938 ;;		_asin
  6939 ;; This function uses a non-reentrant model
  6940 ;;
  6941                           
  6942                           	psect	text17
  6943  003834                     __ptext17:
  6944                           	opt stack 0
  6945  003834                     _sqrt:
  6946                           	opt stack 24
  6947                           
  6948                           ;incstack = 0
  6949  003834  0100               	movlb	0	; () banked
  6950  003836  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  6951  003838  0B80               	andlw	128
  6952  00383A  0100               	movlb	0	; () banked
  6953  00383C  6FC9               	movwf	sqrt@sign& (0+255),b
  6954  00383E  0100               	movlb	0	; () banked
  6955  003840  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  6956  003842  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  6957  003844  0100               	movlb	0	; () banked
  6958  003846  6FCF               	movwf	sqrt@p& (0+255),b
  6959                           
  6960                           ; BSR set to: 0
  6961  003848  0100               	movlb	0	; () banked
  6962  00384A  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  6963  00384C  D002               	goto	l7055
  6964                           
  6965                           ; BSR set to: 0
  6966  00384E  0100               	movlb	0	; () banked
  6967  003850  81CF               	bsf	sqrt@p& (0+255),0,b
  6968  003852                     l7055:
  6969                           
  6970                           ; BSR set to: 0
  6971  003852  C0CF  F0D4         	movff	sqrt@p,sqrt@exp
  6972  003856  0100               	movlb	0	; () banked
  6973  003858  6BD5               	clrf	(sqrt@exp+1)& (0+255),b
  6974                           
  6975                           ; BSR set to: 0
  6976  00385A  0EFF               	movlw	255
  6977  00385C  0100               	movlb	0	; () banked
  6978  00385E  15C1               	andwf	sqrt@a& (0+255),w,b
  6979  003860  0100               	movlb	0	; () banked
  6980  003862  6FDA               	movwf	sqrt@frac& (0+255),b
  6981  003864  0EFF               	movlw	255
  6982  003866  0100               	movlb	0	; () banked
  6983  003868  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  6984  00386A  0100               	movlb	0	; () banked
  6985  00386C  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  6986  00386E  0E7F               	movlw	127
  6987  003870  0100               	movlb	0	; () banked
  6988  003872  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  6989  003874  0100               	movlb	0	; () banked
  6990  003876  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  6991  003878  0E00               	movlw	0
  6992  00387A  0100               	movlb	0	; () banked
  6993  00387C  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  6994  00387E  0100               	movlb	0	; () banked
  6995  003880  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  6996                           
  6997                           ; BSR set to: 0
  6998  003882  0100               	movlb	0	; () banked
  6999  003884  51D4               	movf	sqrt@exp& (0+255),w,b
  7000  003886  0100               	movlb	0	; () banked
  7001  003888  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7002  00388A  B4D8               	btfsc	status,2,c
  7003  00388C  D008               	goto	l7067
  7004                           
  7005                           ; BSR set to: 0
  7006  00388E  0100               	movlb	0	; () banked
  7007  003890  8FDC               	bsf	(sqrt@frac+2)& (0+255),7,b
  7008                           
  7009                           ; BSR set to: 0
  7010  003892  0100               	movlb	0	; () banked
  7011  003894  29D4               	incf	sqrt@exp& (0+255),w,b
  7012  003896  0100               	movlb	0	; () banked
  7013  003898  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7014  00389A  A4D8               	btfss	status,2,c
  7015  00389C  D009               	goto	l7069
  7016  00389E                     l7067:
  7017                           
  7018                           ; BSR set to: 0
  7019  00389E  0E00               	movlw	0
  7020  0038A0  0100               	movlb	0	; () banked
  7021  0038A2  6FDA               	movwf	sqrt@frac& (0+255),b
  7022  0038A4  0E00               	movlw	0
  7023  0038A6  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  7024  0038A8  0E00               	movlw	0
  7025  0038AA  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  7026  0038AC  0E00               	movlw	0
  7027  0038AE  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  7028  0038B0                     l7069:
  7029                           
  7030                           ; BSR set to: 0
  7031  0038B0  0100               	movlb	0	; () banked
  7032  0038B2  51D4               	movf	sqrt@exp& (0+255),w,b
  7033  0038B4  0100               	movlb	0	; () banked
  7034  0038B6  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7035  0038B8  A4D8               	btfss	status,2,c
  7036  0038BA  D00A               	goto	l7075
  7037                           
  7038                           ; BSR set to: 0
  7039  0038BC  0E00               	movlw	0
  7040  0038BE  0100               	movlb	0	; () banked
  7041  0038C0  6FC1               	movwf	?_sqrt& (0+255),b
  7042  0038C2  0E00               	movlw	0
  7043  0038C4  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  7044  0038C6  0E00               	movlw	0
  7045  0038C8  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  7046  0038CA  0E00               	movlw	0
  7047  0038CC  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  7048                           
  7049                           ; BSR set to: 0
  7050  0038CE  0012               	return	
  7051  0038D0                     l7075:
  7052                           
  7053                           ; BSR set to: 0
  7054  0038D0  0100               	movlb	0	; () banked
  7055  0038D2  51C9               	movf	sqrt@sign& (0+255),w,b
  7056  0038D4  0100               	movlb	0	; () banked
  7057  0038D6  B4D8               	btfsc	status,2,c
  7058  0038D8  D01C               	goto	l7087
  7059                           
  7060                           ; BSR set to: 0
  7061  0038DA  0E00               	movlw	0
  7062  0038DC  0100               	movlb	0	; () banked
  7063  0038DE  6FD6               	movwf	sqrt@root& (0+255),b
  7064  0038E0  0E00               	movlw	0
  7065  0038E2  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  7066  0038E4  0E40               	movlw	64
  7067  0038E6  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  7068  0038E8  0E00               	movlw	0
  7069  0038EA  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7070                           
  7071                           ; BSR set to: 0
  7072  0038EC  0100               	movlb	0	; () banked
  7073  0038EE  0E80               	movlw	128
  7074  0038F0  13D8               	iorwf	(sqrt@root+2)& (0+255),f,b
  7075  0038F2  0EFF               	movlw	255
  7076  0038F4  13D9               	iorwf	(sqrt@root+3)& (0+255),f,b
  7077                           
  7078                           ; BSR set to: 0
  7079  0038F6  0E00               	movlw	0
  7080  0038F8  0101               	movlb	1	; () banked
  7081  0038FA  6F49               	movwf	(_errno+1)& (0+255),b
  7082  0038FC  0E21               	movlw	33
  7083  0038FE  6F48               	movwf	_errno& (0+255),b
  7084                           
  7085                           ; BSR set to: 1
  7086  003900  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  7087  003904  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7088  003908  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7089  00390C  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7090                           
  7091                           ; BSR set to: 1
  7092  003910  0012               	return	
  7093  003912                     l7087:
  7094  003912  0100               	movlb	0	; () banked
  7095  003914  29D4               	incf	sqrt@exp& (0+255),w,b
  7096  003916  0100               	movlb	0	; () banked
  7097  003918  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7098  00391A  A4D8               	btfss	status,2,c
  7099  00391C  D012               	goto	l7095
  7100                           
  7101                           ; BSR set to: 0
  7102  00391E  0E00               	movlw	0
  7103  003920  0100               	movlb	0	; () banked
  7104  003922  6FD6               	movwf	sqrt@root& (0+255),b
  7105  003924  0E00               	movlw	0
  7106  003926  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  7107  003928  0E80               	movlw	128
  7108  00392A  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  7109  00392C  0E7F               	movlw	127
  7110  00392E  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7111                           
  7112                           ; BSR set to: 0
  7113  003930  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  7114  003934  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7115  003938  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7116  00393C  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7117                           
  7118                           ; BSR set to: 0
  7119  003940  0012               	return	
  7120  003942                     l7095:
  7121                           
  7122                           ; BSR set to: 0
  7123  003942  0100               	movlb	0	; () banked
  7124  003944  0E81               	movlw	129
  7125  003946  27D4               	addwf	sqrt@exp& (0+255),f,b
  7126  003948  0EFF               	movlw	255
  7127  00394A  23D5               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7128  00394C  0100               	movlb	0	; () banked
  7129  00394E  51D4               	movf	sqrt@exp& (0+255),w,b
  7130  003950  0B01               	andlw	1
  7131  003952  0100               	movlb	0	; () banked
  7132  003954  6FCF               	movwf	sqrt@p& (0+255),b
  7133  003956  0100               	movlb	0	; () banked
  7134  003958  35D5               	rlcf	(sqrt@exp+1)& (0+255),w,b
  7135  00395A  33D5               	rrcf	(sqrt@exp+1)& (0+255),f,b
  7136  00395C  33D4               	rrcf	sqrt@exp& (0+255),f,b
  7137  00395E  0E7F               	movlw	127
  7138  003960  0100               	movlb	0	; () banked
  7139  003962  27D4               	addwf	sqrt@exp& (0+255),f,b
  7140  003964  0E00               	movlw	0
  7141  003966  23D5               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7142  003968  90D8               	bcf	status,0,c
  7143  00396A  0100               	movlb	0	; () banked
  7144  00396C  35DA               	rlcf	sqrt@frac& (0+255),w,b
  7145  00396E  0100               	movlb	0	; () banked
  7146  003970  6FCB               	movwf	sqrt@tfrac& (0+255),b
  7147  003972  0100               	movlb	0	; () banked
  7148  003974  35DB               	rlcf	(sqrt@frac+1)& (0+255),w,b
  7149  003976  0100               	movlb	0	; () banked
  7150  003978  6FCC               	movwf	(sqrt@tfrac+1)& (0+255),b
  7151  00397A  0100               	movlb	0	; () banked
  7152  00397C  35DC               	rlcf	(sqrt@frac+2)& (0+255),w,b
  7153  00397E  0100               	movlb	0	; () banked
  7154  003980  6FCD               	movwf	(sqrt@tfrac+2)& (0+255),b
  7155  003982  0100               	movlb	0	; () banked
  7156  003984  35DD               	rlcf	(sqrt@frac+3)& (0+255),w,b
  7157  003986  0100               	movlb	0	; () banked
  7158  003988  6FCE               	movwf	(sqrt@tfrac+3)& (0+255),b
  7159                           
  7160                           ; BSR set to: 0
  7161  00398A  0E00               	movlw	0
  7162  00398C  0100               	movlb	0	; () banked
  7163  00398E  6FDA               	movwf	sqrt@frac& (0+255),b
  7164  003990  0E00               	movlw	0
  7165  003992  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  7166  003994  0E00               	movlw	0
  7167  003996  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  7168  003998  0E00               	movlw	0
  7169  00399A  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  7170                           
  7171                           ; BSR set to: 0
  7172  00399C  0E00               	movlw	0
  7173  00399E  0100               	movlb	0	; () banked
  7174  0039A0  6FD0               	movwf	sqrt@grs& (0+255),b
  7175  0039A2  0E00               	movlw	0
  7176  0039A4  6FD1               	movwf	(sqrt@grs+1)& (0+255),b
  7177  0039A6  0E00               	movlw	0
  7178  0039A8  6FD2               	movwf	(sqrt@grs+2)& (0+255),b
  7179  0039AA  0E01               	movlw	1
  7180  0039AC  6FD3               	movwf	(sqrt@grs+3)& (0+255),b
  7181                           
  7182                           ; BSR set to: 0
  7183  0039AE  0100               	movlb	0	; () banked
  7184  0039B0  51CF               	movf	sqrt@p& (0+255),w,b
  7185  0039B2  0100               	movlb	0	; () banked
  7186  0039B4  B4D8               	btfsc	status,2,c
  7187  0039B6  D006               	goto	l7105
  7188                           
  7189                           ; BSR set to: 0
  7190  0039B8  0100               	movlb	0	; () banked
  7191  0039BA  90D8               	bcf	status,0,c
  7192  0039BC  37CB               	rlcf	sqrt@tfrac& (0+255),f,b
  7193  0039BE  37CC               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7194  0039C0  37CD               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7195  0039C2  37CE               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7196  0039C4                     l7105:
  7197                           
  7198                           ; BSR set to: 0
  7199  0039C4  0E00               	movlw	0
  7200  0039C6  0100               	movlb	0	; () banked
  7201  0039C8  6FCA               	movwf	sqrt@i& (0+255),b
  7202  0039CA  D07E               	goto	l7119
  7203  0039CC                     l7107:
  7204                           
  7205                           ; BSR set to: 0
  7206  0039CC  0100               	movlb	0	; () banked
  7207  0039CE  51D0               	movf	sqrt@grs& (0+255),w,b
  7208  0039D0  0100               	movlb	0	; () banked
  7209  0039D2  13DA               	iorwf	sqrt@frac& (0+255),f,b
  7210  0039D4  0100               	movlb	0	; () banked
  7211  0039D6  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7212  0039D8  0100               	movlb	0	; () banked
  7213  0039DA  13DB               	iorwf	(sqrt@frac+1)& (0+255),f,b
  7214  0039DC  0100               	movlb	0	; () banked
  7215  0039DE  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7216  0039E0  0100               	movlb	0	; () banked
  7217  0039E2  13DC               	iorwf	(sqrt@frac+2)& (0+255),f,b
  7218  0039E4  0100               	movlb	0	; () banked
  7219  0039E6  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7220  0039E8  0100               	movlb	0	; () banked
  7221  0039EA  13DD               	iorwf	(sqrt@frac+3)& (0+255),f,b
  7222  0039EC  0100               	movlb	0	; () banked
  7223  0039EE  51DA               	movf	sqrt@frac& (0+255),w,b
  7224  0039F0  0100               	movlb	0	; () banked
  7225  0039F2  5DCB               	subwf	sqrt@tfrac& (0+255),w,b
  7226  0039F4  0100               	movlb	0	; () banked
  7227  0039F6  51DB               	movf	(sqrt@frac+1)& (0+255),w,b
  7228  0039F8  0100               	movlb	0	; () banked
  7229  0039FA  59CC               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  7230  0039FC  0100               	movlb	0	; () banked
  7231  0039FE  51DC               	movf	(sqrt@frac+2)& (0+255),w,b
  7232  003A00  0100               	movlb	0	; () banked
  7233  003A02  59CD               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  7234  003A04  0100               	movlb	0	; () banked
  7235  003A06  51DD               	movf	(sqrt@frac+3)& (0+255),w,b
  7236  003A08  0100               	movlb	0	; () banked
  7237  003A0A  59CE               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  7238  003A0C  A0D8               	btfss	status,0,c
  7239  003A0E  D021               	goto	l7111
  7240                           
  7241                           ; BSR set to: 0
  7242  003A10  0100               	movlb	0	; () banked
  7243  003A12  51DA               	movf	sqrt@frac& (0+255),w,b
  7244  003A14  0100               	movlb	0	; () banked
  7245  003A16  5FCB               	subwf	sqrt@tfrac& (0+255),f,b
  7246  003A18  0100               	movlb	0	; () banked
  7247  003A1A  51DB               	movf	(sqrt@frac+1)& (0+255),w,b
  7248  003A1C  0100               	movlb	0	; () banked
  7249  003A1E  5BCC               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  7250  003A20  0100               	movlb	0	; () banked
  7251  003A22  51DC               	movf	(sqrt@frac+2)& (0+255),w,b
  7252  003A24  0100               	movlb	0	; () banked
  7253  003A26  5BCD               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  7254  003A28  0100               	movlb	0	; () banked
  7255  003A2A  51DD               	movf	(sqrt@frac+3)& (0+255),w,b
  7256  003A2C  0100               	movlb	0	; () banked
  7257  003A2E  5BCE               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  7258  003A30  0100               	movlb	0	; () banked
  7259  003A32  51D0               	movf	sqrt@grs& (0+255),w,b
  7260  003A34  0100               	movlb	0	; () banked
  7261  003A36  27DA               	addwf	sqrt@frac& (0+255),f,b
  7262  003A38  0100               	movlb	0	; () banked
  7263  003A3A  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7264  003A3C  0100               	movlb	0	; () banked
  7265  003A3E  23DB               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7266  003A40  0100               	movlb	0	; () banked
  7267  003A42  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7268  003A44  0100               	movlb	0	; () banked
  7269  003A46  23DC               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7270  003A48  0100               	movlb	0	; () banked
  7271  003A4A  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7272  003A4C  0100               	movlb	0	; () banked
  7273  003A4E  23DD               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7274  003A50  D01D               	goto	l7113
  7275  003A52                     l7111:
  7276                           
  7277                           ; BSR set to: 0
  7278  003A52  C0D0  F0C5         	movff	sqrt@grs,??_sqrt
  7279  003A56  C0D1  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7280  003A5A  C0D2  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7281  003A5E  C0D3  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7282  003A62  0100               	movlb	0	; () banked
  7283  003A64  1FC5               	comf	??_sqrt& (0+255),f,b
  7284  003A66  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  7285  003A68  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  7286  003A6A  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  7287  003A6C  0100               	movlb	0	; () banked
  7288  003A6E  51C5               	movf	??_sqrt& (0+255),w,b
  7289  003A70  0100               	movlb	0	; () banked
  7290  003A72  17DA               	andwf	sqrt@frac& (0+255),f,b
  7291  003A74  0100               	movlb	0	; () banked
  7292  003A76  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  7293  003A78  0100               	movlb	0	; () banked
  7294  003A7A  17DB               	andwf	(sqrt@frac+1)& (0+255),f,b
  7295  003A7C  0100               	movlb	0	; () banked
  7296  003A7E  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  7297  003A80  0100               	movlb	0	; () banked
  7298  003A82  17DC               	andwf	(sqrt@frac+2)& (0+255),f,b
  7299  003A84  0100               	movlb	0	; () banked
  7300  003A86  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  7301  003A88  0100               	movlb	0	; () banked
  7302  003A8A  17DD               	andwf	(sqrt@frac+3)& (0+255),f,b
  7303  003A8C                     l7113:
  7304                           
  7305                           ; BSR set to: 0
  7306  003A8C  C0D0  F0C5         	movff	sqrt@grs,??_sqrt
  7307  003A90  C0D1  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7308  003A94  C0D2  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7309  003A98  C0D3  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7310  003A9C  0100               	movlb	0	; () banked
  7311  003A9E  90D8               	bcf	status,0,c
  7312  003AA0  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7313  003AA2  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7314  003AA4  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7315  003AA6  33C5               	rrcf	??_sqrt& (0+255),f,b
  7316  003AA8  C0C5  F0D0         	movff	??_sqrt,sqrt@grs
  7317  003AAC  C0C6  F0D1         	movff	??_sqrt+1,sqrt@grs+1
  7318  003AB0  C0C7  F0D2         	movff	??_sqrt+2,sqrt@grs+2
  7319  003AB4  C0C8  F0D3         	movff	??_sqrt+3,sqrt@grs+3
  7320                           
  7321                           ; BSR set to: 0
  7322  003AB8  0100               	movlb	0	; () banked
  7323  003ABA  90D8               	bcf	status,0,c
  7324  003ABC  37CB               	rlcf	sqrt@tfrac& (0+255),f,b
  7325  003ABE  37CC               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7326  003AC0  37CD               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7327  003AC2  37CE               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7328                           
  7329                           ; BSR set to: 0
  7330  003AC4  0100               	movlb	0	; () banked
  7331  003AC6  2BCA               	incf	sqrt@i& (0+255),f,b
  7332  003AC8                     l7119:
  7333                           
  7334                           ; BSR set to: 0
  7335  003AC8  0E18               	movlw	24
  7336  003ACA  0100               	movlb	0	; () banked
  7337  003ACC  65CA               	cpfsgt	sqrt@i& (0+255),b
  7338  003ACE  D77E               	goto	l7107
  7339                           
  7340                           ; BSR set to: 0
  7341                           
  7342                           ; BSR set to: 0
  7343  003AD0  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7344  003AD4  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7345  003AD8  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7346  003ADC  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7347  003AE0  0100               	movlb	0	; () banked
  7348  003AE2  90D8               	bcf	status,0,c
  7349  003AE4  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7350  003AE6  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7351  003AE8  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7352  003AEA  33C5               	rrcf	??_sqrt& (0+255),f,b
  7353  003AEC  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7354  003AF0  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7355  003AF4  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7356  003AF8  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7357                           
  7358                           ; BSR set to: 0
  7359  003AFC  0E01               	movlw	1
  7360  003AFE  0100               	movlb	0	; () banked
  7361  003B00  15DA               	andwf	sqrt@frac& (0+255),w,b
  7362  003B02  0100               	movlb	0	; () banked
  7363  003B04  6FD0               	movwf	sqrt@grs& (0+255),b
  7364  003B06  0E00               	movlw	0
  7365  003B08  0100               	movlb	0	; () banked
  7366  003B0A  15DB               	andwf	(sqrt@frac+1)& (0+255),w,b
  7367  003B0C  0100               	movlb	0	; () banked
  7368  003B0E  6FD1               	movwf	(sqrt@grs+1)& (0+255),b
  7369  003B10  0E00               	movlw	0
  7370  003B12  0100               	movlb	0	; () banked
  7371  003B14  15DC               	andwf	(sqrt@frac+2)& (0+255),w,b
  7372  003B16  0100               	movlb	0	; () banked
  7373  003B18  6FD2               	movwf	(sqrt@grs+2)& (0+255),b
  7374  003B1A  0E00               	movlw	0
  7375  003B1C  0100               	movlb	0	; () banked
  7376  003B1E  15DD               	andwf	(sqrt@frac+3)& (0+255),w,b
  7377  003B20  0100               	movlb	0	; () banked
  7378  003B22  6FD3               	movwf	(sqrt@grs+3)& (0+255),b
  7379                           
  7380                           ; BSR set to: 0
  7381  003B24  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7382  003B28  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7383  003B2C  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7384  003B30  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7385  003B34  0100               	movlb	0	; () banked
  7386  003B36  90D8               	bcf	status,0,c
  7387  003B38  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7388  003B3A  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7389  003B3C  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7390  003B3E  33C5               	rrcf	??_sqrt& (0+255),f,b
  7391  003B40  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7392  003B44  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7393  003B48  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7394  003B4C  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7395  003B50  0100               	movlb	0	; () banked
  7396  003B52  51D0               	movf	sqrt@grs& (0+255),w,b
  7397  003B54  0100               	movlb	0	; () banked
  7398  003B56  27DA               	addwf	sqrt@frac& (0+255),f,b
  7399  003B58  0100               	movlb	0	; () banked
  7400  003B5A  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7401  003B5C  0100               	movlb	0	; () banked
  7402  003B5E  23DB               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7403  003B60  0100               	movlb	0	; () banked
  7404  003B62  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7405  003B64  0100               	movlb	0	; () banked
  7406  003B66  23DC               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7407  003B68  0100               	movlb	0	; () banked
  7408  003B6A  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7409  003B6C  0100               	movlb	0	; () banked
  7410  003B6E  23DD               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7411                           
  7412                           ; BSR set to: 0
  7413  003B70  0100               	movlb	0	; () banked
  7414  003B72  A1DD               	btfss	(sqrt@frac+3)& (0+255),0,b
  7415  003B74  D019               	goto	l7131
  7416                           
  7417                           ; BSR set to: 0
  7418  003B76  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7419  003B7A  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7420  003B7E  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7421  003B82  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7422  003B86  0100               	movlb	0	; () banked
  7423  003B88  90D8               	bcf	status,0,c
  7424  003B8A  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7425  003B8C  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7426  003B8E  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7427  003B90  33C5               	rrcf	??_sqrt& (0+255),f,b
  7428  003B92  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7429  003B96  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7430  003B9A  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7431  003B9E  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7432  003BA2  0100               	movlb	0	; () banked
  7433  003BA4  4BD4               	infsnz	sqrt@exp& (0+255),f,b
  7434  003BA6  2BD5               	incf	(sqrt@exp+1)& (0+255),f,b
  7435  003BA8                     l7131:
  7436                           
  7437                           ; BSR set to: 0
  7438  003BA8  0EFF               	movlw	255
  7439  003BAA  0100               	movlb	0	; () banked
  7440  003BAC  15DA               	andwf	sqrt@frac& (0+255),w,b
  7441  003BAE  0100               	movlb	0	; () banked
  7442  003BB0  6FD6               	movwf	sqrt@root& (0+255),b
  7443  003BB2  0EFF               	movlw	255
  7444  003BB4  0100               	movlb	0	; () banked
  7445  003BB6  15DB               	andwf	(sqrt@frac+1)& (0+255),w,b
  7446  003BB8  0100               	movlb	0	; () banked
  7447  003BBA  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  7448  003BBC  0E7F               	movlw	127
  7449  003BBE  0100               	movlb	0	; () banked
  7450  003BC0  15DC               	andwf	(sqrt@frac+2)& (0+255),w,b
  7451  003BC2  0100               	movlb	0	; () banked
  7452  003BC4  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  7453  003BC6  0E00               	movlw	0
  7454  003BC8  0100               	movlb	0	; () banked
  7455  003BCA  15DD               	andwf	(sqrt@frac+3)& (0+255),w,b
  7456  003BCC  0100               	movlb	0	; () banked
  7457  003BCE  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7458                           
  7459                           ; BSR set to: 0
  7460  003BD0  C0D4  F0CF         	movff	sqrt@exp,sqrt@p
  7461                           
  7462                           ; BSR set to: 0
  7463  003BD4  0100               	movlb	0	; () banked
  7464  003BD6  A1CF               	btfss	sqrt@p& (0+255),0,b
  7465  003BD8  D002               	goto	l7139
  7466                           
  7467                           ; BSR set to: 0
  7468  003BDA  0100               	movlb	0	; () banked
  7469  003BDC  8FD8               	bsf	(sqrt@root+2)& (0+255),7,b
  7470  003BDE                     l7139:
  7471                           
  7472                           ; BSR set to: 0
  7473  003BDE  0100               	movlb	0	; () banked
  7474  003BE0  90D8               	bcf	status,0,c
  7475  003BE2  31CF               	rrcf	sqrt@p& (0+255),w,b
  7476  003BE4  0100               	movlb	0	; () banked
  7477  003BE6  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7478                           
  7479                           ; BSR set to: 0
  7480  003BE8  0100               	movlb	0	; () banked
  7481  003BEA  9FD9               	bcf	(sqrt@root+3)& (0+255),7,b
  7482                           
  7483                           ; BSR set to: 0
  7484  003BEC  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  7485  003BF0  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7486  003BF4  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7487  003BF8  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7488  003BFC  0012               	return	
  7489  003BFE                     __end_of_sqrt:
  7490                           	opt stack 0
  7491                           tblptru	equ	0xFF8
  7492                           tblptrh	equ	0xFF7
  7493                           tblptrl	equ	0xFF6
  7494                           tablat	equ	0xFF5
  7495                           postinc0	equ	0xFEE
  7496                           wreg	equ	0xFE8
  7497                           postdec1	equ	0xFE5
  7498                           fsr1l	equ	0xFE1
  7499                           indf2	equ	0xFDF
  7500                           postinc2	equ	0xFDE
  7501                           postdec2	equ	0xFDD
  7502                           fsr2h	equ	0xFDA
  7503                           fsr2l	equ	0xFD9
  7504                           status	equ	0xFD8
  7505                           
  7506 ;; *************** function _atan *****************
  7507 ;; Defined at:
  7508 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;  f               4  113[BANK0 ] unsigned char 
  7511 ;; Auto vars:     Size  Location     Type
  7512 ;;  val             4   13[BANK1 ] unsigned char 
  7513 ;;  val_squared     4    9[BANK1 ] unsigned char 
  7514 ;;  x               4    4[BANK1 ] unsigned char 
  7515 ;;  y               4    0[BANK1 ] unsigned char 
  7516 ;;  recip           1    8[BANK1 ] unsigned char 
  7517 ;; Return value:  Size  Location     Type
  7518 ;;                  4  113[BANK0 ] unsigned char 
  7519 ;; Registers used:
  7520 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7521 ;; Tracked objects:
  7522 ;;		On entry : 0/0
  7523 ;;		On exit  : 0/0
  7524 ;;		Unchanged: 0/0
  7525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7526 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7527 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7529 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7530 ;;Total ram usage:       21 bytes
  7531 ;; Hardware stack levels used:    1
  7532 ;; Hardware stack levels required when called:    6
  7533 ;; This function calls:
  7534 ;;		___fladd
  7535 ;;		___fldiv
  7536 ;;		___flge
  7537 ;;		___flmul
  7538 ;;		___flneg
  7539 ;;		_eval_poly
  7540 ;;		_fabs
  7541 ;; This function is called by:
  7542 ;;		_asin
  7543 ;; This function uses a non-reentrant model
  7544 ;;
  7545                           
  7546                           	psect	text18
  7547  004C12                     __ptext18:
  7548                           	opt stack 0
  7549  004C12                     _atan:
  7550                           	opt stack 21
  7551                           
  7552                           ;incstack = 0
  7553  004C12  C0D1  F0C1         	movff	atan@f,fabs@d
  7554  004C16  C0D2  F0C2         	movff	atan@f+1,fabs@d+1
  7555  004C1A  C0D3  F0C3         	movff	atan@f+2,fabs@d+2
  7556  004C1E  C0D4  F0C4         	movff	atan@f+3,fabs@d+3
  7557  004C22  EC24  F02F         	call	_fabs	;wreg free
  7558  004C26  C0C1  F19A         	movff	?_fabs,atan@val
  7559  004C2A  C0C2  F19B         	movff	?_fabs+1,atan@val+1
  7560  004C2E  C0C3  F19C         	movff	?_fabs+2,atan@val+2
  7561  004C32  C0C4  F19D         	movff	?_fabs+3,atan@val+3
  7562  004C36  0101               	movlb	1	; () banked
  7563  004C38  519A               	movf	atan@val& (0+255),w,b
  7564  004C3A  0101               	movlb	1	; () banked
  7565  004C3C  119B               	iorwf	(atan@val+1)& (0+255),w,b
  7566  004C3E  0101               	movlb	1	; () banked
  7567  004C40  119C               	iorwf	(atan@val+2)& (0+255),w,b
  7568  004C42  0101               	movlb	1	; () banked
  7569  004C44  119D               	iorwf	(atan@val+3)& (0+255),w,b
  7570  004C46  A4D8               	btfss	status,2,c
  7571  004C48  D00A               	goto	l7159
  7572                           
  7573                           ; BSR set to: 1
  7574  004C4A  0E00               	movlw	0
  7575  004C4C  0100               	movlb	0	; () banked
  7576  004C4E  6FD1               	movwf	?_atan& (0+255),b
  7577  004C50  0E00               	movlw	0
  7578  004C52  6FD2               	movwf	(?_atan+1)& (0+255),b
  7579  004C54  0E00               	movlw	0
  7580  004C56  6FD3               	movwf	(?_atan+2)& (0+255),b
  7581  004C58  0E00               	movlw	0
  7582  004C5A  6FD4               	movwf	(?_atan+3)& (0+255),b
  7583                           
  7584                           ; BSR set to: 0
  7585  004C5C  0012               	return	
  7586  004C5E                     l7159:
  7587  004C5E  0E00               	movlw	0
  7588  004C60  0100               	movlb	0	; () banked
  7589  004C62  6FC5               	movwf	___flge@ff1& (0+255),b
  7590  004C64  0E00               	movlw	0
  7591  004C66  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  7592  004C68  0E80               	movlw	128
  7593  004C6A  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  7594  004C6C  0E3F               	movlw	63
  7595  004C6E  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  7596  004C70  C19A  F0C9         	movff	atan@val,___flge@ff2
  7597  004C74  C19B  F0CA         	movff	atan@val+1,___flge@ff2+1
  7598  004C78  C19C  F0CB         	movff	atan@val+2,___flge@ff2+2
  7599  004C7C  C19D  F0CC         	movff	atan@val+3,___flge@ff2+3
  7600  004C80  ECD7  F029         	call	___flge	;wreg free
  7601  004C84  0100               	movlb	0	; () banked
  7602  004C86  B0D8               	btfsc	status,0,c
  7603  004C88  D002               	goto	u9190
  7604  004C8A  0E01               	movlw	1
  7605  004C8C  D001               	goto	u9200
  7606  004C8E                     u9190:
  7607  004C8E  0E00               	movlw	0
  7608  004C90                     u9200:
  7609  004C90  0101               	movlb	1	; () banked
  7610  004C92  6F95               	movwf	atan@recip& (0+255),b
  7611  004C94  0101               	movlb	1	; () banked
  7612  004C96  5195               	movf	atan@recip& (0+255),w,b
  7613  004C98  B4D8               	btfsc	status,2,c
  7614  004C9A  D01B               	goto	l7163
  7615                           
  7616                           ; BSR set to: 1
  7617  004C9C  0E00               	movlw	0
  7618  004C9E  0100               	movlb	0	; () banked
  7619  004CA0  6F77               	movwf	___fldiv@b& (0+255),b
  7620  004CA2  0E00               	movlw	0
  7621  004CA4  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7622  004CA6  0E80               	movlw	128
  7623  004CA8  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7624  004CAA  0E3F               	movlw	63
  7625  004CAC  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7626  004CAE  C19A  F07B         	movff	atan@val,___fldiv@a
  7627  004CB2  C19B  F07C         	movff	atan@val+1,___fldiv@a+1
  7628  004CB6  C19C  F07D         	movff	atan@val+2,___fldiv@a+2
  7629  004CBA  C19D  F07E         	movff	atan@val+3,___fldiv@a+3
  7630  004CBE  ECFF  F01D         	call	___fldiv	;wreg free
  7631  004CC2  C077  F19A         	movff	?___fldiv,atan@val
  7632  004CC6  C078  F19B         	movff	?___fldiv+1,atan@val+1
  7633  004CCA  C079  F19C         	movff	?___fldiv+2,atan@val+2
  7634  004CCE  C07A  F19D         	movff	?___fldiv+3,atan@val+3
  7635  004CD2                     l7163:
  7636  004CD2  C19A  F090         	movff	atan@val,___flmul@b
  7637  004CD6  C19B  F091         	movff	atan@val+1,___flmul@b+1
  7638  004CDA  C19C  F092         	movff	atan@val+2,___flmul@b+2
  7639  004CDE  C19D  F093         	movff	atan@val+3,___flmul@b+3
  7640  004CE2  C19A  F094         	movff	atan@val,___flmul@a
  7641  004CE6  C19B  F095         	movff	atan@val+1,___flmul@a+1
  7642  004CEA  C19C  F096         	movff	atan@val+2,___flmul@a+2
  7643  004CEE  C19D  F097         	movff	atan@val+3,___flmul@a+3
  7644  004CF2  EC91  F017         	call	___flmul	;wreg free
  7645  004CF6  C090  F196         	movff	?___flmul,atan@val_squared
  7646  004CFA  C091  F197         	movff	?___flmul+1,atan@val_squared+1
  7647  004CFE  C092  F198         	movff	?___flmul+2,atan@val_squared+2
  7648  004D02  C093  F199         	movff	?___flmul+3,atan@val_squared+3
  7649  004D06  C196  F0BD         	movff	atan@val_squared,eval_poly@x
  7650  004D0A  C197  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7651  004D0E  C198  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7652  004D12  C199  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7653  004D16  0E19               	movlw	low atan@coeff_b
  7654  004D18  0100               	movlb	0	; () banked
  7655  004D1A  6FC1               	movwf	eval_poly@d& (0+255),b
  7656  004D1C  0E0D               	movlw	high atan@coeff_b
  7657  004D1E  0100               	movlb	0	; () banked
  7658  004D20  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7659  004D22  0E00               	movlw	0
  7660  004D24  0100               	movlb	0	; () banked
  7661  004D26  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7662  004D28  0E04               	movlw	4
  7663  004D2A  6FC3               	movwf	eval_poly@n& (0+255),b
  7664  004D2C  ECCC  F02B         	call	_eval_poly	;wreg free
  7665  004D30  C0BD  F18D         	movff	?_eval_poly,atan@y
  7666  004D34  C0BE  F18E         	movff	?_eval_poly+1,atan@y+1
  7667  004D38  C0BF  F18F         	movff	?_eval_poly+2,atan@y+2
  7668  004D3C  C0C0  F190         	movff	?_eval_poly+3,atan@y+3
  7669  004D40  C196  F0BD         	movff	atan@val_squared,eval_poly@x
  7670  004D44  C197  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7671  004D48  C198  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7672  004D4C  C199  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7673  004D50  0E01               	movlw	low atan@coeff_a
  7674  004D52  0100               	movlb	0	; () banked
  7675  004D54  6FC1               	movwf	eval_poly@d& (0+255),b
  7676  004D56  0E0D               	movlw	high atan@coeff_a
  7677  004D58  0100               	movlb	0	; () banked
  7678  004D5A  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7679  004D5C  0E00               	movlw	0
  7680  004D5E  0100               	movlb	0	; () banked
  7681  004D60  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7682  004D62  0E05               	movlw	5
  7683  004D64  6FC3               	movwf	eval_poly@n& (0+255),b
  7684  004D66  ECCC  F02B         	call	_eval_poly	;wreg free
  7685  004D6A  C0BD  F191         	movff	?_eval_poly,atan@x
  7686  004D6E  C0BE  F192         	movff	?_eval_poly+1,atan@x+1
  7687  004D72  C0BF  F193         	movff	?_eval_poly+2,atan@x+2
  7688  004D76  C0C0  F194         	movff	?_eval_poly+3,atan@x+3
  7689  004D7A  C19A  F090         	movff	atan@val,___flmul@b
  7690  004D7E  C19B  F091         	movff	atan@val+1,___flmul@b+1
  7691  004D82  C19C  F092         	movff	atan@val+2,___flmul@b+2
  7692  004D86  C19D  F093         	movff	atan@val+3,___flmul@b+3
  7693  004D8A  C18D  F07B         	movff	atan@y,___fldiv@a
  7694  004D8E  C18E  F07C         	movff	atan@y+1,___fldiv@a+1
  7695  004D92  C18F  F07D         	movff	atan@y+2,___fldiv@a+2
  7696  004D96  C190  F07E         	movff	atan@y+3,___fldiv@a+3
  7697  004D9A  C191  F077         	movff	atan@x,___fldiv@b
  7698  004D9E  C192  F078         	movff	atan@x+1,___fldiv@b+1
  7699  004DA2  C193  F079         	movff	atan@x+2,___fldiv@b+2
  7700  004DA6  C194  F07A         	movff	atan@x+3,___fldiv@b+3
  7701  004DAA  ECFF  F01D         	call	___fldiv	;wreg free
  7702  004DAE  C077  F094         	movff	?___fldiv,___flmul@a
  7703  004DB2  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  7704  004DB6  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  7705  004DBA  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  7706  004DBE  EC91  F017         	call	___flmul	;wreg free
  7707  004DC2  C090  F19A         	movff	?___flmul,atan@val
  7708  004DC6  C091  F19B         	movff	?___flmul+1,atan@val+1
  7709  004DCA  C092  F19C         	movff	?___flmul+2,atan@val+2
  7710  004DCE  C093  F19D         	movff	?___flmul+3,atan@val+3
  7711  004DD2  0101               	movlb	1	; () banked
  7712  004DD4  5195               	movf	atan@recip& (0+255),w,b
  7713  004DD6  0101               	movlb	1	; () banked
  7714  004DD8  B4D8               	btfsc	status,2,c
  7715  004DDA  D025               	goto	l7175
  7716                           
  7717                           ; BSR set to: 1
  7718  004DDC  C19A  F0BD         	movff	atan@val,___flneg@f1
  7719  004DE0  C19B  F0BE         	movff	atan@val+1,___flneg@f1+1
  7720  004DE4  C19C  F0BF         	movff	atan@val+2,___flneg@f1+2
  7721  004DE8  C19D  F0C0         	movff	atan@val+3,___flneg@f1+3
  7722  004DEC  EC43  F02F         	call	___flneg	;wreg free
  7723  004DF0  C0BD  F0A9         	movff	?___flneg,___fladd@b
  7724  004DF4  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  7725  004DF8  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  7726  004DFC  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  7727  004E00  0EDB               	movlw	219
  7728  004E02  0100               	movlb	0	; () banked
  7729  004E04  6FAD               	movwf	___fladd@a& (0+255),b
  7730  004E06  0E0F               	movlw	15
  7731  004E08  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  7732  004E0A  0EC9               	movlw	201
  7733  004E0C  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  7734  004E0E  0E3F               	movlw	63
  7735  004E10  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  7736  004E12  EC3D  F015         	call	___fladd	;wreg free
  7737  004E16  C0A9  F19A         	movff	?___fladd,atan@val
  7738  004E1A  C0AA  F19B         	movff	?___fladd+1,atan@val+1
  7739  004E1E  C0AB  F19C         	movff	?___fladd+2,atan@val+2
  7740  004E22  C0AC  F19D         	movff	?___fladd+3,atan@val+3
  7741  004E26                     l7175:
  7742  004E26  0100               	movlb	0	; () banked
  7743  004E28  BFD4               	btfsc	(atan@f+3)& (0+255),7,b
  7744  004E2A  D009               	goto	l7179
  7745                           
  7746                           ; BSR set to: 0
  7747  004E2C  C19A  F0D1         	movff	atan@val,?_atan
  7748  004E30  C19B  F0D2         	movff	atan@val+1,?_atan+1
  7749  004E34  C19C  F0D3         	movff	atan@val+2,?_atan+2
  7750  004E38  C19D  F0D4         	movff	atan@val+3,?_atan+3
  7751  004E3C  0012               	return	
  7752  004E3E                     l7179:
  7753                           
  7754                           ; BSR set to: 0
  7755  004E3E  C19A  F0BD         	movff	atan@val,___flneg@f1
  7756  004E42  C19B  F0BE         	movff	atan@val+1,___flneg@f1+1
  7757  004E46  C19C  F0BF         	movff	atan@val+2,___flneg@f1+2
  7758  004E4A  C19D  F0C0         	movff	atan@val+3,___flneg@f1+3
  7759  004E4E  EC43  F02F         	call	___flneg	;wreg free
  7760  004E52  C0BD  F0D1         	movff	?___flneg,?_atan
  7761  004E56  C0BE  F0D2         	movff	?___flneg+1,?_atan+1
  7762  004E5A  C0BF  F0D3         	movff	?___flneg+2,?_atan+2
  7763  004E5E  C0C0  F0D4         	movff	?___flneg+3,?_atan+3
  7764  004E62  0012               	return	
  7765  004E64                     __end_of_atan:
  7766                           	opt stack 0
  7767                           tblptru	equ	0xFF8
  7768                           tblptrh	equ	0xFF7
  7769                           tblptrl	equ	0xFF6
  7770                           tablat	equ	0xFF5
  7771                           postinc0	equ	0xFEE
  7772                           wreg	equ	0xFE8
  7773                           postdec1	equ	0xFE5
  7774                           fsr1l	equ	0xFE1
  7775                           indf2	equ	0xFDF
  7776                           postinc2	equ	0xFDE
  7777                           postdec2	equ	0xFDD
  7778                           fsr2h	equ	0xFDA
  7779                           fsr2l	equ	0xFD9
  7780                           status	equ	0xFD8
  7781                           
  7782 ;; *************** function _fabs *****************
  7783 ;; Defined at:
  7784 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  7785 ;; Parameters:    Size  Location     Type
  7786 ;;  d               4   97[BANK0 ] unsigned char 
  7787 ;; Auto vars:     Size  Location     Type
  7788 ;;		None
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  4   97[BANK0 ] unsigned char 
  7791 ;; Registers used:
  7792 ;;		wreg, status,2, status,0, cstack
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7798 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7801 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7802 ;;Total ram usage:        4 bytes
  7803 ;; Hardware stack levels used:    1
  7804 ;; Hardware stack levels required when called:    5
  7805 ;; This function calls:
  7806 ;;		___flneg
  7807 ;; This function is called by:
  7808 ;;		_asin
  7809 ;;		_atan
  7810 ;; This function uses a non-reentrant model
  7811 ;;
  7812                           
  7813                           	psect	text19
  7814  005E48                     __ptext19:
  7815                           	opt stack 0
  7816  005E48                     _fabs:
  7817                           	opt stack 22
  7818                           
  7819                           ;incstack = 0
  7820  005E48  0100               	movlb	0	; () banked
  7821  005E4A  AFC4               	btfss	(fabs@d+3)& (0+255),7,b
  7822  005E4C  D013               	goto	l1071
  7823                           
  7824                           ; BSR set to: 0
  7825  005E4E  C0C1  F0BD         	movff	fabs@d,___flneg@f1
  7826  005E52  C0C2  F0BE         	movff	fabs@d+1,___flneg@f1+1
  7827  005E56  C0C3  F0BF         	movff	fabs@d+2,___flneg@f1+2
  7828  005E5A  C0C4  F0C0         	movff	fabs@d+3,___flneg@f1+3
  7829  005E5E  EC43  F02F         	call	___flneg	;wreg free
  7830  005E62  C0BD  F0C1         	movff	?___flneg,?_fabs
  7831  005E66  C0BE  F0C2         	movff	?___flneg+1,?_fabs+1
  7832  005E6A  C0BF  F0C3         	movff	?___flneg+2,?_fabs+2
  7833  005E6E  C0C0  F0C4         	movff	?___flneg+3,?_fabs+3
  7834  005E72  0012               	return	
  7835  005E74                     l1071:
  7836                           
  7837                           ; BSR set to: 0
  7838  005E74  C0C1  F0C1         	movff	fabs@d,?_fabs
  7839  005E78  C0C2  F0C2         	movff	fabs@d+1,?_fabs+1
  7840  005E7C  C0C3  F0C3         	movff	fabs@d+2,?_fabs+2
  7841  005E80  C0C4  F0C4         	movff	fabs@d+3,?_fabs+3
  7842  005E84  0012               	return		;funcret
  7843  005E86                     __end_of_fabs:
  7844                           	opt stack 0
  7845                           tblptru	equ	0xFF8
  7846                           tblptrh	equ	0xFF7
  7847                           tblptrl	equ	0xFF6
  7848                           tablat	equ	0xFF5
  7849                           postinc0	equ	0xFEE
  7850                           wreg	equ	0xFE8
  7851                           postdec1	equ	0xFE5
  7852                           fsr1l	equ	0xFE1
  7853                           indf2	equ	0xFDF
  7854                           postinc2	equ	0xFDE
  7855                           postdec2	equ	0xFDD
  7856                           fsr2h	equ	0xFDA
  7857                           fsr2l	equ	0xFD9
  7858                           status	equ	0xFD8
  7859                           
  7860 ;; *************** function ___flneg *****************
  7861 ;; Defined at:
  7862 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;  f1              4   93[BANK0 ] unsigned char 
  7865 ;; Auto vars:     Size  Location     Type
  7866 ;;		None
  7867 ;; Return value:  Size  Location     Type
  7868 ;;                  4   93[BANK0 ] unsigned char 
  7869 ;; Registers used:
  7870 ;;		wreg, status,2, status,0
  7871 ;; Tracked objects:
  7872 ;;		On entry : 0/0
  7873 ;;		On exit  : 0/0
  7874 ;;		Unchanged: 0/0
  7875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7876 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7879 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7880 ;;Total ram usage:        4 bytes
  7881 ;; Hardware stack levels used:    1
  7882 ;; Hardware stack levels required when called:    4
  7883 ;; This function calls:
  7884 ;;		Nothing
  7885 ;; This function is called by:
  7886 ;;		_park_routine
  7887 ;;		_matematica
  7888 ;;		_asin
  7889 ;;		_atan
  7890 ;;		_fabs
  7891 ;;		_sin
  7892 ;; This function uses a non-reentrant model
  7893 ;;
  7894                           
  7895                           	psect	text20
  7896  005E86                     __ptext20:
  7897                           	opt stack 0
  7898  005E86                     ___flneg:
  7899                           	opt stack 22
  7900                           
  7901                           ;incstack = 0
  7902  005E86  0100               	movlb	0	; () banked
  7903  005E88  51BD               	movf	___flneg@f1& (0+255),w,b
  7904  005E8A  0100               	movlb	0	; () banked
  7905  005E8C  11BE               	iorwf	(___flneg@f1+1)& (0+255),w,b
  7906  005E8E  0100               	movlb	0	; () banked
  7907  005E90  11BF               	iorwf	(___flneg@f1+2)& (0+255),w,b
  7908  005E92  0100               	movlb	0	; () banked
  7909  005E94  11C0               	iorwf	(___flneg@f1+3)& (0+255),w,b
  7910  005E96  B4D8               	btfsc	status,2,c
  7911  005E98  D009               	goto	l6523
  7912                           
  7913                           ; BSR set to: 0
  7914  005E9A  0E00               	movlw	0
  7915  005E9C  0100               	movlb	0	; () banked
  7916  005E9E  1BBD               	xorwf	___flneg@f1& (0+255),f,b
  7917  005EA0  0E00               	movlw	0
  7918  005EA2  1BBE               	xorwf	(___flneg@f1+1)& (0+255),f,b
  7919  005EA4  0E00               	movlw	0
  7920  005EA6  1BBF               	xorwf	(___flneg@f1+2)& (0+255),f,b
  7921  005EA8  0E80               	movlw	128
  7922  005EAA  1BC0               	xorwf	(___flneg@f1+3)& (0+255),f,b
  7923  005EAC                     l6523:
  7924                           
  7925                           ; BSR set to: 0
  7926  005EAC  C0BD  F0BD         	movff	___flneg@f1,?___flneg
  7927  005EB0  C0BE  F0BE         	movff	___flneg@f1+1,?___flneg+1
  7928  005EB4  C0BF  F0BF         	movff	___flneg@f1+2,?___flneg+2
  7929  005EB8  C0C0  F0C0         	movff	___flneg@f1+3,?___flneg+3
  7930  005EBC  0012               	return	
  7931  005EBE                     __end_of___flneg:
  7932                           	opt stack 0
  7933                           tblptru	equ	0xFF8
  7934                           tblptrh	equ	0xFF7
  7935                           tblptrl	equ	0xFF6
  7936                           tablat	equ	0xFF5
  7937                           postinc0	equ	0xFEE
  7938                           wreg	equ	0xFE8
  7939                           postdec1	equ	0xFE5
  7940                           fsr1l	equ	0xFE1
  7941                           indf2	equ	0xFDF
  7942                           postinc2	equ	0xFDE
  7943                           postdec2	equ	0xFDD
  7944                           fsr2h	equ	0xFDA
  7945                           fsr2l	equ	0xFD9
  7946                           status	equ	0xFD8
  7947                           
  7948 ;; *************** function _eval_poly *****************
  7949 ;; Defined at:
  7950 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  7951 ;; Parameters:    Size  Location     Type
  7952 ;;  x               4   93[BANK0 ] unsigned char 
  7953 ;;  d               2   97[BANK0 ] PTR const 
  7954 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
  7955 ;;  n               2   99[BANK0 ] int 
  7956 ;; Auto vars:     Size  Location     Type
  7957 ;;  res             4  105[BANK0 ] int 
  7958 ;; Return value:  Size  Location     Type
  7959 ;;                  4   93[BANK0 ] int 
  7960 ;; Registers used:
  7961 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7962 ;; Tracked objects:
  7963 ;;		On entry : 0/0
  7964 ;;		On exit  : 0/0
  7965 ;;		Unchanged: 0/0
  7966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7967 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7968 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7969 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7970 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7971 ;;Total ram usage:       16 bytes
  7972 ;; Hardware stack levels used:    1
  7973 ;; Hardware stack levels required when called:    5
  7974 ;; This function calls:
  7975 ;;		___fladd
  7976 ;;		___flmul
  7977 ;; This function is called by:
  7978 ;;		_atan
  7979 ;;		_sin
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983                           	psect	text21
  7984  005798                     __ptext21:
  7985                           	opt stack 0
  7986  005798                     _eval_poly:
  7987                           	opt stack 21
  7988                           
  7989                           ; BSR set to: 0
  7990                           ;incstack = 0
  7991  005798  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  7992  00579C  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  7993  0057A0  0100               	movlb	0	; () banked
  7994  0057A2  90D8               	bcf	status,0,c
  7995  0057A4  37C5               	rlcf	??_eval_poly& (0+255),f,b
  7996  0057A6  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  7997  0057A8  0100               	movlb	0	; () banked
  7998  0057AA  90D8               	bcf	status,0,c
  7999  0057AC  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8000  0057AE  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8001  0057B0  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  8002  0057B4  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  8003  0057B8  0100               	movlb	0	; () banked
  8004  0057BA  51C5               	movf	??_eval_poly& (0+255),w,b
  8005  0057BC  0100               	movlb	0	; () banked
  8006  0057BE  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  8007  0057C0  0100               	movlb	0	; () banked
  8008  0057C2  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  8009  0057C4  0100               	movlb	0	; () banked
  8010  0057C6  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8011  0057C8  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  8012  0057CC  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  8013  0057D0                     	if	0	;tblptru may be non-zero
  8014  0057D0                     	endif
  8015  0057D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8016  0057D0  0E00               	movlw	low (__mediumconst shr (0+16))
  8017  0057D2  6EF8               	movwf	tblptru,c
  8018  0057D4                     	endif
  8019  0057D4  0009               	tblrd		*+
  8020  0057D6  CFF5 F0C9          	movff	tablat,eval_poly@res
  8021  0057DA  0009               	tblrd		*+
  8022  0057DC  CFF5 F0CA          	movff	tablat,eval_poly@res+1
  8023  0057E0  0009               	tblrd		*+
  8024  0057E2  CFF5 F0CB          	movff	tablat,eval_poly@res+2
  8025  0057E6  000A               	tblrd		*-
  8026  0057E8  CFF5 F0CC          	movff	tablat,eval_poly@res+3
  8027  0057EC  D052               	goto	l6781
  8028  0057EE                     l6779:
  8029                           
  8030                           ; BSR set to: 0
  8031  0057EE  C0C9  F094         	movff	eval_poly@res,___flmul@a
  8032  0057F2  C0CA  F095         	movff	eval_poly@res+1,___flmul@a+1
  8033  0057F6  C0CB  F096         	movff	eval_poly@res+2,___flmul@a+2
  8034  0057FA  C0CC  F097         	movff	eval_poly@res+3,___flmul@a+3
  8035  0057FE  C0BD  F090         	movff	eval_poly@x,___flmul@b
  8036  005802  C0BE  F091         	movff	eval_poly@x+1,___flmul@b+1
  8037  005806  C0BF  F092         	movff	eval_poly@x+2,___flmul@b+2
  8038  00580A  C0C0  F093         	movff	eval_poly@x+3,___flmul@b+3
  8039  00580E  EC91  F017         	call	___flmul	;wreg free
  8040  005812  C090  F0A9         	movff	?___flmul,___fladd@b
  8041  005816  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  8042  00581A  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  8043  00581E  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  8044  005822  0100               	movlb	0	; () banked
  8045  005824  07C3               	decf	eval_poly@n& (0+255),f,b
  8046  005826  A0D8               	btfss	status,0,c
  8047  005828  07C4               	decf	(eval_poly@n+1)& (0+255),f,b
  8048  00582A  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  8049  00582E  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  8050  005832  0100               	movlb	0	; () banked
  8051  005834  90D8               	bcf	status,0,c
  8052  005836  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8053  005838  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8054  00583A  0100               	movlb	0	; () banked
  8055  00583C  90D8               	bcf	status,0,c
  8056  00583E  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8057  005840  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8058  005842  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  8059  005846  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  8060  00584A  0100               	movlb	0	; () banked
  8061  00584C  51C5               	movf	??_eval_poly& (0+255),w,b
  8062  00584E  0100               	movlb	0	; () banked
  8063  005850  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  8064  005852  0100               	movlb	0	; () banked
  8065  005854  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  8066  005856  0100               	movlb	0	; () banked
  8067  005858  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8068  00585A  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  8069  00585E  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  8070  005862                     	if	0	;tblptru may be non-zero
  8071  005862                     	endif
  8072  005862                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8073  005862  0E00               	movlw	low (__mediumconst shr (0+16))
  8074  005864  6EF8               	movwf	tblptru,c
  8075  005866                     	endif
  8076  005866  0009               	tblrd		*+
  8077  005868  CFF5 F0AD          	movff	tablat,___fladd@a
  8078  00586C  0009               	tblrd		*+
  8079  00586E  CFF5 F0AE          	movff	tablat,___fladd@a+1
  8080  005872  0009               	tblrd		*+
  8081  005874  CFF5 F0AF          	movff	tablat,___fladd@a+2
  8082  005878  000A               	tblrd		*-
  8083  00587A  CFF5 F0B0          	movff	tablat,___fladd@a+3
  8084  00587E  EC3D  F015         	call	___fladd	;wreg free
  8085  005882  C0A9  F0C9         	movff	?___fladd,eval_poly@res
  8086  005886  C0AA  F0CA         	movff	?___fladd+1,eval_poly@res+1
  8087  00588A  C0AB  F0CB         	movff	?___fladd+2,eval_poly@res+2
  8088  00588E  C0AC  F0CC         	movff	?___fladd+3,eval_poly@res+3
  8089  005892                     l6781:
  8090  005892  0100               	movlb	0	; () banked
  8091  005894  51C3               	movf	eval_poly@n& (0+255),w,b
  8092  005896  0100               	movlb	0	; () banked
  8093  005898  11C4               	iorwf	(eval_poly@n+1)& (0+255),w,b
  8094  00589A  A4D8               	btfss	status,2,c
  8095  00589C  D7A8               	goto	l6779
  8096                           
  8097                           ; BSR set to: 0
  8098  00589E  C0C9  F0BD         	movff	eval_poly@res,?_eval_poly
  8099  0058A2  C0CA  F0BE         	movff	eval_poly@res+1,?_eval_poly+1
  8100  0058A6  C0CB  F0BF         	movff	eval_poly@res+2,?_eval_poly+2
  8101  0058AA  C0CC  F0C0         	movff	eval_poly@res+3,?_eval_poly+3
  8102                           
  8103                           ; BSR set to: 0
  8104  0058AE  0012               	return		;funcret
  8105  0058B0                     __end_of_eval_poly:
  8106                           	opt stack 0
  8107                           tblptru	equ	0xFF8
  8108                           tblptrh	equ	0xFF7
  8109                           tblptrl	equ	0xFF6
  8110                           tablat	equ	0xFF5
  8111                           postinc0	equ	0xFEE
  8112                           wreg	equ	0xFE8
  8113                           postdec1	equ	0xFE5
  8114                           fsr1l	equ	0xFE1
  8115                           indf2	equ	0xFDF
  8116                           postinc2	equ	0xFDE
  8117                           postdec2	equ	0xFDD
  8118                           fsr2h	equ	0xFDA
  8119                           fsr2l	equ	0xFD9
  8120                           status	equ	0xFD8
  8121                           
  8122 ;; *************** function ___flmul *****************
  8123 ;; Defined at:
  8124 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8125 ;; Parameters:    Size  Location     Type
  8126 ;;  b               4   48[BANK0 ] int 
  8127 ;;  a               4   52[BANK0 ] int 
  8128 ;; Auto vars:     Size  Location     Type
  8129 ;;  prod            4   67[BANK0 ] struct .
  8130 ;;  grs             4   62[BANK0 ] unsigned long 
  8131 ;;  temp            2   71[BANK0 ] struct .
  8132 ;;  bexp            1   66[BANK0 ] unsigned char 
  8133 ;;  aexp            1   61[BANK0 ] unsigned char 
  8134 ;;  sign            1   60[BANK0 ] unsigned char 
  8135 ;; Return value:  Size  Location     Type
  8136 ;;                  4   48[BANK0 ] unsigned char 
  8137 ;; Registers used:
  8138 ;;		wreg, status,2, status,0, prodl, prodh
  8139 ;; Tracked objects:
  8140 ;;		On entry : 0/0
  8141 ;;		On exit  : 0/0
  8142 ;;		Unchanged: 0/0
  8143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8144 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8145 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8146 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8147 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8148 ;;Total ram usage:       25 bytes
  8149 ;; Hardware stack levels used:    1
  8150 ;; Hardware stack levels required when called:    4
  8151 ;; This function calls:
  8152 ;;		Nothing
  8153 ;; This function is called by:
  8154 ;;		_parallelo
  8155 ;;		_matematica
  8156 ;;		_asin
  8157 ;;		_atan
  8158 ;;		_eval_poly
  8159 ;;		_sin
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           	psect	text22
  8164  002F22                     __ptext22:
  8165                           	opt stack 0
  8166  002F22                     ___flmul:
  8167                           	opt stack 21
  8168                           
  8169                           ; BSR set to: 0
  8170                           ;incstack = 0
  8171  002F22  0100               	movlb	0	; () banked
  8172  002F24  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8173  002F26  0B80               	andlw	128
  8174  002F28  0100               	movlb	0	; () banked
  8175  002F2A  6F9C               	movwf	___flmul@sign& (0+255),b
  8176  002F2C  0100               	movlb	0	; () banked
  8177  002F2E  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8178  002F30  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  8179  002F32  0100               	movlb	0	; () banked
  8180  002F34  6FA2               	movwf	___flmul@bexp& (0+255),b
  8181                           
  8182                           ; BSR set to: 0
  8183  002F36  0100               	movlb	0	; () banked
  8184  002F38  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  8185  002F3A  D002               	goto	l6373
  8186                           
  8187                           ; BSR set to: 0
  8188  002F3C  0100               	movlb	0	; () banked
  8189  002F3E  81A2               	bsf	___flmul@bexp& (0+255),0,b
  8190  002F40                     l6373:
  8191                           
  8192                           ; BSR set to: 0
  8193  002F40  0100               	movlb	0	; () banked
  8194  002F42  51A2               	movf	___flmul@bexp& (0+255),w,b
  8195  002F44  0100               	movlb	0	; () banked
  8196  002F46  B4D8               	btfsc	status,2,c
  8197  002F48  D010               	goto	l6381
  8198                           
  8199                           ; BSR set to: 0
  8200  002F4A  0100               	movlb	0	; () banked
  8201  002F4C  29A2               	incf	___flmul@bexp& (0+255),w,b
  8202  002F4E  A4D8               	btfss	status,2,c
  8203  002F50  D009               	goto	l6379
  8204                           
  8205                           ; BSR set to: 0
  8206  002F52  0E00               	movlw	0
  8207  002F54  0100               	movlb	0	; () banked
  8208  002F56  6F90               	movwf	___flmul@b& (0+255),b
  8209  002F58  0E00               	movlw	0
  8210  002F5A  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8211  002F5C  0E00               	movlw	0
  8212  002F5E  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8213  002F60  0E00               	movlw	0
  8214  002F62  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8215  002F64                     l6379:
  8216                           
  8217                           ; BSR set to: 0
  8218  002F64  0100               	movlb	0	; () banked
  8219  002F66  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  8220  002F68  D009               	goto	l6383
  8221  002F6A                     l6381:
  8222                           
  8223                           ; BSR set to: 0
  8224  002F6A  0E00               	movlw	0
  8225  002F6C  0100               	movlb	0	; () banked
  8226  002F6E  6F90               	movwf	___flmul@b& (0+255),b
  8227  002F70  0E00               	movlw	0
  8228  002F72  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8229  002F74  0E00               	movlw	0
  8230  002F76  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8231  002F78  0E00               	movlw	0
  8232  002F7A  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8233  002F7C                     l6383:
  8234                           
  8235                           ; BSR set to: 0
  8236  002F7C  0100               	movlb	0	; () banked
  8237  002F7E  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8238  002F80  0B80               	andlw	128
  8239  002F82  0100               	movlb	0	; () banked
  8240  002F84  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  8241                           
  8242                           ; BSR set to: 0
  8243  002F86  0100               	movlb	0	; () banked
  8244  002F88  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8245  002F8A  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  8246  002F8C  0100               	movlb	0	; () banked
  8247  002F8E  6F9D               	movwf	___flmul@aexp& (0+255),b
  8248                           
  8249                           ; BSR set to: 0
  8250  002F90  0100               	movlb	0	; () banked
  8251  002F92  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  8252  002F94  D002               	goto	l6391
  8253                           
  8254                           ; BSR set to: 0
  8255  002F96  0100               	movlb	0	; () banked
  8256  002F98  819D               	bsf	___flmul@aexp& (0+255),0,b
  8257  002F9A                     l6391:
  8258                           
  8259                           ; BSR set to: 0
  8260  002F9A  0100               	movlb	0	; () banked
  8261  002F9C  519D               	movf	___flmul@aexp& (0+255),w,b
  8262  002F9E  0100               	movlb	0	; () banked
  8263  002FA0  B4D8               	btfsc	status,2,c
  8264  002FA2  D010               	goto	l6399
  8265                           
  8266                           ; BSR set to: 0
  8267  002FA4  0100               	movlb	0	; () banked
  8268  002FA6  299D               	incf	___flmul@aexp& (0+255),w,b
  8269  002FA8  A4D8               	btfss	status,2,c
  8270  002FAA  D009               	goto	l6397
  8271                           
  8272                           ; BSR set to: 0
  8273  002FAC  0E00               	movlw	0
  8274  002FAE  0100               	movlb	0	; () banked
  8275  002FB0  6F94               	movwf	___flmul@a& (0+255),b
  8276  002FB2  0E00               	movlw	0
  8277  002FB4  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8278  002FB6  0E00               	movlw	0
  8279  002FB8  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8280  002FBA  0E00               	movlw	0
  8281  002FBC  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8282  002FBE                     l6397:
  8283                           
  8284                           ; BSR set to: 0
  8285  002FBE  0100               	movlb	0	; () banked
  8286  002FC0  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  8287  002FC2  D009               	goto	l1416
  8288  002FC4                     l6399:
  8289                           
  8290                           ; BSR set to: 0
  8291  002FC4  0E00               	movlw	0
  8292  002FC6  0100               	movlb	0	; () banked
  8293  002FC8  6F94               	movwf	___flmul@a& (0+255),b
  8294  002FCA  0E00               	movlw	0
  8295  002FCC  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8296  002FCE  0E00               	movlw	0
  8297  002FD0  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8298  002FD2  0E00               	movlw	0
  8299  002FD4  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8300  002FD6                     l1416:
  8301                           
  8302                           ; BSR set to: 0
  8303  002FD6  0100               	movlb	0	; () banked
  8304  002FD8  519D               	movf	___flmul@aexp& (0+255),w,b
  8305  002FDA  0100               	movlb	0	; () banked
  8306  002FDC  B4D8               	btfsc	status,2,c
  8307  002FDE  D005               	goto	l6403
  8308                           
  8309                           ; BSR set to: 0
  8310  002FE0  0100               	movlb	0	; () banked
  8311  002FE2  51A2               	movf	___flmul@bexp& (0+255),w,b
  8312  002FE4  0100               	movlb	0	; () banked
  8313  002FE6  A4D8               	btfss	status,2,c
  8314  002FE8  D00A               	goto	l6407
  8315  002FEA                     l6403:
  8316                           
  8317                           ; BSR set to: 0
  8318  002FEA  0E00               	movlw	0
  8319  002FEC  0100               	movlb	0	; () banked
  8320  002FEE  6F90               	movwf	?___flmul& (0+255),b
  8321  002FF0  0E00               	movlw	0
  8322  002FF2  6F91               	movwf	(?___flmul+1)& (0+255),b
  8323  002FF4  0E00               	movlw	0
  8324  002FF6  6F92               	movwf	(?___flmul+2)& (0+255),b
  8325  002FF8  0E00               	movlw	0
  8326  002FFA  6F93               	movwf	(?___flmul+3)& (0+255),b
  8327                           
  8328                           ; BSR set to: 0
  8329  002FFC  0012               	return	
  8330  002FFE                     l6407:
  8331                           
  8332                           ; BSR set to: 0
  8333  002FFE  0100               	movlb	0	; () banked
  8334  003000  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8335  003002  0100               	movlb	0	; () banked
  8336  003004  0390               	mulwf	___flmul@b& (0+255),b
  8337  003006  CFF3 F0A7          	movff	prodl,___flmul@temp
  8338  00300A  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8339                           
  8340                           ; BSR set to: 0
  8341  00300E  0100               	movlb	0	; () banked
  8342  003010  51A7               	movf	___flmul@temp& (0+255),w,b
  8343  003012  0100               	movlb	0	; () banked
  8344  003014  6F9E               	movwf	___flmul@grs& (0+255),b
  8345  003016  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  8346  003018  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  8347  00301A  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  8348                           
  8349                           ; BSR set to: 0
  8350  00301C  0100               	movlb	0	; () banked
  8351  00301E  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8352  003020  0100               	movlb	0	; () banked
  8353  003022  6FA3               	movwf	___flmul@prod& (0+255),b
  8354  003024  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  8355  003026  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  8356  003028  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  8357  00302A  0100               	movlb	0	; () banked
  8358  00302C  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8359  00302E  0100               	movlb	0	; () banked
  8360  003030  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8361  003032  CFF3 F0A7          	movff	prodl,___flmul@temp
  8362  003036  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8363                           
  8364                           ; BSR set to: 0
  8365  00303A  0100               	movlb	0	; () banked
  8366  00303C  51A7               	movf	___flmul@temp& (0+255),w,b
  8367  00303E  0100               	movlb	0	; () banked
  8368  003040  279E               	addwf	___flmul@grs& (0+255),f,b
  8369  003042  0E00               	movlw	0
  8370  003044  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8371  003046  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8372  003048  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8373                           
  8374                           ; BSR set to: 0
  8375  00304A  0100               	movlb	0	; () banked
  8376  00304C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8377  00304E  0100               	movlb	0	; () banked
  8378  003050  27A3               	addwf	___flmul@prod& (0+255),f,b
  8379  003052  0E00               	movlw	0
  8380  003054  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8381  003056  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8382  003058  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8383  00305A  0100               	movlb	0	; () banked
  8384  00305C  5194               	movf	___flmul@a& (0+255),w,b
  8385  00305E  0100               	movlb	0	; () banked
  8386  003060  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8387  003062  CFF3 F0A7          	movff	prodl,___flmul@temp
  8388  003066  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8389                           
  8390                           ; BSR set to: 0
  8391  00306A  0100               	movlb	0	; () banked
  8392  00306C  51A7               	movf	___flmul@temp& (0+255),w,b
  8393  00306E  0100               	movlb	0	; () banked
  8394  003070  279E               	addwf	___flmul@grs& (0+255),f,b
  8395  003072  0E00               	movlw	0
  8396  003074  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8397  003076  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8398  003078  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8399                           
  8400                           ; BSR set to: 0
  8401  00307A  0100               	movlb	0	; () banked
  8402  00307C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8403  00307E  0100               	movlb	0	; () banked
  8404  003080  27A3               	addwf	___flmul@prod& (0+255),f,b
  8405  003082  0E00               	movlw	0
  8406  003084  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8407  003086  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8408  003088  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8409                           
  8410                           ; BSR set to: 0
  8411  00308A  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8412  00308E  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8413  003092  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8414  003096  0100               	movlb	0	; () banked
  8415  003098  6B9E               	clrf	___flmul@grs& (0+255),b
  8416                           
  8417                           ; BSR set to: 0
  8418  00309A  0100               	movlb	0	; () banked
  8419  00309C  5194               	movf	___flmul@a& (0+255),w,b
  8420  00309E  0100               	movlb	0	; () banked
  8421  0030A0  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8422  0030A2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8423  0030A6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8424                           
  8425                           ; BSR set to: 0
  8426  0030AA  0100               	movlb	0	; () banked
  8427  0030AC  51A7               	movf	___flmul@temp& (0+255),w,b
  8428  0030AE  0100               	movlb	0	; () banked
  8429  0030B0  279E               	addwf	___flmul@grs& (0+255),f,b
  8430  0030B2  0100               	movlb	0	; () banked
  8431  0030B4  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8432  0030B6  0100               	movlb	0	; () banked
  8433  0030B8  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8434  0030BA  0E00               	movlw	0
  8435  0030BC  0100               	movlb	0	; () banked
  8436  0030BE  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8437  0030C0  0E00               	movlw	0
  8438  0030C2  0100               	movlb	0	; () banked
  8439  0030C4  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8440                           
  8441                           ; BSR set to: 0
  8442  0030C6  0100               	movlb	0	; () banked
  8443  0030C8  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8444  0030CA  0100               	movlb	0	; () banked
  8445  0030CC  0390               	mulwf	___flmul@b& (0+255),b
  8446  0030CE  CFF3 F0A7          	movff	prodl,___flmul@temp
  8447  0030D2  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8448                           
  8449                           ; BSR set to: 0
  8450  0030D6  0100               	movlb	0	; () banked
  8451  0030D8  51A7               	movf	___flmul@temp& (0+255),w,b
  8452  0030DA  0100               	movlb	0	; () banked
  8453  0030DC  279E               	addwf	___flmul@grs& (0+255),f,b
  8454  0030DE  0100               	movlb	0	; () banked
  8455  0030E0  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8456  0030E2  0100               	movlb	0	; () banked
  8457  0030E4  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8458  0030E6  0E00               	movlw	0
  8459  0030E8  0100               	movlb	0	; () banked
  8460  0030EA  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8461  0030EC  0E00               	movlw	0
  8462  0030EE  0100               	movlb	0	; () banked
  8463  0030F0  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8464                           
  8465                           ; BSR set to: 0
  8466  0030F2  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8467  0030F6  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8468  0030FA  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8469  0030FE  0100               	movlb	0	; () banked
  8470  003100  6B9E               	clrf	___flmul@grs& (0+255),b
  8471  003102  0100               	movlb	0	; () banked
  8472  003104  5194               	movf	___flmul@a& (0+255),w,b
  8473  003106  0100               	movlb	0	; () banked
  8474  003108  0390               	mulwf	___flmul@b& (0+255),b
  8475  00310A  CFF3 F0A7          	movff	prodl,___flmul@temp
  8476  00310E  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8477                           
  8478                           ; BSR set to: 0
  8479  003112  0100               	movlb	0	; () banked
  8480  003114  51A7               	movf	___flmul@temp& (0+255),w,b
  8481  003116  0100               	movlb	0	; () banked
  8482  003118  279E               	addwf	___flmul@grs& (0+255),f,b
  8483  00311A  0100               	movlb	0	; () banked
  8484  00311C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8485  00311E  0100               	movlb	0	; () banked
  8486  003120  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8487  003122  0E00               	movlw	0
  8488  003124  0100               	movlb	0	; () banked
  8489  003126  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8490  003128  0E00               	movlw	0
  8491  00312A  0100               	movlb	0	; () banked
  8492  00312C  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8493                           
  8494                           ; BSR set to: 0
  8495  00312E  0100               	movlb	0	; () banked
  8496  003130  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8497  003132  0100               	movlb	0	; () banked
  8498  003134  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8499  003136  CFF3 F0A7          	movff	prodl,___flmul@temp
  8500  00313A  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8501  00313E  0100               	movlb	0	; () banked
  8502  003140  51A7               	movf	___flmul@temp& (0+255),w,b
  8503  003142  0100               	movlb	0	; () banked
  8504  003144  27A3               	addwf	___flmul@prod& (0+255),f,b
  8505  003146  0100               	movlb	0	; () banked
  8506  003148  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8507  00314A  0100               	movlb	0	; () banked
  8508  00314C  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8509  00314E  0E00               	movlw	0
  8510  003150  0100               	movlb	0	; () banked
  8511  003152  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8512  003154  0E00               	movlw	0
  8513  003156  0100               	movlb	0	; () banked
  8514  003158  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8515                           
  8516                           ; BSR set to: 0
  8517  00315A  0100               	movlb	0	; () banked
  8518  00315C  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8519  00315E  0100               	movlb	0	; () banked
  8520  003160  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8521  003162  CFF3 F0A7          	movff	prodl,___flmul@temp
  8522  003166  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8523                           
  8524                           ; BSR set to: 0
  8525  00316A  0100               	movlb	0	; () banked
  8526  00316C  51A7               	movf	___flmul@temp& (0+255),w,b
  8527  00316E  0100               	movlb	0	; () banked
  8528  003170  27A3               	addwf	___flmul@prod& (0+255),f,b
  8529  003172  0100               	movlb	0	; () banked
  8530  003174  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8531  003176  0100               	movlb	0	; () banked
  8532  003178  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8533  00317A  0E00               	movlw	0
  8534  00317C  0100               	movlb	0	; () banked
  8535  00317E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8536  003180  0E00               	movlw	0
  8537  003182  0100               	movlb	0	; () banked
  8538  003184  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8539  003186  0100               	movlb	0	; () banked
  8540  003188  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8541  00318A  0100               	movlb	0	; () banked
  8542  00318C  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8543  00318E  CFF3 F0A7          	movff	prodl,___flmul@temp
  8544  003192  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8545                           
  8546                           ; BSR set to: 0
  8547  003196  0100               	movlb	0	; () banked
  8548  003198  51A7               	movf	___flmul@temp& (0+255),w,b
  8549  00319A  0100               	movlb	0	; () banked
  8550  00319C  6F98               	movwf	??___flmul& (0+255),b
  8551  00319E  0100               	movlb	0	; () banked
  8552  0031A0  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8553  0031A2  0100               	movlb	0	; () banked
  8554  0031A4  6F99               	movwf	(??___flmul+1)& (0+255),b
  8555  0031A6  0100               	movlb	0	; () banked
  8556  0031A8  6B9A               	clrf	(??___flmul+2)& (0+255),b
  8557  0031AA  0100               	movlb	0	; () banked
  8558  0031AC  6B9B               	clrf	(??___flmul+3)& (0+255),b
  8559  0031AE  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  8560  0031B2  C099  F09A         	movff	??___flmul+1,??___flmul+2
  8561  0031B6  C098  F099         	movff	??___flmul,??___flmul+1
  8562  0031BA  0100               	movlb	0	; () banked
  8563  0031BC  6B98               	clrf	??___flmul& (0+255),b
  8564  0031BE  0100               	movlb	0	; () banked
  8565  0031C0  5198               	movf	??___flmul& (0+255),w,b
  8566  0031C2  0100               	movlb	0	; () banked
  8567  0031C4  27A3               	addwf	___flmul@prod& (0+255),f,b
  8568  0031C6  0100               	movlb	0	; () banked
  8569  0031C8  5199               	movf	(??___flmul+1)& (0+255),w,b
  8570  0031CA  0100               	movlb	0	; () banked
  8571  0031CC  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8572  0031CE  0100               	movlb	0	; () banked
  8573  0031D0  519A               	movf	(??___flmul+2)& (0+255),w,b
  8574  0031D2  0100               	movlb	0	; () banked
  8575  0031D4  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8576  0031D6  0100               	movlb	0	; () banked
  8577  0031D8  519B               	movf	(??___flmul+3)& (0+255),w,b
  8578  0031DA  0100               	movlb	0	; () banked
  8579  0031DC  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8580                           
  8581                           ; BSR set to: 0
  8582  0031DE  C09E  F098         	movff	___flmul@grs,??___flmul
  8583  0031E2  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  8584  0031E6  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  8585  0031EA  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  8586  0031EE  0E19               	movlw	25
  8587  0031F0  D006               	goto	u8000
  8588  0031F2                     u8005:
  8589  0031F2  0100               	movlb	0	; () banked
  8590  0031F4  90D8               	bcf	status,0,c
  8591  0031F6  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8592  0031F8  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8593  0031FA  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8594  0031FC  3398               	rrcf	??___flmul& (0+255),f,b
  8595  0031FE                     u8000:
  8596  0031FE  2EE8               	decfsz	wreg,f,c
  8597  003200  D7F8               	goto	u8005
  8598  003202  0100               	movlb	0	; () banked
  8599  003204  5198               	movf	??___flmul& (0+255),w,b
  8600  003206  0100               	movlb	0	; () banked
  8601  003208  27A3               	addwf	___flmul@prod& (0+255),f,b
  8602  00320A  0100               	movlb	0	; () banked
  8603  00320C  5199               	movf	(??___flmul+1)& (0+255),w,b
  8604  00320E  0100               	movlb	0	; () banked
  8605  003210  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8606  003212  0100               	movlb	0	; () banked
  8607  003214  519A               	movf	(??___flmul+2)& (0+255),w,b
  8608  003216  0100               	movlb	0	; () banked
  8609  003218  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8610  00321A  0100               	movlb	0	; () banked
  8611  00321C  519B               	movf	(??___flmul+3)& (0+255),w,b
  8612  00321E  0100               	movlb	0	; () banked
  8613  003220  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8614                           
  8615                           ; BSR set to: 0
  8616  003222  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8617  003226  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8618  00322A  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8619  00322E  0100               	movlb	0	; () banked
  8620  003230  6B9E               	clrf	___flmul@grs& (0+255),b
  8621                           
  8622                           ; BSR set to: 0
  8623  003232  0100               	movlb	0	; () banked
  8624  003234  519D               	movf	___flmul@aexp& (0+255),w,b
  8625  003236  C0A2  F098         	movff	___flmul@bexp,??___flmul
  8626  00323A  0100               	movlb	0	; () banked
  8627  00323C  6B99               	clrf	(??___flmul+1)& (0+255),b
  8628  00323E  0100               	movlb	0	; () banked
  8629  003240  2798               	addwf	??___flmul& (0+255),f,b
  8630  003242  0E00               	movlw	0
  8631  003244  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  8632  003246  0E82               	movlw	130
  8633  003248  0100               	movlb	0	; () banked
  8634  00324A  2598               	addwf	??___flmul& (0+255),w,b
  8635  00324C  0100               	movlb	0	; () banked
  8636  00324E  6FA7               	movwf	___flmul@temp& (0+255),b
  8637  003250  0EFF               	movlw	255
  8638  003252  0100               	movlb	0	; () banked
  8639  003254  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  8640  003256  0100               	movlb	0	; () banked
  8641  003258  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  8642  00325A  D015               	goto	l6455
  8643  00325C                     l6449:
  8644                           
  8645                           ; BSR set to: 0
  8646  00325C  0100               	movlb	0	; () banked
  8647  00325E  90D8               	bcf	status,0,c
  8648  003260  37A3               	rlcf	___flmul@prod& (0+255),f,b
  8649  003262  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8650  003264  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8651  003266  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8652                           
  8653                           ; BSR set to: 0
  8654  003268  0100               	movlb	0	; () banked
  8655  00326A  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8656  00326C  D002               	goto	l1423
  8657                           
  8658                           ; BSR set to: 0
  8659  00326E  0100               	movlb	0	; () banked
  8660  003270  81A3               	bsf	___flmul@prod& (0+255),0,b
  8661  003272                     l1423:
  8662                           
  8663                           ; BSR set to: 0
  8664  003272  0100               	movlb	0	; () banked
  8665  003274  90D8               	bcf	status,0,c
  8666  003276  379E               	rlcf	___flmul@grs& (0+255),f,b
  8667  003278  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8668  00327A  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8669  00327C  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8670  00327E  0100               	movlb	0	; () banked
  8671  003280  07A7               	decf	___flmul@temp& (0+255),f,b
  8672  003282  A0D8               	btfss	status,0,c
  8673  003284  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  8674  003286                     l6455:
  8675                           
  8676                           ; BSR set to: 0
  8677  003286  0100               	movlb	0	; () banked
  8678  003288  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  8679  00328A  D7E8               	goto	l6449
  8680                           
  8681                           ; BSR set to: 0
  8682                           
  8683                           ; BSR set to: 0
  8684  00328C  0E00               	movlw	0
  8685  00328E  0100               	movlb	0	; () banked
  8686  003290  6F9D               	movwf	___flmul@aexp& (0+255),b
  8687                           
  8688                           ; BSR set to: 0
  8689  003292  0100               	movlb	0	; () banked
  8690  003294  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8691  003296  D024               	goto	l1425
  8692                           
  8693                           ; BSR set to: 0
  8694  003298  0EFF               	movlw	255
  8695  00329A  0100               	movlb	0	; () banked
  8696  00329C  159E               	andwf	___flmul@grs& (0+255),w,b
  8697  00329E  0100               	movlb	0	; () banked
  8698  0032A0  6F98               	movwf	??___flmul& (0+255),b
  8699  0032A2  0EFF               	movlw	255
  8700  0032A4  0100               	movlb	0	; () banked
  8701  0032A6  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  8702  0032A8  0100               	movlb	0	; () banked
  8703  0032AA  6F99               	movwf	(??___flmul+1)& (0+255),b
  8704  0032AC  0EFF               	movlw	255
  8705  0032AE  0100               	movlb	0	; () banked
  8706  0032B0  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  8707  0032B2  0100               	movlb	0	; () banked
  8708  0032B4  6F9A               	movwf	(??___flmul+2)& (0+255),b
  8709  0032B6  0E7F               	movlw	127
  8710  0032B8  0100               	movlb	0	; () banked
  8711  0032BA  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  8712  0032BC  0100               	movlb	0	; () banked
  8713  0032BE  6F9B               	movwf	(??___flmul+3)& (0+255),b
  8714  0032C0  0100               	movlb	0	; () banked
  8715  0032C2  5198               	movf	??___flmul& (0+255),w,b
  8716  0032C4  0100               	movlb	0	; () banked
  8717  0032C6  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  8718  0032C8  0100               	movlb	0	; () banked
  8719  0032CA  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  8720  0032CC  0100               	movlb	0	; () banked
  8721  0032CE  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  8722  0032D0  A4D8               	btfss	status,2,c
  8723  0032D2  D003               	goto	l6465
  8724                           
  8725                           ; BSR set to: 0
  8726                           
  8727                           ; BSR set to: 0
  8728  0032D4  0100               	movlb	0	; () banked
  8729  0032D6  A1A3               	btfss	___flmul@prod& (0+255),0,b
  8730  0032D8  D003               	goto	l1425
  8731  0032DA                     l6465:
  8732                           
  8733                           ; BSR set to: 0
  8734  0032DA  0E01               	movlw	1
  8735  0032DC  0100               	movlb	0	; () banked
  8736  0032DE  6F9D               	movwf	___flmul@aexp& (0+255),b
  8737  0032E0                     l1425:
  8738                           
  8739                           ; BSR set to: 0
  8740  0032E0  0100               	movlb	0	; () banked
  8741  0032E2  519D               	movf	___flmul@aexp& (0+255),w,b
  8742  0032E4  0100               	movlb	0	; () banked
  8743  0032E6  B4D8               	btfsc	status,2,c
  8744  0032E8  D023               	goto	l6475
  8745                           
  8746                           ; BSR set to: 0
  8747  0032EA  0E01               	movlw	1
  8748  0032EC  0100               	movlb	0	; () banked
  8749  0032EE  27A3               	addwf	___flmul@prod& (0+255),f,b
  8750  0032F0  0E00               	movlw	0
  8751  0032F2  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8752  0032F4  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8753  0032F6  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8754                           
  8755                           ; BSR set to: 0
  8756  0032F8  0100               	movlb	0	; () banked
  8757  0032FA  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  8758  0032FC  D019               	goto	l6475
  8759                           
  8760                           ; BSR set to: 0
  8761  0032FE  C0A3  F098         	movff	___flmul@prod,??___flmul
  8762  003302  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  8763  003306  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  8764  00330A  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  8765  00330E  0100               	movlb	0	; () banked
  8766  003310  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  8767  003312  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8768  003314  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8769  003316  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8770  003318  3398               	rrcf	??___flmul& (0+255),f,b
  8771  00331A  C098  F0A3         	movff	??___flmul,___flmul@prod
  8772  00331E  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  8773  003322  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  8774  003326  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  8775                           
  8776                           ; BSR set to: 0
  8777  00332A  0100               	movlb	0	; () banked
  8778  00332C  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  8779  00332E  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  8780  003330                     l6475:
  8781                           
  8782                           ; BSR set to: 0
  8783  003330  0100               	movlb	0	; () banked
  8784  003332  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8785  003334  D010               	goto	l6479
  8786  003336  0100               	movlb	0	; () banked
  8787  003338  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8788  00333A  E104               	bnz	u8080
  8789  00333C  0100               	movlb	0	; () banked
  8790  00333E  29A7               	incf	___flmul@temp& (0+255),w,b
  8791  003340  A0D8               	btfss	status,0,c
  8792  003342  D009               	goto	l6479
  8793  003344                     u8080:
  8794                           
  8795                           ; BSR set to: 0
  8796  003344  0E00               	movlw	0
  8797  003346  0100               	movlb	0	; () banked
  8798  003348  6FA3               	movwf	___flmul@prod& (0+255),b
  8799  00334A  0E00               	movlw	0
  8800  00334C  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8801  00334E  0E80               	movlw	128
  8802  003350  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8803  003352  0E7F               	movlw	127
  8804  003354  D02B               	goto	L2
  8805  003356                     l6479:
  8806                           
  8807                           ; BSR set to: 0
  8808  003356  0100               	movlb	0	; () banked
  8809  003358  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8810  00335A  D007               	goto	l6481
  8811  00335C  0100               	movlb	0	; () banked
  8812  00335E  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8813  003360  E111               	bnz	l1433
  8814  003362  0100               	movlb	0	; () banked
  8815  003364  05A7               	decf	___flmul@temp& (0+255),w,b
  8816  003366  B0D8               	btfsc	status,0,c
  8817  003368  D00D               	goto	l1433
  8818  00336A                     l6481:
  8819                           
  8820                           ; BSR set to: 0
  8821  00336A  0E00               	movlw	0
  8822  00336C  0100               	movlb	0	; () banked
  8823  00336E  6FA3               	movwf	___flmul@prod& (0+255),b
  8824  003370  0E00               	movlw	0
  8825  003372  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8826  003374  0E00               	movlw	0
  8827  003376  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8828  003378  0E00               	movlw	0
  8829  00337A  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8830  00337C  0E00               	movlw	0
  8831  00337E  0100               	movlb	0	; () banked
  8832  003380  6F9C               	movwf	___flmul@sign& (0+255),b
  8833  003382  D015               	goto	l6491
  8834  003384                     l1433:
  8835                           
  8836                           ; BSR set to: 0
  8837  003384  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  8838                           
  8839                           ; BSR set to: 0
  8840  003388  0EFF               	movlw	255
  8841  00338A  0100               	movlb	0	; () banked
  8842  00338C  17A3               	andwf	___flmul@prod& (0+255),f,b
  8843  00338E  0EFF               	movlw	255
  8844  003390  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  8845  003392  0E7F               	movlw	127
  8846  003394  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  8847  003396  0E00               	movlw	0
  8848  003398  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  8849                           
  8850                           ; BSR set to: 0
  8851  00339A  0100               	movlb	0	; () banked
  8852  00339C  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  8853  00339E  D002               	goto	l6489
  8854                           
  8855                           ; BSR set to: 0
  8856  0033A0  0100               	movlb	0	; () banked
  8857  0033A2  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  8858  0033A4                     l6489:
  8859                           
  8860                           ; BSR set to: 0
  8861  0033A4  0100               	movlb	0	; () banked
  8862  0033A6  90D8               	bcf	status,0,c
  8863  0033A8  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  8864  0033AA  0100               	movlb	0	; () banked
  8865  0033AC                     L2:
  8866  0033AC  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8867  0033AE                     l6491:
  8868                           
  8869                           ; BSR set to: 0
  8870  0033AE  0100               	movlb	0	; () banked
  8871  0033B0  519C               	movf	___flmul@sign& (0+255),w,b
  8872  0033B2  0100               	movlb	0	; () banked
  8873  0033B4  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8874                           
  8875                           ; BSR set to: 0
  8876  0033B6  C0A3  F090         	movff	___flmul@prod,?___flmul
  8877  0033BA  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  8878  0033BE  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  8879  0033C2  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  8880  0033C6  0012               	return	
  8881  0033C8                     __end_of___flmul:
  8882                           	opt stack 0
  8883                           tblptru	equ	0xFF8
  8884                           tblptrh	equ	0xFF7
  8885                           tblptrl	equ	0xFF6
  8886                           tablat	equ	0xFF5
  8887                           prodh	equ	0xFF4
  8888                           prodl	equ	0xFF3
  8889                           postinc0	equ	0xFEE
  8890                           wreg	equ	0xFE8
  8891                           postdec1	equ	0xFE5
  8892                           fsr1l	equ	0xFE1
  8893                           indf2	equ	0xFDF
  8894                           postinc2	equ	0xFDE
  8895                           postdec2	equ	0xFDD
  8896                           fsr2h	equ	0xFDA
  8897                           fsr2l	equ	0xFD9
  8898                           status	equ	0xFD8
  8899                           
  8900 ;; *************** function ___fladd *****************
  8901 ;; Defined at:
  8902 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  8903 ;; Parameters:    Size  Location     Type
  8904 ;;  b               4   73[BANK0 ] unsigned char 
  8905 ;;  a               4   77[BANK0 ] unsigned char 
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;  grs             1   92[BANK0 ] unsigned char 
  8908 ;;  bexp            1   91[BANK0 ] unsigned char 
  8909 ;;  aexp            1   90[BANK0 ] unsigned char 
  8910 ;;  signs           1   89[BANK0 ] unsigned char 
  8911 ;; Return value:  Size  Location     Type
  8912 ;;                  4   73[BANK0 ] unsigned char 
  8913 ;; Registers used:
  8914 ;;		wreg, status,2, status,0
  8915 ;; Tracked objects:
  8916 ;;		On entry : 0/0
  8917 ;;		On exit  : 0/0
  8918 ;;		Unchanged: 0/0
  8919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8920 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8921 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8922 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8923 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8924 ;;Total ram usage:       20 bytes
  8925 ;; Hardware stack levels used:    1
  8926 ;; Hardware stack levels required when called:    4
  8927 ;; This function calls:
  8928 ;;		Nothing
  8929 ;; This function is called by:
  8930 ;;		_park_routine
  8931 ;;		_parallelo
  8932 ;;		_matematica
  8933 ;;		_asin
  8934 ;;		_atan
  8935 ;;		_cos
  8936 ;;		_eval_poly
  8937 ;;		_sin
  8938 ;;		___flsub
  8939 ;;		_floor
  8940 ;; This function uses a non-reentrant model
  8941 ;;
  8942                           
  8943                           	psect	text23
  8944  002A7A                     __ptext23:
  8945                           	opt stack 0
  8946  002A7A                     ___fladd:
  8947                           	opt stack 21
  8948                           
  8949                           ; BSR set to: 0
  8950                           ;incstack = 0
  8951  002A7A  0100               	movlb	0	; () banked
  8952  002A7C  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  8953  002A7E  0B80               	andlw	128
  8954  002A80  0100               	movlb	0	; () banked
  8955  002A82  6FB9               	movwf	___fladd@signs& (0+255),b
  8956  002A84  0100               	movlb	0	; () banked
  8957  002A86  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  8958  002A88  25AC               	addwf	(___fladd@b+3)& (0+255),w,b
  8959  002A8A  0100               	movlb	0	; () banked
  8960  002A8C  6FBB               	movwf	___fladd@bexp& (0+255),b
  8961                           
  8962                           ; BSR set to: 0
  8963  002A8E  0100               	movlb	0	; () banked
  8964  002A90  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  8965  002A92  D002               	goto	l6171
  8966                           
  8967                           ; BSR set to: 0
  8968  002A94  0100               	movlb	0	; () banked
  8969  002A96  81BB               	bsf	___fladd@bexp& (0+255),0,b
  8970  002A98                     l6171:
  8971                           
  8972                           ; BSR set to: 0
  8973  002A98  0100               	movlb	0	; () banked
  8974  002A9A  51BB               	movf	___fladd@bexp& (0+255),w,b
  8975  002A9C  0100               	movlb	0	; () banked
  8976  002A9E  B4D8               	btfsc	status,2,c
  8977  002AA0  D012               	goto	l6181
  8978                           
  8979                           ; BSR set to: 0
  8980  002AA2  0100               	movlb	0	; () banked
  8981  002AA4  29BB               	incf	___fladd@bexp& (0+255),w,b
  8982  002AA6  A4D8               	btfss	status,2,c
  8983  002AA8  D009               	goto	l6177
  8984                           
  8985                           ; BSR set to: 0
  8986  002AAA  0E00               	movlw	0
  8987  002AAC  0100               	movlb	0	; () banked
  8988  002AAE  6FA9               	movwf	___fladd@b& (0+255),b
  8989  002AB0  0E00               	movlw	0
  8990  002AB2  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  8991  002AB4  0E00               	movlw	0
  8992  002AB6  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  8993  002AB8  0E00               	movlw	0
  8994  002ABA  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  8995  002ABC                     l6177:
  8996                           
  8997                           ; BSR set to: 0
  8998  002ABC  0100               	movlb	0	; () banked
  8999  002ABE  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  9000                           
  9001                           ; BSR set to: 0
  9002  002AC0  0E00               	movlw	0
  9003  002AC2  0100               	movlb	0	; () banked
  9004  002AC4  D008               	goto	L3
  9005  002AC6                     l6181:
  9006                           
  9007                           ; BSR set to: 0
  9008  002AC6  0E00               	movlw	0
  9009  002AC8  0100               	movlb	0	; () banked
  9010  002ACA  6FA9               	movwf	___fladd@b& (0+255),b
  9011  002ACC  0E00               	movlw	0
  9012  002ACE  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9013  002AD0  0E00               	movlw	0
  9014  002AD2  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9015  002AD4  0E00               	movlw	0
  9016  002AD6                     L3:
  9017  002AD6  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9018                           
  9019                           ; BSR set to: 0
  9020                           
  9021                           ; BSR set to: 0
  9022  002AD8  0100               	movlb	0	; () banked
  9023  002ADA  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9024  002ADC  0B80               	andlw	128
  9025  002ADE  0100               	movlb	0	; () banked
  9026  002AE0  6FBA               	movwf	___fladd@aexp& (0+255),b
  9027                           
  9028                           ; BSR set to: 0
  9029  002AE2  0100               	movlb	0	; () banked
  9030  002AE4  51B9               	movf	___fladd@signs& (0+255),w,b
  9031  002AE6  0100               	movlb	0	; () banked
  9032  002AE8  19BA               	xorwf	___fladd@aexp& (0+255),w,b
  9033  002AEA  B4D8               	btfsc	status,2,c
  9034  002AEC  D002               	goto	l6189
  9035                           
  9036                           ; BSR set to: 0
  9037  002AEE  0100               	movlb	0	; () banked
  9038  002AF0  8DB9               	bsf	___fladd@signs& (0+255),6,b
  9039  002AF2                     l6189:
  9040                           
  9041                           ; BSR set to: 0
  9042  002AF2  0100               	movlb	0	; () banked
  9043  002AF4  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9044  002AF6  25B0               	addwf	(___fladd@a+3)& (0+255),w,b
  9045  002AF8  0100               	movlb	0	; () banked
  9046  002AFA  6FBA               	movwf	___fladd@aexp& (0+255),b
  9047                           
  9048                           ; BSR set to: 0
  9049  002AFC  0100               	movlb	0	; () banked
  9050  002AFE  AFAF               	btfss	(___fladd@a+2)& (0+255),7,b
  9051  002B00  D002               	goto	l6195
  9052                           
  9053                           ; BSR set to: 0
  9054  002B02  0100               	movlb	0	; () banked
  9055  002B04  81BA               	bsf	___fladd@aexp& (0+255),0,b
  9056  002B06                     l6195:
  9057                           
  9058                           ; BSR set to: 0
  9059  002B06  0100               	movlb	0	; () banked
  9060  002B08  51BA               	movf	___fladd@aexp& (0+255),w,b
  9061  002B0A  0100               	movlb	0	; () banked
  9062  002B0C  B4D8               	btfsc	status,2,c
  9063  002B0E  D012               	goto	l6205
  9064                           
  9065                           ; BSR set to: 0
  9066  002B10  0100               	movlb	0	; () banked
  9067  002B12  29BA               	incf	___fladd@aexp& (0+255),w,b
  9068  002B14  A4D8               	btfss	status,2,c
  9069  002B16  D009               	goto	l6201
  9070                           
  9071                           ; BSR set to: 0
  9072  002B18  0E00               	movlw	0
  9073  002B1A  0100               	movlb	0	; () banked
  9074  002B1C  6FAD               	movwf	___fladd@a& (0+255),b
  9075  002B1E  0E00               	movlw	0
  9076  002B20  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9077  002B22  0E00               	movlw	0
  9078  002B24  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9079  002B26  0E00               	movlw	0
  9080  002B28  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9081  002B2A                     l6201:
  9082                           
  9083                           ; BSR set to: 0
  9084  002B2A  0100               	movlb	0	; () banked
  9085  002B2C  8FAF               	bsf	(___fladd@a+2)& (0+255),7,b
  9086                           
  9087                           ; BSR set to: 0
  9088  002B2E  0E00               	movlw	0
  9089  002B30  0100               	movlb	0	; () banked
  9090  002B32  D008               	goto	L4
  9091  002B34                     l6205:
  9092                           
  9093                           ; BSR set to: 0
  9094  002B34  0E00               	movlw	0
  9095  002B36  0100               	movlb	0	; () banked
  9096  002B38  6FAD               	movwf	___fladd@a& (0+255),b
  9097  002B3A  0E00               	movlw	0
  9098  002B3C  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9099  002B3E  0E00               	movlw	0
  9100  002B40  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9101  002B42  0E00               	movlw	0
  9102  002B44                     L4:
  9103  002B44  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9104                           
  9105                           ; BSR set to: 0
  9106                           
  9107                           ; BSR set to: 0
  9108  002B46  0100               	movlb	0	; () banked
  9109  002B48  51BB               	movf	___fladd@bexp& (0+255),w,b
  9110  002B4A  0100               	movlb	0	; () banked
  9111  002B4C  5DBA               	subwf	___fladd@aexp& (0+255),w,b
  9112  002B4E  B0D8               	btfsc	status,0,c
  9113  002B50  D024               	goto	l6243
  9114                           
  9115                           ; BSR set to: 0
  9116  002B52  0100               	movlb	0	; () banked
  9117  002B54  ADB9               	btfss	___fladd@signs& (0+255),6,b
  9118  002B56  D003               	goto	l6213
  9119                           
  9120                           ; BSR set to: 0
  9121  002B58  0E80               	movlw	128
  9122  002B5A  0100               	movlb	0	; () banked
  9123  002B5C  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9124  002B5E                     l6213:
  9125                           
  9126                           ; BSR set to: 0
  9127  002B5E  C0BB  F0BC         	movff	___fladd@bexp,___fladd@grs
  9128                           
  9129                           ; BSR set to: 0
  9130  002B62  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9131                           
  9132                           ; BSR set to: 0
  9133  002B66  C0BC  F0BA         	movff	___fladd@grs,___fladd@aexp
  9134                           
  9135                           ; BSR set to: 0
  9136  002B6A  C0A9  F0BC         	movff	___fladd@b,___fladd@grs
  9137                           
  9138                           ; BSR set to: 0
  9139  002B6E  C0AD  F0A9         	movff	___fladd@a,___fladd@b
  9140                           
  9141                           ; BSR set to: 0
  9142  002B72  C0BC  F0AD         	movff	___fladd@grs,___fladd@a
  9143                           
  9144                           ; BSR set to: 0
  9145  002B76  C0AA  F0BC         	movff	___fladd@b+1,___fladd@grs
  9146                           
  9147                           ; BSR set to: 0
  9148  002B7A  C0AE  F0AA         	movff	___fladd@a+1,___fladd@b+1
  9149                           
  9150                           ; BSR set to: 0
  9151  002B7E  C0BC  F0AE         	movff	___fladd@grs,___fladd@a+1
  9152                           
  9153                           ; BSR set to: 0
  9154  002B82  C0AB  F0BC         	movff	___fladd@b+2,___fladd@grs
  9155                           
  9156                           ; BSR set to: 0
  9157  002B86  C0AF  F0AB         	movff	___fladd@a+2,___fladd@b+2
  9158                           
  9159                           ; BSR set to: 0
  9160  002B8A  C0BC  F0AF         	movff	___fladd@grs,___fladd@a+2
  9161                           
  9162                           ; BSR set to: 0
  9163  002B8E  C0AC  F0BC         	movff	___fladd@b+3,___fladd@grs
  9164                           
  9165                           ; BSR set to: 0
  9166  002B92  C0B0  F0AC         	movff	___fladd@a+3,___fladd@b+3
  9167                           
  9168                           ; BSR set to: 0
  9169  002B96  C0BC  F0B0         	movff	___fladd@grs,___fladd@a+3
  9170  002B9A                     l6243:
  9171                           
  9172                           ; BSR set to: 0
  9173  002B9A  0E00               	movlw	0
  9174  002B9C  0100               	movlb	0	; () banked
  9175  002B9E  6FBC               	movwf	___fladd@grs& (0+255),b
  9176                           
  9177                           ; BSR set to: 0
  9178  002BA0  0100               	movlb	0	; () banked
  9179  002BA2  51BB               	movf	___fladd@bexp& (0+255),w,b
  9180  002BA4  0100               	movlb	0	; () banked
  9181  002BA6  6FB1               	movwf	??___fladd& (0+255),b
  9182  002BA8  6BB2               	clrf	(??___fladd+1)& (0+255),b
  9183  002BAA  0100               	movlb	0	; () banked
  9184  002BAC  1FB1               	comf	??___fladd& (0+255),f,b
  9185  002BAE  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9186  002BB0  4BB1               	infsnz	??___fladd& (0+255),f,b
  9187  002BB2  2BB2               	incf	(??___fladd+1)& (0+255),f,b
  9188  002BB4  0100               	movlb	0	; () banked
  9189  002BB6  51BA               	movf	___fladd@aexp& (0+255),w,b
  9190  002BB8  0100               	movlb	0	; () banked
  9191  002BBA  6FB3               	movwf	(??___fladd+2)& (0+255),b
  9192  002BBC  6BB4               	clrf	(??___fladd+3)& (0+255),b
  9193  002BBE  0100               	movlb	0	; () banked
  9194  002BC0  51B1               	movf	??___fladd& (0+255),w,b
  9195  002BC2  0100               	movlb	0	; () banked
  9196  002BC4  27B3               	addwf	(??___fladd+2)& (0+255),f,b
  9197  002BC6  0100               	movlb	0	; () banked
  9198  002BC8  51B2               	movf	(??___fladd+1)& (0+255),w,b
  9199  002BCA  0100               	movlb	0	; () banked
  9200  002BCC  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9201  002BCE  0100               	movlb	0	; () banked
  9202  002BD0  BFB4               	btfsc	(??___fladd+3)& (0+255),7,b
  9203  002BD2  D03D               	goto	l1331
  9204  002BD4  0100               	movlb	0	; () banked
  9205  002BD6  51B4               	movf	(??___fladd+3)& (0+255),w,b
  9206  002BD8  E105               	bnz	u7620
  9207  002BDA  0E1A               	movlw	26
  9208  002BDC  0100               	movlb	0	; () banked
  9209  002BDE  5DB3               	subwf	(??___fladd+2)& (0+255),w,b
  9210  002BE0  A0D8               	btfss	status,0,c
  9211  002BE2  D035               	goto	l1331
  9212  002BE4                     u7620:
  9213                           
  9214                           ; BSR set to: 0
  9215  002BE4  0100               	movlb	0	; () banked
  9216  002BE6  51A9               	movf	___fladd@b& (0+255),w,b
  9217  002BE8  0100               	movlb	0	; () banked
  9218  002BEA  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9219  002BEC  0100               	movlb	0	; () banked
  9220  002BEE  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9221  002BF0  0100               	movlb	0	; () banked
  9222  002BF2  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9223  002BF4  B4D8               	btfsc	status,2,c
  9224  002BF6  D002               	goto	u7630
  9225  002BF8  0E01               	movlw	1
  9226  002BFA  D001               	goto	u7640
  9227  002BFC                     u7630:
  9228  002BFC  0E00               	movlw	0
  9229  002BFE                     u7640:
  9230  002BFE  0100               	movlb	0	; () banked
  9231  002C00  6FBC               	movwf	___fladd@grs& (0+255),b
  9232                           
  9233                           ; BSR set to: 0
  9234  002C02  0E00               	movlw	0
  9235  002C04  0100               	movlb	0	; () banked
  9236  002C06  6FA9               	movwf	___fladd@b& (0+255),b
  9237  002C08  0E00               	movlw	0
  9238  002C0A  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9239  002C0C  0E00               	movlw	0
  9240  002C0E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9241  002C10  0E00               	movlw	0
  9242  002C12  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9243                           
  9244                           ; BSR set to: 0
  9245  002C14  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9246  002C18  D020               	goto	l1330
  9247  002C1A                     l1332:
  9248                           
  9249                           ; BSR set to: 0
  9250  002C1A  0100               	movlb	0	; () banked
  9251  002C1C  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9252  002C1E  D007               	goto	l6255
  9253                           
  9254                           ; BSR set to: 0
  9255  002C20  0100               	movlb	0	; () banked
  9256  002C22  90D8               	bcf	status,0,c
  9257  002C24  31BC               	rrcf	___fladd@grs& (0+255),w,b
  9258  002C26  0901               	iorlw	1
  9259  002C28  0100               	movlb	0	; () banked
  9260  002C2A  6FBC               	movwf	___fladd@grs& (0+255),b
  9261  002C2C  D003               	goto	l6257
  9262  002C2E                     l6255:
  9263                           
  9264                           ; BSR set to: 0
  9265  002C2E  0100               	movlb	0	; () banked
  9266  002C30  90D8               	bcf	status,0,c
  9267  002C32  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9268  002C34                     l6257:
  9269                           
  9270                           ; BSR set to: 0
  9271  002C34  0100               	movlb	0	; () banked
  9272  002C36  A1A9               	btfss	___fladd@b& (0+255),0,b
  9273  002C38  D002               	goto	l6261
  9274                           
  9275                           ; BSR set to: 0
  9276  002C3A  0100               	movlb	0	; () banked
  9277  002C3C  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9278  002C3E                     l6261:
  9279                           
  9280                           ; BSR set to: 0
  9281  002C3E  0100               	movlb	0	; () banked
  9282  002C40  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9283  002C42  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9284  002C44  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9285  002C46  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9286  002C48  33A9               	rrcf	___fladd@b& (0+255),f,b
  9287                           
  9288                           ; BSR set to: 0
  9289  002C4A  0100               	movlb	0	; () banked
  9290  002C4C  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9291  002C4E                     l1331:
  9292                           
  9293                           ; BSR set to: 0
  9294  002C4E  0100               	movlb	0	; () banked
  9295  002C50  51BA               	movf	___fladd@aexp& (0+255),w,b
  9296  002C52  0100               	movlb	0	; () banked
  9297  002C54  5DBB               	subwf	___fladd@bexp& (0+255),w,b
  9298  002C56  A0D8               	btfss	status,0,c
  9299  002C58  D7E0               	goto	l1332
  9300  002C5A                     l1330:
  9301                           
  9302                           ; BSR set to: 0
  9303  002C5A  0100               	movlb	0	; () banked
  9304  002C5C  BDB9               	btfsc	___fladd@signs& (0+255),6,b
  9305  002C5E  D03F               	goto	l6289
  9306                           
  9307                           ; BSR set to: 0
  9308  002C60  0100               	movlb	0	; () banked
  9309  002C62  51BB               	movf	___fladd@bexp& (0+255),w,b
  9310  002C64  0100               	movlb	0	; () banked
  9311  002C66  A4D8               	btfss	status,2,c
  9312  002C68  D00A               	goto	l6271
  9313                           
  9314                           ; BSR set to: 0
  9315  002C6A  0E00               	movlw	0
  9316  002C6C  0100               	movlb	0	; () banked
  9317  002C6E  6FA9               	movwf	?___fladd& (0+255),b
  9318  002C70  0E00               	movlw	0
  9319  002C72  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9320  002C74  0E00               	movlw	0
  9321  002C76  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9322  002C78  0E00               	movlw	0
  9323  002C7A  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9324                           
  9325                           ; BSR set to: 0
  9326  002C7C  0012               	return	
  9327  002C7E                     l6271:
  9328                           
  9329                           ; BSR set to: 0
  9330  002C7E  0100               	movlb	0	; () banked
  9331  002C80  51AD               	movf	___fladd@a& (0+255),w,b
  9332  002C82  0100               	movlb	0	; () banked
  9333  002C84  27A9               	addwf	___fladd@b& (0+255),f,b
  9334  002C86  0100               	movlb	0	; () banked
  9335  002C88  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9336  002C8A  0100               	movlb	0	; () banked
  9337  002C8C  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9338  002C8E  0100               	movlb	0	; () banked
  9339  002C90  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9340  002C92  0100               	movlb	0	; () banked
  9341  002C94  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9342  002C96  0100               	movlb	0	; () banked
  9343  002C98  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9344  002C9A  0100               	movlb	0	; () banked
  9345  002C9C  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9346                           
  9347                           ; BSR set to: 0
  9348  002C9E  0100               	movlb	0	; () banked
  9349  002CA0  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9350  002CA2  D0CC               	goto	l6325
  9351                           
  9352                           ; BSR set to: 0
  9353  002CA4  0100               	movlb	0	; () banked
  9354  002CA6  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9355  002CA8  D009               	goto	l6279
  9356                           
  9357                           ; BSR set to: 0
  9358  002CAA  0100               	movlb	0	; () banked
  9359  002CAC  90D8               	bcf	status,0,c
  9360  002CAE  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9361  002CB0  0100               	movlb	0	; () banked
  9362  002CB2  51BC               	movf	___fladd@grs& (0+255),w,b
  9363  002CB4  0901               	iorlw	1
  9364  002CB6  0100               	movlb	0	; () banked
  9365  002CB8  6FBC               	movwf	___fladd@grs& (0+255),b
  9366  002CBA  D003               	goto	l6281
  9367  002CBC                     l6279:
  9368                           
  9369                           ; BSR set to: 0
  9370  002CBC  0100               	movlb	0	; () banked
  9371  002CBE  90D8               	bcf	status,0,c
  9372  002CC0  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9373  002CC2                     l6281:
  9374                           
  9375                           ; BSR set to: 0
  9376  002CC2  0100               	movlb	0	; () banked
  9377  002CC4  A1A9               	btfss	___fladd@b& (0+255),0,b
  9378  002CC6  D002               	goto	l6285
  9379                           
  9380                           ; BSR set to: 0
  9381  002CC8  0100               	movlb	0	; () banked
  9382  002CCA  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9383  002CCC                     l6285:
  9384                           
  9385                           ; BSR set to: 0
  9386  002CCC  0100               	movlb	0	; () banked
  9387  002CCE  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9388  002CD0  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9389  002CD2  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9390  002CD4  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9391  002CD6  33A9               	rrcf	___fladd@b& (0+255),f,b
  9392                           
  9393                           ; BSR set to: 0
  9394  002CD8  0100               	movlb	0	; () banked
  9395  002CDA  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9396                           
  9397                           ; BSR set to: 0
  9398  002CDC  D0AF               	goto	l6325
  9399  002CDE                     l6289:
  9400                           
  9401                           ; BSR set to: 0
  9402  002CDE  0100               	movlb	0	; () banked
  9403  002CE0  51AD               	movf	___fladd@a& (0+255),w,b
  9404  002CE2  0100               	movlb	0	; () banked
  9405  002CE4  5DA9               	subwf	___fladd@b& (0+255),w,b
  9406  002CE6  0100               	movlb	0	; () banked
  9407  002CE8  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9408  002CEA  0100               	movlb	0	; () banked
  9409  002CEC  59AA               	subwfb	(___fladd@b+1)& (0+255),w,b
  9410  002CEE  0100               	movlb	0	; () banked
  9411  002CF0  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9412  002CF2  0100               	movlb	0	; () banked
  9413  002CF4  59AB               	subwfb	(___fladd@b+2)& (0+255),w,b
  9414  002CF6  0100               	movlb	0	; () banked
  9415  002CF8  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9416  002CFA  0A80               	xorlw	128
  9417  002CFC  0100               	movlb	0	; () banked
  9418  002CFE  6FB1               	movwf	??___fladd& (0+255),b
  9419  002D00  0100               	movlb	0	; () banked
  9420  002D02  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9421  002D04  0A80               	xorlw	128
  9422  002D06  0100               	movlb	0	; () banked
  9423  002D08  59B1               	subwfb	??___fladd& (0+255),w,b
  9424  002D0A  B0D8               	btfsc	status,0,c
  9425  002D0C  D050               	goto	l6299
  9426                           
  9427                           ; BSR set to: 0
  9428  002D0E  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9429  002D12  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9430  002D16  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9431  002D1A  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9432  002D1E  0100               	movlb	0	; () banked
  9433  002D20  1FB1               	comf	??___fladd& (0+255),f,b
  9434  002D22  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9435  002D24  1FB3               	comf	(??___fladd+2)& (0+255),f,b
  9436  002D26  1FB4               	comf	(??___fladd+3)& (0+255),f,b
  9437  002D28  2BB1               	incf	??___fladd& (0+255),f,b
  9438  002D2A  0E00               	movlw	0
  9439  002D2C  23B2               	addwfc	(??___fladd+1)& (0+255),f,b
  9440  002D2E  23B3               	addwfc	(??___fladd+2)& (0+255),f,b
  9441  002D30  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9442  002D32  0100               	movlb	0	; () banked
  9443  002D34  51AD               	movf	___fladd@a& (0+255),w,b
  9444  002D36  0100               	movlb	0	; () banked
  9445  002D38  25B1               	addwf	??___fladd& (0+255),w,b
  9446  002D3A  0100               	movlb	0	; () banked
  9447  002D3C  6FB5               	movwf	(??___fladd+4)& (0+255),b
  9448  002D3E  0100               	movlb	0	; () banked
  9449  002D40  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9450  002D42  0100               	movlb	0	; () banked
  9451  002D44  21B2               	addwfc	(??___fladd+1)& (0+255),w,b
  9452  002D46  0100               	movlb	0	; () banked
  9453  002D48  6FB6               	movwf	(??___fladd+5)& (0+255),b
  9454  002D4A  0100               	movlb	0	; () banked
  9455  002D4C  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9456  002D4E  0100               	movlb	0	; () banked
  9457  002D50  21B3               	addwfc	(??___fladd+2)& (0+255),w,b
  9458  002D52  0100               	movlb	0	; () banked
  9459  002D54  6FB7               	movwf	(??___fladd+6)& (0+255),b
  9460  002D56  0100               	movlb	0	; () banked
  9461  002D58  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9462  002D5A  0100               	movlb	0	; () banked
  9463  002D5C  21B4               	addwfc	(??___fladd+3)& (0+255),w,b
  9464  002D5E  0100               	movlb	0	; () banked
  9465  002D60  6FB8               	movwf	(??___fladd+7)& (0+255),b
  9466  002D62  0EFF               	movlw	255
  9467  002D64  0100               	movlb	0	; () banked
  9468  002D66  25B5               	addwf	(??___fladd+4)& (0+255),w,b
  9469  002D68  0100               	movlb	0	; () banked
  9470  002D6A  6FA9               	movwf	___fladd@b& (0+255),b
  9471  002D6C  0EFF               	movlw	255
  9472  002D6E  0100               	movlb	0	; () banked
  9473  002D70  21B6               	addwfc	(??___fladd+5)& (0+255),w,b
  9474  002D72  0100               	movlb	0	; () banked
  9475  002D74  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9476  002D76  0EFF               	movlw	255
  9477  002D78  0100               	movlb	0	; () banked
  9478  002D7A  21B7               	addwfc	(??___fladd+6)& (0+255),w,b
  9479  002D7C  0100               	movlb	0	; () banked
  9480  002D7E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9481  002D80  0EFF               	movlw	255
  9482  002D82  0100               	movlb	0	; () banked
  9483  002D84  21B8               	addwfc	(??___fladd+7)& (0+255),w,b
  9484  002D86  0100               	movlb	0	; () banked
  9485  002D88  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9486  002D8A  0E80               	movlw	128
  9487  002D8C  0100               	movlb	0	; () banked
  9488  002D8E  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9489                           
  9490                           ; BSR set to: 0
  9491  002D90  0100               	movlb	0	; () banked
  9492  002D92  6DBC               	negf	___fladd@grs& (0+255),b
  9493                           
  9494                           ; BSR set to: 0
  9495  002D94  0100               	movlb	0	; () banked
  9496  002D96  51BC               	movf	___fladd@grs& (0+255),w,b
  9497  002D98  0100               	movlb	0	; () banked
  9498  002D9A  A4D8               	btfss	status,2,c
  9499  002D9C  D018               	goto	l1347
  9500                           
  9501                           ; BSR set to: 0
  9502  002D9E  0E01               	movlw	1
  9503  002DA0  0100               	movlb	0	; () banked
  9504  002DA2  27A9               	addwf	___fladd@b& (0+255),f,b
  9505  002DA4  0E00               	movlw	0
  9506  002DA6  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9507  002DA8  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9508  002DAA  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9509                           
  9510                           ; BSR set to: 0
  9511  002DAC  D010               	goto	l1347
  9512  002DAE                     l6299:
  9513                           
  9514                           ; BSR set to: 0
  9515  002DAE  0100               	movlb	0	; () banked
  9516  002DB0  51AD               	movf	___fladd@a& (0+255),w,b
  9517  002DB2  0100               	movlb	0	; () banked
  9518  002DB4  5FA9               	subwf	___fladd@b& (0+255),f,b
  9519  002DB6  0100               	movlb	0	; () banked
  9520  002DB8  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9521  002DBA  0100               	movlb	0	; () banked
  9522  002DBC  5BAA               	subwfb	(___fladd@b+1)& (0+255),f,b
  9523  002DBE  0100               	movlb	0	; () banked
  9524  002DC0  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9525  002DC2  0100               	movlb	0	; () banked
  9526  002DC4  5BAB               	subwfb	(___fladd@b+2)& (0+255),f,b
  9527  002DC6  0100               	movlb	0	; () banked
  9528  002DC8  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9529  002DCA  0100               	movlb	0	; () banked
  9530  002DCC  5BAC               	subwfb	(___fladd@b+3)& (0+255),f,b
  9531  002DCE                     l1347:
  9532                           
  9533                           ; BSR set to: 0
  9534  002DCE  0100               	movlb	0	; () banked
  9535  002DD0  51A9               	movf	___fladd@b& (0+255),w,b
  9536  002DD2  0100               	movlb	0	; () banked
  9537  002DD4  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9538  002DD6  0100               	movlb	0	; () banked
  9539  002DD8  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9540  002DDA  0100               	movlb	0	; () banked
  9541  002DDC  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9542  002DDE  A4D8               	btfss	status,2,c
  9543  002DE0  D02A               	goto	l6323
  9544                           
  9545                           ; BSR set to: 0
  9546  002DE2  0100               	movlb	0	; () banked
  9547  002DE4  51BC               	movf	___fladd@grs& (0+255),w,b
  9548  002DE6  0100               	movlb	0	; () banked
  9549  002DE8  A4D8               	btfss	status,2,c
  9550  002DEA  D025               	goto	l6323
  9551                           
  9552                           ; BSR set to: 0
  9553  002DEC  0E00               	movlw	0
  9554  002DEE  0100               	movlb	0	; () banked
  9555  002DF0  6FA9               	movwf	?___fladd& (0+255),b
  9556  002DF2  0E00               	movlw	0
  9557  002DF4  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9558  002DF6  0E00               	movlw	0
  9559  002DF8  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9560  002DFA  0E00               	movlw	0
  9561  002DFC  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9562                           
  9563                           ; BSR set to: 0
  9564  002DFE  0012               	return	
  9565  002E00                     l6307:
  9566                           
  9567                           ; BSR set to: 0
  9568  002E00  0100               	movlb	0	; () banked
  9569  002E02  90D8               	bcf	status,0,c
  9570  002E04  37A9               	rlcf	___fladd@b& (0+255),f,b
  9571  002E06  37AA               	rlcf	(___fladd@b+1)& (0+255),f,b
  9572  002E08  37AB               	rlcf	(___fladd@b+2)& (0+255),f,b
  9573  002E0A  37AC               	rlcf	(___fladd@b+3)& (0+255),f,b
  9574                           
  9575                           ; BSR set to: 0
  9576  002E0C  0100               	movlb	0	; () banked
  9577  002E0E  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9578  002E10  D002               	goto	l6313
  9579                           
  9580                           ; BSR set to: 0
  9581  002E12  0100               	movlb	0	; () banked
  9582  002E14  81A9               	bsf	___fladd@b& (0+255),0,b
  9583  002E16                     l6313:
  9584                           
  9585                           ; BSR set to: 0
  9586  002E16  0100               	movlb	0	; () banked
  9587  002E18  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9588  002E1A  D003               	goto	l6317
  9589                           
  9590                           ; BSR set to: 0
  9591  002E1C  80D8               	bsf	status,0,c
  9592  002E1E  0100               	movlb	0	; () banked
  9593  002E20  D002               	goto	L5
  9594  002E22                     l6317:
  9595                           
  9596                           ; BSR set to: 0
  9597  002E22  0100               	movlb	0	; () banked
  9598  002E24  90D8               	bcf	status,0,c
  9599  002E26                     L5:
  9600  002E26  37BC               	rlcf	___fladd@grs& (0+255),f,b
  9601                           
  9602                           ; BSR set to: 0
  9603                           
  9604                           ; BSR set to: 0
  9605  002E28  0100               	movlb	0	; () banked
  9606  002E2A  51BB               	movf	___fladd@bexp& (0+255),w,b
  9607  002E2C  0100               	movlb	0	; () banked
  9608  002E2E  B4D8               	btfsc	status,2,c
  9609  002E30  D002               	goto	l6323
  9610                           
  9611                           ; BSR set to: 0
  9612  002E32  0100               	movlb	0	; () banked
  9613  002E34  07BB               	decf	___fladd@bexp& (0+255),f,b
  9614  002E36                     l6323:
  9615                           
  9616                           ; BSR set to: 0
  9617  002E36  0100               	movlb	0	; () banked
  9618  002E38  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  9619  002E3A  D7E2               	goto	l6307
  9620  002E3C                     l6325:
  9621                           
  9622                           ; BSR set to: 0
  9623  002E3C  0E00               	movlw	0
  9624  002E3E  0100               	movlb	0	; () banked
  9625  002E40  6FBA               	movwf	___fladd@aexp& (0+255),b
  9626                           
  9627                           ; BSR set to: 0
  9628  002E42  0100               	movlb	0	; () banked
  9629  002E44  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9630  002E46  D00D               	goto	l1356
  9631                           
  9632                           ; BSR set to: 0
  9633  002E48  C0BC  F0B1         	movff	___fladd@grs,??___fladd
  9634  002E4C  0E7F               	movlw	127
  9635  002E4E  0100               	movlb	0	; () banked
  9636  002E50  17B1               	andwf	??___fladd& (0+255),f,b
  9637  002E52  A4D8               	btfss	status,2,c
  9638  002E54  D003               	goto	l6333
  9639                           
  9640                           ; BSR set to: 0
  9641                           
  9642                           ; BSR set to: 0
  9643  002E56  0100               	movlb	0	; () banked
  9644  002E58  A1A9               	btfss	___fladd@b& (0+255),0,b
  9645  002E5A  D003               	goto	l1356
  9646  002E5C                     l6333:
  9647                           
  9648                           ; BSR set to: 0
  9649  002E5C  0E01               	movlw	1
  9650  002E5E  0100               	movlb	0	; () banked
  9651  002E60  6FBA               	movwf	___fladd@aexp& (0+255),b
  9652  002E62                     l1356:
  9653                           
  9654                           ; BSR set to: 0
  9655  002E62  0100               	movlb	0	; () banked
  9656  002E64  51BA               	movf	___fladd@aexp& (0+255),w,b
  9657  002E66  0100               	movlb	0	; () banked
  9658  002E68  B4D8               	btfsc	status,2,c
  9659  002E6A  D026               	goto	l6343
  9660                           
  9661                           ; BSR set to: 0
  9662  002E6C  0E01               	movlw	1
  9663  002E6E  0100               	movlb	0	; () banked
  9664  002E70  27A9               	addwf	___fladd@b& (0+255),f,b
  9665  002E72  0E00               	movlw	0
  9666  002E74  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9667  002E76  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9668  002E78  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9669                           
  9670                           ; BSR set to: 0
  9671  002E7A  0100               	movlb	0	; () banked
  9672  002E7C  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9673  002E7E  D01C               	goto	l6343
  9674                           
  9675                           ; BSR set to: 0
  9676  002E80  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9677  002E84  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9678  002E88  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9679  002E8C  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9680  002E90  0100               	movlb	0	; () banked
  9681  002E92  35B4               	rlcf	(??___fladd+3)& (0+255),w,b
  9682  002E94  33B4               	rrcf	(??___fladd+3)& (0+255),f,b
  9683  002E96  33B3               	rrcf	(??___fladd+2)& (0+255),f,b
  9684  002E98  33B2               	rrcf	(??___fladd+1)& (0+255),f,b
  9685  002E9A  33B1               	rrcf	??___fladd& (0+255),f,b
  9686  002E9C  C0B1  F0A9         	movff	??___fladd,___fladd@b
  9687  002EA0  C0B2  F0AA         	movff	??___fladd+1,___fladd@b+1
  9688  002EA4  C0B3  F0AB         	movff	??___fladd+2,___fladd@b+2
  9689  002EA8  C0B4  F0AC         	movff	??___fladd+3,___fladd@b+3
  9690  002EAC  0100               	movlb	0	; () banked
  9691  002EAE  29BB               	incf	___fladd@bexp& (0+255),w,b
  9692  002EB0  B4D8               	btfsc	status,2,c
  9693  002EB2  D002               	goto	l6343
  9694                           
  9695                           ; BSR set to: 0
  9696  002EB4  0100               	movlb	0	; () banked
  9697  002EB6  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9698  002EB8                     l6343:
  9699                           
  9700                           ; BSR set to: 0
  9701  002EB8  0100               	movlb	0	; () banked
  9702  002EBA  29BB               	incf	___fladd@bexp& (0+255),w,b
  9703  002EBC  B4D8               	btfsc	status,2,c
  9704  002EBE  D005               	goto	l6347
  9705                           
  9706                           ; BSR set to: 0
  9707  002EC0  0100               	movlb	0	; () banked
  9708  002EC2  51BB               	movf	___fladd@bexp& (0+255),w,b
  9709  002EC4  0100               	movlb	0	; () banked
  9710  002EC6  A4D8               	btfss	status,2,c
  9711  002EC8  D011               	goto	l6351
  9712  002ECA                     l6347:
  9713                           
  9714                           ; BSR set to: 0
  9715  002ECA  0E00               	movlw	0
  9716  002ECC  0100               	movlb	0	; () banked
  9717  002ECE  6FA9               	movwf	___fladd@b& (0+255),b
  9718  002ED0  0E00               	movlw	0
  9719  002ED2  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9720  002ED4  0E00               	movlw	0
  9721  002ED6  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9722  002ED8  0E00               	movlw	0
  9723  002EDA  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9724  002EDC  0100               	movlb	0	; () banked
  9725  002EDE  51BB               	movf	___fladd@bexp& (0+255),w,b
  9726  002EE0  0100               	movlb	0	; () banked
  9727  002EE2  A4D8               	btfss	status,2,c
  9728  002EE4  D003               	goto	l6351
  9729                           
  9730                           ; BSR set to: 0
  9731  002EE6  0E00               	movlw	0
  9732  002EE8  0100               	movlb	0	; () banked
  9733  002EEA  6FB9               	movwf	___fladd@signs& (0+255),b
  9734  002EEC                     l6351:
  9735                           
  9736                           ; BSR set to: 0
  9737  002EEC  0100               	movlb	0	; () banked
  9738  002EEE  A1BB               	btfss	___fladd@bexp& (0+255),0,b
  9739  002EF0  D003               	goto	l6355
  9740                           
  9741                           ; BSR set to: 0
  9742  002EF2  0100               	movlb	0	; () banked
  9743  002EF4  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  9744  002EF6  D002               	goto	l6357
  9745  002EF8                     l6355:
  9746                           
  9747                           ; BSR set to: 0
  9748  002EF8  0100               	movlb	0	; () banked
  9749  002EFA  9FAB               	bcf	(___fladd@b+2)& (0+255),7,b
  9750  002EFC                     l6357:
  9751                           
  9752                           ; BSR set to: 0
  9753  002EFC  0100               	movlb	0	; () banked
  9754  002EFE  90D8               	bcf	status,0,c
  9755  002F00  31BB               	rrcf	___fladd@bexp& (0+255),w,b
  9756  002F02  0100               	movlb	0	; () banked
  9757  002F04  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9758                           
  9759                           ; BSR set to: 0
  9760  002F06  0100               	movlb	0	; () banked
  9761  002F08  AFB9               	btfss	___fladd@signs& (0+255),7,b
  9762  002F0A  D002               	goto	l6363
  9763                           
  9764                           ; BSR set to: 0
  9765  002F0C  0100               	movlb	0	; () banked
  9766  002F0E  8FAC               	bsf	(___fladd@b+3)& (0+255),7,b
  9767  002F10                     l6363:
  9768                           
  9769                           ; BSR set to: 0
  9770  002F10  C0A9  F0A9         	movff	___fladd@b,?___fladd
  9771  002F14  C0AA  F0AA         	movff	___fladd@b+1,?___fladd+1
  9772  002F18  C0AB  F0AB         	movff	___fladd@b+2,?___fladd+2
  9773  002F1C  C0AC  F0AC         	movff	___fladd@b+3,?___fladd+3
  9774  002F20  0012               	return	
  9775  002F22                     __end_of___fladd:
  9776                           	opt stack 0
  9777                           tblptru	equ	0xFF8
  9778                           tblptrh	equ	0xFF7
  9779                           tblptrl	equ	0xFF6
  9780                           tablat	equ	0xFF5
  9781                           prodh	equ	0xFF4
  9782                           prodl	equ	0xFF3
  9783                           postinc0	equ	0xFEE
  9784                           wreg	equ	0xFE8
  9785                           postdec1	equ	0xFE5
  9786                           fsr1l	equ	0xFE1
  9787                           indf2	equ	0xFDF
  9788                           postinc2	equ	0xFDE
  9789                           postdec2	equ	0xFDD
  9790                           fsr2h	equ	0xFDA
  9791                           fsr2l	equ	0xFD9
  9792                           status	equ	0xFD8
  9793                           
  9794 ;; *************** function ___flge *****************
  9795 ;; Defined at:
  9796 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  9797 ;; Parameters:    Size  Location     Type
  9798 ;;  ff1             4  101[BANK0 ] unsigned char 
  9799 ;;  ff2             4  105[BANK0 ] unsigned char 
  9800 ;; Auto vars:     Size  Location     Type
  9801 ;;		None
  9802 ;; Return value:  Size  Location     Type
  9803 ;;		None               void
  9804 ;; Registers used:
  9805 ;;		wreg, status,2, status,0
  9806 ;; Tracked objects:
  9807 ;;		On entry : 0/0
  9808 ;;		On exit  : 0/0
  9809 ;;		Unchanged: 0/0
  9810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9811 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9813 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9814 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9815 ;;Total ram usage:       12 bytes
  9816 ;; Hardware stack levels used:    1
  9817 ;; Hardware stack levels required when called:    4
  9818 ;; This function calls:
  9819 ;;		Nothing
  9820 ;; This function is called by:
  9821 ;;		_parallelo
  9822 ;;		_asin
  9823 ;;		_atan
  9824 ;;		_cos
  9825 ;;		_sin
  9826 ;;		_floor
  9827 ;; This function uses a non-reentrant model
  9828 ;;
  9829                           
  9830                           	psect	text24
  9831  0053AE                     __ptext24:
  9832                           	opt stack 0
  9833  0053AE                     ___flge:
  9834                           	opt stack 22
  9835                           
  9836                           ; BSR set to: 0
  9837                           ;incstack = 0
  9838  0053AE  0E00               	movlw	0
  9839  0053B0  0100               	movlb	0	; () banked
  9840  0053B2  15C5               	andwf	___flge@ff1& (0+255),w,b
  9841  0053B4  0100               	movlb	0	; () banked
  9842  0053B6  6FCD               	movwf	??___flge& (0+255),b
  9843  0053B8  0E00               	movlw	0
  9844  0053BA  0100               	movlb	0	; () banked
  9845  0053BC  15C6               	andwf	(___flge@ff1+1)& (0+255),w,b
  9846  0053BE  0100               	movlb	0	; () banked
  9847  0053C0  6FCE               	movwf	(??___flge+1)& (0+255),b
  9848  0053C2  0E80               	movlw	128
  9849  0053C4  0100               	movlb	0	; () banked
  9850  0053C6  15C7               	andwf	(___flge@ff1+2)& (0+255),w,b
  9851  0053C8  0100               	movlb	0	; () banked
  9852  0053CA  6FCF               	movwf	(??___flge+2)& (0+255),b
  9853  0053CC  0E7F               	movlw	127
  9854  0053CE  0100               	movlb	0	; () banked
  9855  0053D0  15C8               	andwf	(___flge@ff1+3)& (0+255),w,b
  9856  0053D2  0100               	movlb	0	; () banked
  9857  0053D4  6FD0               	movwf	(??___flge+3)& (0+255),b
  9858  0053D6  0100               	movlb	0	; () banked
  9859  0053D8  51CD               	movf	??___flge& (0+255),w,b
  9860  0053DA  0100               	movlb	0	; () banked
  9861  0053DC  11CE               	iorwf	(??___flge+1)& (0+255),w,b
  9862  0053DE  0100               	movlb	0	; () banked
  9863  0053E0  11CF               	iorwf	(??___flge+2)& (0+255),w,b
  9864  0053E2  0100               	movlb	0	; () banked
  9865  0053E4  11D0               	iorwf	(??___flge+3)& (0+255),w,b
  9866  0053E6  A4D8               	btfss	status,2,c
  9867  0053E8  D009               	goto	l6501
  9868                           
  9869                           ; BSR set to: 0
  9870  0053EA  0E00               	movlw	0
  9871  0053EC  0100               	movlb	0	; () banked
  9872  0053EE  6FC5               	movwf	___flge@ff1& (0+255),b
  9873  0053F0  0E00               	movlw	0
  9874  0053F2  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  9875  0053F4  0E00               	movlw	0
  9876  0053F6  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  9877  0053F8  0E00               	movlw	0
  9878  0053FA  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  9879  0053FC                     l6501:
  9880                           
  9881                           ; BSR set to: 0
  9882  0053FC  0E00               	movlw	0
  9883  0053FE  0100               	movlb	0	; () banked
  9884  005400  15C9               	andwf	___flge@ff2& (0+255),w,b
  9885  005402  0100               	movlb	0	; () banked
  9886  005404  6FCD               	movwf	??___flge& (0+255),b
  9887  005406  0E00               	movlw	0
  9888  005408  0100               	movlb	0	; () banked
  9889  00540A  15CA               	andwf	(___flge@ff2+1)& (0+255),w,b
  9890  00540C  0100               	movlb	0	; () banked
  9891  00540E  6FCE               	movwf	(??___flge+1)& (0+255),b
  9892  005410  0E80               	movlw	128
  9893  005412  0100               	movlb	0	; () banked
  9894  005414  15CB               	andwf	(___flge@ff2+2)& (0+255),w,b
  9895  005416  0100               	movlb	0	; () banked
  9896  005418  6FCF               	movwf	(??___flge+2)& (0+255),b
  9897  00541A  0E7F               	movlw	127
  9898  00541C  0100               	movlb	0	; () banked
  9899  00541E  15CC               	andwf	(___flge@ff2+3)& (0+255),w,b
  9900  005420  0100               	movlb	0	; () banked
  9901  005422  6FD0               	movwf	(??___flge+3)& (0+255),b
  9902  005424  0100               	movlb	0	; () banked
  9903  005426  51CD               	movf	??___flge& (0+255),w,b
  9904  005428  0100               	movlb	0	; () banked
  9905  00542A  11CE               	iorwf	(??___flge+1)& (0+255),w,b
  9906  00542C  0100               	movlb	0	; () banked
  9907  00542E  11CF               	iorwf	(??___flge+2)& (0+255),w,b
  9908  005430  0100               	movlb	0	; () banked
  9909  005432  11D0               	iorwf	(??___flge+3)& (0+255),w,b
  9910  005434  A4D8               	btfss	status,2,c
  9911  005436  D009               	goto	l6505
  9912                           
  9913                           ; BSR set to: 0
  9914  005438  0E00               	movlw	0
  9915  00543A  0100               	movlb	0	; () banked
  9916  00543C  6FC9               	movwf	___flge@ff2& (0+255),b
  9917  00543E  0E00               	movlw	0
  9918  005440  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  9919  005442  0E00               	movlw	0
  9920  005444  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  9921  005446  0E00               	movlw	0
  9922  005448  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  9923  00544A                     l6505:
  9924                           
  9925                           ; BSR set to: 0
  9926  00544A  0100               	movlb	0	; () banked
  9927  00544C  AFC8               	btfss	(___flge@ff1+3)& (0+255),7,b
  9928  00544E  D026               	goto	l6509
  9929                           
  9930                           ; BSR set to: 0
  9931  005450  C0C5  F0CD         	movff	___flge@ff1,??___flge
  9932  005454  C0C6  F0CE         	movff	___flge@ff1+1,??___flge+1
  9933  005458  C0C7  F0CF         	movff	___flge@ff1+2,??___flge+2
  9934  00545C  C0C8  F0D0         	movff	___flge@ff1+3,??___flge+3
  9935  005460  0100               	movlb	0	; () banked
  9936  005462  1FCD               	comf	??___flge& (0+255),f,b
  9937  005464  1FCE               	comf	(??___flge+1)& (0+255),f,b
  9938  005466  1FCF               	comf	(??___flge+2)& (0+255),f,b
  9939  005468  1FD0               	comf	(??___flge+3)& (0+255),f,b
  9940  00546A  2BCD               	incf	??___flge& (0+255),f,b
  9941  00546C  0E00               	movlw	0
  9942  00546E  23CE               	addwfc	(??___flge+1)& (0+255),f,b
  9943  005470  23CF               	addwfc	(??___flge+2)& (0+255),f,b
  9944  005472  23D0               	addwfc	(??___flge+3)& (0+255),f,b
  9945  005474  0E00               	movlw	0
  9946  005476  0100               	movlb	0	; () banked
  9947  005478  25CD               	addwf	??___flge& (0+255),w,b
  9948  00547A  0100               	movlb	0	; () banked
  9949  00547C  6FC5               	movwf	___flge@ff1& (0+255),b
  9950  00547E  0E00               	movlw	0
  9951  005480  0100               	movlb	0	; () banked
  9952  005482  21CE               	addwfc	(??___flge+1)& (0+255),w,b
  9953  005484  0100               	movlb	0	; () banked
  9954  005486  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  9955  005488  0E00               	movlw	0
  9956  00548A  0100               	movlb	0	; () banked
  9957  00548C  21CF               	addwfc	(??___flge+2)& (0+255),w,b
  9958  00548E  0100               	movlb	0	; () banked
  9959  005490  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  9960  005492  0E80               	movlw	128
  9961  005494  0100               	movlb	0	; () banked
  9962  005496  21D0               	addwfc	(??___flge+3)& (0+255),w,b
  9963  005498  0100               	movlb	0	; () banked
  9964  00549A  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  9965  00549C                     l6509:
  9966                           
  9967                           ; BSR set to: 0
  9968  00549C  0100               	movlb	0	; () banked
  9969  00549E  AFCC               	btfss	(___flge@ff2+3)& (0+255),7,b
  9970  0054A0  D026               	goto	l1078
  9971                           
  9972                           ; BSR set to: 0
  9973  0054A2  C0C9  F0CD         	movff	___flge@ff2,??___flge
  9974  0054A6  C0CA  F0CE         	movff	___flge@ff2+1,??___flge+1
  9975  0054AA  C0CB  F0CF         	movff	___flge@ff2+2,??___flge+2
  9976  0054AE  C0CC  F0D0         	movff	___flge@ff2+3,??___flge+3
  9977  0054B2  0100               	movlb	0	; () banked
  9978  0054B4  1FCD               	comf	??___flge& (0+255),f,b
  9979  0054B6  1FCE               	comf	(??___flge+1)& (0+255),f,b
  9980  0054B8  1FCF               	comf	(??___flge+2)& (0+255),f,b
  9981  0054BA  1FD0               	comf	(??___flge+3)& (0+255),f,b
  9982  0054BC  2BCD               	incf	??___flge& (0+255),f,b
  9983  0054BE  0E00               	movlw	0
  9984  0054C0  23CE               	addwfc	(??___flge+1)& (0+255),f,b
  9985  0054C2  23CF               	addwfc	(??___flge+2)& (0+255),f,b
  9986  0054C4  23D0               	addwfc	(??___flge+3)& (0+255),f,b
  9987  0054C6  0E00               	movlw	0
  9988  0054C8  0100               	movlb	0	; () banked
  9989  0054CA  25CD               	addwf	??___flge& (0+255),w,b
  9990  0054CC  0100               	movlb	0	; () banked
  9991  0054CE  6FC9               	movwf	___flge@ff2& (0+255),b
  9992  0054D0  0E00               	movlw	0
  9993  0054D2  0100               	movlb	0	; () banked
  9994  0054D4  21CE               	addwfc	(??___flge+1)& (0+255),w,b
  9995  0054D6  0100               	movlb	0	; () banked
  9996  0054D8  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  9997  0054DA  0E00               	movlw	0
  9998  0054DC  0100               	movlb	0	; () banked
  9999  0054DE  21CF               	addwfc	(??___flge+2)& (0+255),w,b
 10000  0054E0  0100               	movlb	0	; () banked
 10001  0054E2  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
 10002  0054E4  0E80               	movlw	128
 10003  0054E6  0100               	movlb	0	; () banked
 10004  0054E8  21D0               	addwfc	(??___flge+3)& (0+255),w,b
 10005  0054EA  0100               	movlb	0	; () banked
 10006  0054EC  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
 10007  0054EE                     l1078:
 10008                           
 10009                           ; BSR set to: 0
 10010  0054EE  0E00               	movlw	0
 10011  0054F0  0100               	movlb	0	; () banked
 10012  0054F2  1BC5               	xorwf	___flge@ff1& (0+255),f,b
 10013  0054F4  0E00               	movlw	0
 10014  0054F6  1BC6               	xorwf	(___flge@ff1+1)& (0+255),f,b
 10015  0054F8  0E00               	movlw	0
 10016  0054FA  1BC7               	xorwf	(___flge@ff1+2)& (0+255),f,b
 10017  0054FC  0E80               	movlw	128
 10018  0054FE  1BC8               	xorwf	(___flge@ff1+3)& (0+255),f,b
 10019  005500  0E00               	movlw	0
 10020  005502  0100               	movlb	0	; () banked
 10021  005504  1BC9               	xorwf	___flge@ff2& (0+255),f,b
 10022  005506  0E00               	movlw	0
 10023  005508  1BCA               	xorwf	(___flge@ff2+1)& (0+255),f,b
 10024  00550A  0E00               	movlw	0
 10025  00550C  1BCB               	xorwf	(___flge@ff2+2)& (0+255),f,b
 10026  00550E  0E80               	movlw	128
 10027  005510  1BCC               	xorwf	(___flge@ff2+3)& (0+255),f,b
 10028  005512  0100               	movlb	0	; () banked
 10029  005514  51C9               	movf	___flge@ff2& (0+255),w,b
 10030  005516  0100               	movlb	0	; () banked
 10031  005518  5DC5               	subwf	___flge@ff1& (0+255),w,b
 10032  00551A  0100               	movlb	0	; () banked
 10033  00551C  51CA               	movf	(___flge@ff2+1)& (0+255),w,b
 10034  00551E  0100               	movlb	0	; () banked
 10035  005520  59C6               	subwfb	(___flge@ff1+1)& (0+255),w,b
 10036  005522  0100               	movlb	0	; () banked
 10037  005524  51CB               	movf	(___flge@ff2+2)& (0+255),w,b
 10038  005526  0100               	movlb	0	; () banked
 10039  005528  59C7               	subwfb	(___flge@ff1+2)& (0+255),w,b
 10040  00552A  0100               	movlb	0	; () banked
 10041  00552C  51CC               	movf	(___flge@ff2+3)& (0+255),w,b
 10042  00552E  0100               	movlb	0	; () banked
 10043  005530  59C8               	subwfb	(___flge@ff1+3)& (0+255),w,b
 10044  005532  B0D8               	btfsc	status,0,c
 10045  005534  D002               	goto	l6515
 10046                           
 10047                           ; BSR set to: 0
 10048  005536  90D8               	bcf	status,0,c
 10049  005538  0012               	return	
 10050  00553A                     l6515:
 10051                           
 10052                           ; BSR set to: 0
 10053  00553A  80D8               	bsf	status,0,c
 10054                           
 10055                           ; BSR set to: 0
 10056  00553C  0012               	return	
 10057  00553E                     __end_of___flge:
 10058                           	opt stack 0
 10059                           tblptru	equ	0xFF8
 10060                           tblptrh	equ	0xFF7
 10061                           tblptrl	equ	0xFF6
 10062                           tablat	equ	0xFF5
 10063                           prodh	equ	0xFF4
 10064                           prodl	equ	0xFF3
 10065                           postinc0	equ	0xFEE
 10066                           wreg	equ	0xFE8
 10067                           postdec1	equ	0xFE5
 10068                           fsr1l	equ	0xFE1
 10069                           indf2	equ	0xFDF
 10070                           postinc2	equ	0xFDE
 10071                           postdec2	equ	0xFDD
 10072                           fsr2h	equ	0xFDA
 10073                           fsr2l	equ	0xFD9
 10074                           status	equ	0xFD8
 10075                           
 10076 ;; *************** function ___fldiv *****************
 10077 ;; Defined at:
 10078 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 10079 ;; Parameters:    Size  Location     Type
 10080 ;;  b               4   23[BANK0 ] unsigned char 
 10081 ;;  a               4   27[BANK0 ] unsigned char 
 10082 ;; Auto vars:     Size  Location     Type
 10083 ;;  grs             4   42[BANK0 ] unsigned long 
 10084 ;;  rem             4   36[BANK0 ] unsigned long 
 10085 ;;  new_exp         2   40[BANK0 ] int 
 10086 ;;  aexp            1   47[BANK0 ] unsigned char 
 10087 ;;  bexp            1   46[BANK0 ] unsigned char 
 10088 ;;  sign            1   35[BANK0 ] unsigned char 
 10089 ;; Return value:  Size  Location     Type
 10090 ;;                  4   23[BANK0 ] unsigned char 
 10091 ;; Registers used:
 10092 ;;		wreg, status,2, status,0
 10093 ;; Tracked objects:
 10094 ;;		On entry : 0/0
 10095 ;;		On exit  : 0/0
 10096 ;;		Unchanged: 0/0
 10097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10098 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10099 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10100 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10101 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10102 ;;Total ram usage:       25 bytes
 10103 ;; Hardware stack levels used:    1
 10104 ;; Hardware stack levels required when called:    4
 10105 ;; This function calls:
 10106 ;;		Nothing
 10107 ;; This function is called by:
 10108 ;;		_parallelo
 10109 ;;		_matematica
 10110 ;;		_asin
 10111 ;;		_atan
 10112 ;;		_sin
 10113 ;; This function uses a non-reentrant model
 10114 ;;
 10115                           
 10116                           	psect	text25
 10117  003BFE                     __ptext25:
 10118                           	opt stack 0
 10119  003BFE                     ___fldiv:
 10120                           	opt stack 22
 10121                           
 10122                           ; BSR set to: 0
 10123                           ;incstack = 0
 10124  003BFE  0100               	movlb	0	; () banked
 10125  003C00  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10126  003C02  0B80               	andlw	128
 10127  003C04  0100               	movlb	0	; () banked
 10128  003C06  6F83               	movwf	___fldiv@sign& (0+255),b
 10129  003C08  0100               	movlb	0	; () banked
 10130  003C0A  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10131  003C0C  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
 10132  003C0E  0100               	movlb	0	; () banked
 10133  003C10  6F8E               	movwf	___fldiv@bexp& (0+255),b
 10134                           
 10135                           ; BSR set to: 0
 10136  003C12  0100               	movlb	0	; () banked
 10137  003C14  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10138  003C16  D002               	goto	l6635
 10139                           
 10140                           ; BSR set to: 0
 10141  003C18  0100               	movlb	0	; () banked
 10142  003C1A  818E               	bsf	___fldiv@bexp& (0+255),0,b
 10143  003C1C                     l6635:
 10144                           
 10145                           ; BSR set to: 0
 10146  003C1C  0100               	movlb	0	; () banked
 10147  003C1E  518E               	movf	___fldiv@bexp& (0+255),w,b
 10148  003C20  0100               	movlb	0	; () banked
 10149  003C22  B4D8               	btfsc	status,2,c
 10150  003C24  D012               	goto	l6645
 10151                           
 10152                           ; BSR set to: 0
 10153  003C26  0100               	movlb	0	; () banked
 10154  003C28  298E               	incf	___fldiv@bexp& (0+255),w,b
 10155  003C2A  A4D8               	btfss	status,2,c
 10156  003C2C  D009               	goto	l6641
 10157                           
 10158                           ; BSR set to: 0
 10159  003C2E  0E00               	movlw	0
 10160  003C30  0100               	movlb	0	; () banked
 10161  003C32  6F77               	movwf	___fldiv@b& (0+255),b
 10162  003C34  0E00               	movlw	0
 10163  003C36  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10164  003C38  0E00               	movlw	0
 10165  003C3A  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10166  003C3C  0E00               	movlw	0
 10167  003C3E  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10168  003C40                     l6641:
 10169                           
 10170                           ; BSR set to: 0
 10171  003C40  0100               	movlb	0	; () banked
 10172  003C42  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10173                           
 10174                           ; BSR set to: 0
 10175  003C44  0E00               	movlw	0
 10176  003C46  0100               	movlb	0	; () banked
 10177  003C48  D008               	goto	L6
 10178  003C4A                     l6645:
 10179                           
 10180                           ; BSR set to: 0
 10181  003C4A  0E00               	movlw	0
 10182  003C4C  0100               	movlb	0	; () banked
 10183  003C4E  6F77               	movwf	___fldiv@b& (0+255),b
 10184  003C50  0E00               	movlw	0
 10185  003C52  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10186  003C54  0E00               	movlw	0
 10187  003C56  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10188  003C58  0E00               	movlw	0
 10189  003C5A                     L6:
 10190  003C5A  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10191                           
 10192                           ; BSR set to: 0
 10193                           
 10194                           ; BSR set to: 0
 10195  003C5C  0100               	movlb	0	; () banked
 10196  003C5E  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10197  003C60  0B80               	andlw	128
 10198  003C62  0100               	movlb	0	; () banked
 10199  003C64  1B83               	xorwf	___fldiv@sign& (0+255),f,b
 10200                           
 10201                           ; BSR set to: 0
 10202  003C66  0100               	movlb	0	; () banked
 10203  003C68  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10204  003C6A  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
 10205  003C6C  0100               	movlb	0	; () banked
 10206  003C6E  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10207                           
 10208                           ; BSR set to: 0
 10209  003C70  0100               	movlb	0	; () banked
 10210  003C72  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
 10211  003C74  D002               	goto	l6655
 10212                           
 10213                           ; BSR set to: 0
 10214  003C76  0100               	movlb	0	; () banked
 10215  003C78  818F               	bsf	___fldiv@aexp& (0+255),0,b
 10216  003C7A                     l6655:
 10217                           
 10218                           ; BSR set to: 0
 10219  003C7A  0100               	movlb	0	; () banked
 10220  003C7C  518F               	movf	___fldiv@aexp& (0+255),w,b
 10221  003C7E  0100               	movlb	0	; () banked
 10222  003C80  B4D8               	btfsc	status,2,c
 10223  003C82  D012               	goto	l6665
 10224                           
 10225                           ; BSR set to: 0
 10226  003C84  0100               	movlb	0	; () banked
 10227  003C86  298F               	incf	___fldiv@aexp& (0+255),w,b
 10228  003C88  A4D8               	btfss	status,2,c
 10229  003C8A  D009               	goto	l6661
 10230                           
 10231                           ; BSR set to: 0
 10232  003C8C  0E00               	movlw	0
 10233  003C8E  0100               	movlb	0	; () banked
 10234  003C90  6F7B               	movwf	___fldiv@a& (0+255),b
 10235  003C92  0E00               	movlw	0
 10236  003C94  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10237  003C96  0E00               	movlw	0
 10238  003C98  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10239  003C9A  0E00               	movlw	0
 10240  003C9C  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10241  003C9E                     l6661:
 10242                           
 10243                           ; BSR set to: 0
 10244  003C9E  0100               	movlb	0	; () banked
 10245  003CA0  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
 10246                           
 10247                           ; BSR set to: 0
 10248  003CA2  0E00               	movlw	0
 10249  003CA4  0100               	movlb	0	; () banked
 10250  003CA6  D008               	goto	L7
 10251  003CA8                     l6665:
 10252                           
 10253                           ; BSR set to: 0
 10254  003CA8  0E00               	movlw	0
 10255  003CAA  0100               	movlb	0	; () banked
 10256  003CAC  6F7B               	movwf	___fldiv@a& (0+255),b
 10257  003CAE  0E00               	movlw	0
 10258  003CB0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10259  003CB2  0E00               	movlw	0
 10260  003CB4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10261  003CB6  0E00               	movlw	0
 10262  003CB8                     L7:
 10263  003CB8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10264                           
 10265                           ; BSR set to: 0
 10266                           
 10267                           ; BSR set to: 0
 10268  003CBA  0100               	movlb	0	; () banked
 10269  003CBC  517B               	movf	___fldiv@a& (0+255),w,b
 10270  003CBE  0100               	movlb	0	; () banked
 10271  003CC0  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10272  003CC2  0100               	movlb	0	; () banked
 10273  003CC4  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10274  003CC6  0100               	movlb	0	; () banked
 10275  003CC8  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10276  003CCA  A4D8               	btfss	status,2,c
 10277  003CCC  D017               	goto	l6677
 10278                           
 10279                           ; BSR set to: 0
 10280  003CCE  0E00               	movlw	0
 10281  003CD0  0100               	movlb	0	; () banked
 10282  003CD2  6F77               	movwf	___fldiv@b& (0+255),b
 10283  003CD4  0E00               	movlw	0
 10284  003CD6  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10285  003CD8  0E00               	movlw	0
 10286  003CDA  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10287  003CDC  0E00               	movlw	0
 10288  003CDE  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10289                           
 10290                           ; BSR set to: 0
 10291  003CE0  0100               	movlb	0	; () banked
 10292  003CE2  0E80               	movlw	128
 10293  003CE4  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10294  003CE6  0E7F               	movlw	127
 10295  003CE8  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10296                           
 10297                           ; BSR set to: 0
 10298  003CEA  C077  F077         	movff	___fldiv@b,?___fldiv
 10299  003CEE  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10300  003CF2  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10301  003CF6  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10302                           
 10303                           ; BSR set to: 0
 10304  003CFA  0012               	return	
 10305  003CFC                     l6677:
 10306                           
 10307                           ; BSR set to: 0
 10308  003CFC  0100               	movlb	0	; () banked
 10309  003CFE  518E               	movf	___fldiv@bexp& (0+255),w,b
 10310  003D00  0100               	movlb	0	; () banked
 10311  003D02  A4D8               	btfss	status,2,c
 10312  003D04  D012               	goto	l6685
 10313                           
 10314                           ; BSR set to: 0
 10315  003D06  0E00               	movlw	0
 10316  003D08  0100               	movlb	0	; () banked
 10317  003D0A  6F77               	movwf	___fldiv@b& (0+255),b
 10318  003D0C  0E00               	movlw	0
 10319  003D0E  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10320  003D10  0E00               	movlw	0
 10321  003D12  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10322  003D14  0E00               	movlw	0
 10323  003D16  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10324                           
 10325                           ; BSR set to: 0
 10326  003D18  C077  F077         	movff	___fldiv@b,?___fldiv
 10327  003D1C  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10328  003D20  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10329  003D24  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10330                           
 10331                           ; BSR set to: 0
 10332  003D28  0012               	return	
 10333  003D2A                     l6685:
 10334                           
 10335                           ; BSR set to: 0
 10336  003D2A  0100               	movlb	0	; () banked
 10337  003D2C  518F               	movf	___fldiv@aexp& (0+255),w,b
 10338  003D2E  0100               	movlb	0	; () banked
 10339  003D30  6F7F               	movwf	??___fldiv& (0+255),b
 10340  003D32  6B80               	clrf	(??___fldiv+1)& (0+255),b
 10341  003D34  0100               	movlb	0	; () banked
 10342  003D36  1F7F               	comf	??___fldiv& (0+255),f,b
 10343  003D38  1F80               	comf	(??___fldiv+1)& (0+255),f,b
 10344  003D3A  4B7F               	infsnz	??___fldiv& (0+255),f,b
 10345  003D3C  2B80               	incf	(??___fldiv+1)& (0+255),f,b
 10346  003D3E  0100               	movlb	0	; () banked
 10347  003D40  518E               	movf	___fldiv@bexp& (0+255),w,b
 10348  003D42  0100               	movlb	0	; () banked
 10349  003D44  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10350  003D46  6B82               	clrf	(??___fldiv+3)& (0+255),b
 10351  003D48  0100               	movlb	0	; () banked
 10352  003D4A  517F               	movf	??___fldiv& (0+255),w,b
 10353  003D4C  0100               	movlb	0	; () banked
 10354  003D4E  2781               	addwf	(??___fldiv+2)& (0+255),f,b
 10355  003D50  0100               	movlb	0	; () banked
 10356  003D52  5180               	movf	(??___fldiv+1)& (0+255),w,b
 10357  003D54  0100               	movlb	0	; () banked
 10358  003D56  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
 10359  003D58  0E7F               	movlw	127
 10360  003D5A  0100               	movlb	0	; () banked
 10361  003D5C  2581               	addwf	(??___fldiv+2)& (0+255),w,b
 10362  003D5E  0100               	movlb	0	; () banked
 10363  003D60  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10364  003D62  0E00               	movlw	0
 10365  003D64  0100               	movlb	0	; () banked
 10366  003D66  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
 10367  003D68  0100               	movlb	0	; () banked
 10368  003D6A  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10369                           
 10370                           ; BSR set to: 0
 10371  003D6C  C077  F084         	movff	___fldiv@b,___fldiv@rem
 10372  003D70  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 10373  003D74  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 10374  003D78  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 10375                           
 10376                           ; BSR set to: 0
 10377  003D7C  0E00               	movlw	0
 10378  003D7E  0100               	movlb	0	; () banked
 10379  003D80  6F77               	movwf	___fldiv@b& (0+255),b
 10380  003D82  0E00               	movlw	0
 10381  003D84  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10382  003D86  0E00               	movlw	0
 10383  003D88  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10384  003D8A  0E00               	movlw	0
 10385  003D8C  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10386                           
 10387                           ; BSR set to: 0
 10388  003D8E  0E00               	movlw	0
 10389  003D90  0100               	movlb	0	; () banked
 10390  003D92  6F8A               	movwf	___fldiv@grs& (0+255),b
 10391  003D94  0E00               	movlw	0
 10392  003D96  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
 10393  003D98  0E00               	movlw	0
 10394  003D9A  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
 10395  003D9C  0E00               	movlw	0
 10396  003D9E  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
 10397                           
 10398                           ; BSR set to: 0
 10399  003DA0  0E00               	movlw	0
 10400  003DA2  0100               	movlb	0	; () banked
 10401  003DA4  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10402  003DA6  D042               	goto	l1386
 10403  003DA8                     l6695:
 10404                           
 10405                           ; BSR set to: 0
 10406  003DA8  0100               	movlb	0	; () banked
 10407  003DAA  518F               	movf	___fldiv@aexp& (0+255),w,b
 10408  003DAC  0100               	movlb	0	; () banked
 10409  003DAE  B4D8               	btfsc	status,2,c
 10410  003DB0  D017               	goto	l6703
 10411                           
 10412                           ; BSR set to: 0
 10413  003DB2  0100               	movlb	0	; () banked
 10414  003DB4  90D8               	bcf	status,0,c
 10415  003DB6  3784               	rlcf	___fldiv@rem& (0+255),f,b
 10416  003DB8  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10417  003DBA  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10418  003DBC  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10419  003DBE  0100               	movlb	0	; () banked
 10420  003DC0  90D8               	bcf	status,0,c
 10421  003DC2  3777               	rlcf	___fldiv@b& (0+255),f,b
 10422  003DC4  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10423  003DC6  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10424  003DC8  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10425                           
 10426                           ; BSR set to: 0
 10427  003DCA  0100               	movlb	0	; () banked
 10428  003DCC  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10429  003DCE  D002               	goto	l1389
 10430                           
 10431                           ; BSR set to: 0
 10432  003DD0  0100               	movlb	0	; () banked
 10433  003DD2  8177               	bsf	___fldiv@b& (0+255),0,b
 10434  003DD4                     l1389:
 10435                           
 10436                           ; BSR set to: 0
 10437  003DD4  0100               	movlb	0	; () banked
 10438  003DD6  90D8               	bcf	status,0,c
 10439  003DD8  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10440  003DDA  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10441  003DDC  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10442  003DDE  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10443  003DE0                     l6703:
 10444                           
 10445                           ; BSR set to: 0
 10446  003DE0  0100               	movlb	0	; () banked
 10447  003DE2  517B               	movf	___fldiv@a& (0+255),w,b
 10448  003DE4  0100               	movlb	0	; () banked
 10449  003DE6  5D84               	subwf	___fldiv@rem& (0+255),w,b
 10450  003DE8  0100               	movlb	0	; () banked
 10451  003DEA  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10452  003DEC  0100               	movlb	0	; () banked
 10453  003DEE  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10454  003DF0  0100               	movlb	0	; () banked
 10455  003DF2  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10456  003DF4  0100               	movlb	0	; () banked
 10457  003DF6  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10458  003DF8  0100               	movlb	0	; () banked
 10459  003DFA  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10460  003DFC  0100               	movlb	0	; () banked
 10461  003DFE  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10462  003E00  A0D8               	btfss	status,0,c
 10463  003E02  D012               	goto	l6709
 10464                           
 10465                           ; BSR set to: 0
 10466  003E04  0100               	movlb	0	; () banked
 10467  003E06  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10468                           
 10469                           ; BSR set to: 0
 10470  003E08  0100               	movlb	0	; () banked
 10471  003E0A  517B               	movf	___fldiv@a& (0+255),w,b
 10472  003E0C  0100               	movlb	0	; () banked
 10473  003E0E  5F84               	subwf	___fldiv@rem& (0+255),f,b
 10474  003E10  0100               	movlb	0	; () banked
 10475  003E12  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10476  003E14  0100               	movlb	0	; () banked
 10477  003E16  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10478  003E18  0100               	movlb	0	; () banked
 10479  003E1A  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10480  003E1C  0100               	movlb	0	; () banked
 10481  003E1E  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10482  003E20  0100               	movlb	0	; () banked
 10483  003E22  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10484  003E24  0100               	movlb	0	; () banked
 10485  003E26  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10486  003E28                     l6709:
 10487                           
 10488                           ; BSR set to: 0
 10489  003E28  0100               	movlb	0	; () banked
 10490  003E2A  2B8F               	incf	___fldiv@aexp& (0+255),f,b
 10491  003E2C                     l1386:
 10492                           
 10493                           ; BSR set to: 0
 10494  003E2C  0E19               	movlw	25
 10495  003E2E  0100               	movlb	0	; () banked
 10496  003E30  658F               	cpfsgt	___fldiv@aexp& (0+255),b
 10497  003E32  D7BA               	goto	l6695
 10498                           
 10499                           ; BSR set to: 0
 10500                           
 10501                           ; BSR set to: 0
 10502  003E34  0100               	movlb	0	; () banked
 10503  003E36  5184               	movf	___fldiv@rem& (0+255),w,b
 10504  003E38  0100               	movlb	0	; () banked
 10505  003E3A  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10506  003E3C  0100               	movlb	0	; () banked
 10507  003E3E  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10508  003E40  0100               	movlb	0	; () banked
 10509  003E42  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10510  003E44  B4D8               	btfsc	status,2,c
 10511  003E46  D018               	goto	l6721
 10512                           
 10513                           ; BSR set to: 0
 10514  003E48  0100               	movlb	0	; () banked
 10515  003E4A  818A               	bsf	___fldiv@grs& (0+255),0,b
 10516                           
 10517                           ; BSR set to: 0
 10518  003E4C  D015               	goto	l6721
 10519  003E4E                     l6715:
 10520                           
 10521                           ; BSR set to: 0
 10522  003E4E  0100               	movlb	0	; () banked
 10523  003E50  90D8               	bcf	status,0,c
 10524  003E52  3777               	rlcf	___fldiv@b& (0+255),f,b
 10525  003E54  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10526  003E56  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10527  003E58  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10528                           
 10529                           ; BSR set to: 0
 10530  003E5A  0100               	movlb	0	; () banked
 10531  003E5C  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10532  003E5E  D002               	goto	l1395
 10533                           
 10534                           ; BSR set to: 0
 10535  003E60  0100               	movlb	0	; () banked
 10536  003E62  8177               	bsf	___fldiv@b& (0+255),0,b
 10537  003E64                     l1395:
 10538                           
 10539                           ; BSR set to: 0
 10540  003E64  0100               	movlb	0	; () banked
 10541  003E66  90D8               	bcf	status,0,c
 10542  003E68  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10543  003E6A  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10544  003E6C  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10545  003E6E  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10546  003E70  0100               	movlb	0	; () banked
 10547  003E72  0788               	decf	___fldiv@new_exp& (0+255),f,b
 10548  003E74  A0D8               	btfss	status,0,c
 10549  003E76  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10550  003E78                     l6721:
 10551                           
 10552                           ; BSR set to: 0
 10553  003E78  0100               	movlb	0	; () banked
 10554  003E7A  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10555  003E7C  D7E8               	goto	l6715
 10556                           
 10557                           ; BSR set to: 0
 10558                           
 10559                           ; BSR set to: 0
 10560  003E7E  0E00               	movlw	0
 10561  003E80  0100               	movlb	0	; () banked
 10562  003E82  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10563                           
 10564                           ; BSR set to: 0
 10565  003E84  0100               	movlb	0	; () banked
 10566  003E86  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10567  003E88  D024               	goto	l1397
 10568                           
 10569                           ; BSR set to: 0
 10570  003E8A  0EFF               	movlw	255
 10571  003E8C  0100               	movlb	0	; () banked
 10572  003E8E  158A               	andwf	___fldiv@grs& (0+255),w,b
 10573  003E90  0100               	movlb	0	; () banked
 10574  003E92  6F7F               	movwf	??___fldiv& (0+255),b
 10575  003E94  0EFF               	movlw	255
 10576  003E96  0100               	movlb	0	; () banked
 10577  003E98  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10578  003E9A  0100               	movlb	0	; () banked
 10579  003E9C  6F80               	movwf	(??___fldiv+1)& (0+255),b
 10580  003E9E  0EFF               	movlw	255
 10581  003EA0  0100               	movlb	0	; () banked
 10582  003EA2  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10583  003EA4  0100               	movlb	0	; () banked
 10584  003EA6  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10585  003EA8  0E7F               	movlw	127
 10586  003EAA  0100               	movlb	0	; () banked
 10587  003EAC  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10588  003EAE  0100               	movlb	0	; () banked
 10589  003EB0  6F82               	movwf	(??___fldiv+3)& (0+255),b
 10590  003EB2  0100               	movlb	0	; () banked
 10591  003EB4  517F               	movf	??___fldiv& (0+255),w,b
 10592  003EB6  0100               	movlb	0	; () banked
 10593  003EB8  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
 10594  003EBA  0100               	movlb	0	; () banked
 10595  003EBC  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
 10596  003EBE  0100               	movlb	0	; () banked
 10597  003EC0  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
 10598  003EC2  A4D8               	btfss	status,2,c
 10599  003EC4  D003               	goto	l6731
 10600                           
 10601                           ; BSR set to: 0
 10602                           
 10603                           ; BSR set to: 0
 10604  003EC6  0100               	movlb	0	; () banked
 10605  003EC8  A177               	btfss	___fldiv@b& (0+255),0,b
 10606  003ECA  D003               	goto	l1397
 10607  003ECC                     l6731:
 10608                           
 10609                           ; BSR set to: 0
 10610  003ECC  0E01               	movlw	1
 10611  003ECE  0100               	movlb	0	; () banked
 10612  003ED0  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10613  003ED2                     l1397:
 10614                           
 10615                           ; BSR set to: 0
 10616  003ED2  0100               	movlb	0	; () banked
 10617  003ED4  518F               	movf	___fldiv@aexp& (0+255),w,b
 10618  003ED6  0100               	movlb	0	; () banked
 10619  003ED8  B4D8               	btfsc	status,2,c
 10620  003EDA  D023               	goto	l6741
 10621                           
 10622                           ; BSR set to: 0
 10623  003EDC  0E01               	movlw	1
 10624  003EDE  0100               	movlb	0	; () banked
 10625  003EE0  2777               	addwf	___fldiv@b& (0+255),f,b
 10626  003EE2  0E00               	movlw	0
 10627  003EE4  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10628  003EE6  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10629  003EE8  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10630                           
 10631                           ; BSR set to: 0
 10632  003EEA  0100               	movlb	0	; () banked
 10633  003EEC  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
 10634  003EEE  D019               	goto	l6741
 10635                           
 10636                           ; BSR set to: 0
 10637  003EF0  C077  F07F         	movff	___fldiv@b,??___fldiv
 10638  003EF4  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
 10639  003EF8  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
 10640  003EFC  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
 10641  003F00  0100               	movlb	0	; () banked
 10642  003F02  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
 10643  003F04  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
 10644  003F06  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
 10645  003F08  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
 10646  003F0A  337F               	rrcf	??___fldiv& (0+255),f,b
 10647  003F0C  C07F  F077         	movff	??___fldiv,___fldiv@b
 10648  003F10  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
 10649  003F14  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
 10650  003F18  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
 10651                           
 10652                           ; BSR set to: 0
 10653  003F1C  0100               	movlb	0	; () banked
 10654  003F1E  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
 10655  003F20  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10656  003F22                     l6741:
 10657                           
 10658                           ; BSR set to: 0
 10659  003F22  0100               	movlb	0	; () banked
 10660  003F24  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10661  003F26  D014               	goto	l6745
 10662  003F28  0100               	movlb	0	; () banked
 10663  003F2A  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10664  003F2C  E104               	bnz	u8560
 10665  003F2E  0100               	movlb	0	; () banked
 10666  003F30  2988               	incf	___fldiv@new_exp& (0+255),w,b
 10667  003F32  A0D8               	btfss	status,0,c
 10668  003F34  D00D               	goto	l6745
 10669  003F36                     u8560:
 10670                           
 10671                           ; BSR set to: 0
 10672  003F36  0E00               	movlw	0
 10673  003F38  0100               	movlb	0	; () banked
 10674  003F3A  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10675  003F3C  6988               	setf	___fldiv@new_exp& (0+255),b
 10676  003F3E  0E00               	movlw	0
 10677  003F40  0100               	movlb	0	; () banked
 10678  003F42  6F77               	movwf	___fldiv@b& (0+255),b
 10679  003F44  0E00               	movlw	0
 10680  003F46  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10681  003F48  0E00               	movlw	0
 10682  003F4A  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10683  003F4C  0E00               	movlw	0
 10684  003F4E  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10685  003F50                     l6745:
 10686                           
 10687                           ; BSR set to: 0
 10688  003F50  0100               	movlb	0	; () banked
 10689  003F52  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10690  003F54  D007               	goto	l6747
 10691  003F56  0100               	movlb	0	; () banked
 10692  003F58  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10693  003F5A  E115               	bnz	l6749
 10694  003F5C  0100               	movlb	0	; () banked
 10695  003F5E  0588               	decf	___fldiv@new_exp& (0+255),w,b
 10696  003F60  B0D8               	btfsc	status,0,c
 10697  003F62  D011               	goto	l6749
 10698  003F64                     l6747:
 10699                           
 10700                           ; BSR set to: 0
 10701  003F64  0E00               	movlw	0
 10702  003F66  0100               	movlb	0	; () banked
 10703  003F68  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10704  003F6A  0E00               	movlw	0
 10705  003F6C  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10706  003F6E  0E00               	movlw	0
 10707  003F70  0100               	movlb	0	; () banked
 10708  003F72  6F77               	movwf	___fldiv@b& (0+255),b
 10709  003F74  0E00               	movlw	0
 10710  003F76  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10711  003F78  0E00               	movlw	0
 10712  003F7A  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10713  003F7C  0E00               	movlw	0
 10714  003F7E  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10715  003F80  0E00               	movlw	0
 10716  003F82  0100               	movlb	0	; () banked
 10717  003F84  6F83               	movwf	___fldiv@sign& (0+255),b
 10718  003F86                     l6749:
 10719                           
 10720                           ; BSR set to: 0
 10721  003F86  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
 10722                           
 10723                           ; BSR set to: 0
 10724  003F8A  0100               	movlb	0	; () banked
 10725  003F8C  A18E               	btfss	___fldiv@bexp& (0+255),0,b
 10726  003F8E  D003               	goto	l6755
 10727                           
 10728                           ; BSR set to: 0
 10729  003F90  0100               	movlb	0	; () banked
 10730  003F92  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10731  003F94  D002               	goto	l6757
 10732  003F96                     l6755:
 10733                           
 10734                           ; BSR set to: 0
 10735  003F96  0100               	movlb	0	; () banked
 10736  003F98  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
 10737  003F9A                     l6757:
 10738                           
 10739                           ; BSR set to: 0
 10740  003F9A  0100               	movlb	0	; () banked
 10741  003F9C  90D8               	bcf	status,0,c
 10742  003F9E  318E               	rrcf	___fldiv@bexp& (0+255),w,b
 10743  003FA0  0100               	movlb	0	; () banked
 10744  003FA2  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10745                           
 10746                           ; BSR set to: 0
 10747  003FA4  0100               	movlb	0	; () banked
 10748  003FA6  5183               	movf	___fldiv@sign& (0+255),w,b
 10749  003FA8  0100               	movlb	0	; () banked
 10750  003FAA  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10751                           
 10752                           ; BSR set to: 0
 10753  003FAC  C077  F077         	movff	___fldiv@b,?___fldiv
 10754  003FB0  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10755  003FB4  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10756  003FB8  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10757  003FBC  0012               	return	
 10758  003FBE                     __end_of___fldiv:
 10759                           	opt stack 0
 10760                           tblptru	equ	0xFF8
 10761                           tblptrh	equ	0xFF7
 10762                           tblptrl	equ	0xFF6
 10763                           tablat	equ	0xFF5
 10764                           prodh	equ	0xFF4
 10765                           prodl	equ	0xFF3
 10766                           postinc0	equ	0xFEE
 10767                           wreg	equ	0xFE8
 10768                           postdec1	equ	0xFE5
 10769                           fsr1l	equ	0xFE1
 10770                           indf2	equ	0xFDF
 10771                           postinc2	equ	0xFDE
 10772                           postdec2	equ	0xFDD
 10773                           fsr2h	equ	0xFDA
 10774                           fsr2l	equ	0xFD9
 10775                           status	equ	0xFD8
 10776                           
 10777 ;; *************** function _delay_s *****************
 10778 ;; Defined at:
 10779 ;;		line 102 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
 10780 ;; Parameters:    Size  Location     Type
 10781 ;;  value_s         1    wreg     unsigned char 
 10782 ;; Auto vars:     Size  Location     Type
 10783 ;;  value_s         1   31[BANK0 ] unsigned char 
 10784 ;;  repeat_loop     1   32[BANK0 ] unsigned char 
 10785 ;; Return value:  Size  Location     Type
 10786 ;;		None               void
 10787 ;; Registers used:
 10788 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10789 ;; Tracked objects:
 10790 ;;		On entry : 0/0
 10791 ;;		On exit  : 0/0
 10792 ;;		Unchanged: 0/0
 10793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10795 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10797 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;Total ram usage:        2 bytes
 10799 ;; Hardware stack levels used:    1
 10800 ;; Hardware stack levels required when called:    6
 10801 ;; This function calls:
 10802 ;;		_delay_ms
 10803 ;; This function is called by:
 10804 ;;		_park_routine
 10805 ;; This function uses a non-reentrant model
 10806 ;;
 10807                           
 10808                           	psect	text26
 10809  005F54                     __ptext26:
 10810                           	opt stack 0
 10811  005F54                     _delay_s:
 10812                           	opt stack 23
 10813                           
 10814                           ; BSR set to: 0
 10815                           ;incstack = 0
 10816                           ;delay_s@value_s stored from wreg
 10817  005F54  0100               	movlb	0	; () banked
 10818  005F56  6F7F               	movwf	delay_s@value_s& (0+255),b
 10819                           
 10820                           ;src\delay.c: 104: unsigned char repeat_loop;
 10821                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10822  005F58  0E00               	movlw	0
 10823  005F5A  0100               	movlb	0	; () banked
 10824  005F5C  6F80               	movwf	delay_s@repeat_loop& (0+255),b
 10825  005F5E  D009               	goto	l7321
 10826  005F60                     l7317:
 10827                           
 10828                           ; BSR set to: 0
 10829                           ;src\delay.c: 107: delay_ms (1000);
 10830  005F60  0E03               	movlw	3
 10831  005F62  0100               	movlb	0	; () banked
 10832  005F64  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10833  005F66  0EE8               	movlw	232
 10834  005F68  6F7D               	movwf	delay_ms@value_ms& (0+255),b
 10835  005F6A  EC7A  F02F         	call	_delay_ms	;wreg free
 10836  005F6E  0100               	movlb	0	; () banked
 10837  005F70  2B80               	incf	delay_s@repeat_loop& (0+255),f,b
 10838  005F72                     l7321:
 10839                           
 10840                           ; BSR set to: 0
 10841  005F72  0100               	movlb	0	; () banked
 10842  005F74  517F               	movf	delay_s@value_s& (0+255),w,b
 10843  005F76  0100               	movlb	0	; () banked
 10844  005F78  5D80               	subwf	delay_s@repeat_loop& (0+255),w,b
 10845  005F7A  B0D8               	btfsc	status,0,c
 10846  005F7C  0012               	return	
 10847  005F7E  D7F0               	goto	l7317
 10848  005F80                     __end_of_delay_s:
 10849                           	opt stack 0
 10850                           tblptru	equ	0xFF8
 10851                           tblptrh	equ	0xFF7
 10852                           tblptrl	equ	0xFF6
 10853                           tablat	equ	0xFF5
 10854                           prodh	equ	0xFF4
 10855                           prodl	equ	0xFF3
 10856                           postinc0	equ	0xFEE
 10857                           wreg	equ	0xFE8
 10858                           postdec1	equ	0xFE5
 10859                           fsr1l	equ	0xFE1
 10860                           indf2	equ	0xFDF
 10861                           postinc2	equ	0xFDE
 10862                           postdec2	equ	0xFDD
 10863                           fsr2h	equ	0xFDA
 10864                           fsr2l	equ	0xFD9
 10865                           status	equ	0xFD8
 10866                           
 10867 ;; *************** function _delay_ms *****************
 10868 ;; Defined at:
 10869 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
 10870 ;; Parameters:    Size  Location     Type
 10871 ;;  value_ms        2   29[BANK0 ] unsigned int 
 10872 ;; Auto vars:     Size  Location     Type
 10873 ;;		None
 10874 ;; Return value:  Size  Location     Type
 10875 ;;		None               void
 10876 ;; Registers used:
 10877 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10878 ;; Tracked objects:
 10879 ;;		On entry : 0/0
 10880 ;;		On exit  : 0/0
 10881 ;;		Unchanged: 0/0
 10882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10883 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10886 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10887 ;;Total ram usage:        2 bytes
 10888 ;; Hardware stack levels used:    1
 10889 ;; Hardware stack levels required when called:    5
 10890 ;; This function calls:
 10891 ;;		___wmul
 10892 ;; This function is called by:
 10893 ;;		_delay_s
 10894 ;;		_park_routine
 10895 ;; This function uses a non-reentrant model
 10896 ;;
 10897                           
 10898                           	psect	text27
 10899  005EF4                     __ptext27:
 10900                           	opt stack 0
 10901  005EF4                     _delay_ms:
 10902                           	opt stack 23
 10903                           
 10904                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 10905                           
 10906                           ; BSR set to: 0
 10907                           ;incstack = 0
 10908  005EF4  C0E8  F077         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 10909  005EF8  0100               	movlb	0	; () banked
 10910  005EFA  6B78               	clrf	(___wmul@multiplier+1)& (0+255),b
 10911  005EFC  C07D  F079         	movff	delay_ms@value_ms,___wmul@multiplicand
 10912  005F00  C07E  F07A         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 10913  005F04  EC5F  F02F         	call	___wmul	;wreg free
 10914  005F08  C077  F034         	movff	?___wmul,_clock_counter_reference	;volatile
 10915  005F0C  C078  F035         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 10916                           
 10917                           ;src\delay.c: 75: while (clock_counter_reference) {
 10918  005F10  D006               	goto	l569
 10919  005F12                     l7223:
 10920                           
 10921                           ;src\delay.c: 85: _delay(240);
 10922  005F12  0E50               	movlw	80
 10923  005F14                     u9887:
 10924  005F14  2EE8               	decfsz	wreg,f,c
 10925  005F16  D7FE               	goto	u9887
 10926                           
 10927                           ;src\delay.c: 88: clock_counter_reference--;
 10928  005F18  0634               	decf	_clock_counter_reference,f,c	;volatile
 10929  005F1A  A0D8               	btfss	status,0,c
 10930  005F1C  0635               	decf	_clock_counter_reference+1,f,c	;volatile
 10931  005F1E                     l569:
 10932  005F1E  5034               	movf	_clock_counter_reference,w,c	;volatile
 10933  005F20  1035               	iorwf	_clock_counter_reference+1,w,c	;volatile
 10934  005F22  B4D8               	btfsc	status,2,c
 10935  005F24  0012               	return	
 10936  005F26  D7F5               	goto	l7223
 10937  005F28                     __end_of_delay_ms:
 10938                           	opt stack 0
 10939                           tblptru	equ	0xFF8
 10940                           tblptrh	equ	0xFF7
 10941                           tblptrl	equ	0xFF6
 10942                           tablat	equ	0xFF5
 10943                           prodh	equ	0xFF4
 10944                           prodl	equ	0xFF3
 10945                           postinc0	equ	0xFEE
 10946                           wreg	equ	0xFE8
 10947                           postdec1	equ	0xFE5
 10948                           fsr1l	equ	0xFE1
 10949                           indf2	equ	0xFDF
 10950                           postinc2	equ	0xFDE
 10951                           postdec2	equ	0xFDD
 10952                           fsr2h	equ	0xFDA
 10953                           fsr2l	equ	0xFD9
 10954                           status	equ	0xFD8
 10955                           
 10956 ;; *************** function ___wmul *****************
 10957 ;; Defined at:
 10958 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10959 ;; Parameters:    Size  Location     Type
 10960 ;;  multiplier      2   23[BANK0 ] unsigned int 
 10961 ;;  multiplicand    2   25[BANK0 ] unsigned int 
 10962 ;; Auto vars:     Size  Location     Type
 10963 ;;  product         2   27[BANK0 ] unsigned int 
 10964 ;; Return value:  Size  Location     Type
 10965 ;;                  2   23[BANK0 ] unsigned int 
 10966 ;; Registers used:
 10967 ;;		wreg, status,2, status,0, prodl, prodh
 10968 ;; Tracked objects:
 10969 ;;		On entry : 0/0
 10970 ;;		On exit  : 0/0
 10971 ;;		Unchanged: 0/0
 10972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10973 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10974 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10976 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10977 ;;Total ram usage:        6 bytes
 10978 ;; Hardware stack levels used:    1
 10979 ;; Hardware stack levels required when called:    4
 10980 ;; This function calls:
 10981 ;;		Nothing
 10982 ;; This function is called by:
 10983 ;;		_delay_ms
 10984 ;; This function uses a non-reentrant model
 10985 ;;
 10986                           
 10987                           	psect	text28
 10988  005EBE                     __ptext28:
 10989                           	opt stack 0
 10990  005EBE                     ___wmul:
 10991                           	opt stack 23
 10992                           
 10993                           ;incstack = 0
 10994  005EBE  0100               	movlb	0	; () banked
 10995  005EC0  5177               	movf	___wmul@multiplier& (0+255),w,b
 10996  005EC2  0100               	movlb	0	; () banked
 10997  005EC4  0379               	mulwf	___wmul@multiplicand& (0+255),b
 10998  005EC6  CFF3 F07B          	movff	prodl,___wmul@product
 10999  005ECA  CFF4 F07C          	movff	prodh,___wmul@product+1
 11000  005ECE  0100               	movlb	0	; () banked
 11001  005ED0  5177               	movf	___wmul@multiplier& (0+255),w,b
 11002  005ED2  0100               	movlb	0	; () banked
 11003  005ED4  037A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11004  005ED6  50F3               	movf	prodl,w,c
 11005  005ED8  0100               	movlb	0	; () banked
 11006  005EDA  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 11007  005EDC  0100               	movlb	0	; () banked
 11008  005EDE  5178               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11009  005EE0  0100               	movlb	0	; () banked
 11010  005EE2  0379               	mulwf	___wmul@multiplicand& (0+255),b
 11011  005EE4  50F3               	movf	prodl,w,c
 11012  005EE6  0100               	movlb	0	; () banked
 11013  005EE8  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 11014                           
 11015                           ; BSR set to: 0
 11016  005EEA  C07B  F077         	movff	___wmul@product,?___wmul
 11017  005EEE  C07C  F078         	movff	___wmul@product+1,?___wmul+1
 11018  005EF2  0012               	return	
 11019  005EF4                     __end_of___wmul:
 11020                           	opt stack 0
 11021                           tblptru	equ	0xFF8
 11022                           tblptrh	equ	0xFF7
 11023                           tblptrl	equ	0xFF6
 11024                           tablat	equ	0xFF5
 11025                           prodh	equ	0xFF4
 11026                           prodl	equ	0xFF3
 11027                           postinc0	equ	0xFEE
 11028                           wreg	equ	0xFE8
 11029                           postdec1	equ	0xFE5
 11030                           fsr1l	equ	0xFE1
 11031                           indf2	equ	0xFDF
 11032                           postinc2	equ	0xFDE
 11033                           postdec2	equ	0xFDD
 11034                           fsr2h	equ	0xFDA
 11035                           fsr2l	equ	0xFD9
 11036                           status	equ	0xFD8
 11037                           
 11038 ;; *************** function _configurazione *****************
 11039 ;; Defined at:
 11040 ;;		line 451 in file "parcheggio.c"
 11041 ;; Parameters:    Size  Location     Type
 11042 ;;		None
 11043 ;; Auto vars:     Size  Location     Type
 11044 ;;		None
 11045 ;; Return value:  Size  Location     Type
 11046 ;;		None               void
 11047 ;; Registers used:
 11048 ;;		wreg, status,2, status,0, cstack
 11049 ;; Tracked objects:
 11050 ;;		On entry : 0/0
 11051 ;;		On exit  : 0/0
 11052 ;;		Unchanged: 0/0
 11053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11058 ;;Total ram usage:        0 bytes
 11059 ;; Hardware stack levels used:    1
 11060 ;; Hardware stack levels required when called:    6
 11061 ;; This function calls:
 11062 ;;		_CANInitialize
 11063 ;; This function is called by:
 11064 ;;		_main
 11065 ;; This function uses a non-reentrant model
 11066 ;;
 11067                           
 11068                           	psect	text29
 11069  005C8E                     __ptext29:
 11070                           	opt stack 0
 11071  005C8E                     _configurazione:
 11072                           	opt stack 24
 11073                           
 11074                           ;parcheggio.c: 452: LATA = 0x00;
 11075                           
 11076                           ; BSR set to: 0
 11077                           ;incstack = 0
 11078  005C8E  0E00               	movlw	0
 11079  005C90  6E89               	movwf	3977,c	;volatile
 11080                           
 11081                           ;parcheggio.c: 453: TRISA = 0b11110000;
 11082  005C92  0EF0               	movlw	240
 11083  005C94  6E92               	movwf	3986,c	;volatile
 11084                           
 11085                           ;parcheggio.c: 455: LATB = 0x00;
 11086  005C96  0E00               	movlw	0
 11087  005C98  6E8A               	movwf	3978,c	;volatile
 11088                           
 11089                           ;parcheggio.c: 456: TRISB = 0b10001010;
 11090  005C9A  0E8A               	movlw	138
 11091  005C9C  6E93               	movwf	3987,c	;volatile
 11092                           
 11093                           ;parcheggio.c: 458: LATC = 0x00;
 11094  005C9E  0E00               	movlw	0
 11095  005CA0  6E8B               	movwf	3979,c	;volatile
 11096                           
 11097                           ;parcheggio.c: 459: TRISC = 0b11111111;
 11098  005CA2  6894               	setf	3988,c	;volatile
 11099                           
 11100                           ;parcheggio.c: 461: ADCON1 = 0xFF;
 11101  005CA4  68C1               	setf	4033,c	;volatile
 11102                           
 11103                           ;parcheggio.c: 462: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
 11104  005CA6  0E06               	movlw	6
 11105  005CA8  0100               	movlb	0	; () banked
 11106  005CAA  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11107  005CAC  0E05               	movlw	5
 11108  005CAE  0100               	movlb	0	; () banked
 11109  005CB0  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
 11110  005CB2  0E01               	movlw	1
 11111  005CB4  0100               	movlb	0	; () banked
 11112  005CB6  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11113  005CB8  0E03               	movlw	3
 11114  005CBA  0100               	movlb	0	; () banked
 11115  005CBC  6F88               	movwf	CANInitialize@BRP& (0+255),b
 11116  005CBE  0E9D               	movlw	157
 11117  005CC0  0100               	movlb	0	; () banked
 11118  005CC2  6F89               	movwf	CANInitialize@flags& (0+255),b
 11119  005CC4  0E04               	movlw	4
 11120  005CC6  EC19  F028         	call	_CANInitialize
 11121                           
 11122                           ;parcheggio.c: 464: RCONbits.IPEN = 1;
 11123  005CCA  8ED0               	bsf	4048,7,c	;volatile
 11124                           
 11125                           ;parcheggio.c: 465: PIR3bits.RXB1IF = 0;
 11126  005CCC  92A4               	bcf	4004,1,c	;volatile
 11127                           
 11128                           ;parcheggio.c: 466: PIR3bits.RXB0IF = 0;
 11129  005CCE  90A4               	bcf	4004,0,c	;volatile
 11130                           
 11131                           ;parcheggio.c: 467: IPR3bits.RXB1IP = 0;
 11132  005CD0  92A5               	bcf	4005,1,c	;volatile
 11133                           
 11134                           ;parcheggio.c: 468: IPR3bits.RXB0IP = 0;
 11135  005CD2  90A5               	bcf	4005,0,c	;volatile
 11136                           
 11137                           ;parcheggio.c: 469: PIE3bits.RXB1IE = 1;
 11138  005CD4  82A3               	bsf	4003,1,c	;volatile
 11139                           
 11140                           ;parcheggio.c: 470: PIE3bits.RXB0IE = 1;
 11141  005CD6  80A3               	bsf	4003,0,c	;volatile
 11142                           
 11143                           ;parcheggio.c: 471: INTCON2bits.TMR0IP = 0;
 11144  005CD8  94F1               	bcf	intcon2,2,c	;volatile
 11145                           
 11146                           ;parcheggio.c: 472: T0CON = 0x80;
 11147  005CDA  0E80               	movlw	128
 11148  005CDC  6ED5               	movwf	4053,c	;volatile
 11149                           
 11150                           ;parcheggio.c: 473: T3CON = 0x11;
 11151  005CDE  0E11               	movlw	17
 11152  005CE0  6EB1               	movwf	4017,c	;volatile
 11153                           
 11154                           ;parcheggio.c: 474: TMR0H = 0x34;
 11155  005CE2  0E34               	movlw	52
 11156  005CE4  6ED7               	movwf	4055,c	;volatile
 11157                           
 11158                           ;parcheggio.c: 475: TMR0L = 0xE0;
 11159  005CE6  0EE0               	movlw	224
 11160  005CE8  6ED6               	movwf	4054,c	;volatile
 11161                           
 11162                           ;parcheggio.c: 476: INTCONbits.TMR0IF = 0;
 11163  005CEA  94F2               	bcf	intcon,2,c	;volatile
 11164                           
 11165                           ;parcheggio.c: 477: INTCONbits.TMR0IE = 1;
 11166  005CEC  8AF2               	bsf	intcon,5,c	;volatile
 11167                           
 11168                           ;parcheggio.c: 478: INTCON2bits.INTEDG0 = 1;
 11169  005CEE  8CF1               	bsf	intcon2,6,c	;volatile
 11170                           
 11171                           ;parcheggio.c: 479: INTCONbits.INT0IF = 0;
 11172  005CF0  92F2               	bcf	intcon,1,c	;volatile
 11173                           
 11174                           ;parcheggio.c: 480: INTCONbits.INT0IE = 0;
 11175  005CF2  98F2               	bcf	intcon,4,c	;volatile
 11176                           
 11177                           ;parcheggio.c: 481: INTCONbits.GIEL = 1;
 11178  005CF4  8CF2               	bsf	intcon,6,c	;volatile
 11179                           
 11180                           ;parcheggio.c: 482: INTCONbits.GIEH = 1;
 11181  005CF6  8EF2               	bsf	intcon,7,c	;volatile
 11182  005CF8  0012               	return		;funcret
 11183  005CFA                     __end_of_configurazione:
 11184                           	opt stack 0
 11185                           tblptru	equ	0xFF8
 11186                           tblptrh	equ	0xFF7
 11187                           tblptrl	equ	0xFF6
 11188                           tablat	equ	0xFF5
 11189                           prodh	equ	0xFF4
 11190                           prodl	equ	0xFF3
 11191                           intcon	equ	0xFF2
 11192                           intcon2	equ	0xFF1
 11193                           postinc0	equ	0xFEE
 11194                           wreg	equ	0xFE8
 11195                           postdec1	equ	0xFE5
 11196                           fsr1l	equ	0xFE1
 11197                           indf2	equ	0xFDF
 11198                           postinc2	equ	0xFDE
 11199                           postdec2	equ	0xFDD
 11200                           fsr2h	equ	0xFDA
 11201                           fsr2l	equ	0xFD9
 11202                           status	equ	0xFD8
 11203                           
 11204 ;; *************** function _CANInitialize *****************
 11205 ;; Defined at:
 11206 ;;		line 219 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 11207 ;; Parameters:    Size  Location     Type
 11208 ;;  propSeg         1    wreg     unsigned char 
 11209 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
 11210 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
 11211 ;;  SJW             1   39[BANK0 ] unsigned char 
 11212 ;;  BRP             1   40[BANK0 ] unsigned char 
 11213 ;;  flags           1   41[BANK0 ] enum E16313
 11214 ;; Auto vars:     Size  Location     Type
 11215 ;;  propSeg         1   46[BANK0 ] unsigned char 
 11216 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
 11217 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
 11218 ;; Return value:  Size  Location     Type
 11219 ;;		None               void
 11220 ;; Registers used:
 11221 ;;		wreg, status,2, status,0, cstack
 11222 ;; Tracked objects:
 11223 ;;		On entry : 0/0
 11224 ;;		On exit  : 0/0
 11225 ;;		Unchanged: 0/0
 11226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11227 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11228 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11229 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11230 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11231 ;;Total ram usage:       12 bytes
 11232 ;; Hardware stack levels used:    1
 11233 ;; Hardware stack levels required when called:    5
 11234 ;; This function calls:
 11235 ;;		_CANOperationMode
 11236 ;;		_CANSetFilter
 11237 ;;		_CANSetMask
 11238 ;; This function is called by:
 11239 ;;		_configurazione
 11240 ;; This function uses a non-reentrant model
 11241 ;;
 11242                           
 11243                           	psect	text30
 11244  005032                     __ptext30:
 11245                           	opt stack 0
 11246  005032                     _CANInitialize:
 11247                           	opt stack 24
 11248                           
 11249                           ;incstack = 0
 11250                           ;CANInitialize@propSeg stored from wreg
 11251  005032  0100               	movlb	0	; () banked
 11252  005034  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
 11253                           
 11254                           ;inc\CANlib.h: 221: BYTE FilterConfig1;
 11255                           ;inc\CANlib.h: 222: BYTE FilterConfig2;
 11256                           ;inc\CANlib.h: 224: CANOperationMode(CAN_OP_MODE_CONFIG);
 11257  005036  0E80               	movlw	128
 11258  005038  ECD2  F02F         	call	_CANOperationMode
 11259                           
 11260                           ;inc\CANlib.h: 226: BRGCON1 = 0x00;
 11261  00503C  0E00               	movlw	0
 11262  00503E  6E70               	movwf	3952,c	;volatile
 11263                           
 11264                           ;inc\CANlib.h: 227: BRGCON2 = 0x00;
 11265  005040  0E00               	movlw	0
 11266  005042  6E71               	movwf	3953,c	;volatile
 11267                           
 11268                           ;inc\CANlib.h: 228: BRGCON3 = 0x00;
 11269  005044  0E00               	movlw	0
 11270  005046  6E72               	movwf	3954,c	;volatile
 11271                           
 11272                           ;inc\CANlib.h: 230: SJW= SJW << 6;
 11273  005048  0100               	movlb	0	; () banked
 11274  00504A  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
 11275  00504C  42E8               	rrncf	wreg,f,c
 11276  00504E  0BC0               	andlw	192
 11277  005050  0100               	movlb	0	; () banked
 11278  005052  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11279                           
 11280                           ; BSR set to: 0
 11281                           ;inc\CANlib.h: 231: BRGCON1 |= SJW;
 11282  005054  0100               	movlb	0	; () banked
 11283  005056  5187               	movf	CANInitialize@SJW& (0+255),w,b
 11284  005058  1270               	iorwf	3952,f,c	;volatile
 11285                           
 11286                           ; BSR set to: 0
 11287                           ;inc\CANlib.h: 232: BRGCON1 |= BRP;
 11288  00505A  0100               	movlb	0	; () banked
 11289  00505C  5188               	movf	CANInitialize@BRP& (0+255),w,b
 11290  00505E  1270               	iorwf	3952,f,c	;volatile
 11291                           
 11292                           ; BSR set to: 0
 11293                           ;inc\CANlib.h: 234: BRGCON2 |= propSeg;
 11294  005060  0100               	movlb	0	; () banked
 11295  005062  518E               	movf	CANInitialize@propSeg& (0+255),w,b
 11296  005064  1271               	iorwf	3953,f,c	;volatile
 11297                           
 11298                           ; BSR set to: 0
 11299                           ;inc\CANlib.h: 235: phaseSeg1 = phaseSeg1 <<3;
 11300  005066  0100               	movlb	0	; () banked
 11301  005068  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
 11302  00506A  42E8               	rrncf	wreg,f,c
 11303  00506C  0BF8               	andlw	248
 11304  00506E  0100               	movlb	0	; () banked
 11305  005070  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11306                           
 11307                           ; BSR set to: 0
 11308                           ;inc\CANlib.h: 236: BRGCON2 |= phaseSeg1;
 11309  005072  0100               	movlb	0	; () banked
 11310  005074  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
 11311  005076  1271               	iorwf	3953,f,c	;volatile
 11312                           
 11313                           ; BSR set to: 0
 11314                           ;inc\CANlib.h: 238: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
 11315  005078  0100               	movlb	0	; () banked
 11316  00507A  A589               	btfss	CANInitialize@flags& (0+255),2,b
 11317                           
 11318                           ; BSR set to: 0
 11319                           ;inc\CANlib.h: 239: BRGCON2bits.SAM= 1;
 11320  00507C  8C71               	bsf	3953,6,c	;volatile
 11321                           
 11322                           ; BSR set to: 0
 11323                           ;inc\CANlib.h: 241: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
 11324  00507E  0100               	movlb	0	; () banked
 11325  005080  B189               	btfsc	CANInitialize@flags& (0+255),0,b
 11326                           
 11327                           ; BSR set to: 0
 11328                           ;inc\CANlib.h: 242: BRGCON2bits.SEG2PHTS = 1;
 11329  005082  8E71               	bsf	3953,7,c	;volatile
 11330                           
 11331                           ; BSR set to: 0
 11332                           ;inc\CANlib.h: 244: BRGCON3 |= phaseSeg2;
 11333                           
 11334                           ; BSR set to: 0
 11335  005084  0100               	movlb	0	; () banked
 11336  005086  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
 11337  005088  1272               	iorwf	3954,f,c	;volatile
 11338                           
 11339                           ; BSR set to: 0
 11340                           ;inc\CANlib.h: 246: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
 11341  00508A  0100               	movlb	0	; () banked
 11342  00508C  B389               	btfsc	CANInitialize@flags& (0+255),1,b
 11343                           
 11344                           ; BSR set to: 0
 11345                           ;inc\CANlib.h: 247: BRGCON3bits.WAKFIL = 1;
 11346  00508E  8C72               	bsf	3954,6,c	;volatile
 11347                           
 11348                           ; BSR set to: 0
 11349                           ;inc\CANlib.h: 252: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
 11350                           
 11351                           ; BSR set to: 0
 11352  005090  0100               	movlb	0	; () banked
 11353  005092  5189               	movf	CANInitialize@flags& (0+255),w,b
 11354  005094  0B60               	andlw	96
 11355  005096  6E60               	movwf	3936,c	;volatile
 11356                           
 11357                           ;inc\CANlib.h: 253: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
 11358  005098  0100               	movlb	0	; () banked
 11359  00509A  5189               	movf	CANInitialize@flags& (0+255),w,b
 11360  00509C  0B10               	andlw	16
 11361  00509E  0AFF               	xorlw	255
 11362  0050A0  B4D8               	btfsc	status,2,c
 11363                           
 11364                           ; BSR set to: 0
 11365                           ;inc\CANlib.h: 254: RXB0CONbits.RXB0DBEN = 1;
 11366  0050A2  8460               	bsf	3936,2,c	;volatile
 11367                           
 11368                           ; BSR set to: 0
 11369                           ;inc\CANlib.h: 256: RXB1CON = RXB0CON;
 11370  0050A4  CF60 FF50          	movff	3936,3920	;volatile
 11371                           
 11372                           ; BSR set to: 0
 11373                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
 11374  0050A8  0E00               	movlw	0
 11375  0050AA  0100               	movlb	0	; () banked
 11376  0050AC  6F77               	movwf	CANSetMask@mask& (0+255),b
 11377  0050AE  0E00               	movlw	0
 11378  0050B0  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11379  0050B2  0E00               	movlw	0
 11380  0050B4  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11381  0050B6  0E00               	movlw	0
 11382  0050B8  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11383  0050BA  0EF7               	movlw	247
 11384  0050BC  0100               	movlb	0	; () banked
 11385  0050BE  6F7B               	movwf	CANSetMask@type& (0+255),b
 11386  0050C0  0E01               	movlw	1
 11387  0050C2  ECDF  F01F         	call	_CANSetMask
 11388                           
 11389                           ;inc\CANlib.h: 261: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
 11390  0050C6  0E00               	movlw	0
 11391  0050C8  0100               	movlb	0	; () banked
 11392  0050CA  6F77               	movwf	CANSetMask@mask& (0+255),b
 11393  0050CC  0E00               	movlw	0
 11394  0050CE  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11395  0050D0  0E00               	movlw	0
 11396  0050D2  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11397  0050D4  0E00               	movlw	0
 11398  0050D6  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11399  0050D8  0EF7               	movlw	247
 11400  0050DA  0100               	movlb	0	; () banked
 11401  0050DC  6F7B               	movwf	CANSetMask@type& (0+255),b
 11402  0050DE  0E02               	movlw	2
 11403  0050E0  ECDF  F01F         	call	_CANSetMask
 11404                           
 11405                           ;inc\CANlib.h: 264: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
 11406  0050E4  D00F               	goto	l5487
 11407  0050E6                     l5481:
 11408                           
 11409                           ;inc\CANlib.h: 267: FilterConfig1 = CAN_CONFIG_XTD_MSG;
 11410  0050E6  0EF7               	movlw	247
 11411  0050E8  0100               	movlb	0	; () banked
 11412  0050EA  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
 11413  0050EC  D007               	goto	l5483
 11414  0050EE                     l358:
 11415                           
 11416                           ; BSR set to: 0
 11417                           ;inc\CANlib.h: 272: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11418  0050EE  0100               	movlb	0	; () banked
 11419  0050F0  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11420                           
 11421                           ;inc\CANlib.h: 273: FilterConfig2 = CAN_CONFIG_STD_MSG;
 11422  0050F2  0100               	movlb	0	; () banked
 11423  0050F4  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
 11424                           
 11425                           ;inc\CANlib.h: 274: break;
 11426  0050F6  D028               	goto	l5489
 11427  0050F8                     l359:
 11428                           
 11429                           ; BSR set to: 0
 11430                           ;inc\CANlib.h: 276: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11431  0050F8  0100               	movlb	0	; () banked
 11432  0050FA  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11433  0050FC                     l5483:
 11434                           
 11435                           ; BSR set to: 0
 11436                           ;inc\CANlib.h: 277: FilterConfig2 = CAN_CONFIG_XTD_MSG;
 11437  0050FC  0EF7               	movlw	247
 11438  0050FE  0100               	movlb	0	; () banked
 11439  005100  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
 11440                           
 11441                           ; BSR set to: 0
 11442                           ;inc\CANlib.h: 279: }
 11443                           
 11444                           ;inc\CANlib.h: 278: break;
 11445  005102  D022               	goto	l5489
 11446  005104                     l5487:
 11447  005104  0E9F               	movlw	159
 11448  005106  0100               	movlb	0	; () banked
 11449  005108  6F8A               	movwf	??_CANInitialize& (0+255),b
 11450  00510A  0EFF               	movlw	255
 11451  00510C  0100               	movlb	0	; () banked
 11452  00510E  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
 11453  005110  0100               	movlb	0	; () banked
 11454  005112  5189               	movf	CANInitialize@flags& (0+255),w,b
 11455  005114  0B60               	andlw	96
 11456  005116  0100               	movlb	0	; () banked
 11457  005118  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
 11458  00511A  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
 11459  00511C  0100               	movlb	0	; () banked
 11460  00511E  518A               	movf	??_CANInitialize& (0+255),w,b
 11461  005120  0100               	movlb	0	; () banked
 11462  005122  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
 11463  005124  0100               	movlb	0	; () banked
 11464  005126  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
 11465  005128  0100               	movlb	0	; () banked
 11466  00512A  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
 11467                           
 11468                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11469                           ; Switch size 1, requested type "space"
 11470                           ; Number of cases is 1, Range of values is 0 to 0
 11471                           ; switch strategies available:
 11472                           ; Name         Instructions Cycles
 11473                           ; simple_byte            4     3 (average)
 11474                           ;	Chosen strategy is simple_byte
 11475  00512C  0100               	movlb	0	; () banked
 11476  00512E  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
 11477  005130  0A00               	xorlw	0	; case 0
 11478  005132  A4D8               	btfss	status,2,c
 11479  005134  D7E1               	goto	l359
 11480                           
 11481                           ; BSR set to: 0
 11482                           ; Switch size 1, requested type "space"
 11483                           ; Number of cases is 2, Range of values is 191 to 223
 11484                           ; switch strategies available:
 11485                           ; Name         Instructions Cycles
 11486                           ; simple_byte            7     4 (average)
 11487                           ;	Chosen strategy is simple_byte
 11488  005136  0100               	movlb	0	; () banked
 11489  005138  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
 11490  00513A  0ABF               	xorlw	191	; case 191
 11491  00513C  B4D8               	btfsc	status,2,c
 11492  00513E  D7D7               	goto	l358
 11493  005140  0A60               	xorlw	96	; case 223
 11494  005142  B4D8               	btfsc	status,2,c
 11495  005144  D7D0               	goto	l5481
 11496  005146  D7D8               	goto	l359
 11497  005148                     l5489:
 11498                           
 11499                           ; BSR set to: 0
 11500                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
 11501  005148  0E00               	movlw	0
 11502  00514A  0100               	movlb	0	; () banked
 11503  00514C  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11504  00514E  0E00               	movlw	0
 11505  005150  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11506  005152  0E00               	movlw	0
 11507  005154  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11508  005156  0E00               	movlw	0
 11509  005158  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11510  00515A  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11511  00515E  0E00               	movlw	0
 11512  005160  ECA9  F006         	call	_CANSetFilter
 11513                           
 11514                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
 11515  005164  0E00               	movlw	0
 11516  005166  0100               	movlb	0	; () banked
 11517  005168  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11518  00516A  0E00               	movlw	0
 11519  00516C  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11520  00516E  0E00               	movlw	0
 11521  005170  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11522  005172  0E00               	movlw	0
 11523  005174  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11524  005176  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11525  00517A  0E01               	movlw	1
 11526  00517C  ECA9  F006         	call	_CANSetFilter
 11527                           
 11528                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
 11529  005180  0E00               	movlw	0
 11530  005182  0100               	movlb	0	; () banked
 11531  005184  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11532  005186  0E00               	movlw	0
 11533  005188  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11534  00518A  0E00               	movlw	0
 11535  00518C  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11536  00518E  0E00               	movlw	0
 11537  005190  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11538  005192  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11539  005196  0E02               	movlw	2
 11540  005198  ECA9  F006         	call	_CANSetFilter
 11541                           
 11542                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
 11543  00519C  0E00               	movlw	0
 11544  00519E  0100               	movlb	0	; () banked
 11545  0051A0  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11546  0051A2  0E00               	movlw	0
 11547  0051A4  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11548  0051A6  0E00               	movlw	0
 11549  0051A8  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11550  0051AA  0E00               	movlw	0
 11551  0051AC  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11552  0051AE  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11553  0051B2  0E03               	movlw	3
 11554  0051B4  ECA9  F006         	call	_CANSetFilter
 11555                           
 11556                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
 11557  0051B8  0E00               	movlw	0
 11558  0051BA  0100               	movlb	0	; () banked
 11559  0051BC  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11560  0051BE  0E00               	movlw	0
 11561  0051C0  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11562  0051C2  0E00               	movlw	0
 11563  0051C4  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11564  0051C6  0E00               	movlw	0
 11565  0051C8  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11566  0051CA  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11567  0051CE  0E04               	movlw	4
 11568  0051D0  ECA9  F006         	call	_CANSetFilter
 11569                           
 11570                           ;inc\CANlib.h: 286: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
 11571  0051D4  0E00               	movlw	0
 11572  0051D6  0100               	movlb	0	; () banked
 11573  0051D8  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11574  0051DA  0E00               	movlw	0
 11575  0051DC  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11576  0051DE  0E00               	movlw	0
 11577  0051E0  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11578  0051E2  0E00               	movlw	0
 11579  0051E4  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11580  0051E6  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11581  0051EA  0E05               	movlw	5
 11582  0051EC  ECA9  F006         	call	_CANSetFilter
 11583                           
 11584                           ;inc\CANlib.h: 288: CANOperationMode(CAN_OP_MODE_NORMAL);
 11585  0051F0  0E00               	movlw	0
 11586  0051F2  ECD2  F02F         	call	_CANOperationMode
 11587  0051F6  0012               	return		;funcret
 11588  0051F8                     __end_of_CANInitialize:
 11589                           	opt stack 0
 11590                           tblptru	equ	0xFF8
 11591                           tblptrh	equ	0xFF7
 11592                           tblptrl	equ	0xFF6
 11593                           tablat	equ	0xFF5
 11594                           prodh	equ	0xFF4
 11595                           prodl	equ	0xFF3
 11596                           intcon	equ	0xFF2
 11597                           intcon2	equ	0xFF1
 11598                           postinc0	equ	0xFEE
 11599                           wreg	equ	0xFE8
 11600                           postdec1	equ	0xFE5
 11601                           fsr1l	equ	0xFE1
 11602                           indf2	equ	0xFDF
 11603                           postinc2	equ	0xFDE
 11604                           postdec2	equ	0xFDD
 11605                           fsr2h	equ	0xFDA
 11606                           fsr2l	equ	0xFD9
 11607                           status	equ	0xFD8
 11608                           
 11609 ;; *************** function _CANSetMask *****************
 11610 ;; Defined at:
 11611 ;;		line 641 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 11612 ;; Parameters:    Size  Location     Type
 11613 ;;  numBuffer       1    wreg     enum E16347
 11614 ;;  mask            4   23[BANK0 ] unsigned long 
 11615 ;;  type            1   27[BANK0 ] enum E16313
 11616 ;; Auto vars:     Size  Location     Type
 11617 ;;  numBuffer       1   32[BANK0 ] enum E16347
 11618 ;;  tamp            4   33[BANK0 ] unsigned long 
 11619 ;; Return value:  Size  Location     Type
 11620 ;;		None               void
 11621 ;; Registers used:
 11622 ;;		wreg, status,2, status,0
 11623 ;; Tracked objects:
 11624 ;;		On entry : 0/0
 11625 ;;		On exit  : 0/0
 11626 ;;		Unchanged: 0/0
 11627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11628 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11629 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11630 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11631 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11632 ;;Total ram usage:       14 bytes
 11633 ;; Hardware stack levels used:    1
 11634 ;; Hardware stack levels required when called:    4
 11635 ;; This function calls:
 11636 ;;		Nothing
 11637 ;; This function is called by:
 11638 ;;		_CANInitialize
 11639 ;; This function uses a non-reentrant model
 11640 ;;
 11641                           
 11642                           	psect	text31
 11643  003FBE                     __ptext31:
 11644                           	opt stack 0
 11645  003FBE                     _CANSetMask:
 11646                           	opt stack 24
 11647                           
 11648                           ;incstack = 0
 11649                           ;CANSetMask@numBuffer stored from wreg
 11650  003FBE  0100               	movlb	0	; () banked
 11651  003FC0  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
 11652                           
 11653                           ;inc\CANlib.h: 644: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
 11654  003FC2  0100               	movlb	0	; () banked
 11655  003FC4  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11656  003FC6  A4D8               	btfss	status,2,c
 11657  003FC8  D056               	goto	l4957
 11658                           
 11659                           ; BSR set to: 0
 11660  003FCA  0100               	movlb	0	; () banked
 11661  003FCC  297B               	incf	CANSetMask@type& (0+255),w,b
 11662  003FCE  A4D8               	btfss	status,2,c
 11663  003FD0  D052               	goto	l4957
 11664                           
 11665                           ; BSR set to: 0
 11666                           ;inc\CANlib.h: 645: {
 11667                           ;inc\CANlib.h: 646: tamp = (mask >> 3);
 11668  003FD2  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11669  003FD6  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11670  003FDA  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11671  003FDE  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11672  003FE2  0E04               	movlw	4
 11673  003FE4  D006               	goto	u5580
 11674  003FE6                     u5585:
 11675  003FE6  0100               	movlb	0	; () banked
 11676  003FE8  90D8               	bcf	status,0,c
 11677  003FEA  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11678  003FEC  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11679  003FEE  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11680  003FF0  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11681  003FF2                     u5580:
 11682  003FF2  2EE8               	decfsz	wreg,f,c
 11683  003FF4  D7F8               	goto	u5585
 11684  003FF6  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11685  003FFA  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11686  003FFE  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11687  004002  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11688                           
 11689                           ; BSR set to: 0
 11690                           ;inc\CANlib.h: 647: tamp = tamp & 0x000000FF;
 11691  004006  0100               	movlb	0	; () banked
 11692  004008  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11693  00400A  0100               	movlb	0	; () banked
 11694  00400C  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11695  00400E  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11696  004010  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11697  004012  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11698                           
 11699                           ; BSR set to: 0
 11700                           ;inc\CANlib.h: 648: RXM0SIDH = (unsigned char) tamp;
 11701  004014  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11702                           
 11703                           ; BSR set to: 0
 11704                           ;inc\CANlib.h: 650: tamp = mask & 0x00000007;
 11705  004018  0E07               	movlw	7
 11706  00401A  0100               	movlb	0	; () banked
 11707  00401C  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11708  00401E  0100               	movlb	0	; () banked
 11709  004020  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11710  004022  0E00               	movlw	0
 11711  004024  0100               	movlb	0	; () banked
 11712  004026  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11713  004028  0100               	movlb	0	; () banked
 11714  00402A  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11715  00402C  0E00               	movlw	0
 11716  00402E  0100               	movlb	0	; () banked
 11717  004030  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11718  004032  0100               	movlb	0	; () banked
 11719  004034  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11720  004036  0E00               	movlw	0
 11721  004038  0100               	movlb	0	; () banked
 11722  00403A  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11723  00403C  0100               	movlb	0	; () banked
 11724  00403E  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11725                           
 11726                           ; BSR set to: 0
 11727                           ;inc\CANlib.h: 651: tamp = tamp << 5;
 11728  004040  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11729  004044  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11730  004048  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11731  00404C  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11732  004050  0E05               	movlw	5
 11733  004052                     u5595:
 11734  004052  90D8               	bcf	status,0,c
 11735  004054  0100               	movlb	0	; () banked
 11736  004056  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11737  004058  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11738  00405A  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11739  00405C  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11740  00405E  2EE8               	decfsz	wreg,f,c
 11741  004060  D7F8               	goto	u5595
 11742  004062  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11743  004066  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11744  00406A  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11745  00406E  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11746                           
 11747                           ; BSR set to: 0
 11748                           ;inc\CANlib.h: 652: RXM0SIDL = (unsigned char) tamp;
 11749  004072  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
 11750  004076                     l4957:
 11751                           
 11752                           ; BSR set to: 0
 11753                           ;inc\CANlib.h: 653: }
 11754                           ;inc\CANlib.h: 655: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
 11755  004076  0E02               	movlw	2
 11756  004078  0100               	movlb	0	; () banked
 11757  00407A  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11758  00407C  A4D8               	btfss	status,2,c
 11759  00407E  D056               	goto	l4973
 11760                           
 11761                           ; BSR set to: 0
 11762  004080  0100               	movlb	0	; () banked
 11763  004082  297B               	incf	CANSetMask@type& (0+255),w,b
 11764  004084  A4D8               	btfss	status,2,c
 11765  004086  D052               	goto	l4973
 11766                           
 11767                           ; BSR set to: 0
 11768                           ;inc\CANlib.h: 656: {
 11769                           ;inc\CANlib.h: 657: tamp = (mask >> 3);
 11770  004088  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11771  00408C  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11772  004090  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11773  004094  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11774  004098  0E04               	movlw	4
 11775  00409A  D006               	goto	u5620
 11776  00409C                     u5625:
 11777  00409C  0100               	movlb	0	; () banked
 11778  00409E  90D8               	bcf	status,0,c
 11779  0040A0  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11780  0040A2  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11781  0040A4  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11782  0040A6  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11783  0040A8                     u5620:
 11784  0040A8  2EE8               	decfsz	wreg,f,c
 11785  0040AA  D7F8               	goto	u5625
 11786  0040AC  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11787  0040B0  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11788  0040B4  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11789  0040B8  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11790                           
 11791                           ; BSR set to: 0
 11792                           ;inc\CANlib.h: 658: tamp = tamp & 0x000000FF;
 11793  0040BC  0100               	movlb	0	; () banked
 11794  0040BE  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11795  0040C0  0100               	movlb	0	; () banked
 11796  0040C2  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11797  0040C4  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11798  0040C6  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11799  0040C8  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11800                           
 11801                           ; BSR set to: 0
 11802                           ;inc\CANlib.h: 659: RXM1SIDH = (unsigned char) tamp;
 11803  0040CA  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11804                           
 11805                           ; BSR set to: 0
 11806                           ;inc\CANlib.h: 661: tamp = mask & 0x00000007;
 11807  0040CE  0E07               	movlw	7
 11808  0040D0  0100               	movlb	0	; () banked
 11809  0040D2  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11810  0040D4  0100               	movlb	0	; () banked
 11811  0040D6  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11812  0040D8  0E00               	movlw	0
 11813  0040DA  0100               	movlb	0	; () banked
 11814  0040DC  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11815  0040DE  0100               	movlb	0	; () banked
 11816  0040E0  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11817  0040E2  0E00               	movlw	0
 11818  0040E4  0100               	movlb	0	; () banked
 11819  0040E6  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11820  0040E8  0100               	movlb	0	; () banked
 11821  0040EA  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11822  0040EC  0E00               	movlw	0
 11823  0040EE  0100               	movlb	0	; () banked
 11824  0040F0  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11825  0040F2  0100               	movlb	0	; () banked
 11826  0040F4  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11827                           
 11828                           ; BSR set to: 0
 11829                           ;inc\CANlib.h: 662: tamp = tamp << 5;
 11830  0040F6  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11831  0040FA  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11832  0040FE  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11833  004102  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11834  004106  0E05               	movlw	5
 11835  004108                     u5635:
 11836  004108  90D8               	bcf	status,0,c
 11837  00410A  0100               	movlb	0	; () banked
 11838  00410C  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11839  00410E  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11840  004110  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11841  004112  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11842  004114  2EE8               	decfsz	wreg,f,c
 11843  004116  D7F8               	goto	u5635
 11844  004118  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11845  00411C  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11846  004120  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11847  004124  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11848                           
 11849                           ; BSR set to: 0
 11850                           ;inc\CANlib.h: 663: RXM1SIDL = (unsigned char) tamp;
 11851  004128  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
 11852  00412C                     l4973:
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;inc\CANlib.h: 664: }
 11856                           ;inc\CANlib.h: 666: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
 11857  00412C  0100               	movlb	0	; () banked
 11858  00412E  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11859  004130  A4D8               	btfss	status,2,c
 11860  004132  D087               	goto	l5005
 11861                           
 11862                           ; BSR set to: 0
 11863  004134  0EF7               	movlw	247
 11864  004136  0100               	movlb	0	; () banked
 11865  004138  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11866  00413A  A4D8               	btfss	status,2,c
 11867  00413C  D082               	goto	l5005
 11868                           
 11869                           ; BSR set to: 0
 11870                           ;inc\CANlib.h: 667: {
 11871                           ;inc\CANlib.h: 668: tamp = mask & 0x000000FF;
 11872  00413E  0100               	movlb	0	; () banked
 11873  004140  5177               	movf	CANSetMask@mask& (0+255),w,b
 11874  004142  0100               	movlb	0	; () banked
 11875  004144  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11876  004146  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11877  004148  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11878  00414A  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11879                           
 11880                           ; BSR set to: 0
 11881                           ;inc\CANlib.h: 669: RXM0EIDL = (unsigned char) tamp;
 11882  00414C  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
 11883                           
 11884                           ; BSR set to: 0
 11885                           ;inc\CANlib.h: 671: tamp = mask & 0x0000FF00;
 11886  004150  0E00               	movlw	0
 11887  004152  0100               	movlb	0	; () banked
 11888  004154  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11889  004156  0100               	movlb	0	; () banked
 11890  004158  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11891  00415A  0EFF               	movlw	255
 11892  00415C  0100               	movlb	0	; () banked
 11893  00415E  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11894  004160  0100               	movlb	0	; () banked
 11895  004162  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11896  004164  0E00               	movlw	0
 11897  004166  0100               	movlb	0	; () banked
 11898  004168  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11899  00416A  0100               	movlb	0	; () banked
 11900  00416C  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11901  00416E  0E00               	movlw	0
 11902  004170  0100               	movlb	0	; () banked
 11903  004172  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11904  004174  0100               	movlb	0	; () banked
 11905  004176  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11906                           
 11907                           ; BSR set to: 0
 11908                           ;inc\CANlib.h: 672: tamp = tamp >> 8;
 11909  004178  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11910  00417C  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11911  004180  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11912  004184  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11913  004188  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 11914  00418C  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 11915  004190  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 11916  004194  0100               	movlb	0	; () banked
 11917  004196  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 11918  004198  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11919  00419C  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11920  0041A0  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11921  0041A4  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11922                           
 11923                           ; BSR set to: 0
 11924                           ;inc\CANlib.h: 673: RXM0EIDH = (unsigned char) tamp;
 11925  0041A8  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
 11926                           
 11927                           ; BSR set to: 0
 11928                           ;inc\CANlib.h: 675: if (mask & 0x00010000)
 11929  0041AC  0100               	movlb	0	; () banked
 11930  0041AE  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 11931  0041B0  D003               	goto	l432
 11932                           
 11933                           ; BSR set to: 0
 11934                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x01;
 11935  0041B2  010F               	movlb	15	; () banked
 11936  0041B4  8119               	bsf	25,0,b	;volatile
 11937  0041B6  D002               	goto	l433
 11938  0041B8                     l432:
 11939                           
 11940                           ; BSR set to: 0
 11941                           ;inc\CANlib.h: 677: else
 11942                           ;inc\CANlib.h: 678: RXM0SIDLbits.EID16 = 0x00;
 11943  0041B8  010F               	movlb	15	; () banked
 11944  0041BA  9119               	bcf	25,0,b	;volatile
 11945  0041BC                     l433:
 11946                           
 11947                           ; BSR set to: 15
 11948                           ;inc\CANlib.h: 680: if (mask & 0x00020000)
 11949  0041BC  0100               	movlb	0	; () banked
 11950  0041BE  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 11951  0041C0  D003               	goto	l434
 11952                           
 11953                           ; BSR set to: 0
 11954                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x01;
 11955  0041C2  010F               	movlb	15	; () banked
 11956  0041C4  8319               	bsf	25,1,b	;volatile
 11957  0041C6  D002               	goto	l435
 11958  0041C8                     l434:
 11959                           
 11960                           ; BSR set to: 0
 11961                           ;inc\CANlib.h: 682: else
 11962                           ;inc\CANlib.h: 683: RXM0SIDLbits.EID17 = 0x00;
 11963  0041C8  010F               	movlb	15	; () banked
 11964  0041CA  9319               	bcf	25,1,b	;volatile
 11965  0041CC                     l435:
 11966                           
 11967                           ; BSR set to: 15
 11968                           ;inc\CANlib.h: 685: if (mask & 0x00040000)
 11969  0041CC  0100               	movlb	0	; () banked
 11970  0041CE  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 11971  0041D0  D003               	goto	l436
 11972                           
 11973                           ; BSR set to: 0
 11974                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x01;
 11975  0041D2  010F               	movlb	15	; () banked
 11976  0041D4  8B19               	bsf	25,5,b	;volatile
 11977  0041D6  D002               	goto	l437
 11978  0041D8                     l436:
 11979                           
 11980                           ; BSR set to: 0
 11981                           ;inc\CANlib.h: 687: else
 11982                           ;inc\CANlib.h: 688: RXM0SIDLbits.SID0 = 0x00;
 11983  0041D8  010F               	movlb	15	; () banked
 11984  0041DA  9B19               	bcf	25,5,b	;volatile
 11985  0041DC                     l437:
 11986                           
 11987                           ; BSR set to: 15
 11988                           ;inc\CANlib.h: 690: if (mask & 0x00080000)
 11989  0041DC  0100               	movlb	0	; () banked
 11990  0041DE  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 11991  0041E0  D003               	goto	l438
 11992                           
 11993                           ; BSR set to: 0
 11994                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x01;
 11995  0041E2  010F               	movlb	15	; () banked
 11996  0041E4  8D19               	bsf	25,6,b	;volatile
 11997  0041E6  D002               	goto	l439
 11998  0041E8                     l438:
 11999                           
 12000                           ; BSR set to: 0
 12001                           ;inc\CANlib.h: 692: else
 12002                           ;inc\CANlib.h: 693: RXM0SIDLbits.SID1 = 0x00;
 12003  0041E8  010F               	movlb	15	; () banked
 12004  0041EA  9D19               	bcf	25,6,b	;volatile
 12005  0041EC                     l439:
 12006                           
 12007                           ; BSR set to: 15
 12008                           ;inc\CANlib.h: 695: if (mask & 0x00100000)
 12009  0041EC  0100               	movlb	0	; () banked
 12010  0041EE  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12011  0041F0  D003               	goto	l440
 12012                           
 12013                           ; BSR set to: 0
 12014                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x01 ;
 12015  0041F2  010F               	movlb	15	; () banked
 12016  0041F4  8F19               	bsf	25,7,b	;volatile
 12017  0041F6  D002               	goto	l4999
 12018  0041F8                     l440:
 12019                           
 12020                           ; BSR set to: 0
 12021                           ;inc\CANlib.h: 697: else
 12022                           ;inc\CANlib.h: 698: RXM0SIDLbits.SID2 = 0x00 ;
 12023  0041F8  010F               	movlb	15	; () banked
 12024  0041FA  9F19               	bcf	25,7,b	;volatile
 12025  0041FC                     l4999:
 12026                           
 12027                           ; BSR set to: 15
 12028                           ;inc\CANlib.h: 700: tamp = (mask >> 21);
 12029  0041FC  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12030  004200  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12031  004204  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12032  004208  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12033  00420C  0E16               	movlw	22
 12034  00420E  D006               	goto	u5710
 12035  004210                     u5715:
 12036  004210  0100               	movlb	0	; () banked
 12037  004212  90D8               	bcf	status,0,c
 12038  004214  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12039  004216  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12040  004218  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12041  00421A  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12042  00421C                     u5710:
 12043  00421C  2EE8               	decfsz	wreg,f,c
 12044  00421E  D7F8               	goto	u5715
 12045  004220  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12046  004224  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12047  004228  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12048  00422C  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12049                           
 12050                           ; BSR set to: 0
 12051                           ;inc\CANlib.h: 701: tamp = tamp & 0x000000FF;
 12052  004230  0100               	movlb	0	; () banked
 12053  004232  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12054  004234  0100               	movlb	0	; () banked
 12055  004236  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12056  004238  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12057  00423A  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12058  00423C  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12059                           
 12060                           ; BSR set to: 0
 12061                           ;inc\CANlib.h: 702: RXM0SIDH = (unsigned char) tamp;
 12062  00423E  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 12063  004242                     l5005:
 12064                           
 12065                           ; BSR set to: 0
 12066                           ;inc\CANlib.h: 703: }
 12067                           ;inc\CANlib.h: 705: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
 12068  004242  0E02               	movlw	2
 12069  004244  0100               	movlb	0	; () banked
 12070  004246  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 12071  004248  A4D8               	btfss	status,2,c
 12072  00424A  0012               	return	
 12073                           
 12074                           ; BSR set to: 0
 12075  00424C  0EF7               	movlw	247
 12076  00424E  0100               	movlb	0	; () banked
 12077  004250  197B               	xorwf	CANSetMask@type& (0+255),w,b
 12078  004252  A4D8               	btfss	status,2,c
 12079  004254  0012               	return	
 12080                           
 12081                           ; BSR set to: 0
 12082                           ;inc\CANlib.h: 706: {
 12083                           ;inc\CANlib.h: 707: tamp = mask & 0x000000FF;
 12084  004256  0100               	movlb	0	; () banked
 12085  004258  5177               	movf	CANSetMask@mask& (0+255),w,b
 12086  00425A  0100               	movlb	0	; () banked
 12087  00425C  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12088  00425E  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12089  004260  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12090  004262  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12091                           
 12092                           ; BSR set to: 0
 12093                           ;inc\CANlib.h: 708: RXM1EIDL = (unsigned char) tamp;
 12094  004264  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
 12095                           
 12096                           ; BSR set to: 0
 12097                           ;inc\CANlib.h: 710: tamp = mask & 0x0000FF00;
 12098  004268  0E00               	movlw	0
 12099  00426A  0100               	movlb	0	; () banked
 12100  00426C  1577               	andwf	CANSetMask@mask& (0+255),w,b
 12101  00426E  0100               	movlb	0	; () banked
 12102  004270  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12103  004272  0EFF               	movlw	255
 12104  004274  0100               	movlb	0	; () banked
 12105  004276  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12106  004278  0100               	movlb	0	; () banked
 12107  00427A  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12108  00427C  0E00               	movlw	0
 12109  00427E  0100               	movlb	0	; () banked
 12110  004280  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12111  004282  0100               	movlb	0	; () banked
 12112  004284  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12113  004286  0E00               	movlw	0
 12114  004288  0100               	movlb	0	; () banked
 12115  00428A  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12116  00428C  0100               	movlb	0	; () banked
 12117  00428E  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12118                           
 12119                           ; BSR set to: 0
 12120                           ;inc\CANlib.h: 711: tamp = tamp >> 8;
 12121  004290  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 12122  004294  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12123  004298  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12124  00429C  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12125  0042A0  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 12126  0042A4  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 12127  0042A8  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 12128  0042AC  0100               	movlb	0	; () banked
 12129  0042AE  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 12130  0042B0  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12131  0042B4  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12132  0042B8  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12133  0042BC  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12134                           
 12135                           ; BSR set to: 0
 12136                           ;inc\CANlib.h: 712: RXM1EIDH = (unsigned char) tamp;
 12137  0042C0  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
 12138                           
 12139                           ; BSR set to: 0
 12140                           ;inc\CANlib.h: 714: if (mask & 0x00010000)
 12141  0042C4  0100               	movlb	0	; () banked
 12142  0042C6  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12143  0042C8  D003               	goto	l443
 12144                           
 12145                           ; BSR set to: 0
 12146                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x01;
 12147  0042CA  010F               	movlb	15	; () banked
 12148  0042CC  811D               	bsf	29,0,b	;volatile
 12149  0042CE  D002               	goto	l444
 12150  0042D0                     l443:
 12151                           
 12152                           ; BSR set to: 0
 12153                           ;inc\CANlib.h: 716: else
 12154                           ;inc\CANlib.h: 717: RXM1SIDLbits.EID16 = 0x00;
 12155  0042D0  010F               	movlb	15	; () banked
 12156  0042D2  911D               	bcf	29,0,b	;volatile
 12157  0042D4                     l444:
 12158                           
 12159                           ; BSR set to: 15
 12160                           ;inc\CANlib.h: 719: if (mask & 0x00020000)
 12161  0042D4  0100               	movlb	0	; () banked
 12162  0042D6  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12163  0042D8  D003               	goto	l445
 12164                           
 12165                           ; BSR set to: 0
 12166                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x01;
 12167  0042DA  010F               	movlb	15	; () banked
 12168  0042DC  831D               	bsf	29,1,b	;volatile
 12169  0042DE  D002               	goto	l446
 12170  0042E0                     l445:
 12171                           
 12172                           ; BSR set to: 0
 12173                           ;inc\CANlib.h: 721: else
 12174                           ;inc\CANlib.h: 722: RXM1SIDLbits.EID17 = 0x00;
 12175  0042E0  010F               	movlb	15	; () banked
 12176  0042E2  931D               	bcf	29,1,b	;volatile
 12177  0042E4                     l446:
 12178                           
 12179                           ; BSR set to: 15
 12180                           ;inc\CANlib.h: 724: if (mask & 0x00040000)
 12181  0042E4  0100               	movlb	0	; () banked
 12182  0042E6  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12183  0042E8  D003               	goto	l447
 12184                           
 12185                           ; BSR set to: 0
 12186                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x01;
 12187  0042EA  010F               	movlb	15	; () banked
 12188  0042EC  8B1D               	bsf	29,5,b	;volatile
 12189  0042EE  D002               	goto	l448
 12190  0042F0                     l447:
 12191                           
 12192                           ; BSR set to: 0
 12193                           ;inc\CANlib.h: 726: else
 12194                           ;inc\CANlib.h: 727: RXM1SIDLbits.SID0 = 0x00;
 12195  0042F0  010F               	movlb	15	; () banked
 12196  0042F2  9B1D               	bcf	29,5,b	;volatile
 12197  0042F4                     l448:
 12198                           
 12199                           ; BSR set to: 15
 12200                           ;inc\CANlib.h: 729: if (mask & 0x00080000)
 12201  0042F4  0100               	movlb	0	; () banked
 12202  0042F6  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12203  0042F8  D003               	goto	l449
 12204                           
 12205                           ; BSR set to: 0
 12206                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x01;
 12207  0042FA  010F               	movlb	15	; () banked
 12208  0042FC  8D1D               	bsf	29,6,b	;volatile
 12209  0042FE  D002               	goto	l450
 12210  004300                     l449:
 12211                           
 12212                           ; BSR set to: 0
 12213                           ;inc\CANlib.h: 731: else
 12214                           ;inc\CANlib.h: 732: RXM1SIDLbits.SID1 = 0x00;
 12215  004300  010F               	movlb	15	; () banked
 12216  004302  9D1D               	bcf	29,6,b	;volatile
 12217  004304                     l450:
 12218                           
 12219                           ; BSR set to: 15
 12220                           ;inc\CANlib.h: 734: if (mask & 0x00100000)
 12221  004304  0100               	movlb	0	; () banked
 12222  004306  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12223  004308  D003               	goto	l451
 12224                           
 12225                           ; BSR set to: 0
 12226                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x01 ;
 12227  00430A  010F               	movlb	15	; () banked
 12228  00430C  8F1D               	bsf	29,7,b	;volatile
 12229  00430E  D002               	goto	l5031
 12230  004310                     l451:
 12231                           
 12232                           ; BSR set to: 0
 12233                           ;inc\CANlib.h: 736: else
 12234                           ;inc\CANlib.h: 737: RXM1SIDLbits.SID2 = 0x00 ;
 12235  004310  010F               	movlb	15	; () banked
 12236  004312  9F1D               	bcf	29,7,b	;volatile
 12237  004314                     l5031:
 12238                           
 12239                           ; BSR set to: 15
 12240                           ;inc\CANlib.h: 739: tamp = (mask >> 21);
 12241  004314  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12242  004318  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12243  00431C  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12244  004320  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12245  004324  0E16               	movlw	22
 12246  004326  D006               	goto	u5790
 12247  004328                     u5795:
 12248  004328  0100               	movlb	0	; () banked
 12249  00432A  90D8               	bcf	status,0,c
 12250  00432C  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12251  00432E  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12252  004330  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12253  004332  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12254  004334                     u5790:
 12255  004334  2EE8               	decfsz	wreg,f,c
 12256  004336  D7F8               	goto	u5795
 12257  004338  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12258  00433C  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12259  004340  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12260  004344  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12261                           
 12262                           ; BSR set to: 0
 12263                           ;inc\CANlib.h: 740: tamp = tamp & 0x000000FF;
 12264  004348  0100               	movlb	0	; () banked
 12265  00434A  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12266  00434C  0100               	movlb	0	; () banked
 12267  00434E  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12268  004350  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12269  004352  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12270  004354  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12271                           
 12272                           ; BSR set to: 0
 12273                           ;inc\CANlib.h: 741: RXM1SIDH = (unsigned char) tamp;
 12274  004356  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 12275  00435A  0012               	return	
 12276  00435C                     __end_of_CANSetMask:
 12277                           	opt stack 0
 12278                           tblptru	equ	0xFF8
 12279                           tblptrh	equ	0xFF7
 12280                           tblptrl	equ	0xFF6
 12281                           tablat	equ	0xFF5
 12282                           prodh	equ	0xFF4
 12283                           prodl	equ	0xFF3
 12284                           intcon	equ	0xFF2
 12285                           intcon2	equ	0xFF1
 12286                           postinc0	equ	0xFEE
 12287                           wreg	equ	0xFE8
 12288                           postdec1	equ	0xFE5
 12289                           fsr1l	equ	0xFE1
 12290                           indf2	equ	0xFDF
 12291                           postinc2	equ	0xFDE
 12292                           postdec2	equ	0xFDD
 12293                           fsr2h	equ	0xFDA
 12294                           fsr2l	equ	0xFD9
 12295                           status	equ	0xFD8
 12296                           
 12297 ;; *************** function _CANSetFilter *****************
 12298 ;; Defined at:
 12299 ;;		line 749 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 12300 ;; Parameters:    Size  Location     Type
 12301 ;;  numBuffer       1    wreg     enum E16350
 12302 ;;  filter          4   23[BANK0 ] unsigned long 
 12303 ;;  type            1   27[BANK0 ] enum E16313
 12304 ;; Auto vars:     Size  Location     Type
 12305 ;;  numBuffer       1   32[BANK0 ] enum E16350
 12306 ;;  tamp            4   33[BANK0 ] unsigned long 
 12307 ;; Return value:  Size  Location     Type
 12308 ;;		None               void
 12309 ;; Registers used:
 12310 ;;		wreg, status,2, status,0
 12311 ;; Tracked objects:
 12312 ;;		On entry : 0/0
 12313 ;;		On exit  : 0/0
 12314 ;;		Unchanged: 0/0
 12315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12316 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12317 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12318 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12319 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12320 ;;Total ram usage:       14 bytes
 12321 ;; Hardware stack levels used:    1
 12322 ;; Hardware stack levels required when called:    4
 12323 ;; This function calls:
 12324 ;;		Nothing
 12325 ;; This function is called by:
 12326 ;;		_CANInitialize
 12327 ;; This function uses a non-reentrant model
 12328 ;;
 12329                           
 12330                           	psect	text32
 12331  000D52                     __ptext32:
 12332                           	opt stack 0
 12333  000D52                     _CANSetFilter:
 12334                           	opt stack 24
 12335                           
 12336                           ; BSR set to: 0
 12337                           ;incstack = 0
 12338                           ;CANSetFilter@numBuffer stored from wreg
 12339  000D52  0100               	movlb	0	; () banked
 12340  000D54  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
 12341                           
 12342                           ;inc\CANlib.h: 751: unsigned long tamp;
 12343                           ;inc\CANlib.h: 753: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
 12344  000D56  0100               	movlb	0	; () banked
 12345  000D58  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12346  000D5A  0100               	movlb	0	; () banked
 12347  000D5C  A4D8               	btfss	status,2,c
 12348  000D5E  D058               	goto	l5055
 12349                           
 12350                           ; BSR set to: 0
 12351  000D60  0100               	movlb	0	; () banked
 12352  000D62  297B               	incf	CANSetFilter@type& (0+255),w,b
 12353  000D64  A4D8               	btfss	status,2,c
 12354  000D66  D054               	goto	l5055
 12355                           
 12356                           ; BSR set to: 0
 12357                           ;inc\CANlib.h: 754: {
 12358                           ;inc\CANlib.h: 755: RXF0SIDLbits.EXIDEN = 0x00;
 12359  000D68  010F               	movlb	15	; () banked
 12360  000D6A  9701               	bcf	1,3,b	;volatile
 12361                           
 12362                           ; BSR set to: 15
 12363                           ;inc\CANlib.h: 757: tamp = (filter >> 3);
 12364  000D6C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12365  000D70  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12366  000D74  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12367  000D78  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12368  000D7C  0E04               	movlw	4
 12369  000D7E  D006               	goto	u5820
 12370  000D80                     u5825:
 12371  000D80  0100               	movlb	0	; () banked
 12372  000D82  90D8               	bcf	status,0,c
 12373  000D84  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12374  000D86  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12375  000D88  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12376  000D8A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12377  000D8C                     u5820:
 12378  000D8C  2EE8               	decfsz	wreg,f,c
 12379  000D8E  D7F8               	goto	u5825
 12380  000D90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12381  000D94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12382  000D98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12383  000D9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12384                           
 12385                           ; BSR set to: 0
 12386                           ;inc\CANlib.h: 758: tamp = tamp & 0x000000FF;
 12387  000DA0  0100               	movlb	0	; () banked
 12388  000DA2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12389  000DA4  0100               	movlb	0	; () banked
 12390  000DA6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12391  000DA8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12392  000DAA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12393  000DAC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12394                           
 12395                           ; BSR set to: 0
 12396                           ;inc\CANlib.h: 759: RXF0SIDH = (unsigned char) tamp;
 12397  000DAE  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12398                           
 12399                           ; BSR set to: 0
 12400                           ;inc\CANlib.h: 761: tamp = filter & 0x00000007;
 12401  000DB2  0E07               	movlw	7
 12402  000DB4  0100               	movlb	0	; () banked
 12403  000DB6  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12404  000DB8  0100               	movlb	0	; () banked
 12405  000DBA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12406  000DBC  0E00               	movlw	0
 12407  000DBE  0100               	movlb	0	; () banked
 12408  000DC0  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12409  000DC2  0100               	movlb	0	; () banked
 12410  000DC4  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12411  000DC6  0E00               	movlw	0
 12412  000DC8  0100               	movlb	0	; () banked
 12413  000DCA  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12414  000DCC  0100               	movlb	0	; () banked
 12415  000DCE  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12416  000DD0  0E00               	movlw	0
 12417  000DD2  0100               	movlb	0	; () banked
 12418  000DD4  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12419  000DD6  0100               	movlb	0	; () banked
 12420  000DD8  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12421                           
 12422                           ; BSR set to: 0
 12423                           ;inc\CANlib.h: 762: tamp = tamp << 5;
 12424  000DDA  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12425  000DDE  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12426  000DE2  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12427  000DE6  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12428  000DEA  0E05               	movlw	5
 12429  000DEC                     u5835:
 12430  000DEC  90D8               	bcf	status,0,c
 12431  000DEE  0100               	movlb	0	; () banked
 12432  000DF0  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12433  000DF2  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12434  000DF4  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12435  000DF6  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12436  000DF8  2EE8               	decfsz	wreg,f,c
 12437  000DFA  D7F8               	goto	u5835
 12438  000DFC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12439  000E00  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12440  000E04  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12441  000E08  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12442                           
 12443                           ; BSR set to: 0
 12444                           ;inc\CANlib.h: 763: RXF0SIDL = (unsigned char) tamp;
 12445  000E0C  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
 12446  000E10                     l5055:
 12447                           
 12448                           ; BSR set to: 0
 12449                           ;inc\CANlib.h: 764: }
 12450                           ;inc\CANlib.h: 766: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
 12451  000E10  0100               	movlb	0	; () banked
 12452  000E12  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12453  000E14  A4D8               	btfss	status,2,c
 12454  000E16  D058               	goto	l5073
 12455                           
 12456                           ; BSR set to: 0
 12457  000E18  0100               	movlb	0	; () banked
 12458  000E1A  297B               	incf	CANSetFilter@type& (0+255),w,b
 12459  000E1C  A4D8               	btfss	status,2,c
 12460  000E1E  D054               	goto	l5073
 12461                           
 12462                           ; BSR set to: 0
 12463                           ;inc\CANlib.h: 767: {
 12464                           ;inc\CANlib.h: 768: RXF1SIDLbits.EXIDEN = 0x00;
 12465  000E20  010F               	movlb	15	; () banked
 12466  000E22  9705               	bcf	5,3,b	;volatile
 12467                           
 12468                           ; BSR set to: 15
 12469                           ;inc\CANlib.h: 770: tamp = (filter >> 3);
 12470  000E24  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12471  000E28  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12472  000E2C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12473  000E30  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12474  000E34  0E04               	movlw	4
 12475  000E36  D006               	goto	u5860
 12476  000E38                     u5865:
 12477  000E38  0100               	movlb	0	; () banked
 12478  000E3A  90D8               	bcf	status,0,c
 12479  000E3C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12480  000E3E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12481  000E40  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12482  000E42  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12483  000E44                     u5860:
 12484  000E44  2EE8               	decfsz	wreg,f,c
 12485  000E46  D7F8               	goto	u5865
 12486  000E48  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12487  000E4C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12488  000E50  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12489  000E54  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12490                           
 12491                           ; BSR set to: 0
 12492                           ;inc\CANlib.h: 771: tamp = tamp & 0x000000FF;
 12493  000E58  0100               	movlb	0	; () banked
 12494  000E5A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12495  000E5C  0100               	movlb	0	; () banked
 12496  000E5E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12497  000E60  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12498  000E62  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12499  000E64  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12500                           
 12501                           ; BSR set to: 0
 12502                           ;inc\CANlib.h: 772: RXF1SIDH = (unsigned char) tamp;
 12503  000E66  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 12504                           
 12505                           ; BSR set to: 0
 12506                           ;inc\CANlib.h: 774: tamp = filter & 0x00000007;
 12507  000E6A  0E07               	movlw	7
 12508  000E6C  0100               	movlb	0	; () banked
 12509  000E6E  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12510  000E70  0100               	movlb	0	; () banked
 12511  000E72  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12512  000E74  0E00               	movlw	0
 12513  000E76  0100               	movlb	0	; () banked
 12514  000E78  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12515  000E7A  0100               	movlb	0	; () banked
 12516  000E7C  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12517  000E7E  0E00               	movlw	0
 12518  000E80  0100               	movlb	0	; () banked
 12519  000E82  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12520  000E84  0100               	movlb	0	; () banked
 12521  000E86  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12522  000E88  0E00               	movlw	0
 12523  000E8A  0100               	movlb	0	; () banked
 12524  000E8C  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12525  000E8E  0100               	movlb	0	; () banked
 12526  000E90  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12527                           
 12528                           ; BSR set to: 0
 12529                           ;inc\CANlib.h: 775: tamp = tamp << 5;
 12530  000E92  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12531  000E96  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12532  000E9A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12533  000E9E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12534  000EA2  0E05               	movlw	5
 12535  000EA4                     u5875:
 12536  000EA4  90D8               	bcf	status,0,c
 12537  000EA6  0100               	movlb	0	; () banked
 12538  000EA8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12539  000EAA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12540  000EAC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12541  000EAE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12542  000EB0  2EE8               	decfsz	wreg,f,c
 12543  000EB2  D7F8               	goto	u5875
 12544  000EB4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12545  000EB8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12546  000EBC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12547  000EC0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12548                           
 12549                           ; BSR set to: 0
 12550                           ;inc\CANlib.h: 776: RXF1SIDL = (unsigned char) tamp;
 12551  000EC4  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
 12552  000EC8                     l5073:
 12553                           
 12554                           ; BSR set to: 0
 12555                           ;inc\CANlib.h: 777: }
 12556                           ;inc\CANlib.h: 779: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
 12557  000EC8  0E02               	movlw	2
 12558  000ECA  0100               	movlb	0	; () banked
 12559  000ECC  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12560  000ECE  A4D8               	btfss	status,2,c
 12561  000ED0  D058               	goto	l5091
 12562                           
 12563                           ; BSR set to: 0
 12564  000ED2  0100               	movlb	0	; () banked
 12565  000ED4  297B               	incf	CANSetFilter@type& (0+255),w,b
 12566  000ED6  A4D8               	btfss	status,2,c
 12567  000ED8  D054               	goto	l5091
 12568                           
 12569                           ; BSR set to: 0
 12570                           ;inc\CANlib.h: 780: {
 12571                           ;inc\CANlib.h: 781: RXF2SIDLbits.EXIDEN = 0x00;
 12572  000EDA  010F               	movlb	15	; () banked
 12573  000EDC  9709               	bcf	9,3,b	;volatile
 12574                           
 12575                           ; BSR set to: 15
 12576                           ;inc\CANlib.h: 783: tamp = (filter >> 3);
 12577  000EDE  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12578  000EE2  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12579  000EE6  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12580  000EEA  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12581  000EEE  0E04               	movlw	4
 12582  000EF0  D006               	goto	u5900
 12583  000EF2                     u5905:
 12584  000EF2  0100               	movlb	0	; () banked
 12585  000EF4  90D8               	bcf	status,0,c
 12586  000EF6  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12587  000EF8  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12588  000EFA  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12589  000EFC  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12590  000EFE                     u5900:
 12591  000EFE  2EE8               	decfsz	wreg,f,c
 12592  000F00  D7F8               	goto	u5905
 12593  000F02  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12594  000F06  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12595  000F0A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12596  000F0E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12597                           
 12598                           ; BSR set to: 0
 12599                           ;inc\CANlib.h: 784: tamp = tamp & 0x000000FF;
 12600  000F12  0100               	movlb	0	; () banked
 12601  000F14  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12602  000F16  0100               	movlb	0	; () banked
 12603  000F18  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12604  000F1A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12605  000F1C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12606  000F1E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12607                           
 12608                           ; BSR set to: 0
 12609                           ;inc\CANlib.h: 785: RXF2SIDH = (unsigned char) tamp;
 12610  000F20  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 12611                           
 12612                           ; BSR set to: 0
 12613                           ;inc\CANlib.h: 787: tamp = filter & 0x00000007;
 12614  000F24  0E07               	movlw	7
 12615  000F26  0100               	movlb	0	; () banked
 12616  000F28  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12617  000F2A  0100               	movlb	0	; () banked
 12618  000F2C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12619  000F2E  0E00               	movlw	0
 12620  000F30  0100               	movlb	0	; () banked
 12621  000F32  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12622  000F34  0100               	movlb	0	; () banked
 12623  000F36  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12624  000F38  0E00               	movlw	0
 12625  000F3A  0100               	movlb	0	; () banked
 12626  000F3C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12627  000F3E  0100               	movlb	0	; () banked
 12628  000F40  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12629  000F42  0E00               	movlw	0
 12630  000F44  0100               	movlb	0	; () banked
 12631  000F46  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12632  000F48  0100               	movlb	0	; () banked
 12633  000F4A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12634                           
 12635                           ; BSR set to: 0
 12636                           ;inc\CANlib.h: 788: tamp = tamp << 5;
 12637  000F4C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12638  000F50  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12639  000F54  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12640  000F58  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12641  000F5C  0E05               	movlw	5
 12642  000F5E                     u5915:
 12643  000F5E  90D8               	bcf	status,0,c
 12644  000F60  0100               	movlb	0	; () banked
 12645  000F62  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12646  000F64  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12647  000F66  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12648  000F68  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12649  000F6A  2EE8               	decfsz	wreg,f,c
 12650  000F6C  D7F8               	goto	u5915
 12651  000F6E  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12652  000F72  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12653  000F76  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12654  000F7A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12655                           
 12656                           ; BSR set to: 0
 12657                           ;inc\CANlib.h: 789: RXF2SIDL = (unsigned char) tamp;
 12658  000F7E  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
 12659  000F82                     l5091:
 12660                           
 12661                           ; BSR set to: 0
 12662                           ;inc\CANlib.h: 790: }
 12663                           ;inc\CANlib.h: 792: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
 12664  000F82  0E03               	movlw	3
 12665  000F84  0100               	movlb	0	; () banked
 12666  000F86  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12667  000F88  A4D8               	btfss	status,2,c
 12668  000F8A  D058               	goto	l5109
 12669                           
 12670                           ; BSR set to: 0
 12671  000F8C  0100               	movlb	0	; () banked
 12672  000F8E  297B               	incf	CANSetFilter@type& (0+255),w,b
 12673  000F90  A4D8               	btfss	status,2,c
 12674  000F92  D054               	goto	l5109
 12675                           
 12676                           ; BSR set to: 0
 12677                           ;inc\CANlib.h: 793: {
 12678                           ;inc\CANlib.h: 794: RXF3SIDLbits.EXIDEN = 0x00;
 12679  000F94  010F               	movlb	15	; () banked
 12680  000F96  970D               	bcf	13,3,b	;volatile
 12681                           
 12682                           ; BSR set to: 15
 12683                           ;inc\CANlib.h: 796: tamp = (filter >> 3);
 12684  000F98  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12685  000F9C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12686  000FA0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12687  000FA4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12688  000FA8  0E04               	movlw	4
 12689  000FAA  D006               	goto	u5940
 12690  000FAC                     u5945:
 12691  000FAC  0100               	movlb	0	; () banked
 12692  000FAE  90D8               	bcf	status,0,c
 12693  000FB0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12694  000FB2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12695  000FB4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12696  000FB6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12697  000FB8                     u5940:
 12698  000FB8  2EE8               	decfsz	wreg,f,c
 12699  000FBA  D7F8               	goto	u5945
 12700  000FBC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12701  000FC0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12702  000FC4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12703  000FC8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12704                           
 12705                           ; BSR set to: 0
 12706                           ;inc\CANlib.h: 797: tamp = tamp & 0x000000FF;
 12707  000FCC  0100               	movlb	0	; () banked
 12708  000FCE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12709  000FD0  0100               	movlb	0	; () banked
 12710  000FD2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12711  000FD4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12712  000FD6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12713  000FD8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12714                           
 12715                           ; BSR set to: 0
 12716                           ;inc\CANlib.h: 798: RXF3SIDH = (unsigned char) tamp;
 12717  000FDA  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 12718                           
 12719                           ; BSR set to: 0
 12720                           ;inc\CANlib.h: 800: tamp = filter & 0x00000007;
 12721  000FDE  0E07               	movlw	7
 12722  000FE0  0100               	movlb	0	; () banked
 12723  000FE2  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12724  000FE4  0100               	movlb	0	; () banked
 12725  000FE6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12726  000FE8  0E00               	movlw	0
 12727  000FEA  0100               	movlb	0	; () banked
 12728  000FEC  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12729  000FEE  0100               	movlb	0	; () banked
 12730  000FF0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12731  000FF2  0E00               	movlw	0
 12732  000FF4  0100               	movlb	0	; () banked
 12733  000FF6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12734  000FF8  0100               	movlb	0	; () banked
 12735  000FFA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12736  000FFC  0E00               	movlw	0
 12737  000FFE  0100               	movlb	0	; () banked
 12738  001000  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12739  001002  0100               	movlb	0	; () banked
 12740  001004  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12741                           
 12742                           ; BSR set to: 0
 12743                           ;inc\CANlib.h: 801: tamp = tamp << 5;
 12744  001006  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12745  00100A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12746  00100E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12747  001012  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12748  001016  0E05               	movlw	5
 12749  001018                     u5955:
 12750  001018  90D8               	bcf	status,0,c
 12751  00101A  0100               	movlb	0	; () banked
 12752  00101C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12753  00101E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12754  001020  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12755  001022  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12756  001024  2EE8               	decfsz	wreg,f,c
 12757  001026  D7F8               	goto	u5955
 12758  001028  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12759  00102C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12760  001030  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12761  001034  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12762                           
 12763                           ; BSR set to: 0
 12764                           ;inc\CANlib.h: 802: RXF3SIDL = (unsigned char) tamp;
 12765  001038  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
 12766  00103C                     l5109:
 12767                           
 12768                           ; BSR set to: 0
 12769                           ;inc\CANlib.h: 803: }
 12770                           ;inc\CANlib.h: 805: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
 12771  00103C  0E04               	movlw	4
 12772  00103E  0100               	movlb	0	; () banked
 12773  001040  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12774  001042  A4D8               	btfss	status,2,c
 12775  001044  D058               	goto	l5127
 12776                           
 12777                           ; BSR set to: 0
 12778  001046  0100               	movlb	0	; () banked
 12779  001048  297B               	incf	CANSetFilter@type& (0+255),w,b
 12780  00104A  A4D8               	btfss	status,2,c
 12781  00104C  D054               	goto	l5127
 12782                           
 12783                           ; BSR set to: 0
 12784                           ;inc\CANlib.h: 806: {
 12785                           ;inc\CANlib.h: 807: RXF4SIDLbits.EXIDEN = 0x00;
 12786  00104E  010F               	movlb	15	; () banked
 12787  001050  9711               	bcf	17,3,b	;volatile
 12788                           
 12789                           ; BSR set to: 15
 12790                           ;inc\CANlib.h: 809: tamp = (filter >> 3);
 12791  001052  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12792  001056  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12793  00105A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12794  00105E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12795  001062  0E04               	movlw	4
 12796  001064  D006               	goto	u5980
 12797  001066                     u5985:
 12798  001066  0100               	movlb	0	; () banked
 12799  001068  90D8               	bcf	status,0,c
 12800  00106A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12801  00106C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12802  00106E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12803  001070  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12804  001072                     u5980:
 12805  001072  2EE8               	decfsz	wreg,f,c
 12806  001074  D7F8               	goto	u5985
 12807  001076  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12808  00107A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12809  00107E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12810  001082  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12811                           
 12812                           ; BSR set to: 0
 12813                           ;inc\CANlib.h: 810: tamp = tamp & 0x000000FF;
 12814  001086  0100               	movlb	0	; () banked
 12815  001088  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12816  00108A  0100               	movlb	0	; () banked
 12817  00108C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12818  00108E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12819  001090  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12820  001092  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12821                           
 12822                           ; BSR set to: 0
 12823                           ;inc\CANlib.h: 811: RXF4SIDH = (unsigned char) tamp;
 12824  001094  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 12825                           
 12826                           ; BSR set to: 0
 12827                           ;inc\CANlib.h: 813: tamp = filter & 0x00000007;
 12828  001098  0E07               	movlw	7
 12829  00109A  0100               	movlb	0	; () banked
 12830  00109C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12831  00109E  0100               	movlb	0	; () banked
 12832  0010A0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12833  0010A2  0E00               	movlw	0
 12834  0010A4  0100               	movlb	0	; () banked
 12835  0010A6  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12836  0010A8  0100               	movlb	0	; () banked
 12837  0010AA  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12838  0010AC  0E00               	movlw	0
 12839  0010AE  0100               	movlb	0	; () banked
 12840  0010B0  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12841  0010B2  0100               	movlb	0	; () banked
 12842  0010B4  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12843  0010B6  0E00               	movlw	0
 12844  0010B8  0100               	movlb	0	; () banked
 12845  0010BA  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12846  0010BC  0100               	movlb	0	; () banked
 12847  0010BE  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12848                           
 12849                           ; BSR set to: 0
 12850                           ;inc\CANlib.h: 814: tamp = tamp << 5;
 12851  0010C0  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12852  0010C4  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12853  0010C8  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12854  0010CC  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12855  0010D0  0E05               	movlw	5
 12856  0010D2                     u5995:
 12857  0010D2  90D8               	bcf	status,0,c
 12858  0010D4  0100               	movlb	0	; () banked
 12859  0010D6  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12860  0010D8  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12861  0010DA  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12862  0010DC  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12863  0010DE  2EE8               	decfsz	wreg,f,c
 12864  0010E0  D7F8               	goto	u5995
 12865  0010E2  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12866  0010E6  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12867  0010EA  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12868  0010EE  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12869                           
 12870                           ; BSR set to: 0
 12871                           ;inc\CANlib.h: 815: RXF4SIDL = (unsigned char) tamp;
 12872  0010F2  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 12873  0010F6                     l5127:
 12874                           
 12875                           ; BSR set to: 0
 12876                           ;inc\CANlib.h: 816: }
 12877                           ;inc\CANlib.h: 818: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 12878  0010F6  0E05               	movlw	5
 12879  0010F8  0100               	movlb	0	; () banked
 12880  0010FA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12881  0010FC  A4D8               	btfss	status,2,c
 12882  0010FE  D058               	goto	l5145
 12883                           
 12884                           ; BSR set to: 0
 12885  001100  0100               	movlb	0	; () banked
 12886  001102  297B               	incf	CANSetFilter@type& (0+255),w,b
 12887  001104  A4D8               	btfss	status,2,c
 12888  001106  D054               	goto	l5145
 12889                           
 12890                           ; BSR set to: 0
 12891                           ;inc\CANlib.h: 819: {
 12892                           ;inc\CANlib.h: 820: RXF5SIDLbits.EXIDEN = 0x00;
 12893  001108  010F               	movlb	15	; () banked
 12894  00110A  9715               	bcf	21,3,b	;volatile
 12895                           
 12896                           ; BSR set to: 15
 12897                           ;inc\CANlib.h: 822: tamp = (filter >> 3);
 12898  00110C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12899  001110  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12900  001114  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12901  001118  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12902  00111C  0E04               	movlw	4
 12903  00111E  D006               	goto	u6020
 12904  001120                     u6025:
 12905  001120  0100               	movlb	0	; () banked
 12906  001122  90D8               	bcf	status,0,c
 12907  001124  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12908  001126  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12909  001128  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12910  00112A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12911  00112C                     u6020:
 12912  00112C  2EE8               	decfsz	wreg,f,c
 12913  00112E  D7F8               	goto	u6025
 12914  001130  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12915  001134  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12916  001138  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12917  00113C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12918                           
 12919                           ; BSR set to: 0
 12920                           ;inc\CANlib.h: 823: tamp = tamp & 0x000000FF;
 12921  001140  0100               	movlb	0	; () banked
 12922  001142  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12923  001144  0100               	movlb	0	; () banked
 12924  001146  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12925  001148  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12926  00114A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12927  00114C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12928                           
 12929                           ; BSR set to: 0
 12930                           ;inc\CANlib.h: 824: RXF5SIDH = (unsigned char) tamp;
 12931  00114E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 12932                           
 12933                           ; BSR set to: 0
 12934                           ;inc\CANlib.h: 826: tamp = filter & 0x00000007;
 12935  001152  0E07               	movlw	7
 12936  001154  0100               	movlb	0	; () banked
 12937  001156  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12938  001158  0100               	movlb	0	; () banked
 12939  00115A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12940  00115C  0E00               	movlw	0
 12941  00115E  0100               	movlb	0	; () banked
 12942  001160  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12943  001162  0100               	movlb	0	; () banked
 12944  001164  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12945  001166  0E00               	movlw	0
 12946  001168  0100               	movlb	0	; () banked
 12947  00116A  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12948  00116C  0100               	movlb	0	; () banked
 12949  00116E  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12950  001170  0E00               	movlw	0
 12951  001172  0100               	movlb	0	; () banked
 12952  001174  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12953  001176  0100               	movlb	0	; () banked
 12954  001178  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12955                           
 12956                           ; BSR set to: 0
 12957                           ;inc\CANlib.h: 827: tamp = tamp << 5;
 12958  00117A  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12959  00117E  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12960  001182  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12961  001186  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12962  00118A  0E05               	movlw	5
 12963  00118C                     u6035:
 12964  00118C  90D8               	bcf	status,0,c
 12965  00118E  0100               	movlb	0	; () banked
 12966  001190  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12967  001192  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12968  001194  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12969  001196  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12970  001198  2EE8               	decfsz	wreg,f,c
 12971  00119A  D7F8               	goto	u6035
 12972  00119C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12973  0011A0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12974  0011A4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12975  0011A8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12976                           
 12977                           ; BSR set to: 0
 12978                           ;inc\CANlib.h: 828: RXF5SIDL = (unsigned char) tamp;
 12979  0011AC  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 12980  0011B0                     l5145:
 12981                           
 12982                           ; BSR set to: 0
 12983                           ;inc\CANlib.h: 829: }
 12984                           ;inc\CANlib.h: 832: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 12985  0011B0  0100               	movlb	0	; () banked
 12986  0011B2  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12987  0011B4  0100               	movlb	0	; () banked
 12988  0011B6  A4D8               	btfss	status,2,c
 12989  0011B8  D089               	goto	l5179
 12990                           
 12991                           ; BSR set to: 0
 12992  0011BA  0EF7               	movlw	247
 12993  0011BC  0100               	movlb	0	; () banked
 12994  0011BE  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 12995  0011C0  A4D8               	btfss	status,2,c
 12996  0011C2  D084               	goto	l5179
 12997                           
 12998                           ; BSR set to: 0
 12999                           ;inc\CANlib.h: 833: {
 13000                           ;inc\CANlib.h: 834: RXF0SIDLbits.EXIDEN = 0x01;
 13001  0011C4  010F               	movlb	15	; () banked
 13002  0011C6  8701               	bsf	1,3,b	;volatile
 13003                           
 13004                           ; BSR set to: 15
 13005                           ;inc\CANlib.h: 836: tamp = filter & 0x000000FF;
 13006  0011C8  0100               	movlb	0	; () banked
 13007  0011CA  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13008  0011CC  0100               	movlb	0	; () banked
 13009  0011CE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13010  0011D0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13011  0011D2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13012  0011D4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13013                           
 13014                           ; BSR set to: 0
 13015                           ;inc\CANlib.h: 837: RXF0EIDL = (unsigned char) tamp;
 13016  0011D6  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 13017                           
 13018                           ; BSR set to: 0
 13019                           ;inc\CANlib.h: 839: tamp = filter & 0x0000FF00;
 13020  0011DA  0E00               	movlw	0
 13021  0011DC  0100               	movlb	0	; () banked
 13022  0011DE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13023  0011E0  0100               	movlb	0	; () banked
 13024  0011E2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13025  0011E4  0EFF               	movlw	255
 13026  0011E6  0100               	movlb	0	; () banked
 13027  0011E8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13028  0011EA  0100               	movlb	0	; () banked
 13029  0011EC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13030  0011EE  0E00               	movlw	0
 13031  0011F0  0100               	movlb	0	; () banked
 13032  0011F2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13033  0011F4  0100               	movlb	0	; () banked
 13034  0011F6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13035  0011F8  0E00               	movlw	0
 13036  0011FA  0100               	movlb	0	; () banked
 13037  0011FC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13038  0011FE  0100               	movlb	0	; () banked
 13039  001200  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13040                           
 13041                           ; BSR set to: 0
 13042                           ;inc\CANlib.h: 840: tamp = tamp >> 8;
 13043  001202  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13044  001206  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13045  00120A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13046  00120E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13047  001212  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13048  001216  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13049  00121A  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13050  00121E  0100               	movlb	0	; () banked
 13051  001220  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13052  001222  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13053  001226  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13054  00122A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13055  00122E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13056                           
 13057                           ; BSR set to: 0
 13058                           ;inc\CANlib.h: 841: RXF0EIDH = (unsigned char) tamp;
 13059  001232  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 13060                           
 13061                           ; BSR set to: 0
 13062                           ;inc\CANlib.h: 843: if (filter & 0x00010000)
 13063  001236  0100               	movlb	0	; () banked
 13064  001238  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13065  00123A  D003               	goto	l463
 13066                           
 13067                           ; BSR set to: 0
 13068                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x01;
 13069  00123C  010F               	movlb	15	; () banked
 13070  00123E  8101               	bsf	1,0,b	;volatile
 13071  001240  D002               	goto	l464
 13072  001242                     l463:
 13073                           
 13074                           ; BSR set to: 0
 13075                           ;inc\CANlib.h: 845: else
 13076                           ;inc\CANlib.h: 846: RXF0SIDLbits.EID16 = 0x00;
 13077  001242  010F               	movlb	15	; () banked
 13078  001244  9101               	bcf	1,0,b	;volatile
 13079  001246                     l464:
 13080                           
 13081                           ; BSR set to: 15
 13082                           ;inc\CANlib.h: 848: if (filter & 0x00020000)
 13083  001246  0100               	movlb	0	; () banked
 13084  001248  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13085  00124A  D003               	goto	l465
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x01;
 13089  00124C  010F               	movlb	15	; () banked
 13090  00124E  8301               	bsf	1,1,b	;volatile
 13091  001250  D002               	goto	l466
 13092  001252                     l465:
 13093                           
 13094                           ; BSR set to: 0
 13095                           ;inc\CANlib.h: 850: else
 13096                           ;inc\CANlib.h: 851: RXF0SIDLbits.EID17 = 0x00;
 13097  001252  010F               	movlb	15	; () banked
 13098  001254  9301               	bcf	1,1,b	;volatile
 13099  001256                     l466:
 13100                           
 13101                           ; BSR set to: 15
 13102                           ;inc\CANlib.h: 853: if (filter & 0x00040000)
 13103  001256  0100               	movlb	0	; () banked
 13104  001258  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13105  00125A  D003               	goto	l467
 13106                           
 13107                           ; BSR set to: 0
 13108                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x01;
 13109  00125C  010F               	movlb	15	; () banked
 13110  00125E  8B01               	bsf	1,5,b	;volatile
 13111  001260  D002               	goto	l468
 13112  001262                     l467:
 13113                           
 13114                           ; BSR set to: 0
 13115                           ;inc\CANlib.h: 855: else
 13116                           ;inc\CANlib.h: 856: RXF0SIDLbits.SID0 = 0x00;
 13117  001262  010F               	movlb	15	; () banked
 13118  001264  9B01               	bcf	1,5,b	;volatile
 13119  001266                     l468:
 13120                           
 13121                           ; BSR set to: 15
 13122                           ;inc\CANlib.h: 858: if (filter & 0x00080000)
 13123  001266  0100               	movlb	0	; () banked
 13124  001268  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13125  00126A  D003               	goto	l469
 13126                           
 13127                           ; BSR set to: 0
 13128                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x01;
 13129  00126C  010F               	movlb	15	; () banked
 13130  00126E  8D01               	bsf	1,6,b	;volatile
 13131  001270  D002               	goto	l470
 13132  001272                     l469:
 13133                           
 13134                           ; BSR set to: 0
 13135                           ;inc\CANlib.h: 860: else
 13136                           ;inc\CANlib.h: 861: RXF0SIDLbits.SID1 = 0x00;
 13137  001272  010F               	movlb	15	; () banked
 13138  001274  9D01               	bcf	1,6,b	;volatile
 13139  001276                     l470:
 13140                           
 13141                           ; BSR set to: 15
 13142                           ;inc\CANlib.h: 863: if (filter & 0x00100000)
 13143  001276  0100               	movlb	0	; () banked
 13144  001278  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13145  00127A  D003               	goto	l471
 13146                           
 13147                           ; BSR set to: 0
 13148                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x01 ;
 13149  00127C  010F               	movlb	15	; () banked
 13150  00127E  8F01               	bsf	1,7,b	;volatile
 13151  001280  D002               	goto	l5173
 13152  001282                     l471:
 13153                           
 13154                           ; BSR set to: 0
 13155                           ;inc\CANlib.h: 865: else
 13156                           ;inc\CANlib.h: 866: RXF0SIDLbits.SID2 = 0x00 ;
 13157  001282  010F               	movlb	15	; () banked
 13158  001284  9F01               	bcf	1,7,b	;volatile
 13159  001286                     l5173:
 13160                           
 13161                           ; BSR set to: 15
 13162                           ;inc\CANlib.h: 868: tamp = (filter >> 21);
 13163  001286  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13164  00128A  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13165  00128E  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13166  001292  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13167  001296  0E16               	movlw	22
 13168  001298  D006               	goto	u6110
 13169  00129A                     u6115:
 13170  00129A  0100               	movlb	0	; () banked
 13171  00129C  90D8               	bcf	status,0,c
 13172  00129E  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13173  0012A0  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13174  0012A2  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13175  0012A4  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13176  0012A6                     u6110:
 13177  0012A6  2EE8               	decfsz	wreg,f,c
 13178  0012A8  D7F8               	goto	u6115
 13179  0012AA  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13180  0012AE  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13181  0012B2  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13182  0012B6  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13183                           
 13184                           ; BSR set to: 0
 13185                           ;inc\CANlib.h: 869: tamp = tamp & 0x000000FF;
 13186  0012BA  0100               	movlb	0	; () banked
 13187  0012BC  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13188  0012BE  0100               	movlb	0	; () banked
 13189  0012C0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13190  0012C2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13191  0012C4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13192  0012C6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13193                           
 13194                           ; BSR set to: 0
 13195                           ;inc\CANlib.h: 870: RXF0SIDH = (unsigned char) tamp;
 13196  0012C8  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 13197  0012CC                     l5179:
 13198                           
 13199                           ; BSR set to: 0
 13200                           ;inc\CANlib.h: 871: }
 13201                           ;inc\CANlib.h: 873: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 13202  0012CC  0100               	movlb	0	; () banked
 13203  0012CE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 13204  0012D0  A4D8               	btfss	status,2,c
 13205  0012D2  D089               	goto	l5213
 13206                           
 13207                           ; BSR set to: 0
 13208  0012D4  0EF7               	movlw	247
 13209  0012D6  0100               	movlb	0	; () banked
 13210  0012D8  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13211  0012DA  A4D8               	btfss	status,2,c
 13212  0012DC  D084               	goto	l5213
 13213                           
 13214                           ; BSR set to: 0
 13215                           ;inc\CANlib.h: 874: {
 13216                           ;inc\CANlib.h: 875: RXF1SIDLbits.EXIDEN = 0x01;
 13217  0012DE  010F               	movlb	15	; () banked
 13218  0012E0  8705               	bsf	5,3,b	;volatile
 13219                           
 13220                           ; BSR set to: 15
 13221                           ;inc\CANlib.h: 877: tamp = filter & 0x000000FF;
 13222  0012E2  0100               	movlb	0	; () banked
 13223  0012E4  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13224  0012E6  0100               	movlb	0	; () banked
 13225  0012E8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13226  0012EA  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13227  0012EC  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13228  0012EE  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13229                           
 13230                           ; BSR set to: 0
 13231                           ;inc\CANlib.h: 878: RXF1EIDL = (unsigned char) tamp;
 13232  0012F0  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 13233                           
 13234                           ; BSR set to: 0
 13235                           ;inc\CANlib.h: 880: tamp = filter & 0x0000FF00;
 13236  0012F4  0E00               	movlw	0
 13237  0012F6  0100               	movlb	0	; () banked
 13238  0012F8  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13239  0012FA  0100               	movlb	0	; () banked
 13240  0012FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13241  0012FE  0EFF               	movlw	255
 13242  001300  0100               	movlb	0	; () banked
 13243  001302  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13244  001304  0100               	movlb	0	; () banked
 13245  001306  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13246  001308  0E00               	movlw	0
 13247  00130A  0100               	movlb	0	; () banked
 13248  00130C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13249  00130E  0100               	movlb	0	; () banked
 13250  001310  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13251  001312  0E00               	movlw	0
 13252  001314  0100               	movlb	0	; () banked
 13253  001316  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13254  001318  0100               	movlb	0	; () banked
 13255  00131A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13256                           
 13257                           ; BSR set to: 0
 13258                           ;inc\CANlib.h: 881: tamp = tamp >> 8;
 13259  00131C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13260  001320  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13261  001324  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13262  001328  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13263  00132C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13264  001330  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13265  001334  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13266  001338  0100               	movlb	0	; () banked
 13267  00133A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13268  00133C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13269  001340  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13270  001344  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13271  001348  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13272                           
 13273                           ; BSR set to: 0
 13274                           ;inc\CANlib.h: 882: RXF1EIDH = (unsigned char) tamp;
 13275  00134C  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 13276                           
 13277                           ; BSR set to: 0
 13278                           ;inc\CANlib.h: 884: if (filter & 0x00010000)
 13279  001350  0100               	movlb	0	; () banked
 13280  001352  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13281  001354  D003               	goto	l474
 13282                           
 13283                           ; BSR set to: 0
 13284                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x01;
 13285  001356  010F               	movlb	15	; () banked
 13286  001358  8105               	bsf	5,0,b	;volatile
 13287  00135A  D002               	goto	l475
 13288  00135C                     l474:
 13289                           
 13290                           ; BSR set to: 0
 13291                           ;inc\CANlib.h: 886: else
 13292                           ;inc\CANlib.h: 887: RXF1SIDLbits.EID16 = 0x00;
 13293  00135C  010F               	movlb	15	; () banked
 13294  00135E  9105               	bcf	5,0,b	;volatile
 13295  001360                     l475:
 13296                           
 13297                           ; BSR set to: 15
 13298                           ;inc\CANlib.h: 889: if (filter & 0x00020000)
 13299  001360  0100               	movlb	0	; () banked
 13300  001362  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13301  001364  D003               	goto	l476
 13302                           
 13303                           ; BSR set to: 0
 13304                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x01;
 13305  001366  010F               	movlb	15	; () banked
 13306  001368  8305               	bsf	5,1,b	;volatile
 13307  00136A  D002               	goto	l477
 13308  00136C                     l476:
 13309                           
 13310                           ; BSR set to: 0
 13311                           ;inc\CANlib.h: 891: else
 13312                           ;inc\CANlib.h: 892: RXF1SIDLbits.EID17 = 0x00;
 13313  00136C  010F               	movlb	15	; () banked
 13314  00136E  9305               	bcf	5,1,b	;volatile
 13315  001370                     l477:
 13316                           
 13317                           ; BSR set to: 15
 13318                           ;inc\CANlib.h: 894: if (filter & 0x00040000)
 13319  001370  0100               	movlb	0	; () banked
 13320  001372  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13321  001374  D003               	goto	l478
 13322                           
 13323                           ; BSR set to: 0
 13324                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x01;
 13325  001376  010F               	movlb	15	; () banked
 13326  001378  8B05               	bsf	5,5,b	;volatile
 13327  00137A  D002               	goto	l479
 13328  00137C                     l478:
 13329                           
 13330                           ; BSR set to: 0
 13331                           ;inc\CANlib.h: 896: else
 13332                           ;inc\CANlib.h: 897: RXF1SIDLbits.SID0 = 0x00;
 13333  00137C  010F               	movlb	15	; () banked
 13334  00137E  9B05               	bcf	5,5,b	;volatile
 13335  001380                     l479:
 13336                           
 13337                           ; BSR set to: 15
 13338                           ;inc\CANlib.h: 899: if (filter & 0x00080000)
 13339  001380  0100               	movlb	0	; () banked
 13340  001382  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13341  001384  D003               	goto	l480
 13342                           
 13343                           ; BSR set to: 0
 13344                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x01;
 13345  001386  010F               	movlb	15	; () banked
 13346  001388  8D05               	bsf	5,6,b	;volatile
 13347  00138A  D002               	goto	l481
 13348  00138C                     l480:
 13349                           
 13350                           ; BSR set to: 0
 13351                           ;inc\CANlib.h: 901: else
 13352                           ;inc\CANlib.h: 902: RXF1SIDLbits.SID1 = 0x00;
 13353  00138C  010F               	movlb	15	; () banked
 13354  00138E  9D05               	bcf	5,6,b	;volatile
 13355  001390                     l481:
 13356                           
 13357                           ; BSR set to: 15
 13358                           ;inc\CANlib.h: 904: if (filter & 0x00100000)
 13359  001390  0100               	movlb	0	; () banked
 13360  001392  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13361  001394  D003               	goto	l482
 13362                           
 13363                           ; BSR set to: 0
 13364                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x01 ;
 13365  001396  010F               	movlb	15	; () banked
 13366  001398  8F05               	bsf	5,7,b	;volatile
 13367  00139A  D002               	goto	l5207
 13368  00139C                     l482:
 13369                           
 13370                           ; BSR set to: 0
 13371                           ;inc\CANlib.h: 906: else
 13372                           ;inc\CANlib.h: 907: RXF1SIDLbits.SID2 = 0x00 ;
 13373  00139C  010F               	movlb	15	; () banked
 13374  00139E  9F05               	bcf	5,7,b	;volatile
 13375  0013A0                     l5207:
 13376                           
 13377                           ; BSR set to: 15
 13378                           ;inc\CANlib.h: 909: tamp = (filter >> 21);
 13379  0013A0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13380  0013A4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13381  0013A8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13382  0013AC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13383  0013B0  0E16               	movlw	22
 13384  0013B2  D006               	goto	u6190
 13385  0013B4                     u6195:
 13386  0013B4  0100               	movlb	0	; () banked
 13387  0013B6  90D8               	bcf	status,0,c
 13388  0013B8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13389  0013BA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13390  0013BC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13391  0013BE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13392  0013C0                     u6190:
 13393  0013C0  2EE8               	decfsz	wreg,f,c
 13394  0013C2  D7F8               	goto	u6195
 13395  0013C4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13396  0013C8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13397  0013CC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13398  0013D0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13399                           
 13400                           ; BSR set to: 0
 13401                           ;inc\CANlib.h: 910: tamp = tamp & 0x000000FF;
 13402  0013D4  0100               	movlb	0	; () banked
 13403  0013D6  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13404  0013D8  0100               	movlb	0	; () banked
 13405  0013DA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13406  0013DC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13407  0013DE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13408  0013E0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13409                           
 13410                           ; BSR set to: 0
 13411                           ;inc\CANlib.h: 911: RXF1SIDH = (unsigned char) tamp;
 13412  0013E2  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 13413  0013E6                     l5213:
 13414                           
 13415                           ; BSR set to: 0
 13416                           ;inc\CANlib.h: 912: }
 13417                           ;inc\CANlib.h: 915: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 13418  0013E6  0E02               	movlw	2
 13419  0013E8  0100               	movlb	0	; () banked
 13420  0013EA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13421  0013EC  A4D8               	btfss	status,2,c
 13422  0013EE  D089               	goto	l5247
 13423                           
 13424                           ; BSR set to: 0
 13425  0013F0  0EF7               	movlw	247
 13426  0013F2  0100               	movlb	0	; () banked
 13427  0013F4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13428  0013F6  A4D8               	btfss	status,2,c
 13429  0013F8  D084               	goto	l5247
 13430                           
 13431                           ; BSR set to: 0
 13432                           ;inc\CANlib.h: 916: {
 13433                           ;inc\CANlib.h: 917: RXF2SIDLbits.EXIDEN = 0x01;
 13434  0013FA  010F               	movlb	15	; () banked
 13435  0013FC  8709               	bsf	9,3,b	;volatile
 13436                           
 13437                           ; BSR set to: 15
 13438                           ;inc\CANlib.h: 919: tamp = filter & 0x000000FF;
 13439  0013FE  0100               	movlb	0	; () banked
 13440  001400  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13441  001402  0100               	movlb	0	; () banked
 13442  001404  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13443  001406  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13444  001408  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13445  00140A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13446                           
 13447                           ; BSR set to: 0
 13448                           ;inc\CANlib.h: 920: RXF2EIDL = (unsigned char) tamp;
 13449  00140C  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 13450                           
 13451                           ; BSR set to: 0
 13452                           ;inc\CANlib.h: 922: tamp = filter & 0x0000FF00;
 13453  001410  0E00               	movlw	0
 13454  001412  0100               	movlb	0	; () banked
 13455  001414  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13456  001416  0100               	movlb	0	; () banked
 13457  001418  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13458  00141A  0EFF               	movlw	255
 13459  00141C  0100               	movlb	0	; () banked
 13460  00141E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13461  001420  0100               	movlb	0	; () banked
 13462  001422  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13463  001424  0E00               	movlw	0
 13464  001426  0100               	movlb	0	; () banked
 13465  001428  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13466  00142A  0100               	movlb	0	; () banked
 13467  00142C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13468  00142E  0E00               	movlw	0
 13469  001430  0100               	movlb	0	; () banked
 13470  001432  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13471  001434  0100               	movlb	0	; () banked
 13472  001436  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13473                           
 13474                           ; BSR set to: 0
 13475                           ;inc\CANlib.h: 923: tamp = tamp >> 8;
 13476  001438  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13477  00143C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13478  001440  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13479  001444  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13480  001448  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13481  00144C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13482  001450  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13483  001454  0100               	movlb	0	; () banked
 13484  001456  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13485  001458  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13486  00145C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13487  001460  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13488  001464  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13489                           
 13490                           ; BSR set to: 0
 13491                           ;inc\CANlib.h: 924: RXF2EIDH = (unsigned char) tamp;
 13492  001468  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 13493                           
 13494                           ; BSR set to: 0
 13495                           ;inc\CANlib.h: 926: if (filter & 0x00010000)
 13496  00146C  0100               	movlb	0	; () banked
 13497  00146E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13498  001470  D003               	goto	l485
 13499                           
 13500                           ; BSR set to: 0
 13501                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x01;
 13502  001472  010F               	movlb	15	; () banked
 13503  001474  8109               	bsf	9,0,b	;volatile
 13504  001476  D002               	goto	l486
 13505  001478                     l485:
 13506                           
 13507                           ; BSR set to: 0
 13508                           ;inc\CANlib.h: 928: else
 13509                           ;inc\CANlib.h: 929: RXF2SIDLbits.EID16 = 0x00;
 13510  001478  010F               	movlb	15	; () banked
 13511  00147A  9109               	bcf	9,0,b	;volatile
 13512  00147C                     l486:
 13513                           
 13514                           ; BSR set to: 15
 13515                           ;inc\CANlib.h: 931: if (filter & 0x00020000)
 13516  00147C  0100               	movlb	0	; () banked
 13517  00147E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13518  001480  D003               	goto	l487
 13519                           
 13520                           ; BSR set to: 0
 13521                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x01;
 13522  001482  010F               	movlb	15	; () banked
 13523  001484  8309               	bsf	9,1,b	;volatile
 13524  001486  D002               	goto	l488
 13525  001488                     l487:
 13526                           
 13527                           ; BSR set to: 0
 13528                           ;inc\CANlib.h: 933: else
 13529                           ;inc\CANlib.h: 934: RXF2SIDLbits.EID17 = 0x00;
 13530  001488  010F               	movlb	15	; () banked
 13531  00148A  9309               	bcf	9,1,b	;volatile
 13532  00148C                     l488:
 13533                           
 13534                           ; BSR set to: 15
 13535                           ;inc\CANlib.h: 936: if (filter & 0x00040000)
 13536  00148C  0100               	movlb	0	; () banked
 13537  00148E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13538  001490  D003               	goto	l489
 13539                           
 13540                           ; BSR set to: 0
 13541                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x01;
 13542  001492  010F               	movlb	15	; () banked
 13543  001494  8B09               	bsf	9,5,b	;volatile
 13544  001496  D002               	goto	l490
 13545  001498                     l489:
 13546                           
 13547                           ; BSR set to: 0
 13548                           ;inc\CANlib.h: 938: else
 13549                           ;inc\CANlib.h: 939: RXF2SIDLbits.SID0 = 0x00;
 13550  001498  010F               	movlb	15	; () banked
 13551  00149A  9B09               	bcf	9,5,b	;volatile
 13552  00149C                     l490:
 13553                           
 13554                           ; BSR set to: 15
 13555                           ;inc\CANlib.h: 941: if (filter & 0x00080000)
 13556  00149C  0100               	movlb	0	; () banked
 13557  00149E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13558  0014A0  D003               	goto	l491
 13559                           
 13560                           ; BSR set to: 0
 13561                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x01;
 13562  0014A2  010F               	movlb	15	; () banked
 13563  0014A4  8D09               	bsf	9,6,b	;volatile
 13564  0014A6  D002               	goto	l492
 13565  0014A8                     l491:
 13566                           
 13567                           ; BSR set to: 0
 13568                           ;inc\CANlib.h: 943: else
 13569                           ;inc\CANlib.h: 944: RXF2SIDLbits.SID1 = 0x00;
 13570  0014A8  010F               	movlb	15	; () banked
 13571  0014AA  9D09               	bcf	9,6,b	;volatile
 13572  0014AC                     l492:
 13573                           
 13574                           ; BSR set to: 15
 13575                           ;inc\CANlib.h: 946: if (filter & 0x00100000)
 13576  0014AC  0100               	movlb	0	; () banked
 13577  0014AE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13578  0014B0  D003               	goto	l493
 13579                           
 13580                           ; BSR set to: 0
 13581                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x01 ;
 13582  0014B2  010F               	movlb	15	; () banked
 13583  0014B4  8F09               	bsf	9,7,b	;volatile
 13584  0014B6  D002               	goto	l5241
 13585  0014B8                     l493:
 13586                           
 13587                           ; BSR set to: 0
 13588                           ;inc\CANlib.h: 948: else
 13589                           ;inc\CANlib.h: 949: RXF2SIDLbits.SID2 = 0x00 ;
 13590  0014B8  010F               	movlb	15	; () banked
 13591  0014BA  9F09               	bcf	9,7,b	;volatile
 13592  0014BC                     l5241:
 13593                           
 13594                           ; BSR set to: 15
 13595                           ;inc\CANlib.h: 951: tamp = (filter >> 21);
 13596  0014BC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13597  0014C0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13598  0014C4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13599  0014C8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13600  0014CC  0E16               	movlw	22
 13601  0014CE  D006               	goto	u6270
 13602  0014D0                     u6275:
 13603  0014D0  0100               	movlb	0	; () banked
 13604  0014D2  90D8               	bcf	status,0,c
 13605  0014D4  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13606  0014D6  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13607  0014D8  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13608  0014DA  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13609  0014DC                     u6270:
 13610  0014DC  2EE8               	decfsz	wreg,f,c
 13611  0014DE  D7F8               	goto	u6275
 13612  0014E0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13613  0014E4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13614  0014E8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13615  0014EC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13616                           
 13617                           ; BSR set to: 0
 13618                           ;inc\CANlib.h: 952: tamp = tamp & 0x000000FF;
 13619  0014F0  0100               	movlb	0	; () banked
 13620  0014F2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13621  0014F4  0100               	movlb	0	; () banked
 13622  0014F6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13623  0014F8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13624  0014FA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13625  0014FC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13626                           
 13627                           ; BSR set to: 0
 13628                           ;inc\CANlib.h: 953: RXF2SIDH = (unsigned char) tamp;
 13629  0014FE  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 13630  001502                     l5247:
 13631                           
 13632                           ; BSR set to: 0
 13633                           ;inc\CANlib.h: 954: }
 13634                           ;inc\CANlib.h: 956: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 13635  001502  0E03               	movlw	3
 13636  001504  0100               	movlb	0	; () banked
 13637  001506  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13638  001508  A4D8               	btfss	status,2,c
 13639  00150A  D089               	goto	l5281
 13640                           
 13641                           ; BSR set to: 0
 13642  00150C  0EF7               	movlw	247
 13643  00150E  0100               	movlb	0	; () banked
 13644  001510  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13645  001512  A4D8               	btfss	status,2,c
 13646  001514  D084               	goto	l5281
 13647                           
 13648                           ; BSR set to: 0
 13649                           ;inc\CANlib.h: 957: {
 13650                           ;inc\CANlib.h: 958: RXF3SIDLbits.EXIDEN = 0x01;
 13651  001516  010F               	movlb	15	; () banked
 13652  001518  870D               	bsf	13,3,b	;volatile
 13653                           
 13654                           ; BSR set to: 15
 13655                           ;inc\CANlib.h: 960: tamp = filter & 0x000000FF;
 13656  00151A  0100               	movlb	0	; () banked
 13657  00151C  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13658  00151E  0100               	movlb	0	; () banked
 13659  001520  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13660  001522  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13661  001524  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13662  001526  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13663                           
 13664                           ; BSR set to: 0
 13665                           ;inc\CANlib.h: 961: RXF3EIDL = (unsigned char) tamp;
 13666  001528  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 13667                           
 13668                           ; BSR set to: 0
 13669                           ;inc\CANlib.h: 963: tamp = filter & 0x0000FF00;
 13670  00152C  0E00               	movlw	0
 13671  00152E  0100               	movlb	0	; () banked
 13672  001530  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13673  001532  0100               	movlb	0	; () banked
 13674  001534  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13675  001536  0EFF               	movlw	255
 13676  001538  0100               	movlb	0	; () banked
 13677  00153A  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13678  00153C  0100               	movlb	0	; () banked
 13679  00153E  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13680  001540  0E00               	movlw	0
 13681  001542  0100               	movlb	0	; () banked
 13682  001544  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13683  001546  0100               	movlb	0	; () banked
 13684  001548  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13685  00154A  0E00               	movlw	0
 13686  00154C  0100               	movlb	0	; () banked
 13687  00154E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13688  001550  0100               	movlb	0	; () banked
 13689  001552  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13690                           
 13691                           ; BSR set to: 0
 13692                           ;inc\CANlib.h: 964: tamp = tamp >> 8;
 13693  001554  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13694  001558  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13695  00155C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13696  001560  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13697  001564  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13698  001568  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13699  00156C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13700  001570  0100               	movlb	0	; () banked
 13701  001572  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13702  001574  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13703  001578  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13704  00157C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13705  001580  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13706                           
 13707                           ; BSR set to: 0
 13708                           ;inc\CANlib.h: 965: RXF3EIDH = (unsigned char) tamp;
 13709  001584  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 13710                           
 13711                           ; BSR set to: 0
 13712                           ;inc\CANlib.h: 967: if (filter & 0x00010000)
 13713  001588  0100               	movlb	0	; () banked
 13714  00158A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13715  00158C  D003               	goto	l496
 13716                           
 13717                           ; BSR set to: 0
 13718                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x01;
 13719  00158E  010F               	movlb	15	; () banked
 13720  001590  810D               	bsf	13,0,b	;volatile
 13721  001592  D002               	goto	l497
 13722  001594                     l496:
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;inc\CANlib.h: 969: else
 13726                           ;inc\CANlib.h: 970: RXF3SIDLbits.EID16 = 0x00;
 13727  001594  010F               	movlb	15	; () banked
 13728  001596  910D               	bcf	13,0,b	;volatile
 13729  001598                     l497:
 13730                           
 13731                           ; BSR set to: 15
 13732                           ;inc\CANlib.h: 972: if (filter & 0x00020000)
 13733  001598  0100               	movlb	0	; () banked
 13734  00159A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13735  00159C  D003               	goto	l498
 13736                           
 13737                           ; BSR set to: 0
 13738                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x01;
 13739  00159E  010F               	movlb	15	; () banked
 13740  0015A0  830D               	bsf	13,1,b	;volatile
 13741  0015A2  D002               	goto	l499
 13742  0015A4                     l498:
 13743                           
 13744                           ; BSR set to: 0
 13745                           ;inc\CANlib.h: 974: else
 13746                           ;inc\CANlib.h: 975: RXF3SIDLbits.EID17 = 0x00;
 13747  0015A4  010F               	movlb	15	; () banked
 13748  0015A6  930D               	bcf	13,1,b	;volatile
 13749  0015A8                     l499:
 13750                           
 13751                           ; BSR set to: 15
 13752                           ;inc\CANlib.h: 977: if (filter & 0x00040000)
 13753  0015A8  0100               	movlb	0	; () banked
 13754  0015AA  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13755  0015AC  D003               	goto	l500
 13756                           
 13757                           ; BSR set to: 0
 13758                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x01;
 13759  0015AE  010F               	movlb	15	; () banked
 13760  0015B0  8B0D               	bsf	13,5,b	;volatile
 13761  0015B2  D002               	goto	l501
 13762  0015B4                     l500:
 13763                           
 13764                           ; BSR set to: 0
 13765                           ;inc\CANlib.h: 979: else
 13766                           ;inc\CANlib.h: 980: RXF3SIDLbits.SID0 = 0x00;
 13767  0015B4  010F               	movlb	15	; () banked
 13768  0015B6  9B0D               	bcf	13,5,b	;volatile
 13769  0015B8                     l501:
 13770                           
 13771                           ; BSR set to: 15
 13772                           ;inc\CANlib.h: 982: if (filter & 0x00080000)
 13773  0015B8  0100               	movlb	0	; () banked
 13774  0015BA  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13775  0015BC  D003               	goto	l502
 13776                           
 13777                           ; BSR set to: 0
 13778                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x01;
 13779  0015BE  010F               	movlb	15	; () banked
 13780  0015C0  8D0D               	bsf	13,6,b	;volatile
 13781  0015C2  D002               	goto	l503
 13782  0015C4                     l502:
 13783                           
 13784                           ; BSR set to: 0
 13785                           ;inc\CANlib.h: 984: else
 13786                           ;inc\CANlib.h: 985: RXF3SIDLbits.SID1 = 0x00;
 13787  0015C4  010F               	movlb	15	; () banked
 13788  0015C6  9D0D               	bcf	13,6,b	;volatile
 13789  0015C8                     l503:
 13790                           
 13791                           ; BSR set to: 15
 13792                           ;inc\CANlib.h: 987: if (filter & 0x00100000)
 13793  0015C8  0100               	movlb	0	; () banked
 13794  0015CA  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13795  0015CC  D003               	goto	l504
 13796                           
 13797                           ; BSR set to: 0
 13798                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x01 ;
 13799  0015CE  010F               	movlb	15	; () banked
 13800  0015D0  8F0D               	bsf	13,7,b	;volatile
 13801  0015D2  D002               	goto	l5275
 13802  0015D4                     l504:
 13803                           
 13804                           ; BSR set to: 0
 13805                           ;inc\CANlib.h: 989: else
 13806                           ;inc\CANlib.h: 990: RXF3SIDLbits.SID2 = 0x00 ;
 13807  0015D4  010F               	movlb	15	; () banked
 13808  0015D6  9F0D               	bcf	13,7,b	;volatile
 13809  0015D8                     l5275:
 13810                           
 13811                           ; BSR set to: 15
 13812                           ;inc\CANlib.h: 992: tamp = (filter >> 21);
 13813  0015D8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13814  0015DC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13815  0015E0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13816  0015E4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13817  0015E8  0E16               	movlw	22
 13818  0015EA  D006               	goto	u6350
 13819  0015EC                     u6355:
 13820  0015EC  0100               	movlb	0	; () banked
 13821  0015EE  90D8               	bcf	status,0,c
 13822  0015F0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13823  0015F2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13824  0015F4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13825  0015F6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13826  0015F8                     u6350:
 13827  0015F8  2EE8               	decfsz	wreg,f,c
 13828  0015FA  D7F8               	goto	u6355
 13829  0015FC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13830  001600  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13831  001604  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13832  001608  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13833                           
 13834                           ; BSR set to: 0
 13835                           ;inc\CANlib.h: 993: tamp = tamp & 0x000000FF;
 13836  00160C  0100               	movlb	0	; () banked
 13837  00160E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13838  001610  0100               	movlb	0	; () banked
 13839  001612  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13840  001614  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13841  001616  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13842  001618  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13843                           
 13844                           ; BSR set to: 0
 13845                           ;inc\CANlib.h: 994: RXF3SIDH = (unsigned char) tamp;
 13846  00161A  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 13847  00161E                     l5281:
 13848                           
 13849                           ; BSR set to: 0
 13850                           ;inc\CANlib.h: 995: }
 13851                           ;inc\CANlib.h: 997: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 13852  00161E  0E04               	movlw	4
 13853  001620  0100               	movlb	0	; () banked
 13854  001622  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13855  001624  A4D8               	btfss	status,2,c
 13856  001626  D089               	goto	l5315
 13857                           
 13858                           ; BSR set to: 0
 13859  001628  0EF7               	movlw	247
 13860  00162A  0100               	movlb	0	; () banked
 13861  00162C  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13862  00162E  A4D8               	btfss	status,2,c
 13863  001630  D084               	goto	l5315
 13864                           
 13865                           ; BSR set to: 0
 13866                           ;inc\CANlib.h: 998: {
 13867                           ;inc\CANlib.h: 999: RXF4SIDLbits.EXIDEN = 0x01;
 13868  001632  010F               	movlb	15	; () banked
 13869  001634  8711               	bsf	17,3,b	;volatile
 13870                           
 13871                           ; BSR set to: 15
 13872                           ;inc\CANlib.h: 1001: tamp = filter & 0x000000FF;
 13873  001636  0100               	movlb	0	; () banked
 13874  001638  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13875  00163A  0100               	movlb	0	; () banked
 13876  00163C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13877  00163E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13878  001640  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13879  001642  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13880                           
 13881                           ; BSR set to: 0
 13882                           ;inc\CANlib.h: 1002: RXF4EIDL = (unsigned char) tamp;
 13883  001644  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 13884                           
 13885                           ; BSR set to: 0
 13886                           ;inc\CANlib.h: 1004: tamp = filter & 0x0000FF00;
 13887  001648  0E00               	movlw	0
 13888  00164A  0100               	movlb	0	; () banked
 13889  00164C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13890  00164E  0100               	movlb	0	; () banked
 13891  001650  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13892  001652  0EFF               	movlw	255
 13893  001654  0100               	movlb	0	; () banked
 13894  001656  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13895  001658  0100               	movlb	0	; () banked
 13896  00165A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13897  00165C  0E00               	movlw	0
 13898  00165E  0100               	movlb	0	; () banked
 13899  001660  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13900  001662  0100               	movlb	0	; () banked
 13901  001664  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13902  001666  0E00               	movlw	0
 13903  001668  0100               	movlb	0	; () banked
 13904  00166A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13905  00166C  0100               	movlb	0	; () banked
 13906  00166E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13907                           
 13908                           ; BSR set to: 0
 13909                           ;inc\CANlib.h: 1005: tamp = tamp >> 8;
 13910  001670  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13911  001674  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13912  001678  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13913  00167C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13914  001680  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13915  001684  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13916  001688  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13917  00168C  0100               	movlb	0	; () banked
 13918  00168E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13919  001690  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13920  001694  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13921  001698  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13922  00169C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13923                           
 13924                           ; BSR set to: 0
 13925                           ;inc\CANlib.h: 1006: RXF4EIDH = (unsigned char) tamp;
 13926  0016A0  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 13927                           
 13928                           ; BSR set to: 0
 13929                           ;inc\CANlib.h: 1008: if (filter & 0x00010000)
 13930  0016A4  0100               	movlb	0	; () banked
 13931  0016A6  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13932  0016A8  D003               	goto	l507
 13933                           
 13934                           ; BSR set to: 0
 13935                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x01;
 13936  0016AA  010F               	movlb	15	; () banked
 13937  0016AC  8111               	bsf	17,0,b	;volatile
 13938  0016AE  D002               	goto	l508
 13939  0016B0                     l507:
 13940                           
 13941                           ; BSR set to: 0
 13942                           ;inc\CANlib.h: 1010: else
 13943                           ;inc\CANlib.h: 1011: RXF4SIDLbits.EID16 = 0x00;
 13944  0016B0  010F               	movlb	15	; () banked
 13945  0016B2  9111               	bcf	17,0,b	;volatile
 13946  0016B4                     l508:
 13947                           
 13948                           ; BSR set to: 15
 13949                           ;inc\CANlib.h: 1013: if (filter & 0x00020000)
 13950  0016B4  0100               	movlb	0	; () banked
 13951  0016B6  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13952  0016B8  D003               	goto	l509
 13953                           
 13954                           ; BSR set to: 0
 13955                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x01;
 13956  0016BA  010F               	movlb	15	; () banked
 13957  0016BC  8311               	bsf	17,1,b	;volatile
 13958  0016BE  D002               	goto	l510
 13959  0016C0                     l509:
 13960                           
 13961                           ; BSR set to: 0
 13962                           ;inc\CANlib.h: 1015: else
 13963                           ;inc\CANlib.h: 1016: RXF4SIDLbits.EID17 = 0x00;
 13964  0016C0  010F               	movlb	15	; () banked
 13965  0016C2  9311               	bcf	17,1,b	;volatile
 13966  0016C4                     l510:
 13967                           
 13968                           ; BSR set to: 15
 13969                           ;inc\CANlib.h: 1018: if (filter & 0x00040000)
 13970  0016C4  0100               	movlb	0	; () banked
 13971  0016C6  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13972  0016C8  D003               	goto	l511
 13973                           
 13974                           ; BSR set to: 0
 13975                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x01;
 13976  0016CA  010F               	movlb	15	; () banked
 13977  0016CC  8B11               	bsf	17,5,b	;volatile
 13978  0016CE  D002               	goto	l512
 13979  0016D0                     l511:
 13980                           
 13981                           ; BSR set to: 0
 13982                           ;inc\CANlib.h: 1020: else
 13983                           ;inc\CANlib.h: 1021: RXF4SIDLbits.SID0 = 0x00;
 13984  0016D0  010F               	movlb	15	; () banked
 13985  0016D2  9B11               	bcf	17,5,b	;volatile
 13986  0016D4                     l512:
 13987                           
 13988                           ; BSR set to: 15
 13989                           ;inc\CANlib.h: 1023: if (filter & 0x00080000)
 13990  0016D4  0100               	movlb	0	; () banked
 13991  0016D6  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13992  0016D8  D003               	goto	l513
 13993                           
 13994                           ; BSR set to: 0
 13995                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x01;
 13996  0016DA  010F               	movlb	15	; () banked
 13997  0016DC  8D11               	bsf	17,6,b	;volatile
 13998  0016DE  D002               	goto	l514
 13999  0016E0                     l513:
 14000                           
 14001                           ; BSR set to: 0
 14002                           ;inc\CANlib.h: 1025: else
 14003                           ;inc\CANlib.h: 1026: RXF4SIDLbits.SID1 = 0x00;
 14004  0016E0  010F               	movlb	15	; () banked
 14005  0016E2  9D11               	bcf	17,6,b	;volatile
 14006  0016E4                     l514:
 14007                           
 14008                           ; BSR set to: 15
 14009                           ;inc\CANlib.h: 1028: if (filter & 0x00100000)
 14010  0016E4  0100               	movlb	0	; () banked
 14011  0016E6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14012  0016E8  D003               	goto	l515
 14013                           
 14014                           ; BSR set to: 0
 14015                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x01 ;
 14016  0016EA  010F               	movlb	15	; () banked
 14017  0016EC  8F11               	bsf	17,7,b	;volatile
 14018  0016EE  D002               	goto	l5309
 14019  0016F0                     l515:
 14020                           
 14021                           ; BSR set to: 0
 14022                           ;inc\CANlib.h: 1030: else
 14023                           ;inc\CANlib.h: 1031: RXF4SIDLbits.SID2 = 0x00 ;
 14024  0016F0  010F               	movlb	15	; () banked
 14025  0016F2  9F11               	bcf	17,7,b	;volatile
 14026  0016F4                     l5309:
 14027                           
 14028                           ; BSR set to: 15
 14029                           ;inc\CANlib.h: 1033: tamp = (filter >> 21);
 14030  0016F4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14031  0016F8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14032  0016FC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14033  001700  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14034  001704  0E16               	movlw	22
 14035  001706  D006               	goto	u6430
 14036  001708                     u6435:
 14037  001708  0100               	movlb	0	; () banked
 14038  00170A  90D8               	bcf	status,0,c
 14039  00170C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14040  00170E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14041  001710  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14042  001712  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14043  001714                     u6430:
 14044  001714  2EE8               	decfsz	wreg,f,c
 14045  001716  D7F8               	goto	u6435
 14046  001718  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14047  00171C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14048  001720  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14049  001724  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14050                           
 14051                           ; BSR set to: 0
 14052                           ;inc\CANlib.h: 1034: tamp = tamp & 0x000000FF;
 14053  001728  0100               	movlb	0	; () banked
 14054  00172A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14055  00172C  0100               	movlb	0	; () banked
 14056  00172E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14057  001730  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14058  001732  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14059  001734  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14060                           
 14061                           ; BSR set to: 0
 14062                           ;inc\CANlib.h: 1035: RXF4SIDH = (unsigned char) tamp;
 14063  001736  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 14064  00173A                     l5315:
 14065                           
 14066                           ; BSR set to: 0
 14067                           ;inc\CANlib.h: 1036: }
 14068                           ;inc\CANlib.h: 1038: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 14069  00173A  0E05               	movlw	5
 14070  00173C  0100               	movlb	0	; () banked
 14071  00173E  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 14072  001740  A4D8               	btfss	status,2,c
 14073  001742  0012               	return	
 14074                           
 14075                           ; BSR set to: 0
 14076  001744  0EF7               	movlw	247
 14077  001746  0100               	movlb	0	; () banked
 14078  001748  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 14079  00174A  A4D8               	btfss	status,2,c
 14080  00174C  0012               	return	
 14081                           
 14082                           ; BSR set to: 0
 14083                           ;inc\CANlib.h: 1039: {
 14084                           ;inc\CANlib.h: 1040: RXF5SIDLbits.EXIDEN = 0x01;
 14085  00174E  010F               	movlb	15	; () banked
 14086  001750  8715               	bsf	21,3,b	;volatile
 14087                           
 14088                           ; BSR set to: 15
 14089                           ;inc\CANlib.h: 1042: tamp = filter & 0x000000FF;
 14090  001752  0100               	movlb	0	; () banked
 14091  001754  5177               	movf	CANSetFilter@filter& (0+255),w,b
 14092  001756  0100               	movlb	0	; () banked
 14093  001758  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14094  00175A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14095  00175C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14096  00175E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14097                           
 14098                           ; BSR set to: 0
 14099                           ;inc\CANlib.h: 1043: RXF5EIDL = (unsigned char) tamp;
 14100  001760  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 14101                           
 14102                           ; BSR set to: 0
 14103                           ;inc\CANlib.h: 1045: tamp = filter & 0x0000FF00;
 14104  001764  0E00               	movlw	0
 14105  001766  0100               	movlb	0	; () banked
 14106  001768  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 14107  00176A  0100               	movlb	0	; () banked
 14108  00176C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14109  00176E  0EFF               	movlw	255
 14110  001770  0100               	movlb	0	; () banked
 14111  001772  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14112  001774  0100               	movlb	0	; () banked
 14113  001776  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14114  001778  0E00               	movlw	0
 14115  00177A  0100               	movlb	0	; () banked
 14116  00177C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14117  00177E  0100               	movlb	0	; () banked
 14118  001780  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14119  001782  0E00               	movlw	0
 14120  001784  0100               	movlb	0	; () banked
 14121  001786  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14122  001788  0100               	movlb	0	; () banked
 14123  00178A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14124                           
 14125                           ; BSR set to: 0
 14126                           ;inc\CANlib.h: 1046: tamp = tamp >> 8;
 14127  00178C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 14128  001790  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14129  001794  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14130  001798  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14131  00179C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 14132  0017A0  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14133  0017A4  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14134  0017A8  0100               	movlb	0	; () banked
 14135  0017AA  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 14136  0017AC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14137  0017B0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14138  0017B4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14139  0017B8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14140                           
 14141                           ; BSR set to: 0
 14142                           ;inc\CANlib.h: 1047: RXF5EIDH = (unsigned char) tamp;
 14143  0017BC  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 14144                           
 14145                           ; BSR set to: 0
 14146                           ;inc\CANlib.h: 1049: if (filter & 0x00010000)
 14147  0017C0  0100               	movlb	0	; () banked
 14148  0017C2  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14149  0017C4  D003               	goto	l518
 14150                           
 14151                           ; BSR set to: 0
 14152                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x01;
 14153  0017C6  010F               	movlb	15	; () banked
 14154  0017C8  8115               	bsf	21,0,b	;volatile
 14155  0017CA  D002               	goto	l519
 14156  0017CC                     l518:
 14157                           
 14158                           ; BSR set to: 0
 14159                           ;inc\CANlib.h: 1051: else
 14160                           ;inc\CANlib.h: 1052: RXF5SIDLbits.EID16 = 0x00;
 14161  0017CC  010F               	movlb	15	; () banked
 14162  0017CE  9115               	bcf	21,0,b	;volatile
 14163  0017D0                     l519:
 14164                           
 14165                           ; BSR set to: 15
 14166                           ;inc\CANlib.h: 1054: if (filter & 0x00020000)
 14167  0017D0  0100               	movlb	0	; () banked
 14168  0017D2  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14169  0017D4  D003               	goto	l520
 14170                           
 14171                           ; BSR set to: 0
 14172                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x01;
 14173  0017D6  010F               	movlb	15	; () banked
 14174  0017D8  8315               	bsf	21,1,b	;volatile
 14175  0017DA  D002               	goto	l521
 14176  0017DC                     l520:
 14177                           
 14178                           ; BSR set to: 0
 14179                           ;inc\CANlib.h: 1056: else
 14180                           ;inc\CANlib.h: 1057: RXF5SIDLbits.EID17 = 0x00;
 14181  0017DC  010F               	movlb	15	; () banked
 14182  0017DE  9315               	bcf	21,1,b	;volatile
 14183  0017E0                     l521:
 14184                           
 14185                           ; BSR set to: 15
 14186                           ;inc\CANlib.h: 1059: if (filter & 0x00040000)
 14187  0017E0  0100               	movlb	0	; () banked
 14188  0017E2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14189  0017E4  D003               	goto	l522
 14190                           
 14191                           ; BSR set to: 0
 14192                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x01;
 14193  0017E6  010F               	movlb	15	; () banked
 14194  0017E8  8B15               	bsf	21,5,b	;volatile
 14195  0017EA  D002               	goto	l523
 14196  0017EC                     l522:
 14197                           
 14198                           ; BSR set to: 0
 14199                           ;inc\CANlib.h: 1061: else
 14200                           ;inc\CANlib.h: 1062: RXF5SIDLbits.SID0 = 0x00;
 14201  0017EC  010F               	movlb	15	; () banked
 14202  0017EE  9B15               	bcf	21,5,b	;volatile
 14203  0017F0                     l523:
 14204                           
 14205                           ; BSR set to: 15
 14206                           ;inc\CANlib.h: 1064: if (filter & 0x00080000)
 14207  0017F0  0100               	movlb	0	; () banked
 14208  0017F2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14209  0017F4  D003               	goto	l524
 14210                           
 14211                           ; BSR set to: 0
 14212                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x01;
 14213  0017F6  010F               	movlb	15	; () banked
 14214  0017F8  8D15               	bsf	21,6,b	;volatile
 14215  0017FA  D002               	goto	l525
 14216  0017FC                     l524:
 14217                           
 14218                           ; BSR set to: 0
 14219                           ;inc\CANlib.h: 1066: else
 14220                           ;inc\CANlib.h: 1067: RXF5SIDLbits.SID1 = 0x00;
 14221  0017FC  010F               	movlb	15	; () banked
 14222  0017FE  9D15               	bcf	21,6,b	;volatile
 14223  001800                     l525:
 14224                           
 14225                           ; BSR set to: 15
 14226                           ;inc\CANlib.h: 1069: if (filter & 0x00100000)
 14227  001800  0100               	movlb	0	; () banked
 14228  001802  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14229  001804  D003               	goto	l526
 14230                           
 14231                           ; BSR set to: 0
 14232                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x01 ;
 14233  001806  010F               	movlb	15	; () banked
 14234  001808  8F15               	bsf	21,7,b	;volatile
 14235  00180A  D002               	goto	l5343
 14236  00180C                     l526:
 14237                           
 14238                           ; BSR set to: 0
 14239                           ;inc\CANlib.h: 1071: else
 14240                           ;inc\CANlib.h: 1072: RXF5SIDLbits.SID2 = 0x00 ;
 14241  00180C  010F               	movlb	15	; () banked
 14242  00180E  9F15               	bcf	21,7,b	;volatile
 14243  001810                     l5343:
 14244                           
 14245                           ; BSR set to: 15
 14246                           ;inc\CANlib.h: 1074: tamp = (filter >> 21);
 14247  001810  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14248  001814  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14249  001818  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14250  00181C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14251  001820  0E16               	movlw	22
 14252  001822  D006               	goto	u6510
 14253  001824                     u6515:
 14254  001824  0100               	movlb	0	; () banked
 14255  001826  90D8               	bcf	status,0,c
 14256  001828  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14257  00182A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14258  00182C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14259  00182E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14260  001830                     u6510:
 14261  001830  2EE8               	decfsz	wreg,f,c
 14262  001832  D7F8               	goto	u6515
 14263  001834  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14264  001838  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14265  00183C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14266  001840  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14267                           
 14268                           ; BSR set to: 0
 14269                           ;inc\CANlib.h: 1075: tamp = tamp & 0x000000FF;
 14270  001844  0100               	movlb	0	; () banked
 14271  001846  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14272  001848  0100               	movlb	0	; () banked
 14273  00184A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14274  00184C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14275  00184E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14276  001850  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14277                           
 14278                           ; BSR set to: 0
 14279                           ;inc\CANlib.h: 1076: RXF5SIDH = (unsigned char) tamp;
 14280  001852  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 14281  001856  0012               	return	
 14282  001858                     __end_of_CANSetFilter:
 14283                           	opt stack 0
 14284                           tblptru	equ	0xFF8
 14285                           tblptrh	equ	0xFF7
 14286                           tblptrl	equ	0xFF6
 14287                           tablat	equ	0xFF5
 14288                           prodh	equ	0xFF4
 14289                           prodl	equ	0xFF3
 14290                           intcon	equ	0xFF2
 14291                           intcon2	equ	0xFF1
 14292                           postinc0	equ	0xFEE
 14293                           wreg	equ	0xFE8
 14294                           postdec1	equ	0xFE5
 14295                           fsr1l	equ	0xFE1
 14296                           indf2	equ	0xFDF
 14297                           postinc2	equ	0xFDE
 14298                           postdec2	equ	0xFDD
 14299                           fsr2h	equ	0xFDA
 14300                           fsr2l	equ	0xFD9
 14301                           status	equ	0xFD8
 14302                           
 14303 ;; *************** function _CANOperationMode *****************
 14304 ;; Defined at:
 14305 ;;		line 207 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 14306 ;; Parameters:    Size  Location     Type
 14307 ;;  mode            1    wreg     enum E16307
 14308 ;; Auto vars:     Size  Location     Type
 14309 ;;  mode            1   23[BANK0 ] enum E16307
 14310 ;; Return value:  Size  Location     Type
 14311 ;;		None               void
 14312 ;; Registers used:
 14313 ;;		wreg, status,2, status,0
 14314 ;; Tracked objects:
 14315 ;;		On entry : 0/0
 14316 ;;		On exit  : 0/0
 14317 ;;		Unchanged: 0/0
 14318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14320 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14322 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14323 ;;Total ram usage:        1 bytes
 14324 ;; Hardware stack levels used:    1
 14325 ;; Hardware stack levels required when called:    4
 14326 ;; This function calls:
 14327 ;;		Nothing
 14328 ;; This function is called by:
 14329 ;;		_CANInitialize
 14330 ;; This function uses a non-reentrant model
 14331 ;;
 14332                           
 14333                           	psect	text33
 14334  005FA4                     __ptext33:
 14335                           	opt stack 0
 14336  005FA4                     _CANOperationMode:
 14337                           	opt stack 24
 14338                           
 14339                           ; BSR set to: 0
 14340                           ;incstack = 0
 14341                           ;CANOperationMode@mode stored from wreg
 14342  005FA4  0100               	movlb	0	; () banked
 14343  005FA6  6F77               	movwf	CANOperationMode@mode& (0+255),b
 14344                           
 14345                           ;inc\CANlib.h: 209: CANCON = mode;
 14346  005FA8  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 14347  005FAC                     l4939:
 14348  005FAC  506E               	movf	3950,w,c	;volatile
 14349  005FAE  0BE0               	andlw	224
 14350  005FB0  0100               	movlb	0	; () banked
 14351  005FB2  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 14352  005FB4  B4D8               	btfsc	status,2,c
 14353  005FB6  0012               	return	
 14354  005FB8  D7F9               	goto	l4939
 14355  005FBA                     __end_of_CANOperationMode:
 14356                           	opt stack 0
 14357                           tblptru	equ	0xFF8
 14358                           tblptrh	equ	0xFF7
 14359                           tblptrl	equ	0xFF6
 14360                           tablat	equ	0xFF5
 14361                           prodh	equ	0xFF4
 14362                           prodl	equ	0xFF3
 14363                           intcon	equ	0xFF2
 14364                           intcon2	equ	0xFF1
 14365                           postinc0	equ	0xFEE
 14366                           wreg	equ	0xFE8
 14367                           postdec1	equ	0xFE5
 14368                           fsr1l	equ	0xFE1
 14369                           indf2	equ	0xFDF
 14370                           postinc2	equ	0xFDE
 14371                           postdec2	equ	0xFDD
 14372                           fsr2h	equ	0xFDA
 14373                           fsr2l	equ	0xFD9
 14374                           status	equ	0xFD8
 14375                           
 14376 ;; *************** function _can_interpreter *****************
 14377 ;; Defined at:
 14378 ;;		line 443 in file "parcheggio.c"
 14379 ;; Parameters:    Size  Location     Type
 14380 ;;		None
 14381 ;; Auto vars:     Size  Location     Type
 14382 ;;		None
 14383 ;; Return value:  Size  Location     Type
 14384 ;;		None               void
 14385 ;; Registers used:
 14386 ;;		wreg, status,2, status,0
 14387 ;; Tracked objects:
 14388 ;;		On entry : 0/0
 14389 ;;		On exit  : 0/0
 14390 ;;		Unchanged: 0/0
 14391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14394 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14395 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14396 ;;Total ram usage:        4 bytes
 14397 ;; Hardware stack levels used:    1
 14398 ;; Hardware stack levels required when called:    4
 14399 ;; This function calls:
 14400 ;;		Nothing
 14401 ;; This function is called by:
 14402 ;;		_main
 14403 ;; This function uses a non-reentrant model
 14404 ;;
 14405                           
 14406                           	psect	text34
 14407  005D5C                     __ptext34:
 14408                           	opt stack 0
 14409  005D5C                     _can_interpreter:
 14410                           	opt stack 26
 14411                           
 14412                           ;parcheggio.c: 444: left_speed = data_speed_rx[1];
 14413                           
 14414                           ; BSR set to: 0
 14415                           ;incstack = 0
 14416  005D5C  C109  F03C         	movff	_data_speed_rx+1,_left_speed
 14417  005D60  6A3D               	clrf	_left_speed+1,c
 14418                           
 14419                           ;parcheggio.c: 445: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 14420  005D62  503C               	movf	_left_speed,w,c
 14421  005D64  0100               	movlb	0	; () banked
 14422  005D66  6F77               	movwf	??_can_interpreter& (0+255),b
 14423  005D68  0101               	movlb	1	; () banked
 14424  005D6A  5108               	movf	_data_speed_rx& (0+255),w,b
 14425  005D6C  6E3C               	movwf	_left_speed,c
 14426  005D6E  C077  F03D         	movff	??_can_interpreter,_left_speed+1
 14427                           
 14428                           ; BSR set to: 1
 14429                           ;parcheggio.c: 446: right_speed = data_speed_rx[3];
 14430  005D72  C10B  F03E         	movff	_data_speed_rx+3,_right_speed
 14431  005D76  6A3F               	clrf	_right_speed+1,c
 14432                           
 14433                           ;parcheggio.c: 447: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 14434  005D78  503E               	movf	_right_speed,w,c
 14435  005D7A  0100               	movlb	0	; () banked
 14436  005D7C  6F77               	movwf	??_can_interpreter& (0+255),b
 14437  005D7E  0101               	movlb	1	; () banked
 14438  005D80  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 14439  005D82  6E3E               	movwf	_right_speed,c
 14440  005D84  C077  F03F         	movff	??_can_interpreter,_right_speed+1
 14441                           
 14442                           ; BSR set to: 1
 14443                           ;parcheggio.c: 448: actual_speed = (right_speed + left_speed) / 2;
 14444  005D88  503C               	movf	_left_speed,w,c
 14445  005D8A  243E               	addwf	_right_speed,w,c
 14446  005D8C  0100               	movlb	0	; () banked
 14447  005D8E  6F77               	movwf	??_can_interpreter& (0+255),b
 14448  005D90  503D               	movf	_left_speed+1,w,c
 14449  005D92  203F               	addwfc	_right_speed+1,w,c
 14450  005D94  0100               	movlb	0	; () banked
 14451  005D96  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 14452  005D98  90D8               	bcf	status,0,c
 14453  005D9A  0100               	movlb	0	; () banked
 14454  005D9C  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 14455  005D9E  0100               	movlb	0	; () banked
 14456  005DA0  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 14457  005DA2  0100               	movlb	0	; () banked
 14458  005DA4  3177               	rrcf	??_can_interpreter& (0+255),w,b
 14459  005DA6  0101               	movlb	1	; () banked
 14460  005DA8  6F44               	movwf	_actual_speed& (0+255),b
 14461  005DAA  C079  F145         	movff	??_can_interpreter+2,_actual_speed+1
 14462                           
 14463                           ; BSR set to: 1
 14464  005DAE  0012               	return		;funcret
 14465  005DB0                     __end_of_can_interpreter:
 14466                           	opt stack 0
 14467                           tblptru	equ	0xFF8
 14468                           tblptrh	equ	0xFF7
 14469                           tblptrl	equ	0xFF6
 14470                           tablat	equ	0xFF5
 14471                           prodh	equ	0xFF4
 14472                           prodl	equ	0xFF3
 14473                           intcon	equ	0xFF2
 14474                           intcon2	equ	0xFF1
 14475                           postinc0	equ	0xFEE
 14476                           wreg	equ	0xFE8
 14477                           postdec1	equ	0xFE5
 14478                           fsr1l	equ	0xFE1
 14479                           indf2	equ	0xFDF
 14480                           postinc2	equ	0xFDE
 14481                           postdec2	equ	0xFDD
 14482                           fsr2h	equ	0xFDA
 14483                           fsr2l	equ	0xFD9
 14484                           status	equ	0xFD8
 14485                           
 14486 ;; *************** function _ISR_Bassa *****************
 14487 ;; Defined at:
 14488 ;;		line 111 in file "parcheggio.c"
 14489 ;; Parameters:    Size  Location     Type
 14490 ;;		None
 14491 ;; Auto vars:     Size  Location     Type
 14492 ;;  i               1   34[COMRAM] unsigned char 
 14493 ;;  gigi            1   33[COMRAM] unsigned char 
 14494 ;; Return value:  Size  Location     Type
 14495 ;;		None               void
 14496 ;; Registers used:
 14497 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14498 ;; Tracked objects:
 14499 ;;		On entry : 0/0
 14500 ;;		On exit  : 0/0
 14501 ;;		Unchanged: 0/0
 14502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14504 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14505 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14506 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14507 ;;Total ram usage:       23 bytes
 14508 ;; Hardware stack levels used:    1
 14509 ;; Hardware stack levels required when called:    3
 14510 ;; This function calls:
 14511 ;;		_CANreceiveMessage
 14512 ;; This function is called by:
 14513 ;;		Interrupt level 1
 14514 ;; This function uses a non-reentrant model
 14515 ;;
 14516                           
 14517                           	psect	intcodelo
 14518  000018                     __pintcodelo:
 14519                           	opt stack 0
 14520  000018                     _ISR_Bassa:
 14521                           	opt stack 21
 14522                           
 14523                           ; BSR set to: 1
 14524                           ;incstack = 0
 14525  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14526  00001A  CFD8 F011          	movff	status,??_ISR_Bassa+4
 14527  00001E  CFE8 F012          	movff	wreg,??_ISR_Bassa+5
 14528  000022  CFE0 F013          	movff	bsr,??_ISR_Bassa+6
 14529  000026  CFFA F014          	movff	pclath,??_ISR_Bassa+7
 14530  00002A  CFFB F015          	movff	pclatu,??_ISR_Bassa+8
 14531  00002E  CFE9 F016          	movff	fsr0l,??_ISR_Bassa+9
 14532  000032  CFEA F017          	movff	fsr0h,??_ISR_Bassa+10
 14533  000036  CFE1 F018          	movff	fsr1l,??_ISR_Bassa+11
 14534  00003A  CFE2 F019          	movff	fsr1h,??_ISR_Bassa+12
 14535  00003E  CFD9 F01A          	movff	fsr2l,??_ISR_Bassa+13
 14536  000042  CFDA F01B          	movff	fsr2h,??_ISR_Bassa+14
 14537  000046  CFF3 F01C          	movff	prodl,??_ISR_Bassa+15
 14538  00004A  CFF4 F01D          	movff	prodh,??_ISR_Bassa+16
 14539  00004E  CFF6 F01E          	movff	tblptrl,??_ISR_Bassa+17
 14540  000052  CFF7 F01F          	movff	tblptrh,??_ISR_Bassa+18
 14541  000056  CFF8 F020          	movff	tblptru,??_ISR_Bassa+19
 14542  00005A  CFF5 F021          	movff	tablat,??_ISR_Bassa+20
 14543                           
 14544                           ;parcheggio.c: 113: if (INTCONbits.TMR0IF == 1) {
 14545  00005E  A4F2               	btfss	intcon,2,c	;volatile
 14546  000060  D036               	goto	i1l6067
 14547                           
 14548                           ;parcheggio.c: 114: INTCONbits.INT0IE = 0;
 14549  000062  98F2               	bcf	intcon,4,c	;volatile
 14550                           
 14551                           ;parcheggio.c: 115: T0CONbits.TMR0ON = 0;
 14552  000064  9ED5               	bcf	4053,7,c	;volatile
 14553                           
 14554                           ;parcheggio.c: 116: TMR0H = 0x34;
 14555  000066  0E34               	movlw	52
 14556  000068  6ED7               	movwf	4055,c	;volatile
 14557                           
 14558                           ;parcheggio.c: 117: TMR0L = 0xE0;
 14559  00006A  0EE0               	movlw	224
 14560  00006C  6ED6               	movwf	4054,c	;volatile
 14561                           
 14562                           ;parcheggio.c: 118: T0CONbits.TMR0ON = 1;
 14563  00006E  8ED5               	bsf	4053,7,c	;volatile
 14564                           
 14565                           ;parcheggio.c: 119: if (distance_error == 1) {
 14566  000070  A646               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14567  000072  D00C               	goto	i1l6037
 14568                           
 14569                           ;parcheggio.c: 120: sensor_distance[MUX_index] = 5000;
 14570  000074  5042               	movf	_MUX_index,w,c	;volatile
 14571  000076  0D02               	mullw	2
 14572  000078  0E24               	movlw	low _sensor_distance
 14573  00007A  24F3               	addwf	prodl,w,c
 14574  00007C  6ED9               	movwf	fsr2l,c
 14575  00007E  0E00               	movlw	high _sensor_distance
 14576  000080  20F4               	addwfc	prodh,w,c
 14577  000082  6EDA               	movwf	fsr2h,c
 14578  000084  0E88               	movlw	136
 14579  000086  6EDE               	movwf	postinc2,c
 14580  000088  0E13               	movlw	19
 14581  00008A  6EDD               	movwf	postdec2,c
 14582  00008C                     i1l6037:
 14583                           
 14584                           ;parcheggio.c: 121: }
 14585                           ;parcheggio.c: 122: MUX_index++;
 14586  00008C  2A42               	incf	_MUX_index,f,c	;volatile
 14587                           
 14588                           ;parcheggio.c: 123: if (MUX_index == 8) {
 14589  00008E  0E08               	movlw	8
 14590  000090  1842               	xorwf	_MUX_index,w,c	;volatile
 14591  000092  A4D8               	btfss	status,2,c
 14592  000094  D002               	goto	i1l697
 14593                           
 14594                           ;parcheggio.c: 124: MUX_index = 0;
 14595  000096  0E00               	movlw	0
 14596  000098  6E42               	movwf	_MUX_index,c	;volatile
 14597  00009A                     i1l697:
 14598                           
 14599                           ;parcheggio.c: 125: }
 14600                           ;parcheggio.c: 127: unsigned char gigi = 0;
 14601  00009A  0E00               	movlw	0
 14602  00009C  6E22               	movwf	ISR_Bassa@gigi,c
 14603                           
 14604                           ;parcheggio.c: 128: gigi = MUX_select[MUX_index];
 14605  00009E  5042               	movf	_MUX_index,w,c	;volatile
 14606  0000A0  0D01               	mullw	1
 14607  0000A2  0E00               	movlw	low _MUX_select
 14608  0000A4  24F3               	addwf	prodl,w,c
 14609  0000A6  6ED9               	movwf	fsr2l,c
 14610  0000A8  0E01               	movlw	high _MUX_select
 14611  0000AA  20F4               	addwfc	prodh,w,c
 14612  0000AC  6EDA               	movwf	fsr2h,c
 14613  0000AE  50DF               	movf	indf2,w,c
 14614  0000B0  6E22               	movwf	ISR_Bassa@gigi,c
 14615                           
 14616                           ;parcheggio.c: 129: PORTA = gigi;
 14617  0000B2  C022  FF80         	movff	ISR_Bassa@gigi,3968	;volatile
 14618                           
 14619                           ;parcheggio.c: 130: TRISBbits.RB0 = 0;
 14620  0000B6  9093               	bcf	3987,0,c	;volatile
 14621                           
 14622                           ;parcheggio.c: 131: LATBbits.LATB0 = 1;
 14623  0000B8  808A               	bsf	3978,0,c	;volatile
 14624                           
 14625                           ;parcheggio.c: 132: _delay((unsigned long)((15)*(16000000/4000000.0)));
 14626  0000BA  0E14               	movlw	20
 14627  0000BC                     i1u989_27:
 14628  0000BC  2EE8               	decfsz	wreg,f,c
 14629  0000BE  D7FE               	goto	i1u989_27
 14630                           
 14631                           ;parcheggio.c: 133: distance_error = 1;
 14632  0000C0  8646               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14633                           
 14634                           ;parcheggio.c: 134: LATBbits.LATB0 = 0;
 14635  0000C2  908A               	bcf	3978,0,c	;volatile
 14636                           
 14637                           ;parcheggio.c: 135: TRISBbits.RB0 = 1;
 14638  0000C4  8093               	bsf	3987,0,c	;volatile
 14639                           
 14640                           ;parcheggio.c: 136: INTCONbits.INT0IF = 0;
 14641  0000C6  92F2               	bcf	intcon,1,c	;volatile
 14642                           
 14643                           ;parcheggio.c: 137: INTCONbits.INT0IE = 1;
 14644  0000C8  88F2               	bsf	intcon,4,c	;volatile
 14645                           
 14646                           ;parcheggio.c: 138: INTCONbits.TMR0IF = 0;
 14647  0000CA  94F2               	bcf	intcon,2,c	;volatile
 14648                           
 14649                           ;parcheggio.c: 139: INTCON2bits.INTEDG0 = 1;
 14650  0000CC  8CF1               	bsf	intcon2,6,c	;volatile
 14651  0000CE                     i1l6067:
 14652                           
 14653                           ;parcheggio.c: 140: }
 14654                           ;parcheggio.c: 142: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 14655  0000CE  A0A4               	btfss	4004,0,c	;volatile
 14656  0000D0  B2A4               	btfsc	4004,1,c	;volatile
 14657  0000D2  D001               	goto	i1l6071
 14658  0000D4  D09B               	goto	i1l711
 14659  0000D6                     i1l6071:
 14660                           
 14661                           ;parcheggio.c: 143: CANreceiveMessage(&msg);
 14662  0000D6  0E4E               	movlw	low _msg
 14663  0000D8  6E01               	movwf	CANreceiveMessage@msg,c
 14664  0000DA  0E01               	movlw	high _msg
 14665  0000DC  6E02               	movwf	CANreceiveMessage@msg+1,c
 14666  0000DE  ECB7  F012         	call	_CANreceiveMessage	;wreg free
 14667                           
 14668                           ;parcheggio.c: 144: if (msg.identifier == 0b00000001101) {
 14669  0000E2  0E0D               	movlw	13
 14670  0000E4  0101               	movlb	1	; () banked
 14671  0000E6  194E               	xorwf	_msg& (0+255),w,b
 14672  0000E8  0101               	movlb	1	; () banked
 14673  0000EA  114F               	iorwf	(_msg+1)& (0+255),w,b
 14674  0000EC  0101               	movlb	1	; () banked
 14675  0000EE  1150               	iorwf	(_msg+2)& (0+255),w,b
 14676  0000F0  0101               	movlb	1	; () banked
 14677  0000F2  1151               	iorwf	(_msg+3)& (0+255),w,b
 14678  0000F4  B4D8               	btfsc	status,2,c
 14679                           
 14680                           ; BSR set to: 1
 14681                           ;parcheggio.c: 145: asd = 0;
 14682  0000F6  9246               	bcf	_asd/(0+8),_asd& (0+7),c	;volatile
 14683                           
 14684                           ; BSR set to: 1
 14685                           ;parcheggio.c: 146: }
 14686                           ;parcheggio.c: 147: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 14687                           
 14688                           ; BSR set to: 1
 14689  0000F8  0E07               	movlw	7
 14690  0000FA  0101               	movlb	1	; () banked
 14691  0000FC  194E               	xorwf	_msg& (0+255),w,b
 14692  0000FE  0101               	movlb	1	; () banked
 14693  000100  114F               	iorwf	(_msg+1)& (0+255),w,b
 14694  000102  0101               	movlb	1	; () banked
 14695  000104  1150               	iorwf	(_msg+2)& (0+255),w,b
 14696  000106  0101               	movlb	1	; () banked
 14697  000108  1151               	iorwf	(_msg+3)& (0+255),w,b
 14698  00010A  A4D8               	btfss	status,2,c
 14699  00010C  D02B               	goto	i1l6093
 14700                           
 14701                           ; BSR set to: 1
 14702  00010E  0101               	movlb	1	; () banked
 14703  000110  055C               	decf	(_msg+14)& (0+255),w,b
 14704  000112  B4D8               	btfsc	status,2,c
 14705  000114  D027               	goto	i1l6093
 14706                           
 14707                           ; BSR set to: 1
 14708                           ;parcheggio.c: 148: distance_average = 0;
 14709  000116  0E00               	movlw	0
 14710  000118  6E37               	movwf	_distance_average+1,c	;volatile
 14711  00011A  0E00               	movlw	0
 14712  00011C  6E36               	movwf	_distance_average,c	;volatile
 14713                           
 14714                           ; BSR set to: 1
 14715                           ;parcheggio.c: 149: distance_dx = msg.data[1];
 14716  00011E  C153  F038         	movff	_msg+5,_distance_dx	;volatile
 14717  000122  6A39               	clrf	_distance_dx+1,c	;volatile
 14718                           
 14719                           ;parcheggio.c: 150: distance_dx = ((distance_dx << 8) | msg.data[0]);
 14720  000124  5038               	movf	_distance_dx,w,c	;volatile
 14721  000126  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14722  000128  0101               	movlb	1	; () banked
 14723  00012A  5152               	movf	(_msg+4)& (0+255),w,b
 14724  00012C  6E38               	movwf	_distance_dx,c	;volatile
 14725  00012E  C00D  F039         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 14726                           
 14727                           ; BSR set to: 1
 14728                           ;parcheggio.c: 151: distance_sx = msg.data[3];
 14729  000132  C155  F03A         	movff	_msg+7,_distance_sx	;volatile
 14730  000136  6A3B               	clrf	_distance_sx+1,c	;volatile
 14731                           
 14732                           ;parcheggio.c: 152: distance_sx = ((distance_sx << 8) | msg.data[2]);
 14733  000138  503A               	movf	_distance_sx,w,c	;volatile
 14734  00013A  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14735  00013C  0101               	movlb	1	; () banked
 14736  00013E  5154               	movf	(_msg+6)& (0+255),w,b
 14737  000140  6E3A               	movwf	_distance_sx,c	;volatile
 14738  000142  C00D  F03B         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 14739                           
 14740                           ; BSR set to: 1
 14741                           ;parcheggio.c: 153: distance_average = (distance_sx + distance_dx) / 2;
 14742  000146  5038               	movf	_distance_dx,w,c	;volatile
 14743  000148  243A               	addwf	_distance_sx,w,c	;volatile
 14744  00014A  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14745  00014C  5039               	movf	_distance_dx+1,w,c	;volatile
 14746  00014E  203B               	addwfc	_distance_sx+1,w,c	;volatile
 14747  000150  6E0E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14748  000152  90D8               	bcf	status,0,c
 14749  000154  300E               	rrcf	??_ISR_Bassa+1,w,c
 14750  000156  6E0F               	movwf	(??_ISR_Bassa+2)& (0+255),c
 14751  000158  300D               	rrcf	??_ISR_Bassa,w,c
 14752  00015A  6E36               	movwf	_distance_average,c	;volatile
 14753  00015C  C00F  F037         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 14754                           
 14755                           ; BSR set to: 1
 14756                           ;parcheggio.c: 154: distance_received = 1;
 14757  000160  8846               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 14758                           
 14759                           ; BSR set to: 1
 14760                           ;parcheggio.c: 155: distance_received1 = 1;
 14761  000162  8A46               	bsf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
 14762  000164                     i1l6093:
 14763                           
 14764                           ; BSR set to: 1
 14765                           ;parcheggio.c: 156: }
 14766                           ;parcheggio.c: 157: if (msg.identifier == 0b00000001010) {
 14767  000164  0E0A               	movlw	10
 14768  000166  0101               	movlb	1	; () banked
 14769  000168  194E               	xorwf	_msg& (0+255),w,b
 14770  00016A  0101               	movlb	1	; () banked
 14771  00016C  114F               	iorwf	(_msg+1)& (0+255),w,b
 14772  00016E  0101               	movlb	1	; () banked
 14773  000170  1150               	iorwf	(_msg+2)& (0+255),w,b
 14774  000172  0101               	movlb	1	; () banked
 14775  000174  1151               	iorwf	(_msg+3)& (0+255),w,b
 14776  000176  A4D8               	btfss	status,2,c
 14777  000178  D00C               	goto	i1l6099
 14778                           
 14779                           ; BSR set to: 1
 14780                           ;parcheggio.c: 158: if (msg.data[0] == 1) {
 14781  00017A  0101               	movlb	1	; () banked
 14782  00017C  0552               	decf	(_msg+4)& (0+255),w,b
 14783  00017E  A4D8               	btfss	status,2,c
 14784  000180  D003               	goto	i1l704
 14785                           
 14786                           ; BSR set to: 1
 14787                           ;parcheggio.c: 159: activation = 1;
 14788  000182  8046               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 14789                           
 14790                           ;parcheggio.c: 160: PORTBbits.RB6 = 1;
 14791  000184  8C81               	bsf	3969,6,c	;volatile
 14792                           
 14793                           ;parcheggio.c: 161: } else {
 14794  000186  D005               	goto	i1l6099
 14795  000188                     i1l704:
 14796                           
 14797                           ; BSR set to: 1
 14798                           ;parcheggio.c: 162: activation = 0;
 14799  000188  9046               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 14800                           
 14801                           ;parcheggio.c: 163: PORTBbits.RB4 = 0;
 14802  00018A  9881               	bcf	3969,4,c	;volatile
 14803                           
 14804                           ;parcheggio.c: 164: PORTBbits.RB5 = 0;
 14805  00018C  9A81               	bcf	3969,5,c	;volatile
 14806                           
 14807                           ;parcheggio.c: 165: PORTBbits.RB6 = 0;
 14808  00018E  9C81               	bcf	3969,6,c	;volatile
 14809                           
 14810                           ;parcheggio.c: 166: request_sent = 0;
 14811  000190  9247               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
 14812  000192                     i1l6099:
 14813                           
 14814                           ; BSR set to: 1
 14815                           ;parcheggio.c: 167: }
 14816                           ;parcheggio.c: 168: }
 14817                           ;parcheggio.c: 169: if (msg.identifier == 0b00000001100) {
 14818  000192  0E0C               	movlw	12
 14819  000194  0101               	movlb	1	; () banked
 14820  000196  194E               	xorwf	_msg& (0+255),w,b
 14821  000198  0101               	movlb	1	; () banked
 14822  00019A  114F               	iorwf	(_msg+1)& (0+255),w,b
 14823  00019C  0101               	movlb	1	; () banked
 14824  00019E  1150               	iorwf	(_msg+2)& (0+255),w,b
 14825  0001A0  0101               	movlb	1	; () banked
 14826  0001A2  1151               	iorwf	(_msg+3)& (0+255),w,b
 14827  0001A4  B4D8               	btfsc	status,2,c
 14828                           
 14829                           ; BSR set to: 1
 14830                           ;parcheggio.c: 170: start_operation = 1;
 14831  0001A6  8647               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14832                           
 14833                           ; BSR set to: 1
 14834                           ;parcheggio.c: 171: }
 14835                           ;parcheggio.c: 172: if (msg.identifier == 0b00000000110) {
 14836                           
 14837                           ; BSR set to: 1
 14838  0001A8  0E06               	movlw	6
 14839  0001AA  0101               	movlb	1	; () banked
 14840  0001AC  194E               	xorwf	_msg& (0+255),w,b
 14841  0001AE  0101               	movlb	1	; () banked
 14842  0001B0  114F               	iorwf	(_msg+1)& (0+255),w,b
 14843  0001B2  0101               	movlb	1	; () banked
 14844  0001B4  1150               	iorwf	(_msg+2)& (0+255),w,b
 14845  0001B6  0101               	movlb	1	; () banked
 14846  0001B8  1151               	iorwf	(_msg+3)& (0+255),w,b
 14847  0001BA  A4D8               	btfss	status,2,c
 14848  0001BC  D025               	goto	i1l707
 14849                           
 14850                           ; BSR set to: 1
 14851                           ;parcheggio.c: 173: for (unsigned char i = 0; i < 8; i++) {
 14852  0001BE  0E00               	movlw	0
 14853  0001C0  6E23               	movwf	ISR_Bassa@i,c
 14854  0001C2                     i1l6107:
 14855                           
 14856                           ; BSR set to: 1
 14857  0001C2  0E07               	movlw	7
 14858  0001C4  6423               	cpfsgt	ISR_Bassa@i,c
 14859  0001C6  D001               	goto	i1l6111
 14860  0001C8  D014               	goto	i1l6117
 14861  0001CA                     i1l6111:
 14862                           
 14863                           ;parcheggio.c: 174: data_speed_rx[i] = msg.data[i];
 14864  0001CA  5023               	movf	ISR_Bassa@i,w,c
 14865  0001CC  0D01               	mullw	1
 14866  0001CE  0E52               	movlw	low (_msg+4)
 14867  0001D0  24F3               	addwf	prodl,w,c
 14868  0001D2  6ED9               	movwf	fsr2l,c
 14869  0001D4  0E01               	movlw	high (_msg+4)
 14870  0001D6  20F4               	addwfc	prodh,w,c
 14871  0001D8  6EDA               	movwf	fsr2h,c
 14872  0001DA  5023               	movf	ISR_Bassa@i,w,c
 14873  0001DC  0D01               	mullw	1
 14874  0001DE  0E08               	movlw	low _data_speed_rx
 14875  0001E0  24F3               	addwf	prodl,w,c
 14876  0001E2  6EE1               	movwf	fsr1l,c
 14877  0001E4  0E01               	movlw	high _data_speed_rx
 14878  0001E6  20F4               	addwfc	prodh,w,c
 14879  0001E8  6EE2               	movwf	fsr1h,c
 14880  0001EA  CFDF FFE7          	movff	indf2,indf1
 14881  0001EE  2A23               	incf	ISR_Bassa@i,f,c
 14882  0001F0  D7E8               	goto	i1l6107
 14883  0001F2                     i1l6117:
 14884                           
 14885                           ;parcheggio.c: 175: }
 14886                           ;parcheggio.c: 176: if (msg.identifier == 0b00000001101) {
 14887  0001F2  0E0D               	movlw	13
 14888  0001F4  0101               	movlb	1	; () banked
 14889  0001F6  194E               	xorwf	_msg& (0+255),w,b
 14890  0001F8  0101               	movlb	1	; () banked
 14891  0001FA  114F               	iorwf	(_msg+1)& (0+255),w,b
 14892  0001FC  0101               	movlb	1	; () banked
 14893  0001FE  1150               	iorwf	(_msg+2)& (0+255),w,b
 14894  000200  0101               	movlb	1	; () banked
 14895  000202  1151               	iorwf	(_msg+3)& (0+255),w,b
 14896  000204  B4D8               	btfsc	status,2,c
 14897                           
 14898                           ; BSR set to: 1
 14899                           ;parcheggio.c: 177: distance_wait = 0;
 14900  000206  9C46               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 14901  000208                     i1l707:
 14902                           
 14903                           ; BSR set to: 1
 14904                           ;parcheggio.c: 178: }
 14905                           ;parcheggio.c: 180: }
 14906                           ;parcheggio.c: 182: PIR3bits.RXB0IF = 0;
 14907  000208  90A4               	bcf	4004,0,c	;volatile
 14908                           
 14909                           ;parcheggio.c: 183: PIR3bits.RXB1IF = 0;
 14910  00020A  92A4               	bcf	4004,1,c	;volatile
 14911  00020C                     i1l711:
 14912  00020C  C021  FFF5         	movff	??_ISR_Bassa+20,tablat
 14913  000210  C020  FFF8         	movff	??_ISR_Bassa+19,tblptru
 14914  000214  C01F  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 14915  000218  C01E  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 14916  00021C  C01D  FFF4         	movff	??_ISR_Bassa+16,prodh
 14917  000220  C01C  FFF3         	movff	??_ISR_Bassa+15,prodl
 14918  000224  C01B  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 14919  000228  C01A  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 14920  00022C  C019  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 14921  000230  C018  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 14922  000234  C017  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 14923  000238  C016  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 14924  00023C  C015  FFFB         	movff	??_ISR_Bassa+8,pclatu
 14925  000240  C014  FFFA         	movff	??_ISR_Bassa+7,pclath
 14926  000244  C013  FFE0         	movff	??_ISR_Bassa+6,bsr
 14927  000248  C012  FFE8         	movff	??_ISR_Bassa+5,wreg
 14928  00024C  C011  FFD8         	movff	??_ISR_Bassa+4,status
 14929  000250  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 14930  000252  0010               	retfie	
 14931  000254                     __end_of_ISR_Bassa:
 14932                           	opt stack 0
 14933                           pclatu	equ	0xFFB
 14934                           pclath	equ	0xFFA
 14935                           tblptru	equ	0xFF8
 14936                           tblptrh	equ	0xFF7
 14937                           tblptrl	equ	0xFF6
 14938                           tablat	equ	0xFF5
 14939                           prodh	equ	0xFF4
 14940                           prodl	equ	0xFF3
 14941                           intcon	equ	0xFF2
 14942                           intcon2	equ	0xFF1
 14943                           postinc0	equ	0xFEE
 14944                           fsr0h	equ	0xFEA
 14945                           fsr0l	equ	0xFE9
 14946                           wreg	equ	0xFE8
 14947                           indf1	equ	0xFE7
 14948                           postdec1	equ	0xFE5
 14949                           fsr1h	equ	0xFE2
 14950                           fsr1l	equ	0xFE1
 14951                           bsr	equ	0xFE0
 14952                           indf2	equ	0xFDF
 14953                           postinc2	equ	0xFDE
 14954                           postdec2	equ	0xFDD
 14955                           fsr2h	equ	0xFDA
 14956                           fsr2l	equ	0xFD9
 14957                           status	equ	0xFD8
 14958                           
 14959 ;; *************** function _CANreceiveMessage *****************
 14960 ;; Defined at:
 14961 ;;		line 529 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 14962 ;; Parameters:    Size  Location     Type
 14963 ;;  msg             2    0[COMRAM] PTR struct .
 14964 ;;		 -> msg(15), 
 14965 ;; Auto vars:     Size  Location     Type
 14966 ;;  tamp            1   11[COMRAM] unsigned char 
 14967 ;;  error           1   10[COMRAM] unsigned char 
 14968 ;; Return value:  Size  Location     Type
 14969 ;;                  1    wreg      unsigned char 
 14970 ;; Registers used:
 14971 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14972 ;; Tracked objects:
 14973 ;;		On entry : 0/0
 14974 ;;		On exit  : 0/0
 14975 ;;		Unchanged: 0/0
 14976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14977 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14978 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14979 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14980 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14981 ;;Total ram usage:       12 bytes
 14982 ;; Hardware stack levels used:    1
 14983 ;; Hardware stack levels required when called:    2
 14984 ;; This function calls:
 14985 ;;		Nothing
 14986 ;; This function is called by:
 14987 ;;		_ISR_Bassa
 14988 ;; This function uses a non-reentrant model
 14989 ;;
 14990                           
 14991                           	psect	text36
 14992  00256E                     __ptext36:
 14993                           	opt stack 0
 14994  00256E                     _CANreceiveMessage:
 14995                           	opt stack 21
 14996                           
 14997                           ;inc\CANlib.h: 531: BYTE tamp;
 14998                           ;inc\CANlib.h: 532: BYTE error = 0;
 14999                           
 15000                           ;incstack = 0
 15001  00256E  0E00               	movlw	0
 15002  002570  6E0B               	movwf	CANreceiveMessage@error,c
 15003                           
 15004                           ;inc\CANlib.h: 534: if (COMSTATbits.RXB0OVFL == 0x01)
 15005  002572  BE74               	btfsc	3956,7,c	;volatile
 15006                           
 15007                           ;inc\CANlib.h: 535: error |= CAN_RX_BUFFER_1_OVFL;
 15008  002574  800B               	bsf	CANreceiveMessage@error,0,c
 15009                           
 15010                           ;inc\CANlib.h: 537: if (COMSTATbits.RXB1OVFL == 0x01)
 15011  002576  BC74               	btfsc	3956,6,c	;volatile
 15012                           
 15013                           ;inc\CANlib.h: 538: error |= CAN_RX_BUFFER_2_OVFL;
 15014  002578  820B               	bsf	CANreceiveMessage@error,1,c
 15015                           
 15016                           ;inc\CANlib.h: 541: if (RXB1CONbits.RXFUL ==0x01)
 15017  00257A  010F               	movlb	15	; () banked
 15018  00257C  AF50               	btfss	80,7,b	;volatile
 15019  00257E  D143               	goto	i1l410
 15020                           
 15021                           ; BSR set to: 15
 15022                           ;inc\CANlib.h: 542: {
 15023                           ;inc\CANlib.h: 543: msg->identifier = 0;
 15024  002580  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15025  002584  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15026  002588  6ADE               	clrf	postinc2,c
 15027  00258A  6ADE               	clrf	postinc2,c
 15028  00258C  6ADE               	clrf	postinc2,c
 15029  00258E  6ADD               	clrf	postdec2,c
 15030                           
 15031                           ; BSR set to: 15
 15032                           ;inc\CANlib.h: 544: msg->data[0] =RXB1D0;
 15033  002590  EE20 F004          	lfsr	2,4
 15034  002594  5001               	movf	CANreceiveMessage@msg,w,c
 15035  002596  26D9               	addwf	fsr2l,f,c
 15036  002598  5002               	movf	CANreceiveMessage@msg+1,w,c
 15037  00259A  22DA               	addwfc	fsr2h,f,c
 15038  00259C  CF56 FFDF          	movff	3926,indf2	;volatile
 15039                           
 15040                           ; BSR set to: 15
 15041                           ;inc\CANlib.h: 545: msg->data[1] =RXB1D1;
 15042  0025A0  EE20 F005          	lfsr	2,5
 15043  0025A4  5001               	movf	CANreceiveMessage@msg,w,c
 15044  0025A6  26D9               	addwf	fsr2l,f,c
 15045  0025A8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15046  0025AA  22DA               	addwfc	fsr2h,f,c
 15047  0025AC  CF57 FFDF          	movff	3927,indf2	;volatile
 15048                           
 15049                           ; BSR set to: 15
 15050                           ;inc\CANlib.h: 546: msg->data[2] =RXB1D2;
 15051  0025B0  EE20 F006          	lfsr	2,6
 15052  0025B4  5001               	movf	CANreceiveMessage@msg,w,c
 15053  0025B6  26D9               	addwf	fsr2l,f,c
 15054  0025B8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15055  0025BA  22DA               	addwfc	fsr2h,f,c
 15056  0025BC  CF58 FFDF          	movff	3928,indf2	;volatile
 15057                           
 15058                           ; BSR set to: 15
 15059                           ;inc\CANlib.h: 547: msg->data[3] =RXB1D3;
 15060  0025C0  EE20 F007          	lfsr	2,7
 15061  0025C4  5001               	movf	CANreceiveMessage@msg,w,c
 15062  0025C6  26D9               	addwf	fsr2l,f,c
 15063  0025C8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15064  0025CA  22DA               	addwfc	fsr2h,f,c
 15065  0025CC  CF59 FFDF          	movff	3929,indf2	;volatile
 15066                           
 15067                           ; BSR set to: 15
 15068                           ;inc\CANlib.h: 548: msg->data[4] =RXB1D4;
 15069  0025D0  EE20 F008          	lfsr	2,8
 15070  0025D4  5001               	movf	CANreceiveMessage@msg,w,c
 15071  0025D6  26D9               	addwf	fsr2l,f,c
 15072  0025D8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15073  0025DA  22DA               	addwfc	fsr2h,f,c
 15074  0025DC  CF5A FFDF          	movff	3930,indf2	;volatile
 15075                           
 15076                           ; BSR set to: 15
 15077                           ;inc\CANlib.h: 549: msg->data[5] =RXB1D5;
 15078  0025E0  EE20 F009          	lfsr	2,9
 15079  0025E4  5001               	movf	CANreceiveMessage@msg,w,c
 15080  0025E6  26D9               	addwf	fsr2l,f,c
 15081  0025E8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15082  0025EA  22DA               	addwfc	fsr2h,f,c
 15083  0025EC  CF5B FFDF          	movff	3931,indf2	;volatile
 15084                           
 15085                           ; BSR set to: 15
 15086                           ;inc\CANlib.h: 550: msg->data[6] =RXB1D6;
 15087  0025F0  EE20 F00A          	lfsr	2,10
 15088  0025F4  5001               	movf	CANreceiveMessage@msg,w,c
 15089  0025F6  26D9               	addwf	fsr2l,f,c
 15090  0025F8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15091  0025FA  22DA               	addwfc	fsr2h,f,c
 15092  0025FC  CF5C FFDF          	movff	3932,indf2	;volatile
 15093                           
 15094                           ; BSR set to: 15
 15095                           ;inc\CANlib.h: 551: msg->data[7] =RXB1D7;
 15096  002600  EE20 F00B          	lfsr	2,11
 15097  002604  5001               	movf	CANreceiveMessage@msg,w,c
 15098  002606  26D9               	addwf	fsr2l,f,c
 15099  002608  5002               	movf	CANreceiveMessage@msg+1,w,c
 15100  00260A  22DA               	addwfc	fsr2h,f,c
 15101  00260C  CF5D FFDF          	movff	3933,indf2	;volatile
 15102                           
 15103                           ; BSR set to: 15
 15104                           ;inc\CANlib.h: 553: msg->RTR = RXB1DLCbits.RXRTR;
 15105  002610  EE20 F00E          	lfsr	2,14
 15106  002614  5001               	movf	CANreceiveMessage@msg,w,c
 15107  002616  26D9               	addwf	fsr2l,f,c
 15108  002618  5002               	movf	CANreceiveMessage@msg+1,w,c
 15109  00261A  22DA               	addwfc	fsr2h,f,c
 15110  00261C  010F               	movlb	15	; () banked
 15111  00261E  AD55               	btfss	85,6,b	;volatile
 15112  002620  D002               	goto	i1u680_20
 15113  002622  0E01               	movlw	1
 15114  002624  D001               	goto	i1u680_26
 15115  002626                     i1u680_20:
 15116  002626  0E00               	movlw	0
 15117  002628                     i1u680_26:
 15118  002628  6EDF               	movwf	indf2,c
 15119                           
 15120                           ; BSR set to: 15
 15121                           ;inc\CANlib.h: 555: msg->length = RXB1DLC & 0x0F;
 15122  00262A  EE20 F00D          	lfsr	2,13
 15123  00262E  5001               	movf	CANreceiveMessage@msg,w,c
 15124  002630  26D9               	addwf	fsr2l,f,c
 15125  002632  5002               	movf	CANreceiveMessage@msg+1,w,c
 15126  002634  22DA               	addwfc	fsr2h,f,c
 15127  002636  010F               	movlb	15	; () banked
 15128  002638  5155               	movf	85,w,b	;volatile
 15129  00263A  0B0F               	andlw	15
 15130  00263C  6EDF               	movwf	indf2,c
 15131                           
 15132                           ; BSR set to: 15
 15133                           ;inc\CANlib.h: 557: msg->type = RXB1SIDLbits.EXID;
 15134  00263E  EE20 F00C          	lfsr	2,12
 15135  002642  5001               	movf	CANreceiveMessage@msg,w,c
 15136  002644  26D9               	addwf	fsr2l,f,c
 15137  002646  5002               	movf	CANreceiveMessage@msg+1,w,c
 15138  002648  22DA               	addwfc	fsr2h,f,c
 15139  00264A  010F               	movlb	15	; () banked
 15140  00264C  A752               	btfss	82,3,b	;volatile
 15141  00264E  D002               	goto	i1u681_20
 15142  002650  0E01               	movlw	1
 15143  002652  D001               	goto	i1u681_26
 15144  002654                     i1u681_20:
 15145  002654  0E00               	movlw	0
 15146  002656                     i1u681_26:
 15147  002656  6EDF               	movwf	indf2,c
 15148                           
 15149                           ; BSR set to: 15
 15150                           ;inc\CANlib.h: 559: if (RXB1SIDLbits.EXID == 0)
 15151  002658  010F               	movlb	15	; () banked
 15152  00265A  B752               	btfsc	82,3,b	;volatile
 15153  00265C  D044               	goto	i1l5627
 15154                           
 15155                           ; BSR set to: 15
 15156                           ;inc\CANlib.h: 560: {
 15157                           ;inc\CANlib.h: 561: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 15158  00265E  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 15159  002662  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15160  002664  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15161  002666  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15162  002668  0E03               	movlw	3
 15163  00266A                     i1u683_25:
 15164  00266A  90D8               	bcf	status,0,c
 15165  00266C  3603               	rlcf	??_CANreceiveMessage,f,c
 15166  00266E  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15167  002670  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15168  002672  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15169  002674  2EE8               	decfsz	wreg,f,c
 15170  002676  D7F9               	goto	i1u683_25
 15171  002678  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15172  00267C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15173  002680  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15174  002684  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15175  002688  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15176  00268C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15177                           
 15178                           ; BSR set to: 15
 15179                           ;inc\CANlib.h: 562: tamp = (RXB1SIDL >> 5 ) & 0x07;
 15180  002690  010F               	movlb	15	; () banked
 15181  002692  3952               	swapf	82,w,b	;volatile
 15182  002694  42E8               	rrncf	wreg,f,c
 15183  002696  0B07               	andlw	7
 15184  002698  0B07               	andlw	7
 15185  00269A  6E0C               	movwf	CANreceiveMessage@tamp,c
 15186                           
 15187                           ; BSR set to: 15
 15188                           ;inc\CANlib.h: 563: msg->identifier = msg->identifier + tamp;
 15189  00269C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15190  0026A0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15191  0026A4  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 15192  0026A8  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 15193  0026AC  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 15194  0026B0  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 15195  0026B4  500C               	movf	CANreceiveMessage@tamp,w,c
 15196  0026B6  2403               	addwf	??_CANreceiveMessage,w,c
 15197  0026B8  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 15198  0026BA  0E00               	movlw	0
 15199  0026BC  2004               	addwfc	??_CANreceiveMessage+1,w,c
 15200  0026BE  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 15201  0026C0  0E00               	movlw	0
 15202  0026C2  2005               	addwfc	??_CANreceiveMessage+2,w,c
 15203  0026C4  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 15204  0026C6  0E00               	movlw	0
 15205  0026C8  2006               	addwfc	??_CANreceiveMessage+3,w,c
 15206  0026CA  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 15207  0026CC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15208  0026D0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15209  0026D4  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 15210  0026D8  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 15211  0026DC  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 15212  0026E0  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 15213                           
 15214                           ;inc\CANlib.h: 564: }
 15215  0026E4  D08D               	goto	i1l5653
 15216  0026E6                     i1l5627:
 15217                           
 15218                           ; BSR set to: 15
 15219                           ;inc\CANlib.h: 565: else
 15220                           ;inc\CANlib.h: 566: {
 15221                           ;inc\CANlib.h: 567: msg->identifier = (unsigned long) RXB1EIDL;
 15222  0026E6  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
 15223  0026EA  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15224  0026EC  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15225  0026EE  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15226  0026F0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15227  0026F4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15228  0026F8  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15229  0026FC  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15230  002700  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15231  002704  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15232                           
 15233                           ; BSR set to: 15
 15234                           ;inc\CANlib.h: 568: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 15235  002708  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
 15236  00270C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15237  00270E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15238  002710  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15239  002712  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 15240  002716  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 15241  00271A  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 15242  00271E  6A03               	clrf	??_CANreceiveMessage,c
 15243  002720  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15244  002724  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15245  002728  5003               	movf	??_CANreceiveMessage,w,c
 15246  00272A  26DE               	addwf	postinc2,f,c
 15247  00272C  5004               	movf	??_CANreceiveMessage+1,w,c
 15248  00272E  22DE               	addwfc	postinc2,f,c
 15249  002730  5005               	movf	??_CANreceiveMessage+2,w,c
 15250  002732  22DE               	addwfc	postinc2,f,c
 15251  002734  5006               	movf	??_CANreceiveMessage+3,w,c
 15252  002736  22DE               	addwfc	postinc2,f,c
 15253                           
 15254                           ; BSR set to: 15
 15255                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID16)
 15256  002738  010F               	movlb	15	; () banked
 15257  00273A  A152               	btfss	82,0,b	;volatile
 15258  00273C  D00C               	goto	i1l5635
 15259                           
 15260                           ; BSR set to: 15
 15261                           ;inc\CANlib.h: 571: msg->identifier |= 0x00010000;
 15262  00273E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15263  002742  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15264  002746  0E00               	movlw	0
 15265  002748  12DE               	iorwf	postinc2,f,c
 15266  00274A  0E00               	movlw	0
 15267  00274C  12DE               	iorwf	postinc2,f,c
 15268  00274E  0E01               	movlw	1
 15269  002750  12DE               	iorwf	postinc2,f,c
 15270  002752  0E00               	movlw	0
 15271  002754  12DE               	iorwf	postinc2,f,c
 15272  002756                     i1l5635:
 15273                           
 15274                           ; BSR set to: 15
 15275                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.EID17)
 15276  002756  010F               	movlb	15	; () banked
 15277  002758  A352               	btfss	82,1,b	;volatile
 15278  00275A  D00C               	goto	i1l5639
 15279                           
 15280                           ; BSR set to: 15
 15281                           ;inc\CANlib.h: 573: msg->identifier |= 0x00020000;
 15282  00275C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15283  002760  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15284  002764  0E00               	movlw	0
 15285  002766  12DE               	iorwf	postinc2,f,c
 15286  002768  0E00               	movlw	0
 15287  00276A  12DE               	iorwf	postinc2,f,c
 15288  00276C  0E02               	movlw	2
 15289  00276E  12DE               	iorwf	postinc2,f,c
 15290  002770  0E00               	movlw	0
 15291  002772  12DE               	iorwf	postinc2,f,c
 15292  002774                     i1l5639:
 15293                           
 15294                           ; BSR set to: 15
 15295                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID0)
 15296  002774  010F               	movlb	15	; () banked
 15297  002776  AB52               	btfss	82,5,b	;volatile
 15298  002778  D00C               	goto	i1l5643
 15299                           
 15300                           ; BSR set to: 15
 15301                           ;inc\CANlib.h: 575: msg->identifier |= 0x00040000;
 15302  00277A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15303  00277E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15304  002782  0E00               	movlw	0
 15305  002784  12DE               	iorwf	postinc2,f,c
 15306  002786  0E00               	movlw	0
 15307  002788  12DE               	iorwf	postinc2,f,c
 15308  00278A  0E04               	movlw	4
 15309  00278C  12DE               	iorwf	postinc2,f,c
 15310  00278E  0E00               	movlw	0
 15311  002790  12DE               	iorwf	postinc2,f,c
 15312  002792                     i1l5643:
 15313                           
 15314                           ; BSR set to: 15
 15315                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID1)
 15316  002792  010F               	movlb	15	; () banked
 15317  002794  AD52               	btfss	82,6,b	;volatile
 15318  002796  D00C               	goto	i1l5647
 15319                           
 15320                           ; BSR set to: 15
 15321                           ;inc\CANlib.h: 577: msg->identifier |= 0x00080000;
 15322  002798  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15323  00279C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15324  0027A0  0E00               	movlw	0
 15325  0027A2  12DE               	iorwf	postinc2,f,c
 15326  0027A4  0E00               	movlw	0
 15327  0027A6  12DE               	iorwf	postinc2,f,c
 15328  0027A8  0E08               	movlw	8
 15329  0027AA  12DE               	iorwf	postinc2,f,c
 15330  0027AC  0E00               	movlw	0
 15331  0027AE  12DE               	iorwf	postinc2,f,c
 15332  0027B0                     i1l5647:
 15333                           
 15334                           ; BSR set to: 15
 15335                           ;inc\CANlib.h: 578: if (RXB1SIDLbits.SID2)
 15336  0027B0  010F               	movlb	15	; () banked
 15337  0027B2  AF52               	btfss	82,7,b	;volatile
 15338  0027B4  D00C               	goto	i1l5651
 15339                           
 15340                           ; BSR set to: 15
 15341                           ;inc\CANlib.h: 579: msg->identifier |= 0x00100000;
 15342  0027B6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15343  0027BA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15344  0027BE  0E00               	movlw	0
 15345  0027C0  12DE               	iorwf	postinc2,f,c
 15346  0027C2  0E00               	movlw	0
 15347  0027C4  12DE               	iorwf	postinc2,f,c
 15348  0027C6  0E10               	movlw	16
 15349  0027C8  12DE               	iorwf	postinc2,f,c
 15350  0027CA  0E00               	movlw	0
 15351  0027CC  12DE               	iorwf	postinc2,f,c
 15352  0027CE                     i1l5651:
 15353                           
 15354                           ; BSR set to: 15
 15355                           ;inc\CANlib.h: 581: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 15356  0027CE  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 15357  0027D2  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15358  0027D4  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15359  0027D6  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15360  0027D8  0E15               	movlw	21
 15361  0027DA                     i1u689_25:
 15362  0027DA  90D8               	bcf	status,0,c
 15363  0027DC  3603               	rlcf	??_CANreceiveMessage,f,c
 15364  0027DE  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15365  0027E0  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15366  0027E2  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15367  0027E4  2EE8               	decfsz	wreg,f,c
 15368  0027E6  D7F9               	goto	i1u689_25
 15369  0027E8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15370  0027EC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15371  0027F0  5003               	movf	??_CANreceiveMessage,w,c
 15372  0027F2  12DE               	iorwf	postinc2,f,c
 15373  0027F4  5004               	movf	??_CANreceiveMessage+1,w,c
 15374  0027F6  12DE               	iorwf	postinc2,f,c
 15375  0027F8  5005               	movf	??_CANreceiveMessage+2,w,c
 15376  0027FA  12DE               	iorwf	postinc2,f,c
 15377  0027FC  5006               	movf	??_CANreceiveMessage+3,w,c
 15378  0027FE  12DE               	iorwf	postinc2,f,c
 15379  002800                     i1l5653:
 15380                           
 15381                           ; BSR set to: 15
 15382                           ;inc\CANlib.h: 582: }
 15383                           ;inc\CANlib.h: 584: RXB1CONbits.RXFUL = 0x00;
 15384  002800  010F               	movlb	15	; () banked
 15385  002802  9F50               	bcf	80,7,b	;volatile
 15386                           
 15387                           ; BSR set to: 15
 15388                           ;inc\CANlib.h: 585: return (error);
 15389                           ;	Return value of _CANreceiveMessage is never used
 15390  002804  0012               	return	
 15391  002806                     i1l410:
 15392                           
 15393                           ; BSR set to: 15
 15394                           ;inc\CANlib.h: 586: }
 15395                           ;inc\CANlib.h: 588: if (RXB0CONbits.RXFUL ==0x01)
 15396  002806  AE60               	btfss	3936,7,c	;volatile
 15397  002808  0012               	return	
 15398                           
 15399                           ; BSR set to: 15
 15400                           ;inc\CANlib.h: 589: {
 15401                           ;inc\CANlib.h: 590: msg->identifier = 0;
 15402  00280A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15403  00280E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15404  002812  6ADE               	clrf	postinc2,c
 15405  002814  6ADE               	clrf	postinc2,c
 15406  002816  6ADE               	clrf	postinc2,c
 15407  002818  6ADD               	clrf	postdec2,c
 15408                           
 15409                           ; BSR set to: 15
 15410                           ;inc\CANlib.h: 591: msg->data[0] =RXB0D0;
 15411  00281A  EE20 F004          	lfsr	2,4
 15412  00281E  5001               	movf	CANreceiveMessage@msg,w,c
 15413  002820  26D9               	addwf	fsr2l,f,c
 15414  002822  5002               	movf	CANreceiveMessage@msg+1,w,c
 15415  002824  22DA               	addwfc	fsr2h,f,c
 15416  002826  CF66 FFDF          	movff	3942,indf2	;volatile
 15417                           
 15418                           ; BSR set to: 15
 15419                           ;inc\CANlib.h: 592: msg->data[1] =RXB0D1;
 15420  00282A  EE20 F005          	lfsr	2,5
 15421  00282E  5001               	movf	CANreceiveMessage@msg,w,c
 15422  002830  26D9               	addwf	fsr2l,f,c
 15423  002832  5002               	movf	CANreceiveMessage@msg+1,w,c
 15424  002834  22DA               	addwfc	fsr2h,f,c
 15425  002836  CF67 FFDF          	movff	3943,indf2	;volatile
 15426                           
 15427                           ; BSR set to: 15
 15428                           ;inc\CANlib.h: 593: msg->data[2] =RXB0D2;
 15429  00283A  EE20 F006          	lfsr	2,6
 15430  00283E  5001               	movf	CANreceiveMessage@msg,w,c
 15431  002840  26D9               	addwf	fsr2l,f,c
 15432  002842  5002               	movf	CANreceiveMessage@msg+1,w,c
 15433  002844  22DA               	addwfc	fsr2h,f,c
 15434  002846  CF68 FFDF          	movff	3944,indf2	;volatile
 15435                           
 15436                           ; BSR set to: 15
 15437                           ;inc\CANlib.h: 594: msg->data[3] =RXB0D3;
 15438  00284A  EE20 F007          	lfsr	2,7
 15439  00284E  5001               	movf	CANreceiveMessage@msg,w,c
 15440  002850  26D9               	addwf	fsr2l,f,c
 15441  002852  5002               	movf	CANreceiveMessage@msg+1,w,c
 15442  002854  22DA               	addwfc	fsr2h,f,c
 15443  002856  CF69 FFDF          	movff	3945,indf2	;volatile
 15444                           
 15445                           ; BSR set to: 15
 15446                           ;inc\CANlib.h: 595: msg->data[4] =RXB0D4;
 15447  00285A  EE20 F008          	lfsr	2,8
 15448  00285E  5001               	movf	CANreceiveMessage@msg,w,c
 15449  002860  26D9               	addwf	fsr2l,f,c
 15450  002862  5002               	movf	CANreceiveMessage@msg+1,w,c
 15451  002864  22DA               	addwfc	fsr2h,f,c
 15452  002866  CF6A FFDF          	movff	3946,indf2	;volatile
 15453                           
 15454                           ; BSR set to: 15
 15455                           ;inc\CANlib.h: 596: msg->data[5] =RXB0D5;
 15456  00286A  EE20 F009          	lfsr	2,9
 15457  00286E  5001               	movf	CANreceiveMessage@msg,w,c
 15458  002870  26D9               	addwf	fsr2l,f,c
 15459  002872  5002               	movf	CANreceiveMessage@msg+1,w,c
 15460  002874  22DA               	addwfc	fsr2h,f,c
 15461  002876  CF6B FFDF          	movff	3947,indf2	;volatile
 15462                           
 15463                           ; BSR set to: 15
 15464                           ;inc\CANlib.h: 597: msg->data[6] =RXB0D6;
 15465  00287A  EE20 F00A          	lfsr	2,10
 15466  00287E  5001               	movf	CANreceiveMessage@msg,w,c
 15467  002880  26D9               	addwf	fsr2l,f,c
 15468  002882  5002               	movf	CANreceiveMessage@msg+1,w,c
 15469  002884  22DA               	addwfc	fsr2h,f,c
 15470  002886  CF6C FFDF          	movff	3948,indf2	;volatile
 15471                           
 15472                           ; BSR set to: 15
 15473                           ;inc\CANlib.h: 598: msg->data[7] =RXB0D7;
 15474  00288A  EE20 F00B          	lfsr	2,11
 15475  00288E  5001               	movf	CANreceiveMessage@msg,w,c
 15476  002890  26D9               	addwf	fsr2l,f,c
 15477  002892  5002               	movf	CANreceiveMessage@msg+1,w,c
 15478  002894  22DA               	addwfc	fsr2h,f,c
 15479  002896  CF6D FFDF          	movff	3949,indf2	;volatile
 15480                           
 15481                           ; BSR set to: 15
 15482                           ;inc\CANlib.h: 600: msg->RTR = RXB0DLCbits.RXRTR;
 15483  00289A  EE20 F00E          	lfsr	2,14
 15484  00289E  5001               	movf	CANreceiveMessage@msg,w,c
 15485  0028A0  26D9               	addwf	fsr2l,f,c
 15486  0028A2  5002               	movf	CANreceiveMessage@msg+1,w,c
 15487  0028A4  22DA               	addwfc	fsr2h,f,c
 15488  0028A6  AC65               	btfss	3941,6,c	;volatile
 15489  0028A8  D002               	goto	i1u691_20
 15490  0028AA  0E01               	movlw	1
 15491  0028AC  D001               	goto	i1u691_26
 15492  0028AE                     i1u691_20:
 15493  0028AE  0E00               	movlw	0
 15494  0028B0                     i1u691_26:
 15495  0028B0  6EDF               	movwf	indf2,c
 15496                           
 15497                           ; BSR set to: 15
 15498                           ;inc\CANlib.h: 602: msg->length = RXB0DLC & 0x0F;
 15499  0028B2  EE20 F00D          	lfsr	2,13
 15500  0028B6  5001               	movf	CANreceiveMessage@msg,w,c
 15501  0028B8  26D9               	addwf	fsr2l,f,c
 15502  0028BA  5002               	movf	CANreceiveMessage@msg+1,w,c
 15503  0028BC  22DA               	addwfc	fsr2h,f,c
 15504  0028BE  5065               	movf	3941,w,c	;volatile
 15505  0028C0  0B0F               	andlw	15
 15506  0028C2  6EDF               	movwf	indf2,c
 15507                           
 15508                           ; BSR set to: 15
 15509                           ;inc\CANlib.h: 604: msg->type = RXB0SIDLbits.EXID;
 15510  0028C4  EE20 F00C          	lfsr	2,12
 15511  0028C8  5001               	movf	CANreceiveMessage@msg,w,c
 15512  0028CA  26D9               	addwf	fsr2l,f,c
 15513  0028CC  5002               	movf	CANreceiveMessage@msg+1,w,c
 15514  0028CE  22DA               	addwfc	fsr2h,f,c
 15515  0028D0  A662               	btfss	3938,3,c	;volatile
 15516  0028D2  D002               	goto	i1u692_20
 15517  0028D4  0E01               	movlw	1
 15518  0028D6  D001               	goto	i1u692_26
 15519  0028D8                     i1u692_20:
 15520  0028D8  0E00               	movlw	0
 15521  0028DA                     i1u692_26:
 15522  0028DA  6EDF               	movwf	indf2,c
 15523                           
 15524                           ; BSR set to: 15
 15525                           ;inc\CANlib.h: 606: if (RXB0SIDLbits.EXID == 0)
 15526  0028DC  B662               	btfsc	3938,3,c	;volatile
 15527  0028DE  D043               	goto	i1l5689
 15528                           
 15529                           ; BSR set to: 15
 15530                           ;inc\CANlib.h: 607: {
 15531                           ;inc\CANlib.h: 608: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 15532  0028E0  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15533  0028E4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15534  0028E6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15535  0028E8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15536  0028EA  0E03               	movlw	3
 15537  0028EC                     i1u694_25:
 15538  0028EC  90D8               	bcf	status,0,c
 15539  0028EE  3603               	rlcf	??_CANreceiveMessage,f,c
 15540  0028F0  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15541  0028F2  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15542  0028F4  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15543  0028F6  2EE8               	decfsz	wreg,f,c
 15544  0028F8  D7F9               	goto	i1u694_25
 15545  0028FA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15546  0028FE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15547  002902  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15548  002906  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15549  00290A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15550  00290E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15551                           
 15552                           ; BSR set to: 15
 15553                           ;inc\CANlib.h: 609: tamp = (RXB0SIDL >> 5 ) & 0x07;
 15554  002912  3862               	swapf	3938,w,c	;volatile
 15555  002914  42E8               	rrncf	wreg,f,c
 15556  002916  0B07               	andlw	7
 15557  002918  0B07               	andlw	7
 15558  00291A  6E0C               	movwf	CANreceiveMessage@tamp,c
 15559                           
 15560                           ; BSR set to: 15
 15561                           ;inc\CANlib.h: 610: msg->identifier = msg->identifier + tamp;
 15562  00291C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15563  002920  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15564  002924  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 15565  002928  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 15566  00292C  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 15567  002930  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 15568  002934  500C               	movf	CANreceiveMessage@tamp,w,c
 15569  002936  2403               	addwf	??_CANreceiveMessage,w,c
 15570  002938  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 15571  00293A  0E00               	movlw	0
 15572  00293C  2004               	addwfc	??_CANreceiveMessage+1,w,c
 15573  00293E  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 15574  002940  0E00               	movlw	0
 15575  002942  2005               	addwfc	??_CANreceiveMessage+2,w,c
 15576  002944  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 15577  002946  0E00               	movlw	0
 15578  002948  2006               	addwfc	??_CANreceiveMessage+3,w,c
 15579  00294A  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 15580  00294C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15581  002950  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15582  002954  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 15583  002958  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 15584  00295C  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 15585  002960  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 15586                           
 15587                           ;inc\CANlib.h: 611: }
 15588  002964  D088               	goto	i1l5715
 15589  002966                     i1l5689:
 15590                           
 15591                           ; BSR set to: 15
 15592                           ;inc\CANlib.h: 612: else
 15593                           ;inc\CANlib.h: 613: {
 15594                           ;inc\CANlib.h: 614: msg->identifier = (unsigned long) RXB0EIDL;
 15595  002966  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
 15596  00296A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15597  00296C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15598  00296E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15599  002970  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15600  002974  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15601  002978  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15602  00297C  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15603  002980  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15604  002984  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15605                           
 15606                           ; BSR set to: 15
 15607                           ;inc\CANlib.h: 615: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 15608  002988  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
 15609  00298C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15610  00298E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15611  002990  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15612  002992  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 15613  002996  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 15614  00299A  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 15615  00299E  6A03               	clrf	??_CANreceiveMessage,c
 15616  0029A0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15617  0029A4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15618  0029A8  5003               	movf	??_CANreceiveMessage,w,c
 15619  0029AA  26DE               	addwf	postinc2,f,c
 15620  0029AC  5004               	movf	??_CANreceiveMessage+1,w,c
 15621  0029AE  22DE               	addwfc	postinc2,f,c
 15622  0029B0  5005               	movf	??_CANreceiveMessage+2,w,c
 15623  0029B2  22DE               	addwfc	postinc2,f,c
 15624  0029B4  5006               	movf	??_CANreceiveMessage+3,w,c
 15625  0029B6  22DE               	addwfc	postinc2,f,c
 15626                           
 15627                           ; BSR set to: 15
 15628                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID16)
 15629  0029B8  A062               	btfss	3938,0,c	;volatile
 15630  0029BA  D00C               	goto	i1l5697
 15631                           
 15632                           ; BSR set to: 15
 15633                           ;inc\CANlib.h: 618: msg->identifier |= 0x00010000;
 15634  0029BC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15635  0029C0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15636  0029C4  0E00               	movlw	0
 15637  0029C6  12DE               	iorwf	postinc2,f,c
 15638  0029C8  0E00               	movlw	0
 15639  0029CA  12DE               	iorwf	postinc2,f,c
 15640  0029CC  0E01               	movlw	1
 15641  0029CE  12DE               	iorwf	postinc2,f,c
 15642  0029D0  0E00               	movlw	0
 15643  0029D2  12DE               	iorwf	postinc2,f,c
 15644  0029D4                     i1l5697:
 15645                           
 15646                           ; BSR set to: 15
 15647                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.EID17)
 15648  0029D4  A262               	btfss	3938,1,c	;volatile
 15649  0029D6  D00C               	goto	i1l5701
 15650                           
 15651                           ; BSR set to: 15
 15652                           ;inc\CANlib.h: 620: msg->identifier |= 0x00020000;
 15653  0029D8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15654  0029DC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15655  0029E0  0E00               	movlw	0
 15656  0029E2  12DE               	iorwf	postinc2,f,c
 15657  0029E4  0E00               	movlw	0
 15658  0029E6  12DE               	iorwf	postinc2,f,c
 15659  0029E8  0E02               	movlw	2
 15660  0029EA  12DE               	iorwf	postinc2,f,c
 15661  0029EC  0E00               	movlw	0
 15662  0029EE  12DE               	iorwf	postinc2,f,c
 15663  0029F0                     i1l5701:
 15664                           
 15665                           ; BSR set to: 15
 15666                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID0)
 15667  0029F0  AA62               	btfss	3938,5,c	;volatile
 15668  0029F2  D00C               	goto	i1l5705
 15669                           
 15670                           ; BSR set to: 15
 15671                           ;inc\CANlib.h: 622: msg->identifier |= 0x00040000;
 15672  0029F4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15673  0029F8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15674  0029FC  0E00               	movlw	0
 15675  0029FE  12DE               	iorwf	postinc2,f,c
 15676  002A00  0E00               	movlw	0
 15677  002A02  12DE               	iorwf	postinc2,f,c
 15678  002A04  0E04               	movlw	4
 15679  002A06  12DE               	iorwf	postinc2,f,c
 15680  002A08  0E00               	movlw	0
 15681  002A0A  12DE               	iorwf	postinc2,f,c
 15682  002A0C                     i1l5705:
 15683                           
 15684                           ; BSR set to: 15
 15685                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID1)
 15686  002A0C  AC62               	btfss	3938,6,c	;volatile
 15687  002A0E  D00C               	goto	i1l5709
 15688                           
 15689                           ; BSR set to: 15
 15690                           ;inc\CANlib.h: 624: msg->identifier |= 0x00080000;
 15691  002A10  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15692  002A14  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15693  002A18  0E00               	movlw	0
 15694  002A1A  12DE               	iorwf	postinc2,f,c
 15695  002A1C  0E00               	movlw	0
 15696  002A1E  12DE               	iorwf	postinc2,f,c
 15697  002A20  0E08               	movlw	8
 15698  002A22  12DE               	iorwf	postinc2,f,c
 15699  002A24  0E00               	movlw	0
 15700  002A26  12DE               	iorwf	postinc2,f,c
 15701  002A28                     i1l5709:
 15702                           
 15703                           ; BSR set to: 15
 15704                           ;inc\CANlib.h: 625: if (RXB0SIDLbits.SID2)
 15705  002A28  AE62               	btfss	3938,7,c	;volatile
 15706  002A2A  D00C               	goto	i1l5713
 15707                           
 15708                           ; BSR set to: 15
 15709                           ;inc\CANlib.h: 626: msg->identifier |= 0x00100000;
 15710  002A2C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15711  002A30  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15712  002A34  0E00               	movlw	0
 15713  002A36  12DE               	iorwf	postinc2,f,c
 15714  002A38  0E00               	movlw	0
 15715  002A3A  12DE               	iorwf	postinc2,f,c
 15716  002A3C  0E10               	movlw	16
 15717  002A3E  12DE               	iorwf	postinc2,f,c
 15718  002A40  0E00               	movlw	0
 15719  002A42  12DE               	iorwf	postinc2,f,c
 15720  002A44                     i1l5713:
 15721                           
 15722                           ; BSR set to: 15
 15723                           ;inc\CANlib.h: 628: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 15724  002A44  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15725  002A48  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15726  002A4A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15727  002A4C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15728  002A4E  0E15               	movlw	21
 15729  002A50                     i1u700_25:
 15730  002A50  90D8               	bcf	status,0,c
 15731  002A52  3603               	rlcf	??_CANreceiveMessage,f,c
 15732  002A54  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15733  002A56  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15734  002A58  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15735  002A5A  2EE8               	decfsz	wreg,f,c
 15736  002A5C  D7F9               	goto	i1u700_25
 15737  002A5E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15738  002A62  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15739  002A66  5003               	movf	??_CANreceiveMessage,w,c
 15740  002A68  12DE               	iorwf	postinc2,f,c
 15741  002A6A  5004               	movf	??_CANreceiveMessage+1,w,c
 15742  002A6C  12DE               	iorwf	postinc2,f,c
 15743  002A6E  5005               	movf	??_CANreceiveMessage+2,w,c
 15744  002A70  12DE               	iorwf	postinc2,f,c
 15745  002A72  5006               	movf	??_CANreceiveMessage+3,w,c
 15746  002A74  12DE               	iorwf	postinc2,f,c
 15747  002A76                     i1l5715:
 15748                           
 15749                           ; BSR set to: 15
 15750                           ;inc\CANlib.h: 630: }
 15751                           ;inc\CANlib.h: 631: RXB0CONbits.RXFUL = 0x00;
 15752  002A76  9E60               	bcf	3936,7,c	;volatile
 15753                           
 15754                           ; BSR set to: 15
 15755                           ;inc\CANlib.h: 633: return (error);
 15756                           ;	Return value of _CANreceiveMessage is never used
 15757  002A78  0012               	return	
 15758  002A7A                     __end_of_CANreceiveMessage:
 15759                           	opt stack 0
 15760                           pclatu	equ	0xFFB
 15761                           pclath	equ	0xFFA
 15762                           tblptru	equ	0xFF8
 15763                           tblptrh	equ	0xFF7
 15764                           tblptrl	equ	0xFF6
 15765                           tablat	equ	0xFF5
 15766                           prodh	equ	0xFF4
 15767                           prodl	equ	0xFF3
 15768                           intcon	equ	0xFF2
 15769                           intcon2	equ	0xFF1
 15770                           postinc0	equ	0xFEE
 15771                           fsr0h	equ	0xFEA
 15772                           fsr0l	equ	0xFE9
 15773                           wreg	equ	0xFE8
 15774                           indf1	equ	0xFE7
 15775                           postdec1	equ	0xFE5
 15776                           fsr1h	equ	0xFE2
 15777                           fsr1l	equ	0xFE1
 15778                           bsr	equ	0xFE0
 15779                           indf2	equ	0xFDF
 15780                           postinc2	equ	0xFDE
 15781                           postdec2	equ	0xFDD
 15782                           fsr2h	equ	0xFDA
 15783                           fsr2l	equ	0xFD9
 15784                           status	equ	0xFD8
 15785                           
 15786 ;; *************** function _ISR_Alta *****************
 15787 ;; Defined at:
 15788 ;;		line 93 in file "parcheggio.c"
 15789 ;; Parameters:    Size  Location     Type
 15790 ;;		None
 15791 ;; Auto vars:     Size  Location     Type
 15792 ;;		None
 15793 ;; Return value:  Size  Location     Type
 15794 ;;		None               void
 15795 ;; Registers used:
 15796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15797 ;; Tracked objects:
 15798 ;;		On entry : 0/0
 15799 ;;		On exit  : 0/0
 15800 ;;		Unchanged: 0/0
 15801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15804 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15805 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15806 ;;Total ram usage:       16 bytes
 15807 ;; Hardware stack levels used:    1
 15808 ;; Hardware stack levels required when called:    1
 15809 ;; This function calls:
 15810 ;;		___lwdiv
 15811 ;; This function is called by:
 15812 ;;		Interrupt level 2
 15813 ;; This function uses a non-reentrant model
 15814 ;;
 15815                           
 15816                           	psect	intcode
 15817  000008                     __pintcode:
 15818                           	opt stack 0
 15819  000008                     _ISR_Alta:
 15820                           	opt stack 21
 15821                           
 15822                           ; BSR set to: 15
 15823                           ;incstack = 0
 15824  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15825  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 15826  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 15827  000012  EF50  F02D         	goto	int_func
 15828                           pclatu	equ	0xFFB
 15829                           pclath	equ	0xFFA
 15830                           tblptru	equ	0xFF8
 15831                           tblptrh	equ	0xFF7
 15832                           tblptrl	equ	0xFF6
 15833                           tablat	equ	0xFF5
 15834                           prodh	equ	0xFF4
 15835                           prodl	equ	0xFF3
 15836                           intcon	equ	0xFF2
 15837                           intcon2	equ	0xFF1
 15838                           postinc0	equ	0xFEE
 15839                           fsr0h	equ	0xFEA
 15840                           fsr0l	equ	0xFE9
 15841                           wreg	equ	0xFE8
 15842                           indf1	equ	0xFE7
 15843                           postdec1	equ	0xFE5
 15844                           fsr1h	equ	0xFE2
 15845                           fsr1l	equ	0xFE1
 15846                           bsr	equ	0xFE0
 15847                           indf2	equ	0xFDF
 15848                           postinc2	equ	0xFDE
 15849                           postdec2	equ	0xFDD
 15850                           fsr2h	equ	0xFDA
 15851                           fsr2l	equ	0xFD9
 15852                           status	equ	0xFD8
 15853                           
 15854                           	psect	intcode_body
 15855  005AA0                     __pintcode_body:
 15856                           	opt stack 21
 15857  005AA0                     int_func:
 15858                           	opt stack 21
 15859  005AA0  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 15860  005AA4  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 15861  005AA8  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 15862  005AAC  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 15863  005AB0  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 15864  005AB4  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 15865  005AB8  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 15866  005ABC  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 15867  005AC0  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 15868  005AC4  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 15869  005AC8  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 15870  005ACC  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 15871                           
 15872                           ;parcheggio.c: 94: if (INTCON2bits.INTEDG0 == 1) {
 15873  005AD0  ACF1               	btfss	intcon2,6,c	;volatile
 15874  005AD2  D007               	goto	i2l690
 15875                           
 15876                           ;parcheggio.c: 95: INTCON2bits.INTEDG0 = 0;
 15877  005AD4  9CF1               	bcf	intcon2,6,c	;volatile
 15878                           
 15879                           ;parcheggio.c: 96: TMR3H = 0;
 15880  005AD6  0E00               	movlw	0
 15881  005AD8  6EB3               	movwf	4019,c	;volatile
 15882                           
 15883                           ;parcheggio.c: 97: TMR3L = 0;
 15884  005ADA  0E00               	movlw	0
 15885  005ADC  6EB2               	movwf	4018,c	;volatile
 15886                           
 15887                           ;parcheggio.c: 98: distance_error = 0;
 15888  005ADE  9646               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 15889                           
 15890                           ;parcheggio.c: 99: } else {
 15891  005AE0  D031               	goto	i2l7651
 15892  005AE2                     i2l690:
 15893                           
 15894                           ;parcheggio.c: 100: gianni = TMR3H;
 15895  005AE2  CFB3 F044          	movff	4019,_gianni	;volatile
 15896                           
 15897                           ;parcheggio.c: 101: asus = TMR3L;
 15898  005AE6  CFB2 F043          	movff	4018,_asus	;volatile
 15899                           
 15900                           ;parcheggio.c: 102: timerValue2 = gianni;
 15901  005AEA  C044  F040         	movff	_gianni,_timerValue2	;volatile
 15902  005AEE  6A41               	clrf	_timerValue2+1,c	;volatile
 15903                           
 15904                           ;parcheggio.c: 103: timerValue2 = ((timerValue2 << 8) | (asus));
 15905  005AF0  5040               	movf	_timerValue2,w,c	;volatile
 15906  005AF2  0100               	movlb	0	; () banked
 15907  005AF4  6F67               	movwf	??_ISR_Alta& (0+255),b
 15908  005AF6  5043               	movf	_asus,w,c	;volatile
 15909  005AF8  6E40               	movwf	_timerValue2,c	;volatile
 15910  005AFA  C067  F041         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 15911                           
 15912                           ; BSR set to: 0
 15913                           ;parcheggio.c: 104: pulse_time = timerValue2 / 2;
 15914  005AFE  90D8               	bcf	status,0,c
 15915  005B00  3041               	rrcf	_timerValue2+1,w,c	;volatile
 15916  005B02  0100               	movlb	0	; () banked
 15917  005B04  6F67               	movwf	??_ISR_Alta& (0+255),b
 15918  005B06  3040               	rrcf	_timerValue2,w,c	;volatile
 15919  005B08  0101               	movlb	1	; () banked
 15920  005B0A  6F4A               	movwf	_pulse_time& (0+255),b	;volatile
 15921  005B0C  C067  F14B         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 15922                           
 15923                           ; BSR set to: 1
 15924                           ;parcheggio.c: 105: sensor_distance[MUX_index] = pulse_time / 58;
 15925  005B10  C14A  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 15926  005B14  C14B  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 15927  005B18  0E00               	movlw	0
 15928  005B1A  0100               	movlb	0	; () banked
 15929  005B1C  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 15930  005B1E  0E3A               	movlw	58
 15931  005B20  6F62               	movwf	___lwdiv@divisor& (0+255),b
 15932  005B22  EC0B  F02E         	call	___lwdiv	;wreg free
 15933  005B26  5042               	movf	_MUX_index,w,c	;volatile
 15934  005B28  0D02               	mullw	2
 15935  005B2A  0E24               	movlw	low _sensor_distance
 15936  005B2C  24F3               	addwf	prodl,w,c
 15937  005B2E  6ED9               	movwf	fsr2l,c
 15938  005B30  0E00               	movlw	high _sensor_distance
 15939  005B32  20F4               	addwfc	prodh,w,c
 15940  005B34  6EDA               	movwf	fsr2h,c
 15941  005B36  0100               	movlb	0	; () banked
 15942  005B38  C060  FFDE         	movff	?___lwdiv,postinc2
 15943  005B3C  0100               	movlb	0	; () banked
 15944  005B3E  C061  FFDD         	movff	?___lwdiv+1,postdec2
 15945                           
 15946                           ; BSR set to: 0
 15947                           ;parcheggio.c: 106: INTCON2bits.INTEDG0 = 1;
 15948  005B42  8CF1               	bsf	intcon2,6,c	;volatile
 15949  005B44                     i2l7651:
 15950                           
 15951                           ;parcheggio.c: 107: }
 15952                           ;parcheggio.c: 108: INTCONbits.INT0IF = 0;
 15953  005B44  92F2               	bcf	intcon,1,c	;volatile
 15954  005B46  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 15955  005B4A  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 15956  005B4E  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 15957  005B52  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 15958  005B56  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 15959  005B5A  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 15960  005B5E  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 15961  005B62  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 15962  005B66  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 15963  005B6A  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 15964  005B6E  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 15965  005B72  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 15966  005B76  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 15967  005B7A  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 15968  005B7E  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 15969  005B80  0011               	retfie		f
 15970  005B82                     __end_of_ISR_Alta:
 15971                           	opt stack 0
 15972                           pclatu	equ	0xFFB
 15973                           pclath	equ	0xFFA
 15974                           tblptru	equ	0xFF8
 15975                           tblptrh	equ	0xFF7
 15976                           tblptrl	equ	0xFF6
 15977                           tablat	equ	0xFF5
 15978                           prodh	equ	0xFF4
 15979                           prodl	equ	0xFF3
 15980                           intcon	equ	0xFF2
 15981                           intcon2	equ	0xFF1
 15982                           postinc0	equ	0xFEE
 15983                           fsr0h	equ	0xFEA
 15984                           fsr0l	equ	0xFE9
 15985                           wreg	equ	0xFE8
 15986                           indf1	equ	0xFE7
 15987                           postdec1	equ	0xFE5
 15988                           fsr1h	equ	0xFE2
 15989                           fsr1l	equ	0xFE1
 15990                           bsr	equ	0xFE0
 15991                           indf2	equ	0xFDF
 15992                           postinc2	equ	0xFDE
 15993                           postdec2	equ	0xFDD
 15994                           fsr2h	equ	0xFDA
 15995                           fsr2l	equ	0xFD9
 15996                           status	equ	0xFD8
 15997                           
 15998 ;; *************** function ___lwdiv *****************
 15999 ;; Defined at:
 16000 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 16001 ;; Parameters:    Size  Location     Type
 16002 ;;  dividend        2    0[BANK0 ] unsigned int 
 16003 ;;  divisor         2    2[BANK0 ] unsigned int 
 16004 ;; Auto vars:     Size  Location     Type
 16005 ;;  quotient        2    5[BANK0 ] unsigned int 
 16006 ;;  counter         1    4[BANK0 ] unsigned char 
 16007 ;; Return value:  Size  Location     Type
 16008 ;;                  2    0[BANK0 ] unsigned int 
 16009 ;; Registers used:
 16010 ;;		wreg, status,2, status,0
 16011 ;; Tracked objects:
 16012 ;;		On entry : 0/0
 16013 ;;		On exit  : 0/0
 16014 ;;		Unchanged: 0/0
 16015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16016 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16017 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16019 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16020 ;;Total ram usage:        7 bytes
 16021 ;; Hardware stack levels used:    1
 16022 ;; This function calls:
 16023 ;;		Nothing
 16024 ;; This function is called by:
 16025 ;;		_ISR_Alta
 16026 ;; This function uses a non-reentrant model
 16027 ;;
 16028                           
 16029                           	psect	text38
 16030  005C16                     __ptext38:
 16031                           	opt stack 0
 16032  005C16                     ___lwdiv:
 16033                           	opt stack 21
 16034                           
 16035                           ;incstack = 0
 16036  005C16  0E00               	movlw	0
 16037  005C18  0100               	movlb	0	; () banked
 16038  005C1A  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 16039  005C1C  0E00               	movlw	0
 16040  005C1E  6F65               	movwf	___lwdiv@quotient& (0+255),b
 16041                           
 16042                           ; BSR set to: 0
 16043  005C20  0100               	movlb	0	; () banked
 16044  005C22  5162               	movf	___lwdiv@divisor& (0+255),w,b
 16045  005C24  0100               	movlb	0	; () banked
 16046  005C26  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 16047  005C28  B4D8               	btfsc	status,2,c
 16048  005C2A  D02C               	goto	i2l1278
 16049                           
 16050                           ; BSR set to: 0
 16051  005C2C  0E01               	movlw	1
 16052  005C2E  0100               	movlb	0	; () banked
 16053  005C30  6F64               	movwf	___lwdiv@counter& (0+255),b
 16054  005C32  D006               	goto	i2l7621
 16055  005C34                     i2l7619:
 16056                           
 16057                           ; BSR set to: 0
 16058  005C34  0100               	movlb	0	; () banked
 16059  005C36  90D8               	bcf	status,0,c
 16060  005C38  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 16061  005C3A  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 16062  005C3C  0100               	movlb	0	; () banked
 16063  005C3E  2B64               	incf	___lwdiv@counter& (0+255),f,b
 16064  005C40                     i2l7621:
 16065                           
 16066                           ; BSR set to: 0
 16067  005C40  0100               	movlb	0	; () banked
 16068  005C42  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 16069  005C44  D7F7               	goto	i2l7619
 16070  005C46                     i2l7623:
 16071                           
 16072                           ; BSR set to: 0
 16073  005C46  0100               	movlb	0	; () banked
 16074  005C48  90D8               	bcf	status,0,c
 16075  005C4A  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 16076  005C4C  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 16077                           
 16078                           ; BSR set to: 0
 16079  005C4E  0100               	movlb	0	; () banked
 16080  005C50  5162               	movf	___lwdiv@divisor& (0+255),w,b
 16081  005C52  0100               	movlb	0	; () banked
 16082  005C54  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 16083  005C56  0100               	movlb	0	; () banked
 16084  005C58  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16085  005C5A  0100               	movlb	0	; () banked
 16086  005C5C  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 16087  005C5E  A0D8               	btfss	status,0,c
 16088  005C60  D00A               	goto	i2l7631
 16089                           
 16090                           ; BSR set to: 0
 16091  005C62  0100               	movlb	0	; () banked
 16092  005C64  5162               	movf	___lwdiv@divisor& (0+255),w,b
 16093  005C66  0100               	movlb	0	; () banked
 16094  005C68  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 16095  005C6A  0100               	movlb	0	; () banked
 16096  005C6C  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16097  005C6E  0100               	movlb	0	; () banked
 16098  005C70  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 16099                           
 16100                           ; BSR set to: 0
 16101  005C72  0100               	movlb	0	; () banked
 16102  005C74  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 16103  005C76                     i2l7631:
 16104                           
 16105                           ; BSR set to: 0
 16106  005C76  0100               	movlb	0	; () banked
 16107  005C78  90D8               	bcf	status,0,c
 16108  005C7A  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 16109  005C7C  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 16110                           
 16111                           ; BSR set to: 0
 16112  005C7E  0100               	movlb	0	; () banked
 16113  005C80  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 16114  005C82  D7E1               	goto	i2l7623
 16115  005C84                     i2l1278:
 16116                           
 16117                           ; BSR set to: 0
 16118  005C84  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 16119  005C88  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 16120                           
 16121                           ; BSR set to: 0
 16122  005C8C  0012               	return		;funcret
 16123  005C8E                     __end_of___lwdiv:
 16124                           	opt stack 0
 16125                           pclatu	equ	0xFFB
 16126                           pclath	equ	0xFFA
 16127                           tblptru	equ	0xFF8
 16128                           tblptrh	equ	0xFF7
 16129                           tblptrl	equ	0xFF6
 16130                           tablat	equ	0xFF5
 16131                           prodh	equ	0xFF4
 16132                           prodl	equ	0xFF3
 16133                           intcon	equ	0xFF2
 16134                           intcon2	equ	0xFF1
 16135                           postinc0	equ	0xFEE
 16136                           fsr0h	equ	0xFEA
 16137                           fsr0l	equ	0xFE9
 16138                           wreg	equ	0xFE8
 16139                           indf1	equ	0xFE7
 16140                           postdec1	equ	0xFE5
 16141                           fsr1h	equ	0xFE2
 16142                           fsr1l	equ	0xFE1
 16143                           bsr	equ	0xFE0
 16144                           indf2	equ	0xFDF
 16145                           postinc2	equ	0xFDE
 16146                           postdec2	equ	0xFDD
 16147                           fsr2h	equ	0xFDA
 16148                           fsr2l	equ	0xFD9
 16149                           status	equ	0xFD8
 16150                           pclatu	equ	0xFFB
 16151                           pclath	equ	0xFFA
 16152                           tblptru	equ	0xFF8
 16153                           tblptrh	equ	0xFF7
 16154                           tblptrl	equ	0xFF6
 16155                           tablat	equ	0xFF5
 16156                           prodh	equ	0xFF4
 16157                           prodl	equ	0xFF3
 16158                           intcon	equ	0xFF2
 16159                           intcon2	equ	0xFF1
 16160                           postinc0	equ	0xFEE
 16161                           fsr0h	equ	0xFEA
 16162                           fsr0l	equ	0xFE9
 16163                           wreg	equ	0xFE8
 16164                           indf1	equ	0xFE7
 16165                           postdec1	equ	0xFE5
 16166                           fsr1h	equ	0xFE2
 16167                           fsr1l	equ	0xFE1
 16168                           bsr	equ	0xFE0
 16169                           indf2	equ	0xFDF
 16170                           postinc2	equ	0xFDE
 16171                           postdec2	equ	0xFDD
 16172                           fsr2h	equ	0xFDA
 16173                           fsr2l	equ	0xFD9
 16174                           status	equ	0xFD8
 16175                           
 16176                           	psect	param0
 16177  0000                     pclatu	equ	0xFFB
 16178                           pclath	equ	0xFFA
 16179                           tblptru	equ	0xFF8
 16180                           tblptrh	equ	0xFF7
 16181                           tblptrl	equ	0xFF6
 16182                           tablat	equ	0xFF5
 16183                           prodh	equ	0xFF4
 16184                           prodl	equ	0xFF3
 16185                           intcon	equ	0xFF2
 16186                           intcon2	equ	0xFF1
 16187                           postinc0	equ	0xFEE
 16188                           fsr0h	equ	0xFEA
 16189                           fsr0l	equ	0xFE9
 16190                           wreg	equ	0xFE8
 16191                           indf1	equ	0xFE7
 16192                           postdec1	equ	0xFE5
 16193                           fsr1h	equ	0xFE2
 16194                           fsr1l	equ	0xFE1
 16195                           bsr	equ	0xFE0
 16196                           indf2	equ	0xFDF
 16197                           postinc2	equ	0xFDE
 16198                           postdec2	equ	0xFDD
 16199                           fsr2h	equ	0xFDA
 16200                           fsr2l	equ	0xFD9
 16201                           status	equ	0xFD8
 16202                           
 16203                           	psect	temp
 16204  000048                     btemp:
 16205                           	opt stack 0
 16206  000048                     	ds	1
 16207  0000                     int$flags	set	btemp
 16208                           pclatu	equ	0xFFB
 16209                           pclath	equ	0xFFA
 16210                           tblptru	equ	0xFF8
 16211                           tblptrh	equ	0xFF7
 16212                           tblptrl	equ	0xFF6
 16213                           tablat	equ	0xFF5
 16214                           prodh	equ	0xFF4
 16215                           prodl	equ	0xFF3
 16216                           intcon	equ	0xFF2
 16217                           intcon2	equ	0xFF1
 16218                           postinc0	equ	0xFEE
 16219                           fsr0h	equ	0xFEA
 16220                           fsr0l	equ	0xFE9
 16221                           wreg	equ	0xFE8
 16222                           indf1	equ	0xFE7
 16223                           postdec1	equ	0xFE5
 16224                           fsr1h	equ	0xFE2
 16225                           fsr1l	equ	0xFE1
 16226                           bsr	equ	0xFE0
 16227                           indf2	equ	0xFDF
 16228                           postinc2	equ	0xFDE
 16229                           postdec2	equ	0xFDD
 16230                           fsr2h	equ	0xFDA
 16231                           fsr2l	equ	0xFD9
 16232                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        11
    BSS         179
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      71
    BANK0           160    132     137
    BANK1           256     85     236
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> can_send@data_correction1(BANK0[0]), data_speed(BANK1[8]), data_brake(BANK1[8]), data_steering(BANK1[8]), 
		 -> data_correction(BANK1[8]), data_test(BANK1[8]), data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _park_search->_parallelo
    _park_routine->_parallelo
    _parallelo->_asin
    _can_send->_CANsendMessage
    _sin->_floor
    _floor->___xxtofl
    ___xxtofl->___fltol
    ___fltol->___flneg
    ___flsub->_floor
    _asin->_sqrt
    _sqrt->___flneg
    _atan->___flge
    _fabs->___flneg
    ___flneg->___fladd
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul
    ___flge->_fabs
    _delay_s->_delay_ms
    _delay_ms->___wmul
    _configurazione->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_park_routine
    _park_routine->_matematica
    _parallelo->_asin
    _matematica->_cos
    _cos->_asin
    _sin->___flsub
    _asin->_atan

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  346221
                    _can_interpreter
                     _configurazione
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   94936
                                             37 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (1) _park_routine                                        12    12      0  245351
                                             73 BANK1     12    12      0
                       _CANisTxReady
                     _CANsendMessage
                            ___fladd
                            ___flneg
                            ___fltol
                           ___xxtofl
                           _can_send
                           _delay_ms
                            _delay_s
                         _matematica
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   86191
                                            130 BANK0      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    7857
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    7677
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      37
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     247
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _matematica                                          32    32      0  133218
                                             45 BANK1     28    28      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                               _asin
                                _cos
 ---------------------------------------------------------------------------------
 (3) _cos                                                 12     8      4   57965
                                             37 BANK1      8     4      4
                            ___fladd
                             ___flge
                               _asin (ARG)
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 17    13      4   49794
                                              8 BANK1     17    13      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4   10191
                                            121 BANK0     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                8     2      6     452
                                             23 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     784
                                            107 BANK0     14    10      4
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     722
                                             97 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6777
                                              0 BANK1      8     0      8
                            ___fladd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   57438
                                            126 BANK0      4     0      4
                                             17 BANK1     20    20      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0     29    25      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   34323
                                            113 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1621
                                             97 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1297
                                             93 BANK0      4     0      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   13009
                                             93 BANK0     16     8      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5541
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    6290
                                             73 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1498
                                            101 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4347
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0     639
                                             31 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     571
                                             29 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    5934
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    1251
                                             12 COMRAM    23    23      0
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_interpreter
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _park_routine
     _CANisTxReady
     _CANsendMessage
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___flneg
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___flneg (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _can_send
       _CANisTxReady
       _CANsendMessage
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
     _matematica
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _cos
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _asin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _atan
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _fabs
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           _sqrt
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _sin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _floor (ARG)
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flge
                 _fabs (ARG)
                   ___flneg
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___xxtofl
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___flneg (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                 _abs (ARG)
               _frexp
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _floor
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___xxtofl
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               _abs (ARG)
             _frexp
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _abs
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     55      EC       7       92.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     84      89       5       85.6%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     23      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BC      20        0.0%
DATA                 0      0     1BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat May 07 22:08:29 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _n 0130  
                           _x 013C                             _z 0140          __end_of_CANSetFilter 1858  
                ___fldiv@sign 0083            delay_s@repeat_loop 0080                            bsr 000FE0  
         ___wmul@multiplicand 0079                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                    _MUX_select 0100                           l402 1F30  
                         l403 1F34                           l500 15B4                           l404 1F40  
                         l501 15B8                           l510 16C4                           l502 15C4  
                         l511 16D0                           l503 15C8                           l520 17DC  
                         l512 16D4                           l504 15D4                           l440 41F8  
                         l432 41B8                           l521 17E0                           l513 16E0  
                         l433 41BC                           l522 17EC                           l514 16E4  
                         l450 4304                           l434 41C8                           l370 1918  
                         l523 17F0                           l515 16F0                           l507 16B0  
                         l451 4310                           l443 42D0                           l435 41CC  
                         l363 1ADC                           l524 17FC                           l508 16B4  
                         l444 42D4                           l436 41D8                           l380 1AF6  
                         l364 186E                           l525 1800                           l509 16C0  
                         l445 42E0                           l437 41DC                           l381 1BEE  
                         l373 1A28                           l365 1872                           l526 180C  
                         l518 17CC                           l470 1276                           l446 42E4  
                         l438 41E8                           l358 50EE                           l390 1CBC  
                         l382 1B7E                           l374 1A2C                           l366 196A  
                         l519 17D0                           l471 1282                           l463 1242  
                         l447 42F0                           l439 41EC                           l359 50F8  
                         l383 1B88                           l375 1A38                           l367 18FA  
                         l480 138C                           l464 1246                           l448 42F4  
                         l384 1B92                           l368 1904                           l481 1390  
                         l465 1252                           l449 4300                           l393 1D76  
                         l385 1B9C                           l369 190E                           l801 4C00  
                         l490 149C                           l482 139C                           l474 135C  
                         l466 1256                           l394 1D7A                           l378 1D60  
                         l491 14A8                           l475 1360                           l467 1262  
                         l395 1E72                           l379 1AF2                           l723 53A4  
                         l715 5DEE                           l492 14AC                           l476 136C  
                         l468 1266                           l556 5F9E                           l396 1E02  
                         l388 1CAC                           l493 14B8                           l485 1478  
                         l477 1370                           l469 1272                           l397 1E0C  
                         l389 1CB0                           l725 525E                           l486 147C  
                         l478 137C                           l398 1E16                           l487 1488  
                         l479 1380                           l399 1E20                           l807 4BC2  
                         l496 1594                           l488 148C                           l736 53A0  
                         l497 1598                           l489 1498                           l569 5F1E  
                         l498 15A4                           l499 15A8                           l771 3754  
                         l755 3442                           l764 34AE                           l765 3632  
                         l758 3480                           l871 5F4A                           l768 36CA  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           _abs 5F28  
                         _asd 0231                           _dir 0232                           _cos 59BC  
                         _jjj 0128                           _kkk 012C                           _msg 014E  
                         _sin 435C                           prod 000FF3                           wreg 000FE8  
                ___flmul@aexp 009D                  ___flmul@bexp 00A2               ?_configurazione 0001  
                ___flmul@sign 009C                  ___flmul@temp 00A7                  ___flmul@prod 00A3  
                __CFG_LVP$OFF 000000                  ___fltol@exp1 00CA                  __CFG_WDT$OFF 000000  
                        ?_abs 0077                          l1071 5E74                          l1330 2C5A  
                        l1314 4662                          l1331 2C4E                          l1332 2C1A  
                        l1078 54EE                          l1423 3272                          l1416 2FD6  
                        l1433 3384                          l1425 32E0                          l1347 2DCE  
                        l1356 2E62                          l1472 4FB6                          l1473 4FCE  
                        l1465 4F5A                          l1386 3E2C                          l1458 4EAE  
                        l1395 3E64                          l1483 5786                          l5005 4242  
                        l1397 3ED2                          l1389 3DD4                          l5031 4314  
                        l5213 13E6                          l5109 103C                          ?_cos 01B2  
                        l5207 13A0                          l5127 10F6                          l5055 0E10  
                        l5241 14BC                          l5145 11B0                          l5073 0EC8  
                        l6201 2B2A                          l5315 173A                          l5091 0F82  
                        l7011 1F24                          l5309 16F4                          l5173 1286  
                        l6213 2B5E                          l6205 2B34                          l5343 1810  
                        l5247 1502                          l7111 3A52                          l5281 161E  
                        l6313 2E16                          l7113 3A8C                          l7105 39C4  
                        l7017 1F44                          l5275 15D8                          l5179 12CC  
                        l6307 2E00                          l6323 2E36                          l6243 2B9A  
                        l6171 2A98                          l6403 2FEA                          l7131 3BA8  
                        l7107 39CC                          l7203 44BC                          l6501 53FC  
                        l6333 2E5C                          l6317 2E22                          l6325 2E3C  
                        l6261 2C3E                          l6181 2AC6                          l7223 5F12  
                        l6351 2EEC                          l6343 2EB8                          l6271 2C7E  
                        l6255 2C2E                          l6407 2FFE                          l7119 3AC8  
                        l7055 3852                          l7207 4532                          l5481 50E6  
                        l7321 5F72                          l6505 544A                          l6281 2CC2  
                        l6257 2C34                          l6177 2ABC                          l5483 50FC  
                        l6515 553A                          l6363 2F10                          l6355 2EF8  
                        l6347 2ECA                          l6195 2B06                          l6523 5EAC  
                        l7163 4CD2                          l7139 3BDE                          l7075 38D0  
                        l7067 389E                          l7235 5542                          l7317 5F60  
                        l6509 549C                          l6357 2EFC                          l6285 2CCC  
                        l6189 2AF2                          l6381 2F6A                          l6373 2F40  
                        l7069 38B0                          l6533 58D6                          l7309 5A44  
                        l7245 5590                          l7413 520E                          l7405 51FA  
                        l5487 5104                          l6703 3DE0                          l6279 2CBC  
                        l6455 3286                          l6391 2F9A                          l6383 2F7C  
                        l7175 4E26                          l7159 4C5E                          l7095 3942  
                        l7087 3912                          l7191 4392                          l7255 5608  
                        l7431 52CC                          l5489 5148                          l6721 3E78  
                        l6641 3C40                          l6289 2CDE                          l6481 336A  
                        l6465 32DA                          l6449 325C                          l7281 4800  
                        l6561 5984                          l6553 5958                          l6609 5020  
                        l6801 56EA                          l7249 55C8                          l7353 4BDE  
                        l7425 52BC                          l4939 5FAC                          l6731 3ECC  
                        l6715 3E4E                          l6635 3C1C                          l6299 2DAE  
                        l6491 33AE                          l6475 3330                          l6379 2F64  
                        l7179 4E3E                          l6563 598E                          l6619 5BA8  
                        l7347 4B84                          l7355 4BE4                          l7603 37EC  
                        l7435 5304                          l4973 412C                          l4957 4076  
                        l6741 3F22                          l6709 3E28                          l6661 3C9E  
                        l6645 3C4A                          l6397 2FBE                          l7293 48E2  
                        l7269 46D2                          l6549 5944                          l7453 5362  
                        l6655 3C7A                          l6479 3356                          l6399 2FC4  
                        l6567 59AA                          l6559 5974                          l6583 4EE6  
                        l7607 3826                          l6745 3F50                          l6665 3CA8  
                        l6489 33A4                          l6585 4EEE                          l6577 4EBE  
                        l7465 33CA                          l6755 3F96                          l6747 3F64  
                        l6595 4F98                          l6587 4EFE                          l6915 1BA6  
                        l7475 3438                          l6757 3F9A                          l6749 3F86  
                        l6685 3D2A                          l6677 3CFC                          l6781 5892  
                        l6597 4FA8                          l6589 4F3C                          l6941 1CC0  
                        l7469 33F2                          l4999 41FC                          l6695 3DA8  
                        l6935 1CA0                          l6839 1922                          l7495 34A6  
                        l6793 56B4                          l6865 1A3C                          l7585 37AC  
                        l6779 57EE                          l6859 1A1C                          l7587 37B8  
                        ?_sin 0195                          l6797 56C8                          l6991 1E2A  
                        _LATA 000F89                          _LATB 000F8A                          _LATC 000F8B  
                        u6020 112C                          u6110 12A6                          u6025 1120  
                        u6115 129A                          u6035 118C                          u8000 31FE  
                        u5620 40A8                          u8005 31F2                          u6510 1830  
                        u6430 1714                          u6350 15F8                          u6270 14DC  
                        u6190 13C0                          u5710 421C                          u9000 1E96  
                        u5625 409C                          u6515 1824                          u6435 1708  
                        u6355 15EC                          u6275 14D0                          u6195 13B4  
                        u5715 4210                          u5635 4108                          u5900 0EFE  
                        u5820 0D8C                          u5580 3FF2                          u9005 1E8A  
                        u9015 1EF6                          u8080 3344                          u9200 4C90  
                        u5905 0EF2                          u5825 0D80                          u5585 3FE6  
                        u5915 0F5E                          u5835 0DEC                          u5595 4052  
                        u5940 0FB8                          u5860 0E44                          u7620 2BE4  
                        u8180 58F6                          u5790 4334                          u7630 2BFC  
                        u8350 5BDA                          u7640 2BFE                          u5945 0FAC  
                        u5865 0E38                          u8185 58EA                          u5955 1018  
                        u5875 0EA4                          u5795 4328                          u5980 1072  
                        u9260 44B6                          u9421 4A18                          u9190 4C8E  
                        u8358 5BDE                          u8630 56D8                          u9270 44B8  
                        u9510 520A                          u9431 4A24                          u8560 3F36  
                        u5985 1066                          u8730 1942                          u5995 10D2  
                        u8740 198E                          u9470 4BDC                          u8735 1936  
                        u9640 33D2                          u8745 1982                          u8755 19EE  
                        u8860 1BC6                          u9580 5314                          u8870 1C12  
                        u9646 33D4                          u8865 1BBA                          u9770 378A  
                        u8875 1C06                          u8885 1C72                          u8990 1E4A  
                        u8995 1E3E                          u9887 5F14           __size_of_CANSetMask 039E  
                        abs@a 0077                          _alfa 011C                          _fabs 5E48  
                        _data 015D                          _beta 0120                          _atan 4C12  
                        _asin 4674                          _main 5DB0                          _asus 0043  
                        cos@f 01B2                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          indf1 000FE7  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        btemp 0048                          _sqrt 3834                          pclat 000FFA  
                        sin@f 0195                          sin@y 0199                          prodh 000FF4  
                        prodl 000FF3                          start 0254                 __CFG_IESO$OFF 000000  
             ___fldiv@new_exp 0088                delay_s@value_s 007F                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000              _CANOperationMode 5FA4                         ??_abs 0079  
                       ??_cos 00E3                         ??_sin 00E3    __size_of_CANreceiveMessage 050C  
                       ?_fabs 00C1                 ___fltol@sign1 00C9                         ?_atan 00D1  
                       ?_asin 00DE               __end_of___fladd 2F22                         ?_main 0001  
             __end_of___fldiv 3FBE               __end_of___flneg 5EBE               __end_of___flmul 33C8  
             __end_of___flsub 5E48               __end_of___fltol 59BC                         ?_sqrt 00C1  
                       _T0CON 000FD5                         _T3CON 000FB1            __size_of_ISR_Bassa 023C  
             __end_of___lwdiv 5C8E                         i1l410 2806                         i1l711 020C  
                       i1l704 0188                         i1l707 0208                         i1l697 009A  
                       i2l690 5AE2                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _TMR3H 000FB3                         _TMR3L 000FB2                         _PORTA 000F80  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
          __end_ofsin@coeff_a 0D41            __end_ofsin@coeff_b 0D51                 __CFG_PWRT$OFF 000000  
            __end_of_ISR_Alta 5B82               __end_of_delay_s 5F80                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
          CANInitialize@flags 0089                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         _bordo 0124                         fabs@d 00C1  
                       _first 0237                         _floor 5674                         _frexp 5B82  
                       _errno 0148                         atan@f 00D1                         atan@x 0191  
                       atan@y 018D                         asin@x 00DE                         asin@y 01AA  
    can_send@data_correction1 0087                __pbitbssCOMRAM 0230                         sin@x2 01A1  
                       tablat 000FF5          __end_of_CANisTxReady 5FA4                         sqrt@a 00C1  
                       sqrt@i 00CA                         sqrt@p 00CF                         status 000FD8  
                ?_park_search 0001               __initialization 5CFA                  __end_of_fabs 5E86  
                __end_of_atan 4E64                  __end_of_asin 4986                  __end_of_main 5E00  
                __end_of_sqrt 3BFE                        ??_fabs 00C5                        ??_atan 00D5  
                      ??_asin 00E2                        ??_main 00E4             _park_routine$3740 01DE  
           _park_routine$3739 01DA                        ??_sqrt 00C5                 __activetblptr 000003  
           _CANisTxReady$2845 0077                        _ADCON1 000FC1                        ?_floor 00D9  
                      ?_frexp 0077                        _CANCON 000F6F            _distance_received1 0235  
             __CFG_BBSIZ$1024 000000             _spazio_parcheggio 01E6                        i1l6111 01CA  
                      i1l6107 01C2                        i1l6117 01F2                        i1l6037 008C  
                      i1l6071 00D6                        i1l6067 00CE                        i1l5701 29F0  
                      i1l6093 0164                        i2l1278 5C84                        i1l5713 2A44  
                      i1l5705 2A0C                        i1l5715 2A76                        i1l5651 27CE  
                      i1l5643 2792                        i1l5635 2756                        i1l5627 26E6  
                      i1l6099 0192                        i1l5709 2A28                        i1l5653 2800  
                      i1l5647 27B0                        i1l5639 2774                        i1l5697 29D4  
                      i1l5689 2966                        i2l7621 5C40                        i2l7631 5C76  
                      i2l7623 5C46                        i2l7619 5C34                        i2l7651 5B44  
                      _RXB0D0 000F66                        _RXB0D1 000F67                        _RXB0D2 000F68  
                      _RXB0D3 000F69                        _RXB0D4 000F6A                        _RXB1D0 000F56  
                      _RXB0D5 000F6B                        _RXB1D1 000F57                        _RXB0D6 000F6C  
                      _RXB1D2 000F58                        _RXB0D7 000F6D                        _RXB1D3 000F59  
                      _RXB1D4 000F5A                        _RXB1D5 000F5B                        _RXB1D6 000F5C  
                      _RXB1D7 000F5D                        _TXB0D0 000F46                        _TXB0D1 000F47  
                      _TXB0D2 000F48                        _TXB0D3 000F49                        _TXB1D0 000F36  
                      _TXB0D4 000F4A                        _TXB1D1 000F37                        _TXB0D5 000F4B  
                      _TXB1D2 000F38                        _TXB0D6 000F4C                        _TXB1D3 000F39  
                      _TXB0D7 000F4D                        _TXB2D0 000F26                        _TXB1D4 000F3A  
                      _TXB2D1 000F27                        _TXB1D5 000F3B                        _TXB2D2 000F28  
                      _TXB1D6 000F3C                        _TXB2D3 000F29                        _TXB1D7 000F3D  
                      _TXB2D4 000F2A                        _TXB2D5 000F2B                        _TXB2D6 000F2C  
                      _TXB2D7 000F2D            CANsendMessage@data 007B              __end_of_can_send 5674  
          CANsendMessage@tamp 0083              __end_of___xxtofl 5032             __end_of_ISR_Bassa 0254  
            __end_of_delay_ms 5F28         __size_of_CANSetFilter 0B06                __CFG_XINST$OFF 000000  
                      ___flge 53AE               _data_correction 016D                     ??___fladd 00B1  
                      ___wmul 5EBE                     ??___fldiv 007F                     ??___flneg 00C1  
              __CFG_STVREN$ON 000000                     ??___flmul 0098                     ??___flsub 00E3  
                   ??___fltol 00C5                     ??___lwdiv 0064                  ??_CANSetMask 007C  
                      _gianni 0044                        _raggio 01E8                        clear_0 5D00  
                      clear_1 5D1A                     ??_delay_s 007F                        floor@i 00DD  
                      floor@x 00D9               __CFG_BOREN$BOHW 000000                        sin@sgn 01A5  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                  _CANSetFilter 0D52                    ___flge@ff1 00C5  
                  ___flge@ff2 00C9                  ___xxtofl@arg 00D5                  ___xxtofl@exp 00D4  
                ___xxtofl@val 00CB                    __accesstop 0060       __end_of__initialization 5D52  
          __end_of_CANSetMask 435C               __CFG_PBADEN$OFF 000000                    ___flneg@f1 00BD  
               ?_park_routine 0001                  eval_poly@res 00C9                 ___rparam_used 000000  
                  ___fltol@f1 00C1                __pcstackCOMRAM 0001                     ?_ISR_Alta 0001  
                __pidataBANK0 5FC4                  __pidataBANK1 5FBA                 __end_of_floor 5798  
               __end_of_frexp 5C16              ??_configurazione 0091         CANSetFilter@numBuffer 0080  
                _actual_speed 0144         __size_of_CANisTxReady 0024                       ??_floor 00DD  
                     ??_frexp 007D      __end_of_CANOperationMode 5FBA                    __pbssBANK0 00E4  
                  __pbssBANK1 0100               _sensor_distance 0024            __size_of_eval_poly 0118  
                  _data_brake 0165                ??_park_routine 01D6                 ISR_Bassa@gigi 0022  
     __size_of_CANsendMessage 078C                    _data_speed 0175                    _activation 0230  
    __size_of_can_interpreter 0054            __size_of_parallelo 028C          __size_of_park_search 01B6  
           _old_alignment_gap 0134                    ??_ISR_Alta 0067                       ?___flge 00C5  
                     ?___wmul 0077                       _CANSTAT 000F6E                  _CANisTxReady 5F80  
                     _BRGCON1 000F70                       _BRGCON2 000F71                       _BRGCON3 000F72  
                   ?_can_send 0001                     ?___xxtofl 00CB        __size_of_CANInitialize 01C6  
                   ?_delay_ms 007D                       _RXB0DLC 000F65                       _RXB1DLC 000F55  
                     _RXB0CON 000F60                       _RXB1CON 000F50                       _TXB0DLC 000F45  
                     _TXB1DLC 000F35                       _TXB2DLC 000F25           CANsendMessage@flags 007E  
                     __Hparam 0000                    _left_speed 003C                       __Lparam 0000  
            delay_ms@value_ms 007D                       _Pminimo 0118               __size_of___flge 0190  
                  _matematica 1FE4                       ___fladd 2A7A                       ___fldiv 3BFE  
                     ___flneg 5E86                       ___flmul 2F22                       ___flsub 5E00  
                     ___fltol 58B0               __size_of___wmul 0036                       ___lwdiv 5C16  
                __psmallconst 0D00          CANInitialize@propSeg 008E                       __pcinit 5CFA  
           __end_of_eval_poly 58B0                       _delay_s 5F54                       __ramtop 0D00  
                     __ptext0 5DB0                       __ptext1 51F8                       __ptext2 33C8  
                     __ptext3 4986                       __ptext4 553E                       __ptext5 1858  
                     __ptext6 5F80                       __ptext7 5F28                       __ptext8 1FE4  
                     __ptext9 59BC                     _T0CONbits 000FD5                    ??_can_send 0087  
                __size_of_abs 002C                  __size_of_cos 00E4               atan@val_squared 0196  
                __size_of_sin 0318                    ??___xxtofl 00CF                       atan@val 019A  
           __end_of_parallelo 4C12                    ??_delay_ms 007F                       asin@sgn 019E  
      CANreceiveMessage@error 000B               _start_operation 023B                __pintcode_body 5AA0  
        end_of_initialization 5D52                       int_func 5AA0                 _CANInitialize 5032  
                   _ISR_Bassa 0018                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE                       sqrt@grs 00D0  
                     sqrt@exp 00D4             ??_can_interpreter 0077       _steering_correction_dir 023C  
                   _PORTBbits 000F81                CANSetMask@mask 0077                CANSetMask@tamp 0081  
                _distance_set 0110                CANSetMask@type 007B          __end_of_park_routine 3834  
                 ___fladd@grs 00BC                 ___xxtofl@sign 00D3                     _TRISBbits 000F93  
                 ___fldiv@grs 008A                   ___fldiv@rem 0084                     _MUX_index 0042  
                  _pulse_time 014A       _clock_counter_reference 0034                   ___flmul@grs 009E  
              _CANsendMessage 1858              CANInitialize@BRP 0088              CANInitialize@SJW 0087  
              ?_CANInitialize 0085                    ?_ISR_Bassa 0001                   ?_matematica 0001  
              __end_of___flge 553E             __size_of_ISR_Alta 5B7A                __end_of___wmul 5EF4  
                  floor@expon 00E1           start_initialization 5CFA                    eval_poly@d 00C1  
                  eval_poly@n 00C3                    eval_poly@x 00BD                   __end_of_abs 5F54  
                 __end_of_cos 5AA0                   __end_of_sin 4674           CANSetMask@numBuffer 0080  
               _data_speed_rx 0108        __end_of_CANsendMessage 1FE4             ?_CANOperationMode 0001  
               _data_steering 017D                    frexp@value 0077            ??_CANOperationMode 0077  
           _distance_received 0234    CANInitialize@FilterConfig1 008F    CANInitialize@FilterConfig2 0090  
         _steering_correction 0045                      ??___flge 00CD                      ??___wmul 007B  
                 __pdataBANK0 00E8                   __pdataBANK1 01E2              __CFG_LPT1OSC$OFF 000000  
                   ___fladd@a 00AD                     ___fladd@b 00A9        CANInitialize@phaseSeg1 0085  
      CANInitialize@phaseSeg2 0086                     ___fldiv@a 007B                     ___fldiv@b 0077  
                   ___flmul@a 0094                     ___flmul@b 0090                   __pbssCOMRAM 0024  
                   ___flsub@a 0191                     ___flsub@b 018D                 __pcstackBANK0 0060  
               __pcstackBANK1 018D                   _BRGCON2bits 000F71                   _BRGCON3bits 000F72  
           __size_of_can_send 0136             __size_of___xxtofl 01CE             __size_of_delay_ms 0034  
             ?_CANsendMessage 0077           __size_of_matematica 058A               ??_CANInitialize 008A  
                   _asin$3750 01A2                     _asin$3748 01AE                     _asin$3749 01A6  
                  sin@coeff_a 0D2D                    sin@coeff_b 0D41                 ??_park_search 01B2  
               _alignment_gap 00E4            CANSetFilter@filter 0077                     _data_test 0185  
            ___lwdiv@dividend 0060                    ISR_Bassa@i 0023                   ??_ISR_Bassa 000D  
                   __pintcode 0008                      ?___fladd 00A9                      ?___fldiv 0077  
                    ?___flneg 00BD                      ?___flmul 0090                      ?___flsub 018D  
                    ?___fltol 00C1         __size_of_park_routine 046C                      ?___lwdiv 0060  
                 __pintcodelo 0018                      ?_delay_s 0001                   __smallconst 0D00  
                 _COMSTATbits 000F74                     _eval_poly 5798                     _larghezza 01E2  
            ___lwdiv@quotient 0065                __size_of_floor 0124                __size_of_frexp 0094  
     __size_of_configurazione 006C                     _parallelo 4986         CANreceiveMessage@tamp 000C  
              _prima_sterzata 0138                ___wmul@product 007B                      _LATBbits 000F8A  
             _can_interpreter 5D5C                     atan@recip 0195                  _park_routine 33C8  
_delay_quartz_frequency_value 00E8                      _IPR3bits 000FA5                      _PIE3bits 000FA3  
                    i1u700_25 2A50                      i1u680_20 2626                      i1u680_26 2628  
                    i1u681_20 2654                      i1u681_26 2656                      i1u691_20 28AE  
                    i1u683_25 266A                      i1u691_26 28B0                      i1u692_20 28D8  
                    i1u692_26 28DA                      _PIR3bits 000FA4                      i1u694_25 28EC  
                    i1u689_25 27DA                      i1u989_27 00BC                      _RXB0EIDH 000F63  
                    _RXB0EIDL 000F64                      _RXB1EIDH 000F53                      _RXB1EIDL 000F54  
                    _ISR_Alta 0008                     _set_speed 014C                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                      _RXB0SIDH 000F61                      _RXB0SIDL 000F62  
                    _RXF0EIDH 000F02                      _RXB1SIDH 000F51                      _RXF0EIDL 000F03  
                    _RXB1SIDL 000F52                      _RXF1EIDH 000F06                      _RXF1EIDL 000F07  
                    _RXF2EIDH 000F0A                      _RXF2EIDL 000F0B                      _RXF3EIDH 000F0E  
                    _RXF3EIDL 000F0F                      _RXF4EIDH 000F12                      _RXF4EIDL 000F13  
                    _RXF5EIDH 000F16                      _RXF5EIDL 000F17                      _RXF0SIDH 000F00  
                    _RXF0SIDL 000F01           __end_of_park_search 53AE                      _TXB0EIDH 000F43  
                    _RXF1SIDH 000F04                      _TXB0EIDL 000F44                      _RXF1SIDL 000F05  
                    _TXB1EIDH 000F33                      _RXF2SIDH 000F08                      _TXB1EIDL 000F34  
                    _RXF2SIDL 000F09                      _TXB2EIDH 000F23                      _RXF3SIDH 000F0C  
                    _TXB2EIDL 000F24                      _RXF3SIDL 000F0D                      _RXF4SIDH 000F10  
                    _RXF4SIDL 000F11                      _RXF5SIDH 000F14                      _RXF5SIDL 000F15  
                    _RXM0EIDH 000F1A                      _RXM0EIDL 000F1B                      _TXB0SIDH 000F41  
                    _RXM1EIDH 000F1E                      _TXB0SIDL 000F42                      _RXM1EIDL 000F1F  
                    _TXB1SIDH 000F31                      _TXB1SIDL 000F32                      _TXB2SIDH 000F21  
                    _TXB2SIDL 000F22                      _RXM0SIDH 000F18                      _RXM0SIDL 000F19  
                    _RXM1SIDH 000F1C                      _RXM1SIDL 000F1D                   _distance_dx 0038  
                 _distance_sx 003A                      _RXERRCNT 000F75                      _TXERRCNT 000F76  
           ___wmul@multiplier 0077                    ?_eval_poly 00BD           __end_ofatan@coeff_a 0D19  
         __end_ofatan@coeff_b 0D2D                 ?_CANSetFilter 0077                   _INTCON2bits 000FF1  
                   copy_data0 5D34                    _CANCONbits 000F6F                    ?_parallelo 0001  
            _distance_average 0036                     frexp@eptr 007B                      __Hparam0 0000  
                    __Lparam0 0000                  _RXB0SIDLbits 000F62                  _RXB1SIDLbits 000F52  
                ??_matematica 00E3                 _request_sent1 023A              __size_of___fladd 04A8  
                  _CANSetMask 3FBE              __size_of___fldiv 03C0              __size_of___flneg 0038  
            __size_of___flmul 04A6              __size_of___flsub 0048              __size_of___fltol 010C  
                    _cos$3751 01B6              __size_of___lwdiv 0078              __size_of_delay_s 002C  
                    _can_send 553E                      ___xxtofl 4E64                  _RXF0SIDLbits 000F01  
                    _delay_ms 5EF4               ___lwdiv@divisor 0062                  _RXF1SIDLbits 000F05  
             ___lwdiv@counter 0064                ??_CANSetFilter 007C                      __ptext10 435C  
                    __ptext11 5674                      __ptext20 5E86                      __ptext12 5B82  
                    __ptext21 5798                      __ptext13 4E64                      __ptext30 5032  
                    __ptext22 2F22                      __ptext14 58B0                      __ptext31 3FBE  
                    __ptext23 2A7A                      __ptext15 5E00                      __ptext32 0D52  
                    __ptext24 53AE                      __ptext16 4674                      __ptext33 5FA4  
                    __ptext25 3BFE                      __ptext17 3834                      __ptext34 5D5C  
                    __ptext26 5F54                      __ptext18 4C12                      __ptext27 5EF4  
                    __ptext19 5E48                      __ptext36 256E                      __ptext28 5EBE  
                    __ptext29 5C8E                      __ptext38 5C16                  _RXF2SIDLbits 000F09  
                    _sin$3752 019D       __end_of_can_interpreter 5DB0                  _RXF3SIDLbits 000F0D  
                    _distance 0146            __end_of_matematica 256E                  _RXF4SIDLbits 000F11  
                _RXF5SIDLbits 000F15      CANsendMessage@dataLength 007D                 __size_of_fabs 003E  
               __size_of_atan 0252                 __size_of_asin 0312                 __size_of_main 0050  
               __size_of_sqrt 03CA                   _park_search 51F8          CANreceiveMessage@msg 0001  
                _TXB0SIDLbits 000F42                  _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22  
                    int$flags 0048     __size_of_CANOperationMode 0016                 ?_CANisTxReady 0001  
                 atan@coeff_a 0D01                   atan@coeff_b 0D19                   _RXB0DLCbits 000F65  
                 _RXB1DLCbits 000F55                  _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60  
                 _RXB1CONbits 000F50             _CANreceiveMessage 256E                  _RXM1SIDLbits 000F1D  
                  _INTCONbits 000FF2                   ??_eval_poly 00C5              ??_CANsendMessage 007F  
          ?_CANreceiveMessage 0001                  _request_sent 0239                     sqrt@tfrac 00CB  
              _configurazione 5C8E      CANsendMessage@identifier 0077                   ??_parallelo 00E2  
                    intlevel1 0000                      intlevel2 0000              CANSetFilter@tamp 0081  
            CANSetFilter@type 007B           ??_CANreceiveMessage 0003           _old_data_correction 0238  
                 _TXB0DLCbits 000F45                   _right_speed 003E                   _TXB1DLCbits 000F35  
                 _TXB0CONbits 000F40                   _TXB2DLCbits 000F25                   _TXB1CONbits 000F30  
                 _TXB2CONbits 000F20          CANOperationMode@mode 0077                   ?_CANSetMask 0077  
              ??_CANisTxReady 0077                _distance_error 0233               _matematica$3741 01BA  
             _matematica$3742 01BE               _matematica$3743 01C2               _matematica$3744 01C6  
             _matematica$3745 01D2               _matematica$3746 01CA               _matematica$3747 01CE  
   __end_of_CANreceiveMessage 2A7A                      sqrt@frac 00DA                      sqrt@sign 00C9  
                    sqrt@root 00D6                   _timerValue2 0040        __end_of_configurazione 5CFA  
               ___fladd@signs 00B9                 _distance_wait 0236              ?_can_interpreter 0001  
                ___fladd@aexp 00BA                  ___fladd@bexp 00BB         __end_of_CANInitialize 51F8  
