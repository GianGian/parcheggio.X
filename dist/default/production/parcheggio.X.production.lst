

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat May 14 18:33:25 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    59                           	psect	param0,global,class=BANK0,space=1,delta=1
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61  0000                     
    62                           	psect	idataBANK0
    63  005FD8                     __pidataBANK0:
    64                           	opt stack 0
    65                           
    66                           ;initializer for _delay_quartz_frequency_value
    67  005FD8  10                 	db	16
    68                           
    69                           	psect	idataBANK1
    70  005FCE                     __pidataBANK1:
    71                           	opt stack 0
    72                           
    73                           ;initializer for _larghezza
    74  005FCE  0000               	dw	0
    75  005FD0  420C               	dw	16908
    76                           
    77                           ;initializer for _spazio_parcheggio
    78  005FD2  0064               	dw	100
    79                           
    80                           ;initializer for _raggio
    81  005FD4  0000               	dw	0
    82  005FD6  4250               	dw	16976
    83                           
    84                           	psect	smallconst
    85  000D00                     __psmallconst:
    86                           	opt stack 0
    87  000D00  00                 	db	0
    88  000D01                     atan@coeff_a:
    89                           	opt stack 0
    90  000D01  3C06               	dw	15366
    91  000D03  4204               	dw	16900
    92  000D05  9F7D               	dw	40829
    93  000D07  426A               	dw	17002
    94  000D09  905C               	dw	36956
    95  000D0B  4201               	dw	16897
    96  000D0D  4D60               	dw	19808
    97  000D0F  40BB               	dw	16571
    98  000D11  EC51               	dw	60497
    99  000D13  3E47               	dw	15943
   100  000D15  8DDE               	dw	36318
   101  000D17  BB1F               	dw	47903
   102  000D19                     __end_ofatan@coeff_a:
   103                           	opt stack 0
   104  000D19                     atan@coeff_b:
   105                           	opt stack 0
   106  000D19  3C06               	dw	15366
   107  000D1B  4204               	dw	16900
   108  000D1D  59C0               	dw	22976
   109  000D1F  428B               	dw	17035
   110  000D21  0474               	dw	1140
   111  000D23  4244               	dw	16964
   112  000D25  9BF9               	dw	39929
   113  000D27  414F               	dw	16719
   114  000D29  0000               	dw	0
   115  000D2B  3F80               	dw	16256
   116  000D2D                     __end_ofatan@coeff_b:
   117                           	opt stack 0
   118  000D2D                     sin@coeff_a:
   119                           	opt stack 0
   120  000D2D  F3EC               	dw	62444
   121  000D2F  484A               	dw	18506
   122  000D31  9535               	dw	38197
   123  000D33  C795               	dw	51093
   124  000D35  C117               	dw	49431
   125  000D37  45DC               	dw	17884
   126  000D39  DBFD               	dw	56317
   127  000D3B  C36D               	dw	50029
   128  000D3D  B372               	dw	45938
   129  000D3F  4033               	dw	16435
   130  000D41                     __end_ofsin@coeff_a:
   131                           	opt stack 0
   132  000D41                     sin@coeff_b:
   133                           	opt stack 0
   134  000D41  342B               	dw	13355
   135  000D43  4801               	dw	18433
   136  000D45  9D7F               	dw	40319
   137  000D47  45B0               	dw	17840
   138  000D49  FFE7               	dw	65511
   139  000D4B  42D9               	dw	17113
   140  000D4D  0000               	dw	0
   141  000D4F  3F80               	dw	16256
   142  000D51                     __end_ofsin@coeff_b:
   143                           	opt stack 0
   144  0000                     _RXB1CON	set	3920
   145  0000                     _RXB1CONbits	set	3920
   146  0000                     _RXB1D0	set	3926
   147  0000                     _RXB1D1	set	3927
   148  0000                     _RXB1D2	set	3928
   149  0000                     _RXB1D3	set	3929
   150  0000                     _RXB1D4	set	3930
   151  0000                     _RXB1D5	set	3931
   152  0000                     _RXB1D6	set	3932
   153  0000                     _RXB1D7	set	3933
   154  0000                     _RXB1DLC	set	3925
   155  0000                     _RXB1DLCbits	set	3925
   156  0000                     _RXB1EIDH	set	3923
   157  0000                     _RXB1EIDL	set	3924
   158  0000                     _RXB1SIDH	set	3921
   159  0000                     _RXB1SIDL	set	3922
   160  0000                     _RXB1SIDLbits	set	3922
   161  0000                     _RXF0EIDH	set	3842
   162  0000                     _RXF0EIDL	set	3843
   163  0000                     _RXF0SIDH	set	3840
   164  0000                     _RXF0SIDL	set	3841
   165  0000                     _RXF0SIDLbits	set	3841
   166  0000                     _RXF1EIDH	set	3846
   167  0000                     _RXF1EIDL	set	3847
   168  0000                     _RXF1SIDH	set	3844
   169  0000                     _RXF1SIDL	set	3845
   170  0000                     _RXF1SIDLbits	set	3845
   171  0000                     _RXF2EIDH	set	3850
   172  0000                     _RXF2EIDL	set	3851
   173  0000                     _RXF2SIDH	set	3848
   174  0000                     _RXF2SIDL	set	3849
   175  0000                     _RXF2SIDLbits	set	3849
   176  0000                     _RXF3EIDH	set	3854
   177  0000                     _RXF3EIDL	set	3855
   178  0000                     _RXF3SIDH	set	3852
   179  0000                     _RXF3SIDL	set	3853
   180  0000                     _RXF3SIDLbits	set	3853
   181  0000                     _RXF4EIDH	set	3858
   182  0000                     _RXF4EIDL	set	3859
   183  0000                     _RXF4SIDH	set	3856
   184  0000                     _RXF4SIDL	set	3857
   185  0000                     _RXF4SIDLbits	set	3857
   186  0000                     _RXF5EIDH	set	3862
   187  0000                     _RXF5EIDL	set	3863
   188  0000                     _RXF5SIDH	set	3860
   189  0000                     _RXF5SIDL	set	3861
   190  0000                     _RXF5SIDLbits	set	3861
   191  0000                     _RXM0EIDH	set	3866
   192  0000                     _RXM0EIDL	set	3867
   193  0000                     _RXM0SIDH	set	3864
   194  0000                     _RXM0SIDL	set	3865
   195  0000                     _RXM0SIDLbits	set	3865
   196  0000                     _RXM1EIDH	set	3870
   197  0000                     _RXM1EIDL	set	3871
   198  0000                     _RXM1SIDH	set	3868
   199  0000                     _RXM1SIDL	set	3869
   200  0000                     _RXM1SIDLbits	set	3869
   201  0000                     _TXB0CONbits	set	3904
   202  0000                     _TXB0D0	set	3910
   203  0000                     _TXB0D1	set	3911
   204  0000                     _TXB0D2	set	3912
   205  0000                     _TXB0D3	set	3913
   206  0000                     _TXB0D4	set	3914
   207  0000                     _TXB0D5	set	3915
   208  0000                     _TXB0D6	set	3916
   209  0000                     _TXB0D7	set	3917
   210  0000                     _TXB0DLC	set	3909
   211  0000                     _TXB0DLCbits	set	3909
   212  0000                     _TXB0EIDH	set	3907
   213  0000                     _TXB0EIDL	set	3908
   214  0000                     _TXB0SIDH	set	3905
   215  0000                     _TXB0SIDL	set	3906
   216  0000                     _TXB0SIDLbits	set	3906
   217  0000                     _TXB1CONbits	set	3888
   218  0000                     _TXB1D0	set	3894
   219  0000                     _TXB1D1	set	3895
   220  0000                     _TXB1D2	set	3896
   221  0000                     _TXB1D3	set	3897
   222  0000                     _TXB1D4	set	3898
   223  0000                     _TXB1D5	set	3899
   224  0000                     _TXB1D6	set	3900
   225  0000                     _TXB1D7	set	3901
   226  0000                     _TXB1DLC	set	3893
   227  0000                     _TXB1DLCbits	set	3893
   228  0000                     _TXB1EIDH	set	3891
   229  0000                     _TXB1EIDL	set	3892
   230  0000                     _TXB1SIDH	set	3889
   231  0000                     _TXB1SIDL	set	3890
   232  0000                     _TXB1SIDLbits	set	3890
   233  0000                     _TXB2CONbits	set	3872
   234  0000                     _TXB2D0	set	3878
   235  0000                     _TXB2D1	set	3879
   236  0000                     _TXB2D2	set	3880
   237  0000                     _TXB2D3	set	3881
   238  0000                     _TXB2D4	set	3882
   239  0000                     _TXB2D5	set	3883
   240  0000                     _TXB2D6	set	3884
   241  0000                     _TXB2D7	set	3885
   242  0000                     _TXB2DLC	set	3877
   243  0000                     _TXB2DLCbits	set	3877
   244  0000                     _TXB2EIDH	set	3875
   245  0000                     _TXB2EIDL	set	3876
   246  0000                     _TXB2SIDH	set	3873
   247  0000                     _TXB2SIDL	set	3874
   248  0000                     _TXB2SIDLbits	set	3874
   249  0000                     _ADCON1	set	4033
   250  0000                     _BRGCON1	set	3952
   251  0000                     _BRGCON2	set	3953
   252  0000                     _BRGCON2bits	set	3953
   253  0000                     _BRGCON3	set	3954
   254  0000                     _BRGCON3bits	set	3954
   255  0000                     _CANCON	set	3951
   256  0000                     _CANCONbits	set	3951
   257  0000                     _CANSTAT	set	3950
   258  0000                     _COMSTATbits	set	3956
   259  0000                     _INTCON2bits	set	4081
   260  0000                     _INTCONbits	set	4082
   261  0000                     _IPR3bits	set	4005
   262  0000                     _LATA	set	3977
   263  0000                     _LATB	set	3978
   264  0000                     _LATBbits	set	3978
   265  0000                     _LATC	set	3979
   266  0000                     _PIE3bits	set	4003
   267  0000                     _PIR3bits	set	4004
   268  0000                     _PORTA	set	3968
   269  0000                     _PORTBbits	set	3969
   270  0000                     _RCONbits	set	4048
   271  0000                     _RXB0CON	set	3936
   272  0000                     _RXB0CONbits	set	3936
   273  0000                     _RXB0D0	set	3942
   274  0000                     _RXB0D1	set	3943
   275  0000                     _RXB0D2	set	3944
   276  0000                     _RXB0D3	set	3945
   277  0000                     _RXB0D4	set	3946
   278  0000                     _RXB0D5	set	3947
   279  0000                     _RXB0D6	set	3948
   280  0000                     _RXB0D7	set	3949
   281  0000                     _RXB0DLC	set	3941
   282  0000                     _RXB0DLCbits	set	3941
   283  0000                     _RXB0EIDH	set	3939
   284  0000                     _RXB0EIDL	set	3940
   285  0000                     _RXB0SIDH	set	3937
   286  0000                     _RXB0SIDL	set	3938
   287  0000                     _RXB0SIDLbits	set	3938
   288  0000                     _RXERRCNT	set	3957
   289  0000                     _T0CON	set	4053
   290  0000                     _T0CONbits	set	4053
   291  0000                     _T3CON	set	4017
   292  0000                     _TMR0H	set	4055
   293  0000                     _TMR0L	set	4054
   294  0000                     _TMR3H	set	4019
   295  0000                     _TMR3L	set	4018
   296  0000                     _TRISA	set	3986
   297  0000                     _TRISB	set	3987
   298  0000                     _TRISBbits	set	3987
   299  0000                     _TRISC	set	3988
   300  0000                     _TXERRCNT	set	3958
   301                           
   302                           ; #config settings
   303  000D51  00                 	db	0	; dummy byte at the end
   304  0000                     
   305                           	psect	cinit
   306  005D0E                     __pcinit:
   307                           	opt stack 0
   308  005D0E                     start_initialization:
   309                           	opt stack 0
   310  005D0E                     __initialization:
   311                           	opt stack 0
   312                           
   313                           ; Clear objects allocated to BANK1 (141 bytes)
   314  005D0E  EE01  F000         	lfsr	0,__pbssBANK1
   315  005D12  0E8D               	movlw	141
   316  005D14                     clear_0:
   317  005D14  6AEE               	clrf	postinc0,c
   318  005D16  06E8               	decf	wreg,f,c
   319  005D18  E1FD               	bnz	clear_0
   320                           
   321                           ; Clear objects allocated to BANK0 (4 bytes)
   322  005D1A  0100               	movlb	0
   323  005D1C  6BE7               	clrf	(__pbssBANK0+3)& (0+255),b
   324  005D1E  6BE6               	clrf	(__pbssBANK0+2)& (0+255),b
   325  005D20  6BE5               	clrf	(__pbssBANK0+1)& (0+255),b
   326  005D22  6BE4               	clrf	__pbssBANK0& (0+255),b
   327                           
   328                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   329  005D24  6A47               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   330  005D26  6A46               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   331                           
   332                           ; Clear objects allocated to COMRAM (34 bytes)
   333  005D28  EE00  F024         	lfsr	0,__pbssCOMRAM
   334  005D2C  0E22               	movlw	34
   335  005D2E                     clear_1:
   336  005D2E  6AEE               	clrf	postinc0,c
   337  005D30  06E8               	decf	wreg,f,c
   338  005D32  E1FD               	bnz	clear_1
   339                           
   340                           ; Initialize objects allocated to BANK1 (10 bytes)
   341                           ; load TBLPTR registers with __pidataBANK1
   342  005D34  0ECE               	movlw	low __pidataBANK1
   343  005D36  6EF6               	movwf	tblptrl,c
   344  005D38  0E5F               	movlw	high __pidataBANK1
   345  005D3A  6EF7               	movwf	tblptrh,c
   346  005D3C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   347  005D3E  6EF8               	movwf	tblptru,c
   348  005D40  EE01  F0E2         	lfsr	0,__pdataBANK1
   349  005D44  EE10 F00A          	lfsr	1,10
   350  005D48                     copy_data0:
   351  005D48  0009               	tblrd		*+
   352  005D4A  CFF5 FFEE          	movff	tablat,postinc0
   353  005D4E  50E5               	movf	postdec1,w,c
   354  005D50  50E1               	movf	fsr1l,w,c
   355  005D52  E1FA               	bnz	copy_data0
   356                           
   357                           ; Initialize objects allocated to BANK0 (1 bytes)
   358                           ; load TBLPTR registers with __pidataBANK0
   359  005D54  0ED8               	movlw	low __pidataBANK0
   360  005D56  6EF6               	movwf	tblptrl,c
   361  005D58  0E5F               	movlw	high __pidataBANK0
   362  005D5A  6EF7               	movwf	tblptrh,c
   363  005D5C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   364  005D5E  6EF8               	movwf	tblptru,c
   365  005D60  0009               	tblrd		*+	;fetch initializer
   366  005D62  CFF5 F0E8          	movff	tablat,__pdataBANK0
   367  005D66                     end_of_initialization:
   368                           	opt stack 0
   369  005D66                     __end_of__initialization:
   370                           	opt stack 0
   371  005D66  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   372  005D68  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   373  005D6A  0100               	movlb	0
   374  005D6C  EFE2  F02E         	goto	_main	;jump to C main() function
   375                           tblptru	equ	0xFF8
   376                           tblptrh	equ	0xFF7
   377                           tblptrl	equ	0xFF6
   378                           tablat	equ	0xFF5
   379                           postinc0	equ	0xFEE
   380                           wreg	equ	0xFE8
   381                           postdec1	equ	0xFE5
   382                           fsr1l	equ	0xFE1
   383                           
   384                           	psect	bitbssCOMRAM
   385  000230                     __pbitbssCOMRAM:
   386                           	opt stack 0
   387  000230                     _activation:
   388                           	opt stack 0
   389  000230                     	ds	1
   390  000231                     _asd:
   391                           	opt stack 0
   392  000231                     	ds	1
   393  000232                     _dir:
   394                           	opt stack 0
   395  000232                     	ds	1
   396  000233                     _distance_error:
   397                           	opt stack 0
   398  000233                     	ds	1
   399  000234                     _distance_received:
   400                           	opt stack 0
   401  000234                     	ds	1
   402  000235                     _distance_received1:
   403                           	opt stack 0
   404  000235                     	ds	1
   405  000236                     _distance_wait:
   406                           	opt stack 0
   407  000236                     	ds	1
   408  000237                     _first:
   409                           	opt stack 0
   410  000237                     	ds	1
   411  000238                     _old_data_correction:
   412                           	opt stack 0
   413  000238                     	ds	1
   414  000239                     _request_sent:
   415                           	opt stack 0
   416  000239                     	ds	1
   417  00023A                     _request_sent1:
   418                           	opt stack 0
   419  00023A                     	ds	1
   420  00023B                     _start_operation:
   421                           	opt stack 0
   422  00023B                     	ds	1
   423  00023C                     _steering_correction_dir:
   424                           	opt stack 0
   425  00023C                     	ds	1
   426                           tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           tblptrl	equ	0xFF6
   429                           tablat	equ	0xFF5
   430                           postinc0	equ	0xFEE
   431                           wreg	equ	0xFE8
   432                           postdec1	equ	0xFE5
   433                           fsr1l	equ	0xFE1
   434                           
   435                           	psect	bssCOMRAM
   436  000024                     __pbssCOMRAM:
   437                           	opt stack 0
   438  000024                     _sensor_distance:
   439                           	opt stack 0
   440  000024                     	ds	16
   441  000034                     _clock_counter_reference:
   442                           	opt stack 0
   443  000034                     	ds	2
   444  000036                     _distance_average:
   445                           	opt stack 0
   446  000036                     	ds	2
   447  000038                     _distance_dx:
   448                           	opt stack 0
   449  000038                     	ds	2
   450  00003A                     _distance_sx:
   451                           	opt stack 0
   452  00003A                     	ds	2
   453  00003C                     _left_speed:
   454                           	opt stack 0
   455  00003C                     	ds	2
   456  00003E                     _right_speed:
   457                           	opt stack 0
   458  00003E                     	ds	2
   459  000040                     _timerValue2:
   460                           	opt stack 0
   461  000040                     	ds	2
   462  000042                     _MUX_index:
   463                           	opt stack 0
   464  000042                     	ds	1
   465  000043                     _asus:
   466                           	opt stack 0
   467  000043                     	ds	1
   468  000044                     _gianni:
   469                           	opt stack 0
   470  000044                     	ds	1
   471  000045                     _steering_correction:
   472                           	opt stack 0
   473  000045                     	ds	1
   474                           tblptru	equ	0xFF8
   475                           tblptrh	equ	0xFF7
   476                           tblptrl	equ	0xFF6
   477                           tablat	equ	0xFF5
   478                           postinc0	equ	0xFEE
   479                           wreg	equ	0xFE8
   480                           postdec1	equ	0xFE5
   481                           fsr1l	equ	0xFE1
   482                           
   483                           	psect	bssBANK0
   484  0000E4                     __pbssBANK0:
   485                           	opt stack 0
   486  0000E4                     _alignment_gap:
   487                           	opt stack 0
   488  0000E4                     	ds	4
   489                           tblptru	equ	0xFF8
   490                           tblptrh	equ	0xFF7
   491                           tblptrl	equ	0xFF6
   492                           tablat	equ	0xFF5
   493                           postinc0	equ	0xFEE
   494                           wreg	equ	0xFE8
   495                           postdec1	equ	0xFE5
   496                           fsr1l	equ	0xFE1
   497                           
   498                           	psect	dataBANK0
   499  0000E8                     __pdataBANK0:
   500                           	opt stack 0
   501  0000E8                     _delay_quartz_frequency_value:
   502                           	opt stack 0
   503  0000E8                     	ds	1
   504                           tblptru	equ	0xFF8
   505                           tblptrh	equ	0xFF7
   506                           tblptrl	equ	0xFF6
   507                           tablat	equ	0xFF5
   508                           postinc0	equ	0xFEE
   509                           wreg	equ	0xFE8
   510                           postdec1	equ	0xFE5
   511                           fsr1l	equ	0xFE1
   512                           
   513                           	psect	bssBANK1
   514  000100                     __pbssBANK1:
   515                           	opt stack 0
   516  000100                     _MUX_select:
   517                           	opt stack 0
   518  000100                     	ds	8
   519  000108                     _data_speed_rx:
   520                           	opt stack 0
   521  000108                     	ds	8
   522  000110                     _distance_set:
   523                           	opt stack 0
   524  000110                     	ds	8
   525  000118                     _Pminimo:
   526                           	opt stack 0
   527  000118                     	ds	4
   528  00011C                     _alfa:
   529                           	opt stack 0
   530  00011C                     	ds	4
   531  000120                     _beta:
   532                           	opt stack 0
   533  000120                     	ds	4
   534  000124                     _bordo:
   535                           	opt stack 0
   536  000124                     	ds	4
   537  000128                     _jjj:
   538                           	opt stack 0
   539  000128                     	ds	4
   540  00012C                     _kkk:
   541                           	opt stack 0
   542  00012C                     	ds	4
   543  000130                     _n:
   544                           	opt stack 0
   545  000130                     	ds	4
   546  000134                     _old_alignment_gap:
   547                           	opt stack 0
   548  000134                     	ds	4
   549  000138                     _prima_sterzata:
   550                           	opt stack 0
   551  000138                     	ds	4
   552  00013C                     _x:
   553                           	opt stack 0
   554  00013C                     	ds	4
   555  000140                     _z:
   556                           	opt stack 0
   557  000140                     	ds	4
   558  000144                     _actual_speed:
   559                           	opt stack 0
   560  000144                     	ds	2
   561  000146                     _distance:
   562                           	opt stack 0
   563  000146                     	ds	2
   564  000148                     _errno:
   565                           	opt stack 0
   566  000148                     	ds	2
   567  00014A                     _pulse_time:
   568                           	opt stack 0
   569  00014A                     	ds	2
   570  00014C                     _set_speed:
   571                           	opt stack 0
   572  00014C                     	ds	2
   573  00014E                     _msg:
   574                           	opt stack 0
   575  00014E                     	ds	15
   576  00015D                     _data:
   577                           	opt stack 0
   578  00015D                     	ds	8
   579  000165                     _data_brake:
   580                           	opt stack 0
   581  000165                     	ds	8
   582  00016D                     _data_correction:
   583                           	opt stack 0
   584  00016D                     	ds	8
   585  000175                     _data_speed:
   586                           	opt stack 0
   587  000175                     	ds	8
   588  00017D                     _data_steering:
   589                           	opt stack 0
   590  00017D                     	ds	8
   591  000185                     _data_test:
   592                           	opt stack 0
   593  000185                     	ds	8
   594                           tblptru	equ	0xFF8
   595                           tblptrh	equ	0xFF7
   596                           tblptrl	equ	0xFF6
   597                           tablat	equ	0xFF5
   598                           postinc0	equ	0xFEE
   599                           wreg	equ	0xFE8
   600                           postdec1	equ	0xFE5
   601                           fsr1l	equ	0xFE1
   602                           
   603                           	psect	dataBANK1
   604  0001E2                     __pdataBANK1:
   605                           	opt stack 0
   606  0001E2                     _larghezza:
   607                           	opt stack 0
   608  0001E2                     	ds	4
   609  0001E6                     _spazio_parcheggio:
   610                           	opt stack 0
   611  0001E6                     	ds	2
   612  0001E8                     _raggio:
   613                           	opt stack 0
   614  0001E8                     	ds	4
   615                           tblptru	equ	0xFF8
   616                           tblptrh	equ	0xFF7
   617                           tblptrl	equ	0xFF6
   618                           tablat	equ	0xFF5
   619                           postinc0	equ	0xFEE
   620                           wreg	equ	0xFE8
   621                           postdec1	equ	0xFE5
   622                           fsr1l	equ	0xFE1
   623                           
   624                           	psect	cstackBANK1
   625  00018D                     __pcstackBANK1:
   626                           	opt stack 0
   627  00018D                     ?___flsub:
   628                           	opt stack 0
   629  00018D                     atan@y:
   630                           	opt stack 0
   631  00018D                     ___flsub@b:
   632                           	opt stack 0
   633                           
   634                           ; 4 bytes @ 0x0
   635  00018D                     	ds	4
   636  000191                     atan@x:
   637                           	opt stack 0
   638  000191                     ___flsub@a:
   639                           	opt stack 0
   640                           
   641                           ; 4 bytes @ 0x4
   642  000191                     	ds	4
   643  000195                     ?_sin:
   644                           	opt stack 0
   645  000195                     atan@recip:
   646                           	opt stack 0
   647  000195                     sin@f:
   648                           	opt stack 0
   649                           
   650                           ; 4 bytes @ 0x8
   651  000195                     	ds	1
   652  000196                     atan@val_squared:
   653                           	opt stack 0
   654                           
   655                           ; 4 bytes @ 0x9
   656  000196                     	ds	3
   657  000199                     sin@y:
   658                           	opt stack 0
   659                           
   660                           ; 4 bytes @ 0xC
   661  000199                     	ds	1
   662  00019A                     atan@val:
   663                           	opt stack 0
   664                           
   665                           ; 4 bytes @ 0xD
   666  00019A                     	ds	3
   667  00019D                     _sin$3752:
   668                           	opt stack 0
   669                           
   670                           ; 4 bytes @ 0x10
   671  00019D                     	ds	1
   672  00019E                     asin@sgn:
   673                           	opt stack 0
   674                           
   675                           ; 4 bytes @ 0x11
   676  00019E                     	ds	3
   677  0001A1                     sin@x2:
   678                           	opt stack 0
   679                           
   680                           ; 4 bytes @ 0x14
   681  0001A1                     	ds	1
   682  0001A2                     _asin$3750:
   683                           	opt stack 0
   684                           
   685                           ; 4 bytes @ 0x15
   686  0001A2                     	ds	3
   687  0001A5                     sin@sgn:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x18
   691  0001A5                     	ds	1
   692  0001A6                     _asin$3749:
   693                           	opt stack 0
   694                           
   695                           ; 4 bytes @ 0x19
   696  0001A6                     	ds	4
   697  0001AA                     asin@y:
   698                           	opt stack 0
   699                           
   700                           ; 4 bytes @ 0x1D
   701  0001AA                     	ds	4
   702  0001AE                     _asin$3748:
   703                           	opt stack 0
   704                           
   705                           ; 4 bytes @ 0x21
   706  0001AE                     	ds	4
   707  0001B2                     ??_park_search:
   708  0001B2                     ?_cos:
   709                           	opt stack 0
   710  0001B2                     cos@f:
   711                           	opt stack 0
   712                           
   713                           ; 4 bytes @ 0x25
   714  0001B2                     	ds	4
   715  0001B6                     _cos$3751:
   716                           	opt stack 0
   717                           
   718                           ; 4 bytes @ 0x29
   719  0001B6                     	ds	4
   720  0001BA                     _matematica$3741:
   721                           	opt stack 0
   722                           
   723                           ; 4 bytes @ 0x2D
   724  0001BA                     	ds	4
   725  0001BE                     _matematica$3742:
   726                           	opt stack 0
   727                           
   728                           ; 4 bytes @ 0x31
   729  0001BE                     	ds	4
   730  0001C2                     _matematica$3743:
   731                           	opt stack 0
   732                           
   733                           ; 4 bytes @ 0x35
   734  0001C2                     	ds	4
   735  0001C6                     _matematica$3744:
   736                           	opt stack 0
   737                           
   738                           ; 4 bytes @ 0x39
   739  0001C6                     	ds	4
   740  0001CA                     _matematica$3746:
   741                           	opt stack 0
   742                           
   743                           ; 4 bytes @ 0x3D
   744  0001CA                     	ds	4
   745  0001CE                     _matematica$3747:
   746                           	opt stack 0
   747                           
   748                           ; 4 bytes @ 0x41
   749  0001CE                     	ds	4
   750  0001D2                     _matematica$3745:
   751                           	opt stack 0
   752                           
   753                           ; 4 bytes @ 0x45
   754  0001D2                     	ds	4
   755  0001D6                     ??_park_routine:
   756                           
   757                           ; 0 bytes @ 0x49
   758  0001D6                     	ds	4
   759  0001DA                     _park_routine$3739:
   760                           	opt stack 0
   761                           
   762                           ; 4 bytes @ 0x4D
   763  0001DA                     	ds	4
   764  0001DE                     _park_routine$3740:
   765                           	opt stack 0
   766                           
   767                           ; 4 bytes @ 0x51
   768  0001DE                     	ds	4
   769                           tblptru	equ	0xFF8
   770                           tblptrh	equ	0xFF7
   771                           tblptrl	equ	0xFF6
   772                           tablat	equ	0xFF5
   773                           postinc0	equ	0xFEE
   774                           wreg	equ	0xFE8
   775                           postdec1	equ	0xFE5
   776                           fsr1l	equ	0xFE1
   777                           
   778                           	psect	cstackBANK0
   779  000060                     __pcstackBANK0:
   780                           	opt stack 0
   781  000060                     ?___lwdiv:
   782                           	opt stack 0
   783  000060                     ___lwdiv@dividend:
   784                           	opt stack 0
   785                           
   786                           ; 2 bytes @ 0x0
   787  000060                     	ds	2
   788  000062                     ___lwdiv@divisor:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x2
   792  000062                     	ds	2
   793  000064                     ___lwdiv@counter:
   794                           	opt stack 0
   795                           
   796                           ; 1 bytes @ 0x4
   797  000064                     	ds	1
   798  000065                     ___lwdiv@quotient:
   799                           	opt stack 0
   800                           
   801                           ; 2 bytes @ 0x5
   802  000065                     	ds	2
   803  000067                     ??_ISR_Alta:
   804                           
   805                           ; 0 bytes @ 0x7
   806  000067                     	ds	16
   807  000077                     ??_can_interpreter:
   808  000077                     ?_abs:
   809                           	opt stack 0
   810  000077                     ?___wmul:
   811                           	opt stack 0
   812  000077                     ?___fldiv:
   813                           	opt stack 0
   814  000077                     CANOperationMode@mode:
   815                           	opt stack 0
   816  000077                     _CANisTxReady$2845:
   817                           	opt stack 0
   818  000077                     ___wmul@multiplier:
   819                           	opt stack 0
   820  000077                     abs@a:
   821                           	opt stack 0
   822  000077                     CANsendMessage@identifier:
   823                           	opt stack 0
   824  000077                     CANSetMask@mask:
   825                           	opt stack 0
   826  000077                     CANSetFilter@filter:
   827                           	opt stack 0
   828  000077                     ___fldiv@b:
   829                           	opt stack 0
   830  000077                     frexp@value:
   831                           	opt stack 0
   832                           
   833                           ; 4 bytes @ 0x17
   834  000077                     	ds	2
   835  000079                     ??_abs:
   836  000079                     ___wmul@multiplicand:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x19
   840  000079                     	ds	2
   841  00007B                     CANSetMask@type:
   842                           	opt stack 0
   843  00007B                     CANSetFilter@type:
   844                           	opt stack 0
   845  00007B                     CANsendMessage@data:
   846                           	opt stack 0
   847  00007B                     ___wmul@product:
   848                           	opt stack 0
   849  00007B                     frexp@eptr:
   850                           	opt stack 0
   851  00007B                     ___fldiv@a:
   852                           	opt stack 0
   853                           
   854                           ; 4 bytes @ 0x1B
   855  00007B                     	ds	1
   856  00007C                     ??_CANSetMask:
   857  00007C                     ??_CANSetFilter:
   858                           
   859                           ; 0 bytes @ 0x1C
   860  00007C                     	ds	1
   861  00007D                     ??_frexp:
   862  00007D                     CANsendMessage@dataLength:
   863                           	opt stack 0
   864  00007D                     delay_ms@value_ms:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0x1D
   868  00007D                     	ds	1
   869  00007E                     CANsendMessage@flags:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0x1E
   873  00007E                     	ds	1
   874  00007F                     ??___fldiv:
   875  00007F                     ??_CANsendMessage:
   876  00007F                     delay_s@value_s:
   877                           	opt stack 0
   878                           
   879                           ; 1 bytes @ 0x1F
   880  00007F                     	ds	1
   881  000080                     CANSetMask@numBuffer:
   882                           	opt stack 0
   883  000080                     CANSetFilter@numBuffer:
   884                           	opt stack 0
   885  000080                     delay_s@repeat_loop:
   886                           	opt stack 0
   887                           
   888                           ; 1 bytes @ 0x20
   889  000080                     	ds	1
   890  000081                     CANSetMask@tamp:
   891                           	opt stack 0
   892  000081                     CANSetFilter@tamp:
   893                           	opt stack 0
   894                           
   895                           ; 4 bytes @ 0x21
   896  000081                     	ds	2
   897  000083                     ___fldiv@sign:
   898                           	opt stack 0
   899  000083                     CANsendMessage@tamp:
   900                           	opt stack 0
   901                           
   902                           ; 4 bytes @ 0x23
   903  000083                     	ds	1
   904  000084                     ___fldiv@rem:
   905                           	opt stack 0
   906                           
   907                           ; 4 bytes @ 0x24
   908  000084                     	ds	1
   909  000085                     CANInitialize@phaseSeg1:
   910                           	opt stack 0
   911                           
   912                           ; 1 bytes @ 0x25
   913  000085                     	ds	1
   914  000086                     CANInitialize@phaseSeg2:
   915                           	opt stack 0
   916                           
   917                           ; 1 bytes @ 0x26
   918  000086                     	ds	1
   919  000087                     can_send@data_correction1:
   920                           	opt stack 0
   921  000087                     CANInitialize@SJW:
   922                           	opt stack 0
   923                           
   924                           ; 1 bytes @ 0x27
   925  000087                     	ds	1
   926  000088                     CANInitialize@BRP:
   927                           	opt stack 0
   928  000088                     ___fldiv@new_exp:
   929                           	opt stack 0
   930                           
   931                           ; 2 bytes @ 0x28
   932  000088                     	ds	1
   933  000089                     CANInitialize@flags:
   934                           	opt stack 0
   935                           
   936                           ; 1 bytes @ 0x29
   937  000089                     	ds	1
   938  00008A                     ??_CANInitialize:
   939  00008A                     ___fldiv@grs:
   940                           	opt stack 0
   941                           
   942                           ; 4 bytes @ 0x2A
   943  00008A                     	ds	4
   944  00008E                     CANInitialize@propSeg:
   945                           	opt stack 0
   946  00008E                     ___fldiv@bexp:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x2E
   950  00008E                     	ds	1
   951  00008F                     CANInitialize@FilterConfig1:
   952                           	opt stack 0
   953  00008F                     ___fldiv@aexp:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0x2F
   957  00008F                     	ds	1
   958  000090                     ?___flmul:
   959                           	opt stack 0
   960  000090                     CANInitialize@FilterConfig2:
   961                           	opt stack 0
   962  000090                     ___flmul@b:
   963                           	opt stack 0
   964                           
   965                           ; 4 bytes @ 0x30
   966  000090                     	ds	1
   967  000091                     
   968                           ; 0 bytes @ 0x31
   969  000091                     	ds	3
   970  000094                     ___flmul@a:
   971                           	opt stack 0
   972                           
   973                           ; 4 bytes @ 0x34
   974  000094                     	ds	4
   975  000098                     ??___flmul:
   976                           
   977                           ; 0 bytes @ 0x38
   978  000098                     	ds	4
   979  00009C                     ___flmul@sign:
   980                           	opt stack 0
   981                           
   982                           ; 1 bytes @ 0x3C
   983  00009C                     	ds	1
   984  00009D                     ___flmul@aexp:
   985                           	opt stack 0
   986                           
   987                           ; 1 bytes @ 0x3D
   988  00009D                     	ds	1
   989  00009E                     ___flmul@grs:
   990                           	opt stack 0
   991                           
   992                           ; 4 bytes @ 0x3E
   993  00009E                     	ds	4
   994  0000A2                     ___flmul@bexp:
   995                           	opt stack 0
   996                           
   997                           ; 1 bytes @ 0x42
   998  0000A2                     	ds	1
   999  0000A3                     ___flmul@prod:
  1000                           	opt stack 0
  1001                           
  1002                           ; 4 bytes @ 0x43
  1003  0000A3                     	ds	4
  1004  0000A7                     ___flmul@temp:
  1005                           	opt stack 0
  1006                           
  1007                           ; 2 bytes @ 0x47
  1008  0000A7                     	ds	2
  1009  0000A9                     ?___fladd:
  1010                           	opt stack 0
  1011  0000A9                     ___fladd@b:
  1012                           	opt stack 0
  1013                           
  1014                           ; 4 bytes @ 0x49
  1015  0000A9                     	ds	4
  1016  0000AD                     ___fladd@a:
  1017                           	opt stack 0
  1018                           
  1019                           ; 4 bytes @ 0x4D
  1020  0000AD                     	ds	4
  1021  0000B1                     ??___fladd:
  1022                           
  1023                           ; 0 bytes @ 0x51
  1024  0000B1                     	ds	8
  1025  0000B9                     ___fladd@signs:
  1026                           	opt stack 0
  1027                           
  1028                           ; 1 bytes @ 0x59
  1029  0000B9                     	ds	1
  1030  0000BA                     ___fladd@aexp:
  1031                           	opt stack 0
  1032                           
  1033                           ; 1 bytes @ 0x5A
  1034  0000BA                     	ds	1
  1035  0000BB                     ___fladd@bexp:
  1036                           	opt stack 0
  1037                           
  1038                           ; 1 bytes @ 0x5B
  1039  0000BB                     	ds	1
  1040  0000BC                     ___fladd@grs:
  1041                           	opt stack 0
  1042                           
  1043                           ; 1 bytes @ 0x5C
  1044  0000BC                     	ds	1
  1045  0000BD                     ?_eval_poly:
  1046                           	opt stack 0
  1047  0000BD                     ?___flneg:
  1048                           	opt stack 0
  1049  0000BD                     eval_poly@x:
  1050                           	opt stack 0
  1051  0000BD                     ___flneg@f1:
  1052                           	opt stack 0
  1053                           
  1054                           ; 4 bytes @ 0x5D
  1055  0000BD                     	ds	4
  1056  0000C1                     ?_sqrt:
  1057                           	opt stack 0
  1058  0000C1                     ?_fabs:
  1059                           	opt stack 0
  1060  0000C1                     ?___fltol:
  1061                           	opt stack 0
  1062  0000C1                     eval_poly@d:
  1063                           	opt stack 0
  1064  0000C1                     fabs@d:
  1065                           	opt stack 0
  1066  0000C1                     ___fltol@f1:
  1067                           	opt stack 0
  1068  0000C1                     sqrt@a:
  1069                           	opt stack 0
  1070                           
  1071                           ; 4 bytes @ 0x61
  1072  0000C1                     	ds	2
  1073  0000C3                     eval_poly@n:
  1074                           	opt stack 0
  1075                           
  1076                           ; 2 bytes @ 0x63
  1077  0000C3                     	ds	2
  1078  0000C5                     ??_sqrt:
  1079  0000C5                     ??_eval_poly:
  1080  0000C5                     ??___fltol:
  1081  0000C5                     ___flge@ff1:
  1082                           	opt stack 0
  1083                           
  1084                           ; 4 bytes @ 0x65
  1085  0000C5                     	ds	4
  1086  0000C9                     ___fltol@sign1:
  1087                           	opt stack 0
  1088  0000C9                     sqrt@sign:
  1089                           	opt stack 0
  1090  0000C9                     eval_poly@res:
  1091                           	opt stack 0
  1092  0000C9                     ___flge@ff2:
  1093                           	opt stack 0
  1094                           
  1095                           ; 4 bytes @ 0x69
  1096  0000C9                     	ds	1
  1097  0000CA                     ___fltol@exp1:
  1098                           	opt stack 0
  1099  0000CA                     sqrt@i:
  1100                           	opt stack 0
  1101                           
  1102                           ; 1 bytes @ 0x6A
  1103  0000CA                     	ds	1
  1104  0000CB                     ?___xxtofl:
  1105                           	opt stack 0
  1106  0000CB                     sqrt@tfrac:
  1107                           	opt stack 0
  1108  0000CB                     ___xxtofl@val:
  1109                           	opt stack 0
  1110                           
  1111                           ; 4 bytes @ 0x6B
  1112  0000CB                     	ds	2
  1113  0000CD                     ??___flge:
  1114                           
  1115                           ; 0 bytes @ 0x6D
  1116  0000CD                     	ds	2
  1117  0000CF                     ??___xxtofl:
  1118  0000CF                     sqrt@p:
  1119                           	opt stack 0
  1120                           
  1121                           ; 1 bytes @ 0x6F
  1122  0000CF                     	ds	1
  1123  0000D0                     sqrt@grs:
  1124                           	opt stack 0
  1125                           
  1126                           ; 4 bytes @ 0x70
  1127  0000D0                     	ds	1
  1128  0000D1                     ?_atan:
  1129                           	opt stack 0
  1130  0000D1                     atan@f:
  1131                           	opt stack 0
  1132                           
  1133                           ; 4 bytes @ 0x71
  1134  0000D1                     	ds	2
  1135  0000D3                     ___xxtofl@sign:
  1136                           	opt stack 0
  1137                           
  1138                           ; 1 bytes @ 0x73
  1139  0000D3                     	ds	1
  1140  0000D4                     ___xxtofl@exp:
  1141                           	opt stack 0
  1142  0000D4                     sqrt@exp:
  1143                           	opt stack 0
  1144                           
  1145                           ; 2 bytes @ 0x74
  1146  0000D4                     	ds	1
  1147  0000D5                     ___xxtofl@arg:
  1148                           	opt stack 0
  1149                           
  1150                           ; 4 bytes @ 0x75
  1151  0000D5                     	ds	1
  1152  0000D6                     sqrt@root:
  1153                           	opt stack 0
  1154                           
  1155                           ; 4 bytes @ 0x76
  1156  0000D6                     	ds	3
  1157  0000D9                     ?_floor:
  1158                           	opt stack 0
  1159  0000D9                     floor@x:
  1160                           	opt stack 0
  1161                           
  1162                           ; 4 bytes @ 0x79
  1163  0000D9                     	ds	1
  1164  0000DA                     sqrt@frac:
  1165                           	opt stack 0
  1166                           
  1167                           ; 4 bytes @ 0x7A
  1168  0000DA                     	ds	3
  1169  0000DD                     floor@i:
  1170                           	opt stack 0
  1171                           
  1172                           ; 4 bytes @ 0x7D
  1173  0000DD                     	ds	1
  1174  0000DE                     ?_asin:
  1175                           	opt stack 0
  1176  0000DE                     asin@x:
  1177                           	opt stack 0
  1178                           
  1179                           ; 4 bytes @ 0x7E
  1180  0000DE                     	ds	3
  1181  0000E1                     floor@expon:
  1182                           	opt stack 0
  1183                           
  1184                           ; 2 bytes @ 0x81
  1185  0000E1                     	ds	1
  1186  0000E2                     ??_parallelo:
  1187  0000E2                     
  1188                           ; 0 bytes @ 0x82
  1189  0000E2                     	ds	1
  1190  0000E3                     
  1191                           ; 0 bytes @ 0x83
  1192  0000E3                     	ds	1
  1193  0000E4                     tblptru	equ	0xFF8
  1194                           tblptrh	equ	0xFF7
  1195                           tblptrl	equ	0xFF6
  1196                           tablat	equ	0xFF5
  1197                           postinc0	equ	0xFEE
  1198                           wreg	equ	0xFE8
  1199                           postdec1	equ	0xFE5
  1200                           fsr1l	equ	0xFE1
  1201                           
  1202                           ; 0 bytes @ 0x84
  1203                           
  1204                           	psect	cstackCOMRAM
  1205  000001                     __pcstackCOMRAM:
  1206                           	opt stack 0
  1207  000001                     CANreceiveMessage@msg:
  1208                           	opt stack 0
  1209                           
  1210                           ; 2 bytes @ 0x0
  1211  000001                     	ds	2
  1212  000003                     ??_CANreceiveMessage:
  1213                           
  1214                           ; 0 bytes @ 0x2
  1215  000003                     	ds	8
  1216  00000B                     CANreceiveMessage@error:
  1217                           	opt stack 0
  1218                           
  1219                           ; 1 bytes @ 0xA
  1220  00000B                     	ds	1
  1221  00000C                     CANreceiveMessage@tamp:
  1222                           	opt stack 0
  1223                           
  1224                           ; 1 bytes @ 0xB
  1225  00000C                     	ds	1
  1226  00000D                     ??_ISR_Bassa:
  1227                           
  1228                           ; 0 bytes @ 0xC
  1229  00000D                     	ds	21
  1230  000022                     ISR_Bassa@gigi:
  1231                           	opt stack 0
  1232                           
  1233                           ; 1 bytes @ 0x21
  1234  000022                     	ds	1
  1235  000023                     ISR_Bassa@i:
  1236                           	opt stack 0
  1237                           
  1238                           ; 1 bytes @ 0x22
  1239  000023                     	ds	1
  1240                           tblptru	equ	0xFF8
  1241                           tblptrh	equ	0xFF7
  1242                           tblptrl	equ	0xFF6
  1243                           tablat	equ	0xFF5
  1244                           postinc0	equ	0xFEE
  1245                           wreg	equ	0xFE8
  1246                           postdec1	equ	0xFE5
  1247                           fsr1l	equ	0xFE1
  1248                           
  1249 ;;
  1250 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1251 ;;
  1252 ;; *************** function _main *****************
  1253 ;; Defined at:
  1254 ;;		line 188 in file "parcheggio.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;		None
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;		None
  1259 ;; Return value:  Size  Location     Type
  1260 ;;		None               void
  1261 ;; Registers used:
  1262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1272 ;;Total ram usage:        0 bytes
  1273 ;; Hardware stack levels required when called:   10
  1274 ;; This function calls:
  1275 ;;		_can_interpreter
  1276 ;;		_configurazione
  1277 ;;		_park_routine
  1278 ;;		_park_search
  1279 ;; This function is called by:
  1280 ;;		Startup code after reset
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text0
  1285  005DC4                     __ptext0:
  1286                           	opt stack 0
  1287  005DC4                     _main:
  1288                           	opt stack 21
  1289                           
  1290                           ;parcheggio.c: 189: MUX_select[0] = 0b00000000;
  1291                           
  1292                           ; BSR set to: 15
  1293                           ;incstack = 0
  1294  005DC4  0E00               	movlw	0
  1295  005DC6  0101               	movlb	1	; () banked
  1296  005DC8  6F00               	movwf	_MUX_select& (0+255),b
  1297                           
  1298                           ;parcheggio.c: 190: MUX_select[1] = 0b00000001;
  1299  005DCA  0E01               	movlw	1
  1300  005DCC  0101               	movlb	1	; () banked
  1301  005DCE  6F01               	movwf	(_MUX_select+1)& (0+255),b
  1302                           
  1303                           ;parcheggio.c: 191: MUX_select[2] = 0b00000010;
  1304  005DD0  0E02               	movlw	2
  1305  005DD2  0101               	movlb	1	; () banked
  1306  005DD4  6F02               	movwf	(_MUX_select+2)& (0+255),b
  1307                           
  1308                           ;parcheggio.c: 192: MUX_select[3] = 0b00000011;
  1309  005DD6  0E03               	movlw	3
  1310  005DD8  0101               	movlb	1	; () banked
  1311  005DDA  6F03               	movwf	(_MUX_select+3)& (0+255),b
  1312                           
  1313                           ;parcheggio.c: 193: MUX_select[4] = 0b00000100;
  1314  005DDC  0E04               	movlw	4
  1315  005DDE  0101               	movlb	1	; () banked
  1316  005DE0  6F04               	movwf	(_MUX_select+4)& (0+255),b
  1317                           
  1318                           ;parcheggio.c: 194: MUX_select[5] = 0b00000101;
  1319  005DE2  0E05               	movlw	5
  1320  005DE4  0101               	movlb	1	; () banked
  1321  005DE6  6F05               	movwf	(_MUX_select+5)& (0+255),b
  1322                           
  1323                           ;parcheggio.c: 195: MUX_select[6] = 0b00000110;
  1324  005DE8  0E06               	movlw	6
  1325  005DEA  0101               	movlb	1	; () banked
  1326  005DEC  6F06               	movwf	(_MUX_select+6)& (0+255),b
  1327                           
  1328                           ;parcheggio.c: 196: MUX_select[7] = 0b00000111;
  1329  005DEE  0E07               	movlw	7
  1330  005DF0  0101               	movlb	1	; () banked
  1331  005DF2  6F07               	movwf	(_MUX_select+7)& (0+255),b
  1332                           
  1333                           ; BSR set to: 1
  1334                           ;parcheggio.c: 197: configurazione();
  1335  005DF4  EC51  F02E         	call	_configurazione	;wreg free
  1336                           
  1337                           ;parcheggio.c: 198: PORTBbits.RB4 = 0;
  1338  005DF8  9881               	bcf	3969,4,c	;volatile
  1339                           
  1340                           ;parcheggio.c: 199: PORTBbits.RB5 = 0;
  1341  005DFA  9A81               	bcf	3969,5,c	;volatile
  1342                           
  1343                           ;parcheggio.c: 200: PORTBbits.RB6 = 0;
  1344  005DFC  9C81               	bcf	3969,6,c	;volatile
  1345                           
  1346                           ;parcheggio.c: 201: request_sent = 0;
  1347  005DFE  9247               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1348                           
  1349                           ;parcheggio.c: 202: start_operation = 0;
  1350  005E00  9647               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1351  005E02                     l715:
  1352  005E02  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1353  005E04  D7FE               	goto	l715
  1354                           
  1355                           ;parcheggio.c: 219: park_search();
  1356  005E06  EC00  F029         	call	_park_search	;wreg free
  1357                           
  1358                           ;parcheggio.c: 220: can_interpreter();
  1359  005E0A  ECB8  F02E         	call	_can_interpreter	;wreg free
  1360                           
  1361                           ;parcheggio.c: 221: park_routine();
  1362  005E0E  ECE4  F019         	call	_park_routine	;wreg free
  1363  005E12  D7F7               	goto	l715
  1364  005E14                     __end_of_main:
  1365                           	opt stack 0
  1366                           tblptru	equ	0xFF8
  1367                           tblptrh	equ	0xFF7
  1368                           tblptrl	equ	0xFF6
  1369                           tablat	equ	0xFF5
  1370                           postinc0	equ	0xFEE
  1371                           wreg	equ	0xFE8
  1372                           postdec1	equ	0xFE5
  1373                           fsr1l	equ	0xFE1
  1374                           
  1375 ;; *************** function _park_search *****************
  1376 ;; Defined at:
  1377 ;;		line 225 in file "parcheggio.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;		None               void
  1384 ;; Registers used:
  1385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1393 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1394 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1395 ;;Total ram usage:        2 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; Hardware stack levels required when called:    9
  1398 ;; This function calls:
  1399 ;;		_CANisTxReady
  1400 ;;		_CANsendMessage
  1401 ;;		___xxtofl
  1402 ;;		_abs
  1403 ;;		_parallelo
  1404 ;; This function is called by:
  1405 ;;		_main
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text1
  1410  005200                     __ptext1:
  1411                           	opt stack 0
  1412  005200                     _park_search:
  1413                           	opt stack 21
  1414                           
  1415                           ;parcheggio.c: 226: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1416                           
  1417                           ;incstack = 0
  1418  005200  D0DB               	goto	l723
  1419  005202                     l7401:
  1420                           
  1421                           ;parcheggio.c: 227: parallelo();
  1422  005202  ECC7  F024         	call	_parallelo	;wreg free
  1423                           
  1424                           ;parcheggio.c: 228: if (sensor_distance[0] > 50) {
  1425  005206  5025               	movf	_sensor_distance+1,w,c	;volatile
  1426  005208  E104               	bnz	u9530
  1427  00520A  0E33               	movlw	51
  1428  00520C  5C24               	subwf	_sensor_distance,w,c	;volatile
  1429  00520E  A0D8               	btfss	status,0,c
  1430  005210  D02A               	goto	l725
  1431  005212                     u9530:
  1432                           
  1433                           ;parcheggio.c: 229: if (request_sent == 0) {
  1434  005212  B247               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1435  005214  D057               	goto	l7421
  1436  005216                     l7409:
  1437  005216  ECCA  F02F         	call	_CANisTxReady	;wreg free
  1438  00521A  0900               	iorlw	0
  1439  00521C  B4D8               	btfsc	status,2,c
  1440  00521E  D7FB               	goto	l7409
  1441                           
  1442                           ;parcheggio.c: 231: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1443  005220  0E08               	movlw	8
  1444  005222  0100               	movlb	0	; () banked
  1445  005224  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1446  005226  0E00               	movlw	0
  1447  005228  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1448  00522A  0E00               	movlw	0
  1449  00522C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1450  00522E  0E00               	movlw	0
  1451  005230  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1452  005232  0E5D               	movlw	low _data
  1453  005234  0100               	movlb	0	; () banked
  1454  005236  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1455  005238  0E01               	movlw	high _data
  1456  00523A  0100               	movlb	0	; () banked
  1457  00523C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1458  00523E  0E08               	movlw	8
  1459  005240  0100               	movlb	0	; () banked
  1460  005242  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1461  005244  0EFC               	movlw	252
  1462  005246  0100               	movlb	0	; () banked
  1463  005248  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1464  00524A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1465                           
  1466                           ;parcheggio.c: 232: request_sent = 1;
  1467  00524E  8247               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1468                           
  1469                           ;parcheggio.c: 233: alignment_gap = 0;
  1470  005250  0E00               	movlw	0
  1471  005252  0100               	movlb	0	; () banked
  1472  005254  6FE4               	movwf	_alignment_gap& (0+255),b
  1473  005256  0E00               	movlw	0
  1474  005258  6FE5               	movwf	(_alignment_gap+1)& (0+255),b
  1475  00525A  0E00               	movlw	0
  1476  00525C  6FE6               	movwf	(_alignment_gap+2)& (0+255),b
  1477  00525E  0E00               	movlw	0
  1478  005260  6FE7               	movwf	(_alignment_gap+3)& (0+255),b
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;parcheggio.c: 234: LATBbits.LATB4 = 1;
  1482  005262  888A               	bsf	3978,4,c	;volatile
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;parcheggio.c: 235: }
  1486                           ;parcheggio.c: 236: } else {
  1487  005264  D02F               	goto	l7421
  1488  005266                     l725:
  1489                           
  1490                           ;parcheggio.c: 237: LATBbits.LATB4 = 0;
  1491  005266  988A               	bcf	3978,4,c	;volatile
  1492                           
  1493                           ;parcheggio.c: 238: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1494  005268  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1495  00526C  CFDE F1B2          	movff	postinc2,??_park_search
  1496  005270  CFDD F1B3          	movff	postdec2,??_park_search+1
  1497  005274  0101               	movlb	1	; () banked
  1498  005276  1FB2               	comf	??_park_search& (0+255),f,b
  1499  005278  1FB3               	comf	(??_park_search+1)& (0+255),f,b
  1500  00527A  4BB2               	infsnz	??_park_search& (0+255),f,b
  1501  00527C  2BB3               	incf	(??_park_search+1)& (0+255),f,b
  1502  00527E  5024               	movf	_sensor_distance,w,c	;volatile
  1503  005280  0101               	movlb	1	; () banked
  1504  005282  25B2               	addwf	??_park_search& (0+255),w,b
  1505  005284  0100               	movlb	0	; () banked
  1506  005286  6F77               	movwf	abs@a& (0+255),b
  1507  005288  5025               	movf	_sensor_distance+1,w,c	;volatile
  1508  00528A  0101               	movlb	1	; () banked
  1509  00528C  21B3               	addwfc	(??_park_search+1)& (0+255),w,b
  1510  00528E  0100               	movlb	0	; () banked
  1511  005290  6F78               	movwf	(abs@a+1)& (0+255),b
  1512  005292  EC9E  F02F         	call	_abs	;wreg free
  1513  005296  0100               	movlb	0	; () banked
  1514  005298  C077  F0CB         	movff	?_abs,___xxtofl@val
  1515  00529C  0100               	movlb	0	; () banked
  1516  00529E  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  1517  0052A2  0100               	movlb	0	; () banked
  1518  0052A4  0E00               	movlw	0
  1519  0052A6  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1520  0052A8  0EFF               	movlw	-1
  1521  0052AA  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  1522  0052AC  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  1523  0052AE  0E01               	movlw	1
  1524  0052B0  EC36  F027         	call	___xxtofl
  1525  0052B4  C0CB  F0E4         	movff	?___xxtofl,_alignment_gap
  1526  0052B8  C0CC  F0E5         	movff	?___xxtofl+1,_alignment_gap+1
  1527  0052BC  C0CD  F0E6         	movff	?___xxtofl+2,_alignment_gap+2
  1528  0052C0  C0CE  F0E7         	movff	?___xxtofl+3,_alignment_gap+3
  1529  0052C4                     l7421:
  1530                           
  1531                           ;parcheggio.c: 239: }
  1532                           ;parcheggio.c: 240: if ((sensor_distance[0] < 50) && (request_sent == 1)&&(sensor_distan
      +                          ce[1]<50)) {
  1533  0052C4  5025               	movf	_sensor_distance+1,w,c	;volatile
  1534  0052C6  E128               	bnz	l7433
  1535  0052C8  0E32               	movlw	50
  1536  0052CA  5C24               	subwf	_sensor_distance,w,c	;volatile
  1537  0052CC  A0D8               	btfss	status,0,c
  1538  0052CE  A247               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1539  0052D0  D023               	goto	l7433
  1540  0052D2  5027               	movf	_sensor_distance+3,w,c	;volatile
  1541  0052D4  E121               	bnz	l7433
  1542  0052D6  0E32               	movlw	50
  1543  0052D8  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  1544  0052DA  B0D8               	btfsc	status,0,c
  1545  0052DC  D01D               	goto	l7433
  1546                           
  1547                           ;parcheggio.c: 241: request_sent = 0;
  1548  0052DE  9247               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1549  0052E0                     l7429:
  1550  0052E0  ECCA  F02F         	call	_CANisTxReady	;wreg free
  1551  0052E4  0900               	iorlw	0
  1552  0052E6  B4D8               	btfsc	status,2,c
  1553  0052E8  D7FB               	goto	l7429
  1554                           
  1555                           ;parcheggio.c: 243: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1556  0052EA  0E07               	movlw	7
  1557  0052EC  0100               	movlb	0	; () banked
  1558  0052EE  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1559  0052F0  0E00               	movlw	0
  1560  0052F2  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1561  0052F4  0E00               	movlw	0
  1562  0052F6  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1563  0052F8  0E00               	movlw	0
  1564  0052FA  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1565  0052FC  0E5D               	movlw	low _data
  1566  0052FE  0100               	movlb	0	; () banked
  1567  005300  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1568  005302  0E01               	movlw	high _data
  1569  005304  0100               	movlb	0	; () banked
  1570  005306  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1571  005308  0E08               	movlw	8
  1572  00530A  0100               	movlb	0	; () banked
  1573  00530C  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1574  00530E  0EFC               	movlw	252
  1575  005310  0100               	movlb	0	; () banked
  1576  005312  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1577  005314  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1578  005318                     l7433:
  1579                           
  1580                           ;parcheggio.c: 244: }
  1581                           ;parcheggio.c: 245: if (distance_received == 1) {
  1582  005318  A846               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1583  00531A  D04E               	goto	l723
  1584                           
  1585                           ;parcheggio.c: 246: if (distance_average > 65) {
  1586  00531C  5037               	movf	_distance_average+1,w,c	;volatile
  1587  00531E  E104               	bnz	u9610
  1588  005320  0E42               	movlw	66
  1589  005322  5C36               	subwf	_distance_average,w,c	;volatile
  1590  005324  A0D8               	btfss	status,0,c
  1591  005326  D046               	goto	l736
  1592  005328                     u9610:
  1593                           
  1594                           ;parcheggio.c: 247: PORTBbits.RB5 = 1;
  1595  005328  8A81               	bsf	3969,5,c	;volatile
  1596                           
  1597                           ;parcheggio.c: 248: data[0] = 1;
  1598  00532A  0E01               	movlw	1
  1599  00532C  0101               	movlb	1	; () banked
  1600  00532E  6F5D               	movwf	_data& (0+255),b
  1601                           
  1602                           ; BSR set to: 1
  1603                           ;parcheggio.c: 249: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1604  005330  0E0B               	movlw	11
  1605  005332  0100               	movlb	0	; () banked
  1606  005334  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1607  005336  0E00               	movlw	0
  1608  005338  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1609  00533A  0E00               	movlw	0
  1610  00533C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1611  00533E  0E00               	movlw	0
  1612  005340  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1613  005342  0E5D               	movlw	low _data
  1614  005344  0100               	movlb	0	; () banked
  1615  005346  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1616  005348  0E01               	movlw	high _data
  1617  00534A  0100               	movlb	0	; () banked
  1618  00534C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1619  00534E  0E01               	movlw	1
  1620  005350  0100               	movlb	0	; () banked
  1621  005352  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1622  005354  0EBC               	movlw	188
  1623  005356  0100               	movlb	0	; () banked
  1624  005358  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1625  00535A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1626                           
  1627                           ;parcheggio.c: 250: if ((request_sent1 == 0)&&(sensor_distance[0] < 40)) {
  1628  00535E  B447               	btfsc	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1629  005360  D02B               	goto	l723
  1630  005362  5025               	movf	_sensor_distance+1,w,c	;volatile
  1631  005364  E129               	bnz	l723
  1632  005366  0E28               	movlw	40
  1633  005368  5C24               	subwf	_sensor_distance,w,c	;volatile
  1634  00536A  B0D8               	btfsc	status,0,c
  1635  00536C  D025               	goto	l723
  1636                           
  1637                           ;parcheggio.c: 251: data_test[0] = 50;
  1638  00536E  0E32               	movlw	50
  1639  005370  0101               	movlb	1	; () banked
  1640  005372  6F85               	movwf	_data_test& (0+255),b
  1641                           
  1642                           ; BSR set to: 1
  1643                           ;parcheggio.c: 252: asd = 1;
  1644  005374  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  1645  005376                     l7451:
  1646  005376  ECCA  F02F         	call	_CANisTxReady	;wreg free
  1647  00537A  0900               	iorlw	0
  1648  00537C  B4D8               	btfsc	status,2,c
  1649  00537E  D7FB               	goto	l7451
  1650                           
  1651                           ;parcheggio.c: 254: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1652  005380  0E0D               	movlw	13
  1653  005382  0100               	movlb	0	; () banked
  1654  005384  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1655  005386  0E00               	movlw	0
  1656  005388  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1657  00538A  0E00               	movlw	0
  1658  00538C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1659  00538E  0E00               	movlw	0
  1660  005390  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1661  005392  0E85               	movlw	low _data_test
  1662  005394  0100               	movlb	0	; () banked
  1663  005396  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1664  005398  0E01               	movlw	high _data_test
  1665  00539A  0100               	movlb	0	; () banked
  1666  00539C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1667  00539E  0E08               	movlw	8
  1668  0053A0  0100               	movlb	0	; () banked
  1669  0053A2  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1670  0053A4  0EBC               	movlw	188
  1671  0053A6  0100               	movlb	0	; () banked
  1672  0053A8  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1673  0053AA  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1674                           
  1675                           ;parcheggio.c: 256: distance_received1 = 0;
  1676  0053AE  9A46               	bcf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  1677                           
  1678                           ;parcheggio.c: 257: request_sent1 = 1;
  1679  0053B0  8447               	bsf	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1680                           
  1681                           ;parcheggio.c: 258: }
  1682                           ;parcheggio.c: 259: } else {
  1683  0053B2  D002               	goto	l723
  1684  0053B4                     l736:
  1685                           
  1686                           ;parcheggio.c: 260: distance_received = 0;
  1687  0053B4  9846               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1688                           
  1689                           ;parcheggio.c: 261: PORTBbits.RB5 = 0;
  1690  0053B6  9A81               	bcf	3969,5,c	;volatile
  1691  0053B8                     l723:
  1692  0053B8  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1693  0053BA  0012               	return	
  1694  0053BC  BA81               	btfsc	3969,5,c	;volatile
  1695  0053BE  0012               	return	
  1696  0053C0  D720               	goto	l7401
  1697  0053C2                     __end_of_park_search:
  1698                           	opt stack 0
  1699                           tblptru	equ	0xFF8
  1700                           tblptrh	equ	0xFF7
  1701                           tblptrl	equ	0xFF6
  1702                           tablat	equ	0xFF5
  1703                           postinc0	equ	0xFEE
  1704                           wreg	equ	0xFE8
  1705                           postdec1	equ	0xFE5
  1706                           fsr1l	equ	0xFE1
  1707                           postinc2	equ	0xFDE
  1708                           postdec2	equ	0xFDD
  1709                           status	equ	0xFD8
  1710                           
  1711 ;; *************** function _park_routine *****************
  1712 ;; Defined at:
  1713 ;;		line 267 in file "parcheggio.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;		None
  1718 ;; Return value:  Size  Location     Type
  1719 ;;		None               void
  1720 ;; Registers used:
  1721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1728 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1729 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1730 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  1731 ;;Total ram usage:       12 bytes
  1732 ;; Hardware stack levels used:    1
  1733 ;; Hardware stack levels required when called:    9
  1734 ;; This function calls:
  1735 ;;		_CANisTxReady
  1736 ;;		_CANsendMessage
  1737 ;;		___fladd
  1738 ;;		___flneg
  1739 ;;		___fltol
  1740 ;;		___xxtofl
  1741 ;;		_can_send
  1742 ;;		_delay_ms
  1743 ;;		_delay_s
  1744 ;;		_matematica
  1745 ;;		_parallelo
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text2
  1752  0033C8                     __ptext2:
  1753                           	opt stack 0
  1754  0033C8                     _park_routine:
  1755                           	opt stack 21
  1756                           
  1757                           ;parcheggio.c: 268: while ((asd == 1)&&(PORTBbits.RB5 == 1) && (activation == 1)) {
  1758                           
  1759                           ;incstack = 0
  1760  0033C8  D037               	goto	l7473
  1761  0033CA                     l7463:
  1762                           
  1763                           ;parcheggio.c: 269: PORTBbits.RB6 = ~PORTBbits.RB6;
  1764  0033CA  AC81               	btfss	3969,6,c	;volatile
  1765  0033CC  D002               	goto	u9670
  1766  0033CE  0E01               	movlw	1
  1767  0033D0  D001               	goto	u9676
  1768  0033D2                     u9670:
  1769  0033D2  0E00               	movlw	0
  1770  0033D4                     u9676:
  1771  0033D4  0AFF               	xorlw	255
  1772  0033D6  0101               	movlb	1	; () banked
  1773  0033D8  6FD6               	movwf	??_park_routine& (0+255),b
  1774  0033DA  0101               	movlb	1	; () banked
  1775  0033DC  3BD6               	swapf	??_park_routine& (0+255),f,b
  1776  0033DE  47D6               	rlncf	??_park_routine& (0+255),f,b
  1777  0033E0  47D6               	rlncf	??_park_routine& (0+255),f,b
  1778  0033E2  5081               	movf	3969,w,c	;volatile
  1779  0033E4  0101               	movlb	1	; () banked
  1780  0033E6  19D6               	xorwf	??_park_routine& (0+255),w,b
  1781  0033E8  0BBF               	andlw	-65
  1782  0033EA  19D6               	xorwf	??_park_routine& (0+255),w,b
  1783  0033EC  6E81               	movwf	3969,c	;volatile
  1784                           
  1785                           ; BSR set to: 1
  1786                           ;parcheggio.c: 270: parallelo();
  1787  0033EE  ECC7  F024         	call	_parallelo	;wreg free
  1788  0033F2                     l7467:
  1789  0033F2  ECCA  F02F         	call	_CANisTxReady	;wreg free
  1790  0033F6  0900               	iorlw	0
  1791  0033F8  B4D8               	btfsc	status,2,c
  1792  0033FA  D7FB               	goto	l7467
  1793                           
  1794                           ;parcheggio.c: 272: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1795  0033FC  0E0E               	movlw	14
  1796  0033FE  0100               	movlb	0	; () banked
  1797  003400  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1798  003402  0E00               	movlw	0
  1799  003404  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1800  003406  0E00               	movlw	0
  1801  003408  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1802  00340A  0E00               	movlw	0
  1803  00340C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1804  00340E  0E6D               	movlw	low _data_correction
  1805  003410  0100               	movlb	0	; () banked
  1806  003412  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1807  003414  0E01               	movlw	high _data_correction
  1808  003416  0100               	movlb	0	; () banked
  1809  003418  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1810  00341A  0E08               	movlw	8
  1811  00341C  0100               	movlb	0	; () banked
  1812  00341E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1813  003420  0EBC               	movlw	188
  1814  003422  0100               	movlb	0	; () banked
  1815  003424  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1816  003426  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1817                           
  1818                           ;parcheggio.c: 273: delay_ms(100);
  1819  00342A  0E00               	movlw	0
  1820  00342C  0100               	movlb	0	; () banked
  1821  00342E  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1822  003430  0E64               	movlw	100
  1823  003432  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1824  003434  EC84  F02F         	call	_delay_ms	;wreg free
  1825  003438                     l7473:
  1826  003438  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  1827  00343A  AA81               	btfss	3969,5,c	;volatile
  1828  00343C  D002               	goto	l755
  1829  00343E  B046               	btfsc	_activation/(0+8),_activation& (0+7),c	;volatile
  1830  003440  D7C4               	goto	l7463
  1831  003442                     l755:
  1832                           
  1833                           ;parcheggio.c: 274: }
  1834                           ;parcheggio.c: 275: if ((PORTBbits.RB5 == 1) && (activation == 1)) {
  1835  003442  BA81               	btfsc	3969,5,c	;volatile
  1836  003444  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1837  003446  D02F               	goto	l7493
  1838                           
  1839                           ;parcheggio.c: 276: PORTBbits.RB6 = 0;
  1840  003448  9C81               	bcf	3969,6,c	;volatile
  1841                           
  1842                           ;parcheggio.c: 277: data[0] = 2;
  1843  00344A  0E02               	movlw	2
  1844  00344C  0101               	movlb	1	; () banked
  1845  00344E  6F5D               	movwf	_data& (0+255),b
  1846                           
  1847                           ; BSR set to: 1
  1848                           ;parcheggio.c: 278: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1849  003450  0E0B               	movlw	11
  1850  003452  0100               	movlb	0	; () banked
  1851  003454  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1852  003456  0E00               	movlw	0
  1853  003458  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1854  00345A  0E00               	movlw	0
  1855  00345C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1856  00345E  0E00               	movlw	0
  1857  003460  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1858  003462  0E5D               	movlw	low _data
  1859  003464  0100               	movlb	0	; () banked
  1860  003466  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1861  003468  0E01               	movlw	high _data
  1862  00346A  0100               	movlb	0	; () banked
  1863  00346C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1864  00346E  0E01               	movlw	1
  1865  003470  0100               	movlb	0	; () banked
  1866  003472  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1867  003474  0EBC               	movlw	188
  1868  003476  0100               	movlb	0	; () banked
  1869  003478  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1870  00347A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1871                           
  1872                           ;parcheggio.c: 279: }
  1873                           ;parcheggio.c: 280: while ((start_operation != 1)&&(activation == 1)) {
  1874  00347E  D013               	goto	l7493
  1875  003480                     l758:
  1876                           
  1877                           ;parcheggio.c: 281: if (first == 0) {
  1878  003480  BE46               	btfsc	_first/(0+8),_first& (0+7),c	;volatile
  1879  003482  D011               	goto	l7493
  1880                           
  1881                           ;parcheggio.c: 282: set_speed = 0;
  1882  003484  0E00               	movlw	0
  1883  003486  0101               	movlb	1	; () banked
  1884  003488  6F4D               	movwf	(_set_speed+1)& (0+255),b
  1885  00348A  0E00               	movlw	0
  1886  00348C  6F4C               	movwf	_set_speed& (0+255),b
  1887                           
  1888                           ;parcheggio.c: 283: data_steering[0] = 90;
  1889  00348E  0E5A               	movlw	90
  1890  003490  0101               	movlb	1	; () banked
  1891  003492  6F7D               	movwf	_data_steering& (0+255),b
  1892                           
  1893                           ;parcheggio.c: 284: data_brake [0] = 0;
  1894  003494  0E00               	movlw	0
  1895  003496  0101               	movlb	1	; () banked
  1896  003498  6F65               	movwf	_data_brake& (0+255),b
  1897                           
  1898                           ;parcheggio.c: 285: data_brake [1] = 1;
  1899  00349A  0E01               	movlw	1
  1900  00349C  0101               	movlb	1	; () banked
  1901  00349E  6F66               	movwf	(_data_brake+1)& (0+255),b
  1902                           
  1903                           ; BSR set to: 1
  1904                           ;parcheggio.c: 286: can_send();
  1905  0034A0  ECA9  F02A         	call	_can_send	;wreg free
  1906                           
  1907                           ;parcheggio.c: 287: first = 1;
  1908  0034A4  8E46               	bsf	_first/(0+8),_first& (0+7),c	;volatile
  1909  0034A6                     l7493:
  1910  0034A6  A647               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1911  0034A8  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1912  0034AA  D1C1               	goto	l7601
  1913  0034AC  D7E9               	goto	l758
  1914  0034AE                     l764:
  1915                           
  1916                           ;parcheggio.c: 291: LATBbits.LATB4 = 1;
  1917  0034AE  888A               	bsf	3978,4,c	;volatile
  1918                           
  1919                           ;parcheggio.c: 293: bordo = (sensor_distance[0] + sensor_distance[1]) / 2;
  1920  0034B0  5024               	movf	_sensor_distance,w,c	;volatile
  1921  0034B2  2426               	addwf	_sensor_distance+2,w,c	;volatile
  1922  0034B4  0101               	movlb	1	; () banked
  1923  0034B6  6FD6               	movwf	??_park_routine& (0+255),b
  1924  0034B8  5025               	movf	_sensor_distance+1,w,c	;volatile
  1925  0034BA  2027               	addwfc	_sensor_distance+3,w,c	;volatile
  1926  0034BC  0101               	movlb	1	; () banked
  1927  0034BE  6FD7               	movwf	(??_park_routine+1)& (0+255),b
  1928  0034C0  90D8               	bcf	status,0,c
  1929  0034C2  0101               	movlb	1	; () banked
  1930  0034C4  31D7               	rrcf	(??_park_routine+1)& (0+255),w,b
  1931  0034C6  0101               	movlb	1	; () banked
  1932  0034C8  6FD9               	movwf	(??_park_routine+3)& (0+255),b
  1933  0034CA  0101               	movlb	1	; () banked
  1934  0034CC  31D6               	rrcf	??_park_routine& (0+255),w,b
  1935  0034CE  0101               	movlb	1	; () banked
  1936  0034D0  6FD8               	movwf	(??_park_routine+2)& (0+255),b
  1937  0034D2  C1D8  F0CB         	movff	??_park_routine+2,___xxtofl@val
  1938  0034D6  C1D9  F0CC         	movff	??_park_routine+3,___xxtofl@val+1
  1939  0034DA  0100               	movlb	0	; () banked
  1940  0034DC  6BCD               	clrf	(___xxtofl@val+2)& (0+255),b
  1941  0034DE  6BCE               	clrf	(___xxtofl@val+3)& (0+255),b
  1942  0034E0  0E00               	movlw	0
  1943  0034E2  EC36  F027         	call	___xxtofl
  1944  0034E6  C0CB  F124         	movff	?___xxtofl,_bordo	;volatile
  1945  0034EA  C0CC  F125         	movff	?___xxtofl+1,_bordo+1	;volatile
  1946  0034EE  C0CD  F126         	movff	?___xxtofl+2,_bordo+2	;volatile
  1947  0034F2  C0CE  F127         	movff	?___xxtofl+3,_bordo+3	;volatile
  1948                           
  1949                           ;parcheggio.c: 294: matematica();
  1950  0034F6  ECF2  F00F         	call	_matematica	;wreg free
  1951                           
  1952                           ;parcheggio.c: 295: set_speed = 0;
  1953  0034FA  0E00               	movlw	0
  1954  0034FC  0101               	movlb	1	; () banked
  1955  0034FE  6F4D               	movwf	(_set_speed+1)& (0+255),b
  1956  003500  0E00               	movlw	0
  1957  003502  6F4C               	movwf	_set_speed& (0+255),b
  1958                           
  1959                           ; BSR set to: 1
  1960                           ;parcheggio.c: 296: data_steering[0] = 90;
  1961  003504  0E5A               	movlw	90
  1962  003506  0101               	movlb	1	; () banked
  1963  003508  6F7D               	movwf	_data_steering& (0+255),b
  1964                           
  1965                           ; BSR set to: 1
  1966                           ;parcheggio.c: 297: data_brake [0] = 0;
  1967  00350A  0E00               	movlw	0
  1968  00350C  0101               	movlb	1	; () banked
  1969  00350E  6F65               	movwf	_data_brake& (0+255),b
  1970                           
  1971                           ; BSR set to: 1
  1972                           ;parcheggio.c: 298: data_brake [1] = 1;
  1973  003510  0E01               	movlw	1
  1974  003512  0101               	movlb	1	; () banked
  1975  003514  6F66               	movwf	(_data_brake+1)& (0+255),b
  1976                           
  1977                           ; BSR set to: 1
  1978                           ;parcheggio.c: 299: can_send();
  1979  003516  ECA9  F02A         	call	_can_send	;wreg free
  1980                           
  1981                           ;parcheggio.c: 300: delay_s(1);
  1982  00351A  0E01               	movlw	1
  1983  00351C  ECB4  F02F         	call	_delay_s
  1984                           
  1985                           ;parcheggio.c: 302: data_brake [0] = 3;
  1986  003520  0E03               	movlw	3
  1987  003522  0101               	movlb	1	; () banked
  1988  003524  6F65               	movwf	_data_brake& (0+255),b
  1989                           
  1990                           ; BSR set to: 1
  1991                           ;parcheggio.c: 303: data_brake [1] = 1;
  1992  003526  0E01               	movlw	1
  1993  003528  0101               	movlb	1	; () banked
  1994  00352A  6F66               	movwf	(_data_brake+1)& (0+255),b
  1995                           
  1996                           ; BSR set to: 1
  1997                           ;parcheggio.c: 305: set_speed = 1000;
  1998  00352C  0E03               	movlw	3
  1999  00352E  0101               	movlb	1	; () banked
  2000  003530  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2001  003532  0EE8               	movlw	232
  2002  003534  6F4C               	movwf	_set_speed& (0+255),b
  2003                           
  2004                           ; BSR set to: 1
  2005                           ;parcheggio.c: 306: dir = 0;
  2006  003536  9446               	bcf	_dir/(0+8),_dir& (0+7),c
  2007                           
  2008                           ; BSR set to: 1
  2009                           ;parcheggio.c: 307: data_steering[0] = 90;
  2010  003538  0E5A               	movlw	90
  2011  00353A  0101               	movlb	1	; () banked
  2012  00353C  6F7D               	movwf	_data_steering& (0+255),b
  2013                           
  2014                           ; BSR set to: 1
  2015                           ;parcheggio.c: 308: data_test[0] = ((50 + Pminimo + 5)-(n + 15));
  2016  00353E  0E00               	movlw	0
  2017  003540  0100               	movlb	0	; () banked
  2018  003542  6FAD               	movwf	___fladd@a& (0+255),b
  2019  003544  0E00               	movlw	0
  2020  003546  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2021  003548  0E70               	movlw	112
  2022  00354A  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2023  00354C  0E41               	movlw	65
  2024  00354E  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2025  003550  C130  F0A9         	movff	_n,___fladd@b
  2026  003554  C131  F0AA         	movff	_n+1,___fladd@b+1
  2027  003558  C132  F0AB         	movff	_n+2,___fladd@b+2
  2028  00355C  C133  F0AC         	movff	_n+3,___fladd@b+3
  2029  003560  EC3D  F015         	call	___fladd	;wreg free
  2030  003564  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  2031  003568  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  2032  00356C  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  2033  003570  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  2034  003574  EC4D  F02F         	call	___flneg	;wreg free
  2035  003578  C0BD  F1DA         	movff	?___flneg,_park_routine$3739
  2036  00357C  C0BE  F1DB         	movff	?___flneg+1,_park_routine$3739+1
  2037  003580  C0BF  F1DC         	movff	?___flneg+2,_park_routine$3739+2
  2038  003584  C0C0  F1DD         	movff	?___flneg+3,_park_routine$3739+3
  2039                           
  2040                           ;parcheggio.c: 308: data_test[0] = ((50 + Pminimo + 5)-(n + 15));
  2041  003588  C118  F0AD         	movff	_Pminimo,___fladd@a
  2042  00358C  C119  F0AE         	movff	_Pminimo+1,___fladd@a+1
  2043  003590  C11A  F0AF         	movff	_Pminimo+2,___fladd@a+2
  2044  003594  C11B  F0B0         	movff	_Pminimo+3,___fladd@a+3
  2045  003598  C1DA  F0A9         	movff	_park_routine$3739,___fladd@b
  2046  00359C  C1DB  F0AA         	movff	_park_routine$3739+1,___fladd@b+1
  2047  0035A0  C1DC  F0AB         	movff	_park_routine$3739+2,___fladd@b+2
  2048  0035A4  C1DD  F0AC         	movff	_park_routine$3739+3,___fladd@b+3
  2049  0035A8  EC3D  F015         	call	___fladd	;wreg free
  2050  0035AC  C0A9  F1DE         	movff	?___fladd,_park_routine$3740
  2051  0035B0  C0AA  F1DF         	movff	?___fladd+1,_park_routine$3740+1
  2052  0035B4  C0AB  F1E0         	movff	?___fladd+2,_park_routine$3740+2
  2053  0035B8  C0AC  F1E1         	movff	?___fladd+3,_park_routine$3740+3
  2054                           
  2055                           ;parcheggio.c: 308: data_test[0] = ((50 + Pminimo + 5)-(n + 15));
  2056  0035BC  0E00               	movlw	0
  2057  0035BE  0100               	movlb	0	; () banked
  2058  0035C0  6FAD               	movwf	___fladd@a& (0+255),b
  2059  0035C2  0E00               	movlw	0
  2060  0035C4  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2061  0035C6  0E5C               	movlw	92
  2062  0035C8  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2063  0035CA  0E42               	movlw	66
  2064  0035CC  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2065  0035CE  C1DE  F0A9         	movff	_park_routine$3740,___fladd@b
  2066  0035D2  C1DF  F0AA         	movff	_park_routine$3740+1,___fladd@b+1
  2067  0035D6  C1E0  F0AB         	movff	_park_routine$3740+2,___fladd@b+2
  2068  0035DA  C1E1  F0AC         	movff	_park_routine$3740+3,___fladd@b+3
  2069  0035DE  EC3D  F015         	call	___fladd	;wreg free
  2070  0035E2  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2071  0035E6  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2072  0035EA  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2073  0035EE  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2074  0035F2  EC62  F02C         	call	___fltol	;wreg free
  2075  0035F6  0100               	movlb	0	; () banked
  2076  0035F8  51C1               	movf	?___fltol& (0+255),w,b
  2077  0035FA  0101               	movlb	1	; () banked
  2078  0035FC  6F85               	movwf	_data_test& (0+255),b
  2079                           
  2080                           ; BSR set to: 1
  2081                           ;parcheggio.c: 309: asd = 1;
  2082  0035FE  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2083                           
  2084                           ; BSR set to: 1
  2085                           ;parcheggio.c: 310: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2086  003600  0E0D               	movlw	13
  2087  003602  0100               	movlb	0	; () banked
  2088  003604  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2089  003606  0E00               	movlw	0
  2090  003608  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2091  00360A  0E00               	movlw	0
  2092  00360C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2093  00360E  0E00               	movlw	0
  2094  003610  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2095  003612  0E85               	movlw	low _data_test
  2096  003614  0100               	movlb	0	; () banked
  2097  003616  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2098  003618  0E01               	movlw	high _data_test
  2099  00361A  0100               	movlb	0	; () banked
  2100  00361C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2101  00361E  0E08               	movlw	8
  2102  003620  0100               	movlb	0	; () banked
  2103  003622  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2104  003624  0EBC               	movlw	188
  2105  003626  0100               	movlb	0	; () banked
  2106  003628  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2107  00362A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2108                           
  2109                           ;parcheggio.c: 311: can_send();
  2110  00362E  ECA9  F02A         	call	_can_send	;wreg free
  2111  003632                     l765:
  2112  003632  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2113  003634  D7FE               	goto	l765
  2114                           
  2115                           ;parcheggio.c: 314: set_speed = 0;
  2116  003636  0E00               	movlw	0
  2117  003638  0101               	movlb	1	; () banked
  2118  00363A  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2119  00363C  0E00               	movlw	0
  2120  00363E  6F4C               	movwf	_set_speed& (0+255),b
  2121                           
  2122                           ;parcheggio.c: 315: data_steering[0] = 90;
  2123  003640  0E5A               	movlw	90
  2124  003642  0101               	movlb	1	; () banked
  2125  003644  6F7D               	movwf	_data_steering& (0+255),b
  2126                           
  2127                           ;parcheggio.c: 316: data_brake [0] = 0;
  2128  003646  0E00               	movlw	0
  2129  003648  0101               	movlb	1	; () banked
  2130  00364A  6F65               	movwf	_data_brake& (0+255),b
  2131                           
  2132                           ;parcheggio.c: 317: data_brake [1] = 1;
  2133  00364C  0E01               	movlw	1
  2134  00364E  0101               	movlb	1	; () banked
  2135  003650  6F66               	movwf	(_data_brake+1)& (0+255),b
  2136                           
  2137                           ; BSR set to: 1
  2138                           ;parcheggio.c: 318: can_send();
  2139  003652  ECA9  F02A         	call	_can_send	;wreg free
  2140                           
  2141                           ;parcheggio.c: 319: delay_s(1);
  2142  003656  0E01               	movlw	1
  2143  003658  ECB4  F02F         	call	_delay_s
  2144                           
  2145                           ;parcheggio.c: 321: data_brake [0] = 3;
  2146  00365C  0E03               	movlw	3
  2147  00365E  0101               	movlb	1	; () banked
  2148  003660  6F65               	movwf	_data_brake& (0+255),b
  2149                           
  2150                           ; BSR set to: 1
  2151                           ;parcheggio.c: 322: data_brake [1] = 1;
  2152  003662  0E01               	movlw	1
  2153  003664  0101               	movlb	1	; () banked
  2154  003666  6F66               	movwf	(_data_brake+1)& (0+255),b
  2155                           
  2156                           ; BSR set to: 1
  2157                           ;parcheggio.c: 323: set_speed = 1000;
  2158  003668  0E03               	movlw	3
  2159  00366A  0101               	movlb	1	; () banked
  2160  00366C  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2161  00366E  0EE8               	movlw	232
  2162  003670  6F4C               	movwf	_set_speed& (0+255),b
  2163                           
  2164                           ; BSR set to: 1
  2165                           ;parcheggio.c: 324: dir = 0;
  2166  003672  9446               	bcf	_dir/(0+8),_dir& (0+7),c
  2167                           
  2168                           ; BSR set to: 1
  2169                           ;parcheggio.c: 325: data_steering[0] = 180;
  2170  003674  0EB4               	movlw	180
  2171  003676  0101               	movlb	1	; () banked
  2172  003678  6F7D               	movwf	_data_steering& (0+255),b
  2173                           
  2174                           ; BSR set to: 1
  2175                           ;parcheggio.c: 326: data_test[0] = prima_sterzata;
  2176  00367A  C138  F0C1         	movff	_prima_sterzata,___fltol@f1
  2177  00367E  C139  F0C2         	movff	_prima_sterzata+1,___fltol@f1+1
  2178  003682  C13A  F0C3         	movff	_prima_sterzata+2,___fltol@f1+2
  2179  003686  C13B  F0C4         	movff	_prima_sterzata+3,___fltol@f1+3
  2180  00368A  EC62  F02C         	call	___fltol	;wreg free
  2181  00368E  0100               	movlb	0	; () banked
  2182  003690  51C1               	movf	?___fltol& (0+255),w,b
  2183  003692  0101               	movlb	1	; () banked
  2184  003694  6F85               	movwf	_data_test& (0+255),b
  2185                           
  2186                           ; BSR set to: 1
  2187                           ;parcheggio.c: 327: asd = 1;
  2188  003696  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2189                           
  2190                           ; BSR set to: 1
  2191                           ;parcheggio.c: 328: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2192  003698  0E0D               	movlw	13
  2193  00369A  0100               	movlb	0	; () banked
  2194  00369C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2195  00369E  0E00               	movlw	0
  2196  0036A0  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2197  0036A2  0E00               	movlw	0
  2198  0036A4  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2199  0036A6  0E00               	movlw	0
  2200  0036A8  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2201  0036AA  0E85               	movlw	low _data_test
  2202  0036AC  0100               	movlb	0	; () banked
  2203  0036AE  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2204  0036B0  0E01               	movlw	high _data_test
  2205  0036B2  0100               	movlb	0	; () banked
  2206  0036B4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2207  0036B6  0E08               	movlw	8
  2208  0036B8  0100               	movlb	0	; () banked
  2209  0036BA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2210  0036BC  0EBC               	movlw	188
  2211  0036BE  0100               	movlb	0	; () banked
  2212  0036C0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2213  0036C2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2214                           
  2215                           ;parcheggio.c: 329: can_send();
  2216  0036C6  ECA9  F02A         	call	_can_send	;wreg free
  2217  0036CA                     l768:
  2218  0036CA  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2219  0036CC  D7FE               	goto	l768
  2220                           
  2221                           ;parcheggio.c: 331: set_speed = 1000;
  2222  0036CE  0E03               	movlw	3
  2223  0036D0  0101               	movlb	1	; () banked
  2224  0036D2  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2225  0036D4  0EE8               	movlw	232
  2226  0036D6  6F4C               	movwf	_set_speed& (0+255),b
  2227                           
  2228                           ;parcheggio.c: 332: data_steering[0] = 0;
  2229  0036D8  0E00               	movlw	0
  2230  0036DA  0101               	movlb	1	; () banked
  2231  0036DC  6F7D               	movwf	_data_steering& (0+255),b
  2232                           
  2233                           ; BSR set to: 1
  2234                           ;parcheggio.c: 333: asd = 1;
  2235  0036DE  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2236                           
  2237                           ; BSR set to: 1
  2238                           ;parcheggio.c: 334: data_test[0] = prima_sterzata + 13;
  2239  0036E0  0E00               	movlw	0
  2240  0036E2  0100               	movlb	0	; () banked
  2241  0036E4  6FAD               	movwf	___fladd@a& (0+255),b
  2242  0036E6  0E00               	movlw	0
  2243  0036E8  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2244  0036EA  0E50               	movlw	80
  2245  0036EC  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2246  0036EE  0E41               	movlw	65
  2247  0036F0  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2248  0036F2  C138  F0A9         	movff	_prima_sterzata,___fladd@b
  2249  0036F6  C139  F0AA         	movff	_prima_sterzata+1,___fladd@b+1
  2250  0036FA  C13A  F0AB         	movff	_prima_sterzata+2,___fladd@b+2
  2251  0036FE  C13B  F0AC         	movff	_prima_sterzata+3,___fladd@b+3
  2252  003702  EC3D  F015         	call	___fladd	;wreg free
  2253  003706  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2254  00370A  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2255  00370E  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2256  003712  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2257  003716  EC62  F02C         	call	___fltol	;wreg free
  2258  00371A  0100               	movlb	0	; () banked
  2259  00371C  51C1               	movf	?___fltol& (0+255),w,b
  2260  00371E  0101               	movlb	1	; () banked
  2261  003720  6F85               	movwf	_data_test& (0+255),b
  2262                           
  2263                           ; BSR set to: 1
  2264                           ;parcheggio.c: 335: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2265  003722  0E0D               	movlw	13
  2266  003724  0100               	movlb	0	; () banked
  2267  003726  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2268  003728  0E00               	movlw	0
  2269  00372A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2270  00372C  0E00               	movlw	0
  2271  00372E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2272  003730  0E00               	movlw	0
  2273  003732  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2274  003734  0E85               	movlw	low _data_test
  2275  003736  0100               	movlb	0	; () banked
  2276  003738  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2277  00373A  0E01               	movlw	high _data_test
  2278  00373C  0100               	movlb	0	; () banked
  2279  00373E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2280  003740  0E08               	movlw	8
  2281  003742  0100               	movlb	0	; () banked
  2282  003744  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2283  003746  0EBC               	movlw	188
  2284  003748  0100               	movlb	0	; () banked
  2285  00374A  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2286  00374C  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2287                           
  2288                           ;parcheggio.c: 336: can_send();
  2289  003750  ECA9  F02A         	call	_can_send	;wreg free
  2290  003754                     l771:
  2291  003754  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2292  003756  D7FE               	goto	l771
  2293                           
  2294                           ;parcheggio.c: 338: data_brake [0] = 0;
  2295  003758  0E00               	movlw	0
  2296  00375A  0101               	movlb	1	; () banked
  2297  00375C  6F65               	movwf	_data_brake& (0+255),b
  2298                           
  2299                           ;parcheggio.c: 339: data_brake [1] = 1;
  2300  00375E  0E01               	movlw	1
  2301  003760  0101               	movlb	1	; () banked
  2302  003762  6F66               	movwf	(_data_brake+1)& (0+255),b
  2303                           
  2304                           ;parcheggio.c: 340: set_speed = 0;
  2305  003764  0E00               	movlw	0
  2306  003766  0101               	movlb	1	; () banked
  2307  003768  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2308  00376A  0E00               	movlw	0
  2309  00376C  6F4C               	movwf	_set_speed& (0+255),b
  2310                           
  2311                           ;parcheggio.c: 341: data_steering[0] = 90;
  2312  00376E  0E5A               	movlw	90
  2313  003770  0101               	movlb	1	; () banked
  2314  003772  6F7D               	movwf	_data_steering& (0+255),b
  2315                           
  2316                           ; BSR set to: 1
  2317                           ;parcheggio.c: 342: can_send();
  2318  003774  ECA9  F02A         	call	_can_send	;wreg free
  2319                           
  2320                           ;parcheggio.c: 343: delay_s(1);
  2321  003778  0E01               	movlw	1
  2322  00377A  ECB4  F02F         	call	_delay_s
  2323                           
  2324                           ;parcheggio.c: 344: if (sensor_distance [2] > 20) {
  2325  00377E  5029               	movf	_sensor_distance+5,w,c	;volatile
  2326  003780  E104               	bnz	u9800
  2327  003782  0E15               	movlw	21
  2328  003784  5C28               	subwf	_sensor_distance+4,w,c	;volatile
  2329  003786  A0D8               	btfss	status,0,c
  2330  003788  D017               	goto	l7585
  2331  00378A                     u9800:
  2332                           
  2333                           ;parcheggio.c: 345: data_brake [0] = 3;
  2334  00378A  0E03               	movlw	3
  2335  00378C  0101               	movlb	1	; () banked
  2336  00378E  6F65               	movwf	_data_brake& (0+255),b
  2337                           
  2338                           ;parcheggio.c: 346: data_brake [1] = 1;
  2339  003790  0E01               	movlw	1
  2340  003792  0101               	movlb	1	; () banked
  2341  003794  6F66               	movwf	(_data_brake+1)& (0+255),b
  2342                           
  2343                           ;parcheggio.c: 347: set_speed = 500;
  2344  003796  0E01               	movlw	1
  2345  003798  0101               	movlb	1	; () banked
  2346  00379A  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2347  00379C  0EF4               	movlw	244
  2348  00379E  6F4C               	movwf	_set_speed& (0+255),b
  2349                           
  2350                           ;parcheggio.c: 348: data_steering[0] = 90;
  2351  0037A0  0E5A               	movlw	90
  2352  0037A2  0101               	movlb	1	; () banked
  2353  0037A4  6F7D               	movwf	_data_steering& (0+255),b
  2354                           
  2355                           ; BSR set to: 1
  2356                           ;parcheggio.c: 349: dir = 1;
  2357  0037A6  8446               	bsf	_dir/(0+8),_dir& (0+7),c
  2358                           
  2359                           ; BSR set to: 1
  2360                           ;parcheggio.c: 350: can_send();
  2361  0037A8  ECA9  F02A         	call	_can_send	;wreg free
  2362  0037AC                     l7583:
  2363  0037AC  5029               	movf	_sensor_distance+5,w,c	;volatile
  2364  0037AE  E1FE               	bnz	l7583
  2365  0037B0  0E15               	movlw	21
  2366  0037B2  5C28               	subwf	_sensor_distance+4,w,c	;volatile
  2367  0037B4  B0D8               	btfsc	status,0,c
  2368  0037B6  D7FA               	goto	l7583
  2369  0037B8                     l7585:
  2370                           
  2371                           ;parcheggio.c: 352: }
  2372                           ;parcheggio.c: 353: data_brake [0] = 0;
  2373  0037B8  0E00               	movlw	0
  2374  0037BA  0101               	movlb	1	; () banked
  2375  0037BC  6F65               	movwf	_data_brake& (0+255),b
  2376                           
  2377                           ;parcheggio.c: 354: data_brake [1] = 1;
  2378  0037BE  0E01               	movlw	1
  2379  0037C0  0101               	movlb	1	; () banked
  2380  0037C2  6F66               	movwf	(_data_brake+1)& (0+255),b
  2381                           
  2382                           ;parcheggio.c: 355: set_speed = 0;
  2383  0037C4  0E00               	movlw	0
  2384  0037C6  0101               	movlb	1	; () banked
  2385  0037C8  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2386  0037CA  0E00               	movlw	0
  2387  0037CC  6F4C               	movwf	_set_speed& (0+255),b
  2388                           
  2389                           ;parcheggio.c: 356: data_steering[0] = 90;
  2390  0037CE  0E5A               	movlw	90
  2391  0037D0  0101               	movlb	1	; () banked
  2392  0037D2  6F7D               	movwf	_data_steering& (0+255),b
  2393                           
  2394                           ; BSR set to: 1
  2395                           ;parcheggio.c: 357: dir = 0;
  2396  0037D4  9446               	bcf	_dir/(0+8),_dir& (0+7),c
  2397                           
  2398                           ; BSR set to: 1
  2399                           ;parcheggio.c: 358: can_send();
  2400  0037D6  ECA9  F02A         	call	_can_send	;wreg free
  2401                           
  2402                           ;parcheggio.c: 359: delay_s(1);
  2403  0037DA  0E01               	movlw	1
  2404  0037DC  ECB4  F02F         	call	_delay_s
  2405                           
  2406                           ;parcheggio.c: 360: data[0] = 3;
  2407  0037E0  0E03               	movlw	3
  2408  0037E2  0101               	movlb	1	; () banked
  2409  0037E4  6F5D               	movwf	_data& (0+255),b
  2410  0037E6                     l7595:
  2411  0037E6  ECCA  F02F         	call	_CANisTxReady	;wreg free
  2412  0037EA  0900               	iorlw	0
  2413  0037EC  B4D8               	btfsc	status,2,c
  2414  0037EE  D7FB               	goto	l7595
  2415                           
  2416                           ;parcheggio.c: 362: CANsendMessage(0b00000001011, data, 8, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2417  0037F0  0E0B               	movlw	11
  2418  0037F2  0100               	movlb	0	; () banked
  2419  0037F4  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2420  0037F6  0E00               	movlw	0
  2421  0037F8  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2422  0037FA  0E00               	movlw	0
  2423  0037FC  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2424  0037FE  0E00               	movlw	0
  2425  003800  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2426  003802  0E5D               	movlw	low _data
  2427  003804  0100               	movlb	0	; () banked
  2428  003806  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2429  003808  0E01               	movlw	high _data
  2430  00380A  0100               	movlb	0	; () banked
  2431  00380C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2432  00380E  0E08               	movlw	8
  2433  003810  0100               	movlb	0	; () banked
  2434  003812  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2435  003814  0EBC               	movlw	188
  2436  003816  0100               	movlb	0	; () banked
  2437  003818  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2438  00381A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2439                           
  2440                           ;parcheggio.c: 363: delay_ms(100);
  2441  00381E  0E00               	movlw	0
  2442  003820  0100               	movlb	0	; () banked
  2443  003822  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  2444  003824  0E64               	movlw	100
  2445  003826  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  2446  003828  EC84  F02F         	call	_delay_ms	;wreg free
  2447  00382C  00FF               	reset		;# 
  2448  00382E                     l7601:
  2449  00382E  AA81               	btfss	3969,5,c	;volatile
  2450  003830  0012               	return	
  2451  003832  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2452  003834  0012               	return	
  2453  003836  A647               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2454  003838  0012               	return	
  2455  00383A  D639               	goto	l764
  2456  00383C                     __end_of_park_routine:
  2457                           	opt stack 0
  2458                           tblptru	equ	0xFF8
  2459                           tblptrh	equ	0xFF7
  2460                           tblptrl	equ	0xFF6
  2461                           tablat	equ	0xFF5
  2462                           postinc0	equ	0xFEE
  2463                           wreg	equ	0xFE8
  2464                           postdec1	equ	0xFE5
  2465                           fsr1l	equ	0xFE1
  2466                           postinc2	equ	0xFDE
  2467                           postdec2	equ	0xFDD
  2468                           status	equ	0xFD8
  2469                           
  2470 ;; *************** function _parallelo *****************
  2471 ;; Defined at:
  2472 ;;		line 389 in file "parcheggio.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;		None
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;		None
  2477 ;; Return value:  Size  Location     Type
  2478 ;;		None               void
  2479 ;; Registers used:
  2480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2488 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2489 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2490 ;;Total ram usage:        2 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; Hardware stack levels required when called:    8
  2493 ;; This function calls:
  2494 ;;		___fladd
  2495 ;;		___fldiv
  2496 ;;		___flge
  2497 ;;		___flmul
  2498 ;;		___fltol
  2499 ;;		___xxtofl
  2500 ;;		_abs
  2501 ;;		_asin
  2502 ;;		_can_send
  2503 ;;		_sqrt
  2504 ;; This function is called by:
  2505 ;;		_park_search
  2506 ;;		_park_routine
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           	psect	text3
  2511  00498E                     __ptext3:
  2512                           	opt stack 0
  2513  00498E                     _parallelo:
  2514                           	opt stack 21
  2515                           
  2516                           ;parcheggio.c: 390: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  2517                           
  2518                           ;incstack = 0
  2519  00498E  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  2520  004992  CFDE F0E2          	movff	postinc2,??_parallelo
  2521  004996  CFDD F0E3          	movff	postdec2,??_parallelo+1
  2522  00499A  0100               	movlb	0	; () banked
  2523  00499C  1FE2               	comf	??_parallelo& (0+255),f,b
  2524  00499E  1FE3               	comf	(??_parallelo+1)& (0+255),f,b
  2525  0049A0  4BE2               	infsnz	??_parallelo& (0+255),f,b
  2526  0049A2  2BE3               	incf	(??_parallelo+1)& (0+255),f,b
  2527  0049A4  5024               	movf	_sensor_distance,w,c	;volatile
  2528  0049A6  0100               	movlb	0	; () banked
  2529  0049A8  25E2               	addwf	??_parallelo& (0+255),w,b
  2530  0049AA  0100               	movlb	0	; () banked
  2531  0049AC  6F77               	movwf	abs@a& (0+255),b
  2532  0049AE  5025               	movf	_sensor_distance+1,w,c	;volatile
  2533  0049B0  0100               	movlb	0	; () banked
  2534  0049B2  21E3               	addwfc	(??_parallelo+1)& (0+255),w,b
  2535  0049B4  0100               	movlb	0	; () banked
  2536  0049B6  6F78               	movwf	(abs@a+1)& (0+255),b
  2537  0049B8  EC9E  F02F         	call	_abs	;wreg free
  2538  0049BC  0100               	movlb	0	; () banked
  2539  0049BE  C077  F0CB         	movff	?_abs,___xxtofl@val
  2540  0049C2  0100               	movlb	0	; () banked
  2541  0049C4  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  2542  0049C8  0100               	movlb	0	; () banked
  2543  0049CA  0E00               	movlw	0
  2544  0049CC  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2545  0049CE  0EFF               	movlw	-1
  2546  0049D0  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  2547  0049D2  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  2548  0049D4  0E01               	movlw	1
  2549  0049D6  EC36  F027         	call	___xxtofl
  2550  0049DA  C0CB  F0E4         	movff	?___xxtofl,_alignment_gap
  2551  0049DE  C0CC  F0E5         	movff	?___xxtofl+1,_alignment_gap+1
  2552  0049E2  C0CD  F0E6         	movff	?___xxtofl+2,_alignment_gap+2
  2553  0049E6  C0CE  F0E7         	movff	?___xxtofl+3,_alignment_gap+3
  2554                           
  2555                           ;parcheggio.c: 391: if (alignment_gap < 30) {
  2556  0049EA  C0E4  F0C5         	movff	_alignment_gap,___flge@ff1
  2557  0049EE  C0E5  F0C6         	movff	_alignment_gap+1,___flge@ff1+1
  2558  0049F2  C0E6  F0C7         	movff	_alignment_gap+2,___flge@ff1+2
  2559  0049F6  C0E7  F0C8         	movff	_alignment_gap+3,___flge@ff1+3
  2560  0049FA  0E00               	movlw	0
  2561  0049FC  0100               	movlb	0	; () banked
  2562  0049FE  6FC9               	movwf	___flge@ff2& (0+255),b
  2563  004A00  0E00               	movlw	0
  2564  004A02  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  2565  004A04  0EF0               	movlw	240
  2566  004A06  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  2567  004A08  0E41               	movlw	65
  2568  004A0A  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  2569  004A0C  ECE1  F029         	call	___flge	;wreg free
  2570  004A10  0100               	movlb	0	; () banked
  2571  004A12  B0D8               	btfsc	status,0,c
  2572  004A14  D0F9               	goto	l801
  2573                           
  2574                           ; BSR set to: 0
  2575                           ;parcheggio.c: 392: if ((sensor_distance[0] < 40) && (sensor_distance[1] < 40)) {
  2576  004A16  5025               	movf	_sensor_distance+1,w,c	;volatile
  2577  004A18  E103               	bnz	u9441
  2578  004A1A  0E28               	movlw	40
  2579  004A1C  5C24               	subwf	_sensor_distance,w,c	;volatile
  2580  004A1E  B0D8               	btfsc	status,0,c
  2581  004A20                     u9441:
  2582  004A20  D0E5               	goto	l7351
  2583                           
  2584                           ; BSR set to: 0
  2585  004A22  5027               	movf	_sensor_distance+3,w,c	;volatile
  2586  004A24  E103               	bnz	u9451
  2587  004A26  0E28               	movlw	40
  2588  004A28  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  2589  004A2A  B0D8               	btfsc	status,0,c
  2590  004A2C                     u9451:
  2591  004A2C  D0DF               	goto	l7351
  2592                           
  2593                           ; BSR set to: 0
  2594                           ;parcheggio.c: 396: x = ((100) + (alignment_gap * alignment_gap));
  2595  004A2E  C0E4  F094         	movff	_alignment_gap,___flmul@a
  2596  004A32  C0E5  F095         	movff	_alignment_gap+1,___flmul@a+1
  2597  004A36  C0E6  F096         	movff	_alignment_gap+2,___flmul@a+2
  2598  004A3A  C0E7  F097         	movff	_alignment_gap+3,___flmul@a+3
  2599  004A3E  C0E4  F090         	movff	_alignment_gap,___flmul@b
  2600  004A42  C0E5  F091         	movff	_alignment_gap+1,___flmul@b+1
  2601  004A46  C0E6  F092         	movff	_alignment_gap+2,___flmul@b+2
  2602  004A4A  C0E7  F093         	movff	_alignment_gap+3,___flmul@b+3
  2603  004A4E  EC91  F017         	call	___flmul	;wreg free
  2604  004A52  C090  F0A9         	movff	?___flmul,___fladd@b
  2605  004A56  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  2606  004A5A  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  2607  004A5E  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  2608  004A62  0E00               	movlw	0
  2609  004A64  0100               	movlb	0	; () banked
  2610  004A66  6FAD               	movwf	___fladd@a& (0+255),b
  2611  004A68  0E00               	movlw	0
  2612  004A6A  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2613  004A6C  0EC8               	movlw	200
  2614  004A6E  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2615  004A70  0E42               	movlw	66
  2616  004A72  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2617  004A74  EC3D  F015         	call	___fladd	;wreg free
  2618  004A78  C0A9  F13C         	movff	?___fladd,_x
  2619  004A7C  C0AA  F13D         	movff	?___fladd+1,_x+1
  2620  004A80  C0AB  F13E         	movff	?___fladd+2,_x+2
  2621  004A84  C0AC  F13F         	movff	?___fladd+3,_x+3
  2622                           
  2623                           ;parcheggio.c: 397: x = sqrt(x);
  2624  004A88  C13C  F0C1         	movff	_x,sqrt@a
  2625  004A8C  C13D  F0C2         	movff	_x+1,sqrt@a+1
  2626  004A90  C13E  F0C3         	movff	_x+2,sqrt@a+2
  2627  004A94  C13F  F0C4         	movff	_x+3,sqrt@a+3
  2628  004A98  EC1E  F01C         	call	_sqrt	;wreg free
  2629  004A9C  C0C1  F13C         	movff	?_sqrt,_x
  2630  004AA0  C0C2  F13D         	movff	?_sqrt+1,_x+1
  2631  004AA4  C0C3  F13E         	movff	?_sqrt+2,_x+2
  2632  004AA8  C0C4  F13F         	movff	?_sqrt+3,_x+3
  2633                           
  2634                           ;parcheggio.c: 398: z = alignment_gap / x;
  2635  004AAC  C0E4  F077         	movff	_alignment_gap,___fldiv@b
  2636  004AB0  C0E5  F078         	movff	_alignment_gap+1,___fldiv@b+1
  2637  004AB4  C0E6  F079         	movff	_alignment_gap+2,___fldiv@b+2
  2638  004AB8  C0E7  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  2639  004ABC  C13C  F07B         	movff	_x,___fldiv@a
  2640  004AC0  C13D  F07C         	movff	_x+1,___fldiv@a+1
  2641  004AC4  C13E  F07D         	movff	_x+2,___fldiv@a+2
  2642  004AC8  C13F  F07E         	movff	_x+3,___fldiv@a+3
  2643  004ACC  EC03  F01E         	call	___fldiv	;wreg free
  2644  004AD0  C077  F140         	movff	?___fldiv,_z
  2645  004AD4  C078  F141         	movff	?___fldiv+1,_z+1
  2646  004AD8  C079  F142         	movff	?___fldiv+2,_z+2
  2647  004ADC  C07A  F143         	movff	?___fldiv+3,_z+3
  2648                           
  2649                           ;parcheggio.c: 399: z = asin(z);
  2650  004AE0  C140  F0DE         	movff	_z,asin@x
  2651  004AE4  C141  F0DF         	movff	_z+1,asin@x+1
  2652  004AE8  C142  F0E0         	movff	_z+2,asin@x+2
  2653  004AEC  C143  F0E1         	movff	_z+3,asin@x+3
  2654  004AF0  EC3E  F023         	call	_asin	;wreg free
  2655  004AF4  C0DE  F140         	movff	?_asin,_z
  2656  004AF8  C0DF  F141         	movff	?_asin+1,_z+1
  2657  004AFC  C0E0  F142         	movff	?_asin+2,_z+2
  2658  004B00  C0E1  F143         	movff	?_asin+3,_z+3
  2659                           
  2660                           ;parcheggio.c: 400: z = z / 3.14159265358979323846 * 180;
  2661  004B04  0EDB               	movlw	219
  2662  004B06  0100               	movlb	0	; () banked
  2663  004B08  6F7B               	movwf	___fldiv@a& (0+255),b
  2664  004B0A  0E0F               	movlw	15
  2665  004B0C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2666  004B0E  0E49               	movlw	73
  2667  004B10  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2668  004B12  0E40               	movlw	64
  2669  004B14  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2670  004B16  C140  F077         	movff	_z,___fldiv@b
  2671  004B1A  C141  F078         	movff	_z+1,___fldiv@b+1
  2672  004B1E  C142  F079         	movff	_z+2,___fldiv@b+2
  2673  004B22  C143  F07A         	movff	_z+3,___fldiv@b+3
  2674  004B26  EC03  F01E         	call	___fldiv	;wreg free
  2675  004B2A  C077  F090         	movff	?___fldiv,___flmul@b
  2676  004B2E  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  2677  004B32  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  2678  004B36  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  2679  004B3A  0E00               	movlw	0
  2680  004B3C  0100               	movlb	0	; () banked
  2681  004B3E  6F94               	movwf	___flmul@a& (0+255),b
  2682  004B40  0E00               	movlw	0
  2683  004B42  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2684  004B44  0E34               	movlw	52
  2685  004B46  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2686  004B48  0E43               	movlw	67
  2687  004B4A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2688  004B4C  EC91  F017         	call	___flmul	;wreg free
  2689  004B50  C090  F140         	movff	?___flmul,_z
  2690  004B54  C091  F141         	movff	?___flmul+1,_z+1
  2691  004B58  C092  F142         	movff	?___flmul+2,_z+2
  2692  004B5C  C093  F143         	movff	?___flmul+3,_z+3
  2693                           
  2694                           ;parcheggio.c: 401: data_correction[0] = z;
  2695  004B60  C140  F0C1         	movff	_z,___fltol@f1
  2696  004B64  C141  F0C2         	movff	_z+1,___fltol@f1+1
  2697  004B68  C142  F0C3         	movff	_z+2,___fltol@f1+2
  2698  004B6C  C143  F0C4         	movff	_z+3,___fltol@f1+3
  2699  004B70  EC62  F02C         	call	___fltol	;wreg free
  2700  004B74  0100               	movlb	0	; () banked
  2701  004B76  51C1               	movf	?___fltol& (0+255),w,b
  2702  004B78  0101               	movlb	1	; () banked
  2703  004B7A  6F6D               	movwf	_data_correction& (0+255),b
  2704                           
  2705                           ; BSR set to: 1
  2706                           ;parcheggio.c: 403: if (sensor_distance[0] < sensor_distance[1]) {
  2707  004B7C  5026               	movf	_sensor_distance+2,w,c	;volatile
  2708  004B7E  5C24               	subwf	_sensor_distance,w,c	;volatile
  2709  004B80  5027               	movf	_sensor_distance+3,w,c	;volatile
  2710  004B82  5825               	subwfb	_sensor_distance+1,w,c	;volatile
  2711  004B84  B0D8               	btfsc	status,0,c
  2712  004B86  D002               	goto	l7343
  2713                           
  2714                           ; BSR set to: 1
  2715                           ;parcheggio.c: 404: data_correction[1] = 0;
  2716  004B88  0E00               	movlw	0
  2717  004B8A  D001               	goto	L1
  2718  004B8C                     l7343:
  2719                           
  2720                           ; BSR set to: 1
  2721                           ;parcheggio.c: 406: data_correction[1] = 1;
  2722  004B8C  0E01               	movlw	1
  2723  004B8E                     L1:
  2724  004B8E  0101               	movlb	1	; () banked
  2725  004B90  6F6E               	movwf	(_data_correction+1)& (0+255),b
  2726                           
  2727                           ; BSR set to: 1
  2728                           ;parcheggio.c: 407: }
  2729                           ;parcheggio.c: 408: if ((old_alignment_gap != alignment_gap) || (old_data_correction != 
      +                          data_correction[1])) {
  2730                           
  2731                           ; BSR set to: 1
  2732  004B92  0100               	movlb	0	; () banked
  2733  004B94  51E4               	movf	_alignment_gap& (0+255),w,b
  2734  004B96  0101               	movlb	1	; () banked
  2735  004B98  1934               	xorwf	_old_alignment_gap& (0+255),w,b
  2736  004B9A  E117               	bnz	l807
  2737  004B9C  0100               	movlb	0	; () banked
  2738  004B9E  51E5               	movf	(_alignment_gap+1)& (0+255),w,b
  2739  004BA0  0101               	movlb	1	; () banked
  2740  004BA2  1935               	xorwf	(_old_alignment_gap+1)& (0+255),w,b
  2741  004BA4  E112               	bnz	l807
  2742  004BA6  0100               	movlb	0	; () banked
  2743  004BA8  51E6               	movf	(_alignment_gap+2)& (0+255),w,b
  2744  004BAA  0101               	movlb	1	; () banked
  2745  004BAC  1936               	xorwf	(_old_alignment_gap+2)& (0+255),w,b
  2746  004BAE  E10D               	bnz	l807
  2747  004BB0  0100               	movlb	0	; () banked
  2748  004BB2  51E7               	movf	(_alignment_gap+3)& (0+255),w,b
  2749  004BB4  0101               	movlb	1	; () banked
  2750  004BB6  1937               	xorwf	(_old_alignment_gap+3)& (0+255),w,b
  2751  004BB8  A4D8               	btfss	status,2,c
  2752  004BBA  D007               	goto	l807
  2753                           
  2754                           ; BSR set to: 1
  2755  004BBC  0E00               	movlw	0
  2756  004BBE  B047               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2757  004BC0  0E01               	movlw	1
  2758  004BC2  0101               	movlb	1	; () banked
  2759  004BC4  196E               	xorwf	(_data_correction+1)& (0+255),w,b
  2760  004BC6  B4D8               	btfsc	status,2,c
  2761  004BC8  0012               	return	
  2762  004BCA                     l807:
  2763                           
  2764                           ; BSR set to: 1
  2765                           ;parcheggio.c: 409: old_alignment_gap = alignment_gap;
  2766  004BCA  C0E4  F134         	movff	_alignment_gap,_old_alignment_gap
  2767  004BCE  C0E5  F135         	movff	_alignment_gap+1,_old_alignment_gap+1
  2768  004BD2  C0E6  F136         	movff	_alignment_gap+2,_old_alignment_gap+2
  2769  004BD6  C0E7  F137         	movff	_alignment_gap+3,_old_alignment_gap+3
  2770                           
  2771                           ;parcheggio.c: 410: old_data_correction = data_correction[1];
  2772  004BDA  0101               	movlb	1	; () banked
  2773  004BDC  A16E               	btfss	(_data_correction+1)& (0+255),0,b
  2774  004BDE  D002               	goto	u9490
  2775  004BE0  8047               	bsf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2776  004BE2  D001               	goto	l7349
  2777  004BE4                     u9490:
  2778  004BE4  9047               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2779  004BE6                     l7349:
  2780                           
  2781                           ;parcheggio.c: 411: can_send();
  2782  004BE6  ECA9  F02A         	call	_can_send	;wreg free
  2783                           
  2784                           ;parcheggio.c: 412: }
  2785                           ;parcheggio.c: 413: } else if (data_correction[0] != old_data_correction) {
  2786  004BEA  0012               	return	
  2787  004BEC                     l7351:
  2788  004BEC  0E00               	movlw	0
  2789  004BEE  B047               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2790  004BF0  0E01               	movlw	1
  2791  004BF2  0101               	movlb	1	; () banked
  2792  004BF4  196D               	xorwf	_data_correction& (0+255),w,b
  2793  004BF6  B4D8               	btfsc	status,2,c
  2794  004BF8  0012               	return	
  2795                           
  2796                           ; BSR set to: 1
  2797                           ;parcheggio.c: 414: data_correction[0] = 0;
  2798  004BFA  0E00               	movlw	0
  2799  004BFC  0101               	movlb	1	; () banked
  2800  004BFE  6F6D               	movwf	_data_correction& (0+255),b
  2801                           
  2802                           ; BSR set to: 1
  2803                           ;parcheggio.c: 415: old_data_correction = 0;
  2804  004C00  9047               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2805                           
  2806                           ; BSR set to: 1
  2807                           ;parcheggio.c: 416: can_send();
  2808  004C02  ECA9  F02A         	call	_can_send	;wreg free
  2809                           
  2810                           ;parcheggio.c: 417: }
  2811                           ;parcheggio.c: 418: } else {
  2812  004C06  0012               	return	
  2813  004C08                     l801:
  2814                           
  2815                           ; BSR set to: 0
  2816                           ;parcheggio.c: 419: if (old_data_correction != 0) {
  2817  004C08  A047               	btfss	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2818  004C0A  0012               	return	
  2819                           
  2820                           ; BSR set to: 0
  2821                           ;parcheggio.c: 420: data_correction[0] = 0;
  2822  004C0C  0E00               	movlw	0
  2823  004C0E  0101               	movlb	1	; () banked
  2824  004C10  6F6D               	movwf	_data_correction& (0+255),b
  2825                           
  2826                           ; BSR set to: 1
  2827                           ;parcheggio.c: 421: old_data_correction = 0;
  2828  004C12  9047               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2829                           
  2830                           ; BSR set to: 1
  2831                           ;parcheggio.c: 422: can_send();
  2832  004C14  ECA9  F02A         	call	_can_send	;wreg free
  2833  004C18  0012               	return	
  2834  004C1A                     __end_of_parallelo:
  2835                           	opt stack 0
  2836                           tblptru	equ	0xFF8
  2837                           tblptrh	equ	0xFF7
  2838                           tblptrl	equ	0xFF6
  2839                           tablat	equ	0xFF5
  2840                           postinc0	equ	0xFEE
  2841                           wreg	equ	0xFE8
  2842                           postdec1	equ	0xFE5
  2843                           fsr1l	equ	0xFE1
  2844                           postinc2	equ	0xFDE
  2845                           postdec2	equ	0xFDD
  2846                           status	equ	0xFD8
  2847                           
  2848 ;; *************** function _can_send *****************
  2849 ;; Defined at:
  2850 ;;		line 368 in file "parcheggio.c"
  2851 ;; Parameters:    Size  Location     Type
  2852 ;;		None
  2853 ;; Auto vars:     Size  Location     Type
  2854 ;;  data_correct    0   39[BANK0 ] unsigned char [0]
  2855 ;; Return value:  Size  Location     Type
  2856 ;;		None               void
  2857 ;; Registers used:
  2858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2859 ;; Tracked objects:
  2860 ;;		On entry : 0/0
  2861 ;;		On exit  : 0/0
  2862 ;;		Unchanged: 0/0
  2863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2866 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2867 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2868 ;;Total ram usage:        0 bytes
  2869 ;; Hardware stack levels used:    1
  2870 ;; Hardware stack levels required when called:    5
  2871 ;; This function calls:
  2872 ;;		_CANisTxReady
  2873 ;;		_CANsendMessage
  2874 ;; This function is called by:
  2875 ;;		_park_routine
  2876 ;;		_parallelo
  2877 ;; This function uses a non-reentrant model
  2878 ;;
  2879                           
  2880                           	psect	text4
  2881  005552                     __ptext4:
  2882                           	opt stack 0
  2883  005552                     _can_send:
  2884                           	opt stack 23
  2885                           
  2886                           ;parcheggio.c: 369: if (PORTBbits.RB5 == 1) {
  2887                           
  2888                           ;incstack = 0
  2889  005552  AA81               	btfss	3969,5,c	;volatile
  2890  005554  D063               	goto	l7251
  2891  005556                     l7231:
  2892  005556  ECCA  F02F         	call	_CANisTxReady	;wreg free
  2893  00555A  06E8               	decf	wreg,f,c
  2894  00555C  A4D8               	btfss	status,2,c
  2895  00555E  D7FB               	goto	l7231
  2896                           
  2897                           ;parcheggio.c: 371: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2898  005560  0E05               	movlw	5
  2899  005562  0100               	movlb	0	; () banked
  2900  005564  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2901  005566  0E00               	movlw	0
  2902  005568  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2903  00556A  0E00               	movlw	0
  2904  00556C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2905  00556E  0E00               	movlw	0
  2906  005570  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2907  005572  0E7D               	movlw	low _data_steering
  2908  005574  0100               	movlb	0	; () banked
  2909  005576  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2910  005578  0E01               	movlw	high _data_steering
  2911  00557A  0100               	movlb	0	; () banked
  2912  00557C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2913  00557E  0E08               	movlw	8
  2914  005580  0100               	movlb	0	; () banked
  2915  005582  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2916  005584  0EBC               	movlw	188
  2917  005586  0100               	movlb	0	; () banked
  2918  005588  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2919  00558A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2920                           
  2921                           ;parcheggio.c: 372: data_speed[0] = set_speed;
  2922  00558E  C14C  F175         	movff	_set_speed,_data_speed
  2923                           
  2924                           ;parcheggio.c: 373: data_speed[1] = (set_speed >> 8);
  2925  005592  0101               	movlb	1	; () banked
  2926  005594  514D               	movf	(_set_speed+1)& (0+255),w,b
  2927  005596  0101               	movlb	1	; () banked
  2928  005598  6F76               	movwf	(_data_speed+1)& (0+255),b
  2929                           
  2930                           ; BSR set to: 1
  2931                           ;parcheggio.c: 374: data_speed[2] = dir;
  2932  00559A  0E00               	movlw	0
  2933  00559C  B446               	btfsc	_dir/(0+8),_dir& (0+7),c
  2934  00559E  0E01               	movlw	1
  2935  0055A0  0101               	movlb	1	; () banked
  2936  0055A2  6F77               	movwf	(_data_speed+2)& (0+255),b
  2937  0055A4                     l7241:
  2938  0055A4  ECCA  F02F         	call	_CANisTxReady	;wreg free
  2939  0055A8  06E8               	decf	wreg,f,c
  2940  0055AA  A4D8               	btfss	status,2,c
  2941  0055AC  D7FB               	goto	l7241
  2942                           
  2943                           ;parcheggio.c: 376: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2944  0055AE  0E03               	movlw	3
  2945  0055B0  0100               	movlb	0	; () banked
  2946  0055B2  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2947  0055B4  0E00               	movlw	0
  2948  0055B6  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2949  0055B8  0E00               	movlw	0
  2950  0055BA  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2951  0055BC  0E00               	movlw	0
  2952  0055BE  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2953  0055C0  0E75               	movlw	low _data_speed
  2954  0055C2  0100               	movlb	0	; () banked
  2955  0055C4  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2956  0055C6  0E01               	movlw	high _data_speed
  2957  0055C8  0100               	movlb	0	; () banked
  2958  0055CA  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2959  0055CC  0E08               	movlw	8
  2960  0055CE  0100               	movlb	0	; () banked
  2961  0055D0  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2962  0055D2  0EBC               	movlw	188
  2963  0055D4  0100               	movlb	0	; () banked
  2964  0055D6  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2965  0055D8  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2966  0055DC                     l7245:
  2967  0055DC  ECCA  F02F         	call	_CANisTxReady	;wreg free
  2968  0055E0  06E8               	decf	wreg,f,c
  2969  0055E2  A4D8               	btfss	status,2,c
  2970  0055E4  D7FB               	goto	l7245
  2971                           
  2972                           ;parcheggio.c: 378: data_brake[1] = 0;
  2973  0055E6  0E00               	movlw	0
  2974  0055E8  0101               	movlb	1	; () banked
  2975  0055EA  6F66               	movwf	(_data_brake+1)& (0+255),b
  2976                           
  2977                           ; BSR set to: 1
  2978                           ;parcheggio.c: 379: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2979  0055EC  0E04               	movlw	4
  2980  0055EE  0100               	movlb	0	; () banked
  2981  0055F0  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2982  0055F2  0E00               	movlw	0
  2983  0055F4  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2984  0055F6  0E00               	movlw	0
  2985  0055F8  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2986  0055FA  0E00               	movlw	0
  2987  0055FC  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2988  0055FE  0E65               	movlw	low _data_brake
  2989  005600  0100               	movlb	0	; () banked
  2990  005602  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2991  005604  0E01               	movlw	high _data_brake
  2992  005606  0100               	movlb	0	; () banked
  2993  005608  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2994  00560A  0E08               	movlw	8
  2995  00560C  0100               	movlb	0	; () banked
  2996  00560E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2997  005610  0EBC               	movlw	188
  2998  005612  0100               	movlb	0	; () banked
  2999  005614  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3000  005616  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3001                           
  3002                           ;parcheggio.c: 380: } else {
  3003  00561A  0012               	return	
  3004  00561C                     l7251:
  3005                           
  3006                           ;parcheggio.c: 381: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3007  00561C  0E0E               	movlw	14
  3008  00561E  0100               	movlb	0	; () banked
  3009  005620  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3010  005622  0E00               	movlw	0
  3011  005624  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3012  005626  0E00               	movlw	0
  3013  005628  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3014  00562A  0E00               	movlw	0
  3015  00562C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3016  00562E  0E6D               	movlw	low _data_correction
  3017  005630  0100               	movlb	0	; () banked
  3018  005632  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3019  005634  0E01               	movlw	high _data_correction
  3020  005636  0100               	movlb	0	; () banked
  3021  005638  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3022  00563A  0E08               	movlw	8
  3023  00563C  0100               	movlb	0	; () banked
  3024  00563E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3025  005640  0EBC               	movlw	188
  3026  005642  0100               	movlb	0	; () banked
  3027  005644  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3028  005646  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3029                           
  3030                           ;parcheggio.c: 382: unsigned char data_correction1[];
  3031                           ;parcheggio.c: 383: data_correction1[0] = data_correction[0];
  3032  00564A  EE20  F087         	lfsr	2,can_send@data_correction1
  3033  00564E  C16D  FFDF         	movff	_data_correction,indf2
  3034                           
  3035                           ;parcheggio.c: 384: data_correction1[1] = 0;
  3036  005652  0E00               	movlw	0
  3037  005654  CFE8 F088          	movff	wreg,can_send@data_correction1+1
  3038                           
  3039                           ;parcheggio.c: 385: CANsendMessage(0xAA, data_correction1, 8, CAN_CONFIG_STD_MSG & CAN_N
      +                          ORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3040  005658  0EAA               	movlw	170
  3041  00565A  0100               	movlb	0	; () banked
  3042  00565C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3043  00565E  0E00               	movlw	0
  3044  005660  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3045  005662  0E00               	movlw	0
  3046  005664  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3047  005666  0E00               	movlw	0
  3048  005668  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3049  00566A  0E87               	movlw	low can_send@data_correction1
  3050  00566C  0100               	movlb	0	; () banked
  3051  00566E  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3052  005670  0E00               	movlw	high can_send@data_correction1
  3053  005672  0100               	movlb	0	; () banked
  3054  005674  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3055  005676  0E08               	movlw	8
  3056  005678  0100               	movlb	0	; () banked
  3057  00567A  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3058  00567C  0EBC               	movlw	188
  3059  00567E  0100               	movlb	0	; () banked
  3060  005680  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3061  005682  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3062  005686  0012               	return	
  3063  005688                     __end_of_can_send:
  3064                           	opt stack 0
  3065                           tblptru	equ	0xFF8
  3066                           tblptrh	equ	0xFF7
  3067                           tblptrl	equ	0xFF6
  3068                           tablat	equ	0xFF5
  3069                           postinc0	equ	0xFEE
  3070                           wreg	equ	0xFE8
  3071                           postdec1	equ	0xFE5
  3072                           fsr1l	equ	0xFE1
  3073                           indf2	equ	0xFDF
  3074                           postinc2	equ	0xFDE
  3075                           postdec2	equ	0xFDD
  3076                           status	equ	0xFD8
  3077                           
  3078 ;; *************** function _CANsendMessage *****************
  3079 ;; Defined at:
  3080 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  3081 ;; Parameters:    Size  Location     Type
  3082 ;;  identifier      4   23[BANK0 ] unsigned long 
  3083 ;;  data            2   27[BANK0 ] PTR unsigned char 
  3084 ;;		 -> can_send@data_correction1(0), data_speed(8), data_brake(8), data_steering(8), 
  3085 ;;		 -> data_correction(8), data_test(8), data(8), 
  3086 ;;  dataLength      1   29[BANK0 ] unsigned char 
  3087 ;;  flags           1   30[BANK0 ] enum E16335
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;  tamp            4   35[BANK0 ] unsigned long 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;		None               void
  3092 ;; Registers used:
  3093 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3099 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3100 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3101 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3102 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3103 ;;Total ram usage:       16 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:    4
  3106 ;; This function calls:
  3107 ;;		Nothing
  3108 ;; This function is called by:
  3109 ;;		_park_search
  3110 ;;		_park_routine
  3111 ;;		_can_send
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115                           	psect	text5
  3116  001858                     __ptext5:
  3117                           	opt stack 0
  3118  001858                     _CANsendMessage:
  3119                           	opt stack 23
  3120                           
  3121                           ;inc\CANlib.h: 297: unsigned long tamp;
  3122                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
  3123                           
  3124                           ;incstack = 0
  3125  001858  010F               	movlb	15	; () banked
  3126  00185A  B740               	btfsc	64,3,b	;volatile
  3127  00185C  D13F               	goto	l363
  3128                           
  3129                           ; BSR set to: 15
  3130                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
  3131  00185E  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  3132                           
  3133                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
  3134  001862  0100               	movlb	0	; () banked
  3135  001864  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3136  001866  D003               	goto	l364
  3137                           
  3138                           ; BSR set to: 0
  3139                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
  3140  001868  010F               	movlb	15	; () banked
  3141  00186A  8D45               	bsf	69,6,b	;volatile
  3142  00186C  D002               	goto	l365
  3143  00186E                     l364:
  3144                           
  3145                           ; BSR set to: 0
  3146                           ;inc\CANlib.h: 303: else
  3147                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
  3148  00186E  010F               	movlb	15	; () banked
  3149  001870  9D45               	bcf	69,6,b	;volatile
  3150  001872                     l365:
  3151                           
  3152                           ; BSR set to: 15
  3153                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
  3154  001872  0100               	movlb	0	; () banked
  3155  001874  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3156  001876  D079               	goto	l366
  3157                           
  3158                           ; BSR set to: 0
  3159                           ;inc\CANlib.h: 307: {
  3160                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
  3161  001878  0100               	movlb	0	; () banked
  3162  00187A  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3163  00187C  0100               	movlb	0	; () banked
  3164  00187E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3165  001880  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3166  001882  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3167  001884  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
  3171  001886  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  3172                           
  3173                           ; BSR set to: 0
  3174                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
  3175  00188A  0E00               	movlw	0
  3176  00188C  0100               	movlb	0	; () banked
  3177  00188E  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3178  001890  0100               	movlb	0	; () banked
  3179  001892  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3180  001894  0EFF               	movlw	255
  3181  001896  0100               	movlb	0	; () banked
  3182  001898  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3183  00189A  0100               	movlb	0	; () banked
  3184  00189C  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3185  00189E  0E00               	movlw	0
  3186  0018A0  0100               	movlb	0	; () banked
  3187  0018A2  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3188  0018A4  0100               	movlb	0	; () banked
  3189  0018A6  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3190  0018A8  0E00               	movlw	0
  3191  0018AA  0100               	movlb	0	; () banked
  3192  0018AC  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3193  0018AE  0100               	movlb	0	; () banked
  3194  0018B0  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3195                           
  3196                           ; BSR set to: 0
  3197                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
  3198  0018B2  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3199  0018B6  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3200  0018BA  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3201  0018BE  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3202  0018C2  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3203  0018C6  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3204  0018CA  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3205  0018CE  0100               	movlb	0	; () banked
  3206  0018D0  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3207  0018D2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3208  0018D6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3209  0018DA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3210  0018DE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3211                           
  3212                           ; BSR set to: 0
  3213                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
  3214  0018E2  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  3215                           
  3216                           ; BSR set to: 0
  3217                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
  3218  0018E6  0E00               	movlw	0
  3219  0018E8  010F               	movlb	15	; () banked
  3220  0018EA  6F42               	movwf	66,b	;volatile
  3221                           
  3222                           ; BSR set to: 15
  3223                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
  3224  0018EC  010F               	movlb	15	; () banked
  3225  0018EE  8742               	bsf	66,3,b	;volatile
  3226                           
  3227                           ; BSR set to: 15
  3228                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
  3229  0018F0  0100               	movlb	0	; () banked
  3230  0018F2  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3231  0018F4  D002               	goto	l367
  3232                           
  3233                           ; BSR set to: 0
  3234                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
  3235  0018F6  010F               	movlb	15	; () banked
  3236  0018F8  8142               	bsf	66,0,b	;volatile
  3237  0018FA                     l367:
  3238                           
  3239                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
  3240  0018FA  0100               	movlb	0	; () banked
  3241  0018FC  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3242  0018FE  D002               	goto	l368
  3243                           
  3244                           ; BSR set to: 0
  3245                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
  3246  001900  010F               	movlb	15	; () banked
  3247  001902  8342               	bsf	66,1,b	;volatile
  3248  001904                     l368:
  3249                           
  3250                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
  3251  001904  0100               	movlb	0	; () banked
  3252  001906  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3253  001908  D002               	goto	l369
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
  3257  00190A  010F               	movlb	15	; () banked
  3258  00190C  8B42               	bsf	66,5,b	;volatile
  3259  00190E                     l369:
  3260                           
  3261                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
  3262  00190E  0100               	movlb	0	; () banked
  3263  001910  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3264  001912  D002               	goto	l370
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
  3268  001914  010F               	movlb	15	; () banked
  3269  001916  8D42               	bsf	66,6,b	;volatile
  3270  001918                     l370:
  3271                           
  3272                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
  3273  001918  0100               	movlb	0	; () banked
  3274  00191A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3275  00191C  D002               	goto	l6835
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
  3279  00191E  010F               	movlb	15	; () banked
  3280  001920  8F42               	bsf	66,7,b	;volatile
  3281  001922                     l6835:
  3282                           
  3283                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
  3284  001922  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3285  001926  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3286  00192A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3287  00192E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3288  001932  0E16               	movlw	22
  3289  001934  D006               	goto	u8750
  3290  001936                     u8755:
  3291  001936  0100               	movlb	0	; () banked
  3292  001938  90D8               	bcf	status,0,c
  3293  00193A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3294  00193C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3295  00193E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3296  001940  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3297  001942                     u8750:
  3298  001942  2EE8               	decfsz	wreg,f,c
  3299  001944  D7F8               	goto	u8755
  3300  001946  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3301  00194A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3302  00194E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3303  001952  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3304                           
  3305                           ; BSR set to: 0
  3306                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
  3307  001956  0100               	movlb	0	; () banked
  3308  001958  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3309  00195A  0100               	movlb	0	; () banked
  3310  00195C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3311  00195E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3312  001960  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3313  001962  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
  3317  001964  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3318                           
  3319                           ;inc\CANlib.h: 333: }
  3320  001968  D059               	goto	l6855
  3321  00196A                     l366:
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;inc\CANlib.h: 335: else
  3325                           ;inc\CANlib.h: 337: {
  3326                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
  3327  00196A  010F               	movlb	15	; () banked
  3328  00196C  9742               	bcf	66,3,b	;volatile
  3329                           
  3330                           ; BSR set to: 15
  3331                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
  3332  00196E  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3333  001972  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3334  001976  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3335  00197A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3336  00197E  0E04               	movlw	4
  3337  001980  D006               	goto	u8760
  3338  001982                     u8765:
  3339  001982  0100               	movlb	0	; () banked
  3340  001984  90D8               	bcf	status,0,c
  3341  001986  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3342  001988  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3343  00198A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3344  00198C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3345  00198E                     u8760:
  3346  00198E  2EE8               	decfsz	wreg,f,c
  3347  001990  D7F8               	goto	u8765
  3348  001992  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3349  001996  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3350  00199A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3351  00199E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
  3355  0019A2  0100               	movlb	0	; () banked
  3356  0019A4  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3357  0019A6  0100               	movlb	0	; () banked
  3358  0019A8  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3359  0019AA  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3360  0019AC  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3361  0019AE  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
  3365  0019B0  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
  3369  0019B4  0E07               	movlw	7
  3370  0019B6  0100               	movlb	0	; () banked
  3371  0019B8  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3372  0019BA  0100               	movlb	0	; () banked
  3373  0019BC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3374  0019BE  0E00               	movlw	0
  3375  0019C0  0100               	movlb	0	; () banked
  3376  0019C2  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3377  0019C4  0100               	movlb	0	; () banked
  3378  0019C6  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3379  0019C8  0E00               	movlw	0
  3380  0019CA  0100               	movlb	0	; () banked
  3381  0019CC  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3382  0019CE  0100               	movlb	0	; () banked
  3383  0019D0  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3384  0019D2  0E00               	movlw	0
  3385  0019D4  0100               	movlb	0	; () banked
  3386  0019D6  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3387  0019D8  0100               	movlb	0	; () banked
  3388  0019DA  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3389                           
  3390                           ; BSR set to: 0
  3391                           ;inc\CANlib.h: 345: tamp = tamp << 5;
  3392  0019DC  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3393  0019E0  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3394  0019E4  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3395  0019E8  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3396  0019EC  0E05               	movlw	5
  3397  0019EE                     u8775:
  3398  0019EE  90D8               	bcf	status,0,c
  3399  0019F0  0100               	movlb	0	; () banked
  3400  0019F2  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3401  0019F4  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3402  0019F6  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3403  0019F8  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3404  0019FA  2EE8               	decfsz	wreg,f,c
  3405  0019FC  D7F8               	goto	u8775
  3406  0019FE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3407  001A02  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3408  001A06  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3409  001A0A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3410                           
  3411                           ; BSR set to: 0
  3412                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
  3413  001A0E  010F               	movlb	15	; () banked
  3414  001A10  5142               	movf	66,w,b	;volatile
  3415  001A12  0B1F               	andlw	31
  3416  001A14  010F               	movlb	15	; () banked
  3417  001A16  6F42               	movwf	66,b	;volatile
  3418                           
  3419                           ; BSR set to: 15
  3420                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
  3421  001A18  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  3422  001A1C                     l6855:
  3423                           
  3424                           ;inc\CANlib.h: 348: }
  3425                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
  3426  001A1C  0100               	movlb	0	; () banked
  3427  001A1E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3428  001A20  D003               	goto	l373
  3429                           
  3430                           ; BSR set to: 0
  3431                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
  3432  001A22  010F               	movlb	15	; () banked
  3433  001A24  8140               	bsf	64,0,b	;volatile
  3434  001A26  D002               	goto	l374
  3435  001A28                     l373:
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;inc\CANlib.h: 352: else
  3439                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
  3440  001A28  010F               	movlb	15	; () banked
  3441  001A2A  9140               	bcf	64,0,b	;volatile
  3442  001A2C                     l374:
  3443                           
  3444                           ; BSR set to: 15
  3445                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
  3446  001A2C  0100               	movlb	0	; () banked
  3447  001A2E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  3448  001A30  D003               	goto	l375
  3449                           
  3450                           ; BSR set to: 0
  3451                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
  3452  001A32  010F               	movlb	15	; () banked
  3453  001A34  8340               	bsf	64,1,b	;volatile
  3454  001A36  D002               	goto	l6861
  3455  001A38                     l375:
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;inc\CANlib.h: 356: else
  3459                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
  3460  001A38  010F               	movlb	15	; () banked
  3461  001A3A  9340               	bcf	64,1,b	;volatile
  3462  001A3C                     l6861:
  3463                           
  3464                           ; BSR set to: 15
  3465                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
  3466  001A3C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  3467  001A40  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3468  001A44  50DF               	movf	indf2,w,c
  3469  001A46  010F               	movlb	15	; () banked
  3470  001A48  6F46               	movwf	70,b	;volatile
  3471                           
  3472                           ; BSR set to: 15
  3473                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
  3474  001A4A  0100               	movlb	0	; () banked
  3475  001A4C  EE20 F001          	lfsr	2,1
  3476  001A50  517B               	movf	CANsendMessage@data& (0+255),w,b
  3477  001A52  26D9               	addwf	fsr2l,f,c
  3478  001A54  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3479  001A56  22DA               	addwfc	fsr2h,f,c
  3480  001A58  50DF               	movf	indf2,w,c
  3481  001A5A  010F               	movlb	15	; () banked
  3482  001A5C  6F47               	movwf	71,b	;volatile
  3483                           
  3484                           ; BSR set to: 15
  3485                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
  3486  001A5E  0100               	movlb	0	; () banked
  3487  001A60  EE20 F002          	lfsr	2,2
  3488  001A64  517B               	movf	CANsendMessage@data& (0+255),w,b
  3489  001A66  26D9               	addwf	fsr2l,f,c
  3490  001A68  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3491  001A6A  22DA               	addwfc	fsr2h,f,c
  3492  001A6C  50DF               	movf	indf2,w,c
  3493  001A6E  010F               	movlb	15	; () banked
  3494  001A70  6F48               	movwf	72,b	;volatile
  3495                           
  3496                           ; BSR set to: 15
  3497                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
  3498  001A72  0100               	movlb	0	; () banked
  3499  001A74  EE20 F003          	lfsr	2,3
  3500  001A78  517B               	movf	CANsendMessage@data& (0+255),w,b
  3501  001A7A  26D9               	addwf	fsr2l,f,c
  3502  001A7C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3503  001A7E  22DA               	addwfc	fsr2h,f,c
  3504  001A80  50DF               	movf	indf2,w,c
  3505  001A82  010F               	movlb	15	; () banked
  3506  001A84  6F49               	movwf	73,b	;volatile
  3507                           
  3508                           ; BSR set to: 15
  3509                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
  3510  001A86  0100               	movlb	0	; () banked
  3511  001A88  EE20 F004          	lfsr	2,4
  3512  001A8C  517B               	movf	CANsendMessage@data& (0+255),w,b
  3513  001A8E  26D9               	addwf	fsr2l,f,c
  3514  001A90  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3515  001A92  22DA               	addwfc	fsr2h,f,c
  3516  001A94  50DF               	movf	indf2,w,c
  3517  001A96  010F               	movlb	15	; () banked
  3518  001A98  6F4A               	movwf	74,b	;volatile
  3519                           
  3520                           ; BSR set to: 15
  3521                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
  3522  001A9A  0100               	movlb	0	; () banked
  3523  001A9C  EE20 F005          	lfsr	2,5
  3524  001AA0  517B               	movf	CANsendMessage@data& (0+255),w,b
  3525  001AA2  26D9               	addwf	fsr2l,f,c
  3526  001AA4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3527  001AA6  22DA               	addwfc	fsr2h,f,c
  3528  001AA8  50DF               	movf	indf2,w,c
  3529  001AAA  010F               	movlb	15	; () banked
  3530  001AAC  6F4B               	movwf	75,b	;volatile
  3531                           
  3532                           ; BSR set to: 15
  3533                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
  3534  001AAE  0100               	movlb	0	; () banked
  3535  001AB0  EE20 F006          	lfsr	2,6
  3536  001AB4  517B               	movf	CANsendMessage@data& (0+255),w,b
  3537  001AB6  26D9               	addwf	fsr2l,f,c
  3538  001AB8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3539  001ABA  22DA               	addwfc	fsr2h,f,c
  3540  001ABC  50DF               	movf	indf2,w,c
  3541  001ABE  010F               	movlb	15	; () banked
  3542  001AC0  6F4C               	movwf	76,b	;volatile
  3543                           
  3544                           ; BSR set to: 15
  3545                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
  3546  001AC2  0100               	movlb	0	; () banked
  3547  001AC4  EE20 F007          	lfsr	2,7
  3548  001AC8  517B               	movf	CANsendMessage@data& (0+255),w,b
  3549  001ACA  26D9               	addwf	fsr2l,f,c
  3550  001ACC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3551  001ACE  22DA               	addwfc	fsr2h,f,c
  3552  001AD0  50DF               	movf	indf2,w,c
  3553  001AD2  010F               	movlb	15	; () banked
  3554  001AD4  6F4D               	movwf	77,b	;volatile
  3555                           
  3556                           ; BSR set to: 15
  3557                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
  3558  001AD6  010F               	movlb	15	; () banked
  3559  001AD8  8740               	bsf	64,3,b	;volatile
  3560                           
  3561                           ; BSR set to: 15
  3562                           ;inc\CANlib.h: 369: return;
  3563  001ADA  0012               	return	
  3564  001ADC                     l363:
  3565                           
  3566                           ; BSR set to: 15
  3567                           ;inc\CANlib.h: 370: }
  3568                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
  3569  001ADC  010F               	movlb	15	; () banked
  3570  001ADE  B730               	btfsc	48,3,b	;volatile
  3571  001AE0  D13F               	goto	l378
  3572                           
  3573                           ; BSR set to: 15
  3574                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
  3575  001AE2  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  3576                           
  3577                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
  3578  001AE6  0100               	movlb	0	; () banked
  3579  001AE8  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3580  001AEA  D003               	goto	l379
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
  3584  001AEC  010F               	movlb	15	; () banked
  3585  001AEE  8D35               	bsf	53,6,b	;volatile
  3586  001AF0  D002               	goto	l380
  3587  001AF2                     l379:
  3588                           
  3589                           ; BSR set to: 0
  3590                           ;inc\CANlib.h: 379: else
  3591                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
  3592  001AF2  010F               	movlb	15	; () banked
  3593  001AF4  9D35               	bcf	53,6,b	;volatile
  3594  001AF6                     l380:
  3595                           
  3596                           ; BSR set to: 15
  3597                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
  3598  001AF6  0100               	movlb	0	; () banked
  3599  001AF8  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3600  001AFA  D079               	goto	l381
  3601                           
  3602                           ; BSR set to: 0
  3603                           ;inc\CANlib.h: 383: {
  3604                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
  3605  001AFC  0100               	movlb	0	; () banked
  3606  001AFE  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3607  001B00  0100               	movlb	0	; () banked
  3608  001B02  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3609  001B04  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3610  001B06  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3611  001B08  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
  3615  001B0A  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  3616                           
  3617                           ; BSR set to: 0
  3618                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
  3619  001B0E  0E00               	movlw	0
  3620  001B10  0100               	movlb	0	; () banked
  3621  001B12  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3622  001B14  0100               	movlb	0	; () banked
  3623  001B16  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3624  001B18  0EFF               	movlw	255
  3625  001B1A  0100               	movlb	0	; () banked
  3626  001B1C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3627  001B1E  0100               	movlb	0	; () banked
  3628  001B20  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3629  001B22  0E00               	movlw	0
  3630  001B24  0100               	movlb	0	; () banked
  3631  001B26  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3632  001B28  0100               	movlb	0	; () banked
  3633  001B2A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3634  001B2C  0E00               	movlw	0
  3635  001B2E  0100               	movlb	0	; () banked
  3636  001B30  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3637  001B32  0100               	movlb	0	; () banked
  3638  001B34  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
  3642  001B36  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3643  001B3A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3644  001B3E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3645  001B42  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3646  001B46  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3647  001B4A  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3648  001B4E  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3649  001B52  0100               	movlb	0	; () banked
  3650  001B54  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3651  001B56  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3652  001B5A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3653  001B5E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3654  001B62  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3655                           
  3656                           ; BSR set to: 0
  3657                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
  3658  001B66  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
  3662  001B6A  0E00               	movlw	0
  3663  001B6C  010F               	movlb	15	; () banked
  3664  001B6E  6F32               	movwf	50,b	;volatile
  3665                           
  3666                           ; BSR set to: 15
  3667                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
  3668  001B70  010F               	movlb	15	; () banked
  3669  001B72  8732               	bsf	50,3,b	;volatile
  3670                           
  3671                           ; BSR set to: 15
  3672                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
  3673  001B74  0100               	movlb	0	; () banked
  3674  001B76  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3675  001B78  D002               	goto	l382
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
  3679  001B7A  010F               	movlb	15	; () banked
  3680  001B7C  8132               	bsf	50,0,b	;volatile
  3681  001B7E                     l382:
  3682                           
  3683                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
  3684  001B7E  0100               	movlb	0	; () banked
  3685  001B80  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3686  001B82  D002               	goto	l383
  3687                           
  3688                           ; BSR set to: 0
  3689                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
  3690  001B84  010F               	movlb	15	; () banked
  3691  001B86  8332               	bsf	50,1,b	;volatile
  3692  001B88                     l383:
  3693                           
  3694                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
  3695  001B88  0100               	movlb	0	; () banked
  3696  001B8A  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3697  001B8C  D002               	goto	l384
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
  3701  001B8E  010F               	movlb	15	; () banked
  3702  001B90  8B32               	bsf	50,5,b	;volatile
  3703  001B92                     l384:
  3704                           
  3705                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
  3706  001B92  0100               	movlb	0	; () banked
  3707  001B94  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3708  001B96  D002               	goto	l385
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
  3712  001B98  010F               	movlb	15	; () banked
  3713  001B9A  8D32               	bsf	50,6,b	;volatile
  3714  001B9C                     l385:
  3715                           
  3716                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
  3717  001B9C  0100               	movlb	0	; () banked
  3718  001B9E  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3719  001BA0  D002               	goto	l6911
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
  3723  001BA2  010F               	movlb	15	; () banked
  3724  001BA4  8F32               	bsf	50,7,b	;volatile
  3725  001BA6                     l6911:
  3726                           
  3727                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
  3728  001BA6  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3729  001BAA  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3730  001BAE  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3731  001BB2  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3732  001BB6  0E16               	movlw	22
  3733  001BB8  D006               	goto	u8880
  3734  001BBA                     u8885:
  3735  001BBA  0100               	movlb	0	; () banked
  3736  001BBC  90D8               	bcf	status,0,c
  3737  001BBE  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3738  001BC0  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3739  001BC2  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3740  001BC4  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3741  001BC6                     u8880:
  3742  001BC6  2EE8               	decfsz	wreg,f,c
  3743  001BC8  D7F8               	goto	u8885
  3744  001BCA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3745  001BCE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3746  001BD2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3747  001BD6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
  3751  001BDA  0100               	movlb	0	; () banked
  3752  001BDC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3753  001BDE  0100               	movlb	0	; () banked
  3754  001BE0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3755  001BE2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3756  001BE4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3757  001BE6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3758                           
  3759                           ; BSR set to: 0
  3760                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
  3761  001BE8  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3762                           
  3763                           ;inc\CANlib.h: 408: }
  3764  001BEC  D059               	goto	l6931
  3765  001BEE                     l381:
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;inc\CANlib.h: 410: else
  3769                           ;inc\CANlib.h: 412: {
  3770                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
  3771  001BEE  010F               	movlb	15	; () banked
  3772  001BF0  9732               	bcf	50,3,b	;volatile
  3773                           
  3774                           ; BSR set to: 15
  3775                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
  3776  001BF2  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3777  001BF6  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3778  001BFA  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3779  001BFE  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3780  001C02  0E04               	movlw	4
  3781  001C04  D006               	goto	u8890
  3782  001C06                     u8895:
  3783  001C06  0100               	movlb	0	; () banked
  3784  001C08  90D8               	bcf	status,0,c
  3785  001C0A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3786  001C0C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3787  001C0E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3788  001C10  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3789  001C12                     u8890:
  3790  001C12  2EE8               	decfsz	wreg,f,c
  3791  001C14  D7F8               	goto	u8895
  3792  001C16  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3793  001C1A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3794  001C1E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3795  001C22  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
  3799  001C26  0100               	movlb	0	; () banked
  3800  001C28  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3801  001C2A  0100               	movlb	0	; () banked
  3802  001C2C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3803  001C2E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3804  001C30  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3805  001C32  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3806                           
  3807                           ; BSR set to: 0
  3808                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
  3809  001C34  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
  3813  001C38  0E07               	movlw	7
  3814  001C3A  0100               	movlb	0	; () banked
  3815  001C3C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3816  001C3E  0100               	movlb	0	; () banked
  3817  001C40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3818  001C42  0E00               	movlw	0
  3819  001C44  0100               	movlb	0	; () banked
  3820  001C46  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3821  001C48  0100               	movlb	0	; () banked
  3822  001C4A  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3823  001C4C  0E00               	movlw	0
  3824  001C4E  0100               	movlb	0	; () banked
  3825  001C50  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3826  001C52  0100               	movlb	0	; () banked
  3827  001C54  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3828  001C56  0E00               	movlw	0
  3829  001C58  0100               	movlb	0	; () banked
  3830  001C5A  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3831  001C5C  0100               	movlb	0	; () banked
  3832  001C5E  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3833                           
  3834                           ; BSR set to: 0
  3835                           ;inc\CANlib.h: 420: tamp = tamp << 5;
  3836  001C60  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3837  001C64  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3838  001C68  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3839  001C6C  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3840  001C70  0E05               	movlw	5
  3841  001C72                     u8905:
  3842  001C72  90D8               	bcf	status,0,c
  3843  001C74  0100               	movlb	0	; () banked
  3844  001C76  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3845  001C78  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3846  001C7A  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3847  001C7C  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3848  001C7E  2EE8               	decfsz	wreg,f,c
  3849  001C80  D7F8               	goto	u8905
  3850  001C82  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3851  001C86  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3852  001C8A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3853  001C8E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
  3857  001C92  010F               	movlb	15	; () banked
  3858  001C94  5132               	movf	50,w,b	;volatile
  3859  001C96  0B1F               	andlw	31
  3860  001C98  010F               	movlb	15	; () banked
  3861  001C9A  6F32               	movwf	50,b	;volatile
  3862                           
  3863                           ; BSR set to: 15
  3864                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
  3865  001C9C  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  3866  001CA0                     l6931:
  3867                           
  3868                           ;inc\CANlib.h: 423: }
  3869                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
  3870  001CA0  0100               	movlb	0	; () banked
  3871  001CA2  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3872  001CA4  D003               	goto	l388
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
  3876  001CA6  010F               	movlb	15	; () banked
  3877  001CA8  8130               	bsf	48,0,b	;volatile
  3878  001CAA  D002               	goto	l389
  3879  001CAC                     l388:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;inc\CANlib.h: 427: else
  3883                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
  3884  001CAC  010F               	movlb	15	; () banked
  3885  001CAE  9130               	bcf	48,0,b	;volatile
  3886  001CB0                     l389:
  3887                           
  3888                           ; BSR set to: 15
  3889                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
  3890  001CB0  0100               	movlb	0	; () banked
  3891  001CB2  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  3892  001CB4  D003               	goto	l390
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
  3896  001CB6  010F               	movlb	15	; () banked
  3897  001CB8  8330               	bsf	48,1,b	;volatile
  3898  001CBA  D002               	goto	l6937
  3899  001CBC                     l390:
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;inc\CANlib.h: 431: else
  3903                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
  3904  001CBC  010F               	movlb	15	; () banked
  3905  001CBE  9330               	bcf	48,1,b	;volatile
  3906  001CC0                     l6937:
  3907                           
  3908                           ; BSR set to: 15
  3909                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
  3910  001CC0  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  3911  001CC4  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3912  001CC8  50DF               	movf	indf2,w,c
  3913  001CCA  010F               	movlb	15	; () banked
  3914  001CCC  6F36               	movwf	54,b	;volatile
  3915                           
  3916                           ; BSR set to: 15
  3917                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
  3918  001CCE  0100               	movlb	0	; () banked
  3919  001CD0  EE20 F001          	lfsr	2,1
  3920  001CD4  517B               	movf	CANsendMessage@data& (0+255),w,b
  3921  001CD6  26D9               	addwf	fsr2l,f,c
  3922  001CD8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3923  001CDA  22DA               	addwfc	fsr2h,f,c
  3924  001CDC  50DF               	movf	indf2,w,c
  3925  001CDE  010F               	movlb	15	; () banked
  3926  001CE0  6F37               	movwf	55,b	;volatile
  3927                           
  3928                           ; BSR set to: 15
  3929                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
  3930  001CE2  0100               	movlb	0	; () banked
  3931  001CE4  EE20 F002          	lfsr	2,2
  3932  001CE8  517B               	movf	CANsendMessage@data& (0+255),w,b
  3933  001CEA  26D9               	addwf	fsr2l,f,c
  3934  001CEC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3935  001CEE  22DA               	addwfc	fsr2h,f,c
  3936  001CF0  50DF               	movf	indf2,w,c
  3937  001CF2  010F               	movlb	15	; () banked
  3938  001CF4  6F38               	movwf	56,b	;volatile
  3939                           
  3940                           ; BSR set to: 15
  3941                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
  3942  001CF6  0100               	movlb	0	; () banked
  3943  001CF8  EE20 F003          	lfsr	2,3
  3944  001CFC  517B               	movf	CANsendMessage@data& (0+255),w,b
  3945  001CFE  26D9               	addwf	fsr2l,f,c
  3946  001D00  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3947  001D02  22DA               	addwfc	fsr2h,f,c
  3948  001D04  50DF               	movf	indf2,w,c
  3949  001D06  010F               	movlb	15	; () banked
  3950  001D08  6F39               	movwf	57,b	;volatile
  3951                           
  3952                           ; BSR set to: 15
  3953                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
  3954  001D0A  0100               	movlb	0	; () banked
  3955  001D0C  EE20 F004          	lfsr	2,4
  3956  001D10  517B               	movf	CANsendMessage@data& (0+255),w,b
  3957  001D12  26D9               	addwf	fsr2l,f,c
  3958  001D14  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3959  001D16  22DA               	addwfc	fsr2h,f,c
  3960  001D18  50DF               	movf	indf2,w,c
  3961  001D1A  010F               	movlb	15	; () banked
  3962  001D1C  6F3A               	movwf	58,b	;volatile
  3963                           
  3964                           ; BSR set to: 15
  3965                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
  3966  001D1E  0100               	movlb	0	; () banked
  3967  001D20  EE20 F005          	lfsr	2,5
  3968  001D24  517B               	movf	CANsendMessage@data& (0+255),w,b
  3969  001D26  26D9               	addwf	fsr2l,f,c
  3970  001D28  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3971  001D2A  22DA               	addwfc	fsr2h,f,c
  3972  001D2C  50DF               	movf	indf2,w,c
  3973  001D2E  010F               	movlb	15	; () banked
  3974  001D30  6F3B               	movwf	59,b	;volatile
  3975                           
  3976                           ; BSR set to: 15
  3977                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
  3978  001D32  0100               	movlb	0	; () banked
  3979  001D34  EE20 F006          	lfsr	2,6
  3980  001D38  517B               	movf	CANsendMessage@data& (0+255),w,b
  3981  001D3A  26D9               	addwf	fsr2l,f,c
  3982  001D3C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3983  001D3E  22DA               	addwfc	fsr2h,f,c
  3984  001D40  50DF               	movf	indf2,w,c
  3985  001D42  010F               	movlb	15	; () banked
  3986  001D44  6F3C               	movwf	60,b	;volatile
  3987                           
  3988                           ; BSR set to: 15
  3989                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
  3990  001D46  0100               	movlb	0	; () banked
  3991  001D48  EE20 F007          	lfsr	2,7
  3992  001D4C  517B               	movf	CANsendMessage@data& (0+255),w,b
  3993  001D4E  26D9               	addwf	fsr2l,f,c
  3994  001D50  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3995  001D52  22DA               	addwfc	fsr2h,f,c
  3996  001D54  50DF               	movf	indf2,w,c
  3997  001D56  010F               	movlb	15	; () banked
  3998  001D58  6F3D               	movwf	61,b	;volatile
  3999                           
  4000                           ; BSR set to: 15
  4001                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
  4002  001D5A  010F               	movlb	15	; () banked
  4003  001D5C  8730               	bsf	48,3,b	;volatile
  4004                           
  4005                           ; BSR set to: 15
  4006                           ;inc\CANlib.h: 445: return;
  4007  001D5E  0012               	return	
  4008  001D60                     l378:
  4009                           
  4010                           ; BSR set to: 15
  4011                           ;inc\CANlib.h: 446: }
  4012                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
  4013  001D60  010F               	movlb	15	; () banked
  4014  001D62  B720               	btfsc	32,3,b	;volatile
  4015  001D64  0012               	return	
  4016                           
  4017                           ; BSR set to: 15
  4018                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
  4019  001D66  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  4020                           
  4021                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
  4022  001D6A  0100               	movlb	0	; () banked
  4023  001D6C  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  4024  001D6E  D003               	goto	l393
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
  4028  001D70  010F               	movlb	15	; () banked
  4029  001D72  8D25               	bsf	37,6,b	;volatile
  4030  001D74  D002               	goto	l394
  4031  001D76                     l393:
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;inc\CANlib.h: 455: else
  4035                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
  4036  001D76  010F               	movlb	15	; () banked
  4037  001D78  9D25               	bcf	37,6,b	;volatile
  4038  001D7A                     l394:
  4039                           
  4040                           ; BSR set to: 15
  4041                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
  4042  001D7A  0100               	movlb	0	; () banked
  4043  001D7C  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  4044  001D7E  D079               	goto	l395
  4045                           
  4046                           ; BSR set to: 0
  4047                           ;inc\CANlib.h: 459: {
  4048                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
  4049  001D80  0100               	movlb	0	; () banked
  4050  001D82  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  4051  001D84  0100               	movlb	0	; () banked
  4052  001D86  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4053  001D88  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4054  001D8A  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4055  001D8C  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
  4059  001D8E  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
  4063  001D92  0E00               	movlw	0
  4064  001D94  0100               	movlb	0	; () banked
  4065  001D96  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4066  001D98  0100               	movlb	0	; () banked
  4067  001D9A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4068  001D9C  0EFF               	movlw	255
  4069  001D9E  0100               	movlb	0	; () banked
  4070  001DA0  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4071  001DA2  0100               	movlb	0	; () banked
  4072  001DA4  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4073  001DA6  0E00               	movlw	0
  4074  001DA8  0100               	movlb	0	; () banked
  4075  001DAA  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4076  001DAC  0100               	movlb	0	; () banked
  4077  001DAE  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4078  001DB0  0E00               	movlw	0
  4079  001DB2  0100               	movlb	0	; () banked
  4080  001DB4  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4081  001DB6  0100               	movlb	0	; () banked
  4082  001DB8  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
  4086  001DBA  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4087  001DBE  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4088  001DC2  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4089  001DC6  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4090  001DCA  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  4091  001DCE  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  4092  001DD2  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  4093  001DD6  0100               	movlb	0	; () banked
  4094  001DD8  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  4095  001DDA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4096  001DDE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4097  001DE2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4098  001DE6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
  4102  001DEA  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
  4106  001DEE  0E00               	movlw	0
  4107  001DF0  010F               	movlb	15	; () banked
  4108  001DF2  6F22               	movwf	34,b	;volatile
  4109                           
  4110                           ; BSR set to: 15
  4111                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
  4112  001DF4  010F               	movlb	15	; () banked
  4113  001DF6  8722               	bsf	34,3,b	;volatile
  4114                           
  4115                           ; BSR set to: 15
  4116                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
  4117  001DF8  0100               	movlb	0	; () banked
  4118  001DFA  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  4119  001DFC  D002               	goto	l396
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
  4123  001DFE  010F               	movlb	15	; () banked
  4124  001E00  8122               	bsf	34,0,b	;volatile
  4125  001E02                     l396:
  4126                           
  4127                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
  4128  001E02  0100               	movlb	0	; () banked
  4129  001E04  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  4130  001E06  D002               	goto	l397
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
  4134  001E08  010F               	movlb	15	; () banked
  4135  001E0A  8322               	bsf	34,1,b	;volatile
  4136  001E0C                     l397:
  4137                           
  4138                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
  4139  001E0C  0100               	movlb	0	; () banked
  4140  001E0E  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  4141  001E10  D002               	goto	l398
  4142                           
  4143                           ; BSR set to: 0
  4144                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
  4145  001E12  010F               	movlb	15	; () banked
  4146  001E14  8B22               	bsf	34,5,b	;volatile
  4147  001E16                     l398:
  4148                           
  4149                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
  4150  001E16  0100               	movlb	0	; () banked
  4151  001E18  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  4152  001E1A  D002               	goto	l399
  4153                           
  4154                           ; BSR set to: 0
  4155                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
  4156  001E1C  010F               	movlb	15	; () banked
  4157  001E1E  8D22               	bsf	34,6,b	;volatile
  4158  001E20                     l399:
  4159                           
  4160                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
  4161  001E20  0100               	movlb	0	; () banked
  4162  001E22  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  4163  001E24  D002               	goto	l6987
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
  4167  001E26  010F               	movlb	15	; () banked
  4168  001E28  8F22               	bsf	34,7,b	;volatile
  4169  001E2A                     l6987:
  4170                           
  4171                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
  4172  001E2A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4173  001E2E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4174  001E32  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4175  001E36  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4176  001E3A  0E16               	movlw	22
  4177  001E3C  D006               	goto	u9010
  4178  001E3E                     u9015:
  4179  001E3E  0100               	movlb	0	; () banked
  4180  001E40  90D8               	bcf	status,0,c
  4181  001E42  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4182  001E44  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4183  001E46  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4184  001E48  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4185  001E4A                     u9010:
  4186  001E4A  2EE8               	decfsz	wreg,f,c
  4187  001E4C  D7F8               	goto	u9015
  4188  001E4E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4189  001E52  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4190  001E56  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4191  001E5A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
  4195  001E5E  0100               	movlb	0	; () banked
  4196  001E60  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4197  001E62  0100               	movlb	0	; () banked
  4198  001E64  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4199  001E66  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4200  001E68  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4201  001E6A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
  4205  001E6C  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4206                           
  4207                           ;inc\CANlib.h: 484: }
  4208  001E70  D059               	goto	l7007
  4209  001E72                     l395:
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;inc\CANlib.h: 486: else
  4213                           ;inc\CANlib.h: 488: {
  4214                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
  4215  001E72  010F               	movlb	15	; () banked
  4216  001E74  9722               	bcf	34,3,b	;volatile
  4217                           
  4218                           ; BSR set to: 15
  4219                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
  4220  001E76  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4221  001E7A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4222  001E7E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4223  001E82  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4224  001E86  0E04               	movlw	4
  4225  001E88  D006               	goto	u9020
  4226  001E8A                     u9025:
  4227  001E8A  0100               	movlb	0	; () banked
  4228  001E8C  90D8               	bcf	status,0,c
  4229  001E8E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4230  001E90  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4231  001E92  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4232  001E94  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4233  001E96                     u9020:
  4234  001E96  2EE8               	decfsz	wreg,f,c
  4235  001E98  D7F8               	goto	u9025
  4236  001E9A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4237  001E9E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4238  001EA2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4239  001EA6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
  4243  001EAA  0100               	movlb	0	; () banked
  4244  001EAC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4245  001EAE  0100               	movlb	0	; () banked
  4246  001EB0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4247  001EB2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4248  001EB4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4249  001EB6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
  4253  001EB8  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4254                           
  4255                           ; BSR set to: 0
  4256                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
  4257  001EBC  0E07               	movlw	7
  4258  001EBE  0100               	movlb	0	; () banked
  4259  001EC0  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4260  001EC2  0100               	movlb	0	; () banked
  4261  001EC4  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4262  001EC6  0E00               	movlw	0
  4263  001EC8  0100               	movlb	0	; () banked
  4264  001ECA  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4265  001ECC  0100               	movlb	0	; () banked
  4266  001ECE  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4267  001ED0  0E00               	movlw	0
  4268  001ED2  0100               	movlb	0	; () banked
  4269  001ED4  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4270  001ED6  0100               	movlb	0	; () banked
  4271  001ED8  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4272  001EDA  0E00               	movlw	0
  4273  001EDC  0100               	movlb	0	; () banked
  4274  001EDE  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4275  001EE0  0100               	movlb	0	; () banked
  4276  001EE2  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;inc\CANlib.h: 496: tamp = tamp << 5;
  4280  001EE4  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4281  001EE8  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4282  001EEC  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4283  001EF0  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4284  001EF4  0E05               	movlw	5
  4285  001EF6                     u9035:
  4286  001EF6  90D8               	bcf	status,0,c
  4287  001EF8  0100               	movlb	0	; () banked
  4288  001EFA  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  4289  001EFC  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  4290  001EFE  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  4291  001F00  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  4292  001F02  2EE8               	decfsz	wreg,f,c
  4293  001F04  D7F8               	goto	u9035
  4294  001F06  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4295  001F0A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4296  001F0E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4297  001F12  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4298                           
  4299                           ; BSR set to: 0
  4300                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
  4301  001F16  010F               	movlb	15	; () banked
  4302  001F18  5122               	movf	34,w,b	;volatile
  4303  001F1A  0B1F               	andlw	31
  4304  001F1C  010F               	movlb	15	; () banked
  4305  001F1E  6F22               	movwf	34,b	;volatile
  4306                           
  4307                           ; BSR set to: 15
  4308                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
  4309  001F20  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  4310  001F24                     l7007:
  4311                           
  4312                           ;inc\CANlib.h: 499: }
  4313                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
  4314  001F24  0100               	movlb	0	; () banked
  4315  001F26  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  4316  001F28  D003               	goto	l402
  4317                           
  4318                           ; BSR set to: 0
  4319                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
  4320  001F2A  010F               	movlb	15	; () banked
  4321  001F2C  8120               	bsf	32,0,b	;volatile
  4322  001F2E  D002               	goto	l403
  4323  001F30                     l402:
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;inc\CANlib.h: 503: else
  4327                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
  4328  001F30  010F               	movlb	15	; () banked
  4329  001F32  9120               	bcf	32,0,b	;volatile
  4330  001F34                     l403:
  4331                           
  4332                           ; BSR set to: 15
  4333                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
  4334  001F34  0100               	movlb	0	; () banked
  4335  001F36  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  4336  001F38  D003               	goto	l404
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
  4340  001F3A  010F               	movlb	15	; () banked
  4341  001F3C  8320               	bsf	32,1,b	;volatile
  4342  001F3E  D002               	goto	l7013
  4343  001F40                     l404:
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;inc\CANlib.h: 507: else
  4347                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
  4348  001F40  010F               	movlb	15	; () banked
  4349  001F42  9320               	bcf	32,1,b	;volatile
  4350  001F44                     l7013:
  4351                           
  4352                           ; BSR set to: 15
  4353                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
  4354  001F44  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  4355  001F48  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4356  001F4C  50DF               	movf	indf2,w,c
  4357  001F4E  010F               	movlb	15	; () banked
  4358  001F50  6F26               	movwf	38,b	;volatile
  4359                           
  4360                           ; BSR set to: 15
  4361                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
  4362  001F52  0100               	movlb	0	; () banked
  4363  001F54  EE20 F001          	lfsr	2,1
  4364  001F58  517B               	movf	CANsendMessage@data& (0+255),w,b
  4365  001F5A  26D9               	addwf	fsr2l,f,c
  4366  001F5C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4367  001F5E  22DA               	addwfc	fsr2h,f,c
  4368  001F60  50DF               	movf	indf2,w,c
  4369  001F62  010F               	movlb	15	; () banked
  4370  001F64  6F27               	movwf	39,b	;volatile
  4371                           
  4372                           ; BSR set to: 15
  4373                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
  4374  001F66  0100               	movlb	0	; () banked
  4375  001F68  EE20 F002          	lfsr	2,2
  4376  001F6C  517B               	movf	CANsendMessage@data& (0+255),w,b
  4377  001F6E  26D9               	addwf	fsr2l,f,c
  4378  001F70  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4379  001F72  22DA               	addwfc	fsr2h,f,c
  4380  001F74  50DF               	movf	indf2,w,c
  4381  001F76  010F               	movlb	15	; () banked
  4382  001F78  6F28               	movwf	40,b	;volatile
  4383                           
  4384                           ; BSR set to: 15
  4385                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
  4386  001F7A  0100               	movlb	0	; () banked
  4387  001F7C  EE20 F003          	lfsr	2,3
  4388  001F80  517B               	movf	CANsendMessage@data& (0+255),w,b
  4389  001F82  26D9               	addwf	fsr2l,f,c
  4390  001F84  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4391  001F86  22DA               	addwfc	fsr2h,f,c
  4392  001F88  50DF               	movf	indf2,w,c
  4393  001F8A  010F               	movlb	15	; () banked
  4394  001F8C  6F29               	movwf	41,b	;volatile
  4395                           
  4396                           ; BSR set to: 15
  4397                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
  4398  001F8E  0100               	movlb	0	; () banked
  4399  001F90  EE20 F004          	lfsr	2,4
  4400  001F94  517B               	movf	CANsendMessage@data& (0+255),w,b
  4401  001F96  26D9               	addwf	fsr2l,f,c
  4402  001F98  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4403  001F9A  22DA               	addwfc	fsr2h,f,c
  4404  001F9C  50DF               	movf	indf2,w,c
  4405  001F9E  010F               	movlb	15	; () banked
  4406  001FA0  6F2A               	movwf	42,b	;volatile
  4407                           
  4408                           ; BSR set to: 15
  4409                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
  4410  001FA2  0100               	movlb	0	; () banked
  4411  001FA4  EE20 F005          	lfsr	2,5
  4412  001FA8  517B               	movf	CANsendMessage@data& (0+255),w,b
  4413  001FAA  26D9               	addwf	fsr2l,f,c
  4414  001FAC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4415  001FAE  22DA               	addwfc	fsr2h,f,c
  4416  001FB0  50DF               	movf	indf2,w,c
  4417  001FB2  010F               	movlb	15	; () banked
  4418  001FB4  6F2B               	movwf	43,b	;volatile
  4419                           
  4420                           ; BSR set to: 15
  4421                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
  4422  001FB6  0100               	movlb	0	; () banked
  4423  001FB8  EE20 F006          	lfsr	2,6
  4424  001FBC  517B               	movf	CANsendMessage@data& (0+255),w,b
  4425  001FBE  26D9               	addwf	fsr2l,f,c
  4426  001FC0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4427  001FC2  22DA               	addwfc	fsr2h,f,c
  4428  001FC4  50DF               	movf	indf2,w,c
  4429  001FC6  010F               	movlb	15	; () banked
  4430  001FC8  6F2C               	movwf	44,b	;volatile
  4431                           
  4432                           ; BSR set to: 15
  4433                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
  4434  001FCA  0100               	movlb	0	; () banked
  4435  001FCC  EE20 F007          	lfsr	2,7
  4436  001FD0  517B               	movf	CANsendMessage@data& (0+255),w,b
  4437  001FD2  26D9               	addwf	fsr2l,f,c
  4438  001FD4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4439  001FD6  22DA               	addwfc	fsr2h,f,c
  4440  001FD8  50DF               	movf	indf2,w,c
  4441  001FDA  010F               	movlb	15	; () banked
  4442  001FDC  6F2D               	movwf	45,b	;volatile
  4443                           
  4444                           ; BSR set to: 15
  4445                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
  4446  001FDE  010F               	movlb	15	; () banked
  4447  001FE0  8720               	bsf	32,3,b	;volatile
  4448                           
  4449                           ; BSR set to: 15
  4450                           ;inc\CANlib.h: 521: return;
  4451  001FE2  0012               	return	
  4452  001FE4                     __end_of_CANsendMessage:
  4453                           	opt stack 0
  4454                           tblptru	equ	0xFF8
  4455                           tblptrh	equ	0xFF7
  4456                           tblptrl	equ	0xFF6
  4457                           tablat	equ	0xFF5
  4458                           postinc0	equ	0xFEE
  4459                           wreg	equ	0xFE8
  4460                           postdec1	equ	0xFE5
  4461                           fsr1l	equ	0xFE1
  4462                           indf2	equ	0xFDF
  4463                           postinc2	equ	0xFDE
  4464                           postdec2	equ	0xFDD
  4465                           fsr2h	equ	0xFDA
  4466                           fsr2l	equ	0xFD9
  4467                           status	equ	0xFD8
  4468                           
  4469 ;; *************** function _CANisTxReady *****************
  4470 ;; Defined at:
  4471 ;;		line 1155 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;		None
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;		None
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  1    wreg      unsigned char 
  4478 ;; Registers used:
  4479 ;;		wreg, status,2
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4486 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4488 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4489 ;;Total ram usage:        1 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    4
  4492 ;; This function calls:
  4493 ;;		Nothing
  4494 ;; This function is called by:
  4495 ;;		_park_search
  4496 ;;		_park_routine
  4497 ;;		_can_send
  4498 ;; This function uses a non-reentrant model
  4499 ;;
  4500                           
  4501                           	psect	text6
  4502  005F94                     __ptext6:
  4503                           	opt stack 0
  4504  005F94                     _CANisTxReady:
  4505                           	opt stack 23
  4506                           
  4507                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  4508                           
  4509                           ; BSR set to: 15
  4510                           ;incstack = 0
  4511  005F94  0E01               	movlw	1
  4512  005F96  0100               	movlb	0	; () banked
  4513  005F98  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4514                           
  4515                           ; BSR set to: 0
  4516  005F9A  010F               	movlb	15	; () banked
  4517  005F9C  A740               	btfss	64,3,b	;volatile
  4518  005F9E  D009               	goto	l556
  4519                           
  4520                           ; BSR set to: 15
  4521  005FA0  010F               	movlb	15	; () banked
  4522  005FA2  A730               	btfss	48,3,b	;volatile
  4523  005FA4  D006               	goto	l556
  4524                           
  4525                           ; BSR set to: 15
  4526  005FA6  010F               	movlb	15	; () banked
  4527  005FA8  A720               	btfss	32,3,b	;volatile
  4528  005FAA  D003               	goto	l556
  4529                           
  4530                           ; BSR set to: 15
  4531  005FAC  0E00               	movlw	0
  4532  005FAE  0100               	movlb	0	; () banked
  4533  005FB0  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4534  005FB2                     l556:
  4535  005FB2  0100               	movlb	0	; () banked
  4536  005FB4  5177               	movf	_CANisTxReady$2845& (0+255),w,b
  4537  005FB6  0012               	return	
  4538  005FB8                     __end_of_CANisTxReady:
  4539                           	opt stack 0
  4540                           tblptru	equ	0xFF8
  4541                           tblptrh	equ	0xFF7
  4542                           tblptrl	equ	0xFF6
  4543                           tablat	equ	0xFF5
  4544                           postinc0	equ	0xFEE
  4545                           wreg	equ	0xFE8
  4546                           postdec1	equ	0xFE5
  4547                           fsr1l	equ	0xFE1
  4548                           indf2	equ	0xFDF
  4549                           postinc2	equ	0xFDE
  4550                           postdec2	equ	0xFDD
  4551                           fsr2h	equ	0xFDA
  4552                           fsr2l	equ	0xFD9
  4553                           status	equ	0xFD8
  4554                           
  4555 ;; *************** function _abs *****************
  4556 ;; Defined at:
  4557 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  a               2   23[BANK0 ] int 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  2   23[BANK0 ] int 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4571 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4573 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4574 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4575 ;;Total ram usage:        4 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    4
  4578 ;; This function calls:
  4579 ;;		Nothing
  4580 ;; This function is called by:
  4581 ;;		_park_search
  4582 ;;		_parallelo
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text7
  4587  005F3C                     __ptext7:
  4588                           	opt stack 0
  4589  005F3C                     _abs:
  4590                           	opt stack 24
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;incstack = 0
  4594  005F3C  0100               	movlb	0	; () banked
  4595  005F3E  AF78               	btfss	(abs@a+1)& (0+255),7,b
  4596  005F40  D00E               	goto	l871
  4597                           
  4598                           ; BSR set to: 0
  4599  005F42  C077  F079         	movff	abs@a,??_abs
  4600  005F46  C078  F07A         	movff	abs@a+1,??_abs+1
  4601  005F4A  0100               	movlb	0	; () banked
  4602  005F4C  1F79               	comf	??_abs& (0+255),f,b
  4603  005F4E  1F7A               	comf	(??_abs+1)& (0+255),f,b
  4604  005F50  4B79               	infsnz	??_abs& (0+255),f,b
  4605  005F52  2B7A               	incf	(??_abs+1)& (0+255),f,b
  4606  005F54  C079  F077         	movff	??_abs,?_abs
  4607  005F58  C07A  F078         	movff	??_abs+1,?_abs+1
  4608  005F5C  0012               	return	
  4609  005F5E                     l871:
  4610                           
  4611                           ; BSR set to: 0
  4612  005F5E  C077  F077         	movff	abs@a,?_abs
  4613  005F62  C078  F078         	movff	abs@a+1,?_abs+1
  4614                           
  4615                           ; BSR set to: 0
  4616  005F66  0012               	return		;funcret
  4617  005F68                     __end_of_abs:
  4618                           	opt stack 0
  4619                           tblptru	equ	0xFF8
  4620                           tblptrh	equ	0xFF7
  4621                           tblptrl	equ	0xFF6
  4622                           tablat	equ	0xFF5
  4623                           postinc0	equ	0xFEE
  4624                           wreg	equ	0xFE8
  4625                           postdec1	equ	0xFE5
  4626                           fsr1l	equ	0xFE1
  4627                           indf2	equ	0xFDF
  4628                           postinc2	equ	0xFDE
  4629                           postdec2	equ	0xFDD
  4630                           fsr2h	equ	0xFDA
  4631                           fsr2l	equ	0xFD9
  4632                           status	equ	0xFD8
  4633                           
  4634 ;; *************** function _matematica *****************
  4635 ;; Defined at:
  4636 ;;		line 428 in file "parcheggio.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;		None
  4639 ;; Auto vars:     Size  Location     Type
  4640 ;;		None
  4641 ;; Return value:  Size  Location     Type
  4642 ;;		None               void
  4643 ;; Registers used:
  4644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4651 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4653 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4654 ;;Total ram usage:       28 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    8
  4657 ;; This function calls:
  4658 ;;		___fladd
  4659 ;;		___fldiv
  4660 ;;		___flmul
  4661 ;;		___flneg
  4662 ;;		_asin
  4663 ;;		_cos
  4664 ;; This function is called by:
  4665 ;;		_park_routine
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           	psect	text8
  4670  001FE4                     __ptext8:
  4671                           	opt stack 0
  4672  001FE4                     _matematica:
  4673                           	opt stack 21
  4674                           
  4675                           ;parcheggio.c: 429: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4676                           
  4677                           ; BSR set to: 0
  4678                           ;incstack = 0
  4679  001FE4  C124  F0AD         	movff	_bordo,___fladd@a	;volatile
  4680  001FE8  C125  F0AE         	movff	_bordo+1,___fladd@a+1	;volatile
  4681  001FEC  C126  F0AF         	movff	_bordo+2,___fladd@a+2	;volatile
  4682  001FF0  C127  F0B0         	movff	_bordo+3,___fladd@a+3	;volatile
  4683  001FF4  0E00               	movlw	0
  4684  001FF6  0100               	movlb	0	; () banked
  4685  001FF8  6F7B               	movwf	___fldiv@a& (0+255),b
  4686  001FFA  0E00               	movlw	0
  4687  001FFC  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4688  001FFE  0E00               	movlw	0
  4689  002000  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4690  002002  0E40               	movlw	64
  4691  002004  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4692  002006  C1E2  F077         	movff	_larghezza,___fldiv@b
  4693  00200A  C1E3  F078         	movff	_larghezza+1,___fldiv@b+1
  4694  00200E  C1E4  F079         	movff	_larghezza+2,___fldiv@b+2
  4695  002012  C1E5  F07A         	movff	_larghezza+3,___fldiv@b+3
  4696  002016  EC03  F01E         	call	___fldiv	;wreg free
  4697  00201A  C077  F0A9         	movff	?___fldiv,___fladd@b
  4698  00201E  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  4699  002022  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  4700  002026  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  4701  00202A  EC3D  F015         	call	___fladd	;wreg free
  4702  00202E  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  4703  002032  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  4704  002036  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  4705  00203A  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  4706  00203E  EC4D  F02F         	call	___flneg	;wreg free
  4707  002042  C0BD  F1BA         	movff	?___flneg,_matematica$3741
  4708  002046  C0BE  F1BB         	movff	?___flneg+1,_matematica$3741+1
  4709  00204A  C0BF  F1BC         	movff	?___flneg+2,_matematica$3741+2
  4710  00204E  C0C0  F1BD         	movff	?___flneg+3,_matematica$3741+3
  4711                           
  4712                           ;parcheggio.c: 429: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4713  002052  C1BA  F0AD         	movff	_matematica$3741,___fladd@a
  4714  002056  C1BB  F0AE         	movff	_matematica$3741+1,___fladd@a+1
  4715  00205A  C1BC  F0AF         	movff	_matematica$3741+2,___fladd@a+2
  4716  00205E  C1BD  F0B0         	movff	_matematica$3741+3,___fladd@a+3
  4717  002062  0E00               	movlw	0
  4718  002064  0100               	movlb	0	; () banked
  4719  002066  6F94               	movwf	___flmul@a& (0+255),b
  4720  002068  0E00               	movlw	0
  4721  00206A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4722  00206C  0E00               	movlw	0
  4723  00206E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4724  002070  0E40               	movlw	64
  4725  002072  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4726  002074  C1E8  F090         	movff	_raggio,___flmul@b
  4727  002078  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4728  00207C  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4729  002080  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4730  002084  EC91  F017         	call	___flmul	;wreg free
  4731  002088  C090  F0A9         	movff	?___flmul,___fladd@b
  4732  00208C  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  4733  002090  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  4734  002094  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  4735  002098  EC3D  F015         	call	___fladd	;wreg free
  4736  00209C  C0A9  F1BE         	movff	?___fladd,_matematica$3742
  4737  0020A0  C0AA  F1BF         	movff	?___fladd+1,_matematica$3742+1
  4738  0020A4  C0AB  F1C0         	movff	?___fladd+2,_matematica$3742+2
  4739  0020A8  C0AC  F1C1         	movff	?___fladd+3,_matematica$3742+3
  4740                           
  4741                           ;parcheggio.c: 429: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4742  0020AC  0E00               	movlw	0
  4743  0020AE  0100               	movlb	0	; () banked
  4744  0020B0  6F7B               	movwf	___fldiv@a& (0+255),b
  4745  0020B2  0E00               	movlw	0
  4746  0020B4  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4747  0020B6  0E00               	movlw	0
  4748  0020B8  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4749  0020BA  0E40               	movlw	64
  4750  0020BC  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4751  0020BE  C1E2  F077         	movff	_larghezza,___fldiv@b
  4752  0020C2  C1E3  F078         	movff	_larghezza+1,___fldiv@b+1
  4753  0020C6  C1E4  F079         	movff	_larghezza+2,___fldiv@b+2
  4754  0020CA  C1E5  F07A         	movff	_larghezza+3,___fldiv@b+3
  4755  0020CE  EC03  F01E         	call	___fldiv	;wreg free
  4756  0020D2  C077  F0BD         	movff	?___fldiv,___flneg@f1
  4757  0020D6  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  4758  0020DA  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  4759  0020DE  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  4760  0020E2  EC4D  F02F         	call	___flneg	;wreg free
  4761  0020E6  C0BD  F0AD         	movff	?___flneg,___fladd@a
  4762  0020EA  C0BE  F0AE         	movff	?___flneg+1,___fladd@a+1
  4763  0020EE  C0BF  F0AF         	movff	?___flneg+2,___fladd@a+2
  4764  0020F2  C0C0  F0B0         	movff	?___flneg+3,___fladd@a+3
  4765  0020F6  C1BE  F0A9         	movff	_matematica$3742,___fladd@b
  4766  0020FA  C1BF  F0AA         	movff	_matematica$3742+1,___fladd@b+1
  4767  0020FE  C1C0  F0AB         	movff	_matematica$3742+2,___fladd@b+2
  4768  002102  C1C1  F0AC         	movff	_matematica$3742+3,___fladd@b+3
  4769  002106  EC3D  F015         	call	___fladd	;wreg free
  4770  00210A  C0A9  F1C2         	movff	?___fladd,_matematica$3743
  4771  00210E  C0AA  F1C3         	movff	?___fladd+1,_matematica$3743+1
  4772  002112  C0AB  F1C4         	movff	?___fladd+2,_matematica$3743+2
  4773  002116  C0AC  F1C5         	movff	?___fladd+3,_matematica$3743+3
  4774                           
  4775                           ;parcheggio.c: 429: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4776  00211A  C1C2  F077         	movff	_matematica$3743,___fldiv@b
  4777  00211E  C1C3  F078         	movff	_matematica$3743+1,___fldiv@b+1
  4778  002122  C1C4  F079         	movff	_matematica$3743+2,___fldiv@b+2
  4779  002126  C1C5  F07A         	movff	_matematica$3743+3,___fldiv@b+3
  4780  00212A  0E00               	movlw	0
  4781  00212C  0100               	movlb	0	; () banked
  4782  00212E  6F94               	movwf	___flmul@a& (0+255),b
  4783  002130  0E00               	movlw	0
  4784  002132  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4785  002134  0E00               	movlw	0
  4786  002136  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4787  002138  0E40               	movlw	64
  4788  00213A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4789  00213C  C1E8  F090         	movff	_raggio,___flmul@b
  4790  002140  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4791  002144  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4792  002148  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4793  00214C  EC91  F017         	call	___flmul	;wreg free
  4794  002150  C090  F07B         	movff	?___flmul,___fldiv@a
  4795  002154  C091  F07C         	movff	?___flmul+1,___fldiv@a+1
  4796  002158  C092  F07D         	movff	?___flmul+2,___fldiv@a+2
  4797  00215C  C093  F07E         	movff	?___flmul+3,___fldiv@a+3
  4798  002160  EC03  F01E         	call	___fldiv	;wreg free
  4799  002164  C077  F1C6         	movff	?___fldiv,_matematica$3744
  4800  002168  C078  F1C7         	movff	?___fldiv+1,_matematica$3744+1
  4801  00216C  C079  F1C8         	movff	?___fldiv+2,_matematica$3744+2
  4802  002170  C07A  F1C9         	movff	?___fldiv+3,_matematica$3744+3
  4803                           
  4804                           ;parcheggio.c: 429: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4805  002174  C1C6  F0DE         	movff	_matematica$3744,asin@x
  4806  002178  C1C7  F0DF         	movff	_matematica$3744+1,asin@x+1
  4807  00217C  C1C8  F0E0         	movff	_matematica$3744+2,asin@x+2
  4808  002180  C1C9  F0E1         	movff	_matematica$3744+3,asin@x+3
  4809  002184  EC3E  F023         	call	_asin	;wreg free
  4810  002188  C0DE  F11C         	movff	?_asin,_alfa
  4811  00218C  C0DF  F11D         	movff	?_asin+1,_alfa+1
  4812  002190  C0E0  F11E         	movff	?_asin+2,_alfa+2
  4813  002194  C0E1  F11F         	movff	?_asin+3,_alfa+3
  4814                           
  4815                           ;parcheggio.c: 430: alfa = alfa / 3.14159265358979323846 * 180;
  4816  002198  0EDB               	movlw	219
  4817  00219A  0100               	movlb	0	; () banked
  4818  00219C  6F7B               	movwf	___fldiv@a& (0+255),b
  4819  00219E  0E0F               	movlw	15
  4820  0021A0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4821  0021A2  0E49               	movlw	73
  4822  0021A4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4823  0021A6  0E40               	movlw	64
  4824  0021A8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4825  0021AA  C11C  F077         	movff	_alfa,___fldiv@b
  4826  0021AE  C11D  F078         	movff	_alfa+1,___fldiv@b+1
  4827  0021B2  C11E  F079         	movff	_alfa+2,___fldiv@b+2
  4828  0021B6  C11F  F07A         	movff	_alfa+3,___fldiv@b+3
  4829  0021BA  EC03  F01E         	call	___fldiv	;wreg free
  4830  0021BE  C077  F090         	movff	?___fldiv,___flmul@b
  4831  0021C2  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  4832  0021C6  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  4833  0021CA  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  4834  0021CE  0E00               	movlw	0
  4835  0021D0  0100               	movlb	0	; () banked
  4836  0021D2  6F94               	movwf	___flmul@a& (0+255),b
  4837  0021D4  0E00               	movlw	0
  4838  0021D6  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4839  0021D8  0E34               	movlw	52
  4840  0021DA  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4841  0021DC  0E43               	movlw	67
  4842  0021DE  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4843  0021E0  EC91  F017         	call	___flmul	;wreg free
  4844  0021E4  C090  F11C         	movff	?___flmul,_alfa
  4845  0021E8  C091  F11D         	movff	?___flmul+1,_alfa+1
  4846  0021EC  C092  F11E         	movff	?___flmul+2,_alfa+2
  4847  0021F0  C093  F11F         	movff	?___flmul+3,_alfa+3
  4848                           
  4849                           ;parcheggio.c: 431: beta = 90 - alfa;
  4850  0021F4  C11C  F0BD         	movff	_alfa,___flneg@f1
  4851  0021F8  C11D  F0BE         	movff	_alfa+1,___flneg@f1+1
  4852  0021FC  C11E  F0BF         	movff	_alfa+2,___flneg@f1+2
  4853  002200  C11F  F0C0         	movff	_alfa+3,___flneg@f1+3
  4854  002204  EC4D  F02F         	call	___flneg	;wreg free
  4855  002208  C0BD  F0A9         	movff	?___flneg,___fladd@b
  4856  00220C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  4857  002210  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  4858  002214  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  4859  002218  0E00               	movlw	0
  4860  00221A  0100               	movlb	0	; () banked
  4861  00221C  6FAD               	movwf	___fladd@a& (0+255),b
  4862  00221E  0E00               	movlw	0
  4863  002220  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  4864  002222  0EB4               	movlw	180
  4865  002224  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  4866  002226  0E42               	movlw	66
  4867  002228  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  4868  00222A  EC3D  F015         	call	___fladd	;wreg free
  4869  00222E  C0A9  F120         	movff	?___fladd,_beta
  4870  002232  C0AA  F121         	movff	?___fladd+1,_beta+1
  4871  002236  C0AB  F122         	movff	?___fladd+2,_beta+2
  4872  00223A  C0AC  F123         	movff	?___fladd+3,_beta+3
  4873                           
  4874                           ;parcheggio.c: 432: alfa = (alfa * 3.14159265358979323846) / 180;
  4875  00223E  0EDB               	movlw	219
  4876  002240  0100               	movlb	0	; () banked
  4877  002242  6F94               	movwf	___flmul@a& (0+255),b
  4878  002244  0E0F               	movlw	15
  4879  002246  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4880  002248  0E49               	movlw	73
  4881  00224A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4882  00224C  0E40               	movlw	64
  4883  00224E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4884  002250  C11C  F090         	movff	_alfa,___flmul@b
  4885  002254  C11D  F091         	movff	_alfa+1,___flmul@b+1
  4886  002258  C11E  F092         	movff	_alfa+2,___flmul@b+2
  4887  00225C  C11F  F093         	movff	_alfa+3,___flmul@b+3
  4888  002260  EC91  F017         	call	___flmul	;wreg free
  4889  002264  C090  F077         	movff	?___flmul,___fldiv@b
  4890  002268  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  4891  00226C  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  4892  002270  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  4893  002274  0E00               	movlw	0
  4894  002276  0100               	movlb	0	; () banked
  4895  002278  6F7B               	movwf	___fldiv@a& (0+255),b
  4896  00227A  0E00               	movlw	0
  4897  00227C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4898  00227E  0E34               	movlw	52
  4899  002280  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4900  002282  0E43               	movlw	67
  4901  002284  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4902  002286  EC03  F01E         	call	___fldiv	;wreg free
  4903  00228A  C077  F11C         	movff	?___fldiv,_alfa
  4904  00228E  C078  F11D         	movff	?___fldiv+1,_alfa+1
  4905  002292  C079  F11E         	movff	?___fldiv+2,_alfa+2
  4906  002296  C07A  F11F         	movff	?___fldiv+3,_alfa+3
  4907                           
  4908                           ;parcheggio.c: 433: n = cos(alfa);
  4909  00229A  C11C  F1B2         	movff	_alfa,cos@f
  4910  00229E  C11D  F1B3         	movff	_alfa+1,cos@f+1
  4911  0022A2  C11E  F1B4         	movff	_alfa+2,cos@f+2
  4912  0022A6  C11F  F1B5         	movff	_alfa+3,cos@f+3
  4913  0022AA  ECE8  F02C         	call	_cos	;wreg free
  4914  0022AE  C1B2  F130         	movff	?_cos,_n
  4915  0022B2  C1B3  F131         	movff	?_cos+1,_n+1
  4916  0022B6  C1B4  F132         	movff	?_cos+2,_n+2
  4917  0022BA  C1B5  F133         	movff	?_cos+3,_n+3
  4918                           
  4919                           ;parcheggio.c: 434: n = 2 * raggio *n;
  4920  0022BE  C130  F094         	movff	_n,___flmul@a
  4921  0022C2  C131  F095         	movff	_n+1,___flmul@a+1
  4922  0022C6  C132  F096         	movff	_n+2,___flmul@a+2
  4923  0022CA  C133  F097         	movff	_n+3,___flmul@a+3
  4924  0022CE  C1E8  F090         	movff	_raggio,___flmul@b
  4925  0022D2  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4926  0022D6  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4927  0022DA  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4928  0022DE  EC91  F017         	call	___flmul	;wreg free
  4929  0022E2  C090  F1D2         	movff	?___flmul,_matematica$3745
  4930  0022E6  C091  F1D3         	movff	?___flmul+1,_matematica$3745+1
  4931  0022EA  C092  F1D4         	movff	?___flmul+2,_matematica$3745+2
  4932  0022EE  C093  F1D5         	movff	?___flmul+3,_matematica$3745+3
  4933                           
  4934                           ;parcheggio.c: 434: n = 2 * raggio *n;
  4935  0022F2  C1D2  F090         	movff	_matematica$3745,___flmul@b
  4936  0022F6  C1D3  F091         	movff	_matematica$3745+1,___flmul@b+1
  4937  0022FA  C1D4  F092         	movff	_matematica$3745+2,___flmul@b+2
  4938  0022FE  C1D5  F093         	movff	_matematica$3745+3,___flmul@b+3
  4939  002302  0E00               	movlw	0
  4940  002304  0100               	movlb	0	; () banked
  4941  002306  6F94               	movwf	___flmul@a& (0+255),b
  4942  002308  0E00               	movlw	0
  4943  00230A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4944  00230C  0E00               	movlw	0
  4945  00230E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4946  002310  0E40               	movlw	64
  4947  002312  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4948  002314  EC91  F017         	call	___flmul	;wreg free
  4949  002318  C090  F130         	movff	?___flmul,_n
  4950  00231C  C091  F131         	movff	?___flmul+1,_n+1
  4951  002320  C092  F132         	movff	?___flmul+2,_n+2
  4952  002324  C093  F133         	movff	?___flmul+3,_n+3
  4953                           
  4954                           ;parcheggio.c: 435: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  4955  002328  C120  F094         	movff	_beta,___flmul@a
  4956  00232C  C121  F095         	movff	_beta+1,___flmul@a+1
  4957  002330  C122  F096         	movff	_beta+2,___flmul@a+2
  4958  002334  C123  F097         	movff	_beta+3,___flmul@a+3
  4959  002338  C1E8  F090         	movff	_raggio,___flmul@b
  4960  00233C  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4961  002340  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4962  002344  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4963  002348  EC91  F017         	call	___flmul	;wreg free
  4964  00234C  C090  F1D2         	movff	?___flmul,_matematica$3745
  4965  002350  C091  F1D3         	movff	?___flmul+1,_matematica$3745+1
  4966  002354  C092  F1D4         	movff	?___flmul+2,_matematica$3745+2
  4967  002358  C093  F1D5         	movff	?___flmul+3,_matematica$3745+3
  4968                           
  4969                           ;parcheggio.c: 435: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  4970  00235C  0EDB               	movlw	219
  4971  00235E  0100               	movlb	0	; () banked
  4972  002360  6F94               	movwf	___flmul@a& (0+255),b
  4973  002362  0E0F               	movlw	15
  4974  002364  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4975  002366  0EC9               	movlw	201
  4976  002368  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4977  00236A  0E40               	movlw	64
  4978  00236C  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4979  00236E  C1D2  F090         	movff	_matematica$3745,___flmul@b
  4980  002372  C1D3  F091         	movff	_matematica$3745+1,___flmul@b+1
  4981  002376  C1D4  F092         	movff	_matematica$3745+2,___flmul@b+2
  4982  00237A  C1D5  F093         	movff	_matematica$3745+3,___flmul@b+3
  4983  00237E  EC91  F017         	call	___flmul	;wreg free
  4984  002382  C090  F077         	movff	?___flmul,___fldiv@b
  4985  002386  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  4986  00238A  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  4987  00238E  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  4988  002392  0E00               	movlw	0
  4989  002394  0100               	movlb	0	; () banked
  4990  002396  6F7B               	movwf	___fldiv@a& (0+255),b
  4991  002398  0E00               	movlw	0
  4992  00239A  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4993  00239C  0EB4               	movlw	180
  4994  00239E  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4995  0023A0  0E43               	movlw	67
  4996  0023A2  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4997  0023A4  EC03  F01E         	call	___fldiv	;wreg free
  4998  0023A8  C077  F138         	movff	?___fldiv,_prima_sterzata
  4999  0023AC  C078  F139         	movff	?___fldiv+1,_prima_sterzata+1
  5000  0023B0  C079  F13A         	movff	?___fldiv+2,_prima_sterzata+2
  5001  0023B4  C07A  F13B         	movff	?___fldiv+3,_prima_sterzata+3
  5002                           
  5003                           ;parcheggio.c: 436: kkk = raggio + (2 * larghezza / 3);
  5004  0023B8  0E00               	movlw	0
  5005  0023BA  0100               	movlb	0	; () banked
  5006  0023BC  6F7B               	movwf	___fldiv@a& (0+255),b
  5007  0023BE  0E00               	movlw	0
  5008  0023C0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5009  0023C2  0E40               	movlw	64
  5010  0023C4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5011  0023C6  0E40               	movlw	64
  5012  0023C8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5013  0023CA  0E00               	movlw	0
  5014  0023CC  0100               	movlb	0	; () banked
  5015  0023CE  6F94               	movwf	___flmul@a& (0+255),b
  5016  0023D0  0E00               	movlw	0
  5017  0023D2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5018  0023D4  0E00               	movlw	0
  5019  0023D6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5020  0023D8  0E40               	movlw	64
  5021  0023DA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5022  0023DC  C1E2  F090         	movff	_larghezza,___flmul@b
  5023  0023E0  C1E3  F091         	movff	_larghezza+1,___flmul@b+1
  5024  0023E4  C1E4  F092         	movff	_larghezza+2,___flmul@b+2
  5025  0023E8  C1E5  F093         	movff	_larghezza+3,___flmul@b+3
  5026  0023EC  EC91  F017         	call	___flmul	;wreg free
  5027  0023F0  C090  F077         	movff	?___flmul,___fldiv@b
  5028  0023F4  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5029  0023F8  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5030  0023FC  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5031  002400  EC03  F01E         	call	___fldiv	;wreg free
  5032  002404  C077  F0A9         	movff	?___fldiv,___fladd@b
  5033  002408  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  5034  00240C  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  5035  002410  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  5036  002414  C1E8  F0AD         	movff	_raggio,___fladd@a
  5037  002418  C1E9  F0AE         	movff	_raggio+1,___fladd@a+1
  5038  00241C  C1EA  F0AF         	movff	_raggio+2,___fladd@a+2
  5039  002420  C1EB  F0B0         	movff	_raggio+3,___fladd@a+3
  5040  002424  EC3D  F015         	call	___fladd	;wreg free
  5041  002428  C0A9  F12C         	movff	?___fladd,_kkk
  5042  00242C  C0AA  F12D         	movff	?___fladd+1,_kkk+1
  5043  002430  C0AB  F12E         	movff	?___fladd+2,_kkk+2
  5044  002434  C0AC  F12F         	movff	?___fladd+3,_kkk+3
  5045                           
  5046                           ;parcheggio.c: 437: jjj = raggio - (2 * larghezza / 3);
  5047  002438  0E00               	movlw	0
  5048  00243A  0100               	movlb	0	; () banked
  5049  00243C  6F7B               	movwf	___fldiv@a& (0+255),b
  5050  00243E  0E00               	movlw	0
  5051  002440  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5052  002442  0E40               	movlw	64
  5053  002444  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5054  002446  0E40               	movlw	64
  5055  002448  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5056  00244A  0E00               	movlw	0
  5057  00244C  0100               	movlb	0	; () banked
  5058  00244E  6F94               	movwf	___flmul@a& (0+255),b
  5059  002450  0E00               	movlw	0
  5060  002452  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5061  002454  0E00               	movlw	0
  5062  002456  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5063  002458  0E40               	movlw	64
  5064  00245A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5065  00245C  C1E2  F090         	movff	_larghezza,___flmul@b
  5066  002460  C1E3  F091         	movff	_larghezza+1,___flmul@b+1
  5067  002464  C1E4  F092         	movff	_larghezza+2,___flmul@b+2
  5068  002468  C1E5  F093         	movff	_larghezza+3,___flmul@b+3
  5069  00246C  EC91  F017         	call	___flmul	;wreg free
  5070  002470  C090  F077         	movff	?___flmul,___fldiv@b
  5071  002474  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5072  002478  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5073  00247C  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5074  002480  EC03  F01E         	call	___fldiv	;wreg free
  5075  002484  C077  F0BD         	movff	?___fldiv,___flneg@f1
  5076  002488  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  5077  00248C  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  5078  002490  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  5079  002494  EC4D  F02F         	call	___flneg	;wreg free
  5080  002498  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5081  00249C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5082  0024A0  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5083  0024A4  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5084  0024A8  C1E8  F0AD         	movff	_raggio,___fladd@a
  5085  0024AC  C1E9  F0AE         	movff	_raggio+1,___fladd@a+1
  5086  0024B0  C1EA  F0AF         	movff	_raggio+2,___fladd@a+2
  5087  0024B4  C1EB  F0B0         	movff	_raggio+3,___fladd@a+3
  5088  0024B8  EC3D  F015         	call	___fladd	;wreg free
  5089  0024BC  C0A9  F128         	movff	?___fladd,_jjj
  5090  0024C0  C0AA  F129         	movff	?___fladd+1,_jjj+1
  5091  0024C4  C0AB  F12A         	movff	?___fladd+2,_jjj+2
  5092  0024C8  C0AC  F12B         	movff	?___fladd+3,_jjj+3
  5093                           
  5094                           ;parcheggio.c: 438: Pminimo = kkk * cos(asin((jjj / kkk)));
  5095  0024CC  C12C  F07B         	movff	_kkk,___fldiv@a
  5096  0024D0  C12D  F07C         	movff	_kkk+1,___fldiv@a+1
  5097  0024D4  C12E  F07D         	movff	_kkk+2,___fldiv@a+2
  5098  0024D8  C12F  F07E         	movff	_kkk+3,___fldiv@a+3
  5099  0024DC  C128  F077         	movff	_jjj,___fldiv@b
  5100  0024E0  C129  F078         	movff	_jjj+1,___fldiv@b+1
  5101  0024E4  C12A  F079         	movff	_jjj+2,___fldiv@b+2
  5102  0024E8  C12B  F07A         	movff	_jjj+3,___fldiv@b+3
  5103  0024EC  EC03  F01E         	call	___fldiv	;wreg free
  5104  0024F0  C077  F1CA         	movff	?___fldiv,_matematica$3746
  5105  0024F4  C078  F1CB         	movff	?___fldiv+1,_matematica$3746+1
  5106  0024F8  C079  F1CC         	movff	?___fldiv+2,_matematica$3746+2
  5107  0024FC  C07A  F1CD         	movff	?___fldiv+3,_matematica$3746+3
  5108                           
  5109                           ;parcheggio.c: 438: Pminimo = kkk * cos(asin((jjj / kkk)));
  5110  002500  C1CA  F0DE         	movff	_matematica$3746,asin@x
  5111  002504  C1CB  F0DF         	movff	_matematica$3746+1,asin@x+1
  5112  002508  C1CC  F0E0         	movff	_matematica$3746+2,asin@x+2
  5113  00250C  C1CD  F0E1         	movff	_matematica$3746+3,asin@x+3
  5114  002510  EC3E  F023         	call	_asin	;wreg free
  5115  002514  C0DE  F1B2         	movff	?_asin,cos@f
  5116  002518  C0DF  F1B3         	movff	?_asin+1,cos@f+1
  5117  00251C  C0E0  F1B4         	movff	?_asin+2,cos@f+2
  5118  002520  C0E1  F1B5         	movff	?_asin+3,cos@f+3
  5119  002524  ECE8  F02C         	call	_cos	;wreg free
  5120  002528  C1B2  F1CE         	movff	?_cos,_matematica$3747
  5121  00252C  C1B3  F1CF         	movff	?_cos+1,_matematica$3747+1
  5122  002530  C1B4  F1D0         	movff	?_cos+2,_matematica$3747+2
  5123  002534  C1B5  F1D1         	movff	?_cos+3,_matematica$3747+3
  5124                           
  5125                           ;parcheggio.c: 438: Pminimo = kkk * cos(asin((jjj / kkk)));
  5126  002538  C1CE  F090         	movff	_matematica$3747,___flmul@b
  5127  00253C  C1CF  F091         	movff	_matematica$3747+1,___flmul@b+1
  5128  002540  C1D0  F092         	movff	_matematica$3747+2,___flmul@b+2
  5129  002544  C1D1  F093         	movff	_matematica$3747+3,___flmul@b+3
  5130  002548  C12C  F094         	movff	_kkk,___flmul@a
  5131  00254C  C12D  F095         	movff	_kkk+1,___flmul@a+1
  5132  002550  C12E  F096         	movff	_kkk+2,___flmul@a+2
  5133  002554  C12F  F097         	movff	_kkk+3,___flmul@a+3
  5134  002558  EC91  F017         	call	___flmul	;wreg free
  5135  00255C  C090  F118         	movff	?___flmul,_Pminimo
  5136  002560  C091  F119         	movff	?___flmul+1,_Pminimo+1
  5137  002564  C092  F11A         	movff	?___flmul+2,_Pminimo+2
  5138  002568  C093  F11B         	movff	?___flmul+3,_Pminimo+3
  5139  00256C  0012               	return		;funcret
  5140  00256E                     __end_of_matematica:
  5141                           	opt stack 0
  5142                           tblptru	equ	0xFF8
  5143                           tblptrh	equ	0xFF7
  5144                           tblptrl	equ	0xFF6
  5145                           tablat	equ	0xFF5
  5146                           postinc0	equ	0xFEE
  5147                           wreg	equ	0xFE8
  5148                           postdec1	equ	0xFE5
  5149                           fsr1l	equ	0xFE1
  5150                           indf2	equ	0xFDF
  5151                           postinc2	equ	0xFDE
  5152                           postdec2	equ	0xFDD
  5153                           fsr2h	equ	0xFDA
  5154                           fsr2l	equ	0xFD9
  5155                           status	equ	0xFD8
  5156                           
  5157 ;; *************** function _cos *****************
  5158 ;; Defined at:
  5159 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\cos.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;  f               4   37[BANK1 ] int 
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;		None
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  4   37[BANK1 ] int 
  5166 ;; Registers used:
  5167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5173 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5174 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5176 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5177 ;;Total ram usage:        8 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; Hardware stack levels required when called:    7
  5180 ;; This function calls:
  5181 ;;		___fladd
  5182 ;;		___flge
  5183 ;;		_sin
  5184 ;; This function is called by:
  5185 ;;		_matematica
  5186 ;; This function uses a non-reentrant model
  5187 ;;
  5188                           
  5189                           	psect	text9
  5190  0059D0                     __ptext9:
  5191                           	opt stack 0
  5192  0059D0                     _cos:
  5193                           	opt stack 21
  5194                           
  5195                           ;incstack = 0
  5196  0059D0  0EDB               	movlw	219
  5197  0059D2  0100               	movlb	0	; () banked
  5198  0059D4  6FC5               	movwf	___flge@ff1& (0+255),b
  5199  0059D6  0E0F               	movlw	15
  5200  0059D8  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5201  0059DA  0E49               	movlw	73
  5202  0059DC  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5203  0059DE  0E40               	movlw	64
  5204  0059E0  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5205  0059E2  C1B2  F0C9         	movff	cos@f,___flge@ff2
  5206  0059E6  C1B3  F0CA         	movff	cos@f+1,___flge@ff2+1
  5207  0059EA  C1B4  F0CB         	movff	cos@f+2,___flge@ff2+2
  5208  0059EE  C1B5  F0CC         	movff	cos@f+3,___flge@ff2+3
  5209  0059F2  ECE1  F029         	call	___flge	;wreg free
  5210  0059F6  0100               	movlb	0	; () banked
  5211  0059F8  B0D8               	btfsc	status,0,c
  5212  0059FA  D02E               	goto	l7305
  5213                           
  5214                           ; BSR set to: 0
  5215  0059FC  C1B2  F0A9         	movff	cos@f,___fladd@b
  5216  005A00  C1B3  F0AA         	movff	cos@f+1,___fladd@b+1
  5217  005A04  C1B4  F0AB         	movff	cos@f+2,___fladd@b+2
  5218  005A08  C1B5  F0AC         	movff	cos@f+3,___fladd@b+3
  5219  005A0C  0EE4               	movlw	228
  5220  005A0E  0100               	movlb	0	; () banked
  5221  005A10  6FAD               	movwf	___fladd@a& (0+255),b
  5222  005A12  0ECB               	movlw	203
  5223  005A14  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5224  005A16  0E96               	movlw	150
  5225  005A18  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5226  005A1A  0EC0               	movlw	192
  5227  005A1C  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5228  005A1E  EC3D  F015         	call	___fladd	;wreg free
  5229  005A22  C0A9  F1B6         	movff	?___fladd,_cos$3751
  5230  005A26  C0AA  F1B7         	movff	?___fladd+1,_cos$3751+1
  5231  005A2A  C0AB  F1B8         	movff	?___fladd+2,_cos$3751+2
  5232  005A2E  C0AC  F1B9         	movff	?___fladd+3,_cos$3751+3
  5233  005A32  C1B6  F195         	movff	_cos$3751,sin@f
  5234  005A36  C1B7  F196         	movff	_cos$3751+1,sin@f+1
  5235  005A3A  C1B8  F197         	movff	_cos$3751+2,sin@f+2
  5236  005A3E  C1B9  F198         	movff	_cos$3751+3,sin@f+3
  5237  005A42  ECB2  F021         	call	_sin	;wreg free
  5238  005A46  C195  F1B2         	movff	?_sin,?_cos
  5239  005A4A  C196  F1B3         	movff	?_sin+1,?_cos+1
  5240  005A4E  C197  F1B4         	movff	?_sin+2,?_cos+2
  5241  005A52  C198  F1B5         	movff	?_sin+3,?_cos+3
  5242  005A56  0012               	return	
  5243  005A58                     l7305:
  5244  005A58  C1B2  F0A9         	movff	cos@f,___fladd@b
  5245  005A5C  C1B3  F0AA         	movff	cos@f+1,___fladd@b+1
  5246  005A60  C1B4  F0AB         	movff	cos@f+2,___fladd@b+2
  5247  005A64  C1B5  F0AC         	movff	cos@f+3,___fladd@b+3
  5248  005A68  0EDB               	movlw	219
  5249  005A6A  0100               	movlb	0	; () banked
  5250  005A6C  6FAD               	movwf	___fladd@a& (0+255),b
  5251  005A6E  0E0F               	movlw	15
  5252  005A70  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5253  005A72  0EC9               	movlw	201
  5254  005A74  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5255  005A76  0E3F               	movlw	63
  5256  005A78  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5257  005A7A  EC3D  F015         	call	___fladd	;wreg free
  5258  005A7E  C0A9  F1B6         	movff	?___fladd,_cos$3751
  5259  005A82  C0AA  F1B7         	movff	?___fladd+1,_cos$3751+1
  5260  005A86  C0AB  F1B8         	movff	?___fladd+2,_cos$3751+2
  5261  005A8A  C0AC  F1B9         	movff	?___fladd+3,_cos$3751+3
  5262  005A8E  C1B6  F195         	movff	_cos$3751,sin@f
  5263  005A92  C1B7  F196         	movff	_cos$3751+1,sin@f+1
  5264  005A96  C1B8  F197         	movff	_cos$3751+2,sin@f+2
  5265  005A9A  C1B9  F198         	movff	_cos$3751+3,sin@f+3
  5266  005A9E  ECB2  F021         	call	_sin	;wreg free
  5267  005AA2  C195  F1B2         	movff	?_sin,?_cos
  5268  005AA6  C196  F1B3         	movff	?_sin+1,?_cos+1
  5269  005AAA  C197  F1B4         	movff	?_sin+2,?_cos+2
  5270  005AAE  C198  F1B5         	movff	?_sin+3,?_cos+3
  5271  005AB2  0012               	return	
  5272  005AB4                     __end_of_cos:
  5273                           	opt stack 0
  5274                           tblptru	equ	0xFF8
  5275                           tblptrh	equ	0xFF7
  5276                           tblptrl	equ	0xFF6
  5277                           tablat	equ	0xFF5
  5278                           postinc0	equ	0xFEE
  5279                           wreg	equ	0xFE8
  5280                           postdec1	equ	0xFE5
  5281                           fsr1l	equ	0xFE1
  5282                           indf2	equ	0xFDF
  5283                           postinc2	equ	0xFDE
  5284                           postdec2	equ	0xFDD
  5285                           fsr2h	equ	0xFDA
  5286                           fsr2l	equ	0xFD9
  5287                           status	equ	0xFD8
  5288                           
  5289 ;; *************** function _sin *****************
  5290 ;; Defined at:
  5291 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sin.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;  f               4    8[BANK1 ] int 
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;  x2              4   20[BANK1 ] int 
  5296 ;;  y               4   12[BANK1 ] int 
  5297 ;;  sgn             1   24[BANK1 ] unsigned char 
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  4    8[BANK1 ] unsigned char 
  5300 ;; Registers used:
  5301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5307 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5308 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5310 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5311 ;;Total ram usage:       17 bytes
  5312 ;; Hardware stack levels used:    1
  5313 ;; Hardware stack levels required when called:    6
  5314 ;; This function calls:
  5315 ;;		___fladd
  5316 ;;		___fldiv
  5317 ;;		___flge
  5318 ;;		___flmul
  5319 ;;		___flneg
  5320 ;;		___flsub
  5321 ;;		_eval_poly
  5322 ;;		_floor
  5323 ;; This function is called by:
  5324 ;;		_cos
  5325 ;; This function uses a non-reentrant model
  5326 ;;
  5327                           
  5328                           	psect	text10
  5329  004364                     __ptext10:
  5330                           	opt stack 0
  5331  004364                     _sin:
  5332                           	opt stack 21
  5333                           
  5334                           ;incstack = 0
  5335  004364  0E00               	movlw	0
  5336  004366  0101               	movlb	1	; () banked
  5337  004368  6FA5               	movwf	sin@sgn& (0+255),b
  5338                           
  5339                           ; BSR set to: 1
  5340  00436A  0101               	movlb	1	; () banked
  5341  00436C  AF98               	btfss	(sin@f+3)& (0+255),7,b
  5342  00436E  D015               	goto	l7187
  5343                           
  5344                           ; BSR set to: 1
  5345  004370  C195  F0BD         	movff	sin@f,___flneg@f1
  5346  004374  C196  F0BE         	movff	sin@f+1,___flneg@f1+1
  5347  004378  C197  F0BF         	movff	sin@f+2,___flneg@f1+2
  5348  00437C  C198  F0C0         	movff	sin@f+3,___flneg@f1+3
  5349  004380  EC4D  F02F         	call	___flneg	;wreg free
  5350  004384  C0BD  F195         	movff	?___flneg,sin@f
  5351  004388  C0BE  F196         	movff	?___flneg+1,sin@f+1
  5352  00438C  C0BF  F197         	movff	?___flneg+2,sin@f+2
  5353  004390  C0C0  F198         	movff	?___flneg+3,sin@f+3
  5354  004394  0E01               	movlw	1
  5355  004396  0101               	movlb	1	; () banked
  5356  004398  6FA5               	movwf	sin@sgn& (0+255),b
  5357  00439A                     l7187:
  5358                           
  5359                           ; BSR set to: 1
  5360  00439A  C195  F090         	movff	sin@f,___flmul@b
  5361  00439E  C196  F091         	movff	sin@f+1,___flmul@b+1
  5362  0043A2  C197  F092         	movff	sin@f+2,___flmul@b+2
  5363  0043A6  C198  F093         	movff	sin@f+3,___flmul@b+3
  5364  0043AA  0E83               	movlw	131
  5365  0043AC  0100               	movlb	0	; () banked
  5366  0043AE  6F94               	movwf	___flmul@a& (0+255),b
  5367  0043B0  0EF9               	movlw	249
  5368  0043B2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5369  0043B4  0E22               	movlw	34
  5370  0043B6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5371  0043B8  0E3E               	movlw	62
  5372  0043BA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5373  0043BC  EC91  F017         	call	___flmul	;wreg free
  5374  0043C0  C090  F195         	movff	?___flmul,sin@f
  5375  0043C4  C091  F196         	movff	?___flmul+1,sin@f+1
  5376  0043C8  C092  F197         	movff	?___flmul+2,sin@f+2
  5377  0043CC  C093  F198         	movff	?___flmul+3,sin@f+3
  5378  0043D0  C195  F18D         	movff	sin@f,___flsub@b
  5379  0043D4  C196  F18E         	movff	sin@f+1,___flsub@b+1
  5380  0043D8  C197  F18F         	movff	sin@f+2,___flsub@b+2
  5381  0043DC  C198  F190         	movff	sin@f+3,___flsub@b+3
  5382  0043E0  C195  F0D9         	movff	sin@f,floor@x
  5383  0043E4  C196  F0DA         	movff	sin@f+1,floor@x+1
  5384  0043E8  C197  F0DB         	movff	sin@f+2,floor@x+2
  5385  0043EC  C198  F0DC         	movff	sin@f+3,floor@x+3
  5386  0043F0  EC44  F02B         	call	_floor	;wreg free
  5387  0043F4  C0D9  F191         	movff	?_floor,___flsub@a
  5388  0043F8  C0DA  F192         	movff	?_floor+1,___flsub@a+1
  5389  0043FC  C0DB  F193         	movff	?_floor+2,___flsub@a+2
  5390  004400  C0DC  F194         	movff	?_floor+3,___flsub@a+3
  5391  004404  EC0A  F02F         	call	___flsub	;wreg free
  5392  004408  C18D  F195         	movff	?___flsub,sin@f
  5393  00440C  C18E  F196         	movff	?___flsub+1,sin@f+1
  5394  004410  C18F  F197         	movff	?___flsub+2,sin@f+2
  5395  004414  C190  F198         	movff	?___flsub+3,sin@f+3
  5396  004418  C195  F090         	movff	sin@f,___flmul@b
  5397  00441C  C196  F091         	movff	sin@f+1,___flmul@b+1
  5398  004420  C197  F092         	movff	sin@f+2,___flmul@b+2
  5399  004424  C198  F093         	movff	sin@f+3,___flmul@b+3
  5400  004428  0E00               	movlw	0
  5401  00442A  0100               	movlb	0	; () banked
  5402  00442C  6F94               	movwf	___flmul@a& (0+255),b
  5403  00442E  0E00               	movlw	0
  5404  004430  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5405  004432  0E80               	movlw	128
  5406  004434  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5407  004436  0E40               	movlw	64
  5408  004438  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5409  00443A  EC91  F017         	call	___flmul	;wreg free
  5410  00443E  C090  F195         	movff	?___flmul,sin@f
  5411  004442  C091  F196         	movff	?___flmul+1,sin@f+1
  5412  004446  C092  F197         	movff	?___flmul+2,sin@f+2
  5413  00444A  C093  F198         	movff	?___flmul+3,sin@f+3
  5414  00444E  0E00               	movlw	0
  5415  004450  0100               	movlb	0	; () banked
  5416  004452  6FC5               	movwf	___flge@ff1& (0+255),b
  5417  004454  0E00               	movlw	0
  5418  004456  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5419  004458  0E00               	movlw	0
  5420  00445A  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5421  00445C  0E40               	movlw	64
  5422  00445E  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5423  004460  C195  F0C9         	movff	sin@f,___flge@ff2
  5424  004464  C196  F0CA         	movff	sin@f+1,___flge@ff2+1
  5425  004468  C197  F0CB         	movff	sin@f+2,___flge@ff2+2
  5426  00446C  C198  F0CC         	movff	sin@f+3,___flge@ff2+3
  5427  004470  ECE1  F029         	call	___flge	;wreg free
  5428  004474  0100               	movlb	0	; () banked
  5429  004476  B0D8               	btfsc	status,0,c
  5430  004478  D025               	goto	l7199
  5431                           
  5432                           ; BSR set to: 0
  5433  00447A  C195  F18D         	movff	sin@f,___flsub@b
  5434  00447E  C196  F18E         	movff	sin@f+1,___flsub@b+1
  5435  004482  C197  F18F         	movff	sin@f+2,___flsub@b+2
  5436  004486  C198  F190         	movff	sin@f+3,___flsub@b+3
  5437  00448A  0E00               	movlw	0
  5438  00448C  0101               	movlb	1	; () banked
  5439  00448E  6F91               	movwf	___flsub@a& (0+255),b
  5440  004490  0E00               	movlw	0
  5441  004492  6F92               	movwf	(___flsub@a+1)& (0+255),b
  5442  004494  0E00               	movlw	0
  5443  004496  6F93               	movwf	(___flsub@a+2)& (0+255),b
  5444  004498  0E40               	movlw	64
  5445  00449A  6F94               	movwf	(___flsub@a+3)& (0+255),b
  5446  00449C  EC0A  F02F         	call	___flsub	;wreg free
  5447  0044A0  C18D  F195         	movff	?___flsub,sin@f
  5448  0044A4  C18E  F196         	movff	?___flsub+1,sin@f+1
  5449  0044A8  C18F  F197         	movff	?___flsub+2,sin@f+2
  5450  0044AC  C190  F198         	movff	?___flsub+3,sin@f+3
  5451  0044B0  0101               	movlb	1	; () banked
  5452  0044B2  51A5               	movf	sin@sgn& (0+255),w,b
  5453  0044B4  0101               	movlb	1	; () banked
  5454  0044B6  A4D8               	btfss	status,2,c
  5455  0044B8  D002               	goto	u9280
  5456  0044BA  0E01               	movlw	1
  5457  0044BC  D001               	goto	u9290
  5458  0044BE                     u9280:
  5459  0044BE  0E00               	movlw	0
  5460  0044C0                     u9290:
  5461  0044C0  0101               	movlb	1	; () banked
  5462  0044C2  6FA5               	movwf	sin@sgn& (0+255),b
  5463  0044C4                     l7199:
  5464  0044C4  0E00               	movlw	0
  5465  0044C6  0100               	movlb	0	; () banked
  5466  0044C8  6FC5               	movwf	___flge@ff1& (0+255),b
  5467  0044CA  0E00               	movlw	0
  5468  0044CC  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5469  0044CE  0E80               	movlw	128
  5470  0044D0  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5471  0044D2  0E3F               	movlw	63
  5472  0044D4  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5473  0044D6  C195  F0C9         	movff	sin@f,___flge@ff2
  5474  0044DA  C196  F0CA         	movff	sin@f+1,___flge@ff2+1
  5475  0044DE  C197  F0CB         	movff	sin@f+2,___flge@ff2+2
  5476  0044E2  C198  F0CC         	movff	sin@f+3,___flge@ff2+3
  5477  0044E6  ECE1  F029         	call	___flge	;wreg free
  5478  0044EA  0100               	movlb	0	; () banked
  5479  0044EC  B0D8               	btfsc	status,0,c
  5480  0044EE  D025               	goto	l7203
  5481                           
  5482                           ; BSR set to: 0
  5483  0044F0  C195  F0BD         	movff	sin@f,___flneg@f1
  5484  0044F4  C196  F0BE         	movff	sin@f+1,___flneg@f1+1
  5485  0044F8  C197  F0BF         	movff	sin@f+2,___flneg@f1+2
  5486  0044FC  C198  F0C0         	movff	sin@f+3,___flneg@f1+3
  5487  004500  EC4D  F02F         	call	___flneg	;wreg free
  5488  004504  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5489  004508  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5490  00450C  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5491  004510  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5492  004514  0E00               	movlw	0
  5493  004516  0100               	movlb	0	; () banked
  5494  004518  6FAD               	movwf	___fladd@a& (0+255),b
  5495  00451A  0E00               	movlw	0
  5496  00451C  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5497  00451E  0E00               	movlw	0
  5498  004520  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5499  004522  0E40               	movlw	64
  5500  004524  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5501  004526  EC3D  F015         	call	___fladd	;wreg free
  5502  00452A  C0A9  F195         	movff	?___fladd,sin@f
  5503  00452E  C0AA  F196         	movff	?___fladd+1,sin@f+1
  5504  004532  C0AB  F197         	movff	?___fladd+2,sin@f+2
  5505  004536  C0AC  F198         	movff	?___fladd+3,sin@f+3
  5506  00453A                     l7203:
  5507  00453A  C195  F090         	movff	sin@f,___flmul@b
  5508  00453E  C196  F091         	movff	sin@f+1,___flmul@b+1
  5509  004542  C197  F092         	movff	sin@f+2,___flmul@b+2
  5510  004546  C198  F093         	movff	sin@f+3,___flmul@b+3
  5511  00454A  C195  F094         	movff	sin@f,___flmul@a
  5512  00454E  C196  F095         	movff	sin@f+1,___flmul@a+1
  5513  004552  C197  F096         	movff	sin@f+2,___flmul@a+2
  5514  004556  C198  F097         	movff	sin@f+3,___flmul@a+3
  5515  00455A  EC91  F017         	call	___flmul	;wreg free
  5516  00455E  C090  F1A1         	movff	?___flmul,sin@x2
  5517  004562  C091  F1A2         	movff	?___flmul+1,sin@x2+1
  5518  004566  C092  F1A3         	movff	?___flmul+2,sin@x2+2
  5519  00456A  C093  F1A4         	movff	?___flmul+3,sin@x2+3
  5520  00456E  C1A1  F0BD         	movff	sin@x2,eval_poly@x
  5521  004572  C1A2  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5522  004576  C1A3  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5523  00457A  C1A4  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5524  00457E  0E41               	movlw	low sin@coeff_b
  5525  004580  0100               	movlb	0	; () banked
  5526  004582  6FC1               	movwf	eval_poly@d& (0+255),b
  5527  004584  0E0D               	movlw	high sin@coeff_b
  5528  004586  0100               	movlb	0	; () banked
  5529  004588  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5530  00458A  0E00               	movlw	0
  5531  00458C  0100               	movlb	0	; () banked
  5532  00458E  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5533  004590  0E03               	movlw	3
  5534  004592  6FC3               	movwf	eval_poly@n& (0+255),b
  5535  004594  ECD6  F02B         	call	_eval_poly	;wreg free
  5536  004598  C0BD  F199         	movff	?_eval_poly,sin@y
  5537  00459C  C0BE  F19A         	movff	?_eval_poly+1,sin@y+1
  5538  0045A0  C0BF  F19B         	movff	?_eval_poly+2,sin@y+2
  5539  0045A4  C0C0  F19C         	movff	?_eval_poly+3,sin@y+3
  5540  0045A8  C199  F07B         	movff	sin@y,___fldiv@a
  5541  0045AC  C19A  F07C         	movff	sin@y+1,___fldiv@a+1
  5542  0045B0  C19B  F07D         	movff	sin@y+2,___fldiv@a+2
  5543  0045B4  C19C  F07E         	movff	sin@y+3,___fldiv@a+3
  5544  0045B8  0E00               	movlw	0
  5545  0045BA  0100               	movlb	0	; () banked
  5546  0045BC  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5547  0045BE  0E04               	movlw	4
  5548  0045C0  6FC3               	movwf	eval_poly@n& (0+255),b
  5549  0045C2  0E2D               	movlw	low sin@coeff_a
  5550  0045C4  0100               	movlb	0	; () banked
  5551  0045C6  6FC1               	movwf	eval_poly@d& (0+255),b
  5552  0045C8  0E0D               	movlw	high sin@coeff_a
  5553  0045CA  0100               	movlb	0	; () banked
  5554  0045CC  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5555  0045CE  C1A1  F0BD         	movff	sin@x2,eval_poly@x
  5556  0045D2  C1A2  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5557  0045D6  C1A3  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5558  0045DA  C1A4  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5559  0045DE  ECD6  F02B         	call	_eval_poly	;wreg free
  5560  0045E2  C0BD  F077         	movff	?_eval_poly,___fldiv@b
  5561  0045E6  C0BE  F078         	movff	?_eval_poly+1,___fldiv@b+1
  5562  0045EA  C0BF  F079         	movff	?_eval_poly+2,___fldiv@b+2
  5563  0045EE  C0C0  F07A         	movff	?_eval_poly+3,___fldiv@b+3
  5564  0045F2  EC03  F01E         	call	___fldiv	;wreg free
  5565  0045F6  C077  F19D         	movff	?___fldiv,_sin$3752
  5566  0045FA  C078  F19E         	movff	?___fldiv+1,_sin$3752+1
  5567  0045FE  C079  F19F         	movff	?___fldiv+2,_sin$3752+2
  5568  004602  C07A  F1A0         	movff	?___fldiv+3,_sin$3752+3
  5569  004606  C195  F090         	movff	sin@f,___flmul@b
  5570  00460A  C196  F091         	movff	sin@f+1,___flmul@b+1
  5571  00460E  C197  F092         	movff	sin@f+2,___flmul@b+2
  5572  004612  C198  F093         	movff	sin@f+3,___flmul@b+3
  5573  004616  C19D  F094         	movff	_sin$3752,___flmul@a
  5574  00461A  C19E  F095         	movff	_sin$3752+1,___flmul@a+1
  5575  00461E  C19F  F096         	movff	_sin$3752+2,___flmul@a+2
  5576  004622  C1A0  F097         	movff	_sin$3752+3,___flmul@a+3
  5577  004626  EC91  F017         	call	___flmul	;wreg free
  5578  00462A  C090  F195         	movff	?___flmul,sin@f
  5579  00462E  C091  F196         	movff	?___flmul+1,sin@f+1
  5580  004632  C092  F197         	movff	?___flmul+2,sin@f+2
  5581  004636  C093  F198         	movff	?___flmul+3,sin@f+3
  5582  00463A  0101               	movlb	1	; () banked
  5583  00463C  51A5               	movf	sin@sgn& (0+255),w,b
  5584  00463E  0101               	movlb	1	; () banked
  5585  004640  B4D8               	btfsc	status,2,c
  5586  004642  D013               	goto	l1314
  5587                           
  5588                           ; BSR set to: 1
  5589  004644  C195  F0BD         	movff	sin@f,___flneg@f1
  5590  004648  C196  F0BE         	movff	sin@f+1,___flneg@f1+1
  5591  00464C  C197  F0BF         	movff	sin@f+2,___flneg@f1+2
  5592  004650  C198  F0C0         	movff	sin@f+3,___flneg@f1+3
  5593  004654  EC4D  F02F         	call	___flneg	;wreg free
  5594  004658  C0BD  F195         	movff	?___flneg,?_sin
  5595  00465C  C0BE  F196         	movff	?___flneg+1,?_sin+1
  5596  004660  C0BF  F197         	movff	?___flneg+2,?_sin+2
  5597  004664  C0C0  F198         	movff	?___flneg+3,?_sin+3
  5598  004668  0012               	return	
  5599  00466A                     l1314:
  5600                           
  5601                           ; BSR set to: 1
  5602  00466A  C195  F195         	movff	sin@f,?_sin
  5603  00466E  C196  F196         	movff	sin@f+1,?_sin+1
  5604  004672  C197  F197         	movff	sin@f+2,?_sin+2
  5605  004676  C198  F198         	movff	sin@f+3,?_sin+3
  5606  00467A  0012               	return		;funcret
  5607  00467C                     __end_of_sin:
  5608                           	opt stack 0
  5609                           tblptru	equ	0xFF8
  5610                           tblptrh	equ	0xFF7
  5611                           tblptrl	equ	0xFF6
  5612                           tablat	equ	0xFF5
  5613                           postinc0	equ	0xFEE
  5614                           wreg	equ	0xFE8
  5615                           postdec1	equ	0xFE5
  5616                           fsr1l	equ	0xFE1
  5617                           indf2	equ	0xFDF
  5618                           postinc2	equ	0xFDE
  5619                           postdec2	equ	0xFDD
  5620                           fsr2h	equ	0xFDA
  5621                           fsr2l	equ	0xFD9
  5622                           status	equ	0xFD8
  5623                           
  5624 ;; *************** function _floor *****************
  5625 ;; Defined at:
  5626 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  5627 ;; Parameters:    Size  Location     Type
  5628 ;;  x               4  121[BANK0 ] unsigned char 
  5629 ;; Auto vars:     Size  Location     Type
  5630 ;;  i               4  125[BANK0 ] unsigned char 
  5631 ;;  expon           2  129[BANK0 ] int 
  5632 ;; Return value:  Size  Location     Type
  5633 ;;                  4  121[BANK0 ] int 
  5634 ;; Registers used:
  5635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5636 ;; Tracked objects:
  5637 ;;		On entry : 0/0
  5638 ;;		On exit  : 0/0
  5639 ;;		Unchanged: 0/0
  5640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5641 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5642 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5644 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5645 ;;Total ram usage:       10 bytes
  5646 ;; Hardware stack levels used:    1
  5647 ;; Hardware stack levels required when called:    5
  5648 ;; This function calls:
  5649 ;;		___fladd
  5650 ;;		___flge
  5651 ;;		___fltol
  5652 ;;		___xxtofl
  5653 ;;		_frexp
  5654 ;; This function is called by:
  5655 ;;		_sin
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           	psect	text11
  5660  005688                     __ptext11:
  5661                           	opt stack 0
  5662  005688                     _floor:
  5663                           	opt stack 21
  5664                           
  5665                           ;incstack = 0
  5666  005688  C0D9  F077         	movff	floor@x,frexp@value
  5667  00568C  C0DA  F078         	movff	floor@x+1,frexp@value+1
  5668  005690  C0DB  F079         	movff	floor@x+2,frexp@value+2
  5669  005694  C0DC  F07A         	movff	floor@x+3,frexp@value+3
  5670  005698  0EE1               	movlw	low floor@expon
  5671  00569A  0100               	movlb	0	; () banked
  5672  00569C  6F7B               	movwf	frexp@eptr& (0+255),b
  5673  00569E  0E00               	movlw	high floor@expon
  5674  0056A0  0100               	movlb	0	; () banked
  5675  0056A2  6F7C               	movwf	(frexp@eptr+1)& (0+255),b
  5676  0056A4  ECCB  F02D         	call	_frexp	;wreg free
  5677  0056A8  0100               	movlb	0	; () banked
  5678  0056AA  AFE2               	btfss	(floor@expon+1)& (0+255),7,b
  5679  0056AC  D017               	goto	l6793
  5680                           
  5681                           ; BSR set to: 0
  5682  0056AE  0100               	movlb	0	; () banked
  5683  0056B0  AFDC               	btfss	(floor@x+3)& (0+255),7,b
  5684  0056B2  D00A               	goto	l6789
  5685                           
  5686                           ; BSR set to: 0
  5687  0056B4  0E00               	movlw	0
  5688  0056B6  0100               	movlb	0	; () banked
  5689  0056B8  6FD9               	movwf	?_floor& (0+255),b
  5690  0056BA  0E00               	movlw	0
  5691  0056BC  6FDA               	movwf	(?_floor+1)& (0+255),b
  5692  0056BE  0E80               	movlw	128
  5693  0056C0  6FDB               	movwf	(?_floor+2)& (0+255),b
  5694  0056C2  0EBF               	movlw	191
  5695  0056C4  6FDC               	movwf	(?_floor+3)& (0+255),b
  5696                           
  5697                           ; BSR set to: 0
  5698  0056C6  0012               	return	
  5699  0056C8                     l6789:
  5700                           
  5701                           ; BSR set to: 0
  5702  0056C8  0E00               	movlw	0
  5703  0056CA  0100               	movlb	0	; () banked
  5704  0056CC  6FD9               	movwf	?_floor& (0+255),b
  5705  0056CE  0E00               	movlw	0
  5706  0056D0  6FDA               	movwf	(?_floor+1)& (0+255),b
  5707  0056D2  0E00               	movlw	0
  5708  0056D4  6FDB               	movwf	(?_floor+2)& (0+255),b
  5709  0056D6  0E00               	movlw	0
  5710  0056D8  6FDC               	movwf	(?_floor+3)& (0+255),b
  5711                           
  5712                           ; BSR set to: 0
  5713  0056DA  0012               	return	
  5714  0056DC                     l6793:
  5715                           
  5716                           ; BSR set to: 0
  5717  0056DC  0100               	movlb	0	; () banked
  5718  0056DE  51E2               	movf	(floor@expon+1)& (0+255),w,b
  5719  0056E0  E105               	bnz	u8650
  5720  0056E2  0E1D               	movlw	29
  5721  0056E4  0100               	movlb	0	; () banked
  5722  0056E6  5DE1               	subwf	floor@expon& (0+255),w,b
  5723  0056E8  A0D8               	btfss	status,0,c
  5724  0056EA  D009               	goto	l6797
  5725  0056EC                     u8650:
  5726                           
  5727                           ; BSR set to: 0
  5728  0056EC  C0D9  F0D9         	movff	floor@x,?_floor
  5729  0056F0  C0DA  F0DA         	movff	floor@x+1,?_floor+1
  5730  0056F4  C0DB  F0DB         	movff	floor@x+2,?_floor+2
  5731  0056F8  C0DC  F0DC         	movff	floor@x+3,?_floor+3
  5732  0056FC  0012               	return	
  5733  0056FE                     l6797:
  5734                           
  5735                           ; BSR set to: 0
  5736  0056FE  C0D9  F0C1         	movff	floor@x,___fltol@f1
  5737  005702  C0DA  F0C2         	movff	floor@x+1,___fltol@f1+1
  5738  005706  C0DB  F0C3         	movff	floor@x+2,___fltol@f1+2
  5739  00570A  C0DC  F0C4         	movff	floor@x+3,___fltol@f1+3
  5740  00570E  EC62  F02C         	call	___fltol	;wreg free
  5741  005712  C0C1  F0CB         	movff	?___fltol,___xxtofl@val
  5742  005716  C0C2  F0CC         	movff	?___fltol+1,___xxtofl@val+1
  5743  00571A  C0C3  F0CD         	movff	?___fltol+2,___xxtofl@val+2
  5744  00571E  C0C4  F0CE         	movff	?___fltol+3,___xxtofl@val+3
  5745  005722  0E01               	movlw	1
  5746  005724  EC36  F027         	call	___xxtofl
  5747  005728  C0CB  F0DD         	movff	?___xxtofl,floor@i
  5748  00572C  C0CC  F0DE         	movff	?___xxtofl+1,floor@i+1
  5749  005730  C0CD  F0DF         	movff	?___xxtofl+2,floor@i+2
  5750  005734  C0CE  F0E0         	movff	?___xxtofl+3,floor@i+3
  5751  005738  C0D9  F0C5         	movff	floor@x,___flge@ff1
  5752  00573C  C0DA  F0C6         	movff	floor@x+1,___flge@ff1+1
  5753  005740  C0DB  F0C7         	movff	floor@x+2,___flge@ff1+2
  5754  005744  C0DC  F0C8         	movff	floor@x+3,___flge@ff1+3
  5755  005748  C0DD  F0C9         	movff	floor@i,___flge@ff2
  5756  00574C  C0DE  F0CA         	movff	floor@i+1,___flge@ff2+1
  5757  005750  C0DF  F0CB         	movff	floor@i+2,___flge@ff2+2
  5758  005754  C0E0  F0CC         	movff	floor@i+3,___flge@ff2+3
  5759  005758  ECE1  F029         	call	___flge	;wreg free
  5760  00575C  0100               	movlb	0	; () banked
  5761  00575E  B0D8               	btfsc	status,0,c
  5762  005760  D01C               	goto	l1483
  5763                           
  5764                           ; BSR set to: 0
  5765  005762  C0DD  F0A9         	movff	floor@i,___fladd@b
  5766  005766  C0DE  F0AA         	movff	floor@i+1,___fladd@b+1
  5767  00576A  C0DF  F0AB         	movff	floor@i+2,___fladd@b+2
  5768  00576E  C0E0  F0AC         	movff	floor@i+3,___fladd@b+3
  5769  005772  0E00               	movlw	0
  5770  005774  0100               	movlb	0	; () banked
  5771  005776  6FAD               	movwf	___fladd@a& (0+255),b
  5772  005778  0E00               	movlw	0
  5773  00577A  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5774  00577C  0E80               	movlw	128
  5775  00577E  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5776  005780  0EBF               	movlw	191
  5777  005782  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5778  005784  EC3D  F015         	call	___fladd	;wreg free
  5779  005788  C0A9  F0D9         	movff	?___fladd,?_floor
  5780  00578C  C0AA  F0DA         	movff	?___fladd+1,?_floor+1
  5781  005790  C0AB  F0DB         	movff	?___fladd+2,?_floor+2
  5782  005794  C0AC  F0DC         	movff	?___fladd+3,?_floor+3
  5783  005798  0012               	return	
  5784  00579A                     l1483:
  5785                           
  5786                           ; BSR set to: 0
  5787  00579A  C0DD  F0D9         	movff	floor@i,?_floor
  5788  00579E  C0DE  F0DA         	movff	floor@i+1,?_floor+1
  5789  0057A2  C0DF  F0DB         	movff	floor@i+2,?_floor+2
  5790  0057A6  C0E0  F0DC         	movff	floor@i+3,?_floor+3
  5791  0057AA  0012               	return		;funcret
  5792  0057AC                     __end_of_floor:
  5793                           	opt stack 0
  5794                           tblptru	equ	0xFF8
  5795                           tblptrh	equ	0xFF7
  5796                           tblptrl	equ	0xFF6
  5797                           tablat	equ	0xFF5
  5798                           postinc0	equ	0xFEE
  5799                           wreg	equ	0xFE8
  5800                           postdec1	equ	0xFE5
  5801                           fsr1l	equ	0xFE1
  5802                           indf2	equ	0xFDF
  5803                           postinc2	equ	0xFDE
  5804                           postdec2	equ	0xFDD
  5805                           fsr2h	equ	0xFDA
  5806                           fsr2l	equ	0xFD9
  5807                           status	equ	0xFD8
  5808                           
  5809 ;; *************** function _frexp *****************
  5810 ;; Defined at:
  5811 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  5812 ;; Parameters:    Size  Location     Type
  5813 ;;  value           4   23[BANK0 ] int 
  5814 ;;  eptr            2   27[BANK0 ] PTR int 
  5815 ;;		 -> floor@expon(2), 
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;		None
  5818 ;; Return value:  Size  Location     Type
  5819 ;;                  4   23[BANK0 ] PTR int 
  5820 ;; Registers used:
  5821 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5822 ;; Tracked objects:
  5823 ;;		On entry : 0/0
  5824 ;;		On exit  : 0/0
  5825 ;;		Unchanged: 0/0
  5826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5827 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5829 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5830 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5831 ;;Total ram usage:        8 bytes
  5832 ;; Hardware stack levels used:    1
  5833 ;; Hardware stack levels required when called:    4
  5834 ;; This function calls:
  5835 ;;		Nothing
  5836 ;; This function is called by:
  5837 ;;		_floor
  5838 ;; This function uses a non-reentrant model
  5839 ;;
  5840                           
  5841                           	psect	text12
  5842  005B96                     __ptext12:
  5843                           	opt stack 0
  5844  005B96                     _frexp:
  5845                           	opt stack 21
  5846                           
  5847                           ;incstack = 0
  5848  005B96  0100               	movlb	0	; () banked
  5849  005B98  5177               	movf	frexp@value& (0+255),w,b
  5850  005B9A  0100               	movlb	0	; () banked
  5851  005B9C  1178               	iorwf	(frexp@value+1)& (0+255),w,b
  5852  005B9E  0100               	movlb	0	; () banked
  5853  005BA0  1179               	iorwf	(frexp@value+2)& (0+255),w,b
  5854  005BA2  0100               	movlb	0	; () banked
  5855  005BA4  117A               	iorwf	(frexp@value+3)& (0+255),w,b
  5856  005BA6  A4D8               	btfss	status,2,c
  5857  005BA8  D009               	goto	l6615
  5858                           
  5859                           ; BSR set to: 0
  5860  005BAA  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5861  005BAE  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5862  005BB2  0E00               	movlw	0
  5863  005BB4  6EDE               	movwf	postinc2,c
  5864  005BB6  0E00               	movlw	0
  5865  005BB8  6EDD               	movwf	postdec2,c
  5866                           
  5867                           ; BSR set to: 0
  5868                           ;	Return value of _frexp is never used
  5869  005BBA  0012               	return	
  5870  005BBC                     l6615:
  5871                           
  5872                           ; BSR set to: 0
  5873  005BBC  0100               	movlb	0	; () banked
  5874  005BBE  517A               	movf	(frexp@value+3)& (0+255),w,b
  5875  005BC0  0B7F               	andlw	127
  5876  005BC2  0100               	movlb	0	; () banked
  5877  005BC4  6F7D               	movwf	??_frexp& (0+255),b
  5878  005BC6  6B7E               	clrf	(??_frexp+1)& (0+255),b
  5879  005BC8  90D8               	bcf	status,0,c
  5880  005BCA  0100               	movlb	0	; () banked
  5881  005BCC  377D               	rlcf	??_frexp& (0+255),f,b
  5882  005BCE  377E               	rlcf	(??_frexp+1)& (0+255),f,b
  5883  005BD0  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5884  005BD4  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5885  005BD8  C07D  FFDE         	movff	??_frexp,postinc2
  5886  005BDC  C07E  FFDD         	movff	??_frexp+1,postdec2
  5887  005BE0  0100               	movlb	0	; () banked
  5888  005BE2  AF79               	btfss	(frexp@value+2)& (0+255),7,b
  5889  005BE4  D004               	goto	u8370
  5890  005BE6  0100               	movlb	0	; () banked
  5891  005BE8  6B7D               	clrf	??_frexp& (0+255),b
  5892  005BEA  2B7D               	incf	??_frexp& (0+255),f,b
  5893  005BEC  D002               	goto	u8378
  5894  005BEE                     u8370:
  5895  005BEE  0100               	movlb	0	; () banked
  5896  005BF0  6B7D               	clrf	??_frexp& (0+255),b
  5897  005BF2                     u8378:
  5898  005BF2  0100               	movlb	0	; () banked
  5899  005BF4  517D               	movf	??_frexp& (0+255),w,b
  5900  005BF6  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5901  005BFA  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5902  005BFE  12DE               	iorwf	postinc2,f,c
  5903  005C00  0E00               	movlw	0
  5904  005C02  12DD               	iorwf	postdec2,f,c
  5905                           
  5906                           ; BSR set to: 0
  5907  005C04  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5908  005C08  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5909  005C0C  0E82               	movlw	130
  5910  005C0E  26DE               	addwf	postinc2,f,c
  5911  005C10  0EFF               	movlw	255
  5912  005C12  22DD               	addwfc	postdec2,f,c
  5913                           
  5914                           ; BSR set to: 0
  5915  005C14  0100               	movlb	0	; () banked
  5916  005C16  817A               	bsf	(frexp@value+3)& (0+255),0,b
  5917  005C18  837A               	bsf	(frexp@value+3)& (0+255),1,b
  5918  005C1A  857A               	bsf	(frexp@value+3)& (0+255),2,b
  5919  005C1C  877A               	bsf	(frexp@value+3)& (0+255),3,b
  5920  005C1E  897A               	bsf	(frexp@value+3)& (0+255),4,b
  5921  005C20  8B7A               	bsf	(frexp@value+3)& (0+255),5,b
  5922  005C22  9D7A               	bcf	(frexp@value+3)& (0+255),6,b
  5923                           
  5924                           ; BSR set to: 0
  5925  005C24  0100               	movlb	0	; () banked
  5926  005C26  9F79               	bcf	(frexp@value+2)& (0+255),7,b
  5927  005C28  0012               	return	
  5928  005C2A                     __end_of_frexp:
  5929                           	opt stack 0
  5930                           tblptru	equ	0xFF8
  5931                           tblptrh	equ	0xFF7
  5932                           tblptrl	equ	0xFF6
  5933                           tablat	equ	0xFF5
  5934                           postinc0	equ	0xFEE
  5935                           wreg	equ	0xFE8
  5936                           postdec1	equ	0xFE5
  5937                           fsr1l	equ	0xFE1
  5938                           indf2	equ	0xFDF
  5939                           postinc2	equ	0xFDE
  5940                           postdec2	equ	0xFDD
  5941                           fsr2h	equ	0xFDA
  5942                           fsr2l	equ	0xFD9
  5943                           status	equ	0xFD8
  5944                           
  5945 ;; *************** function ___xxtofl *****************
  5946 ;; Defined at:
  5947 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;  sign            1    wreg     unsigned char 
  5950 ;;  val             4  107[BANK0 ] long 
  5951 ;; Auto vars:     Size  Location     Type
  5952 ;;  sign            1  115[BANK0 ] unsigned char 
  5953 ;;  arg             4  117[BANK0 ] unsigned long 
  5954 ;;  exp             1  116[BANK0 ] unsigned char 
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  4  107[BANK0 ] unsigned char 
  5957 ;; Registers used:
  5958 ;;		wreg, status,2, status,0
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5964 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5965 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5966 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5967 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5968 ;;Total ram usage:       14 bytes
  5969 ;; Hardware stack levels used:    1
  5970 ;; Hardware stack levels required when called:    4
  5971 ;; This function calls:
  5972 ;;		Nothing
  5973 ;; This function is called by:
  5974 ;;		_park_search
  5975 ;;		_park_routine
  5976 ;;		_parallelo
  5977 ;;		_floor
  5978 ;; This function uses a non-reentrant model
  5979 ;;
  5980                           
  5981                           	psect	text13
  5982  004E6C                     __ptext13:
  5983                           	opt stack 0
  5984  004E6C                     ___xxtofl:
  5985                           	opt stack 24
  5986                           
  5987                           ; BSR set to: 0
  5988                           ;incstack = 0
  5989                           ;___xxtofl@sign stored from wreg
  5990  004E6C  0100               	movlb	0	; () banked
  5991  004E6E  6FD3               	movwf	___xxtofl@sign& (0+255),b
  5992  004E70  0100               	movlb	0	; () banked
  5993  004E72  51D3               	movf	___xxtofl@sign& (0+255),w,b
  5994  004E74  0100               	movlb	0	; () banked
  5995  004E76  B4D8               	btfsc	status,2,c
  5996  004E78  D01E               	goto	l1458
  5997                           
  5998                           ; BSR set to: 0
  5999  004E7A  0100               	movlb	0	; () banked
  6000  004E7C  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6001  004E7E  D01B               	goto	l1458
  6002                           
  6003                           ; BSR set to: 0
  6004  004E80  C0CB  F0CF         	movff	___xxtofl@val,??___xxtofl
  6005  004E84  C0CC  F0D0         	movff	___xxtofl@val+1,??___xxtofl+1
  6006  004E88  C0CD  F0D1         	movff	___xxtofl@val+2,??___xxtofl+2
  6007  004E8C  C0CE  F0D2         	movff	___xxtofl@val+3,??___xxtofl+3
  6008  004E90  0100               	movlb	0	; () banked
  6009  004E92  1FCF               	comf	??___xxtofl& (0+255),f,b
  6010  004E94  1FD0               	comf	(??___xxtofl+1)& (0+255),f,b
  6011  004E96  1FD1               	comf	(??___xxtofl+2)& (0+255),f,b
  6012  004E98  1FD2               	comf	(??___xxtofl+3)& (0+255),f,b
  6013  004E9A  2BCF               	incf	??___xxtofl& (0+255),f,b
  6014  004E9C  0E00               	movlw	0
  6015  004E9E  23D0               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6016  004EA0  23D1               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6017  004EA2  23D2               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6018  004EA4  C0CF  F0D5         	movff	??___xxtofl,___xxtofl@arg
  6019  004EA8  C0D0  F0D6         	movff	??___xxtofl+1,___xxtofl@arg+1
  6020  004EAC  C0D1  F0D7         	movff	??___xxtofl+2,___xxtofl@arg+2
  6021  004EB0  C0D2  F0D8         	movff	??___xxtofl+3,___xxtofl@arg+3
  6022  004EB4  D008               	goto	l6573
  6023  004EB6                     l1458:
  6024                           
  6025                           ; BSR set to: 0
  6026  004EB6  C0CB  F0D5         	movff	___xxtofl@val,___xxtofl@arg
  6027  004EBA  C0CC  F0D6         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6028  004EBE  C0CD  F0D7         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6029  004EC2  C0CE  F0D8         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6030  004EC6                     l6573:
  6031                           
  6032                           ; BSR set to: 0
  6033  004EC6  0100               	movlb	0	; () banked
  6034  004EC8  51CB               	movf	___xxtofl@val& (0+255),w,b
  6035  004ECA  0100               	movlb	0	; () banked
  6036  004ECC  11CC               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6037  004ECE  0100               	movlb	0	; () banked
  6038  004ED0  11CD               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6039  004ED2  0100               	movlb	0	; () banked
  6040  004ED4  11CE               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6041  004ED6  A4D8               	btfss	status,2,c
  6042  004ED8  D00A               	goto	l6579
  6043                           
  6044                           ; BSR set to: 0
  6045  004EDA  0E00               	movlw	0
  6046  004EDC  0100               	movlb	0	; () banked
  6047  004EDE  6FCB               	movwf	?___xxtofl& (0+255),b
  6048  004EE0  0E00               	movlw	0
  6049  004EE2  6FCC               	movwf	(?___xxtofl+1)& (0+255),b
  6050  004EE4  0E00               	movlw	0
  6051  004EE6  6FCD               	movwf	(?___xxtofl+2)& (0+255),b
  6052  004EE8  0E00               	movlw	0
  6053  004EEA  6FCE               	movwf	(?___xxtofl+3)& (0+255),b
  6054                           
  6055                           ; BSR set to: 0
  6056  004EEC  0012               	return	
  6057  004EEE                     l6579:
  6058                           
  6059                           ; BSR set to: 0
  6060  004EEE  0E96               	movlw	150
  6061  004EF0  0100               	movlb	0	; () banked
  6062  004EF2  6FD4               	movwf	___xxtofl@exp& (0+255),b
  6063  004EF4  D008               	goto	l6583
  6064  004EF6                     l6581:
  6065                           
  6066                           ; BSR set to: 0
  6067  004EF6  0100               	movlb	0	; () banked
  6068  004EF8  2BD4               	incf	___xxtofl@exp& (0+255),f,b
  6069  004EFA  0100               	movlb	0	; () banked
  6070  004EFC  90D8               	bcf	status,0,c
  6071  004EFE  33D8               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6072  004F00  33D7               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6073  004F02  33D6               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6074  004F04  33D5               	rrcf	___xxtofl@arg& (0+255),f,b
  6075  004F06                     l6583:
  6076                           
  6077                           ; BSR set to: 0
  6078  004F06  0E00               	movlw	0
  6079  004F08  0100               	movlb	0	; () banked
  6080  004F0A  15D5               	andwf	___xxtofl@arg& (0+255),w,b
  6081  004F0C  0100               	movlb	0	; () banked
  6082  004F0E  6FCF               	movwf	??___xxtofl& (0+255),b
  6083  004F10  0E00               	movlw	0
  6084  004F12  0100               	movlb	0	; () banked
  6085  004F14  15D6               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6086  004F16  0100               	movlb	0	; () banked
  6087  004F18  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6088  004F1A  0E00               	movlw	0
  6089  004F1C  0100               	movlb	0	; () banked
  6090  004F1E  15D7               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6091  004F20  0100               	movlb	0	; () banked
  6092  004F22  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6093  004F24  0EFE               	movlw	254
  6094  004F26  0100               	movlb	0	; () banked
  6095  004F28  15D8               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6096  004F2A  0100               	movlb	0	; () banked
  6097  004F2C  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6098  004F2E  0100               	movlb	0	; () banked
  6099  004F30  51CF               	movf	??___xxtofl& (0+255),w,b
  6100  004F32  0100               	movlb	0	; () banked
  6101  004F34  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6102  004F36  0100               	movlb	0	; () banked
  6103  004F38  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6104  004F3A  0100               	movlb	0	; () banked
  6105  004F3C  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6106  004F3E  B4D8               	btfsc	status,2,c
  6107  004F40  D010               	goto	l1465
  6108  004F42  D7D9               	goto	l6581
  6109  004F44                     l6585:
  6110                           
  6111                           ; BSR set to: 0
  6112  004F44  0100               	movlb	0	; () banked
  6113  004F46  2BD4               	incf	___xxtofl@exp& (0+255),f,b
  6114                           
  6115                           ; BSR set to: 0
  6116  004F48  0E01               	movlw	1
  6117  004F4A  0100               	movlb	0	; () banked
  6118  004F4C  27D5               	addwf	___xxtofl@arg& (0+255),f,b
  6119  004F4E  0E00               	movlw	0
  6120  004F50  23D6               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6121  004F52  23D7               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6122  004F54  23D8               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6123                           
  6124                           ; BSR set to: 0
  6125  004F56  0100               	movlb	0	; () banked
  6126  004F58  90D8               	bcf	status,0,c
  6127  004F5A  33D8               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6128  004F5C  33D7               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6129  004F5E  33D6               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6130  004F60  33D5               	rrcf	___xxtofl@arg& (0+255),f,b
  6131  004F62                     l1465:
  6132                           
  6133                           ; BSR set to: 0
  6134  004F62  0E00               	movlw	0
  6135  004F64  0100               	movlb	0	; () banked
  6136  004F66  15D5               	andwf	___xxtofl@arg& (0+255),w,b
  6137  004F68  0100               	movlb	0	; () banked
  6138  004F6A  6FCF               	movwf	??___xxtofl& (0+255),b
  6139  004F6C  0E00               	movlw	0
  6140  004F6E  0100               	movlb	0	; () banked
  6141  004F70  15D6               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6142  004F72  0100               	movlb	0	; () banked
  6143  004F74  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6144  004F76  0E00               	movlw	0
  6145  004F78  0100               	movlb	0	; () banked
  6146  004F7A  15D7               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6147  004F7C  0100               	movlb	0	; () banked
  6148  004F7E  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6149  004F80  0EFF               	movlw	255
  6150  004F82  0100               	movlb	0	; () banked
  6151  004F84  15D8               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6152  004F86  0100               	movlb	0	; () banked
  6153  004F88  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6154  004F8A  0100               	movlb	0	; () banked
  6155  004F8C  51CF               	movf	??___xxtofl& (0+255),w,b
  6156  004F8E  0100               	movlb	0	; () banked
  6157  004F90  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6158  004F92  0100               	movlb	0	; () banked
  6159  004F94  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6160  004F96  0100               	movlb	0	; () banked
  6161  004F98  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6162  004F9A  B4D8               	btfsc	status,2,c
  6163  004F9C  D009               	goto	l6593
  6164  004F9E  D7D2               	goto	l6585
  6165  004FA0                     l6591:
  6166                           
  6167                           ; BSR set to: 0
  6168  004FA0  0100               	movlb	0	; () banked
  6169  004FA2  07D4               	decf	___xxtofl@exp& (0+255),f,b
  6170  004FA4  0100               	movlb	0	; () banked
  6171  004FA6  90D8               	bcf	status,0,c
  6172  004FA8  37D5               	rlcf	___xxtofl@arg& (0+255),f,b
  6173  004FAA  37D6               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6174  004FAC  37D7               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6175  004FAE  37D8               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6176  004FB0                     l6593:
  6177                           
  6178                           ; BSR set to: 0
  6179  004FB0  0100               	movlb	0	; () banked
  6180  004FB2  BFD7               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6181  004FB4  D004               	goto	l1472
  6182                           
  6183                           ; BSR set to: 0
  6184  004FB6  0E02               	movlw	2
  6185  004FB8  0100               	movlb	0	; () banked
  6186  004FBA  61D4               	cpfslt	___xxtofl@exp& (0+255),b
  6187  004FBC  D7F1               	goto	l6591
  6188  004FBE                     l1472:
  6189                           
  6190                           ; BSR set to: 0
  6191  004FBE  0100               	movlb	0	; () banked
  6192  004FC0  B1D4               	btfsc	___xxtofl@exp& (0+255),0,b
  6193  004FC2  D009               	goto	l1473
  6194                           
  6195                           ; BSR set to: 0
  6196  004FC4  0EFF               	movlw	255
  6197  004FC6  0100               	movlb	0	; () banked
  6198  004FC8  17D5               	andwf	___xxtofl@arg& (0+255),f,b
  6199  004FCA  0EFF               	movlw	255
  6200  004FCC  17D6               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  6201  004FCE  0E7F               	movlw	127
  6202  004FD0  17D7               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  6203  004FD2  0EFF               	movlw	255
  6204  004FD4  17D8               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  6205  004FD6                     l1473:
  6206                           
  6207                           ; BSR set to: 0
  6208  004FD6  0100               	movlb	0	; () banked
  6209  004FD8  90D8               	bcf	status,0,c
  6210  004FDA  33D4               	rrcf	___xxtofl@exp& (0+255),f,b
  6211  004FDC  C0D4  F0CF         	movff	___xxtofl@exp,??___xxtofl
  6212  004FE0  0100               	movlb	0	; () banked
  6213  004FE2  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6214  004FE4  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6215  004FE6  6BD2               	clrf	(??___xxtofl+3)& (0+255),b
  6216  004FE8  C0CF  F0D2         	movff	??___xxtofl,??___xxtofl+3
  6217  004FEC  0100               	movlb	0	; () banked
  6218  004FEE  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6219  004FF0  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6220  004FF2  6BCF               	clrf	??___xxtofl& (0+255),b
  6221  004FF4  0100               	movlb	0	; () banked
  6222  004FF6  51CF               	movf	??___xxtofl& (0+255),w,b
  6223  004FF8  0100               	movlb	0	; () banked
  6224  004FFA  13D5               	iorwf	___xxtofl@arg& (0+255),f,b
  6225  004FFC  0100               	movlb	0	; () banked
  6226  004FFE  51D0               	movf	(??___xxtofl+1)& (0+255),w,b
  6227  005000  0100               	movlb	0	; () banked
  6228  005002  13D6               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6229  005004  0100               	movlb	0	; () banked
  6230  005006  51D1               	movf	(??___xxtofl+2)& (0+255),w,b
  6231  005008  0100               	movlb	0	; () banked
  6232  00500A  13D7               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6233  00500C  0100               	movlb	0	; () banked
  6234  00500E  51D2               	movf	(??___xxtofl+3)& (0+255),w,b
  6235  005010  0100               	movlb	0	; () banked
  6236  005012  13D8               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6237                           
  6238                           ; BSR set to: 0
  6239  005014  0100               	movlb	0	; () banked
  6240  005016  51D3               	movf	___xxtofl@sign& (0+255),w,b
  6241  005018  0100               	movlb	0	; () banked
  6242  00501A  B4D8               	btfsc	status,2,c
  6243  00501C  D005               	goto	l6605
  6244                           
  6245                           ; BSR set to: 0
  6246  00501E  0100               	movlb	0	; () banked
  6247  005020  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6248  005022  D002               	goto	l6605
  6249                           
  6250                           ; BSR set to: 0
  6251  005024  0100               	movlb	0	; () banked
  6252  005026  8FD8               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6253  005028                     l6605:
  6254                           
  6255                           ; BSR set to: 0
  6256  005028  C0D5  F0CB         	movff	___xxtofl@arg,?___xxtofl
  6257  00502C  C0D6  F0CC         	movff	___xxtofl@arg+1,?___xxtofl+1
  6258  005030  C0D7  F0CD         	movff	___xxtofl@arg+2,?___xxtofl+2
  6259  005034  C0D8  F0CE         	movff	___xxtofl@arg+3,?___xxtofl+3
  6260  005038  0012               	return	
  6261  00503A                     __end_of___xxtofl:
  6262                           	opt stack 0
  6263                           tblptru	equ	0xFF8
  6264                           tblptrh	equ	0xFF7
  6265                           tblptrl	equ	0xFF6
  6266                           tablat	equ	0xFF5
  6267                           postinc0	equ	0xFEE
  6268                           wreg	equ	0xFE8
  6269                           postdec1	equ	0xFE5
  6270                           fsr1l	equ	0xFE1
  6271                           indf2	equ	0xFDF
  6272                           postinc2	equ	0xFDE
  6273                           postdec2	equ	0xFDD
  6274                           fsr2h	equ	0xFDA
  6275                           fsr2l	equ	0xFD9
  6276                           status	equ	0xFD8
  6277                           
  6278 ;; *************** function ___fltol *****************
  6279 ;; Defined at:
  6280 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  6281 ;; Parameters:    Size  Location     Type
  6282 ;;  f1              4   97[BANK0 ] unsigned char 
  6283 ;; Auto vars:     Size  Location     Type
  6284 ;;  exp1            1  106[BANK0 ] unsigned char 
  6285 ;;  sign1           1  105[BANK0 ] unsigned char 
  6286 ;; Return value:  Size  Location     Type
  6287 ;;                  4   97[BANK0 ] long 
  6288 ;; Registers used:
  6289 ;;		wreg, status,2, status,0
  6290 ;; Tracked objects:
  6291 ;;		On entry : 0/0
  6292 ;;		On exit  : 0/0
  6293 ;;		Unchanged: 0/0
  6294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6295 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6296 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6297 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6298 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6299 ;;Total ram usage:       10 bytes
  6300 ;; Hardware stack levels used:    1
  6301 ;; Hardware stack levels required when called:    4
  6302 ;; This function calls:
  6303 ;;		Nothing
  6304 ;; This function is called by:
  6305 ;;		_park_routine
  6306 ;;		_parallelo
  6307 ;;		_floor
  6308 ;; This function uses a non-reentrant model
  6309 ;;
  6310                           
  6311                           	psect	text14
  6312  0058C4                     __ptext14:
  6313                           	opt stack 0
  6314  0058C4                     ___fltol:
  6315                           	opt stack 24
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;incstack = 0
  6319  0058C4  0100               	movlb	0	; () banked
  6320  0058C6  35C3               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6321  0058C8  35C4               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6322  0058CA  0100               	movlb	0	; () banked
  6323  0058CC  6FCA               	movwf	___fltol@exp1& (0+255),b
  6324  0058CE  0100               	movlb	0	; () banked
  6325  0058D0  51CA               	movf	___fltol@exp1& (0+255),w,b
  6326  0058D2  A4D8               	btfss	status,2,c
  6327  0058D4  D00A               	goto	l6529
  6328                           
  6329                           ; BSR set to: 0
  6330  0058D6  0E00               	movlw	0
  6331  0058D8  0100               	movlb	0	; () banked
  6332  0058DA  6FC1               	movwf	?___fltol& (0+255),b
  6333  0058DC  0E00               	movlw	0
  6334  0058DE  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6335  0058E0  0E00               	movlw	0
  6336  0058E2  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6337  0058E4  0E00               	movlw	0
  6338  0058E6  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6339                           
  6340                           ; BSR set to: 0
  6341  0058E8  0012               	return	
  6342  0058EA                     l6529:
  6343                           
  6344                           ; BSR set to: 0
  6345  0058EA  C0C1  F0C5         	movff	___fltol@f1,??___fltol
  6346  0058EE  C0C2  F0C6         	movff	___fltol@f1+1,??___fltol+1
  6347  0058F2  C0C3  F0C7         	movff	___fltol@f1+2,??___fltol+2
  6348  0058F6  C0C4  F0C8         	movff	___fltol@f1+3,??___fltol+3
  6349  0058FA  0E20               	movlw	32
  6350  0058FC  D006               	goto	u8200
  6351  0058FE                     u8205:
  6352  0058FE  0100               	movlb	0	; () banked
  6353  005900  90D8               	bcf	status,0,c
  6354  005902  33C8               	rrcf	(??___fltol+3)& (0+255),f,b
  6355  005904  33C7               	rrcf	(??___fltol+2)& (0+255),f,b
  6356  005906  33C6               	rrcf	(??___fltol+1)& (0+255),f,b
  6357  005908  33C5               	rrcf	??___fltol& (0+255),f,b
  6358  00590A                     u8200:
  6359  00590A  2EE8               	decfsz	wreg,f,c
  6360  00590C  D7F8               	goto	u8205
  6361  00590E  0100               	movlb	0	; () banked
  6362  005910  51C5               	movf	??___fltol& (0+255),w,b
  6363  005912  0100               	movlb	0	; () banked
  6364  005914  6FC9               	movwf	___fltol@sign1& (0+255),b
  6365                           
  6366                           ; BSR set to: 0
  6367  005916  0100               	movlb	0	; () banked
  6368  005918  8FC3               	bsf	(___fltol@f1+2)& (0+255),7,b
  6369                           
  6370                           ; BSR set to: 0
  6371  00591A  0EFF               	movlw	255
  6372  00591C  0100               	movlb	0	; () banked
  6373  00591E  17C1               	andwf	___fltol@f1& (0+255),f,b
  6374  005920  0EFF               	movlw	255
  6375  005922  17C2               	andwf	(___fltol@f1+1)& (0+255),f,b
  6376  005924  0EFF               	movlw	255
  6377  005926  17C3               	andwf	(___fltol@f1+2)& (0+255),f,b
  6378  005928  0E00               	movlw	0
  6379  00592A  17C4               	andwf	(___fltol@f1+3)& (0+255),f,b
  6380                           
  6381                           ; BSR set to: 0
  6382  00592C  0E96               	movlw	150
  6383  00592E  0100               	movlb	0	; () banked
  6384  005930  5FCA               	subwf	___fltol@exp1& (0+255),f,b
  6385                           
  6386                           ; BSR set to: 0
  6387  005932  0100               	movlb	0	; () banked
  6388  005934  AFCA               	btfss	___fltol@exp1& (0+255),7,b
  6389  005936  D01A               	goto	l6549
  6390                           
  6391                           ; BSR set to: 0
  6392  005938  0100               	movlb	0	; () banked
  6393  00593A  51CA               	movf	___fltol@exp1& (0+255),w,b
  6394  00593C  0A80               	xorlw	128
  6395  00593E  0F97               	addlw	151
  6396  005940  B0D8               	btfsc	status,0,c
  6397  005942  D00A               	goto	l6545
  6398                           
  6399                           ; BSR set to: 0
  6400  005944  0E00               	movlw	0
  6401  005946  0100               	movlb	0	; () banked
  6402  005948  6FC1               	movwf	?___fltol& (0+255),b
  6403  00594A  0E00               	movlw	0
  6404  00594C  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6405  00594E  0E00               	movlw	0
  6406  005950  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6407  005952  0E00               	movlw	0
  6408  005954  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6409                           
  6410                           ; BSR set to: 0
  6411  005956  0012               	return	
  6412  005958                     l6545:
  6413                           
  6414                           ; BSR set to: 0
  6415  005958  0100               	movlb	0	; () banked
  6416  00595A  90D8               	bcf	status,0,c
  6417  00595C  33C4               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6418  00595E  33C3               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6419  005960  33C2               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6420  005962  33C1               	rrcf	___fltol@f1& (0+255),f,b
  6421                           
  6422                           ; BSR set to: 0
  6423  005964  0100               	movlb	0	; () banked
  6424  005966  3FCA               	incfsz	___fltol@exp1& (0+255),f,b
  6425  005968  D7F7               	goto	l6545
  6426                           
  6427                           ; BSR set to: 0
  6428  00596A  D01B               	goto	l6559
  6429  00596C                     l6549:
  6430                           
  6431                           ; BSR set to: 0
  6432  00596C  0E1F               	movlw	31
  6433  00596E  0100               	movlb	0	; () banked
  6434  005970  65CA               	cpfsgt	___fltol@exp1& (0+255),b
  6435  005972  D012               	goto	l6557
  6436                           
  6437                           ; BSR set to: 0
  6438  005974  0E00               	movlw	0
  6439  005976  0100               	movlb	0	; () banked
  6440  005978  6FC1               	movwf	?___fltol& (0+255),b
  6441  00597A  0E00               	movlw	0
  6442  00597C  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6443  00597E  0E00               	movlw	0
  6444  005980  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6445  005982  0E00               	movlw	0
  6446  005984  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6447                           
  6448                           ; BSR set to: 0
  6449  005986  0012               	return	
  6450  005988                     l6555:
  6451                           
  6452                           ; BSR set to: 0
  6453  005988  0100               	movlb	0	; () banked
  6454  00598A  90D8               	bcf	status,0,c
  6455  00598C  37C1               	rlcf	___fltol@f1& (0+255),f,b
  6456  00598E  37C2               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6457  005990  37C3               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6458  005992  37C4               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6459  005994  0100               	movlb	0	; () banked
  6460  005996  07CA               	decf	___fltol@exp1& (0+255),f,b
  6461  005998                     l6557:
  6462                           
  6463                           ; BSR set to: 0
  6464  005998  0100               	movlb	0	; () banked
  6465  00599A  51CA               	movf	___fltol@exp1& (0+255),w,b
  6466  00599C  0100               	movlb	0	; () banked
  6467  00599E  A4D8               	btfss	status,2,c
  6468  0059A0  D7F3               	goto	l6555
  6469  0059A2                     l6559:
  6470                           
  6471                           ; BSR set to: 0
  6472  0059A2  0100               	movlb	0	; () banked
  6473  0059A4  51C9               	movf	___fltol@sign1& (0+255),w,b
  6474  0059A6  0100               	movlb	0	; () banked
  6475  0059A8  B4D8               	btfsc	status,2,c
  6476  0059AA  D009               	goto	l6563
  6477                           
  6478                           ; BSR set to: 0
  6479  0059AC  0100               	movlb	0	; () banked
  6480  0059AE  1FC4               	comf	(___fltol@f1+3)& (0+255),f,b
  6481  0059B0  1FC3               	comf	(___fltol@f1+2)& (0+255),f,b
  6482  0059B2  1FC2               	comf	(___fltol@f1+1)& (0+255),f,b
  6483  0059B4  6DC1               	negf	___fltol@f1& (0+255),b
  6484  0059B6  0E00               	movlw	0
  6485  0059B8  23C2               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6486  0059BA  23C3               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6487  0059BC  23C4               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6488  0059BE                     l6563:
  6489                           
  6490                           ; BSR set to: 0
  6491  0059BE  C0C1  F0C1         	movff	___fltol@f1,?___fltol
  6492  0059C2  C0C2  F0C2         	movff	___fltol@f1+1,?___fltol+1
  6493  0059C6  C0C3  F0C3         	movff	___fltol@f1+2,?___fltol+2
  6494  0059CA  C0C4  F0C4         	movff	___fltol@f1+3,?___fltol+3
  6495  0059CE  0012               	return	
  6496  0059D0                     __end_of___fltol:
  6497                           	opt stack 0
  6498                           tblptru	equ	0xFF8
  6499                           tblptrh	equ	0xFF7
  6500                           tblptrl	equ	0xFF6
  6501                           tablat	equ	0xFF5
  6502                           postinc0	equ	0xFEE
  6503                           wreg	equ	0xFE8
  6504                           postdec1	equ	0xFE5
  6505                           fsr1l	equ	0xFE1
  6506                           indf2	equ	0xFDF
  6507                           postinc2	equ	0xFDE
  6508                           postdec2	equ	0xFDD
  6509                           fsr2h	equ	0xFDA
  6510                           fsr2l	equ	0xFD9
  6511                           status	equ	0xFD8
  6512                           
  6513 ;; *************** function ___flsub *****************
  6514 ;; Defined at:
  6515 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6516 ;; Parameters:    Size  Location     Type
  6517 ;;  b               4    0[BANK1 ] long 
  6518 ;;  a               4    4[BANK1 ] long 
  6519 ;; Auto vars:     Size  Location     Type
  6520 ;;		None
  6521 ;; Return value:  Size  Location     Type
  6522 ;;                  4    0[BANK1 ] long 
  6523 ;; Registers used:
  6524 ;;		wreg, status,2, status,0, cstack
  6525 ;; Tracked objects:
  6526 ;;		On entry : 0/0
  6527 ;;		On exit  : 0/0
  6528 ;;		Unchanged: 0/0
  6529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6530 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6533 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6534 ;;Total ram usage:        8 bytes
  6535 ;; Hardware stack levels used:    1
  6536 ;; Hardware stack levels required when called:    5
  6537 ;; This function calls:
  6538 ;;		___fladd
  6539 ;; This function is called by:
  6540 ;;		_sin
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           
  6544                           	psect	text15
  6545  005E14                     __ptext15:
  6546                           	opt stack 0
  6547  005E14                     ___flsub:
  6548                           	opt stack 21
  6549                           
  6550                           ; BSR set to: 0
  6551                           ;incstack = 0
  6552  005E14  0E00               	movlw	0
  6553  005E16  0101               	movlb	1	; () banked
  6554  005E18  1B91               	xorwf	___flsub@a& (0+255),f,b
  6555  005E1A  0E00               	movlw	0
  6556  005E1C  1B92               	xorwf	(___flsub@a+1)& (0+255),f,b
  6557  005E1E  0E00               	movlw	0
  6558  005E20  1B93               	xorwf	(___flsub@a+2)& (0+255),f,b
  6559  005E22  0E80               	movlw	128
  6560  005E24  1B94               	xorwf	(___flsub@a+3)& (0+255),f,b
  6561                           
  6562                           ; BSR set to: 1
  6563  005E26  C18D  F0A9         	movff	___flsub@b,___fladd@b
  6564  005E2A  C18E  F0AA         	movff	___flsub@b+1,___fladd@b+1
  6565  005E2E  C18F  F0AB         	movff	___flsub@b+2,___fladd@b+2
  6566  005E32  C190  F0AC         	movff	___flsub@b+3,___fladd@b+3
  6567  005E36  C191  F0AD         	movff	___flsub@a,___fladd@a
  6568  005E3A  C192  F0AE         	movff	___flsub@a+1,___fladd@a+1
  6569  005E3E  C193  F0AF         	movff	___flsub@a+2,___fladd@a+2
  6570  005E42  C194  F0B0         	movff	___flsub@a+3,___fladd@a+3
  6571  005E46  EC3D  F015         	call	___fladd	;wreg free
  6572  005E4A  C0A9  F18D         	movff	?___fladd,?___flsub
  6573  005E4E  C0AA  F18E         	movff	?___fladd+1,?___flsub+1
  6574  005E52  C0AB  F18F         	movff	?___fladd+2,?___flsub+2
  6575  005E56  C0AC  F190         	movff	?___fladd+3,?___flsub+3
  6576  005E5A  0012               	return	
  6577  005E5C                     __end_of___flsub:
  6578                           	opt stack 0
  6579                           tblptru	equ	0xFF8
  6580                           tblptrh	equ	0xFF7
  6581                           tblptrl	equ	0xFF6
  6582                           tablat	equ	0xFF5
  6583                           postinc0	equ	0xFEE
  6584                           wreg	equ	0xFE8
  6585                           postdec1	equ	0xFE5
  6586                           fsr1l	equ	0xFE1
  6587                           indf2	equ	0xFDF
  6588                           postinc2	equ	0xFDE
  6589                           postdec2	equ	0xFDD
  6590                           fsr2h	equ	0xFDA
  6591                           fsr2l	equ	0xFD9
  6592                           status	equ	0xFD8
  6593                           
  6594 ;; *************** function _asin *****************
  6595 ;; Defined at:
  6596 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\asin.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;  x               4  126[BANK0 ] long 
  6599 ;; Auto vars:     Size  Location     Type
  6600 ;;  y               4   29[BANK1 ] long 
  6601 ;;  sgn             4   17[BANK1 ] long 
  6602 ;; Return value:  Size  Location     Type
  6603 ;;                  4  126[BANK0 ] long 
  6604 ;; Registers used:
  6605 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 0/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6611 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6612 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6614 ;;      Totals:         0       4      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6615 ;;Total ram usage:       24 bytes
  6616 ;; Hardware stack levels used:    1
  6617 ;; Hardware stack levels required when called:    7
  6618 ;; This function calls:
  6619 ;;		___fladd
  6620 ;;		___fldiv
  6621 ;;		___flge
  6622 ;;		___flmul
  6623 ;;		___flneg
  6624 ;;		_atan
  6625 ;;		_fabs
  6626 ;;		_sqrt
  6627 ;; This function is called by:
  6628 ;;		_parallelo
  6629 ;;		_matematica
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633                           	psect	text16
  6634  00467C                     __ptext16:
  6635                           	opt stack 0
  6636  00467C                     _asin:
  6637                           	opt stack 21
  6638                           
  6639                           ;incstack = 0
  6640  00467C  0E00               	movlw	0
  6641  00467E  0100               	movlb	0	; () banked
  6642  004680  6FC5               	movwf	___flge@ff1& (0+255),b
  6643  004682  0E00               	movlw	0
  6644  004684  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  6645  004686  0E80               	movlw	128
  6646  004688  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  6647  00468A  0E3F               	movlw	63
  6648  00468C  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  6649  00468E  C0DE  F0C1         	movff	asin@x,fabs@d
  6650  004692  C0DF  F0C2         	movff	asin@x+1,fabs@d+1
  6651  004696  C0E0  F0C3         	movff	asin@x+2,fabs@d+2
  6652  00469A  C0E1  F0C4         	movff	asin@x+3,fabs@d+3
  6653  00469E  EC2E  F02F         	call	_fabs	;wreg free
  6654  0046A2  C0C1  F0C9         	movff	?_fabs,___flge@ff2
  6655  0046A6  C0C2  F0CA         	movff	?_fabs+1,___flge@ff2+1
  6656  0046AA  C0C3  F0CB         	movff	?_fabs+2,___flge@ff2+2
  6657  0046AE  C0C4  F0CC         	movff	?_fabs+3,___flge@ff2+3
  6658  0046B2  ECE1  F029         	call	___flge	;wreg free
  6659  0046B6  0100               	movlb	0	; () banked
  6660  0046B8  B0D8               	btfsc	status,0,c
  6661  0046BA  D00F               	goto	l7265
  6662                           
  6663                           ; BSR set to: 0
  6664  0046BC  0E00               	movlw	0
  6665  0046BE  0101               	movlb	1	; () banked
  6666  0046C0  6F49               	movwf	(_errno+1)& (0+255),b
  6667  0046C2  0E21               	movlw	33
  6668  0046C4  6F48               	movwf	_errno& (0+255),b
  6669  0046C6  0E00               	movlw	0
  6670  0046C8  0100               	movlb	0	; () banked
  6671  0046CA  6FDE               	movwf	?_asin& (0+255),b
  6672  0046CC  0E00               	movlw	0
  6673  0046CE  6FDF               	movwf	(?_asin+1)& (0+255),b
  6674  0046D0  0E00               	movlw	0
  6675  0046D2  6FE0               	movwf	(?_asin+2)& (0+255),b
  6676  0046D4  0E00               	movlw	0
  6677  0046D6  6FE1               	movwf	(?_asin+3)& (0+255),b
  6678                           
  6679                           ; BSR set to: 0
  6680  0046D8  0012               	return	
  6681  0046DA                     l7265:
  6682                           
  6683                           ; BSR set to: 0
  6684  0046DA  0E00               	movlw	0
  6685  0046DC  0101               	movlb	1	; () banked
  6686  0046DE  6F9E               	movwf	asin@sgn& (0+255),b
  6687  0046E0  0E00               	movlw	0
  6688  0046E2  6F9F               	movwf	(asin@sgn+1)& (0+255),b
  6689  0046E4  0E80               	movlw	128
  6690  0046E6  6FA0               	movwf	(asin@sgn+2)& (0+255),b
  6691  0046E8  0E3F               	movlw	63
  6692  0046EA  6FA1               	movwf	(asin@sgn+3)& (0+255),b
  6693                           
  6694                           ; BSR set to: 1
  6695  0046EC  C0DE  F094         	movff	asin@x,___flmul@a
  6696  0046F0  C0DF  F095         	movff	asin@x+1,___flmul@a+1
  6697  0046F4  C0E0  F096         	movff	asin@x+2,___flmul@a+2
  6698  0046F8  C0E1  F097         	movff	asin@x+3,___flmul@a+3
  6699  0046FC  C0DE  F090         	movff	asin@x,___flmul@b
  6700  004700  C0DF  F091         	movff	asin@x+1,___flmul@b+1
  6701  004704  C0E0  F092         	movff	asin@x+2,___flmul@b+2
  6702  004708  C0E1  F093         	movff	asin@x+3,___flmul@b+3
  6703  00470C  EC91  F017         	call	___flmul	;wreg free
  6704  004710  C090  F0BD         	movff	?___flmul,___flneg@f1
  6705  004714  C091  F0BE         	movff	?___flmul+1,___flneg@f1+1
  6706  004718  C092  F0BF         	movff	?___flmul+2,___flneg@f1+2
  6707  00471C  C093  F0C0         	movff	?___flmul+3,___flneg@f1+3
  6708  004720  EC4D  F02F         	call	___flneg	;wreg free
  6709  004724  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6710  004728  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6711  00472C  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6712  004730  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6713  004734  0E00               	movlw	0
  6714  004736  0100               	movlb	0	; () banked
  6715  004738  6FAD               	movwf	___fladd@a& (0+255),b
  6716  00473A  0E00               	movlw	0
  6717  00473C  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6718  00473E  0E80               	movlw	128
  6719  004740  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6720  004742  0E3F               	movlw	63
  6721  004744  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6722  004746  EC3D  F015         	call	___fladd	;wreg free
  6723  00474A  C0A9  F0C1         	movff	?___fladd,sqrt@a
  6724  00474E  C0AA  F0C2         	movff	?___fladd+1,sqrt@a+1
  6725  004752  C0AB  F0C3         	movff	?___fladd+2,sqrt@a+2
  6726  004756  C0AC  F0C4         	movff	?___fladd+3,sqrt@a+3
  6727  00475A  EC1E  F01C         	call	_sqrt	;wreg free
  6728  00475E  C0C1  F1AA         	movff	?_sqrt,asin@y
  6729  004762  C0C2  F1AB         	movff	?_sqrt+1,asin@y+1
  6730  004766  C0C3  F1AC         	movff	?_sqrt+2,asin@y+2
  6731  00476A  C0C4  F1AD         	movff	?_sqrt+3,asin@y+3
  6732  00476E  C0DE  F0C1         	movff	asin@x,fabs@d
  6733  004772  C0DF  F0C2         	movff	asin@x+1,fabs@d+1
  6734  004776  C0E0  F0C3         	movff	asin@x+2,fabs@d+2
  6735  00477A  C0E1  F0C4         	movff	asin@x+3,fabs@d+3
  6736  00477E  EC2E  F02F         	call	_fabs	;wreg free
  6737  004782  C0C1  F0C5         	movff	?_fabs,___flge@ff1
  6738  004786  C0C2  F0C6         	movff	?_fabs+1,___flge@ff1+1
  6739  00478A  C0C3  F0C7         	movff	?_fabs+2,___flge@ff1+2
  6740  00478E  C0C4  F0C8         	movff	?_fabs+3,___flge@ff1+3
  6741  004792  0E8F               	movlw	143
  6742  004794  0100               	movlb	0	; () banked
  6743  004796  6FC9               	movwf	___flge@ff2& (0+255),b
  6744  004798  0EC2               	movlw	194
  6745  00479A  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  6746  00479C  0E35               	movlw	53
  6747  00479E  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  6748  0047A0  0E3F               	movlw	63
  6749  0047A2  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  6750  0047A4  ECE1  F029         	call	___flge	;wreg free
  6751  0047A8  0100               	movlb	0	; () banked
  6752  0047AA  B0D8               	btfsc	status,0,c
  6753  0047AC  D02D               	goto	l7277
  6754                           
  6755                           ; BSR set to: 0
  6756  0047AE  C0DE  F077         	movff	asin@x,___fldiv@b
  6757  0047B2  C0DF  F078         	movff	asin@x+1,___fldiv@b+1
  6758  0047B6  C0E0  F079         	movff	asin@x+2,___fldiv@b+2
  6759  0047BA  C0E1  F07A         	movff	asin@x+3,___fldiv@b+3
  6760  0047BE  C1AA  F07B         	movff	asin@y,___fldiv@a
  6761  0047C2  C1AB  F07C         	movff	asin@y+1,___fldiv@a+1
  6762  0047C6  C1AC  F07D         	movff	asin@y+2,___fldiv@a+2
  6763  0047CA  C1AD  F07E         	movff	asin@y+3,___fldiv@a+3
  6764  0047CE  EC03  F01E         	call	___fldiv	;wreg free
  6765  0047D2  C077  F1AE         	movff	?___fldiv,_asin$3748
  6766  0047D6  C078  F1AF         	movff	?___fldiv+1,_asin$3748+1
  6767  0047DA  C079  F1B0         	movff	?___fldiv+2,_asin$3748+2
  6768  0047DE  C07A  F1B1         	movff	?___fldiv+3,_asin$3748+3
  6769  0047E2  C1AE  F0D1         	movff	_asin$3748,atan@f
  6770  0047E6  C1AF  F0D2         	movff	_asin$3748+1,atan@f+1
  6771  0047EA  C1B0  F0D3         	movff	_asin$3748+2,atan@f+2
  6772  0047EE  C1B1  F0D4         	movff	_asin$3748+3,atan@f+3
  6773  0047F2  EC0D  F026         	call	_atan	;wreg free
  6774  0047F6  C0D1  F0DE         	movff	?_atan,?_asin
  6775  0047FA  C0D2  F0DF         	movff	?_atan+1,?_asin+1
  6776  0047FE  C0D3  F0E0         	movff	?_atan+2,?_asin+2
  6777  004802  C0D4  F0E1         	movff	?_atan+3,?_asin+3
  6778  004806  0012               	return	
  6779  004808                     l7277:
  6780  004808  0100               	movlb	0	; () banked
  6781  00480A  AFE1               	btfss	(asin@x+3)& (0+255),7,b
  6782  00480C  D06E               	goto	l7289
  6783                           
  6784                           ; BSR set to: 0
  6785  00480E  C0DE  F07B         	movff	asin@x,___fldiv@a
  6786  004812  C0DF  F07C         	movff	asin@x+1,___fldiv@a+1
  6787  004816  C0E0  F07D         	movff	asin@x+2,___fldiv@a+2
  6788  00481A  C0E1  F07E         	movff	asin@x+3,___fldiv@a+3
  6789  00481E  C1AA  F0BD         	movff	asin@y,___flneg@f1
  6790  004822  C1AB  F0BE         	movff	asin@y+1,___flneg@f1+1
  6791  004826  C1AC  F0BF         	movff	asin@y+2,___flneg@f1+2
  6792  00482A  C1AD  F0C0         	movff	asin@y+3,___flneg@f1+3
  6793  00482E  EC4D  F02F         	call	___flneg	;wreg free
  6794  004832  C0BD  F077         	movff	?___flneg,___fldiv@b
  6795  004836  C0BE  F078         	movff	?___flneg+1,___fldiv@b+1
  6796  00483A  C0BF  F079         	movff	?___flneg+2,___fldiv@b+2
  6797  00483E  C0C0  F07A         	movff	?___flneg+3,___fldiv@b+3
  6798  004842  EC03  F01E         	call	___fldiv	;wreg free
  6799  004846  C077  F1AE         	movff	?___fldiv,_asin$3748
  6800  00484A  C078  F1AF         	movff	?___fldiv+1,_asin$3748+1
  6801  00484E  C079  F1B0         	movff	?___fldiv+2,_asin$3748+2
  6802  004852  C07A  F1B1         	movff	?___fldiv+3,_asin$3748+3
  6803  004856  C1AE  F0D1         	movff	_asin$3748,atan@f
  6804  00485A  C1AF  F0D2         	movff	_asin$3748+1,atan@f+1
  6805  00485E  C1B0  F0D3         	movff	_asin$3748+2,atan@f+2
  6806  004862  C1B1  F0D4         	movff	_asin$3748+3,atan@f+3
  6807  004866  EC0D  F026         	call	_atan	;wreg free
  6808  00486A  C0D1  F1A6         	movff	?_atan,_asin$3749
  6809  00486E  C0D2  F1A7         	movff	?_atan+1,_asin$3749+1
  6810  004872  C0D3  F1A8         	movff	?_atan+2,_asin$3749+2
  6811  004876  C0D4  F1A9         	movff	?_atan+3,_asin$3749+3
  6812  00487A  0EDB               	movlw	219
  6813  00487C  0100               	movlb	0	; () banked
  6814  00487E  6FAD               	movwf	___fladd@a& (0+255),b
  6815  004880  0E0F               	movlw	15
  6816  004882  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6817  004884  0EC9               	movlw	201
  6818  004886  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6819  004888  0E3F               	movlw	63
  6820  00488A  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6821  00488C  C1A6  F0BD         	movff	_asin$3749,___flneg@f1
  6822  004890  C1A7  F0BE         	movff	_asin$3749+1,___flneg@f1+1
  6823  004894  C1A8  F0BF         	movff	_asin$3749+2,___flneg@f1+2
  6824  004898  C1A9  F0C0         	movff	_asin$3749+3,___flneg@f1+3
  6825  00489C  EC4D  F02F         	call	___flneg	;wreg free
  6826  0048A0  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6827  0048A4  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6828  0048A8  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6829  0048AC  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6830  0048B0  EC3D  F015         	call	___fladd	;wreg free
  6831  0048B4  C0A9  F1A2         	movff	?___fladd,_asin$3750
  6832  0048B8  C0AA  F1A3         	movff	?___fladd+1,_asin$3750+1
  6833  0048BC  C0AB  F1A4         	movff	?___fladd+2,_asin$3750+2
  6834  0048C0  C0AC  F1A5         	movff	?___fladd+3,_asin$3750+3
  6835  0048C4  C1A2  F0BD         	movff	_asin$3750,___flneg@f1
  6836  0048C8  C1A3  F0BE         	movff	_asin$3750+1,___flneg@f1+1
  6837  0048CC  C1A4  F0BF         	movff	_asin$3750+2,___flneg@f1+2
  6838  0048D0  C1A5  F0C0         	movff	_asin$3750+3,___flneg@f1+3
  6839  0048D4  EC4D  F02F         	call	___flneg	;wreg free
  6840  0048D8  C0BD  F0DE         	movff	?___flneg,?_asin
  6841  0048DC  C0BE  F0DF         	movff	?___flneg+1,?_asin+1
  6842  0048E0  C0BF  F0E0         	movff	?___flneg+2,?_asin+2
  6843  0048E4  C0C0  F0E1         	movff	?___flneg+3,?_asin+3
  6844  0048E8  0012               	return	
  6845  0048EA                     l7289:
  6846  0048EA  C0DE  F07B         	movff	asin@x,___fldiv@a
  6847  0048EE  C0DF  F07C         	movff	asin@x+1,___fldiv@a+1
  6848  0048F2  C0E0  F07D         	movff	asin@x+2,___fldiv@a+2
  6849  0048F6  C0E1  F07E         	movff	asin@x+3,___fldiv@a+3
  6850  0048FA  C1AA  F077         	movff	asin@y,___fldiv@b
  6851  0048FE  C1AB  F078         	movff	asin@y+1,___fldiv@b+1
  6852  004902  C1AC  F079         	movff	asin@y+2,___fldiv@b+2
  6853  004906  C1AD  F07A         	movff	asin@y+3,___fldiv@b+3
  6854  00490A  EC03  F01E         	call	___fldiv	;wreg free
  6855  00490E  C077  F1AE         	movff	?___fldiv,_asin$3748
  6856  004912  C078  F1AF         	movff	?___fldiv+1,_asin$3748+1
  6857  004916  C079  F1B0         	movff	?___fldiv+2,_asin$3748+2
  6858  00491A  C07A  F1B1         	movff	?___fldiv+3,_asin$3748+3
  6859  00491E  C1AE  F0D1         	movff	_asin$3748,atan@f
  6860  004922  C1AF  F0D2         	movff	_asin$3748+1,atan@f+1
  6861  004926  C1B0  F0D3         	movff	_asin$3748+2,atan@f+2
  6862  00492A  C1B1  F0D4         	movff	_asin$3748+3,atan@f+3
  6863  00492E  EC0D  F026         	call	_atan	;wreg free
  6864  004932  C0D1  F1A6         	movff	?_atan,_asin$3749
  6865  004936  C0D2  F1A7         	movff	?_atan+1,_asin$3749+1
  6866  00493A  C0D3  F1A8         	movff	?_atan+2,_asin$3749+2
  6867  00493E  C0D4  F1A9         	movff	?_atan+3,_asin$3749+3
  6868  004942  C1A6  F0BD         	movff	_asin$3749,___flneg@f1
  6869  004946  C1A7  F0BE         	movff	_asin$3749+1,___flneg@f1+1
  6870  00494A  C1A8  F0BF         	movff	_asin$3749+2,___flneg@f1+2
  6871  00494E  C1A9  F0C0         	movff	_asin$3749+3,___flneg@f1+3
  6872  004952  EC4D  F02F         	call	___flneg	;wreg free
  6873  004956  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6874  00495A  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6875  00495E  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6876  004962  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6877  004966  0EDB               	movlw	219
  6878  004968  0100               	movlb	0	; () banked
  6879  00496A  6FAD               	movwf	___fladd@a& (0+255),b
  6880  00496C  0E0F               	movlw	15
  6881  00496E  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6882  004970  0EC9               	movlw	201
  6883  004972  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6884  004974  0E3F               	movlw	63
  6885  004976  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6886  004978  EC3D  F015         	call	___fladd	;wreg free
  6887  00497C  C0A9  F0DE         	movff	?___fladd,?_asin
  6888  004980  C0AA  F0DF         	movff	?___fladd+1,?_asin+1
  6889  004984  C0AB  F0E0         	movff	?___fladd+2,?_asin+2
  6890  004988  C0AC  F0E1         	movff	?___fladd+3,?_asin+3
  6891  00498C  0012               	return	
  6892  00498E                     __end_of_asin:
  6893                           	opt stack 0
  6894                           tblptru	equ	0xFF8
  6895                           tblptrh	equ	0xFF7
  6896                           tblptrl	equ	0xFF6
  6897                           tablat	equ	0xFF5
  6898                           postinc0	equ	0xFEE
  6899                           wreg	equ	0xFE8
  6900                           postdec1	equ	0xFE5
  6901                           fsr1l	equ	0xFE1
  6902                           indf2	equ	0xFDF
  6903                           postinc2	equ	0xFDE
  6904                           postdec2	equ	0xFDD
  6905                           fsr2h	equ	0xFDA
  6906                           fsr2l	equ	0xFD9
  6907                           status	equ	0xFD8
  6908                           
  6909 ;; *************** function _sqrt *****************
  6910 ;; Defined at:
  6911 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  6912 ;; Parameters:    Size  Location     Type
  6913 ;;  a               4   97[BANK0 ] long 
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;  frac            4  122[BANK0 ] unsigned long 
  6916 ;;  root            4  118[BANK0 ] struct .
  6917 ;;  grs             4  112[BANK0 ] unsigned long 
  6918 ;;  tfrac           4  107[BANK0 ] unsigned long 
  6919 ;;  exp             2  116[BANK0 ] int 
  6920 ;;  p               1  111[BANK0 ] unsigned char 
  6921 ;;  i               1  106[BANK0 ] unsigned char 
  6922 ;;  sign            1  105[BANK0 ] unsigned char 
  6923 ;; Return value:  Size  Location     Type
  6924 ;;                  4   97[BANK0 ] unsigned char 
  6925 ;; Registers used:
  6926 ;;		wreg, status,2, status,0
  6927 ;; Tracked objects:
  6928 ;;		On entry : 0/0
  6929 ;;		On exit  : 0/0
  6930 ;;		Unchanged: 0/0
  6931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6932 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6933 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6934 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6935 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6936 ;;Total ram usage:       29 bytes
  6937 ;; Hardware stack levels used:    1
  6938 ;; Hardware stack levels required when called:    4
  6939 ;; This function calls:
  6940 ;;		Nothing
  6941 ;; This function is called by:
  6942 ;;		_parallelo
  6943 ;;		_asin
  6944 ;; This function uses a non-reentrant model
  6945 ;;
  6946                           
  6947                           	psect	text17
  6948  00383C                     __ptext17:
  6949                           	opt stack 0
  6950  00383C                     _sqrt:
  6951                           	opt stack 24
  6952                           
  6953                           ;incstack = 0
  6954  00383C  0100               	movlb	0	; () banked
  6955  00383E  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  6956  003840  0B80               	andlw	128
  6957  003842  0100               	movlb	0	; () banked
  6958  003844  6FC9               	movwf	sqrt@sign& (0+255),b
  6959  003846  0100               	movlb	0	; () banked
  6960  003848  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  6961  00384A  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  6962  00384C  0100               	movlb	0	; () banked
  6963  00384E  6FCF               	movwf	sqrt@p& (0+255),b
  6964                           
  6965                           ; BSR set to: 0
  6966  003850  0100               	movlb	0	; () banked
  6967  003852  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  6968  003854  D002               	goto	l7051
  6969                           
  6970                           ; BSR set to: 0
  6971  003856  0100               	movlb	0	; () banked
  6972  003858  81CF               	bsf	sqrt@p& (0+255),0,b
  6973  00385A                     l7051:
  6974                           
  6975                           ; BSR set to: 0
  6976  00385A  C0CF  F0D4         	movff	sqrt@p,sqrt@exp
  6977  00385E  0100               	movlb	0	; () banked
  6978  003860  6BD5               	clrf	(sqrt@exp+1)& (0+255),b
  6979                           
  6980                           ; BSR set to: 0
  6981  003862  0EFF               	movlw	255
  6982  003864  0100               	movlb	0	; () banked
  6983  003866  15C1               	andwf	sqrt@a& (0+255),w,b
  6984  003868  0100               	movlb	0	; () banked
  6985  00386A  6FDA               	movwf	sqrt@frac& (0+255),b
  6986  00386C  0EFF               	movlw	255
  6987  00386E  0100               	movlb	0	; () banked
  6988  003870  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  6989  003872  0100               	movlb	0	; () banked
  6990  003874  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  6991  003876  0E7F               	movlw	127
  6992  003878  0100               	movlb	0	; () banked
  6993  00387A  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  6994  00387C  0100               	movlb	0	; () banked
  6995  00387E  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  6996  003880  0E00               	movlw	0
  6997  003882  0100               	movlb	0	; () banked
  6998  003884  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  6999  003886  0100               	movlb	0	; () banked
  7000  003888  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  7001                           
  7002                           ; BSR set to: 0
  7003  00388A  0100               	movlb	0	; () banked
  7004  00388C  51D4               	movf	sqrt@exp& (0+255),w,b
  7005  00388E  0100               	movlb	0	; () banked
  7006  003890  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7007  003892  B4D8               	btfsc	status,2,c
  7008  003894  D008               	goto	l7063
  7009                           
  7010                           ; BSR set to: 0
  7011  003896  0100               	movlb	0	; () banked
  7012  003898  8FDC               	bsf	(sqrt@frac+2)& (0+255),7,b
  7013                           
  7014                           ; BSR set to: 0
  7015  00389A  0100               	movlb	0	; () banked
  7016  00389C  29D4               	incf	sqrt@exp& (0+255),w,b
  7017  00389E  0100               	movlb	0	; () banked
  7018  0038A0  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7019  0038A2  A4D8               	btfss	status,2,c
  7020  0038A4  D009               	goto	l7065
  7021  0038A6                     l7063:
  7022                           
  7023                           ; BSR set to: 0
  7024  0038A6  0E00               	movlw	0
  7025  0038A8  0100               	movlb	0	; () banked
  7026  0038AA  6FDA               	movwf	sqrt@frac& (0+255),b
  7027  0038AC  0E00               	movlw	0
  7028  0038AE  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  7029  0038B0  0E00               	movlw	0
  7030  0038B2  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  7031  0038B4  0E00               	movlw	0
  7032  0038B6  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  7033  0038B8                     l7065:
  7034                           
  7035                           ; BSR set to: 0
  7036  0038B8  0100               	movlb	0	; () banked
  7037  0038BA  51D4               	movf	sqrt@exp& (0+255),w,b
  7038  0038BC  0100               	movlb	0	; () banked
  7039  0038BE  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7040  0038C0  A4D8               	btfss	status,2,c
  7041  0038C2  D00A               	goto	l7071
  7042                           
  7043                           ; BSR set to: 0
  7044  0038C4  0E00               	movlw	0
  7045  0038C6  0100               	movlb	0	; () banked
  7046  0038C8  6FC1               	movwf	?_sqrt& (0+255),b
  7047  0038CA  0E00               	movlw	0
  7048  0038CC  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  7049  0038CE  0E00               	movlw	0
  7050  0038D0  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  7051  0038D2  0E00               	movlw	0
  7052  0038D4  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  7053                           
  7054                           ; BSR set to: 0
  7055  0038D6  0012               	return	
  7056  0038D8                     l7071:
  7057                           
  7058                           ; BSR set to: 0
  7059  0038D8  0100               	movlb	0	; () banked
  7060  0038DA  51C9               	movf	sqrt@sign& (0+255),w,b
  7061  0038DC  0100               	movlb	0	; () banked
  7062  0038DE  B4D8               	btfsc	status,2,c
  7063  0038E0  D01C               	goto	l7083
  7064                           
  7065                           ; BSR set to: 0
  7066  0038E2  0E00               	movlw	0
  7067  0038E4  0100               	movlb	0	; () banked
  7068  0038E6  6FD6               	movwf	sqrt@root& (0+255),b
  7069  0038E8  0E00               	movlw	0
  7070  0038EA  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  7071  0038EC  0E40               	movlw	64
  7072  0038EE  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  7073  0038F0  0E00               	movlw	0
  7074  0038F2  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7075                           
  7076                           ; BSR set to: 0
  7077  0038F4  0100               	movlb	0	; () banked
  7078  0038F6  0E80               	movlw	128
  7079  0038F8  13D8               	iorwf	(sqrt@root+2)& (0+255),f,b
  7080  0038FA  0EFF               	movlw	255
  7081  0038FC  13D9               	iorwf	(sqrt@root+3)& (0+255),f,b
  7082                           
  7083                           ; BSR set to: 0
  7084  0038FE  0E00               	movlw	0
  7085  003900  0101               	movlb	1	; () banked
  7086  003902  6F49               	movwf	(_errno+1)& (0+255),b
  7087  003904  0E21               	movlw	33
  7088  003906  6F48               	movwf	_errno& (0+255),b
  7089                           
  7090                           ; BSR set to: 1
  7091  003908  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  7092  00390C  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7093  003910  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7094  003914  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7095                           
  7096                           ; BSR set to: 1
  7097  003918  0012               	return	
  7098  00391A                     l7083:
  7099  00391A  0100               	movlb	0	; () banked
  7100  00391C  29D4               	incf	sqrt@exp& (0+255),w,b
  7101  00391E  0100               	movlb	0	; () banked
  7102  003920  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7103  003922  A4D8               	btfss	status,2,c
  7104  003924  D012               	goto	l7091
  7105                           
  7106                           ; BSR set to: 0
  7107  003926  0E00               	movlw	0
  7108  003928  0100               	movlb	0	; () banked
  7109  00392A  6FD6               	movwf	sqrt@root& (0+255),b
  7110  00392C  0E00               	movlw	0
  7111  00392E  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  7112  003930  0E80               	movlw	128
  7113  003932  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  7114  003934  0E7F               	movlw	127
  7115  003936  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7116                           
  7117                           ; BSR set to: 0
  7118  003938  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  7119  00393C  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7120  003940  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7121  003944  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7122                           
  7123                           ; BSR set to: 0
  7124  003948  0012               	return	
  7125  00394A                     l7091:
  7126                           
  7127                           ; BSR set to: 0
  7128  00394A  0100               	movlb	0	; () banked
  7129  00394C  0E81               	movlw	129
  7130  00394E  27D4               	addwf	sqrt@exp& (0+255),f,b
  7131  003950  0EFF               	movlw	255
  7132  003952  23D5               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7133  003954  0100               	movlb	0	; () banked
  7134  003956  51D4               	movf	sqrt@exp& (0+255),w,b
  7135  003958  0B01               	andlw	1
  7136  00395A  0100               	movlb	0	; () banked
  7137  00395C  6FCF               	movwf	sqrt@p& (0+255),b
  7138  00395E  0100               	movlb	0	; () banked
  7139  003960  35D5               	rlcf	(sqrt@exp+1)& (0+255),w,b
  7140  003962  33D5               	rrcf	(sqrt@exp+1)& (0+255),f,b
  7141  003964  33D4               	rrcf	sqrt@exp& (0+255),f,b
  7142  003966  0E7F               	movlw	127
  7143  003968  0100               	movlb	0	; () banked
  7144  00396A  27D4               	addwf	sqrt@exp& (0+255),f,b
  7145  00396C  0E00               	movlw	0
  7146  00396E  23D5               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7147  003970  90D8               	bcf	status,0,c
  7148  003972  0100               	movlb	0	; () banked
  7149  003974  35DA               	rlcf	sqrt@frac& (0+255),w,b
  7150  003976  0100               	movlb	0	; () banked
  7151  003978  6FCB               	movwf	sqrt@tfrac& (0+255),b
  7152  00397A  0100               	movlb	0	; () banked
  7153  00397C  35DB               	rlcf	(sqrt@frac+1)& (0+255),w,b
  7154  00397E  0100               	movlb	0	; () banked
  7155  003980  6FCC               	movwf	(sqrt@tfrac+1)& (0+255),b
  7156  003982  0100               	movlb	0	; () banked
  7157  003984  35DC               	rlcf	(sqrt@frac+2)& (0+255),w,b
  7158  003986  0100               	movlb	0	; () banked
  7159  003988  6FCD               	movwf	(sqrt@tfrac+2)& (0+255),b
  7160  00398A  0100               	movlb	0	; () banked
  7161  00398C  35DD               	rlcf	(sqrt@frac+3)& (0+255),w,b
  7162  00398E  0100               	movlb	0	; () banked
  7163  003990  6FCE               	movwf	(sqrt@tfrac+3)& (0+255),b
  7164                           
  7165                           ; BSR set to: 0
  7166  003992  0E00               	movlw	0
  7167  003994  0100               	movlb	0	; () banked
  7168  003996  6FDA               	movwf	sqrt@frac& (0+255),b
  7169  003998  0E00               	movlw	0
  7170  00399A  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  7171  00399C  0E00               	movlw	0
  7172  00399E  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  7173  0039A0  0E00               	movlw	0
  7174  0039A2  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  7175                           
  7176                           ; BSR set to: 0
  7177  0039A4  0E00               	movlw	0
  7178  0039A6  0100               	movlb	0	; () banked
  7179  0039A8  6FD0               	movwf	sqrt@grs& (0+255),b
  7180  0039AA  0E00               	movlw	0
  7181  0039AC  6FD1               	movwf	(sqrt@grs+1)& (0+255),b
  7182  0039AE  0E00               	movlw	0
  7183  0039B0  6FD2               	movwf	(sqrt@grs+2)& (0+255),b
  7184  0039B2  0E01               	movlw	1
  7185  0039B4  6FD3               	movwf	(sqrt@grs+3)& (0+255),b
  7186                           
  7187                           ; BSR set to: 0
  7188  0039B6  0100               	movlb	0	; () banked
  7189  0039B8  51CF               	movf	sqrt@p& (0+255),w,b
  7190  0039BA  0100               	movlb	0	; () banked
  7191  0039BC  B4D8               	btfsc	status,2,c
  7192  0039BE  D006               	goto	l7101
  7193                           
  7194                           ; BSR set to: 0
  7195  0039C0  0100               	movlb	0	; () banked
  7196  0039C2  90D8               	bcf	status,0,c
  7197  0039C4  37CB               	rlcf	sqrt@tfrac& (0+255),f,b
  7198  0039C6  37CC               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7199  0039C8  37CD               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7200  0039CA  37CE               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7201  0039CC                     l7101:
  7202                           
  7203                           ; BSR set to: 0
  7204  0039CC  0E00               	movlw	0
  7205  0039CE  0100               	movlb	0	; () banked
  7206  0039D0  6FCA               	movwf	sqrt@i& (0+255),b
  7207  0039D2  D07E               	goto	l7115
  7208  0039D4                     l7103:
  7209                           
  7210                           ; BSR set to: 0
  7211  0039D4  0100               	movlb	0	; () banked
  7212  0039D6  51D0               	movf	sqrt@grs& (0+255),w,b
  7213  0039D8  0100               	movlb	0	; () banked
  7214  0039DA  13DA               	iorwf	sqrt@frac& (0+255),f,b
  7215  0039DC  0100               	movlb	0	; () banked
  7216  0039DE  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7217  0039E0  0100               	movlb	0	; () banked
  7218  0039E2  13DB               	iorwf	(sqrt@frac+1)& (0+255),f,b
  7219  0039E4  0100               	movlb	0	; () banked
  7220  0039E6  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7221  0039E8  0100               	movlb	0	; () banked
  7222  0039EA  13DC               	iorwf	(sqrt@frac+2)& (0+255),f,b
  7223  0039EC  0100               	movlb	0	; () banked
  7224  0039EE  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7225  0039F0  0100               	movlb	0	; () banked
  7226  0039F2  13DD               	iorwf	(sqrt@frac+3)& (0+255),f,b
  7227  0039F4  0100               	movlb	0	; () banked
  7228  0039F6  51DA               	movf	sqrt@frac& (0+255),w,b
  7229  0039F8  0100               	movlb	0	; () banked
  7230  0039FA  5DCB               	subwf	sqrt@tfrac& (0+255),w,b
  7231  0039FC  0100               	movlb	0	; () banked
  7232  0039FE  51DB               	movf	(sqrt@frac+1)& (0+255),w,b
  7233  003A00  0100               	movlb	0	; () banked
  7234  003A02  59CC               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  7235  003A04  0100               	movlb	0	; () banked
  7236  003A06  51DC               	movf	(sqrt@frac+2)& (0+255),w,b
  7237  003A08  0100               	movlb	0	; () banked
  7238  003A0A  59CD               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  7239  003A0C  0100               	movlb	0	; () banked
  7240  003A0E  51DD               	movf	(sqrt@frac+3)& (0+255),w,b
  7241  003A10  0100               	movlb	0	; () banked
  7242  003A12  59CE               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  7243  003A14  A0D8               	btfss	status,0,c
  7244  003A16  D021               	goto	l7107
  7245                           
  7246                           ; BSR set to: 0
  7247  003A18  0100               	movlb	0	; () banked
  7248  003A1A  51DA               	movf	sqrt@frac& (0+255),w,b
  7249  003A1C  0100               	movlb	0	; () banked
  7250  003A1E  5FCB               	subwf	sqrt@tfrac& (0+255),f,b
  7251  003A20  0100               	movlb	0	; () banked
  7252  003A22  51DB               	movf	(sqrt@frac+1)& (0+255),w,b
  7253  003A24  0100               	movlb	0	; () banked
  7254  003A26  5BCC               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  7255  003A28  0100               	movlb	0	; () banked
  7256  003A2A  51DC               	movf	(sqrt@frac+2)& (0+255),w,b
  7257  003A2C  0100               	movlb	0	; () banked
  7258  003A2E  5BCD               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  7259  003A30  0100               	movlb	0	; () banked
  7260  003A32  51DD               	movf	(sqrt@frac+3)& (0+255),w,b
  7261  003A34  0100               	movlb	0	; () banked
  7262  003A36  5BCE               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  7263  003A38  0100               	movlb	0	; () banked
  7264  003A3A  51D0               	movf	sqrt@grs& (0+255),w,b
  7265  003A3C  0100               	movlb	0	; () banked
  7266  003A3E  27DA               	addwf	sqrt@frac& (0+255),f,b
  7267  003A40  0100               	movlb	0	; () banked
  7268  003A42  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7269  003A44  0100               	movlb	0	; () banked
  7270  003A46  23DB               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7271  003A48  0100               	movlb	0	; () banked
  7272  003A4A  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7273  003A4C  0100               	movlb	0	; () banked
  7274  003A4E  23DC               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7275  003A50  0100               	movlb	0	; () banked
  7276  003A52  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7277  003A54  0100               	movlb	0	; () banked
  7278  003A56  23DD               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7279  003A58  D01D               	goto	l7109
  7280  003A5A                     l7107:
  7281                           
  7282                           ; BSR set to: 0
  7283  003A5A  C0D0  F0C5         	movff	sqrt@grs,??_sqrt
  7284  003A5E  C0D1  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7285  003A62  C0D2  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7286  003A66  C0D3  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7287  003A6A  0100               	movlb	0	; () banked
  7288  003A6C  1FC5               	comf	??_sqrt& (0+255),f,b
  7289  003A6E  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  7290  003A70  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  7291  003A72  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  7292  003A74  0100               	movlb	0	; () banked
  7293  003A76  51C5               	movf	??_sqrt& (0+255),w,b
  7294  003A78  0100               	movlb	0	; () banked
  7295  003A7A  17DA               	andwf	sqrt@frac& (0+255),f,b
  7296  003A7C  0100               	movlb	0	; () banked
  7297  003A7E  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  7298  003A80  0100               	movlb	0	; () banked
  7299  003A82  17DB               	andwf	(sqrt@frac+1)& (0+255),f,b
  7300  003A84  0100               	movlb	0	; () banked
  7301  003A86  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  7302  003A88  0100               	movlb	0	; () banked
  7303  003A8A  17DC               	andwf	(sqrt@frac+2)& (0+255),f,b
  7304  003A8C  0100               	movlb	0	; () banked
  7305  003A8E  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  7306  003A90  0100               	movlb	0	; () banked
  7307  003A92  17DD               	andwf	(sqrt@frac+3)& (0+255),f,b
  7308  003A94                     l7109:
  7309                           
  7310                           ; BSR set to: 0
  7311  003A94  C0D0  F0C5         	movff	sqrt@grs,??_sqrt
  7312  003A98  C0D1  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7313  003A9C  C0D2  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7314  003AA0  C0D3  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7315  003AA4  0100               	movlb	0	; () banked
  7316  003AA6  90D8               	bcf	status,0,c
  7317  003AA8  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7318  003AAA  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7319  003AAC  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7320  003AAE  33C5               	rrcf	??_sqrt& (0+255),f,b
  7321  003AB0  C0C5  F0D0         	movff	??_sqrt,sqrt@grs
  7322  003AB4  C0C6  F0D1         	movff	??_sqrt+1,sqrt@grs+1
  7323  003AB8  C0C7  F0D2         	movff	??_sqrt+2,sqrt@grs+2
  7324  003ABC  C0C8  F0D3         	movff	??_sqrt+3,sqrt@grs+3
  7325                           
  7326                           ; BSR set to: 0
  7327  003AC0  0100               	movlb	0	; () banked
  7328  003AC2  90D8               	bcf	status,0,c
  7329  003AC4  37CB               	rlcf	sqrt@tfrac& (0+255),f,b
  7330  003AC6  37CC               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7331  003AC8  37CD               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7332  003ACA  37CE               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7333                           
  7334                           ; BSR set to: 0
  7335  003ACC  0100               	movlb	0	; () banked
  7336  003ACE  2BCA               	incf	sqrt@i& (0+255),f,b
  7337  003AD0                     l7115:
  7338                           
  7339                           ; BSR set to: 0
  7340  003AD0  0E18               	movlw	24
  7341  003AD2  0100               	movlb	0	; () banked
  7342  003AD4  65CA               	cpfsgt	sqrt@i& (0+255),b
  7343  003AD6  D77E               	goto	l7103
  7344                           
  7345                           ; BSR set to: 0
  7346                           
  7347                           ; BSR set to: 0
  7348  003AD8  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7349  003ADC  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7350  003AE0  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7351  003AE4  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7352  003AE8  0100               	movlb	0	; () banked
  7353  003AEA  90D8               	bcf	status,0,c
  7354  003AEC  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7355  003AEE  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7356  003AF0  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7357  003AF2  33C5               	rrcf	??_sqrt& (0+255),f,b
  7358  003AF4  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7359  003AF8  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7360  003AFC  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7361  003B00  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7362                           
  7363                           ; BSR set to: 0
  7364  003B04  0E01               	movlw	1
  7365  003B06  0100               	movlb	0	; () banked
  7366  003B08  15DA               	andwf	sqrt@frac& (0+255),w,b
  7367  003B0A  0100               	movlb	0	; () banked
  7368  003B0C  6FD0               	movwf	sqrt@grs& (0+255),b
  7369  003B0E  0E00               	movlw	0
  7370  003B10  0100               	movlb	0	; () banked
  7371  003B12  15DB               	andwf	(sqrt@frac+1)& (0+255),w,b
  7372  003B14  0100               	movlb	0	; () banked
  7373  003B16  6FD1               	movwf	(sqrt@grs+1)& (0+255),b
  7374  003B18  0E00               	movlw	0
  7375  003B1A  0100               	movlb	0	; () banked
  7376  003B1C  15DC               	andwf	(sqrt@frac+2)& (0+255),w,b
  7377  003B1E  0100               	movlb	0	; () banked
  7378  003B20  6FD2               	movwf	(sqrt@grs+2)& (0+255),b
  7379  003B22  0E00               	movlw	0
  7380  003B24  0100               	movlb	0	; () banked
  7381  003B26  15DD               	andwf	(sqrt@frac+3)& (0+255),w,b
  7382  003B28  0100               	movlb	0	; () banked
  7383  003B2A  6FD3               	movwf	(sqrt@grs+3)& (0+255),b
  7384                           
  7385                           ; BSR set to: 0
  7386  003B2C  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7387  003B30  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7388  003B34  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7389  003B38  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7390  003B3C  0100               	movlb	0	; () banked
  7391  003B3E  90D8               	bcf	status,0,c
  7392  003B40  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7393  003B42  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7394  003B44  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7395  003B46  33C5               	rrcf	??_sqrt& (0+255),f,b
  7396  003B48  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7397  003B4C  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7398  003B50  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7399  003B54  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7400  003B58  0100               	movlb	0	; () banked
  7401  003B5A  51D0               	movf	sqrt@grs& (0+255),w,b
  7402  003B5C  0100               	movlb	0	; () banked
  7403  003B5E  27DA               	addwf	sqrt@frac& (0+255),f,b
  7404  003B60  0100               	movlb	0	; () banked
  7405  003B62  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7406  003B64  0100               	movlb	0	; () banked
  7407  003B66  23DB               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7408  003B68  0100               	movlb	0	; () banked
  7409  003B6A  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7410  003B6C  0100               	movlb	0	; () banked
  7411  003B6E  23DC               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7412  003B70  0100               	movlb	0	; () banked
  7413  003B72  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7414  003B74  0100               	movlb	0	; () banked
  7415  003B76  23DD               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7416                           
  7417                           ; BSR set to: 0
  7418  003B78  0100               	movlb	0	; () banked
  7419  003B7A  A1DD               	btfss	(sqrt@frac+3)& (0+255),0,b
  7420  003B7C  D019               	goto	l7127
  7421                           
  7422                           ; BSR set to: 0
  7423  003B7E  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7424  003B82  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7425  003B86  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7426  003B8A  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7427  003B8E  0100               	movlb	0	; () banked
  7428  003B90  90D8               	bcf	status,0,c
  7429  003B92  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7430  003B94  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7431  003B96  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7432  003B98  33C5               	rrcf	??_sqrt& (0+255),f,b
  7433  003B9A  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7434  003B9E  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7435  003BA2  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7436  003BA6  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7437  003BAA  0100               	movlb	0	; () banked
  7438  003BAC  4BD4               	infsnz	sqrt@exp& (0+255),f,b
  7439  003BAE  2BD5               	incf	(sqrt@exp+1)& (0+255),f,b
  7440  003BB0                     l7127:
  7441                           
  7442                           ; BSR set to: 0
  7443  003BB0  0EFF               	movlw	255
  7444  003BB2  0100               	movlb	0	; () banked
  7445  003BB4  15DA               	andwf	sqrt@frac& (0+255),w,b
  7446  003BB6  0100               	movlb	0	; () banked
  7447  003BB8  6FD6               	movwf	sqrt@root& (0+255),b
  7448  003BBA  0EFF               	movlw	255
  7449  003BBC  0100               	movlb	0	; () banked
  7450  003BBE  15DB               	andwf	(sqrt@frac+1)& (0+255),w,b
  7451  003BC0  0100               	movlb	0	; () banked
  7452  003BC2  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  7453  003BC4  0E7F               	movlw	127
  7454  003BC6  0100               	movlb	0	; () banked
  7455  003BC8  15DC               	andwf	(sqrt@frac+2)& (0+255),w,b
  7456  003BCA  0100               	movlb	0	; () banked
  7457  003BCC  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  7458  003BCE  0E00               	movlw	0
  7459  003BD0  0100               	movlb	0	; () banked
  7460  003BD2  15DD               	andwf	(sqrt@frac+3)& (0+255),w,b
  7461  003BD4  0100               	movlb	0	; () banked
  7462  003BD6  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7463                           
  7464                           ; BSR set to: 0
  7465  003BD8  C0D4  F0CF         	movff	sqrt@exp,sqrt@p
  7466                           
  7467                           ; BSR set to: 0
  7468  003BDC  0100               	movlb	0	; () banked
  7469  003BDE  A1CF               	btfss	sqrt@p& (0+255),0,b
  7470  003BE0  D002               	goto	l7135
  7471                           
  7472                           ; BSR set to: 0
  7473  003BE2  0100               	movlb	0	; () banked
  7474  003BE4  8FD8               	bsf	(sqrt@root+2)& (0+255),7,b
  7475  003BE6                     l7135:
  7476                           
  7477                           ; BSR set to: 0
  7478  003BE6  0100               	movlb	0	; () banked
  7479  003BE8  90D8               	bcf	status,0,c
  7480  003BEA  31CF               	rrcf	sqrt@p& (0+255),w,b
  7481  003BEC  0100               	movlb	0	; () banked
  7482  003BEE  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7483                           
  7484                           ; BSR set to: 0
  7485  003BF0  0100               	movlb	0	; () banked
  7486  003BF2  9FD9               	bcf	(sqrt@root+3)& (0+255),7,b
  7487                           
  7488                           ; BSR set to: 0
  7489  003BF4  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  7490  003BF8  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7491  003BFC  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7492  003C00  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7493  003C04  0012               	return	
  7494  003C06                     __end_of_sqrt:
  7495                           	opt stack 0
  7496                           tblptru	equ	0xFF8
  7497                           tblptrh	equ	0xFF7
  7498                           tblptrl	equ	0xFF6
  7499                           tablat	equ	0xFF5
  7500                           postinc0	equ	0xFEE
  7501                           wreg	equ	0xFE8
  7502                           postdec1	equ	0xFE5
  7503                           fsr1l	equ	0xFE1
  7504                           indf2	equ	0xFDF
  7505                           postinc2	equ	0xFDE
  7506                           postdec2	equ	0xFDD
  7507                           fsr2h	equ	0xFDA
  7508                           fsr2l	equ	0xFD9
  7509                           status	equ	0xFD8
  7510                           
  7511 ;; *************** function _atan *****************
  7512 ;; Defined at:
  7513 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;  f               4  113[BANK0 ] unsigned char 
  7516 ;; Auto vars:     Size  Location     Type
  7517 ;;  val             4   13[BANK1 ] unsigned char 
  7518 ;;  val_squared     4    9[BANK1 ] unsigned char 
  7519 ;;  x               4    4[BANK1 ] unsigned char 
  7520 ;;  y               4    0[BANK1 ] unsigned char 
  7521 ;;  recip           1    8[BANK1 ] unsigned char 
  7522 ;; Return value:  Size  Location     Type
  7523 ;;                  4  113[BANK0 ] unsigned char 
  7524 ;; Registers used:
  7525 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7526 ;; Tracked objects:
  7527 ;;		On entry : 0/0
  7528 ;;		On exit  : 0/0
  7529 ;;		Unchanged: 0/0
  7530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7531 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7532 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7534 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7535 ;;Total ram usage:       21 bytes
  7536 ;; Hardware stack levels used:    1
  7537 ;; Hardware stack levels required when called:    6
  7538 ;; This function calls:
  7539 ;;		___fladd
  7540 ;;		___fldiv
  7541 ;;		___flge
  7542 ;;		___flmul
  7543 ;;		___flneg
  7544 ;;		_eval_poly
  7545 ;;		_fabs
  7546 ;; This function is called by:
  7547 ;;		_asin
  7548 ;; This function uses a non-reentrant model
  7549 ;;
  7550                           
  7551                           	psect	text18
  7552  004C1A                     __ptext18:
  7553                           	opt stack 0
  7554  004C1A                     _atan:
  7555                           	opt stack 21
  7556                           
  7557                           ;incstack = 0
  7558  004C1A  C0D1  F0C1         	movff	atan@f,fabs@d
  7559  004C1E  C0D2  F0C2         	movff	atan@f+1,fabs@d+1
  7560  004C22  C0D3  F0C3         	movff	atan@f+2,fabs@d+2
  7561  004C26  C0D4  F0C4         	movff	atan@f+3,fabs@d+3
  7562  004C2A  EC2E  F02F         	call	_fabs	;wreg free
  7563  004C2E  C0C1  F19A         	movff	?_fabs,atan@val
  7564  004C32  C0C2  F19B         	movff	?_fabs+1,atan@val+1
  7565  004C36  C0C3  F19C         	movff	?_fabs+2,atan@val+2
  7566  004C3A  C0C4  F19D         	movff	?_fabs+3,atan@val+3
  7567  004C3E  0101               	movlb	1	; () banked
  7568  004C40  519A               	movf	atan@val& (0+255),w,b
  7569  004C42  0101               	movlb	1	; () banked
  7570  004C44  119B               	iorwf	(atan@val+1)& (0+255),w,b
  7571  004C46  0101               	movlb	1	; () banked
  7572  004C48  119C               	iorwf	(atan@val+2)& (0+255),w,b
  7573  004C4A  0101               	movlb	1	; () banked
  7574  004C4C  119D               	iorwf	(atan@val+3)& (0+255),w,b
  7575  004C4E  A4D8               	btfss	status,2,c
  7576  004C50  D00A               	goto	l7155
  7577                           
  7578                           ; BSR set to: 1
  7579  004C52  0E00               	movlw	0
  7580  004C54  0100               	movlb	0	; () banked
  7581  004C56  6FD1               	movwf	?_atan& (0+255),b
  7582  004C58  0E00               	movlw	0
  7583  004C5A  6FD2               	movwf	(?_atan+1)& (0+255),b
  7584  004C5C  0E00               	movlw	0
  7585  004C5E  6FD3               	movwf	(?_atan+2)& (0+255),b
  7586  004C60  0E00               	movlw	0
  7587  004C62  6FD4               	movwf	(?_atan+3)& (0+255),b
  7588                           
  7589                           ; BSR set to: 0
  7590  004C64  0012               	return	
  7591  004C66                     l7155:
  7592  004C66  0E00               	movlw	0
  7593  004C68  0100               	movlb	0	; () banked
  7594  004C6A  6FC5               	movwf	___flge@ff1& (0+255),b
  7595  004C6C  0E00               	movlw	0
  7596  004C6E  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  7597  004C70  0E80               	movlw	128
  7598  004C72  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  7599  004C74  0E3F               	movlw	63
  7600  004C76  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  7601  004C78  C19A  F0C9         	movff	atan@val,___flge@ff2
  7602  004C7C  C19B  F0CA         	movff	atan@val+1,___flge@ff2+1
  7603  004C80  C19C  F0CB         	movff	atan@val+2,___flge@ff2+2
  7604  004C84  C19D  F0CC         	movff	atan@val+3,___flge@ff2+3
  7605  004C88  ECE1  F029         	call	___flge	;wreg free
  7606  004C8C  0100               	movlb	0	; () banked
  7607  004C8E  B0D8               	btfsc	status,0,c
  7608  004C90  D002               	goto	u9210
  7609  004C92  0E01               	movlw	1
  7610  004C94  D001               	goto	u9220
  7611  004C96                     u9210:
  7612  004C96  0E00               	movlw	0
  7613  004C98                     u9220:
  7614  004C98  0101               	movlb	1	; () banked
  7615  004C9A  6F95               	movwf	atan@recip& (0+255),b
  7616  004C9C  0101               	movlb	1	; () banked
  7617  004C9E  5195               	movf	atan@recip& (0+255),w,b
  7618  004CA0  B4D8               	btfsc	status,2,c
  7619  004CA2  D01B               	goto	l7159
  7620                           
  7621                           ; BSR set to: 1
  7622  004CA4  0E00               	movlw	0
  7623  004CA6  0100               	movlb	0	; () banked
  7624  004CA8  6F77               	movwf	___fldiv@b& (0+255),b
  7625  004CAA  0E00               	movlw	0
  7626  004CAC  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7627  004CAE  0E80               	movlw	128
  7628  004CB0  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7629  004CB2  0E3F               	movlw	63
  7630  004CB4  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7631  004CB6  C19A  F07B         	movff	atan@val,___fldiv@a
  7632  004CBA  C19B  F07C         	movff	atan@val+1,___fldiv@a+1
  7633  004CBE  C19C  F07D         	movff	atan@val+2,___fldiv@a+2
  7634  004CC2  C19D  F07E         	movff	atan@val+3,___fldiv@a+3
  7635  004CC6  EC03  F01E         	call	___fldiv	;wreg free
  7636  004CCA  C077  F19A         	movff	?___fldiv,atan@val
  7637  004CCE  C078  F19B         	movff	?___fldiv+1,atan@val+1
  7638  004CD2  C079  F19C         	movff	?___fldiv+2,atan@val+2
  7639  004CD6  C07A  F19D         	movff	?___fldiv+3,atan@val+3
  7640  004CDA                     l7159:
  7641  004CDA  C19A  F090         	movff	atan@val,___flmul@b
  7642  004CDE  C19B  F091         	movff	atan@val+1,___flmul@b+1
  7643  004CE2  C19C  F092         	movff	atan@val+2,___flmul@b+2
  7644  004CE6  C19D  F093         	movff	atan@val+3,___flmul@b+3
  7645  004CEA  C19A  F094         	movff	atan@val,___flmul@a
  7646  004CEE  C19B  F095         	movff	atan@val+1,___flmul@a+1
  7647  004CF2  C19C  F096         	movff	atan@val+2,___flmul@a+2
  7648  004CF6  C19D  F097         	movff	atan@val+3,___flmul@a+3
  7649  004CFA  EC91  F017         	call	___flmul	;wreg free
  7650  004CFE  C090  F196         	movff	?___flmul,atan@val_squared
  7651  004D02  C091  F197         	movff	?___flmul+1,atan@val_squared+1
  7652  004D06  C092  F198         	movff	?___flmul+2,atan@val_squared+2
  7653  004D0A  C093  F199         	movff	?___flmul+3,atan@val_squared+3
  7654  004D0E  C196  F0BD         	movff	atan@val_squared,eval_poly@x
  7655  004D12  C197  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7656  004D16  C198  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7657  004D1A  C199  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7658  004D1E  0E19               	movlw	low atan@coeff_b
  7659  004D20  0100               	movlb	0	; () banked
  7660  004D22  6FC1               	movwf	eval_poly@d& (0+255),b
  7661  004D24  0E0D               	movlw	high atan@coeff_b
  7662  004D26  0100               	movlb	0	; () banked
  7663  004D28  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7664  004D2A  0E00               	movlw	0
  7665  004D2C  0100               	movlb	0	; () banked
  7666  004D2E  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7667  004D30  0E04               	movlw	4
  7668  004D32  6FC3               	movwf	eval_poly@n& (0+255),b
  7669  004D34  ECD6  F02B         	call	_eval_poly	;wreg free
  7670  004D38  C0BD  F18D         	movff	?_eval_poly,atan@y
  7671  004D3C  C0BE  F18E         	movff	?_eval_poly+1,atan@y+1
  7672  004D40  C0BF  F18F         	movff	?_eval_poly+2,atan@y+2
  7673  004D44  C0C0  F190         	movff	?_eval_poly+3,atan@y+3
  7674  004D48  C196  F0BD         	movff	atan@val_squared,eval_poly@x
  7675  004D4C  C197  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7676  004D50  C198  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7677  004D54  C199  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7678  004D58  0E01               	movlw	low atan@coeff_a
  7679  004D5A  0100               	movlb	0	; () banked
  7680  004D5C  6FC1               	movwf	eval_poly@d& (0+255),b
  7681  004D5E  0E0D               	movlw	high atan@coeff_a
  7682  004D60  0100               	movlb	0	; () banked
  7683  004D62  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7684  004D64  0E00               	movlw	0
  7685  004D66  0100               	movlb	0	; () banked
  7686  004D68  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7687  004D6A  0E05               	movlw	5
  7688  004D6C  6FC3               	movwf	eval_poly@n& (0+255),b
  7689  004D6E  ECD6  F02B         	call	_eval_poly	;wreg free
  7690  004D72  C0BD  F191         	movff	?_eval_poly,atan@x
  7691  004D76  C0BE  F192         	movff	?_eval_poly+1,atan@x+1
  7692  004D7A  C0BF  F193         	movff	?_eval_poly+2,atan@x+2
  7693  004D7E  C0C0  F194         	movff	?_eval_poly+3,atan@x+3
  7694  004D82  C19A  F090         	movff	atan@val,___flmul@b
  7695  004D86  C19B  F091         	movff	atan@val+1,___flmul@b+1
  7696  004D8A  C19C  F092         	movff	atan@val+2,___flmul@b+2
  7697  004D8E  C19D  F093         	movff	atan@val+3,___flmul@b+3
  7698  004D92  C18D  F07B         	movff	atan@y,___fldiv@a
  7699  004D96  C18E  F07C         	movff	atan@y+1,___fldiv@a+1
  7700  004D9A  C18F  F07D         	movff	atan@y+2,___fldiv@a+2
  7701  004D9E  C190  F07E         	movff	atan@y+3,___fldiv@a+3
  7702  004DA2  C191  F077         	movff	atan@x,___fldiv@b
  7703  004DA6  C192  F078         	movff	atan@x+1,___fldiv@b+1
  7704  004DAA  C193  F079         	movff	atan@x+2,___fldiv@b+2
  7705  004DAE  C194  F07A         	movff	atan@x+3,___fldiv@b+3
  7706  004DB2  EC03  F01E         	call	___fldiv	;wreg free
  7707  004DB6  C077  F094         	movff	?___fldiv,___flmul@a
  7708  004DBA  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  7709  004DBE  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  7710  004DC2  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  7711  004DC6  EC91  F017         	call	___flmul	;wreg free
  7712  004DCA  C090  F19A         	movff	?___flmul,atan@val
  7713  004DCE  C091  F19B         	movff	?___flmul+1,atan@val+1
  7714  004DD2  C092  F19C         	movff	?___flmul+2,atan@val+2
  7715  004DD6  C093  F19D         	movff	?___flmul+3,atan@val+3
  7716  004DDA  0101               	movlb	1	; () banked
  7717  004DDC  5195               	movf	atan@recip& (0+255),w,b
  7718  004DDE  0101               	movlb	1	; () banked
  7719  004DE0  B4D8               	btfsc	status,2,c
  7720  004DE2  D025               	goto	l7171
  7721                           
  7722                           ; BSR set to: 1
  7723  004DE4  C19A  F0BD         	movff	atan@val,___flneg@f1
  7724  004DE8  C19B  F0BE         	movff	atan@val+1,___flneg@f1+1
  7725  004DEC  C19C  F0BF         	movff	atan@val+2,___flneg@f1+2
  7726  004DF0  C19D  F0C0         	movff	atan@val+3,___flneg@f1+3
  7727  004DF4  EC4D  F02F         	call	___flneg	;wreg free
  7728  004DF8  C0BD  F0A9         	movff	?___flneg,___fladd@b
  7729  004DFC  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  7730  004E00  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  7731  004E04  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  7732  004E08  0EDB               	movlw	219
  7733  004E0A  0100               	movlb	0	; () banked
  7734  004E0C  6FAD               	movwf	___fladd@a& (0+255),b
  7735  004E0E  0E0F               	movlw	15
  7736  004E10  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  7737  004E12  0EC9               	movlw	201
  7738  004E14  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  7739  004E16  0E3F               	movlw	63
  7740  004E18  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  7741  004E1A  EC3D  F015         	call	___fladd	;wreg free
  7742  004E1E  C0A9  F19A         	movff	?___fladd,atan@val
  7743  004E22  C0AA  F19B         	movff	?___fladd+1,atan@val+1
  7744  004E26  C0AB  F19C         	movff	?___fladd+2,atan@val+2
  7745  004E2A  C0AC  F19D         	movff	?___fladd+3,atan@val+3
  7746  004E2E                     l7171:
  7747  004E2E  0100               	movlb	0	; () banked
  7748  004E30  BFD4               	btfsc	(atan@f+3)& (0+255),7,b
  7749  004E32  D009               	goto	l7175
  7750                           
  7751                           ; BSR set to: 0
  7752  004E34  C19A  F0D1         	movff	atan@val,?_atan
  7753  004E38  C19B  F0D2         	movff	atan@val+1,?_atan+1
  7754  004E3C  C19C  F0D3         	movff	atan@val+2,?_atan+2
  7755  004E40  C19D  F0D4         	movff	atan@val+3,?_atan+3
  7756  004E44  0012               	return	
  7757  004E46                     l7175:
  7758                           
  7759                           ; BSR set to: 0
  7760  004E46  C19A  F0BD         	movff	atan@val,___flneg@f1
  7761  004E4A  C19B  F0BE         	movff	atan@val+1,___flneg@f1+1
  7762  004E4E  C19C  F0BF         	movff	atan@val+2,___flneg@f1+2
  7763  004E52  C19D  F0C0         	movff	atan@val+3,___flneg@f1+3
  7764  004E56  EC4D  F02F         	call	___flneg	;wreg free
  7765  004E5A  C0BD  F0D1         	movff	?___flneg,?_atan
  7766  004E5E  C0BE  F0D2         	movff	?___flneg+1,?_atan+1
  7767  004E62  C0BF  F0D3         	movff	?___flneg+2,?_atan+2
  7768  004E66  C0C0  F0D4         	movff	?___flneg+3,?_atan+3
  7769  004E6A  0012               	return	
  7770  004E6C                     __end_of_atan:
  7771                           	opt stack 0
  7772                           tblptru	equ	0xFF8
  7773                           tblptrh	equ	0xFF7
  7774                           tblptrl	equ	0xFF6
  7775                           tablat	equ	0xFF5
  7776                           postinc0	equ	0xFEE
  7777                           wreg	equ	0xFE8
  7778                           postdec1	equ	0xFE5
  7779                           fsr1l	equ	0xFE1
  7780                           indf2	equ	0xFDF
  7781                           postinc2	equ	0xFDE
  7782                           postdec2	equ	0xFDD
  7783                           fsr2h	equ	0xFDA
  7784                           fsr2l	equ	0xFD9
  7785                           status	equ	0xFD8
  7786                           
  7787 ;; *************** function _fabs *****************
  7788 ;; Defined at:
  7789 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  7790 ;; Parameters:    Size  Location     Type
  7791 ;;  d               4   97[BANK0 ] unsigned char 
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;		None
  7794 ;; Return value:  Size  Location     Type
  7795 ;;                  4   97[BANK0 ] unsigned char 
  7796 ;; Registers used:
  7797 ;;		wreg, status,2, status,0, cstack
  7798 ;; Tracked objects:
  7799 ;;		On entry : 0/0
  7800 ;;		On exit  : 0/0
  7801 ;;		Unchanged: 0/0
  7802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7803 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7806 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7807 ;;Total ram usage:        4 bytes
  7808 ;; Hardware stack levels used:    1
  7809 ;; Hardware stack levels required when called:    5
  7810 ;; This function calls:
  7811 ;;		___flneg
  7812 ;; This function is called by:
  7813 ;;		_asin
  7814 ;;		_atan
  7815 ;; This function uses a non-reentrant model
  7816 ;;
  7817                           
  7818                           	psect	text19
  7819  005E5C                     __ptext19:
  7820                           	opt stack 0
  7821  005E5C                     _fabs:
  7822                           	opt stack 22
  7823                           
  7824                           ;incstack = 0
  7825  005E5C  0100               	movlb	0	; () banked
  7826  005E5E  AFC4               	btfss	(fabs@d+3)& (0+255),7,b
  7827  005E60  D013               	goto	l1071
  7828                           
  7829                           ; BSR set to: 0
  7830  005E62  C0C1  F0BD         	movff	fabs@d,___flneg@f1
  7831  005E66  C0C2  F0BE         	movff	fabs@d+1,___flneg@f1+1
  7832  005E6A  C0C3  F0BF         	movff	fabs@d+2,___flneg@f1+2
  7833  005E6E  C0C4  F0C0         	movff	fabs@d+3,___flneg@f1+3
  7834  005E72  EC4D  F02F         	call	___flneg	;wreg free
  7835  005E76  C0BD  F0C1         	movff	?___flneg,?_fabs
  7836  005E7A  C0BE  F0C2         	movff	?___flneg+1,?_fabs+1
  7837  005E7E  C0BF  F0C3         	movff	?___flneg+2,?_fabs+2
  7838  005E82  C0C0  F0C4         	movff	?___flneg+3,?_fabs+3
  7839  005E86  0012               	return	
  7840  005E88                     l1071:
  7841                           
  7842                           ; BSR set to: 0
  7843  005E88  C0C1  F0C1         	movff	fabs@d,?_fabs
  7844  005E8C  C0C2  F0C2         	movff	fabs@d+1,?_fabs+1
  7845  005E90  C0C3  F0C3         	movff	fabs@d+2,?_fabs+2
  7846  005E94  C0C4  F0C4         	movff	fabs@d+3,?_fabs+3
  7847  005E98  0012               	return		;funcret
  7848  005E9A                     __end_of_fabs:
  7849                           	opt stack 0
  7850                           tblptru	equ	0xFF8
  7851                           tblptrh	equ	0xFF7
  7852                           tblptrl	equ	0xFF6
  7853                           tablat	equ	0xFF5
  7854                           postinc0	equ	0xFEE
  7855                           wreg	equ	0xFE8
  7856                           postdec1	equ	0xFE5
  7857                           fsr1l	equ	0xFE1
  7858                           indf2	equ	0xFDF
  7859                           postinc2	equ	0xFDE
  7860                           postdec2	equ	0xFDD
  7861                           fsr2h	equ	0xFDA
  7862                           fsr2l	equ	0xFD9
  7863                           status	equ	0xFD8
  7864                           
  7865 ;; *************** function ___flneg *****************
  7866 ;; Defined at:
  7867 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  7868 ;; Parameters:    Size  Location     Type
  7869 ;;  f1              4   93[BANK0 ] unsigned char 
  7870 ;; Auto vars:     Size  Location     Type
  7871 ;;		None
  7872 ;; Return value:  Size  Location     Type
  7873 ;;                  4   93[BANK0 ] unsigned char 
  7874 ;; Registers used:
  7875 ;;		wreg, status,2, status,0
  7876 ;; Tracked objects:
  7877 ;;		On entry : 0/0
  7878 ;;		On exit  : 0/0
  7879 ;;		Unchanged: 0/0
  7880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7881 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7884 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7885 ;;Total ram usage:        4 bytes
  7886 ;; Hardware stack levels used:    1
  7887 ;; Hardware stack levels required when called:    4
  7888 ;; This function calls:
  7889 ;;		Nothing
  7890 ;; This function is called by:
  7891 ;;		_park_routine
  7892 ;;		_matematica
  7893 ;;		_asin
  7894 ;;		_atan
  7895 ;;		_fabs
  7896 ;;		_sin
  7897 ;; This function uses a non-reentrant model
  7898 ;;
  7899                           
  7900                           	psect	text20
  7901  005E9A                     __ptext20:
  7902                           	opt stack 0
  7903  005E9A                     ___flneg:
  7904                           	opt stack 22
  7905                           
  7906                           ;incstack = 0
  7907  005E9A  0100               	movlb	0	; () banked
  7908  005E9C  51BD               	movf	___flneg@f1& (0+255),w,b
  7909  005E9E  0100               	movlb	0	; () banked
  7910  005EA0  11BE               	iorwf	(___flneg@f1+1)& (0+255),w,b
  7911  005EA2  0100               	movlb	0	; () banked
  7912  005EA4  11BF               	iorwf	(___flneg@f1+2)& (0+255),w,b
  7913  005EA6  0100               	movlb	0	; () banked
  7914  005EA8  11C0               	iorwf	(___flneg@f1+3)& (0+255),w,b
  7915  005EAA  B4D8               	btfsc	status,2,c
  7916  005EAC  D009               	goto	l6519
  7917                           
  7918                           ; BSR set to: 0
  7919  005EAE  0E00               	movlw	0
  7920  005EB0  0100               	movlb	0	; () banked
  7921  005EB2  1BBD               	xorwf	___flneg@f1& (0+255),f,b
  7922  005EB4  0E00               	movlw	0
  7923  005EB6  1BBE               	xorwf	(___flneg@f1+1)& (0+255),f,b
  7924  005EB8  0E00               	movlw	0
  7925  005EBA  1BBF               	xorwf	(___flneg@f1+2)& (0+255),f,b
  7926  005EBC  0E80               	movlw	128
  7927  005EBE  1BC0               	xorwf	(___flneg@f1+3)& (0+255),f,b
  7928  005EC0                     l6519:
  7929                           
  7930                           ; BSR set to: 0
  7931  005EC0  C0BD  F0BD         	movff	___flneg@f1,?___flneg
  7932  005EC4  C0BE  F0BE         	movff	___flneg@f1+1,?___flneg+1
  7933  005EC8  C0BF  F0BF         	movff	___flneg@f1+2,?___flneg+2
  7934  005ECC  C0C0  F0C0         	movff	___flneg@f1+3,?___flneg+3
  7935  005ED0  0012               	return	
  7936  005ED2                     __end_of___flneg:
  7937                           	opt stack 0
  7938                           tblptru	equ	0xFF8
  7939                           tblptrh	equ	0xFF7
  7940                           tblptrl	equ	0xFF6
  7941                           tablat	equ	0xFF5
  7942                           postinc0	equ	0xFEE
  7943                           wreg	equ	0xFE8
  7944                           postdec1	equ	0xFE5
  7945                           fsr1l	equ	0xFE1
  7946                           indf2	equ	0xFDF
  7947                           postinc2	equ	0xFDE
  7948                           postdec2	equ	0xFDD
  7949                           fsr2h	equ	0xFDA
  7950                           fsr2l	equ	0xFD9
  7951                           status	equ	0xFD8
  7952                           
  7953 ;; *************** function _eval_poly *****************
  7954 ;; Defined at:
  7955 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;  x               4   93[BANK0 ] unsigned char 
  7958 ;;  d               2   97[BANK0 ] PTR const 
  7959 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
  7960 ;;  n               2   99[BANK0 ] int 
  7961 ;; Auto vars:     Size  Location     Type
  7962 ;;  res             4  105[BANK0 ] int 
  7963 ;; Return value:  Size  Location     Type
  7964 ;;                  4   93[BANK0 ] int 
  7965 ;; Registers used:
  7966 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7967 ;; Tracked objects:
  7968 ;;		On entry : 0/0
  7969 ;;		On exit  : 0/0
  7970 ;;		Unchanged: 0/0
  7971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7972 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7973 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7974 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7975 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7976 ;;Total ram usage:       16 bytes
  7977 ;; Hardware stack levels used:    1
  7978 ;; Hardware stack levels required when called:    5
  7979 ;; This function calls:
  7980 ;;		___fladd
  7981 ;;		___flmul
  7982 ;; This function is called by:
  7983 ;;		_atan
  7984 ;;		_sin
  7985 ;; This function uses a non-reentrant model
  7986 ;;
  7987                           
  7988                           	psect	text21
  7989  0057AC                     __ptext21:
  7990                           	opt stack 0
  7991  0057AC                     _eval_poly:
  7992                           	opt stack 21
  7993                           
  7994                           ; BSR set to: 0
  7995                           ;incstack = 0
  7996  0057AC  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  7997  0057B0  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  7998  0057B4  0100               	movlb	0	; () banked
  7999  0057B6  90D8               	bcf	status,0,c
  8000  0057B8  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8001  0057BA  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8002  0057BC  0100               	movlb	0	; () banked
  8003  0057BE  90D8               	bcf	status,0,c
  8004  0057C0  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8005  0057C2  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8006  0057C4  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  8007  0057C8  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  8008  0057CC  0100               	movlb	0	; () banked
  8009  0057CE  51C5               	movf	??_eval_poly& (0+255),w,b
  8010  0057D0  0100               	movlb	0	; () banked
  8011  0057D2  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  8012  0057D4  0100               	movlb	0	; () banked
  8013  0057D6  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  8014  0057D8  0100               	movlb	0	; () banked
  8015  0057DA  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8016  0057DC  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  8017  0057E0  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  8018  0057E4                     	if	0	;tblptru may be non-zero
  8019  0057E4                     	endif
  8020  0057E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8021  0057E4  0E00               	movlw	low (__mediumconst shr (0+16))
  8022  0057E6  6EF8               	movwf	tblptru,c
  8023  0057E8                     	endif
  8024  0057E8  0009               	tblrd		*+
  8025  0057EA  CFF5 F0C9          	movff	tablat,eval_poly@res
  8026  0057EE  0009               	tblrd		*+
  8027  0057F0  CFF5 F0CA          	movff	tablat,eval_poly@res+1
  8028  0057F4  0009               	tblrd		*+
  8029  0057F6  CFF5 F0CB          	movff	tablat,eval_poly@res+2
  8030  0057FA  000A               	tblrd		*-
  8031  0057FC  CFF5 F0CC          	movff	tablat,eval_poly@res+3
  8032  005800  D052               	goto	l6777
  8033  005802                     l6775:
  8034                           
  8035                           ; BSR set to: 0
  8036  005802  C0C9  F094         	movff	eval_poly@res,___flmul@a
  8037  005806  C0CA  F095         	movff	eval_poly@res+1,___flmul@a+1
  8038  00580A  C0CB  F096         	movff	eval_poly@res+2,___flmul@a+2
  8039  00580E  C0CC  F097         	movff	eval_poly@res+3,___flmul@a+3
  8040  005812  C0BD  F090         	movff	eval_poly@x,___flmul@b
  8041  005816  C0BE  F091         	movff	eval_poly@x+1,___flmul@b+1
  8042  00581A  C0BF  F092         	movff	eval_poly@x+2,___flmul@b+2
  8043  00581E  C0C0  F093         	movff	eval_poly@x+3,___flmul@b+3
  8044  005822  EC91  F017         	call	___flmul	;wreg free
  8045  005826  C090  F0A9         	movff	?___flmul,___fladd@b
  8046  00582A  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  8047  00582E  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  8048  005832  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  8049  005836  0100               	movlb	0	; () banked
  8050  005838  07C3               	decf	eval_poly@n& (0+255),f,b
  8051  00583A  A0D8               	btfss	status,0,c
  8052  00583C  07C4               	decf	(eval_poly@n+1)& (0+255),f,b
  8053  00583E  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  8054  005842  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  8055  005846  0100               	movlb	0	; () banked
  8056  005848  90D8               	bcf	status,0,c
  8057  00584A  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8058  00584C  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8059  00584E  0100               	movlb	0	; () banked
  8060  005850  90D8               	bcf	status,0,c
  8061  005852  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8062  005854  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8063  005856  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  8064  00585A  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  8065  00585E  0100               	movlb	0	; () banked
  8066  005860  51C5               	movf	??_eval_poly& (0+255),w,b
  8067  005862  0100               	movlb	0	; () banked
  8068  005864  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  8069  005866  0100               	movlb	0	; () banked
  8070  005868  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  8071  00586A  0100               	movlb	0	; () banked
  8072  00586C  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8073  00586E  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  8074  005872  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  8075  005876                     	if	0	;tblptru may be non-zero
  8076  005876                     	endif
  8077  005876                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8078  005876  0E00               	movlw	low (__mediumconst shr (0+16))
  8079  005878  6EF8               	movwf	tblptru,c
  8080  00587A                     	endif
  8081  00587A  0009               	tblrd		*+
  8082  00587C  CFF5 F0AD          	movff	tablat,___fladd@a
  8083  005880  0009               	tblrd		*+
  8084  005882  CFF5 F0AE          	movff	tablat,___fladd@a+1
  8085  005886  0009               	tblrd		*+
  8086  005888  CFF5 F0AF          	movff	tablat,___fladd@a+2
  8087  00588C  000A               	tblrd		*-
  8088  00588E  CFF5 F0B0          	movff	tablat,___fladd@a+3
  8089  005892  EC3D  F015         	call	___fladd	;wreg free
  8090  005896  C0A9  F0C9         	movff	?___fladd,eval_poly@res
  8091  00589A  C0AA  F0CA         	movff	?___fladd+1,eval_poly@res+1
  8092  00589E  C0AB  F0CB         	movff	?___fladd+2,eval_poly@res+2
  8093  0058A2  C0AC  F0CC         	movff	?___fladd+3,eval_poly@res+3
  8094  0058A6                     l6777:
  8095  0058A6  0100               	movlb	0	; () banked
  8096  0058A8  51C3               	movf	eval_poly@n& (0+255),w,b
  8097  0058AA  0100               	movlb	0	; () banked
  8098  0058AC  11C4               	iorwf	(eval_poly@n+1)& (0+255),w,b
  8099  0058AE  A4D8               	btfss	status,2,c
  8100  0058B0  D7A8               	goto	l6775
  8101                           
  8102                           ; BSR set to: 0
  8103  0058B2  C0C9  F0BD         	movff	eval_poly@res,?_eval_poly
  8104  0058B6  C0CA  F0BE         	movff	eval_poly@res+1,?_eval_poly+1
  8105  0058BA  C0CB  F0BF         	movff	eval_poly@res+2,?_eval_poly+2
  8106  0058BE  C0CC  F0C0         	movff	eval_poly@res+3,?_eval_poly+3
  8107                           
  8108                           ; BSR set to: 0
  8109  0058C2  0012               	return		;funcret
  8110  0058C4                     __end_of_eval_poly:
  8111                           	opt stack 0
  8112                           tblptru	equ	0xFF8
  8113                           tblptrh	equ	0xFF7
  8114                           tblptrl	equ	0xFF6
  8115                           tablat	equ	0xFF5
  8116                           postinc0	equ	0xFEE
  8117                           wreg	equ	0xFE8
  8118                           postdec1	equ	0xFE5
  8119                           fsr1l	equ	0xFE1
  8120                           indf2	equ	0xFDF
  8121                           postinc2	equ	0xFDE
  8122                           postdec2	equ	0xFDD
  8123                           fsr2h	equ	0xFDA
  8124                           fsr2l	equ	0xFD9
  8125                           status	equ	0xFD8
  8126                           
  8127 ;; *************** function ___flmul *****************
  8128 ;; Defined at:
  8129 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8130 ;; Parameters:    Size  Location     Type
  8131 ;;  b               4   48[BANK0 ] int 
  8132 ;;  a               4   52[BANK0 ] int 
  8133 ;; Auto vars:     Size  Location     Type
  8134 ;;  prod            4   67[BANK0 ] struct .
  8135 ;;  grs             4   62[BANK0 ] unsigned long 
  8136 ;;  temp            2   71[BANK0 ] struct .
  8137 ;;  bexp            1   66[BANK0 ] unsigned char 
  8138 ;;  aexp            1   61[BANK0 ] unsigned char 
  8139 ;;  sign            1   60[BANK0 ] unsigned char 
  8140 ;; Return value:  Size  Location     Type
  8141 ;;                  4   48[BANK0 ] unsigned char 
  8142 ;; Registers used:
  8143 ;;		wreg, status,2, status,0, prodl, prodh
  8144 ;; Tracked objects:
  8145 ;;		On entry : 0/0
  8146 ;;		On exit  : 0/0
  8147 ;;		Unchanged: 0/0
  8148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8149 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8150 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8151 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8152 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8153 ;;Total ram usage:       25 bytes
  8154 ;; Hardware stack levels used:    1
  8155 ;; Hardware stack levels required when called:    4
  8156 ;; This function calls:
  8157 ;;		Nothing
  8158 ;; This function is called by:
  8159 ;;		_parallelo
  8160 ;;		_matematica
  8161 ;;		_asin
  8162 ;;		_atan
  8163 ;;		_eval_poly
  8164 ;;		_sin
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           
  8168                           	psect	text22
  8169  002F22                     __ptext22:
  8170                           	opt stack 0
  8171  002F22                     ___flmul:
  8172                           	opt stack 21
  8173                           
  8174                           ; BSR set to: 0
  8175                           ;incstack = 0
  8176  002F22  0100               	movlb	0	; () banked
  8177  002F24  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8178  002F26  0B80               	andlw	128
  8179  002F28  0100               	movlb	0	; () banked
  8180  002F2A  6F9C               	movwf	___flmul@sign& (0+255),b
  8181  002F2C  0100               	movlb	0	; () banked
  8182  002F2E  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8183  002F30  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  8184  002F32  0100               	movlb	0	; () banked
  8185  002F34  6FA2               	movwf	___flmul@bexp& (0+255),b
  8186                           
  8187                           ; BSR set to: 0
  8188  002F36  0100               	movlb	0	; () banked
  8189  002F38  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  8190  002F3A  D002               	goto	l6369
  8191                           
  8192                           ; BSR set to: 0
  8193  002F3C  0100               	movlb	0	; () banked
  8194  002F3E  81A2               	bsf	___flmul@bexp& (0+255),0,b
  8195  002F40                     l6369:
  8196                           
  8197                           ; BSR set to: 0
  8198  002F40  0100               	movlb	0	; () banked
  8199  002F42  51A2               	movf	___flmul@bexp& (0+255),w,b
  8200  002F44  0100               	movlb	0	; () banked
  8201  002F46  B4D8               	btfsc	status,2,c
  8202  002F48  D010               	goto	l6377
  8203                           
  8204                           ; BSR set to: 0
  8205  002F4A  0100               	movlb	0	; () banked
  8206  002F4C  29A2               	incf	___flmul@bexp& (0+255),w,b
  8207  002F4E  A4D8               	btfss	status,2,c
  8208  002F50  D009               	goto	l6375
  8209                           
  8210                           ; BSR set to: 0
  8211  002F52  0E00               	movlw	0
  8212  002F54  0100               	movlb	0	; () banked
  8213  002F56  6F90               	movwf	___flmul@b& (0+255),b
  8214  002F58  0E00               	movlw	0
  8215  002F5A  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8216  002F5C  0E00               	movlw	0
  8217  002F5E  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8218  002F60  0E00               	movlw	0
  8219  002F62  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8220  002F64                     l6375:
  8221                           
  8222                           ; BSR set to: 0
  8223  002F64  0100               	movlb	0	; () banked
  8224  002F66  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  8225  002F68  D009               	goto	l6379
  8226  002F6A                     l6377:
  8227                           
  8228                           ; BSR set to: 0
  8229  002F6A  0E00               	movlw	0
  8230  002F6C  0100               	movlb	0	; () banked
  8231  002F6E  6F90               	movwf	___flmul@b& (0+255),b
  8232  002F70  0E00               	movlw	0
  8233  002F72  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8234  002F74  0E00               	movlw	0
  8235  002F76  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8236  002F78  0E00               	movlw	0
  8237  002F7A  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8238  002F7C                     l6379:
  8239                           
  8240                           ; BSR set to: 0
  8241  002F7C  0100               	movlb	0	; () banked
  8242  002F7E  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8243  002F80  0B80               	andlw	128
  8244  002F82  0100               	movlb	0	; () banked
  8245  002F84  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  8246                           
  8247                           ; BSR set to: 0
  8248  002F86  0100               	movlb	0	; () banked
  8249  002F88  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8250  002F8A  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  8251  002F8C  0100               	movlb	0	; () banked
  8252  002F8E  6F9D               	movwf	___flmul@aexp& (0+255),b
  8253                           
  8254                           ; BSR set to: 0
  8255  002F90  0100               	movlb	0	; () banked
  8256  002F92  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  8257  002F94  D002               	goto	l6387
  8258                           
  8259                           ; BSR set to: 0
  8260  002F96  0100               	movlb	0	; () banked
  8261  002F98  819D               	bsf	___flmul@aexp& (0+255),0,b
  8262  002F9A                     l6387:
  8263                           
  8264                           ; BSR set to: 0
  8265  002F9A  0100               	movlb	0	; () banked
  8266  002F9C  519D               	movf	___flmul@aexp& (0+255),w,b
  8267  002F9E  0100               	movlb	0	; () banked
  8268  002FA0  B4D8               	btfsc	status,2,c
  8269  002FA2  D010               	goto	l6395
  8270                           
  8271                           ; BSR set to: 0
  8272  002FA4  0100               	movlb	0	; () banked
  8273  002FA6  299D               	incf	___flmul@aexp& (0+255),w,b
  8274  002FA8  A4D8               	btfss	status,2,c
  8275  002FAA  D009               	goto	l6393
  8276                           
  8277                           ; BSR set to: 0
  8278  002FAC  0E00               	movlw	0
  8279  002FAE  0100               	movlb	0	; () banked
  8280  002FB0  6F94               	movwf	___flmul@a& (0+255),b
  8281  002FB2  0E00               	movlw	0
  8282  002FB4  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8283  002FB6  0E00               	movlw	0
  8284  002FB8  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8285  002FBA  0E00               	movlw	0
  8286  002FBC  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8287  002FBE                     l6393:
  8288                           
  8289                           ; BSR set to: 0
  8290  002FBE  0100               	movlb	0	; () banked
  8291  002FC0  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  8292  002FC2  D009               	goto	l1416
  8293  002FC4                     l6395:
  8294                           
  8295                           ; BSR set to: 0
  8296  002FC4  0E00               	movlw	0
  8297  002FC6  0100               	movlb	0	; () banked
  8298  002FC8  6F94               	movwf	___flmul@a& (0+255),b
  8299  002FCA  0E00               	movlw	0
  8300  002FCC  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8301  002FCE  0E00               	movlw	0
  8302  002FD0  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8303  002FD2  0E00               	movlw	0
  8304  002FD4  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8305  002FD6                     l1416:
  8306                           
  8307                           ; BSR set to: 0
  8308  002FD6  0100               	movlb	0	; () banked
  8309  002FD8  519D               	movf	___flmul@aexp& (0+255),w,b
  8310  002FDA  0100               	movlb	0	; () banked
  8311  002FDC  B4D8               	btfsc	status,2,c
  8312  002FDE  D005               	goto	l6399
  8313                           
  8314                           ; BSR set to: 0
  8315  002FE0  0100               	movlb	0	; () banked
  8316  002FE2  51A2               	movf	___flmul@bexp& (0+255),w,b
  8317  002FE4  0100               	movlb	0	; () banked
  8318  002FE6  A4D8               	btfss	status,2,c
  8319  002FE8  D00A               	goto	l6403
  8320  002FEA                     l6399:
  8321                           
  8322                           ; BSR set to: 0
  8323  002FEA  0E00               	movlw	0
  8324  002FEC  0100               	movlb	0	; () banked
  8325  002FEE  6F90               	movwf	?___flmul& (0+255),b
  8326  002FF0  0E00               	movlw	0
  8327  002FF2  6F91               	movwf	(?___flmul+1)& (0+255),b
  8328  002FF4  0E00               	movlw	0
  8329  002FF6  6F92               	movwf	(?___flmul+2)& (0+255),b
  8330  002FF8  0E00               	movlw	0
  8331  002FFA  6F93               	movwf	(?___flmul+3)& (0+255),b
  8332                           
  8333                           ; BSR set to: 0
  8334  002FFC  0012               	return	
  8335  002FFE                     l6403:
  8336                           
  8337                           ; BSR set to: 0
  8338  002FFE  0100               	movlb	0	; () banked
  8339  003000  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8340  003002  0100               	movlb	0	; () banked
  8341  003004  0390               	mulwf	___flmul@b& (0+255),b
  8342  003006  CFF3 F0A7          	movff	prodl,___flmul@temp
  8343  00300A  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8344                           
  8345                           ; BSR set to: 0
  8346  00300E  0100               	movlb	0	; () banked
  8347  003010  51A7               	movf	___flmul@temp& (0+255),w,b
  8348  003012  0100               	movlb	0	; () banked
  8349  003014  6F9E               	movwf	___flmul@grs& (0+255),b
  8350  003016  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  8351  003018  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  8352  00301A  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  8353                           
  8354                           ; BSR set to: 0
  8355  00301C  0100               	movlb	0	; () banked
  8356  00301E  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8357  003020  0100               	movlb	0	; () banked
  8358  003022  6FA3               	movwf	___flmul@prod& (0+255),b
  8359  003024  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  8360  003026  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  8361  003028  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  8362  00302A  0100               	movlb	0	; () banked
  8363  00302C  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8364  00302E  0100               	movlb	0	; () banked
  8365  003030  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8366  003032  CFF3 F0A7          	movff	prodl,___flmul@temp
  8367  003036  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8368                           
  8369                           ; BSR set to: 0
  8370  00303A  0100               	movlb	0	; () banked
  8371  00303C  51A7               	movf	___flmul@temp& (0+255),w,b
  8372  00303E  0100               	movlb	0	; () banked
  8373  003040  279E               	addwf	___flmul@grs& (0+255),f,b
  8374  003042  0E00               	movlw	0
  8375  003044  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8376  003046  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8377  003048  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8378                           
  8379                           ; BSR set to: 0
  8380  00304A  0100               	movlb	0	; () banked
  8381  00304C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8382  00304E  0100               	movlb	0	; () banked
  8383  003050  27A3               	addwf	___flmul@prod& (0+255),f,b
  8384  003052  0E00               	movlw	0
  8385  003054  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8386  003056  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8387  003058  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8388  00305A  0100               	movlb	0	; () banked
  8389  00305C  5194               	movf	___flmul@a& (0+255),w,b
  8390  00305E  0100               	movlb	0	; () banked
  8391  003060  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8392  003062  CFF3 F0A7          	movff	prodl,___flmul@temp
  8393  003066  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8394                           
  8395                           ; BSR set to: 0
  8396  00306A  0100               	movlb	0	; () banked
  8397  00306C  51A7               	movf	___flmul@temp& (0+255),w,b
  8398  00306E  0100               	movlb	0	; () banked
  8399  003070  279E               	addwf	___flmul@grs& (0+255),f,b
  8400  003072  0E00               	movlw	0
  8401  003074  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8402  003076  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8403  003078  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8404                           
  8405                           ; BSR set to: 0
  8406  00307A  0100               	movlb	0	; () banked
  8407  00307C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8408  00307E  0100               	movlb	0	; () banked
  8409  003080  27A3               	addwf	___flmul@prod& (0+255),f,b
  8410  003082  0E00               	movlw	0
  8411  003084  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8412  003086  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8413  003088  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8414                           
  8415                           ; BSR set to: 0
  8416  00308A  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8417  00308E  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8418  003092  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8419  003096  0100               	movlb	0	; () banked
  8420  003098  6B9E               	clrf	___flmul@grs& (0+255),b
  8421                           
  8422                           ; BSR set to: 0
  8423  00309A  0100               	movlb	0	; () banked
  8424  00309C  5194               	movf	___flmul@a& (0+255),w,b
  8425  00309E  0100               	movlb	0	; () banked
  8426  0030A0  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8427  0030A2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8428  0030A6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8429                           
  8430                           ; BSR set to: 0
  8431  0030AA  0100               	movlb	0	; () banked
  8432  0030AC  51A7               	movf	___flmul@temp& (0+255),w,b
  8433  0030AE  0100               	movlb	0	; () banked
  8434  0030B0  279E               	addwf	___flmul@grs& (0+255),f,b
  8435  0030B2  0100               	movlb	0	; () banked
  8436  0030B4  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8437  0030B6  0100               	movlb	0	; () banked
  8438  0030B8  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8439  0030BA  0E00               	movlw	0
  8440  0030BC  0100               	movlb	0	; () banked
  8441  0030BE  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8442  0030C0  0E00               	movlw	0
  8443  0030C2  0100               	movlb	0	; () banked
  8444  0030C4  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8445                           
  8446                           ; BSR set to: 0
  8447  0030C6  0100               	movlb	0	; () banked
  8448  0030C8  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8449  0030CA  0100               	movlb	0	; () banked
  8450  0030CC  0390               	mulwf	___flmul@b& (0+255),b
  8451  0030CE  CFF3 F0A7          	movff	prodl,___flmul@temp
  8452  0030D2  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8453                           
  8454                           ; BSR set to: 0
  8455  0030D6  0100               	movlb	0	; () banked
  8456  0030D8  51A7               	movf	___flmul@temp& (0+255),w,b
  8457  0030DA  0100               	movlb	0	; () banked
  8458  0030DC  279E               	addwf	___flmul@grs& (0+255),f,b
  8459  0030DE  0100               	movlb	0	; () banked
  8460  0030E0  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8461  0030E2  0100               	movlb	0	; () banked
  8462  0030E4  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8463  0030E6  0E00               	movlw	0
  8464  0030E8  0100               	movlb	0	; () banked
  8465  0030EA  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8466  0030EC  0E00               	movlw	0
  8467  0030EE  0100               	movlb	0	; () banked
  8468  0030F0  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8469                           
  8470                           ; BSR set to: 0
  8471  0030F2  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8472  0030F6  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8473  0030FA  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8474  0030FE  0100               	movlb	0	; () banked
  8475  003100  6B9E               	clrf	___flmul@grs& (0+255),b
  8476  003102  0100               	movlb	0	; () banked
  8477  003104  5194               	movf	___flmul@a& (0+255),w,b
  8478  003106  0100               	movlb	0	; () banked
  8479  003108  0390               	mulwf	___flmul@b& (0+255),b
  8480  00310A  CFF3 F0A7          	movff	prodl,___flmul@temp
  8481  00310E  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8482                           
  8483                           ; BSR set to: 0
  8484  003112  0100               	movlb	0	; () banked
  8485  003114  51A7               	movf	___flmul@temp& (0+255),w,b
  8486  003116  0100               	movlb	0	; () banked
  8487  003118  279E               	addwf	___flmul@grs& (0+255),f,b
  8488  00311A  0100               	movlb	0	; () banked
  8489  00311C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8490  00311E  0100               	movlb	0	; () banked
  8491  003120  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8492  003122  0E00               	movlw	0
  8493  003124  0100               	movlb	0	; () banked
  8494  003126  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8495  003128  0E00               	movlw	0
  8496  00312A  0100               	movlb	0	; () banked
  8497  00312C  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8498                           
  8499                           ; BSR set to: 0
  8500  00312E  0100               	movlb	0	; () banked
  8501  003130  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8502  003132  0100               	movlb	0	; () banked
  8503  003134  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8504  003136  CFF3 F0A7          	movff	prodl,___flmul@temp
  8505  00313A  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8506  00313E  0100               	movlb	0	; () banked
  8507  003140  51A7               	movf	___flmul@temp& (0+255),w,b
  8508  003142  0100               	movlb	0	; () banked
  8509  003144  27A3               	addwf	___flmul@prod& (0+255),f,b
  8510  003146  0100               	movlb	0	; () banked
  8511  003148  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8512  00314A  0100               	movlb	0	; () banked
  8513  00314C  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8514  00314E  0E00               	movlw	0
  8515  003150  0100               	movlb	0	; () banked
  8516  003152  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8517  003154  0E00               	movlw	0
  8518  003156  0100               	movlb	0	; () banked
  8519  003158  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8520                           
  8521                           ; BSR set to: 0
  8522  00315A  0100               	movlb	0	; () banked
  8523  00315C  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8524  00315E  0100               	movlb	0	; () banked
  8525  003160  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8526  003162  CFF3 F0A7          	movff	prodl,___flmul@temp
  8527  003166  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8528                           
  8529                           ; BSR set to: 0
  8530  00316A  0100               	movlb	0	; () banked
  8531  00316C  51A7               	movf	___flmul@temp& (0+255),w,b
  8532  00316E  0100               	movlb	0	; () banked
  8533  003170  27A3               	addwf	___flmul@prod& (0+255),f,b
  8534  003172  0100               	movlb	0	; () banked
  8535  003174  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8536  003176  0100               	movlb	0	; () banked
  8537  003178  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8538  00317A  0E00               	movlw	0
  8539  00317C  0100               	movlb	0	; () banked
  8540  00317E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8541  003180  0E00               	movlw	0
  8542  003182  0100               	movlb	0	; () banked
  8543  003184  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8544  003186  0100               	movlb	0	; () banked
  8545  003188  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8546  00318A  0100               	movlb	0	; () banked
  8547  00318C  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8548  00318E  CFF3 F0A7          	movff	prodl,___flmul@temp
  8549  003192  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8550                           
  8551                           ; BSR set to: 0
  8552  003196  0100               	movlb	0	; () banked
  8553  003198  51A7               	movf	___flmul@temp& (0+255),w,b
  8554  00319A  0100               	movlb	0	; () banked
  8555  00319C  6F98               	movwf	??___flmul& (0+255),b
  8556  00319E  0100               	movlb	0	; () banked
  8557  0031A0  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8558  0031A2  0100               	movlb	0	; () banked
  8559  0031A4  6F99               	movwf	(??___flmul+1)& (0+255),b
  8560  0031A6  0100               	movlb	0	; () banked
  8561  0031A8  6B9A               	clrf	(??___flmul+2)& (0+255),b
  8562  0031AA  0100               	movlb	0	; () banked
  8563  0031AC  6B9B               	clrf	(??___flmul+3)& (0+255),b
  8564  0031AE  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  8565  0031B2  C099  F09A         	movff	??___flmul+1,??___flmul+2
  8566  0031B6  C098  F099         	movff	??___flmul,??___flmul+1
  8567  0031BA  0100               	movlb	0	; () banked
  8568  0031BC  6B98               	clrf	??___flmul& (0+255),b
  8569  0031BE  0100               	movlb	0	; () banked
  8570  0031C0  5198               	movf	??___flmul& (0+255),w,b
  8571  0031C2  0100               	movlb	0	; () banked
  8572  0031C4  27A3               	addwf	___flmul@prod& (0+255),f,b
  8573  0031C6  0100               	movlb	0	; () banked
  8574  0031C8  5199               	movf	(??___flmul+1)& (0+255),w,b
  8575  0031CA  0100               	movlb	0	; () banked
  8576  0031CC  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8577  0031CE  0100               	movlb	0	; () banked
  8578  0031D0  519A               	movf	(??___flmul+2)& (0+255),w,b
  8579  0031D2  0100               	movlb	0	; () banked
  8580  0031D4  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8581  0031D6  0100               	movlb	0	; () banked
  8582  0031D8  519B               	movf	(??___flmul+3)& (0+255),w,b
  8583  0031DA  0100               	movlb	0	; () banked
  8584  0031DC  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8585                           
  8586                           ; BSR set to: 0
  8587  0031DE  C09E  F098         	movff	___flmul@grs,??___flmul
  8588  0031E2  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  8589  0031E6  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  8590  0031EA  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  8591  0031EE  0E19               	movlw	25
  8592  0031F0  D006               	goto	u8020
  8593  0031F2                     u8025:
  8594  0031F2  0100               	movlb	0	; () banked
  8595  0031F4  90D8               	bcf	status,0,c
  8596  0031F6  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8597  0031F8  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8598  0031FA  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8599  0031FC  3398               	rrcf	??___flmul& (0+255),f,b
  8600  0031FE                     u8020:
  8601  0031FE  2EE8               	decfsz	wreg,f,c
  8602  003200  D7F8               	goto	u8025
  8603  003202  0100               	movlb	0	; () banked
  8604  003204  5198               	movf	??___flmul& (0+255),w,b
  8605  003206  0100               	movlb	0	; () banked
  8606  003208  27A3               	addwf	___flmul@prod& (0+255),f,b
  8607  00320A  0100               	movlb	0	; () banked
  8608  00320C  5199               	movf	(??___flmul+1)& (0+255),w,b
  8609  00320E  0100               	movlb	0	; () banked
  8610  003210  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8611  003212  0100               	movlb	0	; () banked
  8612  003214  519A               	movf	(??___flmul+2)& (0+255),w,b
  8613  003216  0100               	movlb	0	; () banked
  8614  003218  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8615  00321A  0100               	movlb	0	; () banked
  8616  00321C  519B               	movf	(??___flmul+3)& (0+255),w,b
  8617  00321E  0100               	movlb	0	; () banked
  8618  003220  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8619                           
  8620                           ; BSR set to: 0
  8621  003222  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8622  003226  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8623  00322A  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8624  00322E  0100               	movlb	0	; () banked
  8625  003230  6B9E               	clrf	___flmul@grs& (0+255),b
  8626                           
  8627                           ; BSR set to: 0
  8628  003232  0100               	movlb	0	; () banked
  8629  003234  519D               	movf	___flmul@aexp& (0+255),w,b
  8630  003236  C0A2  F098         	movff	___flmul@bexp,??___flmul
  8631  00323A  0100               	movlb	0	; () banked
  8632  00323C  6B99               	clrf	(??___flmul+1)& (0+255),b
  8633  00323E  0100               	movlb	0	; () banked
  8634  003240  2798               	addwf	??___flmul& (0+255),f,b
  8635  003242  0E00               	movlw	0
  8636  003244  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  8637  003246  0E82               	movlw	130
  8638  003248  0100               	movlb	0	; () banked
  8639  00324A  2598               	addwf	??___flmul& (0+255),w,b
  8640  00324C  0100               	movlb	0	; () banked
  8641  00324E  6FA7               	movwf	___flmul@temp& (0+255),b
  8642  003250  0EFF               	movlw	255
  8643  003252  0100               	movlb	0	; () banked
  8644  003254  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  8645  003256  0100               	movlb	0	; () banked
  8646  003258  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  8647  00325A  D015               	goto	l6451
  8648  00325C                     l6445:
  8649                           
  8650                           ; BSR set to: 0
  8651  00325C  0100               	movlb	0	; () banked
  8652  00325E  90D8               	bcf	status,0,c
  8653  003260  37A3               	rlcf	___flmul@prod& (0+255),f,b
  8654  003262  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8655  003264  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8656  003266  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8657                           
  8658                           ; BSR set to: 0
  8659  003268  0100               	movlb	0	; () banked
  8660  00326A  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8661  00326C  D002               	goto	l1423
  8662                           
  8663                           ; BSR set to: 0
  8664  00326E  0100               	movlb	0	; () banked
  8665  003270  81A3               	bsf	___flmul@prod& (0+255),0,b
  8666  003272                     l1423:
  8667                           
  8668                           ; BSR set to: 0
  8669  003272  0100               	movlb	0	; () banked
  8670  003274  90D8               	bcf	status,0,c
  8671  003276  379E               	rlcf	___flmul@grs& (0+255),f,b
  8672  003278  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8673  00327A  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8674  00327C  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8675  00327E  0100               	movlb	0	; () banked
  8676  003280  07A7               	decf	___flmul@temp& (0+255),f,b
  8677  003282  A0D8               	btfss	status,0,c
  8678  003284  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  8679  003286                     l6451:
  8680                           
  8681                           ; BSR set to: 0
  8682  003286  0100               	movlb	0	; () banked
  8683  003288  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  8684  00328A  D7E8               	goto	l6445
  8685                           
  8686                           ; BSR set to: 0
  8687                           
  8688                           ; BSR set to: 0
  8689  00328C  0E00               	movlw	0
  8690  00328E  0100               	movlb	0	; () banked
  8691  003290  6F9D               	movwf	___flmul@aexp& (0+255),b
  8692                           
  8693                           ; BSR set to: 0
  8694  003292  0100               	movlb	0	; () banked
  8695  003294  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8696  003296  D024               	goto	l1425
  8697                           
  8698                           ; BSR set to: 0
  8699  003298  0EFF               	movlw	255
  8700  00329A  0100               	movlb	0	; () banked
  8701  00329C  159E               	andwf	___flmul@grs& (0+255),w,b
  8702  00329E  0100               	movlb	0	; () banked
  8703  0032A0  6F98               	movwf	??___flmul& (0+255),b
  8704  0032A2  0EFF               	movlw	255
  8705  0032A4  0100               	movlb	0	; () banked
  8706  0032A6  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  8707  0032A8  0100               	movlb	0	; () banked
  8708  0032AA  6F99               	movwf	(??___flmul+1)& (0+255),b
  8709  0032AC  0EFF               	movlw	255
  8710  0032AE  0100               	movlb	0	; () banked
  8711  0032B0  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  8712  0032B2  0100               	movlb	0	; () banked
  8713  0032B4  6F9A               	movwf	(??___flmul+2)& (0+255),b
  8714  0032B6  0E7F               	movlw	127
  8715  0032B8  0100               	movlb	0	; () banked
  8716  0032BA  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  8717  0032BC  0100               	movlb	0	; () banked
  8718  0032BE  6F9B               	movwf	(??___flmul+3)& (0+255),b
  8719  0032C0  0100               	movlb	0	; () banked
  8720  0032C2  5198               	movf	??___flmul& (0+255),w,b
  8721  0032C4  0100               	movlb	0	; () banked
  8722  0032C6  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  8723  0032C8  0100               	movlb	0	; () banked
  8724  0032CA  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  8725  0032CC  0100               	movlb	0	; () banked
  8726  0032CE  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  8727  0032D0  A4D8               	btfss	status,2,c
  8728  0032D2  D003               	goto	l6461
  8729                           
  8730                           ; BSR set to: 0
  8731                           
  8732                           ; BSR set to: 0
  8733  0032D4  0100               	movlb	0	; () banked
  8734  0032D6  A1A3               	btfss	___flmul@prod& (0+255),0,b
  8735  0032D8  D003               	goto	l1425
  8736  0032DA                     l6461:
  8737                           
  8738                           ; BSR set to: 0
  8739  0032DA  0E01               	movlw	1
  8740  0032DC  0100               	movlb	0	; () banked
  8741  0032DE  6F9D               	movwf	___flmul@aexp& (0+255),b
  8742  0032E0                     l1425:
  8743                           
  8744                           ; BSR set to: 0
  8745  0032E0  0100               	movlb	0	; () banked
  8746  0032E2  519D               	movf	___flmul@aexp& (0+255),w,b
  8747  0032E4  0100               	movlb	0	; () banked
  8748  0032E6  B4D8               	btfsc	status,2,c
  8749  0032E8  D023               	goto	l6471
  8750                           
  8751                           ; BSR set to: 0
  8752  0032EA  0E01               	movlw	1
  8753  0032EC  0100               	movlb	0	; () banked
  8754  0032EE  27A3               	addwf	___flmul@prod& (0+255),f,b
  8755  0032F0  0E00               	movlw	0
  8756  0032F2  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8757  0032F4  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8758  0032F6  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8759                           
  8760                           ; BSR set to: 0
  8761  0032F8  0100               	movlb	0	; () banked
  8762  0032FA  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  8763  0032FC  D019               	goto	l6471
  8764                           
  8765                           ; BSR set to: 0
  8766  0032FE  C0A3  F098         	movff	___flmul@prod,??___flmul
  8767  003302  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  8768  003306  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  8769  00330A  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  8770  00330E  0100               	movlb	0	; () banked
  8771  003310  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  8772  003312  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8773  003314  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8774  003316  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8775  003318  3398               	rrcf	??___flmul& (0+255),f,b
  8776  00331A  C098  F0A3         	movff	??___flmul,___flmul@prod
  8777  00331E  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  8778  003322  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  8779  003326  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  8780                           
  8781                           ; BSR set to: 0
  8782  00332A  0100               	movlb	0	; () banked
  8783  00332C  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  8784  00332E  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  8785  003330                     l6471:
  8786                           
  8787                           ; BSR set to: 0
  8788  003330  0100               	movlb	0	; () banked
  8789  003332  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8790  003334  D010               	goto	l6475
  8791  003336  0100               	movlb	0	; () banked
  8792  003338  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8793  00333A  E104               	bnz	u8100
  8794  00333C  0100               	movlb	0	; () banked
  8795  00333E  29A7               	incf	___flmul@temp& (0+255),w,b
  8796  003340  A0D8               	btfss	status,0,c
  8797  003342  D009               	goto	l6475
  8798  003344                     u8100:
  8799                           
  8800                           ; BSR set to: 0
  8801  003344  0E00               	movlw	0
  8802  003346  0100               	movlb	0	; () banked
  8803  003348  6FA3               	movwf	___flmul@prod& (0+255),b
  8804  00334A  0E00               	movlw	0
  8805  00334C  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8806  00334E  0E80               	movlw	128
  8807  003350  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8808  003352  0E7F               	movlw	127
  8809  003354  D02B               	goto	L2
  8810  003356                     l6475:
  8811                           
  8812                           ; BSR set to: 0
  8813  003356  0100               	movlb	0	; () banked
  8814  003358  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8815  00335A  D007               	goto	l6477
  8816  00335C  0100               	movlb	0	; () banked
  8817  00335E  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8818  003360  E111               	bnz	l1433
  8819  003362  0100               	movlb	0	; () banked
  8820  003364  05A7               	decf	___flmul@temp& (0+255),w,b
  8821  003366  B0D8               	btfsc	status,0,c
  8822  003368  D00D               	goto	l1433
  8823  00336A                     l6477:
  8824                           
  8825                           ; BSR set to: 0
  8826  00336A  0E00               	movlw	0
  8827  00336C  0100               	movlb	0	; () banked
  8828  00336E  6FA3               	movwf	___flmul@prod& (0+255),b
  8829  003370  0E00               	movlw	0
  8830  003372  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8831  003374  0E00               	movlw	0
  8832  003376  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8833  003378  0E00               	movlw	0
  8834  00337A  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8835  00337C  0E00               	movlw	0
  8836  00337E  0100               	movlb	0	; () banked
  8837  003380  6F9C               	movwf	___flmul@sign& (0+255),b
  8838  003382  D015               	goto	l6487
  8839  003384                     l1433:
  8840                           
  8841                           ; BSR set to: 0
  8842  003384  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  8843                           
  8844                           ; BSR set to: 0
  8845  003388  0EFF               	movlw	255
  8846  00338A  0100               	movlb	0	; () banked
  8847  00338C  17A3               	andwf	___flmul@prod& (0+255),f,b
  8848  00338E  0EFF               	movlw	255
  8849  003390  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  8850  003392  0E7F               	movlw	127
  8851  003394  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  8852  003396  0E00               	movlw	0
  8853  003398  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  8854                           
  8855                           ; BSR set to: 0
  8856  00339A  0100               	movlb	0	; () banked
  8857  00339C  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  8858  00339E  D002               	goto	l6485
  8859                           
  8860                           ; BSR set to: 0
  8861  0033A0  0100               	movlb	0	; () banked
  8862  0033A2  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  8863  0033A4                     l6485:
  8864                           
  8865                           ; BSR set to: 0
  8866  0033A4  0100               	movlb	0	; () banked
  8867  0033A6  90D8               	bcf	status,0,c
  8868  0033A8  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  8869  0033AA  0100               	movlb	0	; () banked
  8870  0033AC                     L2:
  8871  0033AC  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8872  0033AE                     l6487:
  8873                           
  8874                           ; BSR set to: 0
  8875  0033AE  0100               	movlb	0	; () banked
  8876  0033B0  519C               	movf	___flmul@sign& (0+255),w,b
  8877  0033B2  0100               	movlb	0	; () banked
  8878  0033B4  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8879                           
  8880                           ; BSR set to: 0
  8881  0033B6  C0A3  F090         	movff	___flmul@prod,?___flmul
  8882  0033BA  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  8883  0033BE  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  8884  0033C2  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  8885  0033C6  0012               	return	
  8886  0033C8                     __end_of___flmul:
  8887                           	opt stack 0
  8888                           tblptru	equ	0xFF8
  8889                           tblptrh	equ	0xFF7
  8890                           tblptrl	equ	0xFF6
  8891                           tablat	equ	0xFF5
  8892                           prodh	equ	0xFF4
  8893                           prodl	equ	0xFF3
  8894                           postinc0	equ	0xFEE
  8895                           wreg	equ	0xFE8
  8896                           postdec1	equ	0xFE5
  8897                           fsr1l	equ	0xFE1
  8898                           indf2	equ	0xFDF
  8899                           postinc2	equ	0xFDE
  8900                           postdec2	equ	0xFDD
  8901                           fsr2h	equ	0xFDA
  8902                           fsr2l	equ	0xFD9
  8903                           status	equ	0xFD8
  8904                           
  8905 ;; *************** function ___fladd *****************
  8906 ;; Defined at:
  8907 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  8908 ;; Parameters:    Size  Location     Type
  8909 ;;  b               4   73[BANK0 ] unsigned char 
  8910 ;;  a               4   77[BANK0 ] unsigned char 
  8911 ;; Auto vars:     Size  Location     Type
  8912 ;;  grs             1   92[BANK0 ] unsigned char 
  8913 ;;  bexp            1   91[BANK0 ] unsigned char 
  8914 ;;  aexp            1   90[BANK0 ] unsigned char 
  8915 ;;  signs           1   89[BANK0 ] unsigned char 
  8916 ;; Return value:  Size  Location     Type
  8917 ;;                  4   73[BANK0 ] unsigned char 
  8918 ;; Registers used:
  8919 ;;		wreg, status,2, status,0
  8920 ;; Tracked objects:
  8921 ;;		On entry : 0/0
  8922 ;;		On exit  : 0/0
  8923 ;;		Unchanged: 0/0
  8924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8925 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8926 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8927 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8928 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8929 ;;Total ram usage:       20 bytes
  8930 ;; Hardware stack levels used:    1
  8931 ;; Hardware stack levels required when called:    4
  8932 ;; This function calls:
  8933 ;;		Nothing
  8934 ;; This function is called by:
  8935 ;;		_park_routine
  8936 ;;		_parallelo
  8937 ;;		_matematica
  8938 ;;		_asin
  8939 ;;		_atan
  8940 ;;		_cos
  8941 ;;		_eval_poly
  8942 ;;		_sin
  8943 ;;		___flsub
  8944 ;;		_floor
  8945 ;; This function uses a non-reentrant model
  8946 ;;
  8947                           
  8948                           	psect	text23
  8949  002A7A                     __ptext23:
  8950                           	opt stack 0
  8951  002A7A                     ___fladd:
  8952                           	opt stack 21
  8953                           
  8954                           ; BSR set to: 0
  8955                           ;incstack = 0
  8956  002A7A  0100               	movlb	0	; () banked
  8957  002A7C  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  8958  002A7E  0B80               	andlw	128
  8959  002A80  0100               	movlb	0	; () banked
  8960  002A82  6FB9               	movwf	___fladd@signs& (0+255),b
  8961  002A84  0100               	movlb	0	; () banked
  8962  002A86  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  8963  002A88  25AC               	addwf	(___fladd@b+3)& (0+255),w,b
  8964  002A8A  0100               	movlb	0	; () banked
  8965  002A8C  6FBB               	movwf	___fladd@bexp& (0+255),b
  8966                           
  8967                           ; BSR set to: 0
  8968  002A8E  0100               	movlb	0	; () banked
  8969  002A90  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  8970  002A92  D002               	goto	l6167
  8971                           
  8972                           ; BSR set to: 0
  8973  002A94  0100               	movlb	0	; () banked
  8974  002A96  81BB               	bsf	___fladd@bexp& (0+255),0,b
  8975  002A98                     l6167:
  8976                           
  8977                           ; BSR set to: 0
  8978  002A98  0100               	movlb	0	; () banked
  8979  002A9A  51BB               	movf	___fladd@bexp& (0+255),w,b
  8980  002A9C  0100               	movlb	0	; () banked
  8981  002A9E  B4D8               	btfsc	status,2,c
  8982  002AA0  D012               	goto	l6177
  8983                           
  8984                           ; BSR set to: 0
  8985  002AA2  0100               	movlb	0	; () banked
  8986  002AA4  29BB               	incf	___fladd@bexp& (0+255),w,b
  8987  002AA6  A4D8               	btfss	status,2,c
  8988  002AA8  D009               	goto	l6173
  8989                           
  8990                           ; BSR set to: 0
  8991  002AAA  0E00               	movlw	0
  8992  002AAC  0100               	movlb	0	; () banked
  8993  002AAE  6FA9               	movwf	___fladd@b& (0+255),b
  8994  002AB0  0E00               	movlw	0
  8995  002AB2  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  8996  002AB4  0E00               	movlw	0
  8997  002AB6  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  8998  002AB8  0E00               	movlw	0
  8999  002ABA  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9000  002ABC                     l6173:
  9001                           
  9002                           ; BSR set to: 0
  9003  002ABC  0100               	movlb	0	; () banked
  9004  002ABE  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  9005                           
  9006                           ; BSR set to: 0
  9007  002AC0  0E00               	movlw	0
  9008  002AC2  0100               	movlb	0	; () banked
  9009  002AC4  D008               	goto	L3
  9010  002AC6                     l6177:
  9011                           
  9012                           ; BSR set to: 0
  9013  002AC6  0E00               	movlw	0
  9014  002AC8  0100               	movlb	0	; () banked
  9015  002ACA  6FA9               	movwf	___fladd@b& (0+255),b
  9016  002ACC  0E00               	movlw	0
  9017  002ACE  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9018  002AD0  0E00               	movlw	0
  9019  002AD2  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9020  002AD4  0E00               	movlw	0
  9021  002AD6                     L3:
  9022  002AD6  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9023                           
  9024                           ; BSR set to: 0
  9025                           
  9026                           ; BSR set to: 0
  9027  002AD8  0100               	movlb	0	; () banked
  9028  002ADA  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9029  002ADC  0B80               	andlw	128
  9030  002ADE  0100               	movlb	0	; () banked
  9031  002AE0  6FBA               	movwf	___fladd@aexp& (0+255),b
  9032                           
  9033                           ; BSR set to: 0
  9034  002AE2  0100               	movlb	0	; () banked
  9035  002AE4  51B9               	movf	___fladd@signs& (0+255),w,b
  9036  002AE6  0100               	movlb	0	; () banked
  9037  002AE8  19BA               	xorwf	___fladd@aexp& (0+255),w,b
  9038  002AEA  B4D8               	btfsc	status,2,c
  9039  002AEC  D002               	goto	l6185
  9040                           
  9041                           ; BSR set to: 0
  9042  002AEE  0100               	movlb	0	; () banked
  9043  002AF0  8DB9               	bsf	___fladd@signs& (0+255),6,b
  9044  002AF2                     l6185:
  9045                           
  9046                           ; BSR set to: 0
  9047  002AF2  0100               	movlb	0	; () banked
  9048  002AF4  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9049  002AF6  25B0               	addwf	(___fladd@a+3)& (0+255),w,b
  9050  002AF8  0100               	movlb	0	; () banked
  9051  002AFA  6FBA               	movwf	___fladd@aexp& (0+255),b
  9052                           
  9053                           ; BSR set to: 0
  9054  002AFC  0100               	movlb	0	; () banked
  9055  002AFE  AFAF               	btfss	(___fladd@a+2)& (0+255),7,b
  9056  002B00  D002               	goto	l6191
  9057                           
  9058                           ; BSR set to: 0
  9059  002B02  0100               	movlb	0	; () banked
  9060  002B04  81BA               	bsf	___fladd@aexp& (0+255),0,b
  9061  002B06                     l6191:
  9062                           
  9063                           ; BSR set to: 0
  9064  002B06  0100               	movlb	0	; () banked
  9065  002B08  51BA               	movf	___fladd@aexp& (0+255),w,b
  9066  002B0A  0100               	movlb	0	; () banked
  9067  002B0C  B4D8               	btfsc	status,2,c
  9068  002B0E  D012               	goto	l6201
  9069                           
  9070                           ; BSR set to: 0
  9071  002B10  0100               	movlb	0	; () banked
  9072  002B12  29BA               	incf	___fladd@aexp& (0+255),w,b
  9073  002B14  A4D8               	btfss	status,2,c
  9074  002B16  D009               	goto	l6197
  9075                           
  9076                           ; BSR set to: 0
  9077  002B18  0E00               	movlw	0
  9078  002B1A  0100               	movlb	0	; () banked
  9079  002B1C  6FAD               	movwf	___fladd@a& (0+255),b
  9080  002B1E  0E00               	movlw	0
  9081  002B20  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9082  002B22  0E00               	movlw	0
  9083  002B24  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9084  002B26  0E00               	movlw	0
  9085  002B28  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9086  002B2A                     l6197:
  9087                           
  9088                           ; BSR set to: 0
  9089  002B2A  0100               	movlb	0	; () banked
  9090  002B2C  8FAF               	bsf	(___fladd@a+2)& (0+255),7,b
  9091                           
  9092                           ; BSR set to: 0
  9093  002B2E  0E00               	movlw	0
  9094  002B30  0100               	movlb	0	; () banked
  9095  002B32  D008               	goto	L4
  9096  002B34                     l6201:
  9097                           
  9098                           ; BSR set to: 0
  9099  002B34  0E00               	movlw	0
  9100  002B36  0100               	movlb	0	; () banked
  9101  002B38  6FAD               	movwf	___fladd@a& (0+255),b
  9102  002B3A  0E00               	movlw	0
  9103  002B3C  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9104  002B3E  0E00               	movlw	0
  9105  002B40  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9106  002B42  0E00               	movlw	0
  9107  002B44                     L4:
  9108  002B44  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9109                           
  9110                           ; BSR set to: 0
  9111                           
  9112                           ; BSR set to: 0
  9113  002B46  0100               	movlb	0	; () banked
  9114  002B48  51BB               	movf	___fladd@bexp& (0+255),w,b
  9115  002B4A  0100               	movlb	0	; () banked
  9116  002B4C  5DBA               	subwf	___fladd@aexp& (0+255),w,b
  9117  002B4E  B0D8               	btfsc	status,0,c
  9118  002B50  D024               	goto	l6239
  9119                           
  9120                           ; BSR set to: 0
  9121  002B52  0100               	movlb	0	; () banked
  9122  002B54  ADB9               	btfss	___fladd@signs& (0+255),6,b
  9123  002B56  D003               	goto	l6209
  9124                           
  9125                           ; BSR set to: 0
  9126  002B58  0E80               	movlw	128
  9127  002B5A  0100               	movlb	0	; () banked
  9128  002B5C  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9129  002B5E                     l6209:
  9130                           
  9131                           ; BSR set to: 0
  9132  002B5E  C0BB  F0BC         	movff	___fladd@bexp,___fladd@grs
  9133                           
  9134                           ; BSR set to: 0
  9135  002B62  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9136                           
  9137                           ; BSR set to: 0
  9138  002B66  C0BC  F0BA         	movff	___fladd@grs,___fladd@aexp
  9139                           
  9140                           ; BSR set to: 0
  9141  002B6A  C0A9  F0BC         	movff	___fladd@b,___fladd@grs
  9142                           
  9143                           ; BSR set to: 0
  9144  002B6E  C0AD  F0A9         	movff	___fladd@a,___fladd@b
  9145                           
  9146                           ; BSR set to: 0
  9147  002B72  C0BC  F0AD         	movff	___fladd@grs,___fladd@a
  9148                           
  9149                           ; BSR set to: 0
  9150  002B76  C0AA  F0BC         	movff	___fladd@b+1,___fladd@grs
  9151                           
  9152                           ; BSR set to: 0
  9153  002B7A  C0AE  F0AA         	movff	___fladd@a+1,___fladd@b+1
  9154                           
  9155                           ; BSR set to: 0
  9156  002B7E  C0BC  F0AE         	movff	___fladd@grs,___fladd@a+1
  9157                           
  9158                           ; BSR set to: 0
  9159  002B82  C0AB  F0BC         	movff	___fladd@b+2,___fladd@grs
  9160                           
  9161                           ; BSR set to: 0
  9162  002B86  C0AF  F0AB         	movff	___fladd@a+2,___fladd@b+2
  9163                           
  9164                           ; BSR set to: 0
  9165  002B8A  C0BC  F0AF         	movff	___fladd@grs,___fladd@a+2
  9166                           
  9167                           ; BSR set to: 0
  9168  002B8E  C0AC  F0BC         	movff	___fladd@b+3,___fladd@grs
  9169                           
  9170                           ; BSR set to: 0
  9171  002B92  C0B0  F0AC         	movff	___fladd@a+3,___fladd@b+3
  9172                           
  9173                           ; BSR set to: 0
  9174  002B96  C0BC  F0B0         	movff	___fladd@grs,___fladd@a+3
  9175  002B9A                     l6239:
  9176                           
  9177                           ; BSR set to: 0
  9178  002B9A  0E00               	movlw	0
  9179  002B9C  0100               	movlb	0	; () banked
  9180  002B9E  6FBC               	movwf	___fladd@grs& (0+255),b
  9181                           
  9182                           ; BSR set to: 0
  9183  002BA0  0100               	movlb	0	; () banked
  9184  002BA2  51BB               	movf	___fladd@bexp& (0+255),w,b
  9185  002BA4  0100               	movlb	0	; () banked
  9186  002BA6  6FB1               	movwf	??___fladd& (0+255),b
  9187  002BA8  6BB2               	clrf	(??___fladd+1)& (0+255),b
  9188  002BAA  0100               	movlb	0	; () banked
  9189  002BAC  1FB1               	comf	??___fladd& (0+255),f,b
  9190  002BAE  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9191  002BB0  4BB1               	infsnz	??___fladd& (0+255),f,b
  9192  002BB2  2BB2               	incf	(??___fladd+1)& (0+255),f,b
  9193  002BB4  0100               	movlb	0	; () banked
  9194  002BB6  51BA               	movf	___fladd@aexp& (0+255),w,b
  9195  002BB8  0100               	movlb	0	; () banked
  9196  002BBA  6FB3               	movwf	(??___fladd+2)& (0+255),b
  9197  002BBC  6BB4               	clrf	(??___fladd+3)& (0+255),b
  9198  002BBE  0100               	movlb	0	; () banked
  9199  002BC0  51B1               	movf	??___fladd& (0+255),w,b
  9200  002BC2  0100               	movlb	0	; () banked
  9201  002BC4  27B3               	addwf	(??___fladd+2)& (0+255),f,b
  9202  002BC6  0100               	movlb	0	; () banked
  9203  002BC8  51B2               	movf	(??___fladd+1)& (0+255),w,b
  9204  002BCA  0100               	movlb	0	; () banked
  9205  002BCC  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9206  002BCE  0100               	movlb	0	; () banked
  9207  002BD0  BFB4               	btfsc	(??___fladd+3)& (0+255),7,b
  9208  002BD2  D03D               	goto	l1331
  9209  002BD4  0100               	movlb	0	; () banked
  9210  002BD6  51B4               	movf	(??___fladd+3)& (0+255),w,b
  9211  002BD8  E105               	bnz	u7640
  9212  002BDA  0E1A               	movlw	26
  9213  002BDC  0100               	movlb	0	; () banked
  9214  002BDE  5DB3               	subwf	(??___fladd+2)& (0+255),w,b
  9215  002BE0  A0D8               	btfss	status,0,c
  9216  002BE2  D035               	goto	l1331
  9217  002BE4                     u7640:
  9218                           
  9219                           ; BSR set to: 0
  9220  002BE4  0100               	movlb	0	; () banked
  9221  002BE6  51A9               	movf	___fladd@b& (0+255),w,b
  9222  002BE8  0100               	movlb	0	; () banked
  9223  002BEA  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9224  002BEC  0100               	movlb	0	; () banked
  9225  002BEE  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9226  002BF0  0100               	movlb	0	; () banked
  9227  002BF2  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9228  002BF4  B4D8               	btfsc	status,2,c
  9229  002BF6  D002               	goto	u7650
  9230  002BF8  0E01               	movlw	1
  9231  002BFA  D001               	goto	u7660
  9232  002BFC                     u7650:
  9233  002BFC  0E00               	movlw	0
  9234  002BFE                     u7660:
  9235  002BFE  0100               	movlb	0	; () banked
  9236  002C00  6FBC               	movwf	___fladd@grs& (0+255),b
  9237                           
  9238                           ; BSR set to: 0
  9239  002C02  0E00               	movlw	0
  9240  002C04  0100               	movlb	0	; () banked
  9241  002C06  6FA9               	movwf	___fladd@b& (0+255),b
  9242  002C08  0E00               	movlw	0
  9243  002C0A  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9244  002C0C  0E00               	movlw	0
  9245  002C0E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9246  002C10  0E00               	movlw	0
  9247  002C12  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9248                           
  9249                           ; BSR set to: 0
  9250  002C14  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9251  002C18  D020               	goto	l1330
  9252  002C1A                     l1332:
  9253                           
  9254                           ; BSR set to: 0
  9255  002C1A  0100               	movlb	0	; () banked
  9256  002C1C  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9257  002C1E  D007               	goto	l6251
  9258                           
  9259                           ; BSR set to: 0
  9260  002C20  0100               	movlb	0	; () banked
  9261  002C22  90D8               	bcf	status,0,c
  9262  002C24  31BC               	rrcf	___fladd@grs& (0+255),w,b
  9263  002C26  0901               	iorlw	1
  9264  002C28  0100               	movlb	0	; () banked
  9265  002C2A  6FBC               	movwf	___fladd@grs& (0+255),b
  9266  002C2C  D003               	goto	l6253
  9267  002C2E                     l6251:
  9268                           
  9269                           ; BSR set to: 0
  9270  002C2E  0100               	movlb	0	; () banked
  9271  002C30  90D8               	bcf	status,0,c
  9272  002C32  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9273  002C34                     l6253:
  9274                           
  9275                           ; BSR set to: 0
  9276  002C34  0100               	movlb	0	; () banked
  9277  002C36  A1A9               	btfss	___fladd@b& (0+255),0,b
  9278  002C38  D002               	goto	l6257
  9279                           
  9280                           ; BSR set to: 0
  9281  002C3A  0100               	movlb	0	; () banked
  9282  002C3C  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9283  002C3E                     l6257:
  9284                           
  9285                           ; BSR set to: 0
  9286  002C3E  0100               	movlb	0	; () banked
  9287  002C40  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9288  002C42  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9289  002C44  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9290  002C46  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9291  002C48  33A9               	rrcf	___fladd@b& (0+255),f,b
  9292                           
  9293                           ; BSR set to: 0
  9294  002C4A  0100               	movlb	0	; () banked
  9295  002C4C  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9296  002C4E                     l1331:
  9297                           
  9298                           ; BSR set to: 0
  9299  002C4E  0100               	movlb	0	; () banked
  9300  002C50  51BA               	movf	___fladd@aexp& (0+255),w,b
  9301  002C52  0100               	movlb	0	; () banked
  9302  002C54  5DBB               	subwf	___fladd@bexp& (0+255),w,b
  9303  002C56  A0D8               	btfss	status,0,c
  9304  002C58  D7E0               	goto	l1332
  9305  002C5A                     l1330:
  9306                           
  9307                           ; BSR set to: 0
  9308  002C5A  0100               	movlb	0	; () banked
  9309  002C5C  BDB9               	btfsc	___fladd@signs& (0+255),6,b
  9310  002C5E  D03F               	goto	l6285
  9311                           
  9312                           ; BSR set to: 0
  9313  002C60  0100               	movlb	0	; () banked
  9314  002C62  51BB               	movf	___fladd@bexp& (0+255),w,b
  9315  002C64  0100               	movlb	0	; () banked
  9316  002C66  A4D8               	btfss	status,2,c
  9317  002C68  D00A               	goto	l6267
  9318                           
  9319                           ; BSR set to: 0
  9320  002C6A  0E00               	movlw	0
  9321  002C6C  0100               	movlb	0	; () banked
  9322  002C6E  6FA9               	movwf	?___fladd& (0+255),b
  9323  002C70  0E00               	movlw	0
  9324  002C72  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9325  002C74  0E00               	movlw	0
  9326  002C76  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9327  002C78  0E00               	movlw	0
  9328  002C7A  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9329                           
  9330                           ; BSR set to: 0
  9331  002C7C  0012               	return	
  9332  002C7E                     l6267:
  9333                           
  9334                           ; BSR set to: 0
  9335  002C7E  0100               	movlb	0	; () banked
  9336  002C80  51AD               	movf	___fladd@a& (0+255),w,b
  9337  002C82  0100               	movlb	0	; () banked
  9338  002C84  27A9               	addwf	___fladd@b& (0+255),f,b
  9339  002C86  0100               	movlb	0	; () banked
  9340  002C88  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9341  002C8A  0100               	movlb	0	; () banked
  9342  002C8C  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9343  002C8E  0100               	movlb	0	; () banked
  9344  002C90  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9345  002C92  0100               	movlb	0	; () banked
  9346  002C94  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9347  002C96  0100               	movlb	0	; () banked
  9348  002C98  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9349  002C9A  0100               	movlb	0	; () banked
  9350  002C9C  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9351                           
  9352                           ; BSR set to: 0
  9353  002C9E  0100               	movlb	0	; () banked
  9354  002CA0  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9355  002CA2  D0CC               	goto	l6321
  9356                           
  9357                           ; BSR set to: 0
  9358  002CA4  0100               	movlb	0	; () banked
  9359  002CA6  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9360  002CA8  D009               	goto	l6275
  9361                           
  9362                           ; BSR set to: 0
  9363  002CAA  0100               	movlb	0	; () banked
  9364  002CAC  90D8               	bcf	status,0,c
  9365  002CAE  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9366  002CB0  0100               	movlb	0	; () banked
  9367  002CB2  51BC               	movf	___fladd@grs& (0+255),w,b
  9368  002CB4  0901               	iorlw	1
  9369  002CB6  0100               	movlb	0	; () banked
  9370  002CB8  6FBC               	movwf	___fladd@grs& (0+255),b
  9371  002CBA  D003               	goto	l6277
  9372  002CBC                     l6275:
  9373                           
  9374                           ; BSR set to: 0
  9375  002CBC  0100               	movlb	0	; () banked
  9376  002CBE  90D8               	bcf	status,0,c
  9377  002CC0  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9378  002CC2                     l6277:
  9379                           
  9380                           ; BSR set to: 0
  9381  002CC2  0100               	movlb	0	; () banked
  9382  002CC4  A1A9               	btfss	___fladd@b& (0+255),0,b
  9383  002CC6  D002               	goto	l6281
  9384                           
  9385                           ; BSR set to: 0
  9386  002CC8  0100               	movlb	0	; () banked
  9387  002CCA  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9388  002CCC                     l6281:
  9389                           
  9390                           ; BSR set to: 0
  9391  002CCC  0100               	movlb	0	; () banked
  9392  002CCE  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9393  002CD0  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9394  002CD2  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9395  002CD4  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9396  002CD6  33A9               	rrcf	___fladd@b& (0+255),f,b
  9397                           
  9398                           ; BSR set to: 0
  9399  002CD8  0100               	movlb	0	; () banked
  9400  002CDA  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9401                           
  9402                           ; BSR set to: 0
  9403  002CDC  D0AF               	goto	l6321
  9404  002CDE                     l6285:
  9405                           
  9406                           ; BSR set to: 0
  9407  002CDE  0100               	movlb	0	; () banked
  9408  002CE0  51AD               	movf	___fladd@a& (0+255),w,b
  9409  002CE2  0100               	movlb	0	; () banked
  9410  002CE4  5DA9               	subwf	___fladd@b& (0+255),w,b
  9411  002CE6  0100               	movlb	0	; () banked
  9412  002CE8  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9413  002CEA  0100               	movlb	0	; () banked
  9414  002CEC  59AA               	subwfb	(___fladd@b+1)& (0+255),w,b
  9415  002CEE  0100               	movlb	0	; () banked
  9416  002CF0  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9417  002CF2  0100               	movlb	0	; () banked
  9418  002CF4  59AB               	subwfb	(___fladd@b+2)& (0+255),w,b
  9419  002CF6  0100               	movlb	0	; () banked
  9420  002CF8  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9421  002CFA  0A80               	xorlw	128
  9422  002CFC  0100               	movlb	0	; () banked
  9423  002CFE  6FB1               	movwf	??___fladd& (0+255),b
  9424  002D00  0100               	movlb	0	; () banked
  9425  002D02  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9426  002D04  0A80               	xorlw	128
  9427  002D06  0100               	movlb	0	; () banked
  9428  002D08  59B1               	subwfb	??___fladd& (0+255),w,b
  9429  002D0A  B0D8               	btfsc	status,0,c
  9430  002D0C  D050               	goto	l6295
  9431                           
  9432                           ; BSR set to: 0
  9433  002D0E  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9434  002D12  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9435  002D16  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9436  002D1A  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9437  002D1E  0100               	movlb	0	; () banked
  9438  002D20  1FB1               	comf	??___fladd& (0+255),f,b
  9439  002D22  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9440  002D24  1FB3               	comf	(??___fladd+2)& (0+255),f,b
  9441  002D26  1FB4               	comf	(??___fladd+3)& (0+255),f,b
  9442  002D28  2BB1               	incf	??___fladd& (0+255),f,b
  9443  002D2A  0E00               	movlw	0
  9444  002D2C  23B2               	addwfc	(??___fladd+1)& (0+255),f,b
  9445  002D2E  23B3               	addwfc	(??___fladd+2)& (0+255),f,b
  9446  002D30  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9447  002D32  0100               	movlb	0	; () banked
  9448  002D34  51AD               	movf	___fladd@a& (0+255),w,b
  9449  002D36  0100               	movlb	0	; () banked
  9450  002D38  25B1               	addwf	??___fladd& (0+255),w,b
  9451  002D3A  0100               	movlb	0	; () banked
  9452  002D3C  6FB5               	movwf	(??___fladd+4)& (0+255),b
  9453  002D3E  0100               	movlb	0	; () banked
  9454  002D40  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9455  002D42  0100               	movlb	0	; () banked
  9456  002D44  21B2               	addwfc	(??___fladd+1)& (0+255),w,b
  9457  002D46  0100               	movlb	0	; () banked
  9458  002D48  6FB6               	movwf	(??___fladd+5)& (0+255),b
  9459  002D4A  0100               	movlb	0	; () banked
  9460  002D4C  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9461  002D4E  0100               	movlb	0	; () banked
  9462  002D50  21B3               	addwfc	(??___fladd+2)& (0+255),w,b
  9463  002D52  0100               	movlb	0	; () banked
  9464  002D54  6FB7               	movwf	(??___fladd+6)& (0+255),b
  9465  002D56  0100               	movlb	0	; () banked
  9466  002D58  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9467  002D5A  0100               	movlb	0	; () banked
  9468  002D5C  21B4               	addwfc	(??___fladd+3)& (0+255),w,b
  9469  002D5E  0100               	movlb	0	; () banked
  9470  002D60  6FB8               	movwf	(??___fladd+7)& (0+255),b
  9471  002D62  0EFF               	movlw	255
  9472  002D64  0100               	movlb	0	; () banked
  9473  002D66  25B5               	addwf	(??___fladd+4)& (0+255),w,b
  9474  002D68  0100               	movlb	0	; () banked
  9475  002D6A  6FA9               	movwf	___fladd@b& (0+255),b
  9476  002D6C  0EFF               	movlw	255
  9477  002D6E  0100               	movlb	0	; () banked
  9478  002D70  21B6               	addwfc	(??___fladd+5)& (0+255),w,b
  9479  002D72  0100               	movlb	0	; () banked
  9480  002D74  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9481  002D76  0EFF               	movlw	255
  9482  002D78  0100               	movlb	0	; () banked
  9483  002D7A  21B7               	addwfc	(??___fladd+6)& (0+255),w,b
  9484  002D7C  0100               	movlb	0	; () banked
  9485  002D7E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9486  002D80  0EFF               	movlw	255
  9487  002D82  0100               	movlb	0	; () banked
  9488  002D84  21B8               	addwfc	(??___fladd+7)& (0+255),w,b
  9489  002D86  0100               	movlb	0	; () banked
  9490  002D88  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9491  002D8A  0E80               	movlw	128
  9492  002D8C  0100               	movlb	0	; () banked
  9493  002D8E  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9494                           
  9495                           ; BSR set to: 0
  9496  002D90  0100               	movlb	0	; () banked
  9497  002D92  6DBC               	negf	___fladd@grs& (0+255),b
  9498                           
  9499                           ; BSR set to: 0
  9500  002D94  0100               	movlb	0	; () banked
  9501  002D96  51BC               	movf	___fladd@grs& (0+255),w,b
  9502  002D98  0100               	movlb	0	; () banked
  9503  002D9A  A4D8               	btfss	status,2,c
  9504  002D9C  D018               	goto	l1347
  9505                           
  9506                           ; BSR set to: 0
  9507  002D9E  0E01               	movlw	1
  9508  002DA0  0100               	movlb	0	; () banked
  9509  002DA2  27A9               	addwf	___fladd@b& (0+255),f,b
  9510  002DA4  0E00               	movlw	0
  9511  002DA6  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9512  002DA8  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9513  002DAA  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9514                           
  9515                           ; BSR set to: 0
  9516  002DAC  D010               	goto	l1347
  9517  002DAE                     l6295:
  9518                           
  9519                           ; BSR set to: 0
  9520  002DAE  0100               	movlb	0	; () banked
  9521  002DB0  51AD               	movf	___fladd@a& (0+255),w,b
  9522  002DB2  0100               	movlb	0	; () banked
  9523  002DB4  5FA9               	subwf	___fladd@b& (0+255),f,b
  9524  002DB6  0100               	movlb	0	; () banked
  9525  002DB8  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9526  002DBA  0100               	movlb	0	; () banked
  9527  002DBC  5BAA               	subwfb	(___fladd@b+1)& (0+255),f,b
  9528  002DBE  0100               	movlb	0	; () banked
  9529  002DC0  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9530  002DC2  0100               	movlb	0	; () banked
  9531  002DC4  5BAB               	subwfb	(___fladd@b+2)& (0+255),f,b
  9532  002DC6  0100               	movlb	0	; () banked
  9533  002DC8  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9534  002DCA  0100               	movlb	0	; () banked
  9535  002DCC  5BAC               	subwfb	(___fladd@b+3)& (0+255),f,b
  9536  002DCE                     l1347:
  9537                           
  9538                           ; BSR set to: 0
  9539  002DCE  0100               	movlb	0	; () banked
  9540  002DD0  51A9               	movf	___fladd@b& (0+255),w,b
  9541  002DD2  0100               	movlb	0	; () banked
  9542  002DD4  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9543  002DD6  0100               	movlb	0	; () banked
  9544  002DD8  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9545  002DDA  0100               	movlb	0	; () banked
  9546  002DDC  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9547  002DDE  A4D8               	btfss	status,2,c
  9548  002DE0  D02A               	goto	l6319
  9549                           
  9550                           ; BSR set to: 0
  9551  002DE2  0100               	movlb	0	; () banked
  9552  002DE4  51BC               	movf	___fladd@grs& (0+255),w,b
  9553  002DE6  0100               	movlb	0	; () banked
  9554  002DE8  A4D8               	btfss	status,2,c
  9555  002DEA  D025               	goto	l6319
  9556                           
  9557                           ; BSR set to: 0
  9558  002DEC  0E00               	movlw	0
  9559  002DEE  0100               	movlb	0	; () banked
  9560  002DF0  6FA9               	movwf	?___fladd& (0+255),b
  9561  002DF2  0E00               	movlw	0
  9562  002DF4  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9563  002DF6  0E00               	movlw	0
  9564  002DF8  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9565  002DFA  0E00               	movlw	0
  9566  002DFC  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9567                           
  9568                           ; BSR set to: 0
  9569  002DFE  0012               	return	
  9570  002E00                     l6303:
  9571                           
  9572                           ; BSR set to: 0
  9573  002E00  0100               	movlb	0	; () banked
  9574  002E02  90D8               	bcf	status,0,c
  9575  002E04  37A9               	rlcf	___fladd@b& (0+255),f,b
  9576  002E06  37AA               	rlcf	(___fladd@b+1)& (0+255),f,b
  9577  002E08  37AB               	rlcf	(___fladd@b+2)& (0+255),f,b
  9578  002E0A  37AC               	rlcf	(___fladd@b+3)& (0+255),f,b
  9579                           
  9580                           ; BSR set to: 0
  9581  002E0C  0100               	movlb	0	; () banked
  9582  002E0E  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9583  002E10  D002               	goto	l6309
  9584                           
  9585                           ; BSR set to: 0
  9586  002E12  0100               	movlb	0	; () banked
  9587  002E14  81A9               	bsf	___fladd@b& (0+255),0,b
  9588  002E16                     l6309:
  9589                           
  9590                           ; BSR set to: 0
  9591  002E16  0100               	movlb	0	; () banked
  9592  002E18  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9593  002E1A  D003               	goto	l6313
  9594                           
  9595                           ; BSR set to: 0
  9596  002E1C  80D8               	bsf	status,0,c
  9597  002E1E  0100               	movlb	0	; () banked
  9598  002E20  D002               	goto	L5
  9599  002E22                     l6313:
  9600                           
  9601                           ; BSR set to: 0
  9602  002E22  0100               	movlb	0	; () banked
  9603  002E24  90D8               	bcf	status,0,c
  9604  002E26                     L5:
  9605  002E26  37BC               	rlcf	___fladd@grs& (0+255),f,b
  9606                           
  9607                           ; BSR set to: 0
  9608                           
  9609                           ; BSR set to: 0
  9610  002E28  0100               	movlb	0	; () banked
  9611  002E2A  51BB               	movf	___fladd@bexp& (0+255),w,b
  9612  002E2C  0100               	movlb	0	; () banked
  9613  002E2E  B4D8               	btfsc	status,2,c
  9614  002E30  D002               	goto	l6319
  9615                           
  9616                           ; BSR set to: 0
  9617  002E32  0100               	movlb	0	; () banked
  9618  002E34  07BB               	decf	___fladd@bexp& (0+255),f,b
  9619  002E36                     l6319:
  9620                           
  9621                           ; BSR set to: 0
  9622  002E36  0100               	movlb	0	; () banked
  9623  002E38  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  9624  002E3A  D7E2               	goto	l6303
  9625  002E3C                     l6321:
  9626                           
  9627                           ; BSR set to: 0
  9628  002E3C  0E00               	movlw	0
  9629  002E3E  0100               	movlb	0	; () banked
  9630  002E40  6FBA               	movwf	___fladd@aexp& (0+255),b
  9631                           
  9632                           ; BSR set to: 0
  9633  002E42  0100               	movlb	0	; () banked
  9634  002E44  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9635  002E46  D00D               	goto	l1356
  9636                           
  9637                           ; BSR set to: 0
  9638  002E48  C0BC  F0B1         	movff	___fladd@grs,??___fladd
  9639  002E4C  0E7F               	movlw	127
  9640  002E4E  0100               	movlb	0	; () banked
  9641  002E50  17B1               	andwf	??___fladd& (0+255),f,b
  9642  002E52  A4D8               	btfss	status,2,c
  9643  002E54  D003               	goto	l6329
  9644                           
  9645                           ; BSR set to: 0
  9646                           
  9647                           ; BSR set to: 0
  9648  002E56  0100               	movlb	0	; () banked
  9649  002E58  A1A9               	btfss	___fladd@b& (0+255),0,b
  9650  002E5A  D003               	goto	l1356
  9651  002E5C                     l6329:
  9652                           
  9653                           ; BSR set to: 0
  9654  002E5C  0E01               	movlw	1
  9655  002E5E  0100               	movlb	0	; () banked
  9656  002E60  6FBA               	movwf	___fladd@aexp& (0+255),b
  9657  002E62                     l1356:
  9658                           
  9659                           ; BSR set to: 0
  9660  002E62  0100               	movlb	0	; () banked
  9661  002E64  51BA               	movf	___fladd@aexp& (0+255),w,b
  9662  002E66  0100               	movlb	0	; () banked
  9663  002E68  B4D8               	btfsc	status,2,c
  9664  002E6A  D026               	goto	l6339
  9665                           
  9666                           ; BSR set to: 0
  9667  002E6C  0E01               	movlw	1
  9668  002E6E  0100               	movlb	0	; () banked
  9669  002E70  27A9               	addwf	___fladd@b& (0+255),f,b
  9670  002E72  0E00               	movlw	0
  9671  002E74  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9672  002E76  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9673  002E78  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9674                           
  9675                           ; BSR set to: 0
  9676  002E7A  0100               	movlb	0	; () banked
  9677  002E7C  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9678  002E7E  D01C               	goto	l6339
  9679                           
  9680                           ; BSR set to: 0
  9681  002E80  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9682  002E84  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9683  002E88  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9684  002E8C  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9685  002E90  0100               	movlb	0	; () banked
  9686  002E92  35B4               	rlcf	(??___fladd+3)& (0+255),w,b
  9687  002E94  33B4               	rrcf	(??___fladd+3)& (0+255),f,b
  9688  002E96  33B3               	rrcf	(??___fladd+2)& (0+255),f,b
  9689  002E98  33B2               	rrcf	(??___fladd+1)& (0+255),f,b
  9690  002E9A  33B1               	rrcf	??___fladd& (0+255),f,b
  9691  002E9C  C0B1  F0A9         	movff	??___fladd,___fladd@b
  9692  002EA0  C0B2  F0AA         	movff	??___fladd+1,___fladd@b+1
  9693  002EA4  C0B3  F0AB         	movff	??___fladd+2,___fladd@b+2
  9694  002EA8  C0B4  F0AC         	movff	??___fladd+3,___fladd@b+3
  9695  002EAC  0100               	movlb	0	; () banked
  9696  002EAE  29BB               	incf	___fladd@bexp& (0+255),w,b
  9697  002EB0  B4D8               	btfsc	status,2,c
  9698  002EB2  D002               	goto	l6339
  9699                           
  9700                           ; BSR set to: 0
  9701  002EB4  0100               	movlb	0	; () banked
  9702  002EB6  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9703  002EB8                     l6339:
  9704                           
  9705                           ; BSR set to: 0
  9706  002EB8  0100               	movlb	0	; () banked
  9707  002EBA  29BB               	incf	___fladd@bexp& (0+255),w,b
  9708  002EBC  B4D8               	btfsc	status,2,c
  9709  002EBE  D005               	goto	l6343
  9710                           
  9711                           ; BSR set to: 0
  9712  002EC0  0100               	movlb	0	; () banked
  9713  002EC2  51BB               	movf	___fladd@bexp& (0+255),w,b
  9714  002EC4  0100               	movlb	0	; () banked
  9715  002EC6  A4D8               	btfss	status,2,c
  9716  002EC8  D011               	goto	l6347
  9717  002ECA                     l6343:
  9718                           
  9719                           ; BSR set to: 0
  9720  002ECA  0E00               	movlw	0
  9721  002ECC  0100               	movlb	0	; () banked
  9722  002ECE  6FA9               	movwf	___fladd@b& (0+255),b
  9723  002ED0  0E00               	movlw	0
  9724  002ED2  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9725  002ED4  0E00               	movlw	0
  9726  002ED6  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9727  002ED8  0E00               	movlw	0
  9728  002EDA  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9729  002EDC  0100               	movlb	0	; () banked
  9730  002EDE  51BB               	movf	___fladd@bexp& (0+255),w,b
  9731  002EE0  0100               	movlb	0	; () banked
  9732  002EE2  A4D8               	btfss	status,2,c
  9733  002EE4  D003               	goto	l6347
  9734                           
  9735                           ; BSR set to: 0
  9736  002EE6  0E00               	movlw	0
  9737  002EE8  0100               	movlb	0	; () banked
  9738  002EEA  6FB9               	movwf	___fladd@signs& (0+255),b
  9739  002EEC                     l6347:
  9740                           
  9741                           ; BSR set to: 0
  9742  002EEC  0100               	movlb	0	; () banked
  9743  002EEE  A1BB               	btfss	___fladd@bexp& (0+255),0,b
  9744  002EF0  D003               	goto	l6351
  9745                           
  9746                           ; BSR set to: 0
  9747  002EF2  0100               	movlb	0	; () banked
  9748  002EF4  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  9749  002EF6  D002               	goto	l6353
  9750  002EF8                     l6351:
  9751                           
  9752                           ; BSR set to: 0
  9753  002EF8  0100               	movlb	0	; () banked
  9754  002EFA  9FAB               	bcf	(___fladd@b+2)& (0+255),7,b
  9755  002EFC                     l6353:
  9756                           
  9757                           ; BSR set to: 0
  9758  002EFC  0100               	movlb	0	; () banked
  9759  002EFE  90D8               	bcf	status,0,c
  9760  002F00  31BB               	rrcf	___fladd@bexp& (0+255),w,b
  9761  002F02  0100               	movlb	0	; () banked
  9762  002F04  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9763                           
  9764                           ; BSR set to: 0
  9765  002F06  0100               	movlb	0	; () banked
  9766  002F08  AFB9               	btfss	___fladd@signs& (0+255),7,b
  9767  002F0A  D002               	goto	l6359
  9768                           
  9769                           ; BSR set to: 0
  9770  002F0C  0100               	movlb	0	; () banked
  9771  002F0E  8FAC               	bsf	(___fladd@b+3)& (0+255),7,b
  9772  002F10                     l6359:
  9773                           
  9774                           ; BSR set to: 0
  9775  002F10  C0A9  F0A9         	movff	___fladd@b,?___fladd
  9776  002F14  C0AA  F0AA         	movff	___fladd@b+1,?___fladd+1
  9777  002F18  C0AB  F0AB         	movff	___fladd@b+2,?___fladd+2
  9778  002F1C  C0AC  F0AC         	movff	___fladd@b+3,?___fladd+3
  9779  002F20  0012               	return	
  9780  002F22                     __end_of___fladd:
  9781                           	opt stack 0
  9782                           tblptru	equ	0xFF8
  9783                           tblptrh	equ	0xFF7
  9784                           tblptrl	equ	0xFF6
  9785                           tablat	equ	0xFF5
  9786                           prodh	equ	0xFF4
  9787                           prodl	equ	0xFF3
  9788                           postinc0	equ	0xFEE
  9789                           wreg	equ	0xFE8
  9790                           postdec1	equ	0xFE5
  9791                           fsr1l	equ	0xFE1
  9792                           indf2	equ	0xFDF
  9793                           postinc2	equ	0xFDE
  9794                           postdec2	equ	0xFDD
  9795                           fsr2h	equ	0xFDA
  9796                           fsr2l	equ	0xFD9
  9797                           status	equ	0xFD8
  9798                           
  9799 ;; *************** function ___flge *****************
  9800 ;; Defined at:
  9801 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  9802 ;; Parameters:    Size  Location     Type
  9803 ;;  ff1             4  101[BANK0 ] unsigned char 
  9804 ;;  ff2             4  105[BANK0 ] unsigned char 
  9805 ;; Auto vars:     Size  Location     Type
  9806 ;;		None
  9807 ;; Return value:  Size  Location     Type
  9808 ;;		None               void
  9809 ;; Registers used:
  9810 ;;		wreg, status,2, status,0
  9811 ;; Tracked objects:
  9812 ;;		On entry : 0/0
  9813 ;;		On exit  : 0/0
  9814 ;;		Unchanged: 0/0
  9815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9816 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9818 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9819 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9820 ;;Total ram usage:       12 bytes
  9821 ;; Hardware stack levels used:    1
  9822 ;; Hardware stack levels required when called:    4
  9823 ;; This function calls:
  9824 ;;		Nothing
  9825 ;; This function is called by:
  9826 ;;		_parallelo
  9827 ;;		_asin
  9828 ;;		_atan
  9829 ;;		_cos
  9830 ;;		_sin
  9831 ;;		_floor
  9832 ;; This function uses a non-reentrant model
  9833 ;;
  9834                           
  9835                           	psect	text24
  9836  0053C2                     __ptext24:
  9837                           	opt stack 0
  9838  0053C2                     ___flge:
  9839                           	opt stack 22
  9840                           
  9841                           ; BSR set to: 0
  9842                           ;incstack = 0
  9843  0053C2  0E00               	movlw	0
  9844  0053C4  0100               	movlb	0	; () banked
  9845  0053C6  15C5               	andwf	___flge@ff1& (0+255),w,b
  9846  0053C8  0100               	movlb	0	; () banked
  9847  0053CA  6FCD               	movwf	??___flge& (0+255),b
  9848  0053CC  0E00               	movlw	0
  9849  0053CE  0100               	movlb	0	; () banked
  9850  0053D0  15C6               	andwf	(___flge@ff1+1)& (0+255),w,b
  9851  0053D2  0100               	movlb	0	; () banked
  9852  0053D4  6FCE               	movwf	(??___flge+1)& (0+255),b
  9853  0053D6  0E80               	movlw	128
  9854  0053D8  0100               	movlb	0	; () banked
  9855  0053DA  15C7               	andwf	(___flge@ff1+2)& (0+255),w,b
  9856  0053DC  0100               	movlb	0	; () banked
  9857  0053DE  6FCF               	movwf	(??___flge+2)& (0+255),b
  9858  0053E0  0E7F               	movlw	127
  9859  0053E2  0100               	movlb	0	; () banked
  9860  0053E4  15C8               	andwf	(___flge@ff1+3)& (0+255),w,b
  9861  0053E6  0100               	movlb	0	; () banked
  9862  0053E8  6FD0               	movwf	(??___flge+3)& (0+255),b
  9863  0053EA  0100               	movlb	0	; () banked
  9864  0053EC  51CD               	movf	??___flge& (0+255),w,b
  9865  0053EE  0100               	movlb	0	; () banked
  9866  0053F0  11CE               	iorwf	(??___flge+1)& (0+255),w,b
  9867  0053F2  0100               	movlb	0	; () banked
  9868  0053F4  11CF               	iorwf	(??___flge+2)& (0+255),w,b
  9869  0053F6  0100               	movlb	0	; () banked
  9870  0053F8  11D0               	iorwf	(??___flge+3)& (0+255),w,b
  9871  0053FA  A4D8               	btfss	status,2,c
  9872  0053FC  D009               	goto	l6497
  9873                           
  9874                           ; BSR set to: 0
  9875  0053FE  0E00               	movlw	0
  9876  005400  0100               	movlb	0	; () banked
  9877  005402  6FC5               	movwf	___flge@ff1& (0+255),b
  9878  005404  0E00               	movlw	0
  9879  005406  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  9880  005408  0E00               	movlw	0
  9881  00540A  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  9882  00540C  0E00               	movlw	0
  9883  00540E  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  9884  005410                     l6497:
  9885                           
  9886                           ; BSR set to: 0
  9887  005410  0E00               	movlw	0
  9888  005412  0100               	movlb	0	; () banked
  9889  005414  15C9               	andwf	___flge@ff2& (0+255),w,b
  9890  005416  0100               	movlb	0	; () banked
  9891  005418  6FCD               	movwf	??___flge& (0+255),b
  9892  00541A  0E00               	movlw	0
  9893  00541C  0100               	movlb	0	; () banked
  9894  00541E  15CA               	andwf	(___flge@ff2+1)& (0+255),w,b
  9895  005420  0100               	movlb	0	; () banked
  9896  005422  6FCE               	movwf	(??___flge+1)& (0+255),b
  9897  005424  0E80               	movlw	128
  9898  005426  0100               	movlb	0	; () banked
  9899  005428  15CB               	andwf	(___flge@ff2+2)& (0+255),w,b
  9900  00542A  0100               	movlb	0	; () banked
  9901  00542C  6FCF               	movwf	(??___flge+2)& (0+255),b
  9902  00542E  0E7F               	movlw	127
  9903  005430  0100               	movlb	0	; () banked
  9904  005432  15CC               	andwf	(___flge@ff2+3)& (0+255),w,b
  9905  005434  0100               	movlb	0	; () banked
  9906  005436  6FD0               	movwf	(??___flge+3)& (0+255),b
  9907  005438  0100               	movlb	0	; () banked
  9908  00543A  51CD               	movf	??___flge& (0+255),w,b
  9909  00543C  0100               	movlb	0	; () banked
  9910  00543E  11CE               	iorwf	(??___flge+1)& (0+255),w,b
  9911  005440  0100               	movlb	0	; () banked
  9912  005442  11CF               	iorwf	(??___flge+2)& (0+255),w,b
  9913  005444  0100               	movlb	0	; () banked
  9914  005446  11D0               	iorwf	(??___flge+3)& (0+255),w,b
  9915  005448  A4D8               	btfss	status,2,c
  9916  00544A  D009               	goto	l6501
  9917                           
  9918                           ; BSR set to: 0
  9919  00544C  0E00               	movlw	0
  9920  00544E  0100               	movlb	0	; () banked
  9921  005450  6FC9               	movwf	___flge@ff2& (0+255),b
  9922  005452  0E00               	movlw	0
  9923  005454  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  9924  005456  0E00               	movlw	0
  9925  005458  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  9926  00545A  0E00               	movlw	0
  9927  00545C  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  9928  00545E                     l6501:
  9929                           
  9930                           ; BSR set to: 0
  9931  00545E  0100               	movlb	0	; () banked
  9932  005460  AFC8               	btfss	(___flge@ff1+3)& (0+255),7,b
  9933  005462  D026               	goto	l6505
  9934                           
  9935                           ; BSR set to: 0
  9936  005464  C0C5  F0CD         	movff	___flge@ff1,??___flge
  9937  005468  C0C6  F0CE         	movff	___flge@ff1+1,??___flge+1
  9938  00546C  C0C7  F0CF         	movff	___flge@ff1+2,??___flge+2
  9939  005470  C0C8  F0D0         	movff	___flge@ff1+3,??___flge+3
  9940  005474  0100               	movlb	0	; () banked
  9941  005476  1FCD               	comf	??___flge& (0+255),f,b
  9942  005478  1FCE               	comf	(??___flge+1)& (0+255),f,b
  9943  00547A  1FCF               	comf	(??___flge+2)& (0+255),f,b
  9944  00547C  1FD0               	comf	(??___flge+3)& (0+255),f,b
  9945  00547E  2BCD               	incf	??___flge& (0+255),f,b
  9946  005480  0E00               	movlw	0
  9947  005482  23CE               	addwfc	(??___flge+1)& (0+255),f,b
  9948  005484  23CF               	addwfc	(??___flge+2)& (0+255),f,b
  9949  005486  23D0               	addwfc	(??___flge+3)& (0+255),f,b
  9950  005488  0E00               	movlw	0
  9951  00548A  0100               	movlb	0	; () banked
  9952  00548C  25CD               	addwf	??___flge& (0+255),w,b
  9953  00548E  0100               	movlb	0	; () banked
  9954  005490  6FC5               	movwf	___flge@ff1& (0+255),b
  9955  005492  0E00               	movlw	0
  9956  005494  0100               	movlb	0	; () banked
  9957  005496  21CE               	addwfc	(??___flge+1)& (0+255),w,b
  9958  005498  0100               	movlb	0	; () banked
  9959  00549A  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  9960  00549C  0E00               	movlw	0
  9961  00549E  0100               	movlb	0	; () banked
  9962  0054A0  21CF               	addwfc	(??___flge+2)& (0+255),w,b
  9963  0054A2  0100               	movlb	0	; () banked
  9964  0054A4  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  9965  0054A6  0E80               	movlw	128
  9966  0054A8  0100               	movlb	0	; () banked
  9967  0054AA  21D0               	addwfc	(??___flge+3)& (0+255),w,b
  9968  0054AC  0100               	movlb	0	; () banked
  9969  0054AE  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  9970  0054B0                     l6505:
  9971                           
  9972                           ; BSR set to: 0
  9973  0054B0  0100               	movlb	0	; () banked
  9974  0054B2  AFCC               	btfss	(___flge@ff2+3)& (0+255),7,b
  9975  0054B4  D026               	goto	l1078
  9976                           
  9977                           ; BSR set to: 0
  9978  0054B6  C0C9  F0CD         	movff	___flge@ff2,??___flge
  9979  0054BA  C0CA  F0CE         	movff	___flge@ff2+1,??___flge+1
  9980  0054BE  C0CB  F0CF         	movff	___flge@ff2+2,??___flge+2
  9981  0054C2  C0CC  F0D0         	movff	___flge@ff2+3,??___flge+3
  9982  0054C6  0100               	movlb	0	; () banked
  9983  0054C8  1FCD               	comf	??___flge& (0+255),f,b
  9984  0054CA  1FCE               	comf	(??___flge+1)& (0+255),f,b
  9985  0054CC  1FCF               	comf	(??___flge+2)& (0+255),f,b
  9986  0054CE  1FD0               	comf	(??___flge+3)& (0+255),f,b
  9987  0054D0  2BCD               	incf	??___flge& (0+255),f,b
  9988  0054D2  0E00               	movlw	0
  9989  0054D4  23CE               	addwfc	(??___flge+1)& (0+255),f,b
  9990  0054D6  23CF               	addwfc	(??___flge+2)& (0+255),f,b
  9991  0054D8  23D0               	addwfc	(??___flge+3)& (0+255),f,b
  9992  0054DA  0E00               	movlw	0
  9993  0054DC  0100               	movlb	0	; () banked
  9994  0054DE  25CD               	addwf	??___flge& (0+255),w,b
  9995  0054E0  0100               	movlb	0	; () banked
  9996  0054E2  6FC9               	movwf	___flge@ff2& (0+255),b
  9997  0054E4  0E00               	movlw	0
  9998  0054E6  0100               	movlb	0	; () banked
  9999  0054E8  21CE               	addwfc	(??___flge+1)& (0+255),w,b
 10000  0054EA  0100               	movlb	0	; () banked
 10001  0054EC  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
 10002  0054EE  0E00               	movlw	0
 10003  0054F0  0100               	movlb	0	; () banked
 10004  0054F2  21CF               	addwfc	(??___flge+2)& (0+255),w,b
 10005  0054F4  0100               	movlb	0	; () banked
 10006  0054F6  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
 10007  0054F8  0E80               	movlw	128
 10008  0054FA  0100               	movlb	0	; () banked
 10009  0054FC  21D0               	addwfc	(??___flge+3)& (0+255),w,b
 10010  0054FE  0100               	movlb	0	; () banked
 10011  005500  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
 10012  005502                     l1078:
 10013                           
 10014                           ; BSR set to: 0
 10015  005502  0E00               	movlw	0
 10016  005504  0100               	movlb	0	; () banked
 10017  005506  1BC5               	xorwf	___flge@ff1& (0+255),f,b
 10018  005508  0E00               	movlw	0
 10019  00550A  1BC6               	xorwf	(___flge@ff1+1)& (0+255),f,b
 10020  00550C  0E00               	movlw	0
 10021  00550E  1BC7               	xorwf	(___flge@ff1+2)& (0+255),f,b
 10022  005510  0E80               	movlw	128
 10023  005512  1BC8               	xorwf	(___flge@ff1+3)& (0+255),f,b
 10024  005514  0E00               	movlw	0
 10025  005516  0100               	movlb	0	; () banked
 10026  005518  1BC9               	xorwf	___flge@ff2& (0+255),f,b
 10027  00551A  0E00               	movlw	0
 10028  00551C  1BCA               	xorwf	(___flge@ff2+1)& (0+255),f,b
 10029  00551E  0E00               	movlw	0
 10030  005520  1BCB               	xorwf	(___flge@ff2+2)& (0+255),f,b
 10031  005522  0E80               	movlw	128
 10032  005524  1BCC               	xorwf	(___flge@ff2+3)& (0+255),f,b
 10033  005526  0100               	movlb	0	; () banked
 10034  005528  51C9               	movf	___flge@ff2& (0+255),w,b
 10035  00552A  0100               	movlb	0	; () banked
 10036  00552C  5DC5               	subwf	___flge@ff1& (0+255),w,b
 10037  00552E  0100               	movlb	0	; () banked
 10038  005530  51CA               	movf	(___flge@ff2+1)& (0+255),w,b
 10039  005532  0100               	movlb	0	; () banked
 10040  005534  59C6               	subwfb	(___flge@ff1+1)& (0+255),w,b
 10041  005536  0100               	movlb	0	; () banked
 10042  005538  51CB               	movf	(___flge@ff2+2)& (0+255),w,b
 10043  00553A  0100               	movlb	0	; () banked
 10044  00553C  59C7               	subwfb	(___flge@ff1+2)& (0+255),w,b
 10045  00553E  0100               	movlb	0	; () banked
 10046  005540  51CC               	movf	(___flge@ff2+3)& (0+255),w,b
 10047  005542  0100               	movlb	0	; () banked
 10048  005544  59C8               	subwfb	(___flge@ff1+3)& (0+255),w,b
 10049  005546  B0D8               	btfsc	status,0,c
 10050  005548  D002               	goto	l6511
 10051                           
 10052                           ; BSR set to: 0
 10053  00554A  90D8               	bcf	status,0,c
 10054  00554C  0012               	return	
 10055  00554E                     l6511:
 10056                           
 10057                           ; BSR set to: 0
 10058  00554E  80D8               	bsf	status,0,c
 10059                           
 10060                           ; BSR set to: 0
 10061  005550  0012               	return	
 10062  005552                     __end_of___flge:
 10063                           	opt stack 0
 10064                           tblptru	equ	0xFF8
 10065                           tblptrh	equ	0xFF7
 10066                           tblptrl	equ	0xFF6
 10067                           tablat	equ	0xFF5
 10068                           prodh	equ	0xFF4
 10069                           prodl	equ	0xFF3
 10070                           postinc0	equ	0xFEE
 10071                           wreg	equ	0xFE8
 10072                           postdec1	equ	0xFE5
 10073                           fsr1l	equ	0xFE1
 10074                           indf2	equ	0xFDF
 10075                           postinc2	equ	0xFDE
 10076                           postdec2	equ	0xFDD
 10077                           fsr2h	equ	0xFDA
 10078                           fsr2l	equ	0xFD9
 10079                           status	equ	0xFD8
 10080                           
 10081 ;; *************** function ___fldiv *****************
 10082 ;; Defined at:
 10083 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 10084 ;; Parameters:    Size  Location     Type
 10085 ;;  b               4   23[BANK0 ] unsigned char 
 10086 ;;  a               4   27[BANK0 ] unsigned char 
 10087 ;; Auto vars:     Size  Location     Type
 10088 ;;  grs             4   42[BANK0 ] unsigned long 
 10089 ;;  rem             4   36[BANK0 ] unsigned long 
 10090 ;;  new_exp         2   40[BANK0 ] int 
 10091 ;;  aexp            1   47[BANK0 ] unsigned char 
 10092 ;;  bexp            1   46[BANK0 ] unsigned char 
 10093 ;;  sign            1   35[BANK0 ] unsigned char 
 10094 ;; Return value:  Size  Location     Type
 10095 ;;                  4   23[BANK0 ] unsigned char 
 10096 ;; Registers used:
 10097 ;;		wreg, status,2, status,0
 10098 ;; Tracked objects:
 10099 ;;		On entry : 0/0
 10100 ;;		On exit  : 0/0
 10101 ;;		Unchanged: 0/0
 10102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10103 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10104 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10105 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10106 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10107 ;;Total ram usage:       25 bytes
 10108 ;; Hardware stack levels used:    1
 10109 ;; Hardware stack levels required when called:    4
 10110 ;; This function calls:
 10111 ;;		Nothing
 10112 ;; This function is called by:
 10113 ;;		_parallelo
 10114 ;;		_matematica
 10115 ;;		_asin
 10116 ;;		_atan
 10117 ;;		_sin
 10118 ;; This function uses a non-reentrant model
 10119 ;;
 10120                           
 10121                           	psect	text25
 10122  003C06                     __ptext25:
 10123                           	opt stack 0
 10124  003C06                     ___fldiv:
 10125                           	opt stack 22
 10126                           
 10127                           ; BSR set to: 0
 10128                           ;incstack = 0
 10129  003C06  0100               	movlb	0	; () banked
 10130  003C08  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10131  003C0A  0B80               	andlw	128
 10132  003C0C  0100               	movlb	0	; () banked
 10133  003C0E  6F83               	movwf	___fldiv@sign& (0+255),b
 10134  003C10  0100               	movlb	0	; () banked
 10135  003C12  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10136  003C14  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
 10137  003C16  0100               	movlb	0	; () banked
 10138  003C18  6F8E               	movwf	___fldiv@bexp& (0+255),b
 10139                           
 10140                           ; BSR set to: 0
 10141  003C1A  0100               	movlb	0	; () banked
 10142  003C1C  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10143  003C1E  D002               	goto	l6631
 10144                           
 10145                           ; BSR set to: 0
 10146  003C20  0100               	movlb	0	; () banked
 10147  003C22  818E               	bsf	___fldiv@bexp& (0+255),0,b
 10148  003C24                     l6631:
 10149                           
 10150                           ; BSR set to: 0
 10151  003C24  0100               	movlb	0	; () banked
 10152  003C26  518E               	movf	___fldiv@bexp& (0+255),w,b
 10153  003C28  0100               	movlb	0	; () banked
 10154  003C2A  B4D8               	btfsc	status,2,c
 10155  003C2C  D012               	goto	l6641
 10156                           
 10157                           ; BSR set to: 0
 10158  003C2E  0100               	movlb	0	; () banked
 10159  003C30  298E               	incf	___fldiv@bexp& (0+255),w,b
 10160  003C32  A4D8               	btfss	status,2,c
 10161  003C34  D009               	goto	l6637
 10162                           
 10163                           ; BSR set to: 0
 10164  003C36  0E00               	movlw	0
 10165  003C38  0100               	movlb	0	; () banked
 10166  003C3A  6F77               	movwf	___fldiv@b& (0+255),b
 10167  003C3C  0E00               	movlw	0
 10168  003C3E  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10169  003C40  0E00               	movlw	0
 10170  003C42  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10171  003C44  0E00               	movlw	0
 10172  003C46  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10173  003C48                     l6637:
 10174                           
 10175                           ; BSR set to: 0
 10176  003C48  0100               	movlb	0	; () banked
 10177  003C4A  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10178                           
 10179                           ; BSR set to: 0
 10180  003C4C  0E00               	movlw	0
 10181  003C4E  0100               	movlb	0	; () banked
 10182  003C50  D008               	goto	L6
 10183  003C52                     l6641:
 10184                           
 10185                           ; BSR set to: 0
 10186  003C52  0E00               	movlw	0
 10187  003C54  0100               	movlb	0	; () banked
 10188  003C56  6F77               	movwf	___fldiv@b& (0+255),b
 10189  003C58  0E00               	movlw	0
 10190  003C5A  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10191  003C5C  0E00               	movlw	0
 10192  003C5E  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10193  003C60  0E00               	movlw	0
 10194  003C62                     L6:
 10195  003C62  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10196                           
 10197                           ; BSR set to: 0
 10198                           
 10199                           ; BSR set to: 0
 10200  003C64  0100               	movlb	0	; () banked
 10201  003C66  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10202  003C68  0B80               	andlw	128
 10203  003C6A  0100               	movlb	0	; () banked
 10204  003C6C  1B83               	xorwf	___fldiv@sign& (0+255),f,b
 10205                           
 10206                           ; BSR set to: 0
 10207  003C6E  0100               	movlb	0	; () banked
 10208  003C70  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10209  003C72  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
 10210  003C74  0100               	movlb	0	; () banked
 10211  003C76  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10212                           
 10213                           ; BSR set to: 0
 10214  003C78  0100               	movlb	0	; () banked
 10215  003C7A  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
 10216  003C7C  D002               	goto	l6651
 10217                           
 10218                           ; BSR set to: 0
 10219  003C7E  0100               	movlb	0	; () banked
 10220  003C80  818F               	bsf	___fldiv@aexp& (0+255),0,b
 10221  003C82                     l6651:
 10222                           
 10223                           ; BSR set to: 0
 10224  003C82  0100               	movlb	0	; () banked
 10225  003C84  518F               	movf	___fldiv@aexp& (0+255),w,b
 10226  003C86  0100               	movlb	0	; () banked
 10227  003C88  B4D8               	btfsc	status,2,c
 10228  003C8A  D012               	goto	l6661
 10229                           
 10230                           ; BSR set to: 0
 10231  003C8C  0100               	movlb	0	; () banked
 10232  003C8E  298F               	incf	___fldiv@aexp& (0+255),w,b
 10233  003C90  A4D8               	btfss	status,2,c
 10234  003C92  D009               	goto	l6657
 10235                           
 10236                           ; BSR set to: 0
 10237  003C94  0E00               	movlw	0
 10238  003C96  0100               	movlb	0	; () banked
 10239  003C98  6F7B               	movwf	___fldiv@a& (0+255),b
 10240  003C9A  0E00               	movlw	0
 10241  003C9C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10242  003C9E  0E00               	movlw	0
 10243  003CA0  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10244  003CA2  0E00               	movlw	0
 10245  003CA4  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10246  003CA6                     l6657:
 10247                           
 10248                           ; BSR set to: 0
 10249  003CA6  0100               	movlb	0	; () banked
 10250  003CA8  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
 10251                           
 10252                           ; BSR set to: 0
 10253  003CAA  0E00               	movlw	0
 10254  003CAC  0100               	movlb	0	; () banked
 10255  003CAE  D008               	goto	L7
 10256  003CB0                     l6661:
 10257                           
 10258                           ; BSR set to: 0
 10259  003CB0  0E00               	movlw	0
 10260  003CB2  0100               	movlb	0	; () banked
 10261  003CB4  6F7B               	movwf	___fldiv@a& (0+255),b
 10262  003CB6  0E00               	movlw	0
 10263  003CB8  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10264  003CBA  0E00               	movlw	0
 10265  003CBC  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10266  003CBE  0E00               	movlw	0
 10267  003CC0                     L7:
 10268  003CC0  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10269                           
 10270                           ; BSR set to: 0
 10271                           
 10272                           ; BSR set to: 0
 10273  003CC2  0100               	movlb	0	; () banked
 10274  003CC4  517B               	movf	___fldiv@a& (0+255),w,b
 10275  003CC6  0100               	movlb	0	; () banked
 10276  003CC8  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10277  003CCA  0100               	movlb	0	; () banked
 10278  003CCC  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10279  003CCE  0100               	movlb	0	; () banked
 10280  003CD0  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10281  003CD2  A4D8               	btfss	status,2,c
 10282  003CD4  D017               	goto	l6673
 10283                           
 10284                           ; BSR set to: 0
 10285  003CD6  0E00               	movlw	0
 10286  003CD8  0100               	movlb	0	; () banked
 10287  003CDA  6F77               	movwf	___fldiv@b& (0+255),b
 10288  003CDC  0E00               	movlw	0
 10289  003CDE  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10290  003CE0  0E00               	movlw	0
 10291  003CE2  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10292  003CE4  0E00               	movlw	0
 10293  003CE6  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10294                           
 10295                           ; BSR set to: 0
 10296  003CE8  0100               	movlb	0	; () banked
 10297  003CEA  0E80               	movlw	128
 10298  003CEC  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10299  003CEE  0E7F               	movlw	127
 10300  003CF0  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10301                           
 10302                           ; BSR set to: 0
 10303  003CF2  C077  F077         	movff	___fldiv@b,?___fldiv
 10304  003CF6  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10305  003CFA  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10306  003CFE  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10307                           
 10308                           ; BSR set to: 0
 10309  003D02  0012               	return	
 10310  003D04                     l6673:
 10311                           
 10312                           ; BSR set to: 0
 10313  003D04  0100               	movlb	0	; () banked
 10314  003D06  518E               	movf	___fldiv@bexp& (0+255),w,b
 10315  003D08  0100               	movlb	0	; () banked
 10316  003D0A  A4D8               	btfss	status,2,c
 10317  003D0C  D012               	goto	l6681
 10318                           
 10319                           ; BSR set to: 0
 10320  003D0E  0E00               	movlw	0
 10321  003D10  0100               	movlb	0	; () banked
 10322  003D12  6F77               	movwf	___fldiv@b& (0+255),b
 10323  003D14  0E00               	movlw	0
 10324  003D16  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10325  003D18  0E00               	movlw	0
 10326  003D1A  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10327  003D1C  0E00               	movlw	0
 10328  003D1E  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10329                           
 10330                           ; BSR set to: 0
 10331  003D20  C077  F077         	movff	___fldiv@b,?___fldiv
 10332  003D24  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10333  003D28  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10334  003D2C  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10335                           
 10336                           ; BSR set to: 0
 10337  003D30  0012               	return	
 10338  003D32                     l6681:
 10339                           
 10340                           ; BSR set to: 0
 10341  003D32  0100               	movlb	0	; () banked
 10342  003D34  518F               	movf	___fldiv@aexp& (0+255),w,b
 10343  003D36  0100               	movlb	0	; () banked
 10344  003D38  6F7F               	movwf	??___fldiv& (0+255),b
 10345  003D3A  6B80               	clrf	(??___fldiv+1)& (0+255),b
 10346  003D3C  0100               	movlb	0	; () banked
 10347  003D3E  1F7F               	comf	??___fldiv& (0+255),f,b
 10348  003D40  1F80               	comf	(??___fldiv+1)& (0+255),f,b
 10349  003D42  4B7F               	infsnz	??___fldiv& (0+255),f,b
 10350  003D44  2B80               	incf	(??___fldiv+1)& (0+255),f,b
 10351  003D46  0100               	movlb	0	; () banked
 10352  003D48  518E               	movf	___fldiv@bexp& (0+255),w,b
 10353  003D4A  0100               	movlb	0	; () banked
 10354  003D4C  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10355  003D4E  6B82               	clrf	(??___fldiv+3)& (0+255),b
 10356  003D50  0100               	movlb	0	; () banked
 10357  003D52  517F               	movf	??___fldiv& (0+255),w,b
 10358  003D54  0100               	movlb	0	; () banked
 10359  003D56  2781               	addwf	(??___fldiv+2)& (0+255),f,b
 10360  003D58  0100               	movlb	0	; () banked
 10361  003D5A  5180               	movf	(??___fldiv+1)& (0+255),w,b
 10362  003D5C  0100               	movlb	0	; () banked
 10363  003D5E  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
 10364  003D60  0E7F               	movlw	127
 10365  003D62  0100               	movlb	0	; () banked
 10366  003D64  2581               	addwf	(??___fldiv+2)& (0+255),w,b
 10367  003D66  0100               	movlb	0	; () banked
 10368  003D68  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10369  003D6A  0E00               	movlw	0
 10370  003D6C  0100               	movlb	0	; () banked
 10371  003D6E  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
 10372  003D70  0100               	movlb	0	; () banked
 10373  003D72  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10374                           
 10375                           ; BSR set to: 0
 10376  003D74  C077  F084         	movff	___fldiv@b,___fldiv@rem
 10377  003D78  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 10378  003D7C  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 10379  003D80  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 10380                           
 10381                           ; BSR set to: 0
 10382  003D84  0E00               	movlw	0
 10383  003D86  0100               	movlb	0	; () banked
 10384  003D88  6F77               	movwf	___fldiv@b& (0+255),b
 10385  003D8A  0E00               	movlw	0
 10386  003D8C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10387  003D8E  0E00               	movlw	0
 10388  003D90  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10389  003D92  0E00               	movlw	0
 10390  003D94  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10391                           
 10392                           ; BSR set to: 0
 10393  003D96  0E00               	movlw	0
 10394  003D98  0100               	movlb	0	; () banked
 10395  003D9A  6F8A               	movwf	___fldiv@grs& (0+255),b
 10396  003D9C  0E00               	movlw	0
 10397  003D9E  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
 10398  003DA0  0E00               	movlw	0
 10399  003DA2  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
 10400  003DA4  0E00               	movlw	0
 10401  003DA6  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
 10402                           
 10403                           ; BSR set to: 0
 10404  003DA8  0E00               	movlw	0
 10405  003DAA  0100               	movlb	0	; () banked
 10406  003DAC  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10407  003DAE  D042               	goto	l1386
 10408  003DB0                     l6691:
 10409                           
 10410                           ; BSR set to: 0
 10411  003DB0  0100               	movlb	0	; () banked
 10412  003DB2  518F               	movf	___fldiv@aexp& (0+255),w,b
 10413  003DB4  0100               	movlb	0	; () banked
 10414  003DB6  B4D8               	btfsc	status,2,c
 10415  003DB8  D017               	goto	l6699
 10416                           
 10417                           ; BSR set to: 0
 10418  003DBA  0100               	movlb	0	; () banked
 10419  003DBC  90D8               	bcf	status,0,c
 10420  003DBE  3784               	rlcf	___fldiv@rem& (0+255),f,b
 10421  003DC0  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10422  003DC2  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10423  003DC4  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10424  003DC6  0100               	movlb	0	; () banked
 10425  003DC8  90D8               	bcf	status,0,c
 10426  003DCA  3777               	rlcf	___fldiv@b& (0+255),f,b
 10427  003DCC  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10428  003DCE  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10429  003DD0  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10430                           
 10431                           ; BSR set to: 0
 10432  003DD2  0100               	movlb	0	; () banked
 10433  003DD4  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10434  003DD6  D002               	goto	l1389
 10435                           
 10436                           ; BSR set to: 0
 10437  003DD8  0100               	movlb	0	; () banked
 10438  003DDA  8177               	bsf	___fldiv@b& (0+255),0,b
 10439  003DDC                     l1389:
 10440                           
 10441                           ; BSR set to: 0
 10442  003DDC  0100               	movlb	0	; () banked
 10443  003DDE  90D8               	bcf	status,0,c
 10444  003DE0  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10445  003DE2  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10446  003DE4  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10447  003DE6  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10448  003DE8                     l6699:
 10449                           
 10450                           ; BSR set to: 0
 10451  003DE8  0100               	movlb	0	; () banked
 10452  003DEA  517B               	movf	___fldiv@a& (0+255),w,b
 10453  003DEC  0100               	movlb	0	; () banked
 10454  003DEE  5D84               	subwf	___fldiv@rem& (0+255),w,b
 10455  003DF0  0100               	movlb	0	; () banked
 10456  003DF2  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10457  003DF4  0100               	movlb	0	; () banked
 10458  003DF6  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10459  003DF8  0100               	movlb	0	; () banked
 10460  003DFA  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10461  003DFC  0100               	movlb	0	; () banked
 10462  003DFE  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10463  003E00  0100               	movlb	0	; () banked
 10464  003E02  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10465  003E04  0100               	movlb	0	; () banked
 10466  003E06  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10467  003E08  A0D8               	btfss	status,0,c
 10468  003E0A  D012               	goto	l6705
 10469                           
 10470                           ; BSR set to: 0
 10471  003E0C  0100               	movlb	0	; () banked
 10472  003E0E  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10473                           
 10474                           ; BSR set to: 0
 10475  003E10  0100               	movlb	0	; () banked
 10476  003E12  517B               	movf	___fldiv@a& (0+255),w,b
 10477  003E14  0100               	movlb	0	; () banked
 10478  003E16  5F84               	subwf	___fldiv@rem& (0+255),f,b
 10479  003E18  0100               	movlb	0	; () banked
 10480  003E1A  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10481  003E1C  0100               	movlb	0	; () banked
 10482  003E1E  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10483  003E20  0100               	movlb	0	; () banked
 10484  003E22  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10485  003E24  0100               	movlb	0	; () banked
 10486  003E26  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10487  003E28  0100               	movlb	0	; () banked
 10488  003E2A  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10489  003E2C  0100               	movlb	0	; () banked
 10490  003E2E  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10491  003E30                     l6705:
 10492                           
 10493                           ; BSR set to: 0
 10494  003E30  0100               	movlb	0	; () banked
 10495  003E32  2B8F               	incf	___fldiv@aexp& (0+255),f,b
 10496  003E34                     l1386:
 10497                           
 10498                           ; BSR set to: 0
 10499  003E34  0E19               	movlw	25
 10500  003E36  0100               	movlb	0	; () banked
 10501  003E38  658F               	cpfsgt	___fldiv@aexp& (0+255),b
 10502  003E3A  D7BA               	goto	l6691
 10503                           
 10504                           ; BSR set to: 0
 10505                           
 10506                           ; BSR set to: 0
 10507  003E3C  0100               	movlb	0	; () banked
 10508  003E3E  5184               	movf	___fldiv@rem& (0+255),w,b
 10509  003E40  0100               	movlb	0	; () banked
 10510  003E42  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10511  003E44  0100               	movlb	0	; () banked
 10512  003E46  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10513  003E48  0100               	movlb	0	; () banked
 10514  003E4A  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10515  003E4C  B4D8               	btfsc	status,2,c
 10516  003E4E  D018               	goto	l6717
 10517                           
 10518                           ; BSR set to: 0
 10519  003E50  0100               	movlb	0	; () banked
 10520  003E52  818A               	bsf	___fldiv@grs& (0+255),0,b
 10521                           
 10522                           ; BSR set to: 0
 10523  003E54  D015               	goto	l6717
 10524  003E56                     l6711:
 10525                           
 10526                           ; BSR set to: 0
 10527  003E56  0100               	movlb	0	; () banked
 10528  003E58  90D8               	bcf	status,0,c
 10529  003E5A  3777               	rlcf	___fldiv@b& (0+255),f,b
 10530  003E5C  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10531  003E5E  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10532  003E60  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10533                           
 10534                           ; BSR set to: 0
 10535  003E62  0100               	movlb	0	; () banked
 10536  003E64  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10537  003E66  D002               	goto	l1395
 10538                           
 10539                           ; BSR set to: 0
 10540  003E68  0100               	movlb	0	; () banked
 10541  003E6A  8177               	bsf	___fldiv@b& (0+255),0,b
 10542  003E6C                     l1395:
 10543                           
 10544                           ; BSR set to: 0
 10545  003E6C  0100               	movlb	0	; () banked
 10546  003E6E  90D8               	bcf	status,0,c
 10547  003E70  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10548  003E72  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10549  003E74  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10550  003E76  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10551  003E78  0100               	movlb	0	; () banked
 10552  003E7A  0788               	decf	___fldiv@new_exp& (0+255),f,b
 10553  003E7C  A0D8               	btfss	status,0,c
 10554  003E7E  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10555  003E80                     l6717:
 10556                           
 10557                           ; BSR set to: 0
 10558  003E80  0100               	movlb	0	; () banked
 10559  003E82  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10560  003E84  D7E8               	goto	l6711
 10561                           
 10562                           ; BSR set to: 0
 10563                           
 10564                           ; BSR set to: 0
 10565  003E86  0E00               	movlw	0
 10566  003E88  0100               	movlb	0	; () banked
 10567  003E8A  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10568                           
 10569                           ; BSR set to: 0
 10570  003E8C  0100               	movlb	0	; () banked
 10571  003E8E  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10572  003E90  D024               	goto	l1397
 10573                           
 10574                           ; BSR set to: 0
 10575  003E92  0EFF               	movlw	255
 10576  003E94  0100               	movlb	0	; () banked
 10577  003E96  158A               	andwf	___fldiv@grs& (0+255),w,b
 10578  003E98  0100               	movlb	0	; () banked
 10579  003E9A  6F7F               	movwf	??___fldiv& (0+255),b
 10580  003E9C  0EFF               	movlw	255
 10581  003E9E  0100               	movlb	0	; () banked
 10582  003EA0  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10583  003EA2  0100               	movlb	0	; () banked
 10584  003EA4  6F80               	movwf	(??___fldiv+1)& (0+255),b
 10585  003EA6  0EFF               	movlw	255
 10586  003EA8  0100               	movlb	0	; () banked
 10587  003EAA  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10588  003EAC  0100               	movlb	0	; () banked
 10589  003EAE  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10590  003EB0  0E7F               	movlw	127
 10591  003EB2  0100               	movlb	0	; () banked
 10592  003EB4  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10593  003EB6  0100               	movlb	0	; () banked
 10594  003EB8  6F82               	movwf	(??___fldiv+3)& (0+255),b
 10595  003EBA  0100               	movlb	0	; () banked
 10596  003EBC  517F               	movf	??___fldiv& (0+255),w,b
 10597  003EBE  0100               	movlb	0	; () banked
 10598  003EC0  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
 10599  003EC2  0100               	movlb	0	; () banked
 10600  003EC4  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
 10601  003EC6  0100               	movlb	0	; () banked
 10602  003EC8  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
 10603  003ECA  A4D8               	btfss	status,2,c
 10604  003ECC  D003               	goto	l6727
 10605                           
 10606                           ; BSR set to: 0
 10607                           
 10608                           ; BSR set to: 0
 10609  003ECE  0100               	movlb	0	; () banked
 10610  003ED0  A177               	btfss	___fldiv@b& (0+255),0,b
 10611  003ED2  D003               	goto	l1397
 10612  003ED4                     l6727:
 10613                           
 10614                           ; BSR set to: 0
 10615  003ED4  0E01               	movlw	1
 10616  003ED6  0100               	movlb	0	; () banked
 10617  003ED8  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10618  003EDA                     l1397:
 10619                           
 10620                           ; BSR set to: 0
 10621  003EDA  0100               	movlb	0	; () banked
 10622  003EDC  518F               	movf	___fldiv@aexp& (0+255),w,b
 10623  003EDE  0100               	movlb	0	; () banked
 10624  003EE0  B4D8               	btfsc	status,2,c
 10625  003EE2  D023               	goto	l6737
 10626                           
 10627                           ; BSR set to: 0
 10628  003EE4  0E01               	movlw	1
 10629  003EE6  0100               	movlb	0	; () banked
 10630  003EE8  2777               	addwf	___fldiv@b& (0+255),f,b
 10631  003EEA  0E00               	movlw	0
 10632  003EEC  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10633  003EEE  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10634  003EF0  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10635                           
 10636                           ; BSR set to: 0
 10637  003EF2  0100               	movlb	0	; () banked
 10638  003EF4  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
 10639  003EF6  D019               	goto	l6737
 10640                           
 10641                           ; BSR set to: 0
 10642  003EF8  C077  F07F         	movff	___fldiv@b,??___fldiv
 10643  003EFC  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
 10644  003F00  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
 10645  003F04  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
 10646  003F08  0100               	movlb	0	; () banked
 10647  003F0A  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
 10648  003F0C  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
 10649  003F0E  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
 10650  003F10  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
 10651  003F12  337F               	rrcf	??___fldiv& (0+255),f,b
 10652  003F14  C07F  F077         	movff	??___fldiv,___fldiv@b
 10653  003F18  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
 10654  003F1C  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
 10655  003F20  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
 10656                           
 10657                           ; BSR set to: 0
 10658  003F24  0100               	movlb	0	; () banked
 10659  003F26  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
 10660  003F28  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10661  003F2A                     l6737:
 10662                           
 10663                           ; BSR set to: 0
 10664  003F2A  0100               	movlb	0	; () banked
 10665  003F2C  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10666  003F2E  D014               	goto	l6741
 10667  003F30  0100               	movlb	0	; () banked
 10668  003F32  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10669  003F34  E104               	bnz	u8580
 10670  003F36  0100               	movlb	0	; () banked
 10671  003F38  2988               	incf	___fldiv@new_exp& (0+255),w,b
 10672  003F3A  A0D8               	btfss	status,0,c
 10673  003F3C  D00D               	goto	l6741
 10674  003F3E                     u8580:
 10675                           
 10676                           ; BSR set to: 0
 10677  003F3E  0E00               	movlw	0
 10678  003F40  0100               	movlb	0	; () banked
 10679  003F42  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10680  003F44  6988               	setf	___fldiv@new_exp& (0+255),b
 10681  003F46  0E00               	movlw	0
 10682  003F48  0100               	movlb	0	; () banked
 10683  003F4A  6F77               	movwf	___fldiv@b& (0+255),b
 10684  003F4C  0E00               	movlw	0
 10685  003F4E  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10686  003F50  0E00               	movlw	0
 10687  003F52  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10688  003F54  0E00               	movlw	0
 10689  003F56  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10690  003F58                     l6741:
 10691                           
 10692                           ; BSR set to: 0
 10693  003F58  0100               	movlb	0	; () banked
 10694  003F5A  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10695  003F5C  D007               	goto	l6743
 10696  003F5E  0100               	movlb	0	; () banked
 10697  003F60  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10698  003F62  E115               	bnz	l6745
 10699  003F64  0100               	movlb	0	; () banked
 10700  003F66  0588               	decf	___fldiv@new_exp& (0+255),w,b
 10701  003F68  B0D8               	btfsc	status,0,c
 10702  003F6A  D011               	goto	l6745
 10703  003F6C                     l6743:
 10704                           
 10705                           ; BSR set to: 0
 10706  003F6C  0E00               	movlw	0
 10707  003F6E  0100               	movlb	0	; () banked
 10708  003F70  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10709  003F72  0E00               	movlw	0
 10710  003F74  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10711  003F76  0E00               	movlw	0
 10712  003F78  0100               	movlb	0	; () banked
 10713  003F7A  6F77               	movwf	___fldiv@b& (0+255),b
 10714  003F7C  0E00               	movlw	0
 10715  003F7E  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10716  003F80  0E00               	movlw	0
 10717  003F82  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10718  003F84  0E00               	movlw	0
 10719  003F86  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10720  003F88  0E00               	movlw	0
 10721  003F8A  0100               	movlb	0	; () banked
 10722  003F8C  6F83               	movwf	___fldiv@sign& (0+255),b
 10723  003F8E                     l6745:
 10724                           
 10725                           ; BSR set to: 0
 10726  003F8E  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
 10727                           
 10728                           ; BSR set to: 0
 10729  003F92  0100               	movlb	0	; () banked
 10730  003F94  A18E               	btfss	___fldiv@bexp& (0+255),0,b
 10731  003F96  D003               	goto	l6751
 10732                           
 10733                           ; BSR set to: 0
 10734  003F98  0100               	movlb	0	; () banked
 10735  003F9A  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10736  003F9C  D002               	goto	l6753
 10737  003F9E                     l6751:
 10738                           
 10739                           ; BSR set to: 0
 10740  003F9E  0100               	movlb	0	; () banked
 10741  003FA0  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
 10742  003FA2                     l6753:
 10743                           
 10744                           ; BSR set to: 0
 10745  003FA2  0100               	movlb	0	; () banked
 10746  003FA4  90D8               	bcf	status,0,c
 10747  003FA6  318E               	rrcf	___fldiv@bexp& (0+255),w,b
 10748  003FA8  0100               	movlb	0	; () banked
 10749  003FAA  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10750                           
 10751                           ; BSR set to: 0
 10752  003FAC  0100               	movlb	0	; () banked
 10753  003FAE  5183               	movf	___fldiv@sign& (0+255),w,b
 10754  003FB0  0100               	movlb	0	; () banked
 10755  003FB2  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10756                           
 10757                           ; BSR set to: 0
 10758  003FB4  C077  F077         	movff	___fldiv@b,?___fldiv
 10759  003FB8  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10760  003FBC  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10761  003FC0  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10762  003FC4  0012               	return	
 10763  003FC6                     __end_of___fldiv:
 10764                           	opt stack 0
 10765                           tblptru	equ	0xFF8
 10766                           tblptrh	equ	0xFF7
 10767                           tblptrl	equ	0xFF6
 10768                           tablat	equ	0xFF5
 10769                           prodh	equ	0xFF4
 10770                           prodl	equ	0xFF3
 10771                           postinc0	equ	0xFEE
 10772                           wreg	equ	0xFE8
 10773                           postdec1	equ	0xFE5
 10774                           fsr1l	equ	0xFE1
 10775                           indf2	equ	0xFDF
 10776                           postinc2	equ	0xFDE
 10777                           postdec2	equ	0xFDD
 10778                           fsr2h	equ	0xFDA
 10779                           fsr2l	equ	0xFD9
 10780                           status	equ	0xFD8
 10781                           
 10782 ;; *************** function _delay_s *****************
 10783 ;; Defined at:
 10784 ;;		line 102 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
 10785 ;; Parameters:    Size  Location     Type
 10786 ;;  value_s         1    wreg     unsigned char 
 10787 ;; Auto vars:     Size  Location     Type
 10788 ;;  value_s         1   31[BANK0 ] unsigned char 
 10789 ;;  repeat_loop     1   32[BANK0 ] unsigned char 
 10790 ;; Return value:  Size  Location     Type
 10791 ;;		None               void
 10792 ;; Registers used:
 10793 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10794 ;; Tracked objects:
 10795 ;;		On entry : 0/0
 10796 ;;		On exit  : 0/0
 10797 ;;		Unchanged: 0/0
 10798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10800 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10802 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10803 ;;Total ram usage:        2 bytes
 10804 ;; Hardware stack levels used:    1
 10805 ;; Hardware stack levels required when called:    6
 10806 ;; This function calls:
 10807 ;;		_delay_ms
 10808 ;; This function is called by:
 10809 ;;		_park_routine
 10810 ;; This function uses a non-reentrant model
 10811 ;;
 10812                           
 10813                           	psect	text26
 10814  005F68                     __ptext26:
 10815                           	opt stack 0
 10816  005F68                     _delay_s:
 10817                           	opt stack 23
 10818                           
 10819                           ; BSR set to: 0
 10820                           ;incstack = 0
 10821                           ;delay_s@value_s stored from wreg
 10822  005F68  0100               	movlb	0	; () banked
 10823  005F6A  6F7F               	movwf	delay_s@value_s& (0+255),b
 10824                           
 10825                           ;src\delay.c: 104: unsigned char repeat_loop;
 10826                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10827  005F6C  0E00               	movlw	0
 10828  005F6E  0100               	movlb	0	; () banked
 10829  005F70  6F80               	movwf	delay_s@repeat_loop& (0+255),b
 10830  005F72  D009               	goto	l7317
 10831  005F74                     l7313:
 10832                           
 10833                           ; BSR set to: 0
 10834                           ;src\delay.c: 107: delay_ms (1000);
 10835  005F74  0E03               	movlw	3
 10836  005F76  0100               	movlb	0	; () banked
 10837  005F78  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10838  005F7A  0EE8               	movlw	232
 10839  005F7C  6F7D               	movwf	delay_ms@value_ms& (0+255),b
 10840  005F7E  EC84  F02F         	call	_delay_ms	;wreg free
 10841  005F82  0100               	movlb	0	; () banked
 10842  005F84  2B80               	incf	delay_s@repeat_loop& (0+255),f,b
 10843  005F86                     l7317:
 10844                           
 10845                           ; BSR set to: 0
 10846  005F86  0100               	movlb	0	; () banked
 10847  005F88  517F               	movf	delay_s@value_s& (0+255),w,b
 10848  005F8A  0100               	movlb	0	; () banked
 10849  005F8C  5D80               	subwf	delay_s@repeat_loop& (0+255),w,b
 10850  005F8E  B0D8               	btfsc	status,0,c
 10851  005F90  0012               	return	
 10852  005F92  D7F0               	goto	l7313
 10853  005F94                     __end_of_delay_s:
 10854                           	opt stack 0
 10855                           tblptru	equ	0xFF8
 10856                           tblptrh	equ	0xFF7
 10857                           tblptrl	equ	0xFF6
 10858                           tablat	equ	0xFF5
 10859                           prodh	equ	0xFF4
 10860                           prodl	equ	0xFF3
 10861                           postinc0	equ	0xFEE
 10862                           wreg	equ	0xFE8
 10863                           postdec1	equ	0xFE5
 10864                           fsr1l	equ	0xFE1
 10865                           indf2	equ	0xFDF
 10866                           postinc2	equ	0xFDE
 10867                           postdec2	equ	0xFDD
 10868                           fsr2h	equ	0xFDA
 10869                           fsr2l	equ	0xFD9
 10870                           status	equ	0xFD8
 10871                           
 10872 ;; *************** function _delay_ms *****************
 10873 ;; Defined at:
 10874 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
 10875 ;; Parameters:    Size  Location     Type
 10876 ;;  value_ms        2   29[BANK0 ] unsigned int 
 10877 ;; Auto vars:     Size  Location     Type
 10878 ;;		None
 10879 ;; Return value:  Size  Location     Type
 10880 ;;		None               void
 10881 ;; Registers used:
 10882 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10883 ;; Tracked objects:
 10884 ;;		On entry : 0/0
 10885 ;;		On exit  : 0/0
 10886 ;;		Unchanged: 0/0
 10887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10888 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10891 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10892 ;;Total ram usage:        2 bytes
 10893 ;; Hardware stack levels used:    1
 10894 ;; Hardware stack levels required when called:    5
 10895 ;; This function calls:
 10896 ;;		___wmul
 10897 ;; This function is called by:
 10898 ;;		_delay_s
 10899 ;;		_park_routine
 10900 ;; This function uses a non-reentrant model
 10901 ;;
 10902                           
 10903                           	psect	text27
 10904  005F08                     __ptext27:
 10905                           	opt stack 0
 10906  005F08                     _delay_ms:
 10907                           	opt stack 23
 10908                           
 10909                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 10910                           
 10911                           ; BSR set to: 0
 10912                           ;incstack = 0
 10913  005F08  C0E8  F077         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 10914  005F0C  0100               	movlb	0	; () banked
 10915  005F0E  6B78               	clrf	(___wmul@multiplier+1)& (0+255),b
 10916  005F10  C07D  F079         	movff	delay_ms@value_ms,___wmul@multiplicand
 10917  005F14  C07E  F07A         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 10918  005F18  EC69  F02F         	call	___wmul	;wreg free
 10919  005F1C  C077  F034         	movff	?___wmul,_clock_counter_reference	;volatile
 10920  005F20  C078  F035         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 10921                           
 10922                           ;src\delay.c: 75: while (clock_counter_reference) {
 10923  005F24  D006               	goto	l569
 10924  005F26                     l7219:
 10925                           
 10926                           ;src\delay.c: 85: _delay(240);
 10927  005F26  0E50               	movlw	80
 10928  005F28                     u9917:
 10929  005F28  2EE8               	decfsz	wreg,f,c
 10930  005F2A  D7FE               	goto	u9917
 10931                           
 10932                           ;src\delay.c: 88: clock_counter_reference--;
 10933  005F2C  0634               	decf	_clock_counter_reference,f,c	;volatile
 10934  005F2E  A0D8               	btfss	status,0,c
 10935  005F30  0635               	decf	_clock_counter_reference+1,f,c	;volatile
 10936  005F32                     l569:
 10937  005F32  5034               	movf	_clock_counter_reference,w,c	;volatile
 10938  005F34  1035               	iorwf	_clock_counter_reference+1,w,c	;volatile
 10939  005F36  B4D8               	btfsc	status,2,c
 10940  005F38  0012               	return	
 10941  005F3A  D7F5               	goto	l7219
 10942  005F3C                     __end_of_delay_ms:
 10943                           	opt stack 0
 10944                           tblptru	equ	0xFF8
 10945                           tblptrh	equ	0xFF7
 10946                           tblptrl	equ	0xFF6
 10947                           tablat	equ	0xFF5
 10948                           prodh	equ	0xFF4
 10949                           prodl	equ	0xFF3
 10950                           postinc0	equ	0xFEE
 10951                           wreg	equ	0xFE8
 10952                           postdec1	equ	0xFE5
 10953                           fsr1l	equ	0xFE1
 10954                           indf2	equ	0xFDF
 10955                           postinc2	equ	0xFDE
 10956                           postdec2	equ	0xFDD
 10957                           fsr2h	equ	0xFDA
 10958                           fsr2l	equ	0xFD9
 10959                           status	equ	0xFD8
 10960                           
 10961 ;; *************** function ___wmul *****************
 10962 ;; Defined at:
 10963 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10964 ;; Parameters:    Size  Location     Type
 10965 ;;  multiplier      2   23[BANK0 ] unsigned int 
 10966 ;;  multiplicand    2   25[BANK0 ] unsigned int 
 10967 ;; Auto vars:     Size  Location     Type
 10968 ;;  product         2   27[BANK0 ] unsigned int 
 10969 ;; Return value:  Size  Location     Type
 10970 ;;                  2   23[BANK0 ] unsigned int 
 10971 ;; Registers used:
 10972 ;;		wreg, status,2, status,0, prodl, prodh
 10973 ;; Tracked objects:
 10974 ;;		On entry : 0/0
 10975 ;;		On exit  : 0/0
 10976 ;;		Unchanged: 0/0
 10977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10978 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10979 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10981 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10982 ;;Total ram usage:        6 bytes
 10983 ;; Hardware stack levels used:    1
 10984 ;; Hardware stack levels required when called:    4
 10985 ;; This function calls:
 10986 ;;		Nothing
 10987 ;; This function is called by:
 10988 ;;		_delay_ms
 10989 ;; This function uses a non-reentrant model
 10990 ;;
 10991                           
 10992                           	psect	text28
 10993  005ED2                     __ptext28:
 10994                           	opt stack 0
 10995  005ED2                     ___wmul:
 10996                           	opt stack 23
 10997                           
 10998                           ;incstack = 0
 10999  005ED2  0100               	movlb	0	; () banked
 11000  005ED4  5177               	movf	___wmul@multiplier& (0+255),w,b
 11001  005ED6  0100               	movlb	0	; () banked
 11002  005ED8  0379               	mulwf	___wmul@multiplicand& (0+255),b
 11003  005EDA  CFF3 F07B          	movff	prodl,___wmul@product
 11004  005EDE  CFF4 F07C          	movff	prodh,___wmul@product+1
 11005  005EE2  0100               	movlb	0	; () banked
 11006  005EE4  5177               	movf	___wmul@multiplier& (0+255),w,b
 11007  005EE6  0100               	movlb	0	; () banked
 11008  005EE8  037A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11009  005EEA  50F3               	movf	prodl,w,c
 11010  005EEC  0100               	movlb	0	; () banked
 11011  005EEE  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 11012  005EF0  0100               	movlb	0	; () banked
 11013  005EF2  5178               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11014  005EF4  0100               	movlb	0	; () banked
 11015  005EF6  0379               	mulwf	___wmul@multiplicand& (0+255),b
 11016  005EF8  50F3               	movf	prodl,w,c
 11017  005EFA  0100               	movlb	0	; () banked
 11018  005EFC  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 11019                           
 11020                           ; BSR set to: 0
 11021  005EFE  C07B  F077         	movff	___wmul@product,?___wmul
 11022  005F02  C07C  F078         	movff	___wmul@product+1,?___wmul+1
 11023  005F06  0012               	return	
 11024  005F08                     __end_of___wmul:
 11025                           	opt stack 0
 11026                           tblptru	equ	0xFF8
 11027                           tblptrh	equ	0xFF7
 11028                           tblptrl	equ	0xFF6
 11029                           tablat	equ	0xFF5
 11030                           prodh	equ	0xFF4
 11031                           prodl	equ	0xFF3
 11032                           postinc0	equ	0xFEE
 11033                           wreg	equ	0xFE8
 11034                           postdec1	equ	0xFE5
 11035                           fsr1l	equ	0xFE1
 11036                           indf2	equ	0xFDF
 11037                           postinc2	equ	0xFDE
 11038                           postdec2	equ	0xFDD
 11039                           fsr2h	equ	0xFDA
 11040                           fsr2l	equ	0xFD9
 11041                           status	equ	0xFD8
 11042                           
 11043 ;; *************** function _configurazione *****************
 11044 ;; Defined at:
 11045 ;;		line 449 in file "parcheggio.c"
 11046 ;; Parameters:    Size  Location     Type
 11047 ;;		None
 11048 ;; Auto vars:     Size  Location     Type
 11049 ;;		None
 11050 ;; Return value:  Size  Location     Type
 11051 ;;		None               void
 11052 ;; Registers used:
 11053 ;;		wreg, status,2, status,0, cstack
 11054 ;; Tracked objects:
 11055 ;;		On entry : 0/0
 11056 ;;		On exit  : 0/0
 11057 ;;		Unchanged: 0/0
 11058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11063 ;;Total ram usage:        0 bytes
 11064 ;; Hardware stack levels used:    1
 11065 ;; Hardware stack levels required when called:    6
 11066 ;; This function calls:
 11067 ;;		_CANInitialize
 11068 ;; This function is called by:
 11069 ;;		_main
 11070 ;; This function uses a non-reentrant model
 11071 ;;
 11072                           
 11073                           	psect	text29
 11074  005CA2                     __ptext29:
 11075                           	opt stack 0
 11076  005CA2                     _configurazione:
 11077                           	opt stack 24
 11078                           
 11079                           ;parcheggio.c: 450: LATA = 0x00;
 11080                           
 11081                           ; BSR set to: 0
 11082                           ;incstack = 0
 11083  005CA2  0E00               	movlw	0
 11084  005CA4  6E89               	movwf	3977,c	;volatile
 11085                           
 11086                           ;parcheggio.c: 451: TRISA = 0b11110000;
 11087  005CA6  0EF0               	movlw	240
 11088  005CA8  6E92               	movwf	3986,c	;volatile
 11089                           
 11090                           ;parcheggio.c: 453: LATB = 0x00;
 11091  005CAA  0E00               	movlw	0
 11092  005CAC  6E8A               	movwf	3978,c	;volatile
 11093                           
 11094                           ;parcheggio.c: 454: TRISB = 0b10001010;
 11095  005CAE  0E8A               	movlw	138
 11096  005CB0  6E93               	movwf	3987,c	;volatile
 11097                           
 11098                           ;parcheggio.c: 456: LATC = 0x00;
 11099  005CB2  0E00               	movlw	0
 11100  005CB4  6E8B               	movwf	3979,c	;volatile
 11101                           
 11102                           ;parcheggio.c: 457: TRISC = 0b11111111;
 11103  005CB6  6894               	setf	3988,c	;volatile
 11104                           
 11105                           ;parcheggio.c: 459: ADCON1 = 0xFF;
 11106  005CB8  68C1               	setf	4033,c	;volatile
 11107                           
 11108                           ;parcheggio.c: 460: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
 11109  005CBA  0E06               	movlw	6
 11110  005CBC  0100               	movlb	0	; () banked
 11111  005CBE  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11112  005CC0  0E05               	movlw	5
 11113  005CC2  0100               	movlb	0	; () banked
 11114  005CC4  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
 11115  005CC6  0E01               	movlw	1
 11116  005CC8  0100               	movlb	0	; () banked
 11117  005CCA  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11118  005CCC  0E03               	movlw	3
 11119  005CCE  0100               	movlb	0	; () banked
 11120  005CD0  6F88               	movwf	CANInitialize@BRP& (0+255),b
 11121  005CD2  0E9D               	movlw	157
 11122  005CD4  0100               	movlb	0	; () banked
 11123  005CD6  6F89               	movwf	CANInitialize@flags& (0+255),b
 11124  005CD8  0E04               	movlw	4
 11125  005CDA  EC1D  F028         	call	_CANInitialize
 11126                           
 11127                           ;parcheggio.c: 462: RCONbits.IPEN = 1;
 11128  005CDE  8ED0               	bsf	4048,7,c	;volatile
 11129                           
 11130                           ;parcheggio.c: 463: PIR3bits.RXB1IF = 0;
 11131  005CE0  92A4               	bcf	4004,1,c	;volatile
 11132                           
 11133                           ;parcheggio.c: 464: PIR3bits.RXB0IF = 0;
 11134  005CE2  90A4               	bcf	4004,0,c	;volatile
 11135                           
 11136                           ;parcheggio.c: 465: IPR3bits.RXB1IP = 0;
 11137  005CE4  92A5               	bcf	4005,1,c	;volatile
 11138                           
 11139                           ;parcheggio.c: 466: IPR3bits.RXB0IP = 0;
 11140  005CE6  90A5               	bcf	4005,0,c	;volatile
 11141                           
 11142                           ;parcheggio.c: 467: PIE3bits.RXB1IE = 1;
 11143  005CE8  82A3               	bsf	4003,1,c	;volatile
 11144                           
 11145                           ;parcheggio.c: 468: PIE3bits.RXB0IE = 1;
 11146  005CEA  80A3               	bsf	4003,0,c	;volatile
 11147                           
 11148                           ;parcheggio.c: 469: INTCON2bits.TMR0IP = 0;
 11149  005CEC  94F1               	bcf	intcon2,2,c	;volatile
 11150                           
 11151                           ;parcheggio.c: 470: T0CON = 0x80;
 11152  005CEE  0E80               	movlw	128
 11153  005CF0  6ED5               	movwf	4053,c	;volatile
 11154                           
 11155                           ;parcheggio.c: 471: T3CON = 0x11;
 11156  005CF2  0E11               	movlw	17
 11157  005CF4  6EB1               	movwf	4017,c	;volatile
 11158                           
 11159                           ;parcheggio.c: 472: TMR0H = 0x34;
 11160  005CF6  0E34               	movlw	52
 11161  005CF8  6ED7               	movwf	4055,c	;volatile
 11162                           
 11163                           ;parcheggio.c: 473: TMR0L = 0xE0;
 11164  005CFA  0EE0               	movlw	224
 11165  005CFC  6ED6               	movwf	4054,c	;volatile
 11166                           
 11167                           ;parcheggio.c: 474: INTCONbits.TMR0IF = 0;
 11168  005CFE  94F2               	bcf	intcon,2,c	;volatile
 11169                           
 11170                           ;parcheggio.c: 475: INTCONbits.TMR0IE = 1;
 11171  005D00  8AF2               	bsf	intcon,5,c	;volatile
 11172                           
 11173                           ;parcheggio.c: 476: INTCON2bits.INTEDG0 = 1;
 11174  005D02  8CF1               	bsf	intcon2,6,c	;volatile
 11175                           
 11176                           ;parcheggio.c: 477: INTCONbits.INT0IF = 0;
 11177  005D04  92F2               	bcf	intcon,1,c	;volatile
 11178                           
 11179                           ;parcheggio.c: 478: INTCONbits.INT0IE = 0;
 11180  005D06  98F2               	bcf	intcon,4,c	;volatile
 11181                           
 11182                           ;parcheggio.c: 479: INTCONbits.GIEL = 1;
 11183  005D08  8CF2               	bsf	intcon,6,c	;volatile
 11184                           
 11185                           ;parcheggio.c: 480: INTCONbits.GIEH = 1;
 11186  005D0A  8EF2               	bsf	intcon,7,c	;volatile
 11187  005D0C  0012               	return		;funcret
 11188  005D0E                     __end_of_configurazione:
 11189                           	opt stack 0
 11190                           tblptru	equ	0xFF8
 11191                           tblptrh	equ	0xFF7
 11192                           tblptrl	equ	0xFF6
 11193                           tablat	equ	0xFF5
 11194                           prodh	equ	0xFF4
 11195                           prodl	equ	0xFF3
 11196                           intcon	equ	0xFF2
 11197                           intcon2	equ	0xFF1
 11198                           postinc0	equ	0xFEE
 11199                           wreg	equ	0xFE8
 11200                           postdec1	equ	0xFE5
 11201                           fsr1l	equ	0xFE1
 11202                           indf2	equ	0xFDF
 11203                           postinc2	equ	0xFDE
 11204                           postdec2	equ	0xFDD
 11205                           fsr2h	equ	0xFDA
 11206                           fsr2l	equ	0xFD9
 11207                           status	equ	0xFD8
 11208                           
 11209 ;; *************** function _CANInitialize *****************
 11210 ;; Defined at:
 11211 ;;		line 219 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 11212 ;; Parameters:    Size  Location     Type
 11213 ;;  propSeg         1    wreg     unsigned char 
 11214 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
 11215 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
 11216 ;;  SJW             1   39[BANK0 ] unsigned char 
 11217 ;;  BRP             1   40[BANK0 ] unsigned char 
 11218 ;;  flags           1   41[BANK0 ] enum E16313
 11219 ;; Auto vars:     Size  Location     Type
 11220 ;;  propSeg         1   46[BANK0 ] unsigned char 
 11221 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
 11222 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
 11223 ;; Return value:  Size  Location     Type
 11224 ;;		None               void
 11225 ;; Registers used:
 11226 ;;		wreg, status,2, status,0, cstack
 11227 ;; Tracked objects:
 11228 ;;		On entry : 0/0
 11229 ;;		On exit  : 0/0
 11230 ;;		Unchanged: 0/0
 11231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11232 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11233 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11234 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11235 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11236 ;;Total ram usage:       12 bytes
 11237 ;; Hardware stack levels used:    1
 11238 ;; Hardware stack levels required when called:    5
 11239 ;; This function calls:
 11240 ;;		_CANOperationMode
 11241 ;;		_CANSetFilter
 11242 ;;		_CANSetMask
 11243 ;; This function is called by:
 11244 ;;		_configurazione
 11245 ;; This function uses a non-reentrant model
 11246 ;;
 11247                           
 11248                           	psect	text30
 11249  00503A                     __ptext30:
 11250                           	opt stack 0
 11251  00503A                     _CANInitialize:
 11252                           	opt stack 24
 11253                           
 11254                           ;incstack = 0
 11255                           ;CANInitialize@propSeg stored from wreg
 11256  00503A  0100               	movlb	0	; () banked
 11257  00503C  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
 11258                           
 11259                           ;inc\CANlib.h: 221: BYTE FilterConfig1;
 11260                           ;inc\CANlib.h: 222: BYTE FilterConfig2;
 11261                           ;inc\CANlib.h: 224: CANOperationMode(CAN_OP_MODE_CONFIG);
 11262  00503E  0E80               	movlw	128
 11263  005040  ECDC  F02F         	call	_CANOperationMode
 11264                           
 11265                           ;inc\CANlib.h: 226: BRGCON1 = 0x00;
 11266  005044  0E00               	movlw	0
 11267  005046  6E70               	movwf	3952,c	;volatile
 11268                           
 11269                           ;inc\CANlib.h: 227: BRGCON2 = 0x00;
 11270  005048  0E00               	movlw	0
 11271  00504A  6E71               	movwf	3953,c	;volatile
 11272                           
 11273                           ;inc\CANlib.h: 228: BRGCON3 = 0x00;
 11274  00504C  0E00               	movlw	0
 11275  00504E  6E72               	movwf	3954,c	;volatile
 11276                           
 11277                           ;inc\CANlib.h: 230: SJW= SJW << 6;
 11278  005050  0100               	movlb	0	; () banked
 11279  005052  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
 11280  005054  42E8               	rrncf	wreg,f,c
 11281  005056  0BC0               	andlw	192
 11282  005058  0100               	movlb	0	; () banked
 11283  00505A  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11284                           
 11285                           ; BSR set to: 0
 11286                           ;inc\CANlib.h: 231: BRGCON1 |= SJW;
 11287  00505C  0100               	movlb	0	; () banked
 11288  00505E  5187               	movf	CANInitialize@SJW& (0+255),w,b
 11289  005060  1270               	iorwf	3952,f,c	;volatile
 11290                           
 11291                           ; BSR set to: 0
 11292                           ;inc\CANlib.h: 232: BRGCON1 |= BRP;
 11293  005062  0100               	movlb	0	; () banked
 11294  005064  5188               	movf	CANInitialize@BRP& (0+255),w,b
 11295  005066  1270               	iorwf	3952,f,c	;volatile
 11296                           
 11297                           ; BSR set to: 0
 11298                           ;inc\CANlib.h: 234: BRGCON2 |= propSeg;
 11299  005068  0100               	movlb	0	; () banked
 11300  00506A  518E               	movf	CANInitialize@propSeg& (0+255),w,b
 11301  00506C  1271               	iorwf	3953,f,c	;volatile
 11302                           
 11303                           ; BSR set to: 0
 11304                           ;inc\CANlib.h: 235: phaseSeg1 = phaseSeg1 <<3;
 11305  00506E  0100               	movlb	0	; () banked
 11306  005070  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
 11307  005072  42E8               	rrncf	wreg,f,c
 11308  005074  0BF8               	andlw	248
 11309  005076  0100               	movlb	0	; () banked
 11310  005078  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11311                           
 11312                           ; BSR set to: 0
 11313                           ;inc\CANlib.h: 236: BRGCON2 |= phaseSeg1;
 11314  00507A  0100               	movlb	0	; () banked
 11315  00507C  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
 11316  00507E  1271               	iorwf	3953,f,c	;volatile
 11317                           
 11318                           ; BSR set to: 0
 11319                           ;inc\CANlib.h: 238: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
 11320  005080  0100               	movlb	0	; () banked
 11321  005082  A589               	btfss	CANInitialize@flags& (0+255),2,b
 11322                           
 11323                           ; BSR set to: 0
 11324                           ;inc\CANlib.h: 239: BRGCON2bits.SAM= 1;
 11325  005084  8C71               	bsf	3953,6,c	;volatile
 11326                           
 11327                           ; BSR set to: 0
 11328                           ;inc\CANlib.h: 241: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
 11329  005086  0100               	movlb	0	; () banked
 11330  005088  B189               	btfsc	CANInitialize@flags& (0+255),0,b
 11331                           
 11332                           ; BSR set to: 0
 11333                           ;inc\CANlib.h: 242: BRGCON2bits.SEG2PHTS = 1;
 11334  00508A  8E71               	bsf	3953,7,c	;volatile
 11335                           
 11336                           ; BSR set to: 0
 11337                           ;inc\CANlib.h: 244: BRGCON3 |= phaseSeg2;
 11338                           
 11339                           ; BSR set to: 0
 11340  00508C  0100               	movlb	0	; () banked
 11341  00508E  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
 11342  005090  1272               	iorwf	3954,f,c	;volatile
 11343                           
 11344                           ; BSR set to: 0
 11345                           ;inc\CANlib.h: 246: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
 11346  005092  0100               	movlb	0	; () banked
 11347  005094  B389               	btfsc	CANInitialize@flags& (0+255),1,b
 11348                           
 11349                           ; BSR set to: 0
 11350                           ;inc\CANlib.h: 247: BRGCON3bits.WAKFIL = 1;
 11351  005096  8C72               	bsf	3954,6,c	;volatile
 11352                           
 11353                           ; BSR set to: 0
 11354                           ;inc\CANlib.h: 252: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
 11355                           
 11356                           ; BSR set to: 0
 11357  005098  0100               	movlb	0	; () banked
 11358  00509A  5189               	movf	CANInitialize@flags& (0+255),w,b
 11359  00509C  0B60               	andlw	96
 11360  00509E  6E60               	movwf	3936,c	;volatile
 11361                           
 11362                           ;inc\CANlib.h: 253: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
 11363  0050A0  0100               	movlb	0	; () banked
 11364  0050A2  5189               	movf	CANInitialize@flags& (0+255),w,b
 11365  0050A4  0B10               	andlw	16
 11366  0050A6  0AFF               	xorlw	255
 11367  0050A8  B4D8               	btfsc	status,2,c
 11368                           
 11369                           ; BSR set to: 0
 11370                           ;inc\CANlib.h: 254: RXB0CONbits.RXB0DBEN = 1;
 11371  0050AA  8460               	bsf	3936,2,c	;volatile
 11372                           
 11373                           ; BSR set to: 0
 11374                           ;inc\CANlib.h: 256: RXB1CON = RXB0CON;
 11375  0050AC  CF60 FF50          	movff	3936,3920	;volatile
 11376                           
 11377                           ; BSR set to: 0
 11378                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
 11379  0050B0  0E00               	movlw	0
 11380  0050B2  0100               	movlb	0	; () banked
 11381  0050B4  6F77               	movwf	CANSetMask@mask& (0+255),b
 11382  0050B6  0E00               	movlw	0
 11383  0050B8  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11384  0050BA  0E00               	movlw	0
 11385  0050BC  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11386  0050BE  0E00               	movlw	0
 11387  0050C0  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11388  0050C2  0EF7               	movlw	247
 11389  0050C4  0100               	movlb	0	; () banked
 11390  0050C6  6F7B               	movwf	CANSetMask@type& (0+255),b
 11391  0050C8  0E01               	movlw	1
 11392  0050CA  ECE3  F01F         	call	_CANSetMask
 11393                           
 11394                           ;inc\CANlib.h: 261: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
 11395  0050CE  0E00               	movlw	0
 11396  0050D0  0100               	movlb	0	; () banked
 11397  0050D2  6F77               	movwf	CANSetMask@mask& (0+255),b
 11398  0050D4  0E00               	movlw	0
 11399  0050D6  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11400  0050D8  0E00               	movlw	0
 11401  0050DA  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11402  0050DC  0E00               	movlw	0
 11403  0050DE  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11404  0050E0  0EF7               	movlw	247
 11405  0050E2  0100               	movlb	0	; () banked
 11406  0050E4  6F7B               	movwf	CANSetMask@type& (0+255),b
 11407  0050E6  0E02               	movlw	2
 11408  0050E8  ECE3  F01F         	call	_CANSetMask
 11409                           
 11410                           ;inc\CANlib.h: 264: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
 11411  0050EC  D00F               	goto	l5485
 11412  0050EE                     l5479:
 11413                           
 11414                           ;inc\CANlib.h: 267: FilterConfig1 = CAN_CONFIG_XTD_MSG;
 11415  0050EE  0EF7               	movlw	247
 11416  0050F0  0100               	movlb	0	; () banked
 11417  0050F2  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
 11418  0050F4  D007               	goto	l5481
 11419  0050F6                     l358:
 11420                           
 11421                           ; BSR set to: 0
 11422                           ;inc\CANlib.h: 272: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11423  0050F6  0100               	movlb	0	; () banked
 11424  0050F8  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11425                           
 11426                           ;inc\CANlib.h: 273: FilterConfig2 = CAN_CONFIG_STD_MSG;
 11427  0050FA  0100               	movlb	0	; () banked
 11428  0050FC  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
 11429                           
 11430                           ;inc\CANlib.h: 274: break;
 11431  0050FE  D028               	goto	l5487
 11432  005100                     l359:
 11433                           
 11434                           ; BSR set to: 0
 11435                           ;inc\CANlib.h: 276: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11436  005100  0100               	movlb	0	; () banked
 11437  005102  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11438  005104                     l5481:
 11439                           
 11440                           ; BSR set to: 0
 11441                           ;inc\CANlib.h: 277: FilterConfig2 = CAN_CONFIG_XTD_MSG;
 11442  005104  0EF7               	movlw	247
 11443  005106  0100               	movlb	0	; () banked
 11444  005108  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
 11445                           
 11446                           ; BSR set to: 0
 11447                           ;inc\CANlib.h: 279: }
 11448                           
 11449                           ;inc\CANlib.h: 278: break;
 11450  00510A  D022               	goto	l5487
 11451  00510C                     l5485:
 11452  00510C  0E9F               	movlw	159
 11453  00510E  0100               	movlb	0	; () banked
 11454  005110  6F8A               	movwf	??_CANInitialize& (0+255),b
 11455  005112  0EFF               	movlw	255
 11456  005114  0100               	movlb	0	; () banked
 11457  005116  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
 11458  005118  0100               	movlb	0	; () banked
 11459  00511A  5189               	movf	CANInitialize@flags& (0+255),w,b
 11460  00511C  0B60               	andlw	96
 11461  00511E  0100               	movlb	0	; () banked
 11462  005120  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
 11463  005122  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
 11464  005124  0100               	movlb	0	; () banked
 11465  005126  518A               	movf	??_CANInitialize& (0+255),w,b
 11466  005128  0100               	movlb	0	; () banked
 11467  00512A  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
 11468  00512C  0100               	movlb	0	; () banked
 11469  00512E  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
 11470  005130  0100               	movlb	0	; () banked
 11471  005132  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
 11472                           
 11473                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11474                           ; Switch size 1, requested type "space"
 11475                           ; Number of cases is 1, Range of values is 0 to 0
 11476                           ; switch strategies available:
 11477                           ; Name         Instructions Cycles
 11478                           ; simple_byte            4     3 (average)
 11479                           ;	Chosen strategy is simple_byte
 11480  005134  0100               	movlb	0	; () banked
 11481  005136  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
 11482  005138  0A00               	xorlw	0	; case 0
 11483  00513A  A4D8               	btfss	status,2,c
 11484  00513C  D7E1               	goto	l359
 11485                           
 11486                           ; BSR set to: 0
 11487                           ; Switch size 1, requested type "space"
 11488                           ; Number of cases is 2, Range of values is 191 to 223
 11489                           ; switch strategies available:
 11490                           ; Name         Instructions Cycles
 11491                           ; simple_byte            7     4 (average)
 11492                           ;	Chosen strategy is simple_byte
 11493  00513E  0100               	movlb	0	; () banked
 11494  005140  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
 11495  005142  0ABF               	xorlw	191	; case 191
 11496  005144  B4D8               	btfsc	status,2,c
 11497  005146  D7D7               	goto	l358
 11498  005148  0A60               	xorlw	96	; case 223
 11499  00514A  B4D8               	btfsc	status,2,c
 11500  00514C  D7D0               	goto	l5479
 11501  00514E  D7D8               	goto	l359
 11502  005150                     l5487:
 11503                           
 11504                           ; BSR set to: 0
 11505                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
 11506  005150  0E00               	movlw	0
 11507  005152  0100               	movlb	0	; () banked
 11508  005154  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11509  005156  0E00               	movlw	0
 11510  005158  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11511  00515A  0E00               	movlw	0
 11512  00515C  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11513  00515E  0E00               	movlw	0
 11514  005160  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11515  005162  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11516  005166  0E00               	movlw	0
 11517  005168  ECA9  F006         	call	_CANSetFilter
 11518                           
 11519                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
 11520  00516C  0E00               	movlw	0
 11521  00516E  0100               	movlb	0	; () banked
 11522  005170  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11523  005172  0E00               	movlw	0
 11524  005174  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11525  005176  0E00               	movlw	0
 11526  005178  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11527  00517A  0E00               	movlw	0
 11528  00517C  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11529  00517E  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11530  005182  0E01               	movlw	1
 11531  005184  ECA9  F006         	call	_CANSetFilter
 11532                           
 11533                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
 11534  005188  0E00               	movlw	0
 11535  00518A  0100               	movlb	0	; () banked
 11536  00518C  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11537  00518E  0E00               	movlw	0
 11538  005190  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11539  005192  0E00               	movlw	0
 11540  005194  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11541  005196  0E00               	movlw	0
 11542  005198  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11543  00519A  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11544  00519E  0E02               	movlw	2
 11545  0051A0  ECA9  F006         	call	_CANSetFilter
 11546                           
 11547                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
 11548  0051A4  0E00               	movlw	0
 11549  0051A6  0100               	movlb	0	; () banked
 11550  0051A8  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11551  0051AA  0E00               	movlw	0
 11552  0051AC  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11553  0051AE  0E00               	movlw	0
 11554  0051B0  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11555  0051B2  0E00               	movlw	0
 11556  0051B4  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11557  0051B6  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11558  0051BA  0E03               	movlw	3
 11559  0051BC  ECA9  F006         	call	_CANSetFilter
 11560                           
 11561                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
 11562  0051C0  0E00               	movlw	0
 11563  0051C2  0100               	movlb	0	; () banked
 11564  0051C4  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11565  0051C6  0E00               	movlw	0
 11566  0051C8  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11567  0051CA  0E00               	movlw	0
 11568  0051CC  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11569  0051CE  0E00               	movlw	0
 11570  0051D0  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11571  0051D2  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11572  0051D6  0E04               	movlw	4
 11573  0051D8  ECA9  F006         	call	_CANSetFilter
 11574                           
 11575                           ;inc\CANlib.h: 286: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
 11576  0051DC  0E00               	movlw	0
 11577  0051DE  0100               	movlb	0	; () banked
 11578  0051E0  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11579  0051E2  0E00               	movlw	0
 11580  0051E4  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11581  0051E6  0E00               	movlw	0
 11582  0051E8  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11583  0051EA  0E00               	movlw	0
 11584  0051EC  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11585  0051EE  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11586  0051F2  0E05               	movlw	5
 11587  0051F4  ECA9  F006         	call	_CANSetFilter
 11588                           
 11589                           ;inc\CANlib.h: 288: CANOperationMode(CAN_OP_MODE_NORMAL);
 11590  0051F8  0E00               	movlw	0
 11591  0051FA  ECDC  F02F         	call	_CANOperationMode
 11592  0051FE  0012               	return		;funcret
 11593  005200                     __end_of_CANInitialize:
 11594                           	opt stack 0
 11595                           tblptru	equ	0xFF8
 11596                           tblptrh	equ	0xFF7
 11597                           tblptrl	equ	0xFF6
 11598                           tablat	equ	0xFF5
 11599                           prodh	equ	0xFF4
 11600                           prodl	equ	0xFF3
 11601                           intcon	equ	0xFF2
 11602                           intcon2	equ	0xFF1
 11603                           postinc0	equ	0xFEE
 11604                           wreg	equ	0xFE8
 11605                           postdec1	equ	0xFE5
 11606                           fsr1l	equ	0xFE1
 11607                           indf2	equ	0xFDF
 11608                           postinc2	equ	0xFDE
 11609                           postdec2	equ	0xFDD
 11610                           fsr2h	equ	0xFDA
 11611                           fsr2l	equ	0xFD9
 11612                           status	equ	0xFD8
 11613                           
 11614 ;; *************** function _CANSetMask *****************
 11615 ;; Defined at:
 11616 ;;		line 641 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 11617 ;; Parameters:    Size  Location     Type
 11618 ;;  numBuffer       1    wreg     enum E16347
 11619 ;;  mask            4   23[BANK0 ] unsigned long 
 11620 ;;  type            1   27[BANK0 ] enum E16313
 11621 ;; Auto vars:     Size  Location     Type
 11622 ;;  numBuffer       1   32[BANK0 ] enum E16347
 11623 ;;  tamp            4   33[BANK0 ] unsigned long 
 11624 ;; Return value:  Size  Location     Type
 11625 ;;		None               void
 11626 ;; Registers used:
 11627 ;;		wreg, status,2, status,0
 11628 ;; Tracked objects:
 11629 ;;		On entry : 0/0
 11630 ;;		On exit  : 0/0
 11631 ;;		Unchanged: 0/0
 11632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11633 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11634 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11635 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11636 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11637 ;;Total ram usage:       14 bytes
 11638 ;; Hardware stack levels used:    1
 11639 ;; Hardware stack levels required when called:    4
 11640 ;; This function calls:
 11641 ;;		Nothing
 11642 ;; This function is called by:
 11643 ;;		_CANInitialize
 11644 ;; This function uses a non-reentrant model
 11645 ;;
 11646                           
 11647                           	psect	text31
 11648  003FC6                     __ptext31:
 11649                           	opt stack 0
 11650  003FC6                     _CANSetMask:
 11651                           	opt stack 24
 11652                           
 11653                           ;incstack = 0
 11654                           ;CANSetMask@numBuffer stored from wreg
 11655  003FC6  0100               	movlb	0	; () banked
 11656  003FC8  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
 11657                           
 11658                           ;inc\CANlib.h: 644: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
 11659  003FCA  0100               	movlb	0	; () banked
 11660  003FCC  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11661  003FCE  A4D8               	btfss	status,2,c
 11662  003FD0  D056               	goto	l4955
 11663                           
 11664                           ; BSR set to: 0
 11665  003FD2  0100               	movlb	0	; () banked
 11666  003FD4  297B               	incf	CANSetMask@type& (0+255),w,b
 11667  003FD6  A4D8               	btfss	status,2,c
 11668  003FD8  D052               	goto	l4955
 11669                           
 11670                           ; BSR set to: 0
 11671                           ;inc\CANlib.h: 645: {
 11672                           ;inc\CANlib.h: 646: tamp = (mask >> 3);
 11673  003FDA  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11674  003FDE  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11675  003FE2  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11676  003FE6  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11677  003FEA  0E04               	movlw	4
 11678  003FEC  D006               	goto	u5590
 11679  003FEE                     u5595:
 11680  003FEE  0100               	movlb	0	; () banked
 11681  003FF0  90D8               	bcf	status,0,c
 11682  003FF2  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11683  003FF4  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11684  003FF6  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11685  003FF8  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11686  003FFA                     u5590:
 11687  003FFA  2EE8               	decfsz	wreg,f,c
 11688  003FFC  D7F8               	goto	u5595
 11689  003FFE  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11690  004002  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11691  004006  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11692  00400A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11693                           
 11694                           ; BSR set to: 0
 11695                           ;inc\CANlib.h: 647: tamp = tamp & 0x000000FF;
 11696  00400E  0100               	movlb	0	; () banked
 11697  004010  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11698  004012  0100               	movlb	0	; () banked
 11699  004014  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11700  004016  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11701  004018  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11702  00401A  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11703                           
 11704                           ; BSR set to: 0
 11705                           ;inc\CANlib.h: 648: RXM0SIDH = (unsigned char) tamp;
 11706  00401C  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11707                           
 11708                           ; BSR set to: 0
 11709                           ;inc\CANlib.h: 650: tamp = mask & 0x00000007;
 11710  004020  0E07               	movlw	7
 11711  004022  0100               	movlb	0	; () banked
 11712  004024  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11713  004026  0100               	movlb	0	; () banked
 11714  004028  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11715  00402A  0E00               	movlw	0
 11716  00402C  0100               	movlb	0	; () banked
 11717  00402E  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11718  004030  0100               	movlb	0	; () banked
 11719  004032  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11720  004034  0E00               	movlw	0
 11721  004036  0100               	movlb	0	; () banked
 11722  004038  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11723  00403A  0100               	movlb	0	; () banked
 11724  00403C  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11725  00403E  0E00               	movlw	0
 11726  004040  0100               	movlb	0	; () banked
 11727  004042  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11728  004044  0100               	movlb	0	; () banked
 11729  004046  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11730                           
 11731                           ; BSR set to: 0
 11732                           ;inc\CANlib.h: 651: tamp = tamp << 5;
 11733  004048  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11734  00404C  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11735  004050  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11736  004054  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11737  004058  0E05               	movlw	5
 11738  00405A                     u5605:
 11739  00405A  90D8               	bcf	status,0,c
 11740  00405C  0100               	movlb	0	; () banked
 11741  00405E  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11742  004060  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11743  004062  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11744  004064  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11745  004066  2EE8               	decfsz	wreg,f,c
 11746  004068  D7F8               	goto	u5605
 11747  00406A  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11748  00406E  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11749  004072  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11750  004076  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11751                           
 11752                           ; BSR set to: 0
 11753                           ;inc\CANlib.h: 652: RXM0SIDL = (unsigned char) tamp;
 11754  00407A  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
 11755  00407E                     l4955:
 11756                           
 11757                           ; BSR set to: 0
 11758                           ;inc\CANlib.h: 653: }
 11759                           ;inc\CANlib.h: 655: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
 11760  00407E  0E02               	movlw	2
 11761  004080  0100               	movlb	0	; () banked
 11762  004082  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11763  004084  A4D8               	btfss	status,2,c
 11764  004086  D056               	goto	l4971
 11765                           
 11766                           ; BSR set to: 0
 11767  004088  0100               	movlb	0	; () banked
 11768  00408A  297B               	incf	CANSetMask@type& (0+255),w,b
 11769  00408C  A4D8               	btfss	status,2,c
 11770  00408E  D052               	goto	l4971
 11771                           
 11772                           ; BSR set to: 0
 11773                           ;inc\CANlib.h: 656: {
 11774                           ;inc\CANlib.h: 657: tamp = (mask >> 3);
 11775  004090  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11776  004094  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11777  004098  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11778  00409C  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11779  0040A0  0E04               	movlw	4
 11780  0040A2  D006               	goto	u5630
 11781  0040A4                     u5635:
 11782  0040A4  0100               	movlb	0	; () banked
 11783  0040A6  90D8               	bcf	status,0,c
 11784  0040A8  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11785  0040AA  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11786  0040AC  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11787  0040AE  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11788  0040B0                     u5630:
 11789  0040B0  2EE8               	decfsz	wreg,f,c
 11790  0040B2  D7F8               	goto	u5635
 11791  0040B4  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11792  0040B8  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11793  0040BC  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11794  0040C0  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11795                           
 11796                           ; BSR set to: 0
 11797                           ;inc\CANlib.h: 658: tamp = tamp & 0x000000FF;
 11798  0040C4  0100               	movlb	0	; () banked
 11799  0040C6  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11800  0040C8  0100               	movlb	0	; () banked
 11801  0040CA  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11802  0040CC  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11803  0040CE  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11804  0040D0  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11805                           
 11806                           ; BSR set to: 0
 11807                           ;inc\CANlib.h: 659: RXM1SIDH = (unsigned char) tamp;
 11808  0040D2  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11809                           
 11810                           ; BSR set to: 0
 11811                           ;inc\CANlib.h: 661: tamp = mask & 0x00000007;
 11812  0040D6  0E07               	movlw	7
 11813  0040D8  0100               	movlb	0	; () banked
 11814  0040DA  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11815  0040DC  0100               	movlb	0	; () banked
 11816  0040DE  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11817  0040E0  0E00               	movlw	0
 11818  0040E2  0100               	movlb	0	; () banked
 11819  0040E4  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11820  0040E6  0100               	movlb	0	; () banked
 11821  0040E8  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11822  0040EA  0E00               	movlw	0
 11823  0040EC  0100               	movlb	0	; () banked
 11824  0040EE  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11825  0040F0  0100               	movlb	0	; () banked
 11826  0040F2  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11827  0040F4  0E00               	movlw	0
 11828  0040F6  0100               	movlb	0	; () banked
 11829  0040F8  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11830  0040FA  0100               	movlb	0	; () banked
 11831  0040FC  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11832                           
 11833                           ; BSR set to: 0
 11834                           ;inc\CANlib.h: 662: tamp = tamp << 5;
 11835  0040FE  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11836  004102  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11837  004106  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11838  00410A  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11839  00410E  0E05               	movlw	5
 11840  004110                     u5645:
 11841  004110  90D8               	bcf	status,0,c
 11842  004112  0100               	movlb	0	; () banked
 11843  004114  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11844  004116  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11845  004118  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11846  00411A  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11847  00411C  2EE8               	decfsz	wreg,f,c
 11848  00411E  D7F8               	goto	u5645
 11849  004120  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11850  004124  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11851  004128  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11852  00412C  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11853                           
 11854                           ; BSR set to: 0
 11855                           ;inc\CANlib.h: 663: RXM1SIDL = (unsigned char) tamp;
 11856  004130  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
 11857  004134                     l4971:
 11858                           
 11859                           ; BSR set to: 0
 11860                           ;inc\CANlib.h: 664: }
 11861                           ;inc\CANlib.h: 666: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
 11862  004134  0100               	movlb	0	; () banked
 11863  004136  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11864  004138  A4D8               	btfss	status,2,c
 11865  00413A  D087               	goto	l5003
 11866                           
 11867                           ; BSR set to: 0
 11868  00413C  0EF7               	movlw	247
 11869  00413E  0100               	movlb	0	; () banked
 11870  004140  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11871  004142  A4D8               	btfss	status,2,c
 11872  004144  D082               	goto	l5003
 11873                           
 11874                           ; BSR set to: 0
 11875                           ;inc\CANlib.h: 667: {
 11876                           ;inc\CANlib.h: 668: tamp = mask & 0x000000FF;
 11877  004146  0100               	movlb	0	; () banked
 11878  004148  5177               	movf	CANSetMask@mask& (0+255),w,b
 11879  00414A  0100               	movlb	0	; () banked
 11880  00414C  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11881  00414E  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11882  004150  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11883  004152  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11884                           
 11885                           ; BSR set to: 0
 11886                           ;inc\CANlib.h: 669: RXM0EIDL = (unsigned char) tamp;
 11887  004154  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
 11888                           
 11889                           ; BSR set to: 0
 11890                           ;inc\CANlib.h: 671: tamp = mask & 0x0000FF00;
 11891  004158  0E00               	movlw	0
 11892  00415A  0100               	movlb	0	; () banked
 11893  00415C  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11894  00415E  0100               	movlb	0	; () banked
 11895  004160  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11896  004162  0EFF               	movlw	255
 11897  004164  0100               	movlb	0	; () banked
 11898  004166  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11899  004168  0100               	movlb	0	; () banked
 11900  00416A  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11901  00416C  0E00               	movlw	0
 11902  00416E  0100               	movlb	0	; () banked
 11903  004170  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11904  004172  0100               	movlb	0	; () banked
 11905  004174  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11906  004176  0E00               	movlw	0
 11907  004178  0100               	movlb	0	; () banked
 11908  00417A  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11909  00417C  0100               	movlb	0	; () banked
 11910  00417E  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11911                           
 11912                           ; BSR set to: 0
 11913                           ;inc\CANlib.h: 672: tamp = tamp >> 8;
 11914  004180  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11915  004184  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11916  004188  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11917  00418C  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11918  004190  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 11919  004194  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 11920  004198  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 11921  00419C  0100               	movlb	0	; () banked
 11922  00419E  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 11923  0041A0  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11924  0041A4  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11925  0041A8  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11926  0041AC  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11927                           
 11928                           ; BSR set to: 0
 11929                           ;inc\CANlib.h: 673: RXM0EIDH = (unsigned char) tamp;
 11930  0041B0  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
 11931                           
 11932                           ; BSR set to: 0
 11933                           ;inc\CANlib.h: 675: if (mask & 0x00010000)
 11934  0041B4  0100               	movlb	0	; () banked
 11935  0041B6  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 11936  0041B8  D003               	goto	l432
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x01;
 11940  0041BA  010F               	movlb	15	; () banked
 11941  0041BC  8119               	bsf	25,0,b	;volatile
 11942  0041BE  D002               	goto	l433
 11943  0041C0                     l432:
 11944                           
 11945                           ; BSR set to: 0
 11946                           ;inc\CANlib.h: 677: else
 11947                           ;inc\CANlib.h: 678: RXM0SIDLbits.EID16 = 0x00;
 11948  0041C0  010F               	movlb	15	; () banked
 11949  0041C2  9119               	bcf	25,0,b	;volatile
 11950  0041C4                     l433:
 11951                           
 11952                           ; BSR set to: 15
 11953                           ;inc\CANlib.h: 680: if (mask & 0x00020000)
 11954  0041C4  0100               	movlb	0	; () banked
 11955  0041C6  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 11956  0041C8  D003               	goto	l434
 11957                           
 11958                           ; BSR set to: 0
 11959                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x01;
 11960  0041CA  010F               	movlb	15	; () banked
 11961  0041CC  8319               	bsf	25,1,b	;volatile
 11962  0041CE  D002               	goto	l435
 11963  0041D0                     l434:
 11964                           
 11965                           ; BSR set to: 0
 11966                           ;inc\CANlib.h: 682: else
 11967                           ;inc\CANlib.h: 683: RXM0SIDLbits.EID17 = 0x00;
 11968  0041D0  010F               	movlb	15	; () banked
 11969  0041D2  9319               	bcf	25,1,b	;volatile
 11970  0041D4                     l435:
 11971                           
 11972                           ; BSR set to: 15
 11973                           ;inc\CANlib.h: 685: if (mask & 0x00040000)
 11974  0041D4  0100               	movlb	0	; () banked
 11975  0041D6  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 11976  0041D8  D003               	goto	l436
 11977                           
 11978                           ; BSR set to: 0
 11979                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x01;
 11980  0041DA  010F               	movlb	15	; () banked
 11981  0041DC  8B19               	bsf	25,5,b	;volatile
 11982  0041DE  D002               	goto	l437
 11983  0041E0                     l436:
 11984                           
 11985                           ; BSR set to: 0
 11986                           ;inc\CANlib.h: 687: else
 11987                           ;inc\CANlib.h: 688: RXM0SIDLbits.SID0 = 0x00;
 11988  0041E0  010F               	movlb	15	; () banked
 11989  0041E2  9B19               	bcf	25,5,b	;volatile
 11990  0041E4                     l437:
 11991                           
 11992                           ; BSR set to: 15
 11993                           ;inc\CANlib.h: 690: if (mask & 0x00080000)
 11994  0041E4  0100               	movlb	0	; () banked
 11995  0041E6  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 11996  0041E8  D003               	goto	l438
 11997                           
 11998                           ; BSR set to: 0
 11999                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x01;
 12000  0041EA  010F               	movlb	15	; () banked
 12001  0041EC  8D19               	bsf	25,6,b	;volatile
 12002  0041EE  D002               	goto	l439
 12003  0041F0                     l438:
 12004                           
 12005                           ; BSR set to: 0
 12006                           ;inc\CANlib.h: 692: else
 12007                           ;inc\CANlib.h: 693: RXM0SIDLbits.SID1 = 0x00;
 12008  0041F0  010F               	movlb	15	; () banked
 12009  0041F2  9D19               	bcf	25,6,b	;volatile
 12010  0041F4                     l439:
 12011                           
 12012                           ; BSR set to: 15
 12013                           ;inc\CANlib.h: 695: if (mask & 0x00100000)
 12014  0041F4  0100               	movlb	0	; () banked
 12015  0041F6  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12016  0041F8  D003               	goto	l440
 12017                           
 12018                           ; BSR set to: 0
 12019                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x01 ;
 12020  0041FA  010F               	movlb	15	; () banked
 12021  0041FC  8F19               	bsf	25,7,b	;volatile
 12022  0041FE  D002               	goto	l4997
 12023  004200                     l440:
 12024                           
 12025                           ; BSR set to: 0
 12026                           ;inc\CANlib.h: 697: else
 12027                           ;inc\CANlib.h: 698: RXM0SIDLbits.SID2 = 0x00 ;
 12028  004200  010F               	movlb	15	; () banked
 12029  004202  9F19               	bcf	25,7,b	;volatile
 12030  004204                     l4997:
 12031                           
 12032                           ; BSR set to: 15
 12033                           ;inc\CANlib.h: 700: tamp = (mask >> 21);
 12034  004204  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12035  004208  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12036  00420C  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12037  004210  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12038  004214  0E16               	movlw	22
 12039  004216  D006               	goto	u5720
 12040  004218                     u5725:
 12041  004218  0100               	movlb	0	; () banked
 12042  00421A  90D8               	bcf	status,0,c
 12043  00421C  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12044  00421E  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12045  004220  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12046  004222  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12047  004224                     u5720:
 12048  004224  2EE8               	decfsz	wreg,f,c
 12049  004226  D7F8               	goto	u5725
 12050  004228  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12051  00422C  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12052  004230  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12053  004234  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12054                           
 12055                           ; BSR set to: 0
 12056                           ;inc\CANlib.h: 701: tamp = tamp & 0x000000FF;
 12057  004238  0100               	movlb	0	; () banked
 12058  00423A  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12059  00423C  0100               	movlb	0	; () banked
 12060  00423E  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12061  004240  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12062  004242  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12063  004244  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12064                           
 12065                           ; BSR set to: 0
 12066                           ;inc\CANlib.h: 702: RXM0SIDH = (unsigned char) tamp;
 12067  004246  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 12068  00424A                     l5003:
 12069                           
 12070                           ; BSR set to: 0
 12071                           ;inc\CANlib.h: 703: }
 12072                           ;inc\CANlib.h: 705: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
 12073  00424A  0E02               	movlw	2
 12074  00424C  0100               	movlb	0	; () banked
 12075  00424E  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 12076  004250  A4D8               	btfss	status,2,c
 12077  004252  0012               	return	
 12078                           
 12079                           ; BSR set to: 0
 12080  004254  0EF7               	movlw	247
 12081  004256  0100               	movlb	0	; () banked
 12082  004258  197B               	xorwf	CANSetMask@type& (0+255),w,b
 12083  00425A  A4D8               	btfss	status,2,c
 12084  00425C  0012               	return	
 12085                           
 12086                           ; BSR set to: 0
 12087                           ;inc\CANlib.h: 706: {
 12088                           ;inc\CANlib.h: 707: tamp = mask & 0x000000FF;
 12089  00425E  0100               	movlb	0	; () banked
 12090  004260  5177               	movf	CANSetMask@mask& (0+255),w,b
 12091  004262  0100               	movlb	0	; () banked
 12092  004264  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12093  004266  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12094  004268  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12095  00426A  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12096                           
 12097                           ; BSR set to: 0
 12098                           ;inc\CANlib.h: 708: RXM1EIDL = (unsigned char) tamp;
 12099  00426C  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
 12100                           
 12101                           ; BSR set to: 0
 12102                           ;inc\CANlib.h: 710: tamp = mask & 0x0000FF00;
 12103  004270  0E00               	movlw	0
 12104  004272  0100               	movlb	0	; () banked
 12105  004274  1577               	andwf	CANSetMask@mask& (0+255),w,b
 12106  004276  0100               	movlb	0	; () banked
 12107  004278  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12108  00427A  0EFF               	movlw	255
 12109  00427C  0100               	movlb	0	; () banked
 12110  00427E  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12111  004280  0100               	movlb	0	; () banked
 12112  004282  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12113  004284  0E00               	movlw	0
 12114  004286  0100               	movlb	0	; () banked
 12115  004288  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12116  00428A  0100               	movlb	0	; () banked
 12117  00428C  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12118  00428E  0E00               	movlw	0
 12119  004290  0100               	movlb	0	; () banked
 12120  004292  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12121  004294  0100               	movlb	0	; () banked
 12122  004296  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12123                           
 12124                           ; BSR set to: 0
 12125                           ;inc\CANlib.h: 711: tamp = tamp >> 8;
 12126  004298  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 12127  00429C  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12128  0042A0  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12129  0042A4  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12130  0042A8  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 12131  0042AC  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 12132  0042B0  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 12133  0042B4  0100               	movlb	0	; () banked
 12134  0042B6  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 12135  0042B8  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12136  0042BC  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12137  0042C0  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12138  0042C4  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12139                           
 12140                           ; BSR set to: 0
 12141                           ;inc\CANlib.h: 712: RXM1EIDH = (unsigned char) tamp;
 12142  0042C8  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
 12143                           
 12144                           ; BSR set to: 0
 12145                           ;inc\CANlib.h: 714: if (mask & 0x00010000)
 12146  0042CC  0100               	movlb	0	; () banked
 12147  0042CE  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12148  0042D0  D003               	goto	l443
 12149                           
 12150                           ; BSR set to: 0
 12151                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x01;
 12152  0042D2  010F               	movlb	15	; () banked
 12153  0042D4  811D               	bsf	29,0,b	;volatile
 12154  0042D6  D002               	goto	l444
 12155  0042D8                     l443:
 12156                           
 12157                           ; BSR set to: 0
 12158                           ;inc\CANlib.h: 716: else
 12159                           ;inc\CANlib.h: 717: RXM1SIDLbits.EID16 = 0x00;
 12160  0042D8  010F               	movlb	15	; () banked
 12161  0042DA  911D               	bcf	29,0,b	;volatile
 12162  0042DC                     l444:
 12163                           
 12164                           ; BSR set to: 15
 12165                           ;inc\CANlib.h: 719: if (mask & 0x00020000)
 12166  0042DC  0100               	movlb	0	; () banked
 12167  0042DE  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12168  0042E0  D003               	goto	l445
 12169                           
 12170                           ; BSR set to: 0
 12171                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x01;
 12172  0042E2  010F               	movlb	15	; () banked
 12173  0042E4  831D               	bsf	29,1,b	;volatile
 12174  0042E6  D002               	goto	l446
 12175  0042E8                     l445:
 12176                           
 12177                           ; BSR set to: 0
 12178                           ;inc\CANlib.h: 721: else
 12179                           ;inc\CANlib.h: 722: RXM1SIDLbits.EID17 = 0x00;
 12180  0042E8  010F               	movlb	15	; () banked
 12181  0042EA  931D               	bcf	29,1,b	;volatile
 12182  0042EC                     l446:
 12183                           
 12184                           ; BSR set to: 15
 12185                           ;inc\CANlib.h: 724: if (mask & 0x00040000)
 12186  0042EC  0100               	movlb	0	; () banked
 12187  0042EE  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12188  0042F0  D003               	goto	l447
 12189                           
 12190                           ; BSR set to: 0
 12191                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x01;
 12192  0042F2  010F               	movlb	15	; () banked
 12193  0042F4  8B1D               	bsf	29,5,b	;volatile
 12194  0042F6  D002               	goto	l448
 12195  0042F8                     l447:
 12196                           
 12197                           ; BSR set to: 0
 12198                           ;inc\CANlib.h: 726: else
 12199                           ;inc\CANlib.h: 727: RXM1SIDLbits.SID0 = 0x00;
 12200  0042F8  010F               	movlb	15	; () banked
 12201  0042FA  9B1D               	bcf	29,5,b	;volatile
 12202  0042FC                     l448:
 12203                           
 12204                           ; BSR set to: 15
 12205                           ;inc\CANlib.h: 729: if (mask & 0x00080000)
 12206  0042FC  0100               	movlb	0	; () banked
 12207  0042FE  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12208  004300  D003               	goto	l449
 12209                           
 12210                           ; BSR set to: 0
 12211                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x01;
 12212  004302  010F               	movlb	15	; () banked
 12213  004304  8D1D               	bsf	29,6,b	;volatile
 12214  004306  D002               	goto	l450
 12215  004308                     l449:
 12216                           
 12217                           ; BSR set to: 0
 12218                           ;inc\CANlib.h: 731: else
 12219                           ;inc\CANlib.h: 732: RXM1SIDLbits.SID1 = 0x00;
 12220  004308  010F               	movlb	15	; () banked
 12221  00430A  9D1D               	bcf	29,6,b	;volatile
 12222  00430C                     l450:
 12223                           
 12224                           ; BSR set to: 15
 12225                           ;inc\CANlib.h: 734: if (mask & 0x00100000)
 12226  00430C  0100               	movlb	0	; () banked
 12227  00430E  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12228  004310  D003               	goto	l451
 12229                           
 12230                           ; BSR set to: 0
 12231                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x01 ;
 12232  004312  010F               	movlb	15	; () banked
 12233  004314  8F1D               	bsf	29,7,b	;volatile
 12234  004316  D002               	goto	l5029
 12235  004318                     l451:
 12236                           
 12237                           ; BSR set to: 0
 12238                           ;inc\CANlib.h: 736: else
 12239                           ;inc\CANlib.h: 737: RXM1SIDLbits.SID2 = 0x00 ;
 12240  004318  010F               	movlb	15	; () banked
 12241  00431A  9F1D               	bcf	29,7,b	;volatile
 12242  00431C                     l5029:
 12243                           
 12244                           ; BSR set to: 15
 12245                           ;inc\CANlib.h: 739: tamp = (mask >> 21);
 12246  00431C  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12247  004320  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12248  004324  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12249  004328  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12250  00432C  0E16               	movlw	22
 12251  00432E  D006               	goto	u5800
 12252  004330                     u5805:
 12253  004330  0100               	movlb	0	; () banked
 12254  004332  90D8               	bcf	status,0,c
 12255  004334  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12256  004336  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12257  004338  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12258  00433A  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12259  00433C                     u5800:
 12260  00433C  2EE8               	decfsz	wreg,f,c
 12261  00433E  D7F8               	goto	u5805
 12262  004340  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12263  004344  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12264  004348  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12265  00434C  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12266                           
 12267                           ; BSR set to: 0
 12268                           ;inc\CANlib.h: 740: tamp = tamp & 0x000000FF;
 12269  004350  0100               	movlb	0	; () banked
 12270  004352  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12271  004354  0100               	movlb	0	; () banked
 12272  004356  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12273  004358  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12274  00435A  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12275  00435C  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12276                           
 12277                           ; BSR set to: 0
 12278                           ;inc\CANlib.h: 741: RXM1SIDH = (unsigned char) tamp;
 12279  00435E  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 12280  004362  0012               	return	
 12281  004364                     __end_of_CANSetMask:
 12282                           	opt stack 0
 12283                           tblptru	equ	0xFF8
 12284                           tblptrh	equ	0xFF7
 12285                           tblptrl	equ	0xFF6
 12286                           tablat	equ	0xFF5
 12287                           prodh	equ	0xFF4
 12288                           prodl	equ	0xFF3
 12289                           intcon	equ	0xFF2
 12290                           intcon2	equ	0xFF1
 12291                           postinc0	equ	0xFEE
 12292                           wreg	equ	0xFE8
 12293                           postdec1	equ	0xFE5
 12294                           fsr1l	equ	0xFE1
 12295                           indf2	equ	0xFDF
 12296                           postinc2	equ	0xFDE
 12297                           postdec2	equ	0xFDD
 12298                           fsr2h	equ	0xFDA
 12299                           fsr2l	equ	0xFD9
 12300                           status	equ	0xFD8
 12301                           
 12302 ;; *************** function _CANSetFilter *****************
 12303 ;; Defined at:
 12304 ;;		line 749 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 12305 ;; Parameters:    Size  Location     Type
 12306 ;;  numBuffer       1    wreg     enum E16350
 12307 ;;  filter          4   23[BANK0 ] unsigned long 
 12308 ;;  type            1   27[BANK0 ] enum E16313
 12309 ;; Auto vars:     Size  Location     Type
 12310 ;;  numBuffer       1   32[BANK0 ] enum E16350
 12311 ;;  tamp            4   33[BANK0 ] unsigned long 
 12312 ;; Return value:  Size  Location     Type
 12313 ;;		None               void
 12314 ;; Registers used:
 12315 ;;		wreg, status,2, status,0
 12316 ;; Tracked objects:
 12317 ;;		On entry : 0/0
 12318 ;;		On exit  : 0/0
 12319 ;;		Unchanged: 0/0
 12320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12321 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12322 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12323 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12324 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12325 ;;Total ram usage:       14 bytes
 12326 ;; Hardware stack levels used:    1
 12327 ;; Hardware stack levels required when called:    4
 12328 ;; This function calls:
 12329 ;;		Nothing
 12330 ;; This function is called by:
 12331 ;;		_CANInitialize
 12332 ;; This function uses a non-reentrant model
 12333 ;;
 12334                           
 12335                           	psect	text32
 12336  000D52                     __ptext32:
 12337                           	opt stack 0
 12338  000D52                     _CANSetFilter:
 12339                           	opt stack 24
 12340                           
 12341                           ; BSR set to: 0
 12342                           ;incstack = 0
 12343                           ;CANSetFilter@numBuffer stored from wreg
 12344  000D52  0100               	movlb	0	; () banked
 12345  000D54  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
 12346                           
 12347                           ;inc\CANlib.h: 751: unsigned long tamp;
 12348                           ;inc\CANlib.h: 753: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
 12349  000D56  0100               	movlb	0	; () banked
 12350  000D58  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12351  000D5A  0100               	movlb	0	; () banked
 12352  000D5C  A4D8               	btfss	status,2,c
 12353  000D5E  D058               	goto	l5053
 12354                           
 12355                           ; BSR set to: 0
 12356  000D60  0100               	movlb	0	; () banked
 12357  000D62  297B               	incf	CANSetFilter@type& (0+255),w,b
 12358  000D64  A4D8               	btfss	status,2,c
 12359  000D66  D054               	goto	l5053
 12360                           
 12361                           ; BSR set to: 0
 12362                           ;inc\CANlib.h: 754: {
 12363                           ;inc\CANlib.h: 755: RXF0SIDLbits.EXIDEN = 0x00;
 12364  000D68  010F               	movlb	15	; () banked
 12365  000D6A  9701               	bcf	1,3,b	;volatile
 12366                           
 12367                           ; BSR set to: 15
 12368                           ;inc\CANlib.h: 757: tamp = (filter >> 3);
 12369  000D6C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12370  000D70  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12371  000D74  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12372  000D78  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12373  000D7C  0E04               	movlw	4
 12374  000D7E  D006               	goto	u5830
 12375  000D80                     u5835:
 12376  000D80  0100               	movlb	0	; () banked
 12377  000D82  90D8               	bcf	status,0,c
 12378  000D84  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12379  000D86  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12380  000D88  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12381  000D8A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12382  000D8C                     u5830:
 12383  000D8C  2EE8               	decfsz	wreg,f,c
 12384  000D8E  D7F8               	goto	u5835
 12385  000D90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12386  000D94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12387  000D98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12388  000D9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12389                           
 12390                           ; BSR set to: 0
 12391                           ;inc\CANlib.h: 758: tamp = tamp & 0x000000FF;
 12392  000DA0  0100               	movlb	0	; () banked
 12393  000DA2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12394  000DA4  0100               	movlb	0	; () banked
 12395  000DA6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12396  000DA8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12397  000DAA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12398  000DAC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12399                           
 12400                           ; BSR set to: 0
 12401                           ;inc\CANlib.h: 759: RXF0SIDH = (unsigned char) tamp;
 12402  000DAE  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12403                           
 12404                           ; BSR set to: 0
 12405                           ;inc\CANlib.h: 761: tamp = filter & 0x00000007;
 12406  000DB2  0E07               	movlw	7
 12407  000DB4  0100               	movlb	0	; () banked
 12408  000DB6  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12409  000DB8  0100               	movlb	0	; () banked
 12410  000DBA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12411  000DBC  0E00               	movlw	0
 12412  000DBE  0100               	movlb	0	; () banked
 12413  000DC0  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12414  000DC2  0100               	movlb	0	; () banked
 12415  000DC4  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12416  000DC6  0E00               	movlw	0
 12417  000DC8  0100               	movlb	0	; () banked
 12418  000DCA  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12419  000DCC  0100               	movlb	0	; () banked
 12420  000DCE  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12421  000DD0  0E00               	movlw	0
 12422  000DD2  0100               	movlb	0	; () banked
 12423  000DD4  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12424  000DD6  0100               	movlb	0	; () banked
 12425  000DD8  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12426                           
 12427                           ; BSR set to: 0
 12428                           ;inc\CANlib.h: 762: tamp = tamp << 5;
 12429  000DDA  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12430  000DDE  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12431  000DE2  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12432  000DE6  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12433  000DEA  0E05               	movlw	5
 12434  000DEC                     u5845:
 12435  000DEC  90D8               	bcf	status,0,c
 12436  000DEE  0100               	movlb	0	; () banked
 12437  000DF0  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12438  000DF2  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12439  000DF4  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12440  000DF6  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12441  000DF8  2EE8               	decfsz	wreg,f,c
 12442  000DFA  D7F8               	goto	u5845
 12443  000DFC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12444  000E00  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12445  000E04  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12446  000E08  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12447                           
 12448                           ; BSR set to: 0
 12449                           ;inc\CANlib.h: 763: RXF0SIDL = (unsigned char) tamp;
 12450  000E0C  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
 12451  000E10                     l5053:
 12452                           
 12453                           ; BSR set to: 0
 12454                           ;inc\CANlib.h: 764: }
 12455                           ;inc\CANlib.h: 766: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
 12456  000E10  0100               	movlb	0	; () banked
 12457  000E12  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12458  000E14  A4D8               	btfss	status,2,c
 12459  000E16  D058               	goto	l5071
 12460                           
 12461                           ; BSR set to: 0
 12462  000E18  0100               	movlb	0	; () banked
 12463  000E1A  297B               	incf	CANSetFilter@type& (0+255),w,b
 12464  000E1C  A4D8               	btfss	status,2,c
 12465  000E1E  D054               	goto	l5071
 12466                           
 12467                           ; BSR set to: 0
 12468                           ;inc\CANlib.h: 767: {
 12469                           ;inc\CANlib.h: 768: RXF1SIDLbits.EXIDEN = 0x00;
 12470  000E20  010F               	movlb	15	; () banked
 12471  000E22  9705               	bcf	5,3,b	;volatile
 12472                           
 12473                           ; BSR set to: 15
 12474                           ;inc\CANlib.h: 770: tamp = (filter >> 3);
 12475  000E24  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12476  000E28  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12477  000E2C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12478  000E30  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12479  000E34  0E04               	movlw	4
 12480  000E36  D006               	goto	u5870
 12481  000E38                     u5875:
 12482  000E38  0100               	movlb	0	; () banked
 12483  000E3A  90D8               	bcf	status,0,c
 12484  000E3C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12485  000E3E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12486  000E40  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12487  000E42  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12488  000E44                     u5870:
 12489  000E44  2EE8               	decfsz	wreg,f,c
 12490  000E46  D7F8               	goto	u5875
 12491  000E48  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12492  000E4C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12493  000E50  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12494  000E54  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12495                           
 12496                           ; BSR set to: 0
 12497                           ;inc\CANlib.h: 771: tamp = tamp & 0x000000FF;
 12498  000E58  0100               	movlb	0	; () banked
 12499  000E5A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12500  000E5C  0100               	movlb	0	; () banked
 12501  000E5E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12502  000E60  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12503  000E62  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12504  000E64  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12505                           
 12506                           ; BSR set to: 0
 12507                           ;inc\CANlib.h: 772: RXF1SIDH = (unsigned char) tamp;
 12508  000E66  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 12509                           
 12510                           ; BSR set to: 0
 12511                           ;inc\CANlib.h: 774: tamp = filter & 0x00000007;
 12512  000E6A  0E07               	movlw	7
 12513  000E6C  0100               	movlb	0	; () banked
 12514  000E6E  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12515  000E70  0100               	movlb	0	; () banked
 12516  000E72  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12517  000E74  0E00               	movlw	0
 12518  000E76  0100               	movlb	0	; () banked
 12519  000E78  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12520  000E7A  0100               	movlb	0	; () banked
 12521  000E7C  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12522  000E7E  0E00               	movlw	0
 12523  000E80  0100               	movlb	0	; () banked
 12524  000E82  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12525  000E84  0100               	movlb	0	; () banked
 12526  000E86  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12527  000E88  0E00               	movlw	0
 12528  000E8A  0100               	movlb	0	; () banked
 12529  000E8C  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12530  000E8E  0100               	movlb	0	; () banked
 12531  000E90  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12532                           
 12533                           ; BSR set to: 0
 12534                           ;inc\CANlib.h: 775: tamp = tamp << 5;
 12535  000E92  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12536  000E96  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12537  000E9A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12538  000E9E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12539  000EA2  0E05               	movlw	5
 12540  000EA4                     u5885:
 12541  000EA4  90D8               	bcf	status,0,c
 12542  000EA6  0100               	movlb	0	; () banked
 12543  000EA8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12544  000EAA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12545  000EAC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12546  000EAE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12547  000EB0  2EE8               	decfsz	wreg,f,c
 12548  000EB2  D7F8               	goto	u5885
 12549  000EB4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12550  000EB8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12551  000EBC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12552  000EC0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12553                           
 12554                           ; BSR set to: 0
 12555                           ;inc\CANlib.h: 776: RXF1SIDL = (unsigned char) tamp;
 12556  000EC4  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
 12557  000EC8                     l5071:
 12558                           
 12559                           ; BSR set to: 0
 12560                           ;inc\CANlib.h: 777: }
 12561                           ;inc\CANlib.h: 779: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
 12562  000EC8  0E02               	movlw	2
 12563  000ECA  0100               	movlb	0	; () banked
 12564  000ECC  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12565  000ECE  A4D8               	btfss	status,2,c
 12566  000ED0  D058               	goto	l5089
 12567                           
 12568                           ; BSR set to: 0
 12569  000ED2  0100               	movlb	0	; () banked
 12570  000ED4  297B               	incf	CANSetFilter@type& (0+255),w,b
 12571  000ED6  A4D8               	btfss	status,2,c
 12572  000ED8  D054               	goto	l5089
 12573                           
 12574                           ; BSR set to: 0
 12575                           ;inc\CANlib.h: 780: {
 12576                           ;inc\CANlib.h: 781: RXF2SIDLbits.EXIDEN = 0x00;
 12577  000EDA  010F               	movlb	15	; () banked
 12578  000EDC  9709               	bcf	9,3,b	;volatile
 12579                           
 12580                           ; BSR set to: 15
 12581                           ;inc\CANlib.h: 783: tamp = (filter >> 3);
 12582  000EDE  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12583  000EE2  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12584  000EE6  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12585  000EEA  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12586  000EEE  0E04               	movlw	4
 12587  000EF0  D006               	goto	u5910
 12588  000EF2                     u5915:
 12589  000EF2  0100               	movlb	0	; () banked
 12590  000EF4  90D8               	bcf	status,0,c
 12591  000EF6  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12592  000EF8  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12593  000EFA  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12594  000EFC  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12595  000EFE                     u5910:
 12596  000EFE  2EE8               	decfsz	wreg,f,c
 12597  000F00  D7F8               	goto	u5915
 12598  000F02  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12599  000F06  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12600  000F0A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12601  000F0E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12602                           
 12603                           ; BSR set to: 0
 12604                           ;inc\CANlib.h: 784: tamp = tamp & 0x000000FF;
 12605  000F12  0100               	movlb	0	; () banked
 12606  000F14  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12607  000F16  0100               	movlb	0	; () banked
 12608  000F18  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12609  000F1A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12610  000F1C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12611  000F1E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12612                           
 12613                           ; BSR set to: 0
 12614                           ;inc\CANlib.h: 785: RXF2SIDH = (unsigned char) tamp;
 12615  000F20  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 12616                           
 12617                           ; BSR set to: 0
 12618                           ;inc\CANlib.h: 787: tamp = filter & 0x00000007;
 12619  000F24  0E07               	movlw	7
 12620  000F26  0100               	movlb	0	; () banked
 12621  000F28  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12622  000F2A  0100               	movlb	0	; () banked
 12623  000F2C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12624  000F2E  0E00               	movlw	0
 12625  000F30  0100               	movlb	0	; () banked
 12626  000F32  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12627  000F34  0100               	movlb	0	; () banked
 12628  000F36  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12629  000F38  0E00               	movlw	0
 12630  000F3A  0100               	movlb	0	; () banked
 12631  000F3C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12632  000F3E  0100               	movlb	0	; () banked
 12633  000F40  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12634  000F42  0E00               	movlw	0
 12635  000F44  0100               	movlb	0	; () banked
 12636  000F46  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12637  000F48  0100               	movlb	0	; () banked
 12638  000F4A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12639                           
 12640                           ; BSR set to: 0
 12641                           ;inc\CANlib.h: 788: tamp = tamp << 5;
 12642  000F4C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12643  000F50  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12644  000F54  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12645  000F58  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12646  000F5C  0E05               	movlw	5
 12647  000F5E                     u5925:
 12648  000F5E  90D8               	bcf	status,0,c
 12649  000F60  0100               	movlb	0	; () banked
 12650  000F62  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12651  000F64  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12652  000F66  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12653  000F68  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12654  000F6A  2EE8               	decfsz	wreg,f,c
 12655  000F6C  D7F8               	goto	u5925
 12656  000F6E  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12657  000F72  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12658  000F76  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12659  000F7A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12660                           
 12661                           ; BSR set to: 0
 12662                           ;inc\CANlib.h: 789: RXF2SIDL = (unsigned char) tamp;
 12663  000F7E  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
 12664  000F82                     l5089:
 12665                           
 12666                           ; BSR set to: 0
 12667                           ;inc\CANlib.h: 790: }
 12668                           ;inc\CANlib.h: 792: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
 12669  000F82  0E03               	movlw	3
 12670  000F84  0100               	movlb	0	; () banked
 12671  000F86  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12672  000F88  A4D8               	btfss	status,2,c
 12673  000F8A  D058               	goto	l5107
 12674                           
 12675                           ; BSR set to: 0
 12676  000F8C  0100               	movlb	0	; () banked
 12677  000F8E  297B               	incf	CANSetFilter@type& (0+255),w,b
 12678  000F90  A4D8               	btfss	status,2,c
 12679  000F92  D054               	goto	l5107
 12680                           
 12681                           ; BSR set to: 0
 12682                           ;inc\CANlib.h: 793: {
 12683                           ;inc\CANlib.h: 794: RXF3SIDLbits.EXIDEN = 0x00;
 12684  000F94  010F               	movlb	15	; () banked
 12685  000F96  970D               	bcf	13,3,b	;volatile
 12686                           
 12687                           ; BSR set to: 15
 12688                           ;inc\CANlib.h: 796: tamp = (filter >> 3);
 12689  000F98  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12690  000F9C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12691  000FA0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12692  000FA4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12693  000FA8  0E04               	movlw	4
 12694  000FAA  D006               	goto	u5950
 12695  000FAC                     u5955:
 12696  000FAC  0100               	movlb	0	; () banked
 12697  000FAE  90D8               	bcf	status,0,c
 12698  000FB0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12699  000FB2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12700  000FB4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12701  000FB6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12702  000FB8                     u5950:
 12703  000FB8  2EE8               	decfsz	wreg,f,c
 12704  000FBA  D7F8               	goto	u5955
 12705  000FBC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12706  000FC0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12707  000FC4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12708  000FC8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12709                           
 12710                           ; BSR set to: 0
 12711                           ;inc\CANlib.h: 797: tamp = tamp & 0x000000FF;
 12712  000FCC  0100               	movlb	0	; () banked
 12713  000FCE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12714  000FD0  0100               	movlb	0	; () banked
 12715  000FD2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12716  000FD4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12717  000FD6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12718  000FD8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12719                           
 12720                           ; BSR set to: 0
 12721                           ;inc\CANlib.h: 798: RXF3SIDH = (unsigned char) tamp;
 12722  000FDA  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 12723                           
 12724                           ; BSR set to: 0
 12725                           ;inc\CANlib.h: 800: tamp = filter & 0x00000007;
 12726  000FDE  0E07               	movlw	7
 12727  000FE0  0100               	movlb	0	; () banked
 12728  000FE2  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12729  000FE4  0100               	movlb	0	; () banked
 12730  000FE6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12731  000FE8  0E00               	movlw	0
 12732  000FEA  0100               	movlb	0	; () banked
 12733  000FEC  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12734  000FEE  0100               	movlb	0	; () banked
 12735  000FF0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12736  000FF2  0E00               	movlw	0
 12737  000FF4  0100               	movlb	0	; () banked
 12738  000FF6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12739  000FF8  0100               	movlb	0	; () banked
 12740  000FFA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12741  000FFC  0E00               	movlw	0
 12742  000FFE  0100               	movlb	0	; () banked
 12743  001000  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12744  001002  0100               	movlb	0	; () banked
 12745  001004  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12746                           
 12747                           ; BSR set to: 0
 12748                           ;inc\CANlib.h: 801: tamp = tamp << 5;
 12749  001006  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12750  00100A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12751  00100E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12752  001012  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12753  001016  0E05               	movlw	5
 12754  001018                     u5965:
 12755  001018  90D8               	bcf	status,0,c
 12756  00101A  0100               	movlb	0	; () banked
 12757  00101C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12758  00101E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12759  001020  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12760  001022  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12761  001024  2EE8               	decfsz	wreg,f,c
 12762  001026  D7F8               	goto	u5965
 12763  001028  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12764  00102C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12765  001030  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12766  001034  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12767                           
 12768                           ; BSR set to: 0
 12769                           ;inc\CANlib.h: 802: RXF3SIDL = (unsigned char) tamp;
 12770  001038  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
 12771  00103C                     l5107:
 12772                           
 12773                           ; BSR set to: 0
 12774                           ;inc\CANlib.h: 803: }
 12775                           ;inc\CANlib.h: 805: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
 12776  00103C  0E04               	movlw	4
 12777  00103E  0100               	movlb	0	; () banked
 12778  001040  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12779  001042  A4D8               	btfss	status,2,c
 12780  001044  D058               	goto	l5125
 12781                           
 12782                           ; BSR set to: 0
 12783  001046  0100               	movlb	0	; () banked
 12784  001048  297B               	incf	CANSetFilter@type& (0+255),w,b
 12785  00104A  A4D8               	btfss	status,2,c
 12786  00104C  D054               	goto	l5125
 12787                           
 12788                           ; BSR set to: 0
 12789                           ;inc\CANlib.h: 806: {
 12790                           ;inc\CANlib.h: 807: RXF4SIDLbits.EXIDEN = 0x00;
 12791  00104E  010F               	movlb	15	; () banked
 12792  001050  9711               	bcf	17,3,b	;volatile
 12793                           
 12794                           ; BSR set to: 15
 12795                           ;inc\CANlib.h: 809: tamp = (filter >> 3);
 12796  001052  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12797  001056  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12798  00105A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12799  00105E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12800  001062  0E04               	movlw	4
 12801  001064  D006               	goto	u5990
 12802  001066                     u5995:
 12803  001066  0100               	movlb	0	; () banked
 12804  001068  90D8               	bcf	status,0,c
 12805  00106A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12806  00106C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12807  00106E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12808  001070  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12809  001072                     u5990:
 12810  001072  2EE8               	decfsz	wreg,f,c
 12811  001074  D7F8               	goto	u5995
 12812  001076  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12813  00107A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12814  00107E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12815  001082  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12816                           
 12817                           ; BSR set to: 0
 12818                           ;inc\CANlib.h: 810: tamp = tamp & 0x000000FF;
 12819  001086  0100               	movlb	0	; () banked
 12820  001088  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12821  00108A  0100               	movlb	0	; () banked
 12822  00108C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12823  00108E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12824  001090  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12825  001092  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12826                           
 12827                           ; BSR set to: 0
 12828                           ;inc\CANlib.h: 811: RXF4SIDH = (unsigned char) tamp;
 12829  001094  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 12830                           
 12831                           ; BSR set to: 0
 12832                           ;inc\CANlib.h: 813: tamp = filter & 0x00000007;
 12833  001098  0E07               	movlw	7
 12834  00109A  0100               	movlb	0	; () banked
 12835  00109C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12836  00109E  0100               	movlb	0	; () banked
 12837  0010A0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12838  0010A2  0E00               	movlw	0
 12839  0010A4  0100               	movlb	0	; () banked
 12840  0010A6  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12841  0010A8  0100               	movlb	0	; () banked
 12842  0010AA  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12843  0010AC  0E00               	movlw	0
 12844  0010AE  0100               	movlb	0	; () banked
 12845  0010B0  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12846  0010B2  0100               	movlb	0	; () banked
 12847  0010B4  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12848  0010B6  0E00               	movlw	0
 12849  0010B8  0100               	movlb	0	; () banked
 12850  0010BA  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12851  0010BC  0100               	movlb	0	; () banked
 12852  0010BE  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12853                           
 12854                           ; BSR set to: 0
 12855                           ;inc\CANlib.h: 814: tamp = tamp << 5;
 12856  0010C0  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12857  0010C4  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12858  0010C8  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12859  0010CC  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12860  0010D0  0E05               	movlw	5
 12861  0010D2                     u6005:
 12862  0010D2  90D8               	bcf	status,0,c
 12863  0010D4  0100               	movlb	0	; () banked
 12864  0010D6  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12865  0010D8  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12866  0010DA  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12867  0010DC  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12868  0010DE  2EE8               	decfsz	wreg,f,c
 12869  0010E0  D7F8               	goto	u6005
 12870  0010E2  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12871  0010E6  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12872  0010EA  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12873  0010EE  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12874                           
 12875                           ; BSR set to: 0
 12876                           ;inc\CANlib.h: 815: RXF4SIDL = (unsigned char) tamp;
 12877  0010F2  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 12878  0010F6                     l5125:
 12879                           
 12880                           ; BSR set to: 0
 12881                           ;inc\CANlib.h: 816: }
 12882                           ;inc\CANlib.h: 818: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 12883  0010F6  0E05               	movlw	5
 12884  0010F8  0100               	movlb	0	; () banked
 12885  0010FA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12886  0010FC  A4D8               	btfss	status,2,c
 12887  0010FE  D058               	goto	l5143
 12888                           
 12889                           ; BSR set to: 0
 12890  001100  0100               	movlb	0	; () banked
 12891  001102  297B               	incf	CANSetFilter@type& (0+255),w,b
 12892  001104  A4D8               	btfss	status,2,c
 12893  001106  D054               	goto	l5143
 12894                           
 12895                           ; BSR set to: 0
 12896                           ;inc\CANlib.h: 819: {
 12897                           ;inc\CANlib.h: 820: RXF5SIDLbits.EXIDEN = 0x00;
 12898  001108  010F               	movlb	15	; () banked
 12899  00110A  9715               	bcf	21,3,b	;volatile
 12900                           
 12901                           ; BSR set to: 15
 12902                           ;inc\CANlib.h: 822: tamp = (filter >> 3);
 12903  00110C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12904  001110  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12905  001114  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12906  001118  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12907  00111C  0E04               	movlw	4
 12908  00111E  D006               	goto	u6030
 12909  001120                     u6035:
 12910  001120  0100               	movlb	0	; () banked
 12911  001122  90D8               	bcf	status,0,c
 12912  001124  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12913  001126  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12914  001128  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12915  00112A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12916  00112C                     u6030:
 12917  00112C  2EE8               	decfsz	wreg,f,c
 12918  00112E  D7F8               	goto	u6035
 12919  001130  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12920  001134  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12921  001138  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12922  00113C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12923                           
 12924                           ; BSR set to: 0
 12925                           ;inc\CANlib.h: 823: tamp = tamp & 0x000000FF;
 12926  001140  0100               	movlb	0	; () banked
 12927  001142  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12928  001144  0100               	movlb	0	; () banked
 12929  001146  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12930  001148  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12931  00114A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12932  00114C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12933                           
 12934                           ; BSR set to: 0
 12935                           ;inc\CANlib.h: 824: RXF5SIDH = (unsigned char) tamp;
 12936  00114E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 12937                           
 12938                           ; BSR set to: 0
 12939                           ;inc\CANlib.h: 826: tamp = filter & 0x00000007;
 12940  001152  0E07               	movlw	7
 12941  001154  0100               	movlb	0	; () banked
 12942  001156  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12943  001158  0100               	movlb	0	; () banked
 12944  00115A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12945  00115C  0E00               	movlw	0
 12946  00115E  0100               	movlb	0	; () banked
 12947  001160  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12948  001162  0100               	movlb	0	; () banked
 12949  001164  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12950  001166  0E00               	movlw	0
 12951  001168  0100               	movlb	0	; () banked
 12952  00116A  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12953  00116C  0100               	movlb	0	; () banked
 12954  00116E  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12955  001170  0E00               	movlw	0
 12956  001172  0100               	movlb	0	; () banked
 12957  001174  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12958  001176  0100               	movlb	0	; () banked
 12959  001178  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12960                           
 12961                           ; BSR set to: 0
 12962                           ;inc\CANlib.h: 827: tamp = tamp << 5;
 12963  00117A  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12964  00117E  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12965  001182  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12966  001186  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12967  00118A  0E05               	movlw	5
 12968  00118C                     u6045:
 12969  00118C  90D8               	bcf	status,0,c
 12970  00118E  0100               	movlb	0	; () banked
 12971  001190  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12972  001192  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12973  001194  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12974  001196  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12975  001198  2EE8               	decfsz	wreg,f,c
 12976  00119A  D7F8               	goto	u6045
 12977  00119C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12978  0011A0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12979  0011A4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12980  0011A8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12981                           
 12982                           ; BSR set to: 0
 12983                           ;inc\CANlib.h: 828: RXF5SIDL = (unsigned char) tamp;
 12984  0011AC  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 12985  0011B0                     l5143:
 12986                           
 12987                           ; BSR set to: 0
 12988                           ;inc\CANlib.h: 829: }
 12989                           ;inc\CANlib.h: 832: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 12990  0011B0  0100               	movlb	0	; () banked
 12991  0011B2  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12992  0011B4  0100               	movlb	0	; () banked
 12993  0011B6  A4D8               	btfss	status,2,c
 12994  0011B8  D089               	goto	l5177
 12995                           
 12996                           ; BSR set to: 0
 12997  0011BA  0EF7               	movlw	247
 12998  0011BC  0100               	movlb	0	; () banked
 12999  0011BE  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13000  0011C0  A4D8               	btfss	status,2,c
 13001  0011C2  D084               	goto	l5177
 13002                           
 13003                           ; BSR set to: 0
 13004                           ;inc\CANlib.h: 833: {
 13005                           ;inc\CANlib.h: 834: RXF0SIDLbits.EXIDEN = 0x01;
 13006  0011C4  010F               	movlb	15	; () banked
 13007  0011C6  8701               	bsf	1,3,b	;volatile
 13008                           
 13009                           ; BSR set to: 15
 13010                           ;inc\CANlib.h: 836: tamp = filter & 0x000000FF;
 13011  0011C8  0100               	movlb	0	; () banked
 13012  0011CA  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13013  0011CC  0100               	movlb	0	; () banked
 13014  0011CE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13015  0011D0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13016  0011D2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13017  0011D4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13018                           
 13019                           ; BSR set to: 0
 13020                           ;inc\CANlib.h: 837: RXF0EIDL = (unsigned char) tamp;
 13021  0011D6  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 13022                           
 13023                           ; BSR set to: 0
 13024                           ;inc\CANlib.h: 839: tamp = filter & 0x0000FF00;
 13025  0011DA  0E00               	movlw	0
 13026  0011DC  0100               	movlb	0	; () banked
 13027  0011DE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13028  0011E0  0100               	movlb	0	; () banked
 13029  0011E2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13030  0011E4  0EFF               	movlw	255
 13031  0011E6  0100               	movlb	0	; () banked
 13032  0011E8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13033  0011EA  0100               	movlb	0	; () banked
 13034  0011EC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13035  0011EE  0E00               	movlw	0
 13036  0011F0  0100               	movlb	0	; () banked
 13037  0011F2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13038  0011F4  0100               	movlb	0	; () banked
 13039  0011F6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13040  0011F8  0E00               	movlw	0
 13041  0011FA  0100               	movlb	0	; () banked
 13042  0011FC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13043  0011FE  0100               	movlb	0	; () banked
 13044  001200  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13045                           
 13046                           ; BSR set to: 0
 13047                           ;inc\CANlib.h: 840: tamp = tamp >> 8;
 13048  001202  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13049  001206  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13050  00120A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13051  00120E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13052  001212  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13053  001216  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13054  00121A  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13055  00121E  0100               	movlb	0	; () banked
 13056  001220  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13057  001222  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13058  001226  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13059  00122A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13060  00122E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13061                           
 13062                           ; BSR set to: 0
 13063                           ;inc\CANlib.h: 841: RXF0EIDH = (unsigned char) tamp;
 13064  001232  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 13065                           
 13066                           ; BSR set to: 0
 13067                           ;inc\CANlib.h: 843: if (filter & 0x00010000)
 13068  001236  0100               	movlb	0	; () banked
 13069  001238  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13070  00123A  D003               	goto	l463
 13071                           
 13072                           ; BSR set to: 0
 13073                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x01;
 13074  00123C  010F               	movlb	15	; () banked
 13075  00123E  8101               	bsf	1,0,b	;volatile
 13076  001240  D002               	goto	l464
 13077  001242                     l463:
 13078                           
 13079                           ; BSR set to: 0
 13080                           ;inc\CANlib.h: 845: else
 13081                           ;inc\CANlib.h: 846: RXF0SIDLbits.EID16 = 0x00;
 13082  001242  010F               	movlb	15	; () banked
 13083  001244  9101               	bcf	1,0,b	;volatile
 13084  001246                     l464:
 13085                           
 13086                           ; BSR set to: 15
 13087                           ;inc\CANlib.h: 848: if (filter & 0x00020000)
 13088  001246  0100               	movlb	0	; () banked
 13089  001248  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13090  00124A  D003               	goto	l465
 13091                           
 13092                           ; BSR set to: 0
 13093                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x01;
 13094  00124C  010F               	movlb	15	; () banked
 13095  00124E  8301               	bsf	1,1,b	;volatile
 13096  001250  D002               	goto	l466
 13097  001252                     l465:
 13098                           
 13099                           ; BSR set to: 0
 13100                           ;inc\CANlib.h: 850: else
 13101                           ;inc\CANlib.h: 851: RXF0SIDLbits.EID17 = 0x00;
 13102  001252  010F               	movlb	15	; () banked
 13103  001254  9301               	bcf	1,1,b	;volatile
 13104  001256                     l466:
 13105                           
 13106                           ; BSR set to: 15
 13107                           ;inc\CANlib.h: 853: if (filter & 0x00040000)
 13108  001256  0100               	movlb	0	; () banked
 13109  001258  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13110  00125A  D003               	goto	l467
 13111                           
 13112                           ; BSR set to: 0
 13113                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x01;
 13114  00125C  010F               	movlb	15	; () banked
 13115  00125E  8B01               	bsf	1,5,b	;volatile
 13116  001260  D002               	goto	l468
 13117  001262                     l467:
 13118                           
 13119                           ; BSR set to: 0
 13120                           ;inc\CANlib.h: 855: else
 13121                           ;inc\CANlib.h: 856: RXF0SIDLbits.SID0 = 0x00;
 13122  001262  010F               	movlb	15	; () banked
 13123  001264  9B01               	bcf	1,5,b	;volatile
 13124  001266                     l468:
 13125                           
 13126                           ; BSR set to: 15
 13127                           ;inc\CANlib.h: 858: if (filter & 0x00080000)
 13128  001266  0100               	movlb	0	; () banked
 13129  001268  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13130  00126A  D003               	goto	l469
 13131                           
 13132                           ; BSR set to: 0
 13133                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x01;
 13134  00126C  010F               	movlb	15	; () banked
 13135  00126E  8D01               	bsf	1,6,b	;volatile
 13136  001270  D002               	goto	l470
 13137  001272                     l469:
 13138                           
 13139                           ; BSR set to: 0
 13140                           ;inc\CANlib.h: 860: else
 13141                           ;inc\CANlib.h: 861: RXF0SIDLbits.SID1 = 0x00;
 13142  001272  010F               	movlb	15	; () banked
 13143  001274  9D01               	bcf	1,6,b	;volatile
 13144  001276                     l470:
 13145                           
 13146                           ; BSR set to: 15
 13147                           ;inc\CANlib.h: 863: if (filter & 0x00100000)
 13148  001276  0100               	movlb	0	; () banked
 13149  001278  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13150  00127A  D003               	goto	l471
 13151                           
 13152                           ; BSR set to: 0
 13153                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x01 ;
 13154  00127C  010F               	movlb	15	; () banked
 13155  00127E  8F01               	bsf	1,7,b	;volatile
 13156  001280  D002               	goto	l5171
 13157  001282                     l471:
 13158                           
 13159                           ; BSR set to: 0
 13160                           ;inc\CANlib.h: 865: else
 13161                           ;inc\CANlib.h: 866: RXF0SIDLbits.SID2 = 0x00 ;
 13162  001282  010F               	movlb	15	; () banked
 13163  001284  9F01               	bcf	1,7,b	;volatile
 13164  001286                     l5171:
 13165                           
 13166                           ; BSR set to: 15
 13167                           ;inc\CANlib.h: 868: tamp = (filter >> 21);
 13168  001286  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13169  00128A  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13170  00128E  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13171  001292  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13172  001296  0E16               	movlw	22
 13173  001298  D006               	goto	u6120
 13174  00129A                     u6125:
 13175  00129A  0100               	movlb	0	; () banked
 13176  00129C  90D8               	bcf	status,0,c
 13177  00129E  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13178  0012A0  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13179  0012A2  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13180  0012A4  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13181  0012A6                     u6120:
 13182  0012A6  2EE8               	decfsz	wreg,f,c
 13183  0012A8  D7F8               	goto	u6125
 13184  0012AA  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13185  0012AE  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13186  0012B2  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13187  0012B6  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13188                           
 13189                           ; BSR set to: 0
 13190                           ;inc\CANlib.h: 869: tamp = tamp & 0x000000FF;
 13191  0012BA  0100               	movlb	0	; () banked
 13192  0012BC  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13193  0012BE  0100               	movlb	0	; () banked
 13194  0012C0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13195  0012C2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13196  0012C4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13197  0012C6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13198                           
 13199                           ; BSR set to: 0
 13200                           ;inc\CANlib.h: 870: RXF0SIDH = (unsigned char) tamp;
 13201  0012C8  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 13202  0012CC                     l5177:
 13203                           
 13204                           ; BSR set to: 0
 13205                           ;inc\CANlib.h: 871: }
 13206                           ;inc\CANlib.h: 873: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 13207  0012CC  0100               	movlb	0	; () banked
 13208  0012CE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 13209  0012D0  A4D8               	btfss	status,2,c
 13210  0012D2  D089               	goto	l5211
 13211                           
 13212                           ; BSR set to: 0
 13213  0012D4  0EF7               	movlw	247
 13214  0012D6  0100               	movlb	0	; () banked
 13215  0012D8  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13216  0012DA  A4D8               	btfss	status,2,c
 13217  0012DC  D084               	goto	l5211
 13218                           
 13219                           ; BSR set to: 0
 13220                           ;inc\CANlib.h: 874: {
 13221                           ;inc\CANlib.h: 875: RXF1SIDLbits.EXIDEN = 0x01;
 13222  0012DE  010F               	movlb	15	; () banked
 13223  0012E0  8705               	bsf	5,3,b	;volatile
 13224                           
 13225                           ; BSR set to: 15
 13226                           ;inc\CANlib.h: 877: tamp = filter & 0x000000FF;
 13227  0012E2  0100               	movlb	0	; () banked
 13228  0012E4  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13229  0012E6  0100               	movlb	0	; () banked
 13230  0012E8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13231  0012EA  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13232  0012EC  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13233  0012EE  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13234                           
 13235                           ; BSR set to: 0
 13236                           ;inc\CANlib.h: 878: RXF1EIDL = (unsigned char) tamp;
 13237  0012F0  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 13238                           
 13239                           ; BSR set to: 0
 13240                           ;inc\CANlib.h: 880: tamp = filter & 0x0000FF00;
 13241  0012F4  0E00               	movlw	0
 13242  0012F6  0100               	movlb	0	; () banked
 13243  0012F8  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13244  0012FA  0100               	movlb	0	; () banked
 13245  0012FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13246  0012FE  0EFF               	movlw	255
 13247  001300  0100               	movlb	0	; () banked
 13248  001302  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13249  001304  0100               	movlb	0	; () banked
 13250  001306  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13251  001308  0E00               	movlw	0
 13252  00130A  0100               	movlb	0	; () banked
 13253  00130C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13254  00130E  0100               	movlb	0	; () banked
 13255  001310  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13256  001312  0E00               	movlw	0
 13257  001314  0100               	movlb	0	; () banked
 13258  001316  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13259  001318  0100               	movlb	0	; () banked
 13260  00131A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13261                           
 13262                           ; BSR set to: 0
 13263                           ;inc\CANlib.h: 881: tamp = tamp >> 8;
 13264  00131C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13265  001320  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13266  001324  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13267  001328  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13268  00132C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13269  001330  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13270  001334  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13271  001338  0100               	movlb	0	; () banked
 13272  00133A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13273  00133C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13274  001340  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13275  001344  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13276  001348  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13277                           
 13278                           ; BSR set to: 0
 13279                           ;inc\CANlib.h: 882: RXF1EIDH = (unsigned char) tamp;
 13280  00134C  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 13281                           
 13282                           ; BSR set to: 0
 13283                           ;inc\CANlib.h: 884: if (filter & 0x00010000)
 13284  001350  0100               	movlb	0	; () banked
 13285  001352  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13286  001354  D003               	goto	l474
 13287                           
 13288                           ; BSR set to: 0
 13289                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x01;
 13290  001356  010F               	movlb	15	; () banked
 13291  001358  8105               	bsf	5,0,b	;volatile
 13292  00135A  D002               	goto	l475
 13293  00135C                     l474:
 13294                           
 13295                           ; BSR set to: 0
 13296                           ;inc\CANlib.h: 886: else
 13297                           ;inc\CANlib.h: 887: RXF1SIDLbits.EID16 = 0x00;
 13298  00135C  010F               	movlb	15	; () banked
 13299  00135E  9105               	bcf	5,0,b	;volatile
 13300  001360                     l475:
 13301                           
 13302                           ; BSR set to: 15
 13303                           ;inc\CANlib.h: 889: if (filter & 0x00020000)
 13304  001360  0100               	movlb	0	; () banked
 13305  001362  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13306  001364  D003               	goto	l476
 13307                           
 13308                           ; BSR set to: 0
 13309                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x01;
 13310  001366  010F               	movlb	15	; () banked
 13311  001368  8305               	bsf	5,1,b	;volatile
 13312  00136A  D002               	goto	l477
 13313  00136C                     l476:
 13314                           
 13315                           ; BSR set to: 0
 13316                           ;inc\CANlib.h: 891: else
 13317                           ;inc\CANlib.h: 892: RXF1SIDLbits.EID17 = 0x00;
 13318  00136C  010F               	movlb	15	; () banked
 13319  00136E  9305               	bcf	5,1,b	;volatile
 13320  001370                     l477:
 13321                           
 13322                           ; BSR set to: 15
 13323                           ;inc\CANlib.h: 894: if (filter & 0x00040000)
 13324  001370  0100               	movlb	0	; () banked
 13325  001372  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13326  001374  D003               	goto	l478
 13327                           
 13328                           ; BSR set to: 0
 13329                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x01;
 13330  001376  010F               	movlb	15	; () banked
 13331  001378  8B05               	bsf	5,5,b	;volatile
 13332  00137A  D002               	goto	l479
 13333  00137C                     l478:
 13334                           
 13335                           ; BSR set to: 0
 13336                           ;inc\CANlib.h: 896: else
 13337                           ;inc\CANlib.h: 897: RXF1SIDLbits.SID0 = 0x00;
 13338  00137C  010F               	movlb	15	; () banked
 13339  00137E  9B05               	bcf	5,5,b	;volatile
 13340  001380                     l479:
 13341                           
 13342                           ; BSR set to: 15
 13343                           ;inc\CANlib.h: 899: if (filter & 0x00080000)
 13344  001380  0100               	movlb	0	; () banked
 13345  001382  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13346  001384  D003               	goto	l480
 13347                           
 13348                           ; BSR set to: 0
 13349                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x01;
 13350  001386  010F               	movlb	15	; () banked
 13351  001388  8D05               	bsf	5,6,b	;volatile
 13352  00138A  D002               	goto	l481
 13353  00138C                     l480:
 13354                           
 13355                           ; BSR set to: 0
 13356                           ;inc\CANlib.h: 901: else
 13357                           ;inc\CANlib.h: 902: RXF1SIDLbits.SID1 = 0x00;
 13358  00138C  010F               	movlb	15	; () banked
 13359  00138E  9D05               	bcf	5,6,b	;volatile
 13360  001390                     l481:
 13361                           
 13362                           ; BSR set to: 15
 13363                           ;inc\CANlib.h: 904: if (filter & 0x00100000)
 13364  001390  0100               	movlb	0	; () banked
 13365  001392  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13366  001394  D003               	goto	l482
 13367                           
 13368                           ; BSR set to: 0
 13369                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x01 ;
 13370  001396  010F               	movlb	15	; () banked
 13371  001398  8F05               	bsf	5,7,b	;volatile
 13372  00139A  D002               	goto	l5205
 13373  00139C                     l482:
 13374                           
 13375                           ; BSR set to: 0
 13376                           ;inc\CANlib.h: 906: else
 13377                           ;inc\CANlib.h: 907: RXF1SIDLbits.SID2 = 0x00 ;
 13378  00139C  010F               	movlb	15	; () banked
 13379  00139E  9F05               	bcf	5,7,b	;volatile
 13380  0013A0                     l5205:
 13381                           
 13382                           ; BSR set to: 15
 13383                           ;inc\CANlib.h: 909: tamp = (filter >> 21);
 13384  0013A0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13385  0013A4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13386  0013A8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13387  0013AC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13388  0013B0  0E16               	movlw	22
 13389  0013B2  D006               	goto	u6200
 13390  0013B4                     u6205:
 13391  0013B4  0100               	movlb	0	; () banked
 13392  0013B6  90D8               	bcf	status,0,c
 13393  0013B8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13394  0013BA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13395  0013BC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13396  0013BE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13397  0013C0                     u6200:
 13398  0013C0  2EE8               	decfsz	wreg,f,c
 13399  0013C2  D7F8               	goto	u6205
 13400  0013C4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13401  0013C8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13402  0013CC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13403  0013D0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13404                           
 13405                           ; BSR set to: 0
 13406                           ;inc\CANlib.h: 910: tamp = tamp & 0x000000FF;
 13407  0013D4  0100               	movlb	0	; () banked
 13408  0013D6  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13409  0013D8  0100               	movlb	0	; () banked
 13410  0013DA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13411  0013DC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13412  0013DE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13413  0013E0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13414                           
 13415                           ; BSR set to: 0
 13416                           ;inc\CANlib.h: 911: RXF1SIDH = (unsigned char) tamp;
 13417  0013E2  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 13418  0013E6                     l5211:
 13419                           
 13420                           ; BSR set to: 0
 13421                           ;inc\CANlib.h: 912: }
 13422                           ;inc\CANlib.h: 915: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 13423  0013E6  0E02               	movlw	2
 13424  0013E8  0100               	movlb	0	; () banked
 13425  0013EA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13426  0013EC  A4D8               	btfss	status,2,c
 13427  0013EE  D089               	goto	l5245
 13428                           
 13429                           ; BSR set to: 0
 13430  0013F0  0EF7               	movlw	247
 13431  0013F2  0100               	movlb	0	; () banked
 13432  0013F4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13433  0013F6  A4D8               	btfss	status,2,c
 13434  0013F8  D084               	goto	l5245
 13435                           
 13436                           ; BSR set to: 0
 13437                           ;inc\CANlib.h: 916: {
 13438                           ;inc\CANlib.h: 917: RXF2SIDLbits.EXIDEN = 0x01;
 13439  0013FA  010F               	movlb	15	; () banked
 13440  0013FC  8709               	bsf	9,3,b	;volatile
 13441                           
 13442                           ; BSR set to: 15
 13443                           ;inc\CANlib.h: 919: tamp = filter & 0x000000FF;
 13444  0013FE  0100               	movlb	0	; () banked
 13445  001400  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13446  001402  0100               	movlb	0	; () banked
 13447  001404  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13448  001406  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13449  001408  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13450  00140A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13451                           
 13452                           ; BSR set to: 0
 13453                           ;inc\CANlib.h: 920: RXF2EIDL = (unsigned char) tamp;
 13454  00140C  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 13455                           
 13456                           ; BSR set to: 0
 13457                           ;inc\CANlib.h: 922: tamp = filter & 0x0000FF00;
 13458  001410  0E00               	movlw	0
 13459  001412  0100               	movlb	0	; () banked
 13460  001414  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13461  001416  0100               	movlb	0	; () banked
 13462  001418  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13463  00141A  0EFF               	movlw	255
 13464  00141C  0100               	movlb	0	; () banked
 13465  00141E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13466  001420  0100               	movlb	0	; () banked
 13467  001422  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13468  001424  0E00               	movlw	0
 13469  001426  0100               	movlb	0	; () banked
 13470  001428  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13471  00142A  0100               	movlb	0	; () banked
 13472  00142C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13473  00142E  0E00               	movlw	0
 13474  001430  0100               	movlb	0	; () banked
 13475  001432  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13476  001434  0100               	movlb	0	; () banked
 13477  001436  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13478                           
 13479                           ; BSR set to: 0
 13480                           ;inc\CANlib.h: 923: tamp = tamp >> 8;
 13481  001438  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13482  00143C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13483  001440  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13484  001444  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13485  001448  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13486  00144C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13487  001450  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13488  001454  0100               	movlb	0	; () banked
 13489  001456  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13490  001458  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13491  00145C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13492  001460  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13493  001464  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13494                           
 13495                           ; BSR set to: 0
 13496                           ;inc\CANlib.h: 924: RXF2EIDH = (unsigned char) tamp;
 13497  001468  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 13498                           
 13499                           ; BSR set to: 0
 13500                           ;inc\CANlib.h: 926: if (filter & 0x00010000)
 13501  00146C  0100               	movlb	0	; () banked
 13502  00146E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13503  001470  D003               	goto	l485
 13504                           
 13505                           ; BSR set to: 0
 13506                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x01;
 13507  001472  010F               	movlb	15	; () banked
 13508  001474  8109               	bsf	9,0,b	;volatile
 13509  001476  D002               	goto	l486
 13510  001478                     l485:
 13511                           
 13512                           ; BSR set to: 0
 13513                           ;inc\CANlib.h: 928: else
 13514                           ;inc\CANlib.h: 929: RXF2SIDLbits.EID16 = 0x00;
 13515  001478  010F               	movlb	15	; () banked
 13516  00147A  9109               	bcf	9,0,b	;volatile
 13517  00147C                     l486:
 13518                           
 13519                           ; BSR set to: 15
 13520                           ;inc\CANlib.h: 931: if (filter & 0x00020000)
 13521  00147C  0100               	movlb	0	; () banked
 13522  00147E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13523  001480  D003               	goto	l487
 13524                           
 13525                           ; BSR set to: 0
 13526                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x01;
 13527  001482  010F               	movlb	15	; () banked
 13528  001484  8309               	bsf	9,1,b	;volatile
 13529  001486  D002               	goto	l488
 13530  001488                     l487:
 13531                           
 13532                           ; BSR set to: 0
 13533                           ;inc\CANlib.h: 933: else
 13534                           ;inc\CANlib.h: 934: RXF2SIDLbits.EID17 = 0x00;
 13535  001488  010F               	movlb	15	; () banked
 13536  00148A  9309               	bcf	9,1,b	;volatile
 13537  00148C                     l488:
 13538                           
 13539                           ; BSR set to: 15
 13540                           ;inc\CANlib.h: 936: if (filter & 0x00040000)
 13541  00148C  0100               	movlb	0	; () banked
 13542  00148E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13543  001490  D003               	goto	l489
 13544                           
 13545                           ; BSR set to: 0
 13546                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x01;
 13547  001492  010F               	movlb	15	; () banked
 13548  001494  8B09               	bsf	9,5,b	;volatile
 13549  001496  D002               	goto	l490
 13550  001498                     l489:
 13551                           
 13552                           ; BSR set to: 0
 13553                           ;inc\CANlib.h: 938: else
 13554                           ;inc\CANlib.h: 939: RXF2SIDLbits.SID0 = 0x00;
 13555  001498  010F               	movlb	15	; () banked
 13556  00149A  9B09               	bcf	9,5,b	;volatile
 13557  00149C                     l490:
 13558                           
 13559                           ; BSR set to: 15
 13560                           ;inc\CANlib.h: 941: if (filter & 0x00080000)
 13561  00149C  0100               	movlb	0	; () banked
 13562  00149E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13563  0014A0  D003               	goto	l491
 13564                           
 13565                           ; BSR set to: 0
 13566                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x01;
 13567  0014A2  010F               	movlb	15	; () banked
 13568  0014A4  8D09               	bsf	9,6,b	;volatile
 13569  0014A6  D002               	goto	l492
 13570  0014A8                     l491:
 13571                           
 13572                           ; BSR set to: 0
 13573                           ;inc\CANlib.h: 943: else
 13574                           ;inc\CANlib.h: 944: RXF2SIDLbits.SID1 = 0x00;
 13575  0014A8  010F               	movlb	15	; () banked
 13576  0014AA  9D09               	bcf	9,6,b	;volatile
 13577  0014AC                     l492:
 13578                           
 13579                           ; BSR set to: 15
 13580                           ;inc\CANlib.h: 946: if (filter & 0x00100000)
 13581  0014AC  0100               	movlb	0	; () banked
 13582  0014AE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13583  0014B0  D003               	goto	l493
 13584                           
 13585                           ; BSR set to: 0
 13586                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x01 ;
 13587  0014B2  010F               	movlb	15	; () banked
 13588  0014B4  8F09               	bsf	9,7,b	;volatile
 13589  0014B6  D002               	goto	l5239
 13590  0014B8                     l493:
 13591                           
 13592                           ; BSR set to: 0
 13593                           ;inc\CANlib.h: 948: else
 13594                           ;inc\CANlib.h: 949: RXF2SIDLbits.SID2 = 0x00 ;
 13595  0014B8  010F               	movlb	15	; () banked
 13596  0014BA  9F09               	bcf	9,7,b	;volatile
 13597  0014BC                     l5239:
 13598                           
 13599                           ; BSR set to: 15
 13600                           ;inc\CANlib.h: 951: tamp = (filter >> 21);
 13601  0014BC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13602  0014C0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13603  0014C4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13604  0014C8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13605  0014CC  0E16               	movlw	22
 13606  0014CE  D006               	goto	u6280
 13607  0014D0                     u6285:
 13608  0014D0  0100               	movlb	0	; () banked
 13609  0014D2  90D8               	bcf	status,0,c
 13610  0014D4  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13611  0014D6  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13612  0014D8  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13613  0014DA  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13614  0014DC                     u6280:
 13615  0014DC  2EE8               	decfsz	wreg,f,c
 13616  0014DE  D7F8               	goto	u6285
 13617  0014E0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13618  0014E4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13619  0014E8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13620  0014EC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13621                           
 13622                           ; BSR set to: 0
 13623                           ;inc\CANlib.h: 952: tamp = tamp & 0x000000FF;
 13624  0014F0  0100               	movlb	0	; () banked
 13625  0014F2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13626  0014F4  0100               	movlb	0	; () banked
 13627  0014F6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13628  0014F8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13629  0014FA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13630  0014FC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13631                           
 13632                           ; BSR set to: 0
 13633                           ;inc\CANlib.h: 953: RXF2SIDH = (unsigned char) tamp;
 13634  0014FE  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 13635  001502                     l5245:
 13636                           
 13637                           ; BSR set to: 0
 13638                           ;inc\CANlib.h: 954: }
 13639                           ;inc\CANlib.h: 956: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 13640  001502  0E03               	movlw	3
 13641  001504  0100               	movlb	0	; () banked
 13642  001506  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13643  001508  A4D8               	btfss	status,2,c
 13644  00150A  D089               	goto	l5279
 13645                           
 13646                           ; BSR set to: 0
 13647  00150C  0EF7               	movlw	247
 13648  00150E  0100               	movlb	0	; () banked
 13649  001510  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13650  001512  A4D8               	btfss	status,2,c
 13651  001514  D084               	goto	l5279
 13652                           
 13653                           ; BSR set to: 0
 13654                           ;inc\CANlib.h: 957: {
 13655                           ;inc\CANlib.h: 958: RXF3SIDLbits.EXIDEN = 0x01;
 13656  001516  010F               	movlb	15	; () banked
 13657  001518  870D               	bsf	13,3,b	;volatile
 13658                           
 13659                           ; BSR set to: 15
 13660                           ;inc\CANlib.h: 960: tamp = filter & 0x000000FF;
 13661  00151A  0100               	movlb	0	; () banked
 13662  00151C  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13663  00151E  0100               	movlb	0	; () banked
 13664  001520  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13665  001522  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13666  001524  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13667  001526  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13668                           
 13669                           ; BSR set to: 0
 13670                           ;inc\CANlib.h: 961: RXF3EIDL = (unsigned char) tamp;
 13671  001528  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 13672                           
 13673                           ; BSR set to: 0
 13674                           ;inc\CANlib.h: 963: tamp = filter & 0x0000FF00;
 13675  00152C  0E00               	movlw	0
 13676  00152E  0100               	movlb	0	; () banked
 13677  001530  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13678  001532  0100               	movlb	0	; () banked
 13679  001534  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13680  001536  0EFF               	movlw	255
 13681  001538  0100               	movlb	0	; () banked
 13682  00153A  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13683  00153C  0100               	movlb	0	; () banked
 13684  00153E  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13685  001540  0E00               	movlw	0
 13686  001542  0100               	movlb	0	; () banked
 13687  001544  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13688  001546  0100               	movlb	0	; () banked
 13689  001548  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13690  00154A  0E00               	movlw	0
 13691  00154C  0100               	movlb	0	; () banked
 13692  00154E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13693  001550  0100               	movlb	0	; () banked
 13694  001552  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13695                           
 13696                           ; BSR set to: 0
 13697                           ;inc\CANlib.h: 964: tamp = tamp >> 8;
 13698  001554  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13699  001558  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13700  00155C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13701  001560  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13702  001564  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13703  001568  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13704  00156C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13705  001570  0100               	movlb	0	; () banked
 13706  001572  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13707  001574  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13708  001578  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13709  00157C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13710  001580  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13711                           
 13712                           ; BSR set to: 0
 13713                           ;inc\CANlib.h: 965: RXF3EIDH = (unsigned char) tamp;
 13714  001584  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 13715                           
 13716                           ; BSR set to: 0
 13717                           ;inc\CANlib.h: 967: if (filter & 0x00010000)
 13718  001588  0100               	movlb	0	; () banked
 13719  00158A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13720  00158C  D003               	goto	l496
 13721                           
 13722                           ; BSR set to: 0
 13723                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x01;
 13724  00158E  010F               	movlb	15	; () banked
 13725  001590  810D               	bsf	13,0,b	;volatile
 13726  001592  D002               	goto	l497
 13727  001594                     l496:
 13728                           
 13729                           ; BSR set to: 0
 13730                           ;inc\CANlib.h: 969: else
 13731                           ;inc\CANlib.h: 970: RXF3SIDLbits.EID16 = 0x00;
 13732  001594  010F               	movlb	15	; () banked
 13733  001596  910D               	bcf	13,0,b	;volatile
 13734  001598                     l497:
 13735                           
 13736                           ; BSR set to: 15
 13737                           ;inc\CANlib.h: 972: if (filter & 0x00020000)
 13738  001598  0100               	movlb	0	; () banked
 13739  00159A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13740  00159C  D003               	goto	l498
 13741                           
 13742                           ; BSR set to: 0
 13743                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x01;
 13744  00159E  010F               	movlb	15	; () banked
 13745  0015A0  830D               	bsf	13,1,b	;volatile
 13746  0015A2  D002               	goto	l499
 13747  0015A4                     l498:
 13748                           
 13749                           ; BSR set to: 0
 13750                           ;inc\CANlib.h: 974: else
 13751                           ;inc\CANlib.h: 975: RXF3SIDLbits.EID17 = 0x00;
 13752  0015A4  010F               	movlb	15	; () banked
 13753  0015A6  930D               	bcf	13,1,b	;volatile
 13754  0015A8                     l499:
 13755                           
 13756                           ; BSR set to: 15
 13757                           ;inc\CANlib.h: 977: if (filter & 0x00040000)
 13758  0015A8  0100               	movlb	0	; () banked
 13759  0015AA  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13760  0015AC  D003               	goto	l500
 13761                           
 13762                           ; BSR set to: 0
 13763                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x01;
 13764  0015AE  010F               	movlb	15	; () banked
 13765  0015B0  8B0D               	bsf	13,5,b	;volatile
 13766  0015B2  D002               	goto	l501
 13767  0015B4                     l500:
 13768                           
 13769                           ; BSR set to: 0
 13770                           ;inc\CANlib.h: 979: else
 13771                           ;inc\CANlib.h: 980: RXF3SIDLbits.SID0 = 0x00;
 13772  0015B4  010F               	movlb	15	; () banked
 13773  0015B6  9B0D               	bcf	13,5,b	;volatile
 13774  0015B8                     l501:
 13775                           
 13776                           ; BSR set to: 15
 13777                           ;inc\CANlib.h: 982: if (filter & 0x00080000)
 13778  0015B8  0100               	movlb	0	; () banked
 13779  0015BA  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13780  0015BC  D003               	goto	l502
 13781                           
 13782                           ; BSR set to: 0
 13783                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x01;
 13784  0015BE  010F               	movlb	15	; () banked
 13785  0015C0  8D0D               	bsf	13,6,b	;volatile
 13786  0015C2  D002               	goto	l503
 13787  0015C4                     l502:
 13788                           
 13789                           ; BSR set to: 0
 13790                           ;inc\CANlib.h: 984: else
 13791                           ;inc\CANlib.h: 985: RXF3SIDLbits.SID1 = 0x00;
 13792  0015C4  010F               	movlb	15	; () banked
 13793  0015C6  9D0D               	bcf	13,6,b	;volatile
 13794  0015C8                     l503:
 13795                           
 13796                           ; BSR set to: 15
 13797                           ;inc\CANlib.h: 987: if (filter & 0x00100000)
 13798  0015C8  0100               	movlb	0	; () banked
 13799  0015CA  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13800  0015CC  D003               	goto	l504
 13801                           
 13802                           ; BSR set to: 0
 13803                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x01 ;
 13804  0015CE  010F               	movlb	15	; () banked
 13805  0015D0  8F0D               	bsf	13,7,b	;volatile
 13806  0015D2  D002               	goto	l5273
 13807  0015D4                     l504:
 13808                           
 13809                           ; BSR set to: 0
 13810                           ;inc\CANlib.h: 989: else
 13811                           ;inc\CANlib.h: 990: RXF3SIDLbits.SID2 = 0x00 ;
 13812  0015D4  010F               	movlb	15	; () banked
 13813  0015D6  9F0D               	bcf	13,7,b	;volatile
 13814  0015D8                     l5273:
 13815                           
 13816                           ; BSR set to: 15
 13817                           ;inc\CANlib.h: 992: tamp = (filter >> 21);
 13818  0015D8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13819  0015DC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13820  0015E0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13821  0015E4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13822  0015E8  0E16               	movlw	22
 13823  0015EA  D006               	goto	u6360
 13824  0015EC                     u6365:
 13825  0015EC  0100               	movlb	0	; () banked
 13826  0015EE  90D8               	bcf	status,0,c
 13827  0015F0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13828  0015F2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13829  0015F4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13830  0015F6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13831  0015F8                     u6360:
 13832  0015F8  2EE8               	decfsz	wreg,f,c
 13833  0015FA  D7F8               	goto	u6365
 13834  0015FC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13835  001600  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13836  001604  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13837  001608  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13838                           
 13839                           ; BSR set to: 0
 13840                           ;inc\CANlib.h: 993: tamp = tamp & 0x000000FF;
 13841  00160C  0100               	movlb	0	; () banked
 13842  00160E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13843  001610  0100               	movlb	0	; () banked
 13844  001612  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13845  001614  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13846  001616  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13847  001618  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13848                           
 13849                           ; BSR set to: 0
 13850                           ;inc\CANlib.h: 994: RXF3SIDH = (unsigned char) tamp;
 13851  00161A  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 13852  00161E                     l5279:
 13853                           
 13854                           ; BSR set to: 0
 13855                           ;inc\CANlib.h: 995: }
 13856                           ;inc\CANlib.h: 997: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 13857  00161E  0E04               	movlw	4
 13858  001620  0100               	movlb	0	; () banked
 13859  001622  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13860  001624  A4D8               	btfss	status,2,c
 13861  001626  D089               	goto	l5313
 13862                           
 13863                           ; BSR set to: 0
 13864  001628  0EF7               	movlw	247
 13865  00162A  0100               	movlb	0	; () banked
 13866  00162C  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13867  00162E  A4D8               	btfss	status,2,c
 13868  001630  D084               	goto	l5313
 13869                           
 13870                           ; BSR set to: 0
 13871                           ;inc\CANlib.h: 998: {
 13872                           ;inc\CANlib.h: 999: RXF4SIDLbits.EXIDEN = 0x01;
 13873  001632  010F               	movlb	15	; () banked
 13874  001634  8711               	bsf	17,3,b	;volatile
 13875                           
 13876                           ; BSR set to: 15
 13877                           ;inc\CANlib.h: 1001: tamp = filter & 0x000000FF;
 13878  001636  0100               	movlb	0	; () banked
 13879  001638  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13880  00163A  0100               	movlb	0	; () banked
 13881  00163C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13882  00163E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13883  001640  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13884  001642  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13885                           
 13886                           ; BSR set to: 0
 13887                           ;inc\CANlib.h: 1002: RXF4EIDL = (unsigned char) tamp;
 13888  001644  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 13889                           
 13890                           ; BSR set to: 0
 13891                           ;inc\CANlib.h: 1004: tamp = filter & 0x0000FF00;
 13892  001648  0E00               	movlw	0
 13893  00164A  0100               	movlb	0	; () banked
 13894  00164C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13895  00164E  0100               	movlb	0	; () banked
 13896  001650  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13897  001652  0EFF               	movlw	255
 13898  001654  0100               	movlb	0	; () banked
 13899  001656  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13900  001658  0100               	movlb	0	; () banked
 13901  00165A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13902  00165C  0E00               	movlw	0
 13903  00165E  0100               	movlb	0	; () banked
 13904  001660  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13905  001662  0100               	movlb	0	; () banked
 13906  001664  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13907  001666  0E00               	movlw	0
 13908  001668  0100               	movlb	0	; () banked
 13909  00166A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13910  00166C  0100               	movlb	0	; () banked
 13911  00166E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13912                           
 13913                           ; BSR set to: 0
 13914                           ;inc\CANlib.h: 1005: tamp = tamp >> 8;
 13915  001670  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13916  001674  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13917  001678  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13918  00167C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13919  001680  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13920  001684  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13921  001688  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13922  00168C  0100               	movlb	0	; () banked
 13923  00168E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13924  001690  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13925  001694  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13926  001698  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13927  00169C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13928                           
 13929                           ; BSR set to: 0
 13930                           ;inc\CANlib.h: 1006: RXF4EIDH = (unsigned char) tamp;
 13931  0016A0  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 13932                           
 13933                           ; BSR set to: 0
 13934                           ;inc\CANlib.h: 1008: if (filter & 0x00010000)
 13935  0016A4  0100               	movlb	0	; () banked
 13936  0016A6  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13937  0016A8  D003               	goto	l507
 13938                           
 13939                           ; BSR set to: 0
 13940                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x01;
 13941  0016AA  010F               	movlb	15	; () banked
 13942  0016AC  8111               	bsf	17,0,b	;volatile
 13943  0016AE  D002               	goto	l508
 13944  0016B0                     l507:
 13945                           
 13946                           ; BSR set to: 0
 13947                           ;inc\CANlib.h: 1010: else
 13948                           ;inc\CANlib.h: 1011: RXF4SIDLbits.EID16 = 0x00;
 13949  0016B0  010F               	movlb	15	; () banked
 13950  0016B2  9111               	bcf	17,0,b	;volatile
 13951  0016B4                     l508:
 13952                           
 13953                           ; BSR set to: 15
 13954                           ;inc\CANlib.h: 1013: if (filter & 0x00020000)
 13955  0016B4  0100               	movlb	0	; () banked
 13956  0016B6  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13957  0016B8  D003               	goto	l509
 13958                           
 13959                           ; BSR set to: 0
 13960                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x01;
 13961  0016BA  010F               	movlb	15	; () banked
 13962  0016BC  8311               	bsf	17,1,b	;volatile
 13963  0016BE  D002               	goto	l510
 13964  0016C0                     l509:
 13965                           
 13966                           ; BSR set to: 0
 13967                           ;inc\CANlib.h: 1015: else
 13968                           ;inc\CANlib.h: 1016: RXF4SIDLbits.EID17 = 0x00;
 13969  0016C0  010F               	movlb	15	; () banked
 13970  0016C2  9311               	bcf	17,1,b	;volatile
 13971  0016C4                     l510:
 13972                           
 13973                           ; BSR set to: 15
 13974                           ;inc\CANlib.h: 1018: if (filter & 0x00040000)
 13975  0016C4  0100               	movlb	0	; () banked
 13976  0016C6  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13977  0016C8  D003               	goto	l511
 13978                           
 13979                           ; BSR set to: 0
 13980                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x01;
 13981  0016CA  010F               	movlb	15	; () banked
 13982  0016CC  8B11               	bsf	17,5,b	;volatile
 13983  0016CE  D002               	goto	l512
 13984  0016D0                     l511:
 13985                           
 13986                           ; BSR set to: 0
 13987                           ;inc\CANlib.h: 1020: else
 13988                           ;inc\CANlib.h: 1021: RXF4SIDLbits.SID0 = 0x00;
 13989  0016D0  010F               	movlb	15	; () banked
 13990  0016D2  9B11               	bcf	17,5,b	;volatile
 13991  0016D4                     l512:
 13992                           
 13993                           ; BSR set to: 15
 13994                           ;inc\CANlib.h: 1023: if (filter & 0x00080000)
 13995  0016D4  0100               	movlb	0	; () banked
 13996  0016D6  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13997  0016D8  D003               	goto	l513
 13998                           
 13999                           ; BSR set to: 0
 14000                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x01;
 14001  0016DA  010F               	movlb	15	; () banked
 14002  0016DC  8D11               	bsf	17,6,b	;volatile
 14003  0016DE  D002               	goto	l514
 14004  0016E0                     l513:
 14005                           
 14006                           ; BSR set to: 0
 14007                           ;inc\CANlib.h: 1025: else
 14008                           ;inc\CANlib.h: 1026: RXF4SIDLbits.SID1 = 0x00;
 14009  0016E0  010F               	movlb	15	; () banked
 14010  0016E2  9D11               	bcf	17,6,b	;volatile
 14011  0016E4                     l514:
 14012                           
 14013                           ; BSR set to: 15
 14014                           ;inc\CANlib.h: 1028: if (filter & 0x00100000)
 14015  0016E4  0100               	movlb	0	; () banked
 14016  0016E6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14017  0016E8  D003               	goto	l515
 14018                           
 14019                           ; BSR set to: 0
 14020                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x01 ;
 14021  0016EA  010F               	movlb	15	; () banked
 14022  0016EC  8F11               	bsf	17,7,b	;volatile
 14023  0016EE  D002               	goto	l5307
 14024  0016F0                     l515:
 14025                           
 14026                           ; BSR set to: 0
 14027                           ;inc\CANlib.h: 1030: else
 14028                           ;inc\CANlib.h: 1031: RXF4SIDLbits.SID2 = 0x00 ;
 14029  0016F0  010F               	movlb	15	; () banked
 14030  0016F2  9F11               	bcf	17,7,b	;volatile
 14031  0016F4                     l5307:
 14032                           
 14033                           ; BSR set to: 15
 14034                           ;inc\CANlib.h: 1033: tamp = (filter >> 21);
 14035  0016F4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14036  0016F8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14037  0016FC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14038  001700  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14039  001704  0E16               	movlw	22
 14040  001706  D006               	goto	u6440
 14041  001708                     u6445:
 14042  001708  0100               	movlb	0	; () banked
 14043  00170A  90D8               	bcf	status,0,c
 14044  00170C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14045  00170E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14046  001710  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14047  001712  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14048  001714                     u6440:
 14049  001714  2EE8               	decfsz	wreg,f,c
 14050  001716  D7F8               	goto	u6445
 14051  001718  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14052  00171C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14053  001720  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14054  001724  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14055                           
 14056                           ; BSR set to: 0
 14057                           ;inc\CANlib.h: 1034: tamp = tamp & 0x000000FF;
 14058  001728  0100               	movlb	0	; () banked
 14059  00172A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14060  00172C  0100               	movlb	0	; () banked
 14061  00172E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14062  001730  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14063  001732  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14064  001734  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14065                           
 14066                           ; BSR set to: 0
 14067                           ;inc\CANlib.h: 1035: RXF4SIDH = (unsigned char) tamp;
 14068  001736  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 14069  00173A                     l5313:
 14070                           
 14071                           ; BSR set to: 0
 14072                           ;inc\CANlib.h: 1036: }
 14073                           ;inc\CANlib.h: 1038: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 14074  00173A  0E05               	movlw	5
 14075  00173C  0100               	movlb	0	; () banked
 14076  00173E  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 14077  001740  A4D8               	btfss	status,2,c
 14078  001742  0012               	return	
 14079                           
 14080                           ; BSR set to: 0
 14081  001744  0EF7               	movlw	247
 14082  001746  0100               	movlb	0	; () banked
 14083  001748  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 14084  00174A  A4D8               	btfss	status,2,c
 14085  00174C  0012               	return	
 14086                           
 14087                           ; BSR set to: 0
 14088                           ;inc\CANlib.h: 1039: {
 14089                           ;inc\CANlib.h: 1040: RXF5SIDLbits.EXIDEN = 0x01;
 14090  00174E  010F               	movlb	15	; () banked
 14091  001750  8715               	bsf	21,3,b	;volatile
 14092                           
 14093                           ; BSR set to: 15
 14094                           ;inc\CANlib.h: 1042: tamp = filter & 0x000000FF;
 14095  001752  0100               	movlb	0	; () banked
 14096  001754  5177               	movf	CANSetFilter@filter& (0+255),w,b
 14097  001756  0100               	movlb	0	; () banked
 14098  001758  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14099  00175A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14100  00175C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14101  00175E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14102                           
 14103                           ; BSR set to: 0
 14104                           ;inc\CANlib.h: 1043: RXF5EIDL = (unsigned char) tamp;
 14105  001760  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 14106                           
 14107                           ; BSR set to: 0
 14108                           ;inc\CANlib.h: 1045: tamp = filter & 0x0000FF00;
 14109  001764  0E00               	movlw	0
 14110  001766  0100               	movlb	0	; () banked
 14111  001768  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 14112  00176A  0100               	movlb	0	; () banked
 14113  00176C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14114  00176E  0EFF               	movlw	255
 14115  001770  0100               	movlb	0	; () banked
 14116  001772  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14117  001774  0100               	movlb	0	; () banked
 14118  001776  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14119  001778  0E00               	movlw	0
 14120  00177A  0100               	movlb	0	; () banked
 14121  00177C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14122  00177E  0100               	movlb	0	; () banked
 14123  001780  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14124  001782  0E00               	movlw	0
 14125  001784  0100               	movlb	0	; () banked
 14126  001786  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14127  001788  0100               	movlb	0	; () banked
 14128  00178A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14129                           
 14130                           ; BSR set to: 0
 14131                           ;inc\CANlib.h: 1046: tamp = tamp >> 8;
 14132  00178C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 14133  001790  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14134  001794  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14135  001798  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14136  00179C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 14137  0017A0  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14138  0017A4  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14139  0017A8  0100               	movlb	0	; () banked
 14140  0017AA  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 14141  0017AC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14142  0017B0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14143  0017B4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14144  0017B8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14145                           
 14146                           ; BSR set to: 0
 14147                           ;inc\CANlib.h: 1047: RXF5EIDH = (unsigned char) tamp;
 14148  0017BC  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 14149                           
 14150                           ; BSR set to: 0
 14151                           ;inc\CANlib.h: 1049: if (filter & 0x00010000)
 14152  0017C0  0100               	movlb	0	; () banked
 14153  0017C2  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14154  0017C4  D003               	goto	l518
 14155                           
 14156                           ; BSR set to: 0
 14157                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x01;
 14158  0017C6  010F               	movlb	15	; () banked
 14159  0017C8  8115               	bsf	21,0,b	;volatile
 14160  0017CA  D002               	goto	l519
 14161  0017CC                     l518:
 14162                           
 14163                           ; BSR set to: 0
 14164                           ;inc\CANlib.h: 1051: else
 14165                           ;inc\CANlib.h: 1052: RXF5SIDLbits.EID16 = 0x00;
 14166  0017CC  010F               	movlb	15	; () banked
 14167  0017CE  9115               	bcf	21,0,b	;volatile
 14168  0017D0                     l519:
 14169                           
 14170                           ; BSR set to: 15
 14171                           ;inc\CANlib.h: 1054: if (filter & 0x00020000)
 14172  0017D0  0100               	movlb	0	; () banked
 14173  0017D2  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14174  0017D4  D003               	goto	l520
 14175                           
 14176                           ; BSR set to: 0
 14177                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x01;
 14178  0017D6  010F               	movlb	15	; () banked
 14179  0017D8  8315               	bsf	21,1,b	;volatile
 14180  0017DA  D002               	goto	l521
 14181  0017DC                     l520:
 14182                           
 14183                           ; BSR set to: 0
 14184                           ;inc\CANlib.h: 1056: else
 14185                           ;inc\CANlib.h: 1057: RXF5SIDLbits.EID17 = 0x00;
 14186  0017DC  010F               	movlb	15	; () banked
 14187  0017DE  9315               	bcf	21,1,b	;volatile
 14188  0017E0                     l521:
 14189                           
 14190                           ; BSR set to: 15
 14191                           ;inc\CANlib.h: 1059: if (filter & 0x00040000)
 14192  0017E0  0100               	movlb	0	; () banked
 14193  0017E2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14194  0017E4  D003               	goto	l522
 14195                           
 14196                           ; BSR set to: 0
 14197                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x01;
 14198  0017E6  010F               	movlb	15	; () banked
 14199  0017E8  8B15               	bsf	21,5,b	;volatile
 14200  0017EA  D002               	goto	l523
 14201  0017EC                     l522:
 14202                           
 14203                           ; BSR set to: 0
 14204                           ;inc\CANlib.h: 1061: else
 14205                           ;inc\CANlib.h: 1062: RXF5SIDLbits.SID0 = 0x00;
 14206  0017EC  010F               	movlb	15	; () banked
 14207  0017EE  9B15               	bcf	21,5,b	;volatile
 14208  0017F0                     l523:
 14209                           
 14210                           ; BSR set to: 15
 14211                           ;inc\CANlib.h: 1064: if (filter & 0x00080000)
 14212  0017F0  0100               	movlb	0	; () banked
 14213  0017F2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14214  0017F4  D003               	goto	l524
 14215                           
 14216                           ; BSR set to: 0
 14217                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x01;
 14218  0017F6  010F               	movlb	15	; () banked
 14219  0017F8  8D15               	bsf	21,6,b	;volatile
 14220  0017FA  D002               	goto	l525
 14221  0017FC                     l524:
 14222                           
 14223                           ; BSR set to: 0
 14224                           ;inc\CANlib.h: 1066: else
 14225                           ;inc\CANlib.h: 1067: RXF5SIDLbits.SID1 = 0x00;
 14226  0017FC  010F               	movlb	15	; () banked
 14227  0017FE  9D15               	bcf	21,6,b	;volatile
 14228  001800                     l525:
 14229                           
 14230                           ; BSR set to: 15
 14231                           ;inc\CANlib.h: 1069: if (filter & 0x00100000)
 14232  001800  0100               	movlb	0	; () banked
 14233  001802  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14234  001804  D003               	goto	l526
 14235                           
 14236                           ; BSR set to: 0
 14237                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x01 ;
 14238  001806  010F               	movlb	15	; () banked
 14239  001808  8F15               	bsf	21,7,b	;volatile
 14240  00180A  D002               	goto	l5341
 14241  00180C                     l526:
 14242                           
 14243                           ; BSR set to: 0
 14244                           ;inc\CANlib.h: 1071: else
 14245                           ;inc\CANlib.h: 1072: RXF5SIDLbits.SID2 = 0x00 ;
 14246  00180C  010F               	movlb	15	; () banked
 14247  00180E  9F15               	bcf	21,7,b	;volatile
 14248  001810                     l5341:
 14249                           
 14250                           ; BSR set to: 15
 14251                           ;inc\CANlib.h: 1074: tamp = (filter >> 21);
 14252  001810  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14253  001814  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14254  001818  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14255  00181C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14256  001820  0E16               	movlw	22
 14257  001822  D006               	goto	u6520
 14258  001824                     u6525:
 14259  001824  0100               	movlb	0	; () banked
 14260  001826  90D8               	bcf	status,0,c
 14261  001828  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14262  00182A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14263  00182C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14264  00182E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14265  001830                     u6520:
 14266  001830  2EE8               	decfsz	wreg,f,c
 14267  001832  D7F8               	goto	u6525
 14268  001834  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14269  001838  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14270  00183C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14271  001840  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14272                           
 14273                           ; BSR set to: 0
 14274                           ;inc\CANlib.h: 1075: tamp = tamp & 0x000000FF;
 14275  001844  0100               	movlb	0	; () banked
 14276  001846  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14277  001848  0100               	movlb	0	; () banked
 14278  00184A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14279  00184C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14280  00184E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14281  001850  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14282                           
 14283                           ; BSR set to: 0
 14284                           ;inc\CANlib.h: 1076: RXF5SIDH = (unsigned char) tamp;
 14285  001852  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 14286  001856  0012               	return	
 14287  001858                     __end_of_CANSetFilter:
 14288                           	opt stack 0
 14289                           tblptru	equ	0xFF8
 14290                           tblptrh	equ	0xFF7
 14291                           tblptrl	equ	0xFF6
 14292                           tablat	equ	0xFF5
 14293                           prodh	equ	0xFF4
 14294                           prodl	equ	0xFF3
 14295                           intcon	equ	0xFF2
 14296                           intcon2	equ	0xFF1
 14297                           postinc0	equ	0xFEE
 14298                           wreg	equ	0xFE8
 14299                           postdec1	equ	0xFE5
 14300                           fsr1l	equ	0xFE1
 14301                           indf2	equ	0xFDF
 14302                           postinc2	equ	0xFDE
 14303                           postdec2	equ	0xFDD
 14304                           fsr2h	equ	0xFDA
 14305                           fsr2l	equ	0xFD9
 14306                           status	equ	0xFD8
 14307                           
 14308 ;; *************** function _CANOperationMode *****************
 14309 ;; Defined at:
 14310 ;;		line 207 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 14311 ;; Parameters:    Size  Location     Type
 14312 ;;  mode            1    wreg     enum E16307
 14313 ;; Auto vars:     Size  Location     Type
 14314 ;;  mode            1   23[BANK0 ] enum E16307
 14315 ;; Return value:  Size  Location     Type
 14316 ;;		None               void
 14317 ;; Registers used:
 14318 ;;		wreg, status,2, status,0
 14319 ;; Tracked objects:
 14320 ;;		On entry : 0/0
 14321 ;;		On exit  : 0/0
 14322 ;;		Unchanged: 0/0
 14323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14325 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14327 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14328 ;;Total ram usage:        1 bytes
 14329 ;; Hardware stack levels used:    1
 14330 ;; Hardware stack levels required when called:    4
 14331 ;; This function calls:
 14332 ;;		Nothing
 14333 ;; This function is called by:
 14334 ;;		_CANInitialize
 14335 ;; This function uses a non-reentrant model
 14336 ;;
 14337                           
 14338                           	psect	text33
 14339  005FB8                     __ptext33:
 14340                           	opt stack 0
 14341  005FB8                     _CANOperationMode:
 14342                           	opt stack 24
 14343                           
 14344                           ; BSR set to: 0
 14345                           ;incstack = 0
 14346                           ;CANOperationMode@mode stored from wreg
 14347  005FB8  0100               	movlb	0	; () banked
 14348  005FBA  6F77               	movwf	CANOperationMode@mode& (0+255),b
 14349                           
 14350                           ;inc\CANlib.h: 209: CANCON = mode;
 14351  005FBC  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 14352  005FC0                     l4937:
 14353  005FC0  506E               	movf	3950,w,c	;volatile
 14354  005FC2  0BE0               	andlw	224
 14355  005FC4  0100               	movlb	0	; () banked
 14356  005FC6  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 14357  005FC8  B4D8               	btfsc	status,2,c
 14358  005FCA  0012               	return	
 14359  005FCC  D7F9               	goto	l4937
 14360  005FCE                     __end_of_CANOperationMode:
 14361                           	opt stack 0
 14362                           tblptru	equ	0xFF8
 14363                           tblptrh	equ	0xFF7
 14364                           tblptrl	equ	0xFF6
 14365                           tablat	equ	0xFF5
 14366                           prodh	equ	0xFF4
 14367                           prodl	equ	0xFF3
 14368                           intcon	equ	0xFF2
 14369                           intcon2	equ	0xFF1
 14370                           postinc0	equ	0xFEE
 14371                           wreg	equ	0xFE8
 14372                           postdec1	equ	0xFE5
 14373                           fsr1l	equ	0xFE1
 14374                           indf2	equ	0xFDF
 14375                           postinc2	equ	0xFDE
 14376                           postdec2	equ	0xFDD
 14377                           fsr2h	equ	0xFDA
 14378                           fsr2l	equ	0xFD9
 14379                           status	equ	0xFD8
 14380                           
 14381 ;; *************** function _can_interpreter *****************
 14382 ;; Defined at:
 14383 ;;		line 441 in file "parcheggio.c"
 14384 ;; Parameters:    Size  Location     Type
 14385 ;;		None
 14386 ;; Auto vars:     Size  Location     Type
 14387 ;;		None
 14388 ;; Return value:  Size  Location     Type
 14389 ;;		None               void
 14390 ;; Registers used:
 14391 ;;		wreg, status,2, status,0
 14392 ;; Tracked objects:
 14393 ;;		On entry : 0/0
 14394 ;;		On exit  : 0/0
 14395 ;;		Unchanged: 0/0
 14396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14399 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14400 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14401 ;;Total ram usage:        4 bytes
 14402 ;; Hardware stack levels used:    1
 14403 ;; Hardware stack levels required when called:    4
 14404 ;; This function calls:
 14405 ;;		Nothing
 14406 ;; This function is called by:
 14407 ;;		_main
 14408 ;; This function uses a non-reentrant model
 14409 ;;
 14410                           
 14411                           	psect	text34
 14412  005D70                     __ptext34:
 14413                           	opt stack 0
 14414  005D70                     _can_interpreter:
 14415                           	opt stack 26
 14416                           
 14417                           ;parcheggio.c: 442: left_speed = data_speed_rx[1];
 14418                           
 14419                           ; BSR set to: 0
 14420                           ;incstack = 0
 14421  005D70  C109  F03C         	movff	_data_speed_rx+1,_left_speed
 14422  005D74  6A3D               	clrf	_left_speed+1,c
 14423                           
 14424                           ;parcheggio.c: 443: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 14425  005D76  503C               	movf	_left_speed,w,c
 14426  005D78  0100               	movlb	0	; () banked
 14427  005D7A  6F77               	movwf	??_can_interpreter& (0+255),b
 14428  005D7C  0101               	movlb	1	; () banked
 14429  005D7E  5108               	movf	_data_speed_rx& (0+255),w,b
 14430  005D80  6E3C               	movwf	_left_speed,c
 14431  005D82  C077  F03D         	movff	??_can_interpreter,_left_speed+1
 14432                           
 14433                           ; BSR set to: 1
 14434                           ;parcheggio.c: 444: right_speed = data_speed_rx[3];
 14435  005D86  C10B  F03E         	movff	_data_speed_rx+3,_right_speed
 14436  005D8A  6A3F               	clrf	_right_speed+1,c
 14437                           
 14438                           ;parcheggio.c: 445: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 14439  005D8C  503E               	movf	_right_speed,w,c
 14440  005D8E  0100               	movlb	0	; () banked
 14441  005D90  6F77               	movwf	??_can_interpreter& (0+255),b
 14442  005D92  0101               	movlb	1	; () banked
 14443  005D94  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 14444  005D96  6E3E               	movwf	_right_speed,c
 14445  005D98  C077  F03F         	movff	??_can_interpreter,_right_speed+1
 14446                           
 14447                           ; BSR set to: 1
 14448                           ;parcheggio.c: 446: actual_speed = (right_speed + left_speed) / 2;
 14449  005D9C  503C               	movf	_left_speed,w,c
 14450  005D9E  243E               	addwf	_right_speed,w,c
 14451  005DA0  0100               	movlb	0	; () banked
 14452  005DA2  6F77               	movwf	??_can_interpreter& (0+255),b
 14453  005DA4  503D               	movf	_left_speed+1,w,c
 14454  005DA6  203F               	addwfc	_right_speed+1,w,c
 14455  005DA8  0100               	movlb	0	; () banked
 14456  005DAA  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 14457  005DAC  90D8               	bcf	status,0,c
 14458  005DAE  0100               	movlb	0	; () banked
 14459  005DB0  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 14460  005DB2  0100               	movlb	0	; () banked
 14461  005DB4  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 14462  005DB6  0100               	movlb	0	; () banked
 14463  005DB8  3177               	rrcf	??_can_interpreter& (0+255),w,b
 14464  005DBA  0101               	movlb	1	; () banked
 14465  005DBC  6F44               	movwf	_actual_speed& (0+255),b
 14466  005DBE  C079  F145         	movff	??_can_interpreter+2,_actual_speed+1
 14467                           
 14468                           ; BSR set to: 1
 14469  005DC2  0012               	return		;funcret
 14470  005DC4                     __end_of_can_interpreter:
 14471                           	opt stack 0
 14472                           tblptru	equ	0xFF8
 14473                           tblptrh	equ	0xFF7
 14474                           tblptrl	equ	0xFF6
 14475                           tablat	equ	0xFF5
 14476                           prodh	equ	0xFF4
 14477                           prodl	equ	0xFF3
 14478                           intcon	equ	0xFF2
 14479                           intcon2	equ	0xFF1
 14480                           postinc0	equ	0xFEE
 14481                           wreg	equ	0xFE8
 14482                           postdec1	equ	0xFE5
 14483                           fsr1l	equ	0xFE1
 14484                           indf2	equ	0xFDF
 14485                           postinc2	equ	0xFDE
 14486                           postdec2	equ	0xFDD
 14487                           fsr2h	equ	0xFDA
 14488                           fsr2l	equ	0xFD9
 14489                           status	equ	0xFD8
 14490                           
 14491 ;; *************** function _ISR_Bassa *****************
 14492 ;; Defined at:
 14493 ;;		line 111 in file "parcheggio.c"
 14494 ;; Parameters:    Size  Location     Type
 14495 ;;		None
 14496 ;; Auto vars:     Size  Location     Type
 14497 ;;  i               1   34[COMRAM] unsigned char 
 14498 ;;  gigi            1   33[COMRAM] unsigned char 
 14499 ;; Return value:  Size  Location     Type
 14500 ;;		None               void
 14501 ;; Registers used:
 14502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14503 ;; Tracked objects:
 14504 ;;		On entry : 0/0
 14505 ;;		On exit  : 0/0
 14506 ;;		Unchanged: 0/0
 14507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14509 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14510 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14511 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14512 ;;Total ram usage:       23 bytes
 14513 ;; Hardware stack levels used:    1
 14514 ;; Hardware stack levels required when called:    3
 14515 ;; This function calls:
 14516 ;;		_CANreceiveMessage
 14517 ;; This function is called by:
 14518 ;;		Interrupt level 1
 14519 ;; This function uses a non-reentrant model
 14520 ;;
 14521                           
 14522                           	psect	intcodelo
 14523  000018                     __pintcodelo:
 14524                           	opt stack 0
 14525  000018                     _ISR_Bassa:
 14526                           	opt stack 21
 14527                           
 14528                           ; BSR set to: 1
 14529                           ;incstack = 0
 14530  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14531  00001A  CFD8 F011          	movff	status,??_ISR_Bassa+4
 14532  00001E  CFE8 F012          	movff	wreg,??_ISR_Bassa+5
 14533  000022  CFE0 F013          	movff	bsr,??_ISR_Bassa+6
 14534  000026  CFFA F014          	movff	pclath,??_ISR_Bassa+7
 14535  00002A  CFFB F015          	movff	pclatu,??_ISR_Bassa+8
 14536  00002E  CFE9 F016          	movff	fsr0l,??_ISR_Bassa+9
 14537  000032  CFEA F017          	movff	fsr0h,??_ISR_Bassa+10
 14538  000036  CFE1 F018          	movff	fsr1l,??_ISR_Bassa+11
 14539  00003A  CFE2 F019          	movff	fsr1h,??_ISR_Bassa+12
 14540  00003E  CFD9 F01A          	movff	fsr2l,??_ISR_Bassa+13
 14541  000042  CFDA F01B          	movff	fsr2h,??_ISR_Bassa+14
 14542  000046  CFF3 F01C          	movff	prodl,??_ISR_Bassa+15
 14543  00004A  CFF4 F01D          	movff	prodh,??_ISR_Bassa+16
 14544  00004E  CFF6 F01E          	movff	tblptrl,??_ISR_Bassa+17
 14545  000052  CFF7 F01F          	movff	tblptrh,??_ISR_Bassa+18
 14546  000056  CFF8 F020          	movff	tblptru,??_ISR_Bassa+19
 14547  00005A  CFF5 F021          	movff	tablat,??_ISR_Bassa+20
 14548                           
 14549                           ;parcheggio.c: 113: if (INTCONbits.TMR0IF == 1) {
 14550  00005E  A4F2               	btfss	intcon,2,c	;volatile
 14551  000060  D036               	goto	i1l6063
 14552                           
 14553                           ;parcheggio.c: 114: INTCONbits.INT0IE = 0;
 14554  000062  98F2               	bcf	intcon,4,c	;volatile
 14555                           
 14556                           ;parcheggio.c: 115: T0CONbits.TMR0ON = 0;
 14557  000064  9ED5               	bcf	4053,7,c	;volatile
 14558                           
 14559                           ;parcheggio.c: 116: TMR0H = 0x34;
 14560  000066  0E34               	movlw	52
 14561  000068  6ED7               	movwf	4055,c	;volatile
 14562                           
 14563                           ;parcheggio.c: 117: TMR0L = 0xE0;
 14564  00006A  0EE0               	movlw	224
 14565  00006C  6ED6               	movwf	4054,c	;volatile
 14566                           
 14567                           ;parcheggio.c: 118: T0CONbits.TMR0ON = 1;
 14568  00006E  8ED5               	bsf	4053,7,c	;volatile
 14569                           
 14570                           ;parcheggio.c: 119: if (distance_error == 1) {
 14571  000070  A646               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14572  000072  D00C               	goto	i1l6033
 14573                           
 14574                           ;parcheggio.c: 120: sensor_distance[MUX_index] = 5000;
 14575  000074  5042               	movf	_MUX_index,w,c	;volatile
 14576  000076  0D02               	mullw	2
 14577  000078  0E24               	movlw	low _sensor_distance
 14578  00007A  24F3               	addwf	prodl,w,c
 14579  00007C  6ED9               	movwf	fsr2l,c
 14580  00007E  0E00               	movlw	high _sensor_distance
 14581  000080  20F4               	addwfc	prodh,w,c
 14582  000082  6EDA               	movwf	fsr2h,c
 14583  000084  0E88               	movlw	136
 14584  000086  6EDE               	movwf	postinc2,c
 14585  000088  0E13               	movlw	19
 14586  00008A  6EDD               	movwf	postdec2,c
 14587  00008C                     i1l6033:
 14588                           
 14589                           ;parcheggio.c: 121: }
 14590                           ;parcheggio.c: 122: MUX_index++;
 14591  00008C  2A42               	incf	_MUX_index,f,c	;volatile
 14592                           
 14593                           ;parcheggio.c: 123: if (MUX_index == 8) {
 14594  00008E  0E08               	movlw	8
 14595  000090  1842               	xorwf	_MUX_index,w,c	;volatile
 14596  000092  A4D8               	btfss	status,2,c
 14597  000094  D002               	goto	i1l697
 14598                           
 14599                           ;parcheggio.c: 124: MUX_index = 0;
 14600  000096  0E00               	movlw	0
 14601  000098  6E42               	movwf	_MUX_index,c	;volatile
 14602  00009A                     i1l697:
 14603                           
 14604                           ;parcheggio.c: 125: }
 14605                           ;parcheggio.c: 127: unsigned char gigi = 0;
 14606  00009A  0E00               	movlw	0
 14607  00009C  6E22               	movwf	ISR_Bassa@gigi,c
 14608                           
 14609                           ;parcheggio.c: 128: gigi = MUX_select[MUX_index];
 14610  00009E  5042               	movf	_MUX_index,w,c	;volatile
 14611  0000A0  0D01               	mullw	1
 14612  0000A2  0E00               	movlw	low _MUX_select
 14613  0000A4  24F3               	addwf	prodl,w,c
 14614  0000A6  6ED9               	movwf	fsr2l,c
 14615  0000A8  0E01               	movlw	high _MUX_select
 14616  0000AA  20F4               	addwfc	prodh,w,c
 14617  0000AC  6EDA               	movwf	fsr2h,c
 14618  0000AE  50DF               	movf	indf2,w,c
 14619  0000B0  6E22               	movwf	ISR_Bassa@gigi,c
 14620                           
 14621                           ;parcheggio.c: 129: PORTA = gigi;
 14622  0000B2  C022  FF80         	movff	ISR_Bassa@gigi,3968	;volatile
 14623                           
 14624                           ;parcheggio.c: 130: TRISBbits.RB0 = 0;
 14625  0000B6  9093               	bcf	3987,0,c	;volatile
 14626                           
 14627                           ;parcheggio.c: 131: LATBbits.LATB0 = 1;
 14628  0000B8  808A               	bsf	3978,0,c	;volatile
 14629                           
 14630                           ;parcheggio.c: 132: _delay((unsigned long)((15)*(16000000/4000000.0)));
 14631  0000BA  0E14               	movlw	20
 14632  0000BC                     i1u992_27:
 14633  0000BC  2EE8               	decfsz	wreg,f,c
 14634  0000BE  D7FE               	goto	i1u992_27
 14635                           
 14636                           ;parcheggio.c: 133: distance_error = 1;
 14637  0000C0  8646               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14638                           
 14639                           ;parcheggio.c: 134: LATBbits.LATB0 = 0;
 14640  0000C2  908A               	bcf	3978,0,c	;volatile
 14641                           
 14642                           ;parcheggio.c: 135: TRISBbits.RB0 = 1;
 14643  0000C4  8093               	bsf	3987,0,c	;volatile
 14644                           
 14645                           ;parcheggio.c: 136: INTCONbits.INT0IF = 0;
 14646  0000C6  92F2               	bcf	intcon,1,c	;volatile
 14647                           
 14648                           ;parcheggio.c: 137: INTCONbits.INT0IE = 1;
 14649  0000C8  88F2               	bsf	intcon,4,c	;volatile
 14650                           
 14651                           ;parcheggio.c: 138: INTCONbits.TMR0IF = 0;
 14652  0000CA  94F2               	bcf	intcon,2,c	;volatile
 14653                           
 14654                           ;parcheggio.c: 139: INTCON2bits.INTEDG0 = 1;
 14655  0000CC  8CF1               	bsf	intcon2,6,c	;volatile
 14656  0000CE                     i1l6063:
 14657                           
 14658                           ;parcheggio.c: 140: }
 14659                           ;parcheggio.c: 142: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 14660  0000CE  A0A4               	btfss	4004,0,c	;volatile
 14661  0000D0  B2A4               	btfsc	4004,1,c	;volatile
 14662  0000D2  D001               	goto	i1l6067
 14663  0000D4  D09B               	goto	i1l711
 14664  0000D6                     i1l6067:
 14665                           
 14666                           ;parcheggio.c: 143: CANreceiveMessage(&msg);
 14667  0000D6  0E4E               	movlw	low _msg
 14668  0000D8  6E01               	movwf	CANreceiveMessage@msg,c
 14669  0000DA  0E01               	movlw	high _msg
 14670  0000DC  6E02               	movwf	CANreceiveMessage@msg+1,c
 14671  0000DE  ECB7  F012         	call	_CANreceiveMessage	;wreg free
 14672                           
 14673                           ;parcheggio.c: 144: if (msg.identifier == 0b00000001101) {
 14674  0000E2  0E0D               	movlw	13
 14675  0000E4  0101               	movlb	1	; () banked
 14676  0000E6  194E               	xorwf	_msg& (0+255),w,b
 14677  0000E8  0101               	movlb	1	; () banked
 14678  0000EA  114F               	iorwf	(_msg+1)& (0+255),w,b
 14679  0000EC  0101               	movlb	1	; () banked
 14680  0000EE  1150               	iorwf	(_msg+2)& (0+255),w,b
 14681  0000F0  0101               	movlb	1	; () banked
 14682  0000F2  1151               	iorwf	(_msg+3)& (0+255),w,b
 14683  0000F4  B4D8               	btfsc	status,2,c
 14684                           
 14685                           ; BSR set to: 1
 14686                           ;parcheggio.c: 145: asd = 0;
 14687  0000F6  9246               	bcf	_asd/(0+8),_asd& (0+7),c	;volatile
 14688                           
 14689                           ; BSR set to: 1
 14690                           ;parcheggio.c: 146: }
 14691                           ;parcheggio.c: 147: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 14692                           
 14693                           ; BSR set to: 1
 14694  0000F8  0E07               	movlw	7
 14695  0000FA  0101               	movlb	1	; () banked
 14696  0000FC  194E               	xorwf	_msg& (0+255),w,b
 14697  0000FE  0101               	movlb	1	; () banked
 14698  000100  114F               	iorwf	(_msg+1)& (0+255),w,b
 14699  000102  0101               	movlb	1	; () banked
 14700  000104  1150               	iorwf	(_msg+2)& (0+255),w,b
 14701  000106  0101               	movlb	1	; () banked
 14702  000108  1151               	iorwf	(_msg+3)& (0+255),w,b
 14703  00010A  A4D8               	btfss	status,2,c
 14704  00010C  D02B               	goto	i1l6089
 14705                           
 14706                           ; BSR set to: 1
 14707  00010E  0101               	movlb	1	; () banked
 14708  000110  055C               	decf	(_msg+14)& (0+255),w,b
 14709  000112  B4D8               	btfsc	status,2,c
 14710  000114  D027               	goto	i1l6089
 14711                           
 14712                           ; BSR set to: 1
 14713                           ;parcheggio.c: 148: distance_average = 0;
 14714  000116  0E00               	movlw	0
 14715  000118  6E37               	movwf	_distance_average+1,c	;volatile
 14716  00011A  0E00               	movlw	0
 14717  00011C  6E36               	movwf	_distance_average,c	;volatile
 14718                           
 14719                           ; BSR set to: 1
 14720                           ;parcheggio.c: 149: distance_dx = msg.data[1];
 14721  00011E  C153  F038         	movff	_msg+5,_distance_dx	;volatile
 14722  000122  6A39               	clrf	_distance_dx+1,c	;volatile
 14723                           
 14724                           ;parcheggio.c: 150: distance_dx = ((distance_dx << 8) | msg.data[0]);
 14725  000124  5038               	movf	_distance_dx,w,c	;volatile
 14726  000126  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14727  000128  0101               	movlb	1	; () banked
 14728  00012A  5152               	movf	(_msg+4)& (0+255),w,b
 14729  00012C  6E38               	movwf	_distance_dx,c	;volatile
 14730  00012E  C00D  F039         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 14731                           
 14732                           ; BSR set to: 1
 14733                           ;parcheggio.c: 151: distance_sx = msg.data[3];
 14734  000132  C155  F03A         	movff	_msg+7,_distance_sx	;volatile
 14735  000136  6A3B               	clrf	_distance_sx+1,c	;volatile
 14736                           
 14737                           ;parcheggio.c: 152: distance_sx = ((distance_sx << 8) | msg.data[2]);
 14738  000138  503A               	movf	_distance_sx,w,c	;volatile
 14739  00013A  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14740  00013C  0101               	movlb	1	; () banked
 14741  00013E  5154               	movf	(_msg+6)& (0+255),w,b
 14742  000140  6E3A               	movwf	_distance_sx,c	;volatile
 14743  000142  C00D  F03B         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 14744                           
 14745                           ; BSR set to: 1
 14746                           ;parcheggio.c: 153: distance_average = (distance_sx + distance_dx) / 2;
 14747  000146  5038               	movf	_distance_dx,w,c	;volatile
 14748  000148  243A               	addwf	_distance_sx,w,c	;volatile
 14749  00014A  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14750  00014C  5039               	movf	_distance_dx+1,w,c	;volatile
 14751  00014E  203B               	addwfc	_distance_sx+1,w,c	;volatile
 14752  000150  6E0E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14753  000152  90D8               	bcf	status,0,c
 14754  000154  300E               	rrcf	??_ISR_Bassa+1,w,c
 14755  000156  6E0F               	movwf	(??_ISR_Bassa+2)& (0+255),c
 14756  000158  300D               	rrcf	??_ISR_Bassa,w,c
 14757  00015A  6E36               	movwf	_distance_average,c	;volatile
 14758  00015C  C00F  F037         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 14759                           
 14760                           ; BSR set to: 1
 14761                           ;parcheggio.c: 154: distance_received = 1;
 14762  000160  8846               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 14763                           
 14764                           ; BSR set to: 1
 14765                           ;parcheggio.c: 155: distance_received1 = 1;
 14766  000162  8A46               	bsf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
 14767  000164                     i1l6089:
 14768                           
 14769                           ; BSR set to: 1
 14770                           ;parcheggio.c: 156: }
 14771                           ;parcheggio.c: 157: if (msg.identifier == 0b00000001010) {
 14772  000164  0E0A               	movlw	10
 14773  000166  0101               	movlb	1	; () banked
 14774  000168  194E               	xorwf	_msg& (0+255),w,b
 14775  00016A  0101               	movlb	1	; () banked
 14776  00016C  114F               	iorwf	(_msg+1)& (0+255),w,b
 14777  00016E  0101               	movlb	1	; () banked
 14778  000170  1150               	iorwf	(_msg+2)& (0+255),w,b
 14779  000172  0101               	movlb	1	; () banked
 14780  000174  1151               	iorwf	(_msg+3)& (0+255),w,b
 14781  000176  A4D8               	btfss	status,2,c
 14782  000178  D00C               	goto	i1l6095
 14783                           
 14784                           ; BSR set to: 1
 14785                           ;parcheggio.c: 158: if (msg.data[0] == 1) {
 14786  00017A  0101               	movlb	1	; () banked
 14787  00017C  0552               	decf	(_msg+4)& (0+255),w,b
 14788  00017E  A4D8               	btfss	status,2,c
 14789  000180  D003               	goto	i1l704
 14790                           
 14791                           ; BSR set to: 1
 14792                           ;parcheggio.c: 159: activation = 1;
 14793  000182  8046               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 14794                           
 14795                           ;parcheggio.c: 160: PORTBbits.RB6 = 1;
 14796  000184  8C81               	bsf	3969,6,c	;volatile
 14797                           
 14798                           ;parcheggio.c: 161: } else {
 14799  000186  D005               	goto	i1l6095
 14800  000188                     i1l704:
 14801                           
 14802                           ; BSR set to: 1
 14803                           ;parcheggio.c: 162: activation = 0;
 14804  000188  9046               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 14805                           
 14806                           ;parcheggio.c: 163: PORTBbits.RB4 = 0;
 14807  00018A  9881               	bcf	3969,4,c	;volatile
 14808                           
 14809                           ;parcheggio.c: 164: PORTBbits.RB5 = 0;
 14810  00018C  9A81               	bcf	3969,5,c	;volatile
 14811                           
 14812                           ;parcheggio.c: 165: PORTBbits.RB6 = 0;
 14813  00018E  9C81               	bcf	3969,6,c	;volatile
 14814                           
 14815                           ;parcheggio.c: 166: request_sent = 0;
 14816  000190  9247               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
 14817  000192                     i1l6095:
 14818                           
 14819                           ; BSR set to: 1
 14820                           ;parcheggio.c: 167: }
 14821                           ;parcheggio.c: 168: }
 14822                           ;parcheggio.c: 169: if (msg.identifier == 0b00000001100) {
 14823  000192  0E0C               	movlw	12
 14824  000194  0101               	movlb	1	; () banked
 14825  000196  194E               	xorwf	_msg& (0+255),w,b
 14826  000198  0101               	movlb	1	; () banked
 14827  00019A  114F               	iorwf	(_msg+1)& (0+255),w,b
 14828  00019C  0101               	movlb	1	; () banked
 14829  00019E  1150               	iorwf	(_msg+2)& (0+255),w,b
 14830  0001A0  0101               	movlb	1	; () banked
 14831  0001A2  1151               	iorwf	(_msg+3)& (0+255),w,b
 14832  0001A4  B4D8               	btfsc	status,2,c
 14833                           
 14834                           ; BSR set to: 1
 14835                           ;parcheggio.c: 170: start_operation = 1;
 14836  0001A6  8647               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14837                           
 14838                           ; BSR set to: 1
 14839                           ;parcheggio.c: 171: }
 14840                           ;parcheggio.c: 172: if (msg.identifier == 0b00000000110) {
 14841                           
 14842                           ; BSR set to: 1
 14843  0001A8  0E06               	movlw	6
 14844  0001AA  0101               	movlb	1	; () banked
 14845  0001AC  194E               	xorwf	_msg& (0+255),w,b
 14846  0001AE  0101               	movlb	1	; () banked
 14847  0001B0  114F               	iorwf	(_msg+1)& (0+255),w,b
 14848  0001B2  0101               	movlb	1	; () banked
 14849  0001B4  1150               	iorwf	(_msg+2)& (0+255),w,b
 14850  0001B6  0101               	movlb	1	; () banked
 14851  0001B8  1151               	iorwf	(_msg+3)& (0+255),w,b
 14852  0001BA  A4D8               	btfss	status,2,c
 14853  0001BC  D025               	goto	i1l707
 14854                           
 14855                           ; BSR set to: 1
 14856                           ;parcheggio.c: 173: for (unsigned char i = 0; i < 8; i++) {
 14857  0001BE  0E00               	movlw	0
 14858  0001C0  6E23               	movwf	ISR_Bassa@i,c
 14859  0001C2                     i1l6103:
 14860                           
 14861                           ; BSR set to: 1
 14862  0001C2  0E07               	movlw	7
 14863  0001C4  6423               	cpfsgt	ISR_Bassa@i,c
 14864  0001C6  D001               	goto	i1l6107
 14865  0001C8  D014               	goto	i1l6113
 14866  0001CA                     i1l6107:
 14867                           
 14868                           ;parcheggio.c: 174: data_speed_rx[i] = msg.data[i];
 14869  0001CA  5023               	movf	ISR_Bassa@i,w,c
 14870  0001CC  0D01               	mullw	1
 14871  0001CE  0E52               	movlw	low (_msg+4)
 14872  0001D0  24F3               	addwf	prodl,w,c
 14873  0001D2  6ED9               	movwf	fsr2l,c
 14874  0001D4  0E01               	movlw	high (_msg+4)
 14875  0001D6  20F4               	addwfc	prodh,w,c
 14876  0001D8  6EDA               	movwf	fsr2h,c
 14877  0001DA  5023               	movf	ISR_Bassa@i,w,c
 14878  0001DC  0D01               	mullw	1
 14879  0001DE  0E08               	movlw	low _data_speed_rx
 14880  0001E0  24F3               	addwf	prodl,w,c
 14881  0001E2  6EE1               	movwf	fsr1l,c
 14882  0001E4  0E01               	movlw	high _data_speed_rx
 14883  0001E6  20F4               	addwfc	prodh,w,c
 14884  0001E8  6EE2               	movwf	fsr1h,c
 14885  0001EA  CFDF FFE7          	movff	indf2,indf1
 14886  0001EE  2A23               	incf	ISR_Bassa@i,f,c
 14887  0001F0  D7E8               	goto	i1l6103
 14888  0001F2                     i1l6113:
 14889                           
 14890                           ;parcheggio.c: 175: }
 14891                           ;parcheggio.c: 176: if (msg.identifier == 0b00000001101) {
 14892  0001F2  0E0D               	movlw	13
 14893  0001F4  0101               	movlb	1	; () banked
 14894  0001F6  194E               	xorwf	_msg& (0+255),w,b
 14895  0001F8  0101               	movlb	1	; () banked
 14896  0001FA  114F               	iorwf	(_msg+1)& (0+255),w,b
 14897  0001FC  0101               	movlb	1	; () banked
 14898  0001FE  1150               	iorwf	(_msg+2)& (0+255),w,b
 14899  000200  0101               	movlb	1	; () banked
 14900  000202  1151               	iorwf	(_msg+3)& (0+255),w,b
 14901  000204  B4D8               	btfsc	status,2,c
 14902                           
 14903                           ; BSR set to: 1
 14904                           ;parcheggio.c: 177: distance_wait = 0;
 14905  000206  9C46               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 14906  000208                     i1l707:
 14907                           
 14908                           ; BSR set to: 1
 14909                           ;parcheggio.c: 178: }
 14910                           ;parcheggio.c: 180: }
 14911                           ;parcheggio.c: 182: PIR3bits.RXB0IF = 0;
 14912  000208  90A4               	bcf	4004,0,c	;volatile
 14913                           
 14914                           ;parcheggio.c: 183: PIR3bits.RXB1IF = 0;
 14915  00020A  92A4               	bcf	4004,1,c	;volatile
 14916  00020C                     i1l711:
 14917  00020C  C021  FFF5         	movff	??_ISR_Bassa+20,tablat
 14918  000210  C020  FFF8         	movff	??_ISR_Bassa+19,tblptru
 14919  000214  C01F  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 14920  000218  C01E  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 14921  00021C  C01D  FFF4         	movff	??_ISR_Bassa+16,prodh
 14922  000220  C01C  FFF3         	movff	??_ISR_Bassa+15,prodl
 14923  000224  C01B  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 14924  000228  C01A  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 14925  00022C  C019  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 14926  000230  C018  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 14927  000234  C017  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 14928  000238  C016  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 14929  00023C  C015  FFFB         	movff	??_ISR_Bassa+8,pclatu
 14930  000240  C014  FFFA         	movff	??_ISR_Bassa+7,pclath
 14931  000244  C013  FFE0         	movff	??_ISR_Bassa+6,bsr
 14932  000248  C012  FFE8         	movff	??_ISR_Bassa+5,wreg
 14933  00024C  C011  FFD8         	movff	??_ISR_Bassa+4,status
 14934  000250  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 14935  000252  0010               	retfie	
 14936  000254                     __end_of_ISR_Bassa:
 14937                           	opt stack 0
 14938                           pclatu	equ	0xFFB
 14939                           pclath	equ	0xFFA
 14940                           tblptru	equ	0xFF8
 14941                           tblptrh	equ	0xFF7
 14942                           tblptrl	equ	0xFF6
 14943                           tablat	equ	0xFF5
 14944                           prodh	equ	0xFF4
 14945                           prodl	equ	0xFF3
 14946                           intcon	equ	0xFF2
 14947                           intcon2	equ	0xFF1
 14948                           postinc0	equ	0xFEE
 14949                           fsr0h	equ	0xFEA
 14950                           fsr0l	equ	0xFE9
 14951                           wreg	equ	0xFE8
 14952                           indf1	equ	0xFE7
 14953                           postdec1	equ	0xFE5
 14954                           fsr1h	equ	0xFE2
 14955                           fsr1l	equ	0xFE1
 14956                           bsr	equ	0xFE0
 14957                           indf2	equ	0xFDF
 14958                           postinc2	equ	0xFDE
 14959                           postdec2	equ	0xFDD
 14960                           fsr2h	equ	0xFDA
 14961                           fsr2l	equ	0xFD9
 14962                           status	equ	0xFD8
 14963                           
 14964 ;; *************** function _CANreceiveMessage *****************
 14965 ;; Defined at:
 14966 ;;		line 529 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 14967 ;; Parameters:    Size  Location     Type
 14968 ;;  msg             2    0[COMRAM] PTR struct .
 14969 ;;		 -> msg(15), 
 14970 ;; Auto vars:     Size  Location     Type
 14971 ;;  tamp            1   11[COMRAM] unsigned char 
 14972 ;;  error           1   10[COMRAM] unsigned char 
 14973 ;; Return value:  Size  Location     Type
 14974 ;;                  1    wreg      unsigned char 
 14975 ;; Registers used:
 14976 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14977 ;; Tracked objects:
 14978 ;;		On entry : 0/0
 14979 ;;		On exit  : 0/0
 14980 ;;		Unchanged: 0/0
 14981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14982 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14983 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14984 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14985 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14986 ;;Total ram usage:       12 bytes
 14987 ;; Hardware stack levels used:    1
 14988 ;; Hardware stack levels required when called:    2
 14989 ;; This function calls:
 14990 ;;		Nothing
 14991 ;; This function is called by:
 14992 ;;		_ISR_Bassa
 14993 ;; This function uses a non-reentrant model
 14994 ;;
 14995                           
 14996                           	psect	text36
 14997  00256E                     __ptext36:
 14998                           	opt stack 0
 14999  00256E                     _CANreceiveMessage:
 15000                           	opt stack 21
 15001                           
 15002                           ;inc\CANlib.h: 531: BYTE tamp;
 15003                           ;inc\CANlib.h: 532: BYTE error = 0;
 15004                           
 15005                           ;incstack = 0
 15006  00256E  0E00               	movlw	0
 15007  002570  6E0B               	movwf	CANreceiveMessage@error,c
 15008                           
 15009                           ;inc\CANlib.h: 534: if (COMSTATbits.RXB0OVFL == 0x01)
 15010  002572  BE74               	btfsc	3956,7,c	;volatile
 15011                           
 15012                           ;inc\CANlib.h: 535: error |= CAN_RX_BUFFER_1_OVFL;
 15013  002574  800B               	bsf	CANreceiveMessage@error,0,c
 15014                           
 15015                           ;inc\CANlib.h: 537: if (COMSTATbits.RXB1OVFL == 0x01)
 15016  002576  BC74               	btfsc	3956,6,c	;volatile
 15017                           
 15018                           ;inc\CANlib.h: 538: error |= CAN_RX_BUFFER_2_OVFL;
 15019  002578  820B               	bsf	CANreceiveMessage@error,1,c
 15020                           
 15021                           ;inc\CANlib.h: 541: if (RXB1CONbits.RXFUL ==0x01)
 15022  00257A  010F               	movlb	15	; () banked
 15023  00257C  AF50               	btfss	80,7,b	;volatile
 15024  00257E  D143               	goto	i1l410
 15025                           
 15026                           ; BSR set to: 15
 15027                           ;inc\CANlib.h: 542: {
 15028                           ;inc\CANlib.h: 543: msg->identifier = 0;
 15029  002580  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15030  002584  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15031  002588  6ADE               	clrf	postinc2,c
 15032  00258A  6ADE               	clrf	postinc2,c
 15033  00258C  6ADE               	clrf	postinc2,c
 15034  00258E  6ADD               	clrf	postdec2,c
 15035                           
 15036                           ; BSR set to: 15
 15037                           ;inc\CANlib.h: 544: msg->data[0] =RXB1D0;
 15038  002590  EE20 F004          	lfsr	2,4
 15039  002594  5001               	movf	CANreceiveMessage@msg,w,c
 15040  002596  26D9               	addwf	fsr2l,f,c
 15041  002598  5002               	movf	CANreceiveMessage@msg+1,w,c
 15042  00259A  22DA               	addwfc	fsr2h,f,c
 15043  00259C  CF56 FFDF          	movff	3926,indf2	;volatile
 15044                           
 15045                           ; BSR set to: 15
 15046                           ;inc\CANlib.h: 545: msg->data[1] =RXB1D1;
 15047  0025A0  EE20 F005          	lfsr	2,5
 15048  0025A4  5001               	movf	CANreceiveMessage@msg,w,c
 15049  0025A6  26D9               	addwf	fsr2l,f,c
 15050  0025A8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15051  0025AA  22DA               	addwfc	fsr2h,f,c
 15052  0025AC  CF57 FFDF          	movff	3927,indf2	;volatile
 15053                           
 15054                           ; BSR set to: 15
 15055                           ;inc\CANlib.h: 546: msg->data[2] =RXB1D2;
 15056  0025B0  EE20 F006          	lfsr	2,6
 15057  0025B4  5001               	movf	CANreceiveMessage@msg,w,c
 15058  0025B6  26D9               	addwf	fsr2l,f,c
 15059  0025B8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15060  0025BA  22DA               	addwfc	fsr2h,f,c
 15061  0025BC  CF58 FFDF          	movff	3928,indf2	;volatile
 15062                           
 15063                           ; BSR set to: 15
 15064                           ;inc\CANlib.h: 547: msg->data[3] =RXB1D3;
 15065  0025C0  EE20 F007          	lfsr	2,7
 15066  0025C4  5001               	movf	CANreceiveMessage@msg,w,c
 15067  0025C6  26D9               	addwf	fsr2l,f,c
 15068  0025C8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15069  0025CA  22DA               	addwfc	fsr2h,f,c
 15070  0025CC  CF59 FFDF          	movff	3929,indf2	;volatile
 15071                           
 15072                           ; BSR set to: 15
 15073                           ;inc\CANlib.h: 548: msg->data[4] =RXB1D4;
 15074  0025D0  EE20 F008          	lfsr	2,8
 15075  0025D4  5001               	movf	CANreceiveMessage@msg,w,c
 15076  0025D6  26D9               	addwf	fsr2l,f,c
 15077  0025D8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15078  0025DA  22DA               	addwfc	fsr2h,f,c
 15079  0025DC  CF5A FFDF          	movff	3930,indf2	;volatile
 15080                           
 15081                           ; BSR set to: 15
 15082                           ;inc\CANlib.h: 549: msg->data[5] =RXB1D5;
 15083  0025E0  EE20 F009          	lfsr	2,9
 15084  0025E4  5001               	movf	CANreceiveMessage@msg,w,c
 15085  0025E6  26D9               	addwf	fsr2l,f,c
 15086  0025E8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15087  0025EA  22DA               	addwfc	fsr2h,f,c
 15088  0025EC  CF5B FFDF          	movff	3931,indf2	;volatile
 15089                           
 15090                           ; BSR set to: 15
 15091                           ;inc\CANlib.h: 550: msg->data[6] =RXB1D6;
 15092  0025F0  EE20 F00A          	lfsr	2,10
 15093  0025F4  5001               	movf	CANreceiveMessage@msg,w,c
 15094  0025F6  26D9               	addwf	fsr2l,f,c
 15095  0025F8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15096  0025FA  22DA               	addwfc	fsr2h,f,c
 15097  0025FC  CF5C FFDF          	movff	3932,indf2	;volatile
 15098                           
 15099                           ; BSR set to: 15
 15100                           ;inc\CANlib.h: 551: msg->data[7] =RXB1D7;
 15101  002600  EE20 F00B          	lfsr	2,11
 15102  002604  5001               	movf	CANreceiveMessage@msg,w,c
 15103  002606  26D9               	addwf	fsr2l,f,c
 15104  002608  5002               	movf	CANreceiveMessage@msg+1,w,c
 15105  00260A  22DA               	addwfc	fsr2h,f,c
 15106  00260C  CF5D FFDF          	movff	3933,indf2	;volatile
 15107                           
 15108                           ; BSR set to: 15
 15109                           ;inc\CANlib.h: 553: msg->RTR = RXB1DLCbits.RXRTR;
 15110  002610  EE20 F00E          	lfsr	2,14
 15111  002614  5001               	movf	CANreceiveMessage@msg,w,c
 15112  002616  26D9               	addwf	fsr2l,f,c
 15113  002618  5002               	movf	CANreceiveMessage@msg+1,w,c
 15114  00261A  22DA               	addwfc	fsr2h,f,c
 15115  00261C  010F               	movlb	15	; () banked
 15116  00261E  AD55               	btfss	85,6,b	;volatile
 15117  002620  D002               	goto	i1u681_20
 15118  002622  0E01               	movlw	1
 15119  002624  D001               	goto	i1u681_26
 15120  002626                     i1u681_20:
 15121  002626  0E00               	movlw	0
 15122  002628                     i1u681_26:
 15123  002628  6EDF               	movwf	indf2,c
 15124                           
 15125                           ; BSR set to: 15
 15126                           ;inc\CANlib.h: 555: msg->length = RXB1DLC & 0x0F;
 15127  00262A  EE20 F00D          	lfsr	2,13
 15128  00262E  5001               	movf	CANreceiveMessage@msg,w,c
 15129  002630  26D9               	addwf	fsr2l,f,c
 15130  002632  5002               	movf	CANreceiveMessage@msg+1,w,c
 15131  002634  22DA               	addwfc	fsr2h,f,c
 15132  002636  010F               	movlb	15	; () banked
 15133  002638  5155               	movf	85,w,b	;volatile
 15134  00263A  0B0F               	andlw	15
 15135  00263C  6EDF               	movwf	indf2,c
 15136                           
 15137                           ; BSR set to: 15
 15138                           ;inc\CANlib.h: 557: msg->type = RXB1SIDLbits.EXID;
 15139  00263E  EE20 F00C          	lfsr	2,12
 15140  002642  5001               	movf	CANreceiveMessage@msg,w,c
 15141  002644  26D9               	addwf	fsr2l,f,c
 15142  002646  5002               	movf	CANreceiveMessage@msg+1,w,c
 15143  002648  22DA               	addwfc	fsr2h,f,c
 15144  00264A  010F               	movlb	15	; () banked
 15145  00264C  A752               	btfss	82,3,b	;volatile
 15146  00264E  D002               	goto	i1u682_20
 15147  002650  0E01               	movlw	1
 15148  002652  D001               	goto	i1u682_26
 15149  002654                     i1u682_20:
 15150  002654  0E00               	movlw	0
 15151  002656                     i1u682_26:
 15152  002656  6EDF               	movwf	indf2,c
 15153                           
 15154                           ; BSR set to: 15
 15155                           ;inc\CANlib.h: 559: if (RXB1SIDLbits.EXID == 0)
 15156  002658  010F               	movlb	15	; () banked
 15157  00265A  B752               	btfsc	82,3,b	;volatile
 15158  00265C  D044               	goto	i1l5625
 15159                           
 15160                           ; BSR set to: 15
 15161                           ;inc\CANlib.h: 560: {
 15162                           ;inc\CANlib.h: 561: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 15163  00265E  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 15164  002662  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15165  002664  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15166  002666  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15167  002668  0E03               	movlw	3
 15168  00266A                     i1u684_25:
 15169  00266A  90D8               	bcf	status,0,c
 15170  00266C  3603               	rlcf	??_CANreceiveMessage,f,c
 15171  00266E  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15172  002670  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15173  002672  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15174  002674  2EE8               	decfsz	wreg,f,c
 15175  002676  D7F9               	goto	i1u684_25
 15176  002678  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15177  00267C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15178  002680  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15179  002684  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15180  002688  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15181  00268C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15182                           
 15183                           ; BSR set to: 15
 15184                           ;inc\CANlib.h: 562: tamp = (RXB1SIDL >> 5 ) & 0x07;
 15185  002690  010F               	movlb	15	; () banked
 15186  002692  3952               	swapf	82,w,b	;volatile
 15187  002694  42E8               	rrncf	wreg,f,c
 15188  002696  0B07               	andlw	7
 15189  002698  0B07               	andlw	7
 15190  00269A  6E0C               	movwf	CANreceiveMessage@tamp,c
 15191                           
 15192                           ; BSR set to: 15
 15193                           ;inc\CANlib.h: 563: msg->identifier = msg->identifier + tamp;
 15194  00269C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15195  0026A0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15196  0026A4  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 15197  0026A8  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 15198  0026AC  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 15199  0026B0  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 15200  0026B4  500C               	movf	CANreceiveMessage@tamp,w,c
 15201  0026B6  2403               	addwf	??_CANreceiveMessage,w,c
 15202  0026B8  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 15203  0026BA  0E00               	movlw	0
 15204  0026BC  2004               	addwfc	??_CANreceiveMessage+1,w,c
 15205  0026BE  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 15206  0026C0  0E00               	movlw	0
 15207  0026C2  2005               	addwfc	??_CANreceiveMessage+2,w,c
 15208  0026C4  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 15209  0026C6  0E00               	movlw	0
 15210  0026C8  2006               	addwfc	??_CANreceiveMessage+3,w,c
 15211  0026CA  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 15212  0026CC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15213  0026D0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15214  0026D4  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 15215  0026D8  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 15216  0026DC  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 15217  0026E0  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 15218                           
 15219                           ;inc\CANlib.h: 564: }
 15220  0026E4  D08D               	goto	i1l5651
 15221  0026E6                     i1l5625:
 15222                           
 15223                           ; BSR set to: 15
 15224                           ;inc\CANlib.h: 565: else
 15225                           ;inc\CANlib.h: 566: {
 15226                           ;inc\CANlib.h: 567: msg->identifier = (unsigned long) RXB1EIDL;
 15227  0026E6  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
 15228  0026EA  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15229  0026EC  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15230  0026EE  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15231  0026F0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15232  0026F4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15233  0026F8  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15234  0026FC  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15235  002700  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15236  002704  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15237                           
 15238                           ; BSR set to: 15
 15239                           ;inc\CANlib.h: 568: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 15240  002708  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
 15241  00270C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15242  00270E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15243  002710  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15244  002712  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 15245  002716  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 15246  00271A  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 15247  00271E  6A03               	clrf	??_CANreceiveMessage,c
 15248  002720  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15249  002724  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15250  002728  5003               	movf	??_CANreceiveMessage,w,c
 15251  00272A  26DE               	addwf	postinc2,f,c
 15252  00272C  5004               	movf	??_CANreceiveMessage+1,w,c
 15253  00272E  22DE               	addwfc	postinc2,f,c
 15254  002730  5005               	movf	??_CANreceiveMessage+2,w,c
 15255  002732  22DE               	addwfc	postinc2,f,c
 15256  002734  5006               	movf	??_CANreceiveMessage+3,w,c
 15257  002736  22DE               	addwfc	postinc2,f,c
 15258                           
 15259                           ; BSR set to: 15
 15260                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID16)
 15261  002738  010F               	movlb	15	; () banked
 15262  00273A  A152               	btfss	82,0,b	;volatile
 15263  00273C  D00C               	goto	i1l5633
 15264                           
 15265                           ; BSR set to: 15
 15266                           ;inc\CANlib.h: 571: msg->identifier |= 0x00010000;
 15267  00273E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15268  002742  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15269  002746  0E00               	movlw	0
 15270  002748  12DE               	iorwf	postinc2,f,c
 15271  00274A  0E00               	movlw	0
 15272  00274C  12DE               	iorwf	postinc2,f,c
 15273  00274E  0E01               	movlw	1
 15274  002750  12DE               	iorwf	postinc2,f,c
 15275  002752  0E00               	movlw	0
 15276  002754  12DE               	iorwf	postinc2,f,c
 15277  002756                     i1l5633:
 15278                           
 15279                           ; BSR set to: 15
 15280                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.EID17)
 15281  002756  010F               	movlb	15	; () banked
 15282  002758  A352               	btfss	82,1,b	;volatile
 15283  00275A  D00C               	goto	i1l5637
 15284                           
 15285                           ; BSR set to: 15
 15286                           ;inc\CANlib.h: 573: msg->identifier |= 0x00020000;
 15287  00275C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15288  002760  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15289  002764  0E00               	movlw	0
 15290  002766  12DE               	iorwf	postinc2,f,c
 15291  002768  0E00               	movlw	0
 15292  00276A  12DE               	iorwf	postinc2,f,c
 15293  00276C  0E02               	movlw	2
 15294  00276E  12DE               	iorwf	postinc2,f,c
 15295  002770  0E00               	movlw	0
 15296  002772  12DE               	iorwf	postinc2,f,c
 15297  002774                     i1l5637:
 15298                           
 15299                           ; BSR set to: 15
 15300                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID0)
 15301  002774  010F               	movlb	15	; () banked
 15302  002776  AB52               	btfss	82,5,b	;volatile
 15303  002778  D00C               	goto	i1l5641
 15304                           
 15305                           ; BSR set to: 15
 15306                           ;inc\CANlib.h: 575: msg->identifier |= 0x00040000;
 15307  00277A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15308  00277E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15309  002782  0E00               	movlw	0
 15310  002784  12DE               	iorwf	postinc2,f,c
 15311  002786  0E00               	movlw	0
 15312  002788  12DE               	iorwf	postinc2,f,c
 15313  00278A  0E04               	movlw	4
 15314  00278C  12DE               	iorwf	postinc2,f,c
 15315  00278E  0E00               	movlw	0
 15316  002790  12DE               	iorwf	postinc2,f,c
 15317  002792                     i1l5641:
 15318                           
 15319                           ; BSR set to: 15
 15320                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID1)
 15321  002792  010F               	movlb	15	; () banked
 15322  002794  AD52               	btfss	82,6,b	;volatile
 15323  002796  D00C               	goto	i1l5645
 15324                           
 15325                           ; BSR set to: 15
 15326                           ;inc\CANlib.h: 577: msg->identifier |= 0x00080000;
 15327  002798  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15328  00279C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15329  0027A0  0E00               	movlw	0
 15330  0027A2  12DE               	iorwf	postinc2,f,c
 15331  0027A4  0E00               	movlw	0
 15332  0027A6  12DE               	iorwf	postinc2,f,c
 15333  0027A8  0E08               	movlw	8
 15334  0027AA  12DE               	iorwf	postinc2,f,c
 15335  0027AC  0E00               	movlw	0
 15336  0027AE  12DE               	iorwf	postinc2,f,c
 15337  0027B0                     i1l5645:
 15338                           
 15339                           ; BSR set to: 15
 15340                           ;inc\CANlib.h: 578: if (RXB1SIDLbits.SID2)
 15341  0027B0  010F               	movlb	15	; () banked
 15342  0027B2  AF52               	btfss	82,7,b	;volatile
 15343  0027B4  D00C               	goto	i1l5649
 15344                           
 15345                           ; BSR set to: 15
 15346                           ;inc\CANlib.h: 579: msg->identifier |= 0x00100000;
 15347  0027B6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15348  0027BA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15349  0027BE  0E00               	movlw	0
 15350  0027C0  12DE               	iorwf	postinc2,f,c
 15351  0027C2  0E00               	movlw	0
 15352  0027C4  12DE               	iorwf	postinc2,f,c
 15353  0027C6  0E10               	movlw	16
 15354  0027C8  12DE               	iorwf	postinc2,f,c
 15355  0027CA  0E00               	movlw	0
 15356  0027CC  12DE               	iorwf	postinc2,f,c
 15357  0027CE                     i1l5649:
 15358                           
 15359                           ; BSR set to: 15
 15360                           ;inc\CANlib.h: 581: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 15361  0027CE  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 15362  0027D2  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15363  0027D4  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15364  0027D6  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15365  0027D8  0E15               	movlw	21
 15366  0027DA                     i1u690_25:
 15367  0027DA  90D8               	bcf	status,0,c
 15368  0027DC  3603               	rlcf	??_CANreceiveMessage,f,c
 15369  0027DE  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15370  0027E0  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15371  0027E2  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15372  0027E4  2EE8               	decfsz	wreg,f,c
 15373  0027E6  D7F9               	goto	i1u690_25
 15374  0027E8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15375  0027EC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15376  0027F0  5003               	movf	??_CANreceiveMessage,w,c
 15377  0027F2  12DE               	iorwf	postinc2,f,c
 15378  0027F4  5004               	movf	??_CANreceiveMessage+1,w,c
 15379  0027F6  12DE               	iorwf	postinc2,f,c
 15380  0027F8  5005               	movf	??_CANreceiveMessage+2,w,c
 15381  0027FA  12DE               	iorwf	postinc2,f,c
 15382  0027FC  5006               	movf	??_CANreceiveMessage+3,w,c
 15383  0027FE  12DE               	iorwf	postinc2,f,c
 15384  002800                     i1l5651:
 15385                           
 15386                           ; BSR set to: 15
 15387                           ;inc\CANlib.h: 582: }
 15388                           ;inc\CANlib.h: 584: RXB1CONbits.RXFUL = 0x00;
 15389  002800  010F               	movlb	15	; () banked
 15390  002802  9F50               	bcf	80,7,b	;volatile
 15391                           
 15392                           ; BSR set to: 15
 15393                           ;inc\CANlib.h: 585: return (error);
 15394                           ;	Return value of _CANreceiveMessage is never used
 15395  002804  0012               	return	
 15396  002806                     i1l410:
 15397                           
 15398                           ; BSR set to: 15
 15399                           ;inc\CANlib.h: 586: }
 15400                           ;inc\CANlib.h: 588: if (RXB0CONbits.RXFUL ==0x01)
 15401  002806  AE60               	btfss	3936,7,c	;volatile
 15402  002808  0012               	return	
 15403                           
 15404                           ; BSR set to: 15
 15405                           ;inc\CANlib.h: 589: {
 15406                           ;inc\CANlib.h: 590: msg->identifier = 0;
 15407  00280A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15408  00280E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15409  002812  6ADE               	clrf	postinc2,c
 15410  002814  6ADE               	clrf	postinc2,c
 15411  002816  6ADE               	clrf	postinc2,c
 15412  002818  6ADD               	clrf	postdec2,c
 15413                           
 15414                           ; BSR set to: 15
 15415                           ;inc\CANlib.h: 591: msg->data[0] =RXB0D0;
 15416  00281A  EE20 F004          	lfsr	2,4
 15417  00281E  5001               	movf	CANreceiveMessage@msg,w,c
 15418  002820  26D9               	addwf	fsr2l,f,c
 15419  002822  5002               	movf	CANreceiveMessage@msg+1,w,c
 15420  002824  22DA               	addwfc	fsr2h,f,c
 15421  002826  CF66 FFDF          	movff	3942,indf2	;volatile
 15422                           
 15423                           ; BSR set to: 15
 15424                           ;inc\CANlib.h: 592: msg->data[1] =RXB0D1;
 15425  00282A  EE20 F005          	lfsr	2,5
 15426  00282E  5001               	movf	CANreceiveMessage@msg,w,c
 15427  002830  26D9               	addwf	fsr2l,f,c
 15428  002832  5002               	movf	CANreceiveMessage@msg+1,w,c
 15429  002834  22DA               	addwfc	fsr2h,f,c
 15430  002836  CF67 FFDF          	movff	3943,indf2	;volatile
 15431                           
 15432                           ; BSR set to: 15
 15433                           ;inc\CANlib.h: 593: msg->data[2] =RXB0D2;
 15434  00283A  EE20 F006          	lfsr	2,6
 15435  00283E  5001               	movf	CANreceiveMessage@msg,w,c
 15436  002840  26D9               	addwf	fsr2l,f,c
 15437  002842  5002               	movf	CANreceiveMessage@msg+1,w,c
 15438  002844  22DA               	addwfc	fsr2h,f,c
 15439  002846  CF68 FFDF          	movff	3944,indf2	;volatile
 15440                           
 15441                           ; BSR set to: 15
 15442                           ;inc\CANlib.h: 594: msg->data[3] =RXB0D3;
 15443  00284A  EE20 F007          	lfsr	2,7
 15444  00284E  5001               	movf	CANreceiveMessage@msg,w,c
 15445  002850  26D9               	addwf	fsr2l,f,c
 15446  002852  5002               	movf	CANreceiveMessage@msg+1,w,c
 15447  002854  22DA               	addwfc	fsr2h,f,c
 15448  002856  CF69 FFDF          	movff	3945,indf2	;volatile
 15449                           
 15450                           ; BSR set to: 15
 15451                           ;inc\CANlib.h: 595: msg->data[4] =RXB0D4;
 15452  00285A  EE20 F008          	lfsr	2,8
 15453  00285E  5001               	movf	CANreceiveMessage@msg,w,c
 15454  002860  26D9               	addwf	fsr2l,f,c
 15455  002862  5002               	movf	CANreceiveMessage@msg+1,w,c
 15456  002864  22DA               	addwfc	fsr2h,f,c
 15457  002866  CF6A FFDF          	movff	3946,indf2	;volatile
 15458                           
 15459                           ; BSR set to: 15
 15460                           ;inc\CANlib.h: 596: msg->data[5] =RXB0D5;
 15461  00286A  EE20 F009          	lfsr	2,9
 15462  00286E  5001               	movf	CANreceiveMessage@msg,w,c
 15463  002870  26D9               	addwf	fsr2l,f,c
 15464  002872  5002               	movf	CANreceiveMessage@msg+1,w,c
 15465  002874  22DA               	addwfc	fsr2h,f,c
 15466  002876  CF6B FFDF          	movff	3947,indf2	;volatile
 15467                           
 15468                           ; BSR set to: 15
 15469                           ;inc\CANlib.h: 597: msg->data[6] =RXB0D6;
 15470  00287A  EE20 F00A          	lfsr	2,10
 15471  00287E  5001               	movf	CANreceiveMessage@msg,w,c
 15472  002880  26D9               	addwf	fsr2l,f,c
 15473  002882  5002               	movf	CANreceiveMessage@msg+1,w,c
 15474  002884  22DA               	addwfc	fsr2h,f,c
 15475  002886  CF6C FFDF          	movff	3948,indf2	;volatile
 15476                           
 15477                           ; BSR set to: 15
 15478                           ;inc\CANlib.h: 598: msg->data[7] =RXB0D7;
 15479  00288A  EE20 F00B          	lfsr	2,11
 15480  00288E  5001               	movf	CANreceiveMessage@msg,w,c
 15481  002890  26D9               	addwf	fsr2l,f,c
 15482  002892  5002               	movf	CANreceiveMessage@msg+1,w,c
 15483  002894  22DA               	addwfc	fsr2h,f,c
 15484  002896  CF6D FFDF          	movff	3949,indf2	;volatile
 15485                           
 15486                           ; BSR set to: 15
 15487                           ;inc\CANlib.h: 600: msg->RTR = RXB0DLCbits.RXRTR;
 15488  00289A  EE20 F00E          	lfsr	2,14
 15489  00289E  5001               	movf	CANreceiveMessage@msg,w,c
 15490  0028A0  26D9               	addwf	fsr2l,f,c
 15491  0028A2  5002               	movf	CANreceiveMessage@msg+1,w,c
 15492  0028A4  22DA               	addwfc	fsr2h,f,c
 15493  0028A6  AC65               	btfss	3941,6,c	;volatile
 15494  0028A8  D002               	goto	i1u692_20
 15495  0028AA  0E01               	movlw	1
 15496  0028AC  D001               	goto	i1u692_26
 15497  0028AE                     i1u692_20:
 15498  0028AE  0E00               	movlw	0
 15499  0028B0                     i1u692_26:
 15500  0028B0  6EDF               	movwf	indf2,c
 15501                           
 15502                           ; BSR set to: 15
 15503                           ;inc\CANlib.h: 602: msg->length = RXB0DLC & 0x0F;
 15504  0028B2  EE20 F00D          	lfsr	2,13
 15505  0028B6  5001               	movf	CANreceiveMessage@msg,w,c
 15506  0028B8  26D9               	addwf	fsr2l,f,c
 15507  0028BA  5002               	movf	CANreceiveMessage@msg+1,w,c
 15508  0028BC  22DA               	addwfc	fsr2h,f,c
 15509  0028BE  5065               	movf	3941,w,c	;volatile
 15510  0028C0  0B0F               	andlw	15
 15511  0028C2  6EDF               	movwf	indf2,c
 15512                           
 15513                           ; BSR set to: 15
 15514                           ;inc\CANlib.h: 604: msg->type = RXB0SIDLbits.EXID;
 15515  0028C4  EE20 F00C          	lfsr	2,12
 15516  0028C8  5001               	movf	CANreceiveMessage@msg,w,c
 15517  0028CA  26D9               	addwf	fsr2l,f,c
 15518  0028CC  5002               	movf	CANreceiveMessage@msg+1,w,c
 15519  0028CE  22DA               	addwfc	fsr2h,f,c
 15520  0028D0  A662               	btfss	3938,3,c	;volatile
 15521  0028D2  D002               	goto	i1u693_20
 15522  0028D4  0E01               	movlw	1
 15523  0028D6  D001               	goto	i1u693_26
 15524  0028D8                     i1u693_20:
 15525  0028D8  0E00               	movlw	0
 15526  0028DA                     i1u693_26:
 15527  0028DA  6EDF               	movwf	indf2,c
 15528                           
 15529                           ; BSR set to: 15
 15530                           ;inc\CANlib.h: 606: if (RXB0SIDLbits.EXID == 0)
 15531  0028DC  B662               	btfsc	3938,3,c	;volatile
 15532  0028DE  D043               	goto	i1l5687
 15533                           
 15534                           ; BSR set to: 15
 15535                           ;inc\CANlib.h: 607: {
 15536                           ;inc\CANlib.h: 608: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 15537  0028E0  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15538  0028E4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15539  0028E6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15540  0028E8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15541  0028EA  0E03               	movlw	3
 15542  0028EC                     i1u695_25:
 15543  0028EC  90D8               	bcf	status,0,c
 15544  0028EE  3603               	rlcf	??_CANreceiveMessage,f,c
 15545  0028F0  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15546  0028F2  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15547  0028F4  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15548  0028F6  2EE8               	decfsz	wreg,f,c
 15549  0028F8  D7F9               	goto	i1u695_25
 15550  0028FA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15551  0028FE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15552  002902  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15553  002906  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15554  00290A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15555  00290E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15556                           
 15557                           ; BSR set to: 15
 15558                           ;inc\CANlib.h: 609: tamp = (RXB0SIDL >> 5 ) & 0x07;
 15559  002912  3862               	swapf	3938,w,c	;volatile
 15560  002914  42E8               	rrncf	wreg,f,c
 15561  002916  0B07               	andlw	7
 15562  002918  0B07               	andlw	7
 15563  00291A  6E0C               	movwf	CANreceiveMessage@tamp,c
 15564                           
 15565                           ; BSR set to: 15
 15566                           ;inc\CANlib.h: 610: msg->identifier = msg->identifier + tamp;
 15567  00291C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15568  002920  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15569  002924  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 15570  002928  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 15571  00292C  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 15572  002930  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 15573  002934  500C               	movf	CANreceiveMessage@tamp,w,c
 15574  002936  2403               	addwf	??_CANreceiveMessage,w,c
 15575  002938  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 15576  00293A  0E00               	movlw	0
 15577  00293C  2004               	addwfc	??_CANreceiveMessage+1,w,c
 15578  00293E  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 15579  002940  0E00               	movlw	0
 15580  002942  2005               	addwfc	??_CANreceiveMessage+2,w,c
 15581  002944  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 15582  002946  0E00               	movlw	0
 15583  002948  2006               	addwfc	??_CANreceiveMessage+3,w,c
 15584  00294A  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 15585  00294C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15586  002950  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15587  002954  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 15588  002958  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 15589  00295C  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 15590  002960  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 15591                           
 15592                           ;inc\CANlib.h: 611: }
 15593  002964  D088               	goto	i1l5713
 15594  002966                     i1l5687:
 15595                           
 15596                           ; BSR set to: 15
 15597                           ;inc\CANlib.h: 612: else
 15598                           ;inc\CANlib.h: 613: {
 15599                           ;inc\CANlib.h: 614: msg->identifier = (unsigned long) RXB0EIDL;
 15600  002966  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
 15601  00296A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15602  00296C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15603  00296E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15604  002970  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15605  002974  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15606  002978  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15607  00297C  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15608  002980  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15609  002984  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15610                           
 15611                           ; BSR set to: 15
 15612                           ;inc\CANlib.h: 615: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 15613  002988  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
 15614  00298C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15615  00298E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15616  002990  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15617  002992  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 15618  002996  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 15619  00299A  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 15620  00299E  6A03               	clrf	??_CANreceiveMessage,c
 15621  0029A0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15622  0029A4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15623  0029A8  5003               	movf	??_CANreceiveMessage,w,c
 15624  0029AA  26DE               	addwf	postinc2,f,c
 15625  0029AC  5004               	movf	??_CANreceiveMessage+1,w,c
 15626  0029AE  22DE               	addwfc	postinc2,f,c
 15627  0029B0  5005               	movf	??_CANreceiveMessage+2,w,c
 15628  0029B2  22DE               	addwfc	postinc2,f,c
 15629  0029B4  5006               	movf	??_CANreceiveMessage+3,w,c
 15630  0029B6  22DE               	addwfc	postinc2,f,c
 15631                           
 15632                           ; BSR set to: 15
 15633                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID16)
 15634  0029B8  A062               	btfss	3938,0,c	;volatile
 15635  0029BA  D00C               	goto	i1l5695
 15636                           
 15637                           ; BSR set to: 15
 15638                           ;inc\CANlib.h: 618: msg->identifier |= 0x00010000;
 15639  0029BC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15640  0029C0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15641  0029C4  0E00               	movlw	0
 15642  0029C6  12DE               	iorwf	postinc2,f,c
 15643  0029C8  0E00               	movlw	0
 15644  0029CA  12DE               	iorwf	postinc2,f,c
 15645  0029CC  0E01               	movlw	1
 15646  0029CE  12DE               	iorwf	postinc2,f,c
 15647  0029D0  0E00               	movlw	0
 15648  0029D2  12DE               	iorwf	postinc2,f,c
 15649  0029D4                     i1l5695:
 15650                           
 15651                           ; BSR set to: 15
 15652                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.EID17)
 15653  0029D4  A262               	btfss	3938,1,c	;volatile
 15654  0029D6  D00C               	goto	i1l5699
 15655                           
 15656                           ; BSR set to: 15
 15657                           ;inc\CANlib.h: 620: msg->identifier |= 0x00020000;
 15658  0029D8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15659  0029DC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15660  0029E0  0E00               	movlw	0
 15661  0029E2  12DE               	iorwf	postinc2,f,c
 15662  0029E4  0E00               	movlw	0
 15663  0029E6  12DE               	iorwf	postinc2,f,c
 15664  0029E8  0E02               	movlw	2
 15665  0029EA  12DE               	iorwf	postinc2,f,c
 15666  0029EC  0E00               	movlw	0
 15667  0029EE  12DE               	iorwf	postinc2,f,c
 15668  0029F0                     i1l5699:
 15669                           
 15670                           ; BSR set to: 15
 15671                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID0)
 15672  0029F0  AA62               	btfss	3938,5,c	;volatile
 15673  0029F2  D00C               	goto	i1l5703
 15674                           
 15675                           ; BSR set to: 15
 15676                           ;inc\CANlib.h: 622: msg->identifier |= 0x00040000;
 15677  0029F4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15678  0029F8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15679  0029FC  0E00               	movlw	0
 15680  0029FE  12DE               	iorwf	postinc2,f,c
 15681  002A00  0E00               	movlw	0
 15682  002A02  12DE               	iorwf	postinc2,f,c
 15683  002A04  0E04               	movlw	4
 15684  002A06  12DE               	iorwf	postinc2,f,c
 15685  002A08  0E00               	movlw	0
 15686  002A0A  12DE               	iorwf	postinc2,f,c
 15687  002A0C                     i1l5703:
 15688                           
 15689                           ; BSR set to: 15
 15690                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID1)
 15691  002A0C  AC62               	btfss	3938,6,c	;volatile
 15692  002A0E  D00C               	goto	i1l5707
 15693                           
 15694                           ; BSR set to: 15
 15695                           ;inc\CANlib.h: 624: msg->identifier |= 0x00080000;
 15696  002A10  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15697  002A14  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15698  002A18  0E00               	movlw	0
 15699  002A1A  12DE               	iorwf	postinc2,f,c
 15700  002A1C  0E00               	movlw	0
 15701  002A1E  12DE               	iorwf	postinc2,f,c
 15702  002A20  0E08               	movlw	8
 15703  002A22  12DE               	iorwf	postinc2,f,c
 15704  002A24  0E00               	movlw	0
 15705  002A26  12DE               	iorwf	postinc2,f,c
 15706  002A28                     i1l5707:
 15707                           
 15708                           ; BSR set to: 15
 15709                           ;inc\CANlib.h: 625: if (RXB0SIDLbits.SID2)
 15710  002A28  AE62               	btfss	3938,7,c	;volatile
 15711  002A2A  D00C               	goto	i1l5711
 15712                           
 15713                           ; BSR set to: 15
 15714                           ;inc\CANlib.h: 626: msg->identifier |= 0x00100000;
 15715  002A2C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15716  002A30  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15717  002A34  0E00               	movlw	0
 15718  002A36  12DE               	iorwf	postinc2,f,c
 15719  002A38  0E00               	movlw	0
 15720  002A3A  12DE               	iorwf	postinc2,f,c
 15721  002A3C  0E10               	movlw	16
 15722  002A3E  12DE               	iorwf	postinc2,f,c
 15723  002A40  0E00               	movlw	0
 15724  002A42  12DE               	iorwf	postinc2,f,c
 15725  002A44                     i1l5711:
 15726                           
 15727                           ; BSR set to: 15
 15728                           ;inc\CANlib.h: 628: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 15729  002A44  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15730  002A48  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15731  002A4A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15732  002A4C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15733  002A4E  0E15               	movlw	21
 15734  002A50                     i1u701_25:
 15735  002A50  90D8               	bcf	status,0,c
 15736  002A52  3603               	rlcf	??_CANreceiveMessage,f,c
 15737  002A54  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15738  002A56  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15739  002A58  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15740  002A5A  2EE8               	decfsz	wreg,f,c
 15741  002A5C  D7F9               	goto	i1u701_25
 15742  002A5E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15743  002A62  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15744  002A66  5003               	movf	??_CANreceiveMessage,w,c
 15745  002A68  12DE               	iorwf	postinc2,f,c
 15746  002A6A  5004               	movf	??_CANreceiveMessage+1,w,c
 15747  002A6C  12DE               	iorwf	postinc2,f,c
 15748  002A6E  5005               	movf	??_CANreceiveMessage+2,w,c
 15749  002A70  12DE               	iorwf	postinc2,f,c
 15750  002A72  5006               	movf	??_CANreceiveMessage+3,w,c
 15751  002A74  12DE               	iorwf	postinc2,f,c
 15752  002A76                     i1l5713:
 15753                           
 15754                           ; BSR set to: 15
 15755                           ;inc\CANlib.h: 630: }
 15756                           ;inc\CANlib.h: 631: RXB0CONbits.RXFUL = 0x00;
 15757  002A76  9E60               	bcf	3936,7,c	;volatile
 15758                           
 15759                           ; BSR set to: 15
 15760                           ;inc\CANlib.h: 633: return (error);
 15761                           ;	Return value of _CANreceiveMessage is never used
 15762  002A78  0012               	return	
 15763  002A7A                     __end_of_CANreceiveMessage:
 15764                           	opt stack 0
 15765                           pclatu	equ	0xFFB
 15766                           pclath	equ	0xFFA
 15767                           tblptru	equ	0xFF8
 15768                           tblptrh	equ	0xFF7
 15769                           tblptrl	equ	0xFF6
 15770                           tablat	equ	0xFF5
 15771                           prodh	equ	0xFF4
 15772                           prodl	equ	0xFF3
 15773                           intcon	equ	0xFF2
 15774                           intcon2	equ	0xFF1
 15775                           postinc0	equ	0xFEE
 15776                           fsr0h	equ	0xFEA
 15777                           fsr0l	equ	0xFE9
 15778                           wreg	equ	0xFE8
 15779                           indf1	equ	0xFE7
 15780                           postdec1	equ	0xFE5
 15781                           fsr1h	equ	0xFE2
 15782                           fsr1l	equ	0xFE1
 15783                           bsr	equ	0xFE0
 15784                           indf2	equ	0xFDF
 15785                           postinc2	equ	0xFDE
 15786                           postdec2	equ	0xFDD
 15787                           fsr2h	equ	0xFDA
 15788                           fsr2l	equ	0xFD9
 15789                           status	equ	0xFD8
 15790                           
 15791 ;; *************** function _ISR_Alta *****************
 15792 ;; Defined at:
 15793 ;;		line 93 in file "parcheggio.c"
 15794 ;; Parameters:    Size  Location     Type
 15795 ;;		None
 15796 ;; Auto vars:     Size  Location     Type
 15797 ;;		None
 15798 ;; Return value:  Size  Location     Type
 15799 ;;		None               void
 15800 ;; Registers used:
 15801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15802 ;; Tracked objects:
 15803 ;;		On entry : 0/0
 15804 ;;		On exit  : 0/0
 15805 ;;		Unchanged: 0/0
 15806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15809 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15810 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15811 ;;Total ram usage:       16 bytes
 15812 ;; Hardware stack levels used:    1
 15813 ;; Hardware stack levels required when called:    1
 15814 ;; This function calls:
 15815 ;;		___lwdiv
 15816 ;; This function is called by:
 15817 ;;		Interrupt level 2
 15818 ;; This function uses a non-reentrant model
 15819 ;;
 15820                           
 15821                           	psect	intcode
 15822  000008                     __pintcode:
 15823                           	opt stack 0
 15824  000008                     _ISR_Alta:
 15825                           	opt stack 21
 15826                           
 15827                           ; BSR set to: 15
 15828                           ;incstack = 0
 15829  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15830  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 15831  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 15832  000012  EF5A  F02D         	goto	int_func
 15833                           pclatu	equ	0xFFB
 15834                           pclath	equ	0xFFA
 15835                           tblptru	equ	0xFF8
 15836                           tblptrh	equ	0xFF7
 15837                           tblptrl	equ	0xFF6
 15838                           tablat	equ	0xFF5
 15839                           prodh	equ	0xFF4
 15840                           prodl	equ	0xFF3
 15841                           intcon	equ	0xFF2
 15842                           intcon2	equ	0xFF1
 15843                           postinc0	equ	0xFEE
 15844                           fsr0h	equ	0xFEA
 15845                           fsr0l	equ	0xFE9
 15846                           wreg	equ	0xFE8
 15847                           indf1	equ	0xFE7
 15848                           postdec1	equ	0xFE5
 15849                           fsr1h	equ	0xFE2
 15850                           fsr1l	equ	0xFE1
 15851                           bsr	equ	0xFE0
 15852                           indf2	equ	0xFDF
 15853                           postinc2	equ	0xFDE
 15854                           postdec2	equ	0xFDD
 15855                           fsr2h	equ	0xFDA
 15856                           fsr2l	equ	0xFD9
 15857                           status	equ	0xFD8
 15858                           
 15859                           	psect	intcode_body
 15860  005AB4                     __pintcode_body:
 15861                           	opt stack 21
 15862  005AB4                     int_func:
 15863                           	opt stack 21
 15864  005AB4  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 15865  005AB8  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 15866  005ABC  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 15867  005AC0  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 15868  005AC4  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 15869  005AC8  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 15870  005ACC  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 15871  005AD0  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 15872  005AD4  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 15873  005AD8  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 15874  005ADC  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 15875  005AE0  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 15876                           
 15877                           ;parcheggio.c: 94: if (INTCON2bits.INTEDG0 == 1) {
 15878  005AE4  ACF1               	btfss	intcon2,6,c	;volatile
 15879  005AE6  D007               	goto	i2l690
 15880                           
 15881                           ;parcheggio.c: 95: INTCON2bits.INTEDG0 = 0;
 15882  005AE8  9CF1               	bcf	intcon2,6,c	;volatile
 15883                           
 15884                           ;parcheggio.c: 96: TMR3H = 0;
 15885  005AEA  0E00               	movlw	0
 15886  005AEC  6EB3               	movwf	4019,c	;volatile
 15887                           
 15888                           ;parcheggio.c: 97: TMR3L = 0;
 15889  005AEE  0E00               	movlw	0
 15890  005AF0  6EB2               	movwf	4018,c	;volatile
 15891                           
 15892                           ;parcheggio.c: 98: distance_error = 0;
 15893  005AF2  9646               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 15894                           
 15895                           ;parcheggio.c: 99: } else {
 15896  005AF4  D031               	goto	i2l7645
 15897  005AF6                     i2l690:
 15898                           
 15899                           ;parcheggio.c: 100: gianni = TMR3H;
 15900  005AF6  CFB3 F044          	movff	4019,_gianni	;volatile
 15901                           
 15902                           ;parcheggio.c: 101: asus = TMR3L;
 15903  005AFA  CFB2 F043          	movff	4018,_asus	;volatile
 15904                           
 15905                           ;parcheggio.c: 102: timerValue2 = gianni;
 15906  005AFE  C044  F040         	movff	_gianni,_timerValue2	;volatile
 15907  005B02  6A41               	clrf	_timerValue2+1,c	;volatile
 15908                           
 15909                           ;parcheggio.c: 103: timerValue2 = ((timerValue2 << 8) | (asus));
 15910  005B04  5040               	movf	_timerValue2,w,c	;volatile
 15911  005B06  0100               	movlb	0	; () banked
 15912  005B08  6F67               	movwf	??_ISR_Alta& (0+255),b
 15913  005B0A  5043               	movf	_asus,w,c	;volatile
 15914  005B0C  6E40               	movwf	_timerValue2,c	;volatile
 15915  005B0E  C067  F041         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 15916                           
 15917                           ; BSR set to: 0
 15918                           ;parcheggio.c: 104: pulse_time = timerValue2 / 2;
 15919  005B12  90D8               	bcf	status,0,c
 15920  005B14  3041               	rrcf	_timerValue2+1,w,c	;volatile
 15921  005B16  0100               	movlb	0	; () banked
 15922  005B18  6F67               	movwf	??_ISR_Alta& (0+255),b
 15923  005B1A  3040               	rrcf	_timerValue2,w,c	;volatile
 15924  005B1C  0101               	movlb	1	; () banked
 15925  005B1E  6F4A               	movwf	_pulse_time& (0+255),b	;volatile
 15926  005B20  C067  F14B         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 15927                           
 15928                           ; BSR set to: 1
 15929                           ;parcheggio.c: 105: sensor_distance[MUX_index] = pulse_time / 58;
 15930  005B24  C14A  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 15931  005B28  C14B  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 15932  005B2C  0E00               	movlw	0
 15933  005B2E  0100               	movlb	0	; () banked
 15934  005B30  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 15935  005B32  0E3A               	movlw	58
 15936  005B34  6F62               	movwf	___lwdiv@divisor& (0+255),b
 15937  005B36  EC15  F02E         	call	___lwdiv	;wreg free
 15938  005B3A  5042               	movf	_MUX_index,w,c	;volatile
 15939  005B3C  0D02               	mullw	2
 15940  005B3E  0E24               	movlw	low _sensor_distance
 15941  005B40  24F3               	addwf	prodl,w,c
 15942  005B42  6ED9               	movwf	fsr2l,c
 15943  005B44  0E00               	movlw	high _sensor_distance
 15944  005B46  20F4               	addwfc	prodh,w,c
 15945  005B48  6EDA               	movwf	fsr2h,c
 15946  005B4A  0100               	movlb	0	; () banked
 15947  005B4C  C060  FFDE         	movff	?___lwdiv,postinc2
 15948  005B50  0100               	movlb	0	; () banked
 15949  005B52  C061  FFDD         	movff	?___lwdiv+1,postdec2
 15950                           
 15951                           ; BSR set to: 0
 15952                           ;parcheggio.c: 106: INTCON2bits.INTEDG0 = 1;
 15953  005B56  8CF1               	bsf	intcon2,6,c	;volatile
 15954  005B58                     i2l7645:
 15955                           
 15956                           ;parcheggio.c: 107: }
 15957                           ;parcheggio.c: 108: INTCONbits.INT0IF = 0;
 15958  005B58  92F2               	bcf	intcon,1,c	;volatile
 15959  005B5A  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 15960  005B5E  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 15961  005B62  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 15962  005B66  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 15963  005B6A  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 15964  005B6E  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 15965  005B72  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 15966  005B76  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 15967  005B7A  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 15968  005B7E  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 15969  005B82  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 15970  005B86  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 15971  005B8A  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 15972  005B8E  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 15973  005B92  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 15974  005B94  0011               	retfie		f
 15975  005B96                     __end_of_ISR_Alta:
 15976                           	opt stack 0
 15977                           pclatu	equ	0xFFB
 15978                           pclath	equ	0xFFA
 15979                           tblptru	equ	0xFF8
 15980                           tblptrh	equ	0xFF7
 15981                           tblptrl	equ	0xFF6
 15982                           tablat	equ	0xFF5
 15983                           prodh	equ	0xFF4
 15984                           prodl	equ	0xFF3
 15985                           intcon	equ	0xFF2
 15986                           intcon2	equ	0xFF1
 15987                           postinc0	equ	0xFEE
 15988                           fsr0h	equ	0xFEA
 15989                           fsr0l	equ	0xFE9
 15990                           wreg	equ	0xFE8
 15991                           indf1	equ	0xFE7
 15992                           postdec1	equ	0xFE5
 15993                           fsr1h	equ	0xFE2
 15994                           fsr1l	equ	0xFE1
 15995                           bsr	equ	0xFE0
 15996                           indf2	equ	0xFDF
 15997                           postinc2	equ	0xFDE
 15998                           postdec2	equ	0xFDD
 15999                           fsr2h	equ	0xFDA
 16000                           fsr2l	equ	0xFD9
 16001                           status	equ	0xFD8
 16002                           
 16003 ;; *************** function ___lwdiv *****************
 16004 ;; Defined at:
 16005 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 16006 ;; Parameters:    Size  Location     Type
 16007 ;;  dividend        2    0[BANK0 ] unsigned int 
 16008 ;;  divisor         2    2[BANK0 ] unsigned int 
 16009 ;; Auto vars:     Size  Location     Type
 16010 ;;  quotient        2    5[BANK0 ] unsigned int 
 16011 ;;  counter         1    4[BANK0 ] unsigned char 
 16012 ;; Return value:  Size  Location     Type
 16013 ;;                  2    0[BANK0 ] unsigned int 
 16014 ;; Registers used:
 16015 ;;		wreg, status,2, status,0
 16016 ;; Tracked objects:
 16017 ;;		On entry : 0/0
 16018 ;;		On exit  : 0/0
 16019 ;;		Unchanged: 0/0
 16020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16021 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16022 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16024 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16025 ;;Total ram usage:        7 bytes
 16026 ;; Hardware stack levels used:    1
 16027 ;; This function calls:
 16028 ;;		Nothing
 16029 ;; This function is called by:
 16030 ;;		_ISR_Alta
 16031 ;; This function uses a non-reentrant model
 16032 ;;
 16033                           
 16034                           	psect	text38
 16035  005C2A                     __ptext38:
 16036                           	opt stack 0
 16037  005C2A                     ___lwdiv:
 16038                           	opt stack 21
 16039                           
 16040                           ;incstack = 0
 16041  005C2A  0E00               	movlw	0
 16042  005C2C  0100               	movlb	0	; () banked
 16043  005C2E  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 16044  005C30  0E00               	movlw	0
 16045  005C32  6F65               	movwf	___lwdiv@quotient& (0+255),b
 16046                           
 16047                           ; BSR set to: 0
 16048  005C34  0100               	movlb	0	; () banked
 16049  005C36  5162               	movf	___lwdiv@divisor& (0+255),w,b
 16050  005C38  0100               	movlb	0	; () banked
 16051  005C3A  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 16052  005C3C  B4D8               	btfsc	status,2,c
 16053  005C3E  D02C               	goto	i2l1278
 16054                           
 16055                           ; BSR set to: 0
 16056  005C40  0E01               	movlw	1
 16057  005C42  0100               	movlb	0	; () banked
 16058  005C44  6F64               	movwf	___lwdiv@counter& (0+255),b
 16059  005C46  D006               	goto	i2l7615
 16060  005C48                     i2l7613:
 16061                           
 16062                           ; BSR set to: 0
 16063  005C48  0100               	movlb	0	; () banked
 16064  005C4A  90D8               	bcf	status,0,c
 16065  005C4C  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 16066  005C4E  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 16067  005C50  0100               	movlb	0	; () banked
 16068  005C52  2B64               	incf	___lwdiv@counter& (0+255),f,b
 16069  005C54                     i2l7615:
 16070                           
 16071                           ; BSR set to: 0
 16072  005C54  0100               	movlb	0	; () banked
 16073  005C56  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 16074  005C58  D7F7               	goto	i2l7613
 16075  005C5A                     i2l7617:
 16076                           
 16077                           ; BSR set to: 0
 16078  005C5A  0100               	movlb	0	; () banked
 16079  005C5C  90D8               	bcf	status,0,c
 16080  005C5E  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 16081  005C60  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 16082                           
 16083                           ; BSR set to: 0
 16084  005C62  0100               	movlb	0	; () banked
 16085  005C64  5162               	movf	___lwdiv@divisor& (0+255),w,b
 16086  005C66  0100               	movlb	0	; () banked
 16087  005C68  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 16088  005C6A  0100               	movlb	0	; () banked
 16089  005C6C  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16090  005C6E  0100               	movlb	0	; () banked
 16091  005C70  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 16092  005C72  A0D8               	btfss	status,0,c
 16093  005C74  D00A               	goto	i2l7625
 16094                           
 16095                           ; BSR set to: 0
 16096  005C76  0100               	movlb	0	; () banked
 16097  005C78  5162               	movf	___lwdiv@divisor& (0+255),w,b
 16098  005C7A  0100               	movlb	0	; () banked
 16099  005C7C  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 16100  005C7E  0100               	movlb	0	; () banked
 16101  005C80  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16102  005C82  0100               	movlb	0	; () banked
 16103  005C84  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 16104                           
 16105                           ; BSR set to: 0
 16106  005C86  0100               	movlb	0	; () banked
 16107  005C88  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 16108  005C8A                     i2l7625:
 16109                           
 16110                           ; BSR set to: 0
 16111  005C8A  0100               	movlb	0	; () banked
 16112  005C8C  90D8               	bcf	status,0,c
 16113  005C8E  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 16114  005C90  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 16115                           
 16116                           ; BSR set to: 0
 16117  005C92  0100               	movlb	0	; () banked
 16118  005C94  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 16119  005C96  D7E1               	goto	i2l7617
 16120  005C98                     i2l1278:
 16121                           
 16122                           ; BSR set to: 0
 16123  005C98  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 16124  005C9C  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 16125                           
 16126                           ; BSR set to: 0
 16127  005CA0  0012               	return		;funcret
 16128  005CA2                     __end_of___lwdiv:
 16129                           	opt stack 0
 16130                           pclatu	equ	0xFFB
 16131                           pclath	equ	0xFFA
 16132                           tblptru	equ	0xFF8
 16133                           tblptrh	equ	0xFF7
 16134                           tblptrl	equ	0xFF6
 16135                           tablat	equ	0xFF5
 16136                           prodh	equ	0xFF4
 16137                           prodl	equ	0xFF3
 16138                           intcon	equ	0xFF2
 16139                           intcon2	equ	0xFF1
 16140                           postinc0	equ	0xFEE
 16141                           fsr0h	equ	0xFEA
 16142                           fsr0l	equ	0xFE9
 16143                           wreg	equ	0xFE8
 16144                           indf1	equ	0xFE7
 16145                           postdec1	equ	0xFE5
 16146                           fsr1h	equ	0xFE2
 16147                           fsr1l	equ	0xFE1
 16148                           bsr	equ	0xFE0
 16149                           indf2	equ	0xFDF
 16150                           postinc2	equ	0xFDE
 16151                           postdec2	equ	0xFDD
 16152                           fsr2h	equ	0xFDA
 16153                           fsr2l	equ	0xFD9
 16154                           status	equ	0xFD8
 16155                           pclatu	equ	0xFFB
 16156                           pclath	equ	0xFFA
 16157                           tblptru	equ	0xFF8
 16158                           tblptrh	equ	0xFF7
 16159                           tblptrl	equ	0xFF6
 16160                           tablat	equ	0xFF5
 16161                           prodh	equ	0xFF4
 16162                           prodl	equ	0xFF3
 16163                           intcon	equ	0xFF2
 16164                           intcon2	equ	0xFF1
 16165                           postinc0	equ	0xFEE
 16166                           fsr0h	equ	0xFEA
 16167                           fsr0l	equ	0xFE9
 16168                           wreg	equ	0xFE8
 16169                           indf1	equ	0xFE7
 16170                           postdec1	equ	0xFE5
 16171                           fsr1h	equ	0xFE2
 16172                           fsr1l	equ	0xFE1
 16173                           bsr	equ	0xFE0
 16174                           indf2	equ	0xFDF
 16175                           postinc2	equ	0xFDE
 16176                           postdec2	equ	0xFDD
 16177                           fsr2h	equ	0xFDA
 16178                           fsr2l	equ	0xFD9
 16179                           status	equ	0xFD8
 16180                           
 16181                           	psect	param0
 16182  0000                     pclatu	equ	0xFFB
 16183                           pclath	equ	0xFFA
 16184                           tblptru	equ	0xFF8
 16185                           tblptrh	equ	0xFF7
 16186                           tblptrl	equ	0xFF6
 16187                           tablat	equ	0xFF5
 16188                           prodh	equ	0xFF4
 16189                           prodl	equ	0xFF3
 16190                           intcon	equ	0xFF2
 16191                           intcon2	equ	0xFF1
 16192                           postinc0	equ	0xFEE
 16193                           fsr0h	equ	0xFEA
 16194                           fsr0l	equ	0xFE9
 16195                           wreg	equ	0xFE8
 16196                           indf1	equ	0xFE7
 16197                           postdec1	equ	0xFE5
 16198                           fsr1h	equ	0xFE2
 16199                           fsr1l	equ	0xFE1
 16200                           bsr	equ	0xFE0
 16201                           indf2	equ	0xFDF
 16202                           postinc2	equ	0xFDE
 16203                           postdec2	equ	0xFDD
 16204                           fsr2h	equ	0xFDA
 16205                           fsr2l	equ	0xFD9
 16206                           status	equ	0xFD8
 16207                           
 16208                           	psect	temp
 16209  000048                     btemp:
 16210                           	opt stack 0
 16211  000048                     	ds	1
 16212  0000                     int$flags	set	btemp
 16213                           pclatu	equ	0xFFB
 16214                           pclath	equ	0xFFA
 16215                           tblptru	equ	0xFF8
 16216                           tblptrh	equ	0xFF7
 16217                           tblptrl	equ	0xFF6
 16218                           tablat	equ	0xFF5
 16219                           prodh	equ	0xFF4
 16220                           prodl	equ	0xFF3
 16221                           intcon	equ	0xFF2
 16222                           intcon2	equ	0xFF1
 16223                           postinc0	equ	0xFEE
 16224                           fsr0h	equ	0xFEA
 16225                           fsr0l	equ	0xFE9
 16226                           wreg	equ	0xFE8
 16227                           indf1	equ	0xFE7
 16228                           postdec1	equ	0xFE5
 16229                           fsr1h	equ	0xFE2
 16230                           fsr1l	equ	0xFE1
 16231                           bsr	equ	0xFE0
 16232                           indf2	equ	0xFDF
 16233                           postinc2	equ	0xFDE
 16234                           postdec2	equ	0xFDD
 16235                           fsr2h	equ	0xFDA
 16236                           fsr2l	equ	0xFD9
 16237                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        11
    BSS         179
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      71
    BANK0           160    132     137
    BANK1           256     85     236
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> can_send@data_correction1(BANK0[0]), data_speed(BANK1[8]), data_brake(BANK1[8]), data_steering(BANK1[8]), 
		 -> data_correction(BANK1[8]), data_test(BANK1[8]), data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _park_search->_parallelo
    _park_routine->_parallelo
    _parallelo->_asin
    _can_send->_CANsendMessage
    _sin->_floor
    _floor->___xxtofl
    ___xxtofl->___fltol
    ___fltol->___flneg
    ___flsub->_floor
    _asin->_sqrt
    _sqrt->___flneg
    _atan->___flge
    _fabs->___flneg
    ___flneg->___fladd
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul
    ___flge->_fabs
    _delay_s->_delay_ms
    _delay_ms->___wmul
    _configurazione->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_park_routine
    _park_routine->_matematica
    _parallelo->_asin
    _matematica->_cos
    _cos->_asin
    _sin->___flsub
    _asin->_atan

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  346375
                    _can_interpreter
                     _configurazione
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   94936
                                             37 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (1) _park_routine                                        12    12      0  245505
                                             73 BANK1     12    12      0
                       _CANisTxReady
                     _CANsendMessage
                            ___fladd
                            ___flneg
                            ___fltol
                           ___xxtofl
                           _can_send
                           _delay_ms
                            _delay_s
                         _matematica
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   86191
                                            130 BANK0      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    7857
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    7677
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      37
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     247
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _matematica                                          32    32      0  133218
                                             45 BANK1     28    28      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                               _asin
                                _cos
 ---------------------------------------------------------------------------------
 (3) _cos                                                 12     8      4   57965
                                             37 BANK1      8     4      4
                            ___fladd
                             ___flge
                               _asin (ARG)
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 17    13      4   49794
                                              8 BANK1     17    13      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4   10191
                                            121 BANK0     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                8     2      6     452
                                             23 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     784
                                            107 BANK0     14    10      4
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     722
                                             97 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6777
                                              0 BANK1      8     0      8
                            ___fladd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   57438
                                            126 BANK0      4     0      4
                                             17 BANK1     20    20      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0     29    25      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   34323
                                            113 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1621
                                             97 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1297
                                             93 BANK0      4     0      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   13009
                                             93 BANK0     16     8      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5541
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    6290
                                             73 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1498
                                            101 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4347
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0     716
                                             31 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     648
                                             29 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    5934
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    1251
                                             12 COMRAM    23    23      0
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_interpreter
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _park_routine
     _CANisTxReady
     _CANsendMessage
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___flneg
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___flneg (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _can_send
       _CANisTxReady
       _CANsendMessage
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
     _matematica
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _cos
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _asin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _atan
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _fabs
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           _sqrt
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _sin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _floor (ARG)
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flge
                 _fabs (ARG)
                   ___flneg
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___xxtofl
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___flneg (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                 _abs (ARG)
               _frexp
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _floor
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___xxtofl
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               _abs (ARG)
             _frexp
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _abs
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     55      EC       7       92.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     84      89       5       85.6%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     23      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BC      20        0.0%
DATA                 0      0     1BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat May 14 18:33:25 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _n 0130  
                           _x 013C                             _z 0140          __end_of_CANSetFilter 1858  
                ___fldiv@sign 0083            delay_s@repeat_loop 0080                            bsr 000FE0  
         ___wmul@multiplicand 0079                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                    _MUX_select 0100                           l402 1F30  
                         l403 1F34                           l500 15B4                           l404 1F40  
                         l501 15B8                           l510 16C4                           l502 15C4  
                         l511 16D0                           l503 15C8                           l520 17DC  
                         l512 16D4                           l504 15D4                           l440 4200  
                         l432 41C0                           l521 17E0                           l513 16E0  
                         l433 41C4                           l522 17EC                           l514 16E4  
                         l450 430C                           l434 41D0                           l370 1918  
                         l523 17F0                           l515 16F0                           l507 16B0  
                         l451 4318                           l443 42D8                           l435 41D4  
                         l363 1ADC                           l524 17FC                           l508 16B4  
                         l444 42DC                           l436 41E0                           l380 1AF6  
                         l364 186E                           l525 1800                           l509 16C0  
                         l445 42E8                           l437 41E4                           l381 1BEE  
                         l373 1A28                           l365 1872                           l526 180C  
                         l518 17CC                           l470 1276                           l446 42EC  
                         l438 41F0                           l358 50F6                           l390 1CBC  
                         l382 1B7E                           l374 1A2C                           l366 196A  
                         l519 17D0                           l471 1282                           l463 1242  
                         l447 42F8                           l439 41F4                           l359 5100  
                         l383 1B88                           l375 1A38                           l367 18FA  
                         l480 138C                           l464 1246                           l448 42FC  
                         l384 1B92                           l368 1904                           l481 1390  
                         l465 1252                           l449 4308                           l393 1D76  
                         l385 1B9C                           l369 190E                           l801 4C08  
                         l490 149C                           l482 139C                           l474 135C  
                         l466 1256                           l394 1D7A                           l378 1D60  
                         l491 14A8                           l475 1360                           l467 1262  
                         l395 1E72                           l379 1AF2                           l723 53B8  
                         l715 5E02                           l492 14AC                           l476 136C  
                         l468 1266                           l556 5FB2                           l396 1E02  
                         l388 1CAC                           l493 14B8                           l485 1478  
                         l477 1370                           l469 1272                           l397 1E0C  
                         l389 1CB0                           l725 5266                           l486 147C  
                         l478 137C                           l398 1E16                           l487 1488  
                         l479 1380                           l399 1E20                           l807 4BCA  
                         l496 1594                           l488 148C                           l736 53B4  
                         l497 1598                           l489 1498                           l569 5F32  
                         l498 15A4                           l499 15A8                           l771 3754  
                         l755 3442                           l764 34AE                           l765 3632  
                         l758 3480                           l871 5F5E                           l768 36CA  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           _abs 5F3C  
                         _asd 0231                           _dir 0232                           _cos 59D0  
                         _jjj 0128                           _kkk 012C                           _msg 014E  
                         _sin 4364                           prod 000FF3                           wreg 000FE8  
                ___flmul@aexp 009D                  ___flmul@bexp 00A2               ?_configurazione 0001  
                ___flmul@sign 009C                  ___flmul@temp 00A7                  ___flmul@prod 00A3  
                __CFG_LVP$OFF 000000                  ___fltol@exp1 00CA                  __CFG_WDT$OFF 000000  
                        ?_abs 0077                          l1071 5E88                          l1330 2C5A  
                        l1314 466A                          l1331 2C4E                          l1332 2C1A  
                        l1078 5502                          l1423 3272                          l1416 2FD6  
                        l1433 3384                          l1425 32E0                          l1347 2DCE  
                        l1356 2E62                          l1472 4FBE                          l1473 4FD6  
                        l1465 4F62                          l1386 3E34                          l1458 4EB6  
                        l5003 424A                          l1395 3E6C                          l1483 579A  
                        l1397 3EDA                          l1389 3DDC                          l5211 13E6  
                        l5107 103C                          l5205 13A0                          l5125 10F6  
                        l5053 0E10                          l5029 431C                          ?_cos 01B2  
                        l5143 11B0                          l5071 0EC8                          l5313 173A  
                        l6201 2B34                          l5307 16F4                          l5171 1286  
                        l5341 1810                          l5245 1502                          l7101 39CC  
                        l7013 1F44                          l5239 14BC                          l6303 2E00  
                        l7103 39D4                          l7007 1F24                          l5273 15D8  
                        l5177 12CC                          l5089 0F82                          l6313 2E22  
                        l6321 2E3C                          l6209 2B5E                          l6251 2C2E  
                        l6403 2FFE                          l7107 3A5A                          l7115 3AD0  
                        l7051 385A                          l7203 453A                          l6501 545E  
                        l6309 2E16                          l6253 2C34                          l6173 2ABC  
                        l7109 3A94                          l5279 161E                          l6511 554E  
                        l6351 2EF8                          l6343 2ECA                          l6319 2E36  
                        l6239 2B9A                          l6191 2B06                          l6167 2A98  
                        l7135 3BE6                          l7127 3BB0                          l7071 38D8  
                        l7063 38A6                          l7231 5556                          l5481 5104  
                        l7313 5F74                          l6505 54B0                          l6353 2EFC  
                        l6329 2E5C                          l6281 2CCC                          l6257 2C3E  
                        l6185 2AF2                          l6177 2AC6                          l7065 38B8  
                        l7305 5A58                          l7241 55A4                          l7401 5202  
                        l7219 5F26                          l6347 2EEC                          l6339 2EB8  
                        l6275 2CBC                          l6267 2C7E                          l6451 3286  
                        l7171 4E2E                          l7155 4C66                          l7091 394A  
                        l7083 391A                          l7251 561C                          l5485 510C  
                        l7317 5F86                          l6277 2CC2                          l6285 2CDE  
                        l6197 2B2A                          l6461 32DA                          l6445 325C  
                        l6605 5028                          l7245 55DC                          l7421 52C4  
                        l5487 5150                          l5479 50EE                          l6711 3E56  
                        l6631 3C24                          l6359 2F10                          l6295 2DAE  
                        l6471 3330                          l6375 2F64                          l6519 5EC0  
                        l7175 4E46                          l7159 4CDA                          l6615 5BBC  
                        l7343 4B8C                          l7351 4BEC                          l4937 5FC0  
                        l6705 3E30                          l6641 3C52                          l6393 2FBE  
                        l6377 2F6A                          l6369 2F40                          l7265 46DA  
                        l6545 5958                          l6529 58EA                          l7601 382E  
                        l7433 5318                          l7409 5216                          l4971 4134  
                        l4955 407E                          l6651 3C82                          l6475 3356  
                        l6395 2FC4                          l6387 2F9A                          l6379 2F7C  
                        l6563 59BE                          l6555 5988                          l7187 439A  
                        l7451 5376                          l6741 3F58                          l6717 3E80  
                        l6661 3CB0                          l6637 3C48                          l6485 33A4  
                        l6477 336A                          l7277 4808                          l6557 5998  
                        l6549 596C                          l6581 4EF6                          l6573 4EC6  
                        l7349 4BE6                          l7429 52E0                          l6751 3F9E  
                        l6743 3F6C                          l6727 3ED4                          l6487 33AE  
                        l6399 2FEA                          l6559 59A2                          l6591 4FA0  
                        l6583 4F06                          l7199 44C4                          l6911 1BA6  
                        l7463 33CA                          l6753 3FA2                          l6745 3F8E  
                        l6737 3F2A                          l6681 3D32                          l6673 3D04  
                        l6657 3CA6                          l6497 5410                          l7289 48EA  
                        l6593 4FB0                          l6585 4F44                          l7473 3438  
                        l6691 3DB0                          l6579 4EEE                          l6931 1CA0  
                        l6835 1922                          l7467 33F2                          l4997 4204  
                        l6861 1A3C                          l7493 34A6                          l6775 5802  
                        l6855 1A1C                          l7583 37AC                          l6777 58A6  
                        l6793 56DC                          l6937 1CC0                          l7585 37B8  
                        l6699 3DE8                          l7595 37E6                          ?_sin 0195  
                        l6797 56FE                          l6789 56C8                          l6987 1E2A  
                        _LATA 000F89                          _LATB 000F8A                          _LATC 000F8B  
                        u6005 10D2                          u6030 112C                          u6200 13C0  
                        u6120 12A6                          u6035 1120                          u6205 13B4  
                        u6125 129A                          u6045 118C                          u8100 3344  
                        u8020 31FE                          u5605 405A                          u5630 40B0  
                        u6520 1830                          u6440 1714                          u6360 15F8  
                        u6280 14DC                          u5800 433C                          u5720 4224  
                        u8200 590A                          u8025 31F2                          u9010 1E4A  
                        u5635 40A4                          u9020 1E96                          u6525 1824  
                        u6445 1708                          u6365 15EC                          u6285 14D0  
                        u5805 4330                          u5725 4218                          u5645 4110  
                        u8205 58FE                          u5910 0EFE                          u5830 0D8C  
                        u5590 3FFA                          u9015 1E3E                          u9025 1E8A  
                        u9210 4C96                          u5915 0EF2                          u5835 0D80  
                        u5595 3FEE                          u9035 1EF6                          u9220 4C98  
                        u5925 0F5E                          u5845 0DEC                          u5950 0FB8  
                        u5870 0E44                          u7640 2BE4                          u7650 2BFC  
                        u8370 5BEE                          u5955 0FAC                          u5875 0E38  
                        u7660 2BFE                          u5965 1018                          u5885 0EA4  
                        u5990 1072                          u9280 44BE                          u9441 4A20  
                        u8378 5BF2                          u8650 56EC                          u9290 44C0  
                        u9610 5328                          u9530 5212                          u5995 1066  
                        u9451 4A2C                          u8580 3F3E                          u8750 1942  
                        u8760 198E                          u9800 378A                          u8905 1C72  
                        u9490 4BE4                          u8755 1936                          u8765 1982  
                        u9670 33D2                          u8775 19EE                          u8880 1BC6  
                        u8890 1C12                          u9676 33D4                          u9917 5F28  
                        u8885 1BBA                          u8895 1C06           __size_of_CANSetMask 039E  
                        abs@a 0077                          _alfa 011C                          _fabs 5E5C  
                        _data 015D                          _beta 0120                          _atan 4C1A  
                        _asin 467C                          _main 5DC4                          _asus 0043  
                        cos@f 01B2                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          indf1 000FE7  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        btemp 0048                          _sqrt 383C                          pclat 000FFA  
                        sin@f 0195                          sin@y 0199                          prodh 000FF4  
                        prodl 000FF3                          start 0254                 __CFG_IESO$OFF 000000  
             ___fldiv@new_exp 0088                delay_s@value_s 007F                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000              _CANOperationMode 5FB8                         ??_abs 0079  
                       ??_cos 00E3                         ??_sin 00E3    __size_of_CANreceiveMessage 050C  
                       ?_fabs 00C1                 ___fltol@sign1 00C9                         ?_atan 00D1  
                       ?_asin 00DE               __end_of___fladd 2F22                         ?_main 0001  
             __end_of___fldiv 3FC6               __end_of___flneg 5ED2               __end_of___flmul 33C8  
             __end_of___flsub 5E5C               __end_of___fltol 59D0                         ?_sqrt 00C1  
                       _T0CON 000FD5                         _T3CON 000FB1            __size_of_ISR_Bassa 023C  
             __end_of___lwdiv 5CA2                         i1l410 2806                         i1l711 020C  
                       i1l704 0188                         i1l707 0208                         i1l697 009A  
                       i2l690 5AF6                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _TMR3H 000FB3                         _TMR3L 000FB2                         _PORTA 000F80  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
          __end_ofsin@coeff_a 0D41            __end_ofsin@coeff_b 0D51                 __CFG_PWRT$OFF 000000  
            __end_of_ISR_Alta 5B96               __end_of_delay_s 5F94                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
          CANInitialize@flags 0089                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         _bordo 0124                         fabs@d 00C1  
                       _first 0237                         _floor 5688                         _frexp 5B96  
                       _errno 0148                         atan@f 00D1                         atan@x 0191  
                       atan@y 018D                         asin@x 00DE                         asin@y 01AA  
    can_send@data_correction1 0087                __pbitbssCOMRAM 0230                         sin@x2 01A1  
                       tablat 000FF5          __end_of_CANisTxReady 5FB8                         sqrt@a 00C1  
                       sqrt@i 00CA                         sqrt@p 00CF                         status 000FD8  
                ?_park_search 0001               __initialization 5D0E                  __end_of_fabs 5E9A  
                __end_of_atan 4E6C                  __end_of_asin 498E                  __end_of_main 5E14  
                __end_of_sqrt 3C06                        ??_fabs 00C5                        ??_atan 00D5  
                      ??_asin 00E2                        ??_main 00E4             _park_routine$3740 01DE  
           _park_routine$3739 01DA                        ??_sqrt 00C5                 __activetblptr 000003  
           _CANisTxReady$2845 0077                        _ADCON1 000FC1                        ?_floor 00D9  
                      ?_frexp 0077                        _CANCON 000F6F            _distance_received1 0235  
             __CFG_BBSIZ$1024 000000             _spazio_parcheggio 01E6                        i1l6103 01C2  
                      i1l6113 01F2                        i1l6033 008C                        i1l6107 01CA  
                      i1l6063 00CE                        i1l6067 00D6                        i2l1278 5C98  
                      i1l5711 2A44                        i1l5703 2A0C                        i1l6095 0192  
                      i1l5713 2A76                        i1l5641 2792                        i1l5633 2756  
                      i1l5625 26E6                        i1l6089 0164                        i1l5707 2A28  
                      i1l5651 2800                        i1l5645 27B0                        i1l5637 2774  
                      i1l5649 27CE                        i1l5695 29D4                        i1l5687 2966  
                      i1l5699 29F0                        i2l7613 5C48                        i2l7615 5C54  
                      i2l7625 5C8A                        i2l7617 5C5A                        i2l7645 5B58  
                      _RXB0D0 000F66                        _RXB0D1 000F67                        _RXB0D2 000F68  
                      _RXB0D3 000F69                        _RXB0D4 000F6A                        _RXB1D0 000F56  
                      _RXB0D5 000F6B                        _RXB1D1 000F57                        _RXB0D6 000F6C  
                      _RXB1D2 000F58                        _RXB0D7 000F6D                        _RXB1D3 000F59  
                      _RXB1D4 000F5A                        _RXB1D5 000F5B                        _RXB1D6 000F5C  
                      _RXB1D7 000F5D                        _TXB0D0 000F46                        _TXB0D1 000F47  
                      _TXB0D2 000F48                        _TXB0D3 000F49                        _TXB1D0 000F36  
                      _TXB0D4 000F4A                        _TXB1D1 000F37                        _TXB0D5 000F4B  
                      _TXB1D2 000F38                        _TXB0D6 000F4C                        _TXB1D3 000F39  
                      _TXB0D7 000F4D                        _TXB2D0 000F26                        _TXB1D4 000F3A  
                      _TXB2D1 000F27                        _TXB1D5 000F3B                        _TXB2D2 000F28  
                      _TXB1D6 000F3C                        _TXB2D3 000F29                        _TXB1D7 000F3D  
                      _TXB2D4 000F2A                        _TXB2D5 000F2B                        _TXB2D6 000F2C  
                      _TXB2D7 000F2D            CANsendMessage@data 007B              __end_of_can_send 5688  
          CANsendMessage@tamp 0083              __end_of___xxtofl 503A             __end_of_ISR_Bassa 0254  
            __end_of_delay_ms 5F3C         __size_of_CANSetFilter 0B06                __CFG_XINST$OFF 000000  
                      ___flge 53C2               _data_correction 016D                     ??___fladd 00B1  
                      ___wmul 5ED2                     ??___fldiv 007F                     ??___flneg 00C1  
              __CFG_STVREN$ON 000000                     ??___flmul 0098                     ??___flsub 00E3  
                   ??___fltol 00C5                     ??___lwdiv 0064                  ??_CANSetMask 007C  
                      _gianni 0044                        _raggio 01E8                        clear_0 5D14  
                      clear_1 5D2E                     ??_delay_s 007F                        floor@i 00DD  
                      floor@x 00D9               __CFG_BOREN$BOHW 000000                        sin@sgn 01A5  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                  _CANSetFilter 0D52                    ___flge@ff1 00C5  
                  ___flge@ff2 00C9                  ___xxtofl@arg 00D5                  ___xxtofl@exp 00D4  
                ___xxtofl@val 00CB                    __accesstop 0060       __end_of__initialization 5D66  
          __end_of_CANSetMask 4364               __CFG_PBADEN$OFF 000000                    ___flneg@f1 00BD  
               ?_park_routine 0001                  eval_poly@res 00C9                 ___rparam_used 000000  
                  ___fltol@f1 00C1                __pcstackCOMRAM 0001                     ?_ISR_Alta 0001  
                __pidataBANK0 5FD8                  __pidataBANK1 5FCE                 __end_of_floor 57AC  
               __end_of_frexp 5C2A              ??_configurazione 0091         CANSetFilter@numBuffer 0080  
                _actual_speed 0144         __size_of_CANisTxReady 0024                       ??_floor 00DD  
                     ??_frexp 007D      __end_of_CANOperationMode 5FCE                    __pbssBANK0 00E4  
                  __pbssBANK1 0100               _sensor_distance 0024            __size_of_eval_poly 0118  
                  _data_brake 0165                ??_park_routine 01D6                 ISR_Bassa@gigi 0022  
     __size_of_CANsendMessage 078C                    _data_speed 0175                    _activation 0230  
    __size_of_can_interpreter 0054            __size_of_parallelo 028C          __size_of_park_search 01C2  
           _old_alignment_gap 0134                    ??_ISR_Alta 0067                       ?___flge 00C5  
                     ?___wmul 0077                       _CANSTAT 000F6E                  _CANisTxReady 5F94  
                     _BRGCON1 000F70                       _BRGCON2 000F71                       _BRGCON3 000F72  
                   ?_can_send 0001                     ?___xxtofl 00CB        __size_of_CANInitialize 01C6  
                   ?_delay_ms 007D                       _RXB0DLC 000F65                       _RXB1DLC 000F55  
                     _RXB0CON 000F60                       _RXB1CON 000F50                       _TXB0DLC 000F45  
                     _TXB1DLC 000F35                       _TXB2DLC 000F25           CANsendMessage@flags 007E  
                     __Hparam 0000                    _left_speed 003C                       __Lparam 0000  
            delay_ms@value_ms 007D                       _Pminimo 0118               __size_of___flge 0190  
                  _matematica 1FE4                       ___fladd 2A7A                       ___fldiv 3C06  
                     ___flneg 5E9A                       ___flmul 2F22                       ___flsub 5E14  
                     ___fltol 58C4               __size_of___wmul 0036                       ___lwdiv 5C2A  
                __psmallconst 0D00          CANInitialize@propSeg 008E                       __pcinit 5D0E  
           __end_of_eval_poly 58C4                       _delay_s 5F68                       __ramtop 0D00  
                     __ptext0 5DC4                       __ptext1 5200                       __ptext2 33C8  
                     __ptext3 498E                       __ptext4 5552                       __ptext5 1858  
                     __ptext6 5F94                       __ptext7 5F3C                       __ptext8 1FE4  
                     __ptext9 59D0                     _T0CONbits 000FD5                    ??_can_send 0087  
                __size_of_abs 002C                  __size_of_cos 00E4               atan@val_squared 0196  
                __size_of_sin 0318                    ??___xxtofl 00CF                       atan@val 019A  
           __end_of_parallelo 4C1A                    ??_delay_ms 007F                       asin@sgn 019E  
      CANreceiveMessage@error 000B               _start_operation 023B                __pintcode_body 5AB4  
        end_of_initialization 5D66                       int_func 5AB4                 _CANInitialize 503A  
                   _ISR_Bassa 0018                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE                       sqrt@grs 00D0  
                     sqrt@exp 00D4             ??_can_interpreter 0077       _steering_correction_dir 023C  
                   _PORTBbits 000F81                CANSetMask@mask 0077                CANSetMask@tamp 0081  
                _distance_set 0110                CANSetMask@type 007B          __end_of_park_routine 383C  
                 ___fladd@grs 00BC                 ___xxtofl@sign 00D3                     _TRISBbits 000F93  
                 ___fldiv@grs 008A                   ___fldiv@rem 0084                     _MUX_index 0042  
                  _pulse_time 014A       _clock_counter_reference 0034                   ___flmul@grs 009E  
              _CANsendMessage 1858              CANInitialize@BRP 0088              CANInitialize@SJW 0087  
              ?_CANInitialize 0085                    ?_ISR_Bassa 0001                   ?_matematica 0001  
              __end_of___flge 5552             __size_of_ISR_Alta 5B8E                __end_of___wmul 5F08  
                  floor@expon 00E1           start_initialization 5D0E                    eval_poly@d 00C1  
                  eval_poly@n 00C3                    eval_poly@x 00BD                   __end_of_abs 5F68  
                 __end_of_cos 5AB4                   __end_of_sin 467C           CANSetMask@numBuffer 0080  
               _data_speed_rx 0108        __end_of_CANsendMessage 1FE4             ?_CANOperationMode 0001  
               _data_steering 017D                    frexp@value 0077            ??_CANOperationMode 0077  
           _distance_received 0234    CANInitialize@FilterConfig1 008F    CANInitialize@FilterConfig2 0090  
         _steering_correction 0045                      ??___flge 00CD                      ??___wmul 007B  
                 __pdataBANK0 00E8                   __pdataBANK1 01E2              __CFG_LPT1OSC$OFF 000000  
                   ___fladd@a 00AD                     ___fladd@b 00A9        CANInitialize@phaseSeg1 0085  
      CANInitialize@phaseSeg2 0086                     ___fldiv@a 007B                     ___fldiv@b 0077  
                   ___flmul@a 0094                     ___flmul@b 0090                   __pbssCOMRAM 0024  
                   ___flsub@a 0191                     ___flsub@b 018D                 __pcstackBANK0 0060  
               __pcstackBANK1 018D                   _BRGCON2bits 000F71                   _BRGCON3bits 000F72  
           __size_of_can_send 0136             __size_of___xxtofl 01CE             __size_of_delay_ms 0034  
             ?_CANsendMessage 0077           __size_of_matematica 058A               ??_CANInitialize 008A  
                   _asin$3750 01A2                     _asin$3748 01AE                     _asin$3749 01A6  
                  sin@coeff_a 0D2D                    sin@coeff_b 0D41                 ??_park_search 01B2  
               _alignment_gap 00E4            CANSetFilter@filter 0077                     _data_test 0185  
            ___lwdiv@dividend 0060                    ISR_Bassa@i 0023                   ??_ISR_Bassa 000D  
                   __pintcode 0008                      ?___fladd 00A9                      ?___fldiv 0077  
                    ?___flneg 00BD                      ?___flmul 0090                      ?___flsub 018D  
                    ?___fltol 00C1         __size_of_park_routine 0474                      ?___lwdiv 0060  
                 __pintcodelo 0018                      ?_delay_s 0001                   __smallconst 0D00  
                 _COMSTATbits 000F74                     _eval_poly 57AC                     _larghezza 01E2  
            ___lwdiv@quotient 0065                __size_of_floor 0124                __size_of_frexp 0094  
     __size_of_configurazione 006C                     _parallelo 498E         CANreceiveMessage@tamp 000C  
              _prima_sterzata 0138                ___wmul@product 007B                      _LATBbits 000F8A  
             _can_interpreter 5D70                     atan@recip 0195                  _park_routine 33C8  
_delay_quartz_frequency_value 00E8                      _IPR3bits 000FA5                      _PIE3bits 000FA3  
                    i1u701_25 2A50                      i1u681_20 2626                      i1u681_26 2628  
                    i1u682_20 2654                      i1u690_25 27DA                      i1u682_26 2656  
                    i1u692_20 28AE                      i1u684_25 266A                      i1u692_26 28B0  
                    i1u693_20 28D8                      i1u693_26 28DA                      _PIR3bits 000FA4  
                    i1u695_25 28EC                      i1u992_27 00BC                      _RXB0EIDH 000F63  
                    _RXB0EIDL 000F64                      _RXB1EIDH 000F53                      _RXB1EIDL 000F54  
                    _ISR_Alta 0008                     _set_speed 014C                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                      _RXB0SIDH 000F61                      _RXB0SIDL 000F62  
                    _RXF0EIDH 000F02                      _RXB1SIDH 000F51                      _RXF0EIDL 000F03  
                    _RXB1SIDL 000F52                      _RXF1EIDH 000F06                      _RXF1EIDL 000F07  
                    _RXF2EIDH 000F0A                      _RXF2EIDL 000F0B                      _RXF3EIDH 000F0E  
                    _RXF3EIDL 000F0F                      _RXF4EIDH 000F12                      _RXF4EIDL 000F13  
                    _RXF5EIDH 000F16                      _RXF5EIDL 000F17                      _RXF0SIDH 000F00  
                    _RXF0SIDL 000F01           __end_of_park_search 53C2                      _TXB0EIDH 000F43  
                    _RXF1SIDH 000F04                      _TXB0EIDL 000F44                      _RXF1SIDL 000F05  
                    _TXB1EIDH 000F33                      _RXF2SIDH 000F08                      _TXB1EIDL 000F34  
                    _RXF2SIDL 000F09                      _TXB2EIDH 000F23                      _RXF3SIDH 000F0C  
                    _TXB2EIDL 000F24                      _RXF3SIDL 000F0D                      _RXF4SIDH 000F10  
                    _RXF4SIDL 000F11                      _RXF5SIDH 000F14                      _RXF5SIDL 000F15  
                    _RXM0EIDH 000F1A                      _RXM0EIDL 000F1B                      _TXB0SIDH 000F41  
                    _RXM1EIDH 000F1E                      _TXB0SIDL 000F42                      _RXM1EIDL 000F1F  
                    _TXB1SIDH 000F31                      _TXB1SIDL 000F32                      _TXB2SIDH 000F21  
                    _TXB2SIDL 000F22                      _RXM0SIDH 000F18                      _RXM0SIDL 000F19  
                    _RXM1SIDH 000F1C                      _RXM1SIDL 000F1D                   _distance_dx 0038  
                 _distance_sx 003A                      _RXERRCNT 000F75                      _TXERRCNT 000F76  
           ___wmul@multiplier 0077                    ?_eval_poly 00BD           __end_ofatan@coeff_a 0D19  
         __end_ofatan@coeff_b 0D2D                 ?_CANSetFilter 0077                   _INTCON2bits 000FF1  
                   copy_data0 5D48                    _CANCONbits 000F6F                    ?_parallelo 0001  
            _distance_average 0036                     frexp@eptr 007B                      __Hparam0 0000  
                    __Lparam0 0000                  _RXB0SIDLbits 000F62                  _RXB1SIDLbits 000F52  
                ??_matematica 00E3                 _request_sent1 023A              __size_of___fladd 04A8  
                  _CANSetMask 3FC6              __size_of___fldiv 03C0              __size_of___flneg 0038  
            __size_of___flmul 04A6              __size_of___flsub 0048              __size_of___fltol 010C  
                    _cos$3751 01B6              __size_of___lwdiv 0078              __size_of_delay_s 002C  
                    _can_send 5552                      ___xxtofl 4E6C                  _RXF0SIDLbits 000F01  
                    _delay_ms 5F08               ___lwdiv@divisor 0062                  _RXF1SIDLbits 000F05  
             ___lwdiv@counter 0064                ??_CANSetFilter 007C                      __ptext10 4364  
                    __ptext11 5688                      __ptext20 5E9A                      __ptext12 5B96  
                    __ptext21 57AC                      __ptext13 4E6C                      __ptext30 503A  
                    __ptext22 2F22                      __ptext14 58C4                      __ptext31 3FC6  
                    __ptext23 2A7A                      __ptext15 5E14                      __ptext32 0D52  
                    __ptext24 53C2                      __ptext16 467C                      __ptext33 5FB8  
                    __ptext25 3C06                      __ptext17 383C                      __ptext34 5D70  
                    __ptext26 5F68                      __ptext18 4C1A                      __ptext27 5F08  
                    __ptext19 5E5C                      __ptext36 256E                      __ptext28 5ED2  
                    __ptext29 5CA2                      __ptext38 5C2A                  _RXF2SIDLbits 000F09  
                    _sin$3752 019D       __end_of_can_interpreter 5DC4                  _RXF3SIDLbits 000F0D  
                    _distance 0146            __end_of_matematica 256E                  _RXF4SIDLbits 000F11  
                _RXF5SIDLbits 000F15      CANsendMessage@dataLength 007D                 __size_of_fabs 003E  
               __size_of_atan 0252                 __size_of_asin 0312                 __size_of_main 0050  
               __size_of_sqrt 03CA                   _park_search 5200          CANreceiveMessage@msg 0001  
                _TXB0SIDLbits 000F42                  _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22  
                    int$flags 0048     __size_of_CANOperationMode 0016                 ?_CANisTxReady 0001  
                 atan@coeff_a 0D01                   atan@coeff_b 0D19                   _RXB0DLCbits 000F65  
                 _RXB1DLCbits 000F55                  _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60  
                 _RXB1CONbits 000F50             _CANreceiveMessage 256E                  _RXM1SIDLbits 000F1D  
                  _INTCONbits 000FF2                   ??_eval_poly 00C5              ??_CANsendMessage 007F  
          ?_CANreceiveMessage 0001                  _request_sent 0239                     sqrt@tfrac 00CB  
              _configurazione 5CA2      CANsendMessage@identifier 0077                   ??_parallelo 00E2  
                    intlevel1 0000                      intlevel2 0000              CANSetFilter@tamp 0081  
            CANSetFilter@type 007B           ??_CANreceiveMessage 0003           _old_data_correction 0238  
                 _TXB0DLCbits 000F45                   _right_speed 003E                   _TXB1DLCbits 000F35  
                 _TXB0CONbits 000F40                   _TXB2DLCbits 000F25                   _TXB1CONbits 000F30  
                 _TXB2CONbits 000F20          CANOperationMode@mode 0077                   ?_CANSetMask 0077  
              ??_CANisTxReady 0077                _distance_error 0233               _matematica$3741 01BA  
             _matematica$3742 01BE               _matematica$3743 01C2               _matematica$3744 01C6  
             _matematica$3745 01D2               _matematica$3746 01CA               _matematica$3747 01CE  
   __end_of_CANreceiveMessage 2A7A                      sqrt@frac 00DA                      sqrt@sign 00C9  
                    sqrt@root 00D6                   _timerValue2 0040        __end_of_configurazione 5D0E  
               ___fladd@signs 00B9                 _distance_wait 0236              ?_can_interpreter 0001  
                ___fladd@aexp 00BA                  ___fladd@bexp 00BB         __end_of_CANInitialize 5200  
