

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Mon Apr 25 16:03:26 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    61                           	psect	param0,global,class=BANK0,space=1,delta=1
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    63  0000                     
    64                           	psect	idataCOMRAM
    65  005C4C                     __pidataCOMRAM:
    66                           	opt stack 0
    67                           
    68                           ;initializer for _spazio_parcheggio
    69  005C4C  0064               	dw	100
    70                           
    71                           	psect	idataBANK0
    72  005C4E                     __pidataBANK0:
    73                           	opt stack 0
    74                           
    75                           ;initializer for _delay_quartz_frequency_value
    76  005C4E  10                 	db	16
    77                           
    78                           	psect	idataBANK1
    79  005C40                     __pidataBANK1:
    80                           	opt stack 0
    81                           
    82                           ;initializer for _bordo
    83  005C40  0000               	dw	0
    84  005C42  41F0               	dw	16880
    85                           
    86                           ;initializer for _larghezza
    87  005C44  0000               	dw	0
    88  005C46  4200               	dw	16896
    89                           
    90                           ;initializer for _raggio
    91  005C48  0000               	dw	0
    92  005C4A  4220               	dw	16928
    93                           
    94                           	psect	smallconst
    95  000D00                     __psmallconst:
    96                           	opt stack 0
    97  000D00  00                 	db	0
    98  000D01                     atan@coeff_a:
    99                           	opt stack 0
   100  000D01  3C06               	dw	15366
   101  000D03  4204               	dw	16900
   102  000D05  9F7D               	dw	40829
   103  000D07  426A               	dw	17002
   104  000D09  905C               	dw	36956
   105  000D0B  4201               	dw	16897
   106  000D0D  4D60               	dw	19808
   107  000D0F  40BB               	dw	16571
   108  000D11  EC51               	dw	60497
   109  000D13  3E47               	dw	15943
   110  000D15  8DDE               	dw	36318
   111  000D17  BB1F               	dw	47903
   112  000D19                     __end_ofatan@coeff_a:
   113                           	opt stack 0
   114  000D19                     atan@coeff_b:
   115                           	opt stack 0
   116  000D19  3C06               	dw	15366
   117  000D1B  4204               	dw	16900
   118  000D1D  59C0               	dw	22976
   119  000D1F  428B               	dw	17035
   120  000D21  0474               	dw	1140
   121  000D23  4244               	dw	16964
   122  000D25  9BF9               	dw	39929
   123  000D27  414F               	dw	16719
   124  000D29  0000               	dw	0
   125  000D2B  3F80               	dw	16256
   126  000D2D                     __end_ofatan@coeff_b:
   127                           	opt stack 0
   128  000D2D                     sin@coeff_a:
   129                           	opt stack 0
   130  000D2D  F3EC               	dw	62444
   131  000D2F  484A               	dw	18506
   132  000D31  9535               	dw	38197
   133  000D33  C795               	dw	51093
   134  000D35  C117               	dw	49431
   135  000D37  45DC               	dw	17884
   136  000D39  DBFD               	dw	56317
   137  000D3B  C36D               	dw	50029
   138  000D3D  B372               	dw	45938
   139  000D3F  4033               	dw	16435
   140  000D41                     __end_ofsin@coeff_a:
   141                           	opt stack 0
   142  000D41                     sin@coeff_b:
   143                           	opt stack 0
   144  000D41  342B               	dw	13355
   145  000D43  4801               	dw	18433
   146  000D45  9D7F               	dw	40319
   147  000D47  45B0               	dw	17840
   148  000D49  FFE7               	dw	65511
   149  000D4B  42D9               	dw	17113
   150  000D4D  0000               	dw	0
   151  000D4F  3F80               	dw	16256
   152  000D51                     __end_ofsin@coeff_b:
   153                           	opt stack 0
   154  0000                     _RXB1CON	set	3920
   155  0000                     _RXB1CONbits	set	3920
   156  0000                     _RXB1D0	set	3926
   157  0000                     _RXB1D1	set	3927
   158  0000                     _RXB1D2	set	3928
   159  0000                     _RXB1D3	set	3929
   160  0000                     _RXB1D4	set	3930
   161  0000                     _RXB1D5	set	3931
   162  0000                     _RXB1D6	set	3932
   163  0000                     _RXB1D7	set	3933
   164  0000                     _RXB1DLC	set	3925
   165  0000                     _RXB1DLCbits	set	3925
   166  0000                     _RXB1EIDH	set	3923
   167  0000                     _RXB1EIDL	set	3924
   168  0000                     _RXB1SIDH	set	3921
   169  0000                     _RXB1SIDL	set	3922
   170  0000                     _RXB1SIDLbits	set	3922
   171  0000                     _RXF0EIDH	set	3842
   172  0000                     _RXF0EIDL	set	3843
   173  0000                     _RXF0SIDH	set	3840
   174  0000                     _RXF0SIDL	set	3841
   175  0000                     _RXF0SIDLbits	set	3841
   176  0000                     _RXF1EIDH	set	3846
   177  0000                     _RXF1EIDL	set	3847
   178  0000                     _RXF1SIDH	set	3844
   179  0000                     _RXF1SIDL	set	3845
   180  0000                     _RXF1SIDLbits	set	3845
   181  0000                     _RXF2EIDH	set	3850
   182  0000                     _RXF2EIDL	set	3851
   183  0000                     _RXF2SIDH	set	3848
   184  0000                     _RXF2SIDL	set	3849
   185  0000                     _RXF2SIDLbits	set	3849
   186  0000                     _RXF3EIDH	set	3854
   187  0000                     _RXF3EIDL	set	3855
   188  0000                     _RXF3SIDH	set	3852
   189  0000                     _RXF3SIDL	set	3853
   190  0000                     _RXF3SIDLbits	set	3853
   191  0000                     _RXF4EIDH	set	3858
   192  0000                     _RXF4EIDL	set	3859
   193  0000                     _RXF4SIDH	set	3856
   194  0000                     _RXF4SIDL	set	3857
   195  0000                     _RXF4SIDLbits	set	3857
   196  0000                     _RXF5EIDH	set	3862
   197  0000                     _RXF5EIDL	set	3863
   198  0000                     _RXF5SIDH	set	3860
   199  0000                     _RXF5SIDL	set	3861
   200  0000                     _RXF5SIDLbits	set	3861
   201  0000                     _RXM0EIDH	set	3866
   202  0000                     _RXM0EIDL	set	3867
   203  0000                     _RXM0SIDH	set	3864
   204  0000                     _RXM0SIDL	set	3865
   205  0000                     _RXM0SIDLbits	set	3865
   206  0000                     _RXM1EIDH	set	3870
   207  0000                     _RXM1EIDL	set	3871
   208  0000                     _RXM1SIDH	set	3868
   209  0000                     _RXM1SIDL	set	3869
   210  0000                     _RXM1SIDLbits	set	3869
   211  0000                     _TXB0CONbits	set	3904
   212  0000                     _TXB0D0	set	3910
   213  0000                     _TXB0D1	set	3911
   214  0000                     _TXB0D2	set	3912
   215  0000                     _TXB0D3	set	3913
   216  0000                     _TXB0D4	set	3914
   217  0000                     _TXB0D5	set	3915
   218  0000                     _TXB0D6	set	3916
   219  0000                     _TXB0D7	set	3917
   220  0000                     _TXB0DLC	set	3909
   221  0000                     _TXB0DLCbits	set	3909
   222  0000                     _TXB0EIDH	set	3907
   223  0000                     _TXB0EIDL	set	3908
   224  0000                     _TXB0SIDH	set	3905
   225  0000                     _TXB0SIDL	set	3906
   226  0000                     _TXB0SIDLbits	set	3906
   227  0000                     _TXB1CONbits	set	3888
   228  0000                     _TXB1D0	set	3894
   229  0000                     _TXB1D1	set	3895
   230  0000                     _TXB1D2	set	3896
   231  0000                     _TXB1D3	set	3897
   232  0000                     _TXB1D4	set	3898
   233  0000                     _TXB1D5	set	3899
   234  0000                     _TXB1D6	set	3900
   235  0000                     _TXB1D7	set	3901
   236  0000                     _TXB1DLC	set	3893
   237  0000                     _TXB1DLCbits	set	3893
   238  0000                     _TXB1EIDH	set	3891
   239  0000                     _TXB1EIDL	set	3892
   240  0000                     _TXB1SIDH	set	3889
   241  0000                     _TXB1SIDL	set	3890
   242  0000                     _TXB1SIDLbits	set	3890
   243  0000                     _TXB2CONbits	set	3872
   244  0000                     _TXB2D0	set	3878
   245  0000                     _TXB2D1	set	3879
   246  0000                     _TXB2D2	set	3880
   247  0000                     _TXB2D3	set	3881
   248  0000                     _TXB2D4	set	3882
   249  0000                     _TXB2D5	set	3883
   250  0000                     _TXB2D6	set	3884
   251  0000                     _TXB2D7	set	3885
   252  0000                     _TXB2DLC	set	3877
   253  0000                     _TXB2DLCbits	set	3877
   254  0000                     _TXB2EIDH	set	3875
   255  0000                     _TXB2EIDL	set	3876
   256  0000                     _TXB2SIDH	set	3873
   257  0000                     _TXB2SIDL	set	3874
   258  0000                     _TXB2SIDLbits	set	3874
   259  0000                     _ADCON1	set	4033
   260  0000                     _BRGCON1	set	3952
   261  0000                     _BRGCON2	set	3953
   262  0000                     _BRGCON2bits	set	3953
   263  0000                     _BRGCON3	set	3954
   264  0000                     _BRGCON3bits	set	3954
   265  0000                     _CANCON	set	3951
   266  0000                     _CANCONbits	set	3951
   267  0000                     _CANSTAT	set	3950
   268  0000                     _COMSTATbits	set	3956
   269  0000                     _INTCON2bits	set	4081
   270  0000                     _INTCONbits	set	4082
   271  0000                     _IPR3bits	set	4005
   272  0000                     _LATA	set	3977
   273  0000                     _LATB	set	3978
   274  0000                     _LATBbits	set	3978
   275  0000                     _LATC	set	3979
   276  0000                     _PIE3bits	set	4003
   277  0000                     _PIR3bits	set	4004
   278  0000                     _PORTA	set	3968
   279  0000                     _PORTBbits	set	3969
   280  0000                     _RCONbits	set	4048
   281  0000                     _RXB0CON	set	3936
   282  0000                     _RXB0CONbits	set	3936
   283  0000                     _RXB0D0	set	3942
   284  0000                     _RXB0D1	set	3943
   285  0000                     _RXB0D2	set	3944
   286  0000                     _RXB0D3	set	3945
   287  0000                     _RXB0D4	set	3946
   288  0000                     _RXB0D5	set	3947
   289  0000                     _RXB0D6	set	3948
   290  0000                     _RXB0D7	set	3949
   291  0000                     _RXB0DLC	set	3941
   292  0000                     _RXB0DLCbits	set	3941
   293  0000                     _RXB0EIDH	set	3939
   294  0000                     _RXB0EIDL	set	3940
   295  0000                     _RXB0SIDH	set	3937
   296  0000                     _RXB0SIDL	set	3938
   297  0000                     _RXB0SIDLbits	set	3938
   298  0000                     _RXERRCNT	set	3957
   299  0000                     _T0CON	set	4053
   300  0000                     _T0CONbits	set	4053
   301  0000                     _T3CON	set	4017
   302  0000                     _TMR0H	set	4055
   303  0000                     _TMR0L	set	4054
   304  0000                     _TMR3H	set	4019
   305  0000                     _TMR3L	set	4018
   306  0000                     _TRISA	set	3986
   307  0000                     _TRISB	set	3987
   308  0000                     _TRISBbits	set	3987
   309  0000                     _TRISC	set	3988
   310  0000                     _TXERRCNT	set	3958
   311                           
   312                           ; #config settings
   313  000D51  00                 	db	0	; dummy byte at the end
   314  0000                     
   315                           	psect	cinit
   316  005880                     __pcinit:
   317                           	opt stack 0
   318  005880                     start_initialization:
   319                           	opt stack 0
   320  005880                     __initialization:
   321                           	opt stack 0
   322                           
   323                           ; Clear objects allocated to BANK1 (127 bytes)
   324  005880  EE01  F000         	lfsr	0,__pbssBANK1
   325  005884  0E7F               	movlw	127
   326  005886                     clear_0:
   327  005886  6AEE               	clrf	postinc0,c
   328  005888  06E8               	decf	wreg,f,c
   329  00588A  E1FD               	bnz	clear_0
   330                           
   331                           ; Clear objects allocated to BANK0 (16 bytes)
   332  00588C  EE00  F0D7         	lfsr	0,__pbssBANK0
   333  005890  0E10               	movlw	16
   334  005892                     clear_1:
   335  005892  6AEE               	clrf	postinc0,c
   336  005894  06E8               	decf	wreg,f,c
   337  005896  E1FD               	bnz	clear_1
   338                           
   339                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   340  005898  6A45               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   341  00589A  6A44               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   342                           
   343                           ; Clear objects allocated to COMRAM (32 bytes)
   344  00589C  EE00  F024         	lfsr	0,__pbssCOMRAM
   345  0058A0  0E20               	movlw	32
   346  0058A2                     clear_2:
   347  0058A2  6AEE               	clrf	postinc0,c
   348  0058A4  06E8               	decf	wreg,f,c
   349  0058A6  E1FD               	bnz	clear_2
   350                           
   351                           ; Initialize objects allocated to BANK1 (12 bytes)
   352                           ; load TBLPTR registers with __pidataBANK1
   353  0058A8  0E40               	movlw	low __pidataBANK1
   354  0058AA  6EF6               	movwf	tblptrl,c
   355  0058AC  0E5C               	movlw	high __pidataBANK1
   356  0058AE  6EF7               	movwf	tblptrh,c
   357  0058B0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   358  0058B2  6EF8               	movwf	tblptru,c
   359  0058B4  EE01  F0D4         	lfsr	0,__pdataBANK1
   360  0058B8  EE10 F00C          	lfsr	1,12
   361  0058BC                     copy_data0:
   362  0058BC  0009               	tblrd		*+
   363  0058BE  CFF5 FFEE          	movff	tablat,postinc0
   364  0058C2  50E5               	movf	postdec1,w,c
   365  0058C4  50E1               	movf	fsr1l,w,c
   366  0058C6  E1FA               	bnz	copy_data0
   367                           
   368                           ; Initialize objects allocated to BANK0 (1 bytes)
   369                           ; load TBLPTR registers with __pidataBANK0
   370  0058C8  0E4E               	movlw	low __pidataBANK0
   371  0058CA  6EF6               	movwf	tblptrl,c
   372  0058CC  0E5C               	movlw	high __pidataBANK0
   373  0058CE  6EF7               	movwf	tblptrh,c
   374  0058D0  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   375  0058D2  6EF8               	movwf	tblptru,c
   376  0058D4  0009               	tblrd		*+	;fetch initializer
   377  0058D6  CFF5 F0E7          	movff	tablat,__pdataBANK0
   378                           
   379                           ; Initialize objects allocated to COMRAM (2 bytes)
   380                           ; load TBLPTR registers with __pidataCOMRAM
   381  0058DA  0E4C               	movlw	low __pidataCOMRAM
   382  0058DC  6EF6               	movwf	tblptrl,c
   383  0058DE  0E5C               	movlw	high __pidataCOMRAM
   384  0058E0  6EF7               	movwf	tblptrh,c
   385  0058E2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   386  0058E4  6EF8               	movwf	tblptru,c
   387  0058E6  0009               	tblrd		*+	;fetch initializer
   388  0058E8  CFF5 F046          	movff	tablat,__pdataCOMRAM
   389  0058EC  0009               	tblrd		*+	;fetch initializer
   390  0058EE  CFF5 F047          	movff	tablat,__pdataCOMRAM+1
   391  0058F2                     end_of_initialization:
   392                           	opt stack 0
   393  0058F2                     __end_of__initialization:
   394                           	opt stack 0
   395  0058F2  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   396  0058F4  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   397  0058F6  0100               	movlb	0
   398  0058F8  EF1A  F02D         	goto	_main	;jump to C main() function
   399                           tblptru	equ	0xFF8
   400                           tblptrh	equ	0xFF7
   401                           tblptrl	equ	0xFF6
   402                           tablat	equ	0xFF5
   403                           postinc0	equ	0xFEE
   404                           wreg	equ	0xFE8
   405                           postdec1	equ	0xFE5
   406                           fsr1l	equ	0xFE1
   407                           
   408                           	psect	bitbssCOMRAM
   409  000220                     __pbitbssCOMRAM:
   410                           	opt stack 0
   411  000220                     _activation:
   412                           	opt stack 0
   413  000220                     	ds	1
   414  000221                     _asd:
   415                           	opt stack 0
   416  000221                     	ds	1
   417  000222                     _dir:
   418                           	opt stack 0
   419  000222                     	ds	1
   420  000223                     _distance_error:
   421                           	opt stack 0
   422  000223                     	ds	1
   423  000224                     _distance_received:
   424                           	opt stack 0
   425  000224                     	ds	1
   426  000225                     _distance_received1:
   427                           	opt stack 0
   428  000225                     	ds	1
   429  000226                     _distance_wait:
   430                           	opt stack 0
   431  000226                     	ds	1
   432  000227                     _old_data_correction:
   433                           	opt stack 0
   434  000227                     	ds	1
   435  000228                     _request_sent:
   436                           	opt stack 0
   437  000228                     	ds	1
   438  000229                     _request_sent1:
   439                           	opt stack 0
   440  000229                     	ds	1
   441  00022A                     _start_operation:
   442                           	opt stack 0
   443  00022A                     	ds	1
   444  00022B                     _steering_correction_dir:
   445                           	opt stack 0
   446  00022B                     	ds	1
   447                           tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           postinc0	equ	0xFEE
   452                           wreg	equ	0xFE8
   453                           postdec1	equ	0xFE5
   454                           fsr1l	equ	0xFE1
   455                           
   456                           	psect	bssCOMRAM
   457  000024                     __pbssCOMRAM:
   458                           	opt stack 0
   459  000024                     _sensor_distance:
   460                           	opt stack 0
   461  000024                     	ds	16
   462  000034                     _distance_dx:
   463                           	opt stack 0
   464  000034                     	ds	2
   465  000036                     _distance_sx:
   466                           	opt stack 0
   467  000036                     	ds	2
   468  000038                     _left_speed:
   469                           	opt stack 0
   470  000038                     	ds	2
   471  00003A                     _pulse_time:
   472                           	opt stack 0
   473  00003A                     	ds	2
   474  00003C                     _right_speed:
   475                           	opt stack 0
   476  00003C                     	ds	2
   477  00003E                     _timerValue2:
   478                           	opt stack 0
   479  00003E                     	ds	2
   480  000040                     _MUX_index:
   481                           	opt stack 0
   482  000040                     	ds	1
   483  000041                     _asus:
   484                           	opt stack 0
   485  000041                     	ds	1
   486  000042                     _gianni:
   487                           	opt stack 0
   488  000042                     	ds	1
   489  000043                     _steering_correction:
   490                           	opt stack 0
   491  000043                     	ds	1
   492                           tblptru	equ	0xFF8
   493                           tblptrh	equ	0xFF7
   494                           tblptrl	equ	0xFF6
   495                           tablat	equ	0xFF5
   496                           postinc0	equ	0xFEE
   497                           wreg	equ	0xFE8
   498                           postdec1	equ	0xFE5
   499                           fsr1l	equ	0xFE1
   500                           
   501                           	psect	dataCOMRAM
   502  000046                     __pdataCOMRAM:
   503                           	opt stack 0
   504  000046                     _spazio_parcheggio:
   505                           	opt stack 0
   506  000046                     	ds	2
   507                           tblptru	equ	0xFF8
   508                           tblptrh	equ	0xFF7
   509                           tblptrl	equ	0xFF6
   510                           tablat	equ	0xFF5
   511                           postinc0	equ	0xFEE
   512                           wreg	equ	0xFE8
   513                           postdec1	equ	0xFE5
   514                           fsr1l	equ	0xFE1
   515                           
   516                           	psect	bssBANK0
   517  0000D7                     __pbssBANK0:
   518                           	opt stack 0
   519  0000D7                     _alignment_gap:
   520                           	opt stack 0
   521  0000D7                     	ds	4
   522  0000DB                     _z:
   523                           	opt stack 0
   524  0000DB                     	ds	4
   525  0000DF                     _actual_speed:
   526                           	opt stack 0
   527  0000DF                     	ds	2
   528  0000E1                     _clock_counter_reference:
   529                           	opt stack 0
   530  0000E1                     	ds	2
   531  0000E3                     _distance_average:
   532                           	opt stack 0
   533  0000E3                     	ds	2
   534  0000E5                     _set_speed:
   535                           	opt stack 0
   536  0000E5                     	ds	2
   537                           tblptru	equ	0xFF8
   538                           tblptrh	equ	0xFF7
   539                           tblptrl	equ	0xFF6
   540                           tablat	equ	0xFF5
   541                           postinc0	equ	0xFEE
   542                           wreg	equ	0xFE8
   543                           postdec1	equ	0xFE5
   544                           fsr1l	equ	0xFE1
   545                           
   546                           	psect	dataBANK0
   547  0000E7                     __pdataBANK0:
   548                           	opt stack 0
   549  0000E7                     _delay_quartz_frequency_value:
   550                           	opt stack 0
   551  0000E7                     	ds	1
   552                           tblptru	equ	0xFF8
   553                           tblptrh	equ	0xFF7
   554                           tblptrl	equ	0xFF6
   555                           tablat	equ	0xFF5
   556                           postinc0	equ	0xFEE
   557                           wreg	equ	0xFE8
   558                           postdec1	equ	0xFE5
   559                           fsr1l	equ	0xFE1
   560                           
   561                           	psect	bssBANK1
   562  000100                     __pbssBANK1:
   563                           	opt stack 0
   564  000100                     _MUX_select:
   565                           	opt stack 0
   566  000100                     	ds	8
   567  000108                     _data_speed_rx:
   568                           	opt stack 0
   569  000108                     	ds	8
   570  000110                     _distance_set:
   571                           	opt stack 0
   572  000110                     	ds	8
   573  000118                     _Pminimo:
   574                           	opt stack 0
   575  000118                     	ds	4
   576  00011C                     _alfa:
   577                           	opt stack 0
   578  00011C                     	ds	4
   579  000120                     _beta:
   580                           	opt stack 0
   581  000120                     	ds	4
   582  000124                     _jjj:
   583                           	opt stack 0
   584  000124                     	ds	4
   585  000128                     _kkk:
   586                           	opt stack 0
   587  000128                     	ds	4
   588  00012C                     _n:
   589                           	opt stack 0
   590  00012C                     	ds	4
   591  000130                     _old_alignment_gap:
   592                           	opt stack 0
   593  000130                     	ds	4
   594  000134                     _prima_sterzata:
   595                           	opt stack 0
   596  000134                     	ds	4
   597  000138                     _x:
   598                           	opt stack 0
   599  000138                     	ds	4
   600  00013C                     _distance:
   601                           	opt stack 0
   602  00013C                     	ds	2
   603  00013E                     _errno:
   604                           	opt stack 0
   605  00013E                     	ds	2
   606  000140                     _msg:
   607                           	opt stack 0
   608  000140                     	ds	15
   609  00014F                     _data:
   610                           	opt stack 0
   611  00014F                     	ds	8
   612  000157                     _data_brake:
   613                           	opt stack 0
   614  000157                     	ds	8
   615  00015F                     _data_correction:
   616                           	opt stack 0
   617  00015F                     	ds	8
   618  000167                     _data_speed:
   619                           	opt stack 0
   620  000167                     	ds	8
   621  00016F                     _data_steering:
   622                           	opt stack 0
   623  00016F                     	ds	8
   624  000177                     _data_test:
   625                           	opt stack 0
   626  000177                     	ds	8
   627                           tblptru	equ	0xFF8
   628                           tblptrh	equ	0xFF7
   629                           tblptrl	equ	0xFF6
   630                           tablat	equ	0xFF5
   631                           postinc0	equ	0xFEE
   632                           wreg	equ	0xFE8
   633                           postdec1	equ	0xFE5
   634                           fsr1l	equ	0xFE1
   635                           
   636                           	psect	dataBANK1
   637  0001D4                     __pdataBANK1:
   638                           	opt stack 0
   639  0001D4                     _bordo:
   640                           	opt stack 0
   641  0001D4                     	ds	4
   642  0001D8                     _larghezza:
   643                           	opt stack 0
   644  0001D8                     	ds	4
   645  0001DC                     _raggio:
   646                           	opt stack 0
   647  0001DC                     	ds	4
   648                           tblptru	equ	0xFF8
   649                           tblptrh	equ	0xFF7
   650                           tblptrl	equ	0xFF6
   651                           tablat	equ	0xFF5
   652                           postinc0	equ	0xFEE
   653                           wreg	equ	0xFE8
   654                           postdec1	equ	0xFE5
   655                           fsr1l	equ	0xFE1
   656                           
   657                           	psect	cstackBANK1
   658  00017F                     __pcstackBANK1:
   659                           	opt stack 0
   660  00017F                     sqrt@sign:
   661                           	opt stack 0
   662  00017F                     atan@y:
   663                           	opt stack 0
   664  00017F                     sin@y:
   665                           	opt stack 0
   666                           
   667                           ; 4 bytes @ 0x0
   668  00017F                     	ds	1
   669  000180                     sqrt@i:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x1
   673  000180                     	ds	1
   674  000181                     sqrt@tfrac:
   675                           	opt stack 0
   676                           
   677                           ; 4 bytes @ 0x2
   678  000181                     	ds	2
   679  000183                     atan@x:
   680                           	opt stack 0
   681  000183                     _sin$3750:
   682                           	opt stack 0
   683                           
   684                           ; 4 bytes @ 0x4
   685  000183                     	ds	2
   686  000185                     sqrt@p:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x6
   690  000185                     	ds	1
   691  000186                     sqrt@grs:
   692                           	opt stack 0
   693                           
   694                           ; 4 bytes @ 0x7
   695  000186                     	ds	1
   696  000187                     atan@recip:
   697                           	opt stack 0
   698  000187                     sin@x2:
   699                           	opt stack 0
   700                           
   701                           ; 4 bytes @ 0x8
   702  000187                     	ds	1
   703  000188                     atan@val_squared:
   704                           	opt stack 0
   705                           
   706                           ; 4 bytes @ 0x9
   707  000188                     	ds	2
   708  00018A                     sqrt@exp:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0xB
   712  00018A                     	ds	1
   713  00018B                     sin@sgn:
   714                           	opt stack 0
   715                           
   716                           ; 1 bytes @ 0xC
   717  00018B                     	ds	1
   718  00018C                     atan@val:
   719                           	opt stack 0
   720  00018C                     sqrt@root:
   721                           	opt stack 0
   722                           
   723                           ; 4 bytes @ 0xD
   724  00018C                     	ds	4
   725  000190                     sqrt@frac:
   726                           	opt stack 0
   727                           
   728                           ; 4 bytes @ 0x11
   729  000190                     	ds	4
   730  000194                     ?_asin:
   731                           	opt stack 0
   732  000194                     asin@x:
   733                           	opt stack 0
   734                           
   735                           ; 4 bytes @ 0x15
   736  000194                     	ds	4
   737  000198                     asin@sgn:
   738                           	opt stack 0
   739                           
   740                           ; 4 bytes @ 0x19
   741  000198                     	ds	4
   742  00019C                     _asin$3748:
   743                           	opt stack 0
   744                           
   745                           ; 4 bytes @ 0x1D
   746  00019C                     	ds	4
   747  0001A0                     _asin$3747:
   748                           	opt stack 0
   749                           
   750                           ; 4 bytes @ 0x21
   751  0001A0                     	ds	4
   752  0001A4                     asin@y:
   753                           	opt stack 0
   754                           
   755                           ; 4 bytes @ 0x25
   756  0001A4                     	ds	4
   757  0001A8                     _asin$3746:
   758                           	opt stack 0
   759                           
   760                           ; 4 bytes @ 0x29
   761  0001A8                     	ds	4
   762  0001AC                     ??_park_search:
   763  0001AC                     ?_cos:
   764                           	opt stack 0
   765  0001AC                     cos@f:
   766                           	opt stack 0
   767                           
   768                           ; 4 bytes @ 0x2D
   769  0001AC                     	ds	4
   770  0001B0                     _cos$3749:
   771                           	opt stack 0
   772                           
   773                           ; 4 bytes @ 0x31
   774  0001B0                     	ds	4
   775  0001B4                     _matematica$3738:
   776                           	opt stack 0
   777                           
   778                           ; 4 bytes @ 0x35
   779  0001B4                     	ds	4
   780  0001B8                     _matematica$3739:
   781                           	opt stack 0
   782                           
   783                           ; 4 bytes @ 0x39
   784  0001B8                     	ds	4
   785  0001BC                     _matematica$3740:
   786                           	opt stack 0
   787                           
   788                           ; 4 bytes @ 0x3D
   789  0001BC                     	ds	4
   790  0001C0                     _matematica$3741:
   791                           	opt stack 0
   792                           
   793                           ; 4 bytes @ 0x41
   794  0001C0                     	ds	4
   795  0001C4                     _matematica$3742:
   796                           	opt stack 0
   797                           
   798                           ; 4 bytes @ 0x45
   799  0001C4                     	ds	4
   800  0001C8                     _matematica$3743:
   801                           	opt stack 0
   802                           
   803                           ; 4 bytes @ 0x49
   804  0001C8                     	ds	4
   805  0001CC                     _matematica$3744:
   806                           	opt stack 0
   807                           
   808                           ; 4 bytes @ 0x4D
   809  0001CC                     	ds	4
   810  0001D0                     _matematica$3745:
   811                           	opt stack 0
   812                           
   813                           ; 4 bytes @ 0x51
   814  0001D0                     	ds	4
   815                           tblptru	equ	0xFF8
   816                           tblptrh	equ	0xFF7
   817                           tblptrl	equ	0xFF6
   818                           tablat	equ	0xFF5
   819                           postinc0	equ	0xFEE
   820                           wreg	equ	0xFE8
   821                           postdec1	equ	0xFE5
   822                           fsr1l	equ	0xFE1
   823                           
   824                           	psect	cstackBANK0
   825  000060                     __pcstackBANK0:
   826                           	opt stack 0
   827  000060                     ?___lwdiv:
   828                           	opt stack 0
   829  000060                     ___lwdiv@dividend:
   830                           	opt stack 0
   831                           
   832                           ; 2 bytes @ 0x0
   833  000060                     	ds	2
   834  000062                     ___lwdiv@divisor:
   835                           	opt stack 0
   836                           
   837                           ; 2 bytes @ 0x2
   838  000062                     	ds	2
   839  000064                     ___lwdiv@counter:
   840                           	opt stack 0
   841                           
   842                           ; 1 bytes @ 0x4
   843  000064                     	ds	1
   844  000065                     ___lwdiv@quotient:
   845                           	opt stack 0
   846                           
   847                           ; 2 bytes @ 0x5
   848  000065                     	ds	2
   849  000067                     ??_ISR_Alta:
   850                           
   851                           ; 0 bytes @ 0x7
   852  000067                     	ds	16
   853  000077                     ??_can_interpreter:
   854  000077                     ?_abs:
   855                           	opt stack 0
   856  000077                     ?___wmul:
   857                           	opt stack 0
   858  000077                     ?___fldiv:
   859                           	opt stack 0
   860  000077                     ?___fltol:
   861                           	opt stack 0
   862  000077                     CANOperationMode@mode:
   863                           	opt stack 0
   864  000077                     _CANisTxReady$2845:
   865                           	opt stack 0
   866  000077                     ___wmul@multiplier:
   867                           	opt stack 0
   868  000077                     abs@a:
   869                           	opt stack 0
   870  000077                     CANsendMessage@identifier:
   871                           	opt stack 0
   872  000077                     CANSetMask@mask:
   873                           	opt stack 0
   874  000077                     CANSetFilter@filter:
   875                           	opt stack 0
   876  000077                     ___fltol@f1:
   877                           	opt stack 0
   878  000077                     ___fldiv@b:
   879                           	opt stack 0
   880  000077                     frexp@value:
   881                           	opt stack 0
   882                           
   883                           ; 4 bytes @ 0x17
   884  000077                     	ds	2
   885  000079                     ??_abs:
   886  000079                     ___wmul@multiplicand:
   887                           	opt stack 0
   888                           
   889                           ; 2 bytes @ 0x19
   890  000079                     	ds	2
   891  00007B                     ??___fltol:
   892  00007B                     CANSetMask@type:
   893                           	opt stack 0
   894  00007B                     CANSetFilter@type:
   895                           	opt stack 0
   896  00007B                     CANsendMessage@data:
   897                           	opt stack 0
   898  00007B                     ___wmul@product:
   899                           	opt stack 0
   900  00007B                     frexp@eptr:
   901                           	opt stack 0
   902  00007B                     ___fldiv@a:
   903                           	opt stack 0
   904                           
   905                           ; 4 bytes @ 0x1B
   906  00007B                     	ds	1
   907  00007C                     ??_CANSetMask:
   908  00007C                     ??_CANSetFilter:
   909                           
   910                           ; 0 bytes @ 0x1C
   911  00007C                     	ds	1
   912  00007D                     ??_frexp:
   913  00007D                     CANsendMessage@dataLength:
   914                           	opt stack 0
   915  00007D                     delay_ms@value_ms:
   916                           	opt stack 0
   917                           
   918                           ; 2 bytes @ 0x1D
   919  00007D                     	ds	1
   920  00007E                     CANsendMessage@flags:
   921                           	opt stack 0
   922                           
   923                           ; 1 bytes @ 0x1E
   924  00007E                     	ds	1
   925  00007F                     ??___fldiv:
   926  00007F                     ??_CANsendMessage:
   927  00007F                     delay_s@value_s:
   928                           	opt stack 0
   929  00007F                     ___fltol@sign1:
   930                           	opt stack 0
   931                           
   932                           ; 1 bytes @ 0x1F
   933  00007F                     	ds	1
   934  000080                     CANSetMask@numBuffer:
   935                           	opt stack 0
   936  000080                     CANSetFilter@numBuffer:
   937                           	opt stack 0
   938  000080                     delay_s@repeat_loop:
   939                           	opt stack 0
   940  000080                     ___fltol@exp1:
   941                           	opt stack 0
   942                           
   943                           ; 1 bytes @ 0x20
   944  000080                     	ds	1
   945  000081                     ?___xxtofl:
   946                           	opt stack 0
   947  000081                     CANSetMask@tamp:
   948                           	opt stack 0
   949  000081                     CANSetFilter@tamp:
   950                           	opt stack 0
   951  000081                     ___xxtofl@val:
   952                           	opt stack 0
   953                           
   954                           ; 4 bytes @ 0x21
   955  000081                     	ds	2
   956  000083                     ___fldiv@sign:
   957                           	opt stack 0
   958  000083                     CANsendMessage@tamp:
   959                           	opt stack 0
   960                           
   961                           ; 4 bytes @ 0x23
   962  000083                     	ds	1
   963  000084                     ___fldiv@rem:
   964                           	opt stack 0
   965                           
   966                           ; 4 bytes @ 0x24
   967  000084                     	ds	1
   968  000085                     ??___xxtofl:
   969  000085                     CANInitialize@phaseSeg1:
   970                           	opt stack 0
   971                           
   972                           ; 1 bytes @ 0x25
   973  000085                     	ds	1
   974  000086                     CANInitialize@phaseSeg2:
   975                           	opt stack 0
   976                           
   977                           ; 1 bytes @ 0x26
   978  000086                     	ds	1
   979  000087                     can_send@data_correction1:
   980                           	opt stack 0
   981  000087                     CANInitialize@SJW:
   982                           	opt stack 0
   983                           
   984                           ; 1 bytes @ 0x27
   985  000087                     	ds	1
   986  000088                     CANInitialize@BRP:
   987                           	opt stack 0
   988  000088                     ___fldiv@new_exp:
   989                           	opt stack 0
   990                           
   991                           ; 2 bytes @ 0x28
   992  000088                     	ds	1
   993  000089                     CANInitialize@flags:
   994                           	opt stack 0
   995  000089                     ___xxtofl@sign:
   996                           	opt stack 0
   997                           
   998                           ; 1 bytes @ 0x29
   999  000089                     	ds	1
  1000  00008A                     ??_CANInitialize:
  1001  00008A                     ___xxtofl@exp:
  1002                           	opt stack 0
  1003  00008A                     ___fldiv@grs:
  1004                           	opt stack 0
  1005                           
  1006                           ; 4 bytes @ 0x2A
  1007  00008A                     	ds	1
  1008  00008B                     ___xxtofl@arg:
  1009                           	opt stack 0
  1010                           
  1011                           ; 4 bytes @ 0x2B
  1012  00008B                     	ds	3
  1013  00008E                     CANInitialize@propSeg:
  1014                           	opt stack 0
  1015  00008E                     ___fldiv@bexp:
  1016                           	opt stack 0
  1017                           
  1018                           ; 1 bytes @ 0x2E
  1019  00008E                     	ds	1
  1020  00008F                     CANInitialize@FilterConfig1:
  1021                           	opt stack 0
  1022  00008F                     ___fldiv@aexp:
  1023                           	opt stack 0
  1024                           
  1025                           ; 1 bytes @ 0x2F
  1026  00008F                     	ds	1
  1027  000090                     ?___flmul:
  1028                           	opt stack 0
  1029  000090                     CANInitialize@FilterConfig2:
  1030                           	opt stack 0
  1031  000090                     ___flmul@b:
  1032                           	opt stack 0
  1033                           
  1034                           ; 4 bytes @ 0x30
  1035  000090                     	ds	1
  1036  000091                     
  1037                           ; 0 bytes @ 0x31
  1038  000091                     	ds	3
  1039  000094                     ___flmul@a:
  1040                           	opt stack 0
  1041                           
  1042                           ; 4 bytes @ 0x34
  1043  000094                     	ds	4
  1044  000098                     ??___flmul:
  1045                           
  1046                           ; 0 bytes @ 0x38
  1047  000098                     	ds	4
  1048  00009C                     ___flmul@sign:
  1049                           	opt stack 0
  1050                           
  1051                           ; 1 bytes @ 0x3C
  1052  00009C                     	ds	1
  1053  00009D                     ___flmul@aexp:
  1054                           	opt stack 0
  1055                           
  1056                           ; 1 bytes @ 0x3D
  1057  00009D                     	ds	1
  1058  00009E                     ___flmul@grs:
  1059                           	opt stack 0
  1060                           
  1061                           ; 4 bytes @ 0x3E
  1062  00009E                     	ds	4
  1063  0000A2                     ___flmul@bexp:
  1064                           	opt stack 0
  1065                           
  1066                           ; 1 bytes @ 0x42
  1067  0000A2                     	ds	1
  1068  0000A3                     ___flmul@prod:
  1069                           	opt stack 0
  1070                           
  1071                           ; 4 bytes @ 0x43
  1072  0000A3                     	ds	4
  1073  0000A7                     ___flmul@temp:
  1074                           	opt stack 0
  1075                           
  1076                           ; 2 bytes @ 0x47
  1077  0000A7                     	ds	2
  1078  0000A9                     ?___flneg:
  1079                           	opt stack 0
  1080  0000A9                     ___flneg@f1:
  1081                           	opt stack 0
  1082                           
  1083                           ; 4 bytes @ 0x49
  1084  0000A9                     	ds	4
  1085  0000AD                     ?___fladd:
  1086                           	opt stack 0
  1087  0000AD                     ?_fabs:
  1088                           	opt stack 0
  1089  0000AD                     fabs@d:
  1090                           	opt stack 0
  1091  0000AD                     ___fladd@b:
  1092                           	opt stack 0
  1093                           
  1094                           ; 4 bytes @ 0x4D
  1095  0000AD                     	ds	4
  1096  0000B1                     ___flge@ff1:
  1097                           	opt stack 0
  1098  0000B1                     ___fladd@a:
  1099                           	opt stack 0
  1100                           
  1101                           ; 4 bytes @ 0x51
  1102  0000B1                     	ds	4
  1103  0000B5                     ??___fladd:
  1104  0000B5                     ___flge@ff2:
  1105                           	opt stack 0
  1106                           
  1107                           ; 4 bytes @ 0x55
  1108  0000B5                     	ds	4
  1109  0000B9                     ??___flge:
  1110                           
  1111                           ; 0 bytes @ 0x59
  1112  0000B9                     	ds	4
  1113  0000BD                     ___fladd@signs:
  1114                           	opt stack 0
  1115                           
  1116                           ; 1 bytes @ 0x5D
  1117  0000BD                     	ds	1
  1118  0000BE                     ___fladd@aexp:
  1119                           	opt stack 0
  1120                           
  1121                           ; 1 bytes @ 0x5E
  1122  0000BE                     	ds	1
  1123  0000BF                     ___fladd@bexp:
  1124                           	opt stack 0
  1125                           
  1126                           ; 1 bytes @ 0x5F
  1127  0000BF                     	ds	1
  1128  0000C0                     ___fladd@grs:
  1129                           	opt stack 0
  1130                           
  1131                           ; 1 bytes @ 0x60
  1132  0000C0                     	ds	1
  1133  0000C1                     ?_sqrt:
  1134                           	opt stack 0
  1135  0000C1                     ?_eval_poly:
  1136                           	opt stack 0
  1137  0000C1                     ?_floor:
  1138                           	opt stack 0
  1139  0000C1                     eval_poly@x:
  1140                           	opt stack 0
  1141  0000C1                     sqrt@a:
  1142                           	opt stack 0
  1143  0000C1                     floor@x:
  1144                           	opt stack 0
  1145                           
  1146                           ; 4 bytes @ 0x61
  1147  0000C1                     	ds	4
  1148  0000C5                     ??_sqrt:
  1149  0000C5                     eval_poly@d:
  1150                           	opt stack 0
  1151  0000C5                     floor@i:
  1152                           	opt stack 0
  1153                           
  1154                           ; 4 bytes @ 0x65
  1155  0000C5                     	ds	2
  1156  0000C7                     eval_poly@n:
  1157                           	opt stack 0
  1158                           
  1159                           ; 2 bytes @ 0x67
  1160  0000C7                     	ds	2
  1161  0000C9                     ??_eval_poly:
  1162  0000C9                     floor@expon:
  1163                           	opt stack 0
  1164                           
  1165                           ; 2 bytes @ 0x69
  1166  0000C9                     	ds	2
  1167  0000CB                     ?___flsub:
  1168                           	opt stack 0
  1169  0000CB                     ___flsub@b:
  1170                           	opt stack 0
  1171                           
  1172                           ; 4 bytes @ 0x6B
  1173  0000CB                     	ds	2
  1174  0000CD                     eval_poly@res:
  1175                           	opt stack 0
  1176                           
  1177                           ; 4 bytes @ 0x6D
  1178  0000CD                     	ds	2
  1179  0000CF                     ___flsub@a:
  1180                           	opt stack 0
  1181                           
  1182                           ; 4 bytes @ 0x6F
  1183  0000CF                     	ds	2
  1184  0000D1                     ?_atan:
  1185                           	opt stack 0
  1186  0000D1                     atan@f:
  1187                           	opt stack 0
  1188                           
  1189                           ; 4 bytes @ 0x71
  1190  0000D1                     	ds	2
  1191  0000D3                     ?_sin:
  1192                           	opt stack 0
  1193  0000D3                     sin@f:
  1194                           	opt stack 0
  1195                           
  1196                           ; 4 bytes @ 0x73
  1197  0000D3                     	ds	2
  1198  0000D5                     ??_parallelo:
  1199  0000D5                     
  1200                           ; 0 bytes @ 0x75
  1201  0000D5                     	ds	2
  1202  0000D7                     tblptru	equ	0xFF8
  1203                           tblptrh	equ	0xFF7
  1204                           tblptrl	equ	0xFF6
  1205                           tablat	equ	0xFF5
  1206                           postinc0	equ	0xFEE
  1207                           wreg	equ	0xFE8
  1208                           postdec1	equ	0xFE5
  1209                           fsr1l	equ	0xFE1
  1210                           
  1211                           ; 0 bytes @ 0x77
  1212                           
  1213                           	psect	cstackCOMRAM
  1214  000001                     __pcstackCOMRAM:
  1215                           	opt stack 0
  1216  000001                     CANreceiveMessage@msg:
  1217                           	opt stack 0
  1218                           
  1219                           ; 2 bytes @ 0x0
  1220  000001                     	ds	2
  1221  000003                     ??_CANreceiveMessage:
  1222                           
  1223                           ; 0 bytes @ 0x2
  1224  000003                     	ds	8
  1225  00000B                     CANreceiveMessage@error:
  1226                           	opt stack 0
  1227                           
  1228                           ; 1 bytes @ 0xA
  1229  00000B                     	ds	1
  1230  00000C                     CANreceiveMessage@tamp:
  1231                           	opt stack 0
  1232                           
  1233                           ; 1 bytes @ 0xB
  1234  00000C                     	ds	1
  1235  00000D                     ??_ISR_Bassa:
  1236                           
  1237                           ; 0 bytes @ 0xC
  1238  00000D                     	ds	21
  1239  000022                     ISR_Bassa@gigi:
  1240                           	opt stack 0
  1241                           
  1242                           ; 1 bytes @ 0x21
  1243  000022                     	ds	1
  1244  000023                     ISR_Bassa@i:
  1245                           	opt stack 0
  1246                           
  1247                           ; 1 bytes @ 0x22
  1248  000023                     	ds	1
  1249                           tblptru	equ	0xFF8
  1250                           tblptrh	equ	0xFF7
  1251                           tblptrl	equ	0xFF6
  1252                           tablat	equ	0xFF5
  1253                           postinc0	equ	0xFEE
  1254                           wreg	equ	0xFE8
  1255                           postdec1	equ	0xFE5
  1256                           fsr1l	equ	0xFE1
  1257                           
  1258 ;;
  1259 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1260 ;;
  1261 ;; *************** function _main *****************
  1262 ;; Defined at:
  1263 ;;		line 186 in file "parcheggio.c"
  1264 ;; Parameters:    Size  Location     Type
  1265 ;;		None
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;		None
  1268 ;; Return value:  Size  Location     Type
  1269 ;;		None               void
  1270 ;; Registers used:
  1271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1281 ;;Total ram usage:        0 bytes
  1282 ;; Hardware stack levels required when called:   10
  1283 ;; This function calls:
  1284 ;;		_can_interpreter
  1285 ;;		_configurazione
  1286 ;;		_park_routine
  1287 ;;		_park_search
  1288 ;; This function is called by:
  1289 ;;		Startup code after reset
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           
  1293                           	psect	text0
  1294  005A34                     __ptext0:
  1295                           	opt stack 0
  1296  005A34                     _main:
  1297                           	opt stack 21
  1298                           
  1299                           ;parcheggio.c: 187: MUX_select[0] = 0b00000000;
  1300                           
  1301                           ; BSR set to: 15
  1302                           ;incstack = 0
  1303  005A34  0E00               	movlw	0
  1304  005A36  0101               	movlb	1	; () banked
  1305  005A38  6F00               	movwf	_MUX_select& (0+255),b
  1306                           
  1307                           ;parcheggio.c: 188: MUX_select[1] = 0b00000001;
  1308  005A3A  0E01               	movlw	1
  1309  005A3C  0101               	movlb	1	; () banked
  1310  005A3E  6F01               	movwf	(_MUX_select+1)& (0+255),b
  1311                           
  1312                           ;parcheggio.c: 189: MUX_select[2] = 0b00000010;
  1313  005A40  0E02               	movlw	2
  1314  005A42  0101               	movlb	1	; () banked
  1315  005A44  6F02               	movwf	(_MUX_select+2)& (0+255),b
  1316                           
  1317                           ;parcheggio.c: 190: MUX_select[3] = 0b00000011;
  1318  005A46  0E03               	movlw	3
  1319  005A48  0101               	movlb	1	; () banked
  1320  005A4A  6F03               	movwf	(_MUX_select+3)& (0+255),b
  1321                           
  1322                           ;parcheggio.c: 191: MUX_select[4] = 0b00000100;
  1323  005A4C  0E04               	movlw	4
  1324  005A4E  0101               	movlb	1	; () banked
  1325  005A50  6F04               	movwf	(_MUX_select+4)& (0+255),b
  1326                           
  1327                           ;parcheggio.c: 192: MUX_select[5] = 0b00000101;
  1328  005A52  0E05               	movlw	5
  1329  005A54  0101               	movlb	1	; () banked
  1330  005A56  6F05               	movwf	(_MUX_select+5)& (0+255),b
  1331                           
  1332                           ;parcheggio.c: 193: MUX_select[6] = 0b00000110;
  1333  005A58  0E06               	movlw	6
  1334  005A5A  0101               	movlb	1	; () banked
  1335  005A5C  6F06               	movwf	(_MUX_select+6)& (0+255),b
  1336                           
  1337                           ;parcheggio.c: 194: MUX_select[7] = 0b00000111;
  1338  005A5E  0E07               	movlw	7
  1339  005A60  0101               	movlb	1	; () banked
  1340  005A62  6F07               	movwf	(_MUX_select+7)& (0+255),b
  1341                           
  1342                           ; BSR set to: 1
  1343                           ;parcheggio.c: 195: configurazione();
  1344  005A64  ECBA  F02C         	call	_configurazione	;wreg free
  1345                           
  1346                           ;parcheggio.c: 196: PORTBbits.RB4 = 0;
  1347  005A68  9881               	bcf	3969,4,c	;volatile
  1348                           
  1349                           ;parcheggio.c: 197: PORTBbits.RB5 = 0;
  1350  005A6A  9A81               	bcf	3969,5,c	;volatile
  1351                           
  1352                           ;parcheggio.c: 198: PORTBbits.RB6 = 0;
  1353  005A6C  9C81               	bcf	3969,6,c	;volatile
  1354                           
  1355                           ;parcheggio.c: 199: request_sent = 0;
  1356  005A6E  9045               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1357                           
  1358                           ;parcheggio.c: 200: start_operation = 0;
  1359  005A70  9445               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1360  005A72                     l7066:
  1361                           
  1362                           ;parcheggio.c: 215: park_search();
  1363  005A72  EC6B  F026         	call	_park_search	;wreg free
  1364                           
  1365                           ;parcheggio.c: 216: can_interpreter();
  1366  005A76  ECF0  F02C         	call	_can_interpreter	;wreg free
  1367                           
  1368                           ;parcheggio.c: 217: park_routine();
  1369  005A7A  EC3F  F027         	call	_park_routine	;wreg free
  1370  005A7E  D7F9               	goto	l7066
  1371  005A80                     __end_of_main:
  1372                           	opt stack 0
  1373                           tblptru	equ	0xFF8
  1374                           tblptrh	equ	0xFF7
  1375                           tblptrl	equ	0xFF6
  1376                           tablat	equ	0xFF5
  1377                           postinc0	equ	0xFEE
  1378                           wreg	equ	0xFE8
  1379                           postdec1	equ	0xFE5
  1380                           fsr1l	equ	0xFE1
  1381                           
  1382 ;; *************** function _park_search *****************
  1383 ;; Defined at:
  1384 ;;		line 221 in file "parcheggio.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;		None
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;		None
  1389 ;; Return value:  Size  Location     Type
  1390 ;;		None               void
  1391 ;; Registers used:
  1392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1400 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1401 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1402 ;;Total ram usage:        2 bytes
  1403 ;; Hardware stack levels used:    1
  1404 ;; Hardware stack levels required when called:    9
  1405 ;; This function calls:
  1406 ;;		_CANisTxReady
  1407 ;;		_CANsendMessage
  1408 ;;		___xxtofl
  1409 ;;		_abs
  1410 ;;		_parallelo
  1411 ;; This function is called by:
  1412 ;;		_main
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           	psect	text1
  1417  004CD6                     __ptext1:
  1418                           	opt stack 0
  1419  004CD6                     _park_search:
  1420                           	opt stack 21
  1421                           
  1422                           ;parcheggio.c: 222: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1423                           
  1424                           ;incstack = 0
  1425  004CD6  D0CE               	goto	l718
  1426  004CD8                     l6894:
  1427                           
  1428                           ;parcheggio.c: 223: parallelo();
  1429  004CD8  EC32  F022         	call	_parallelo	;wreg free
  1430                           
  1431                           ;parcheggio.c: 224: if (sensor_distance[0] > 50) {
  1432  004CDC  5025               	movf	_sensor_distance+1,w,c	;volatile
  1433  004CDE  E104               	bnz	u8760
  1434  004CE0  0E33               	movlw	51
  1435  004CE2  5C24               	subwf	_sensor_distance,w,c	;volatile
  1436  004CE4  A0D8               	btfss	status,0,c
  1437  004CE6  D02A               	goto	l720
  1438  004CE8                     u8760:
  1439                           
  1440                           ;parcheggio.c: 225: if (request_sent == 0) {
  1441  004CE8  B045               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1442  004CEA  D057               	goto	l6914
  1443  004CEC                     l6902:
  1444  004CEC  EC03  F02E         	call	_CANisTxReady	;wreg free
  1445  004CF0  0900               	iorlw	0
  1446  004CF2  B4D8               	btfsc	status,2,c
  1447  004CF4  D7FB               	goto	l6902
  1448                           
  1449                           ;parcheggio.c: 227: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1450  004CF6  0E08               	movlw	8
  1451  004CF8  0100               	movlb	0	; () banked
  1452  004CFA  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1453  004CFC  0E00               	movlw	0
  1454  004CFE  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1455  004D00  0E00               	movlw	0
  1456  004D02  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1457  004D04  0E00               	movlw	0
  1458  004D06  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1459  004D08  0E4F               	movlw	low _data
  1460  004D0A  0100               	movlb	0	; () banked
  1461  004D0C  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1462  004D0E  0E01               	movlw	high _data
  1463  004D10  0100               	movlb	0	; () banked
  1464  004D12  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1465  004D14  0E08               	movlw	8
  1466  004D16  0100               	movlb	0	; () banked
  1467  004D18  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1468  004D1A  0EFC               	movlw	252
  1469  004D1C  0100               	movlb	0	; () banked
  1470  004D1E  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1471  004D20  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1472                           
  1473                           ;parcheggio.c: 228: request_sent = 1;
  1474  004D24  8045               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1475                           
  1476                           ;parcheggio.c: 229: alignment_gap = 0;
  1477  004D26  0E00               	movlw	0
  1478  004D28  0100               	movlb	0	; () banked
  1479  004D2A  6FD7               	movwf	_alignment_gap& (0+255),b
  1480  004D2C  0E00               	movlw	0
  1481  004D2E  6FD8               	movwf	(_alignment_gap+1)& (0+255),b
  1482  004D30  0E00               	movlw	0
  1483  004D32  6FD9               	movwf	(_alignment_gap+2)& (0+255),b
  1484  004D34  0E00               	movlw	0
  1485  004D36  6FDA               	movwf	(_alignment_gap+3)& (0+255),b
  1486                           
  1487                           ; BSR set to: 0
  1488                           ;parcheggio.c: 230: LATBbits.LATB4 = 1;
  1489  004D38  888A               	bsf	3978,4,c	;volatile
  1490                           
  1491                           ; BSR set to: 0
  1492                           ;parcheggio.c: 231: }
  1493                           ;parcheggio.c: 232: } else {
  1494  004D3A  D02F               	goto	l6914
  1495  004D3C                     l720:
  1496                           
  1497                           ;parcheggio.c: 233: LATBbits.LATB4 = 0;
  1498  004D3C  988A               	bcf	3978,4,c	;volatile
  1499                           
  1500                           ;parcheggio.c: 234: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1501  004D3E  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1502  004D42  CFDE F1AC          	movff	postinc2,??_park_search
  1503  004D46  CFDD F1AD          	movff	postdec2,??_park_search+1
  1504  004D4A  0101               	movlb	1	; () banked
  1505  004D4C  1FAC               	comf	??_park_search& (0+255),f,b
  1506  004D4E  1FAD               	comf	(??_park_search+1)& (0+255),f,b
  1507  004D50  4BAC               	infsnz	??_park_search& (0+255),f,b
  1508  004D52  2BAD               	incf	(??_park_search+1)& (0+255),f,b
  1509  004D54  5024               	movf	_sensor_distance,w,c	;volatile
  1510  004D56  0101               	movlb	1	; () banked
  1511  004D58  25AC               	addwf	??_park_search& (0+255),w,b
  1512  004D5A  0100               	movlb	0	; () banked
  1513  004D5C  6F77               	movwf	abs@a& (0+255),b
  1514  004D5E  5025               	movf	_sensor_distance+1,w,c	;volatile
  1515  004D60  0101               	movlb	1	; () banked
  1516  004D62  21AD               	addwfc	(??_park_search+1)& (0+255),w,b
  1517  004D64  0100               	movlb	0	; () banked
  1518  004D66  6F78               	movwf	(abs@a+1)& (0+255),b
  1519  004D68  ECD7  F02D         	call	_abs	;wreg free
  1520  004D6C  0100               	movlb	0	; () banked
  1521  004D6E  C077  F081         	movff	?_abs,___xxtofl@val
  1522  004D72  0100               	movlb	0	; () banked
  1523  004D74  C078  F082         	movff	?_abs+1,___xxtofl@val+1
  1524  004D78  0100               	movlb	0	; () banked
  1525  004D7A  0E00               	movlw	0
  1526  004D7C  BF82               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1527  004D7E  0EFF               	movlw	-1
  1528  004D80  6F83               	movwf	(___xxtofl@val+2)& (0+255),b
  1529  004D82  6F84               	movwf	(___xxtofl@val+3)& (0+255),b
  1530  004D84  0E01               	movlw	1
  1531  004D86  ECA1  F024         	call	___xxtofl
  1532  004D8A  C081  F0D7         	movff	?___xxtofl,_alignment_gap
  1533  004D8E  C082  F0D8         	movff	?___xxtofl+1,_alignment_gap+1
  1534  004D92  C083  F0D9         	movff	?___xxtofl+2,_alignment_gap+2
  1535  004D96  C084  F0DA         	movff	?___xxtofl+3,_alignment_gap+3
  1536  004D9A                     l6914:
  1537                           
  1538                           ;parcheggio.c: 235: }
  1539                           ;parcheggio.c: 236: if ((sensor_distance[0] < 50) && (request_sent == 1)) {
  1540  004D9A  5025               	movf	_sensor_distance+1,w,c	;volatile
  1541  004D9C  E122               	bnz	l6924
  1542  004D9E  0E32               	movlw	50
  1543  004DA0  5C24               	subwf	_sensor_distance,w,c	;volatile
  1544  004DA2  A0D8               	btfss	status,0,c
  1545  004DA4  A045               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1546  004DA6  D01D               	goto	l6924
  1547                           
  1548                           ;parcheggio.c: 237: request_sent = 0;
  1549  004DA8  9045               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1550  004DAA                     l6920:
  1551  004DAA  EC03  F02E         	call	_CANisTxReady	;wreg free
  1552  004DAE  0900               	iorlw	0
  1553  004DB0  B4D8               	btfsc	status,2,c
  1554  004DB2  D7FB               	goto	l6920
  1555                           
  1556                           ;parcheggio.c: 239: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1557  004DB4  0E07               	movlw	7
  1558  004DB6  0100               	movlb	0	; () banked
  1559  004DB8  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1560  004DBA  0E00               	movlw	0
  1561  004DBC  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1562  004DBE  0E00               	movlw	0
  1563  004DC0  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1564  004DC2  0E00               	movlw	0
  1565  004DC4  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1566  004DC6  0E4F               	movlw	low _data
  1567  004DC8  0100               	movlb	0	; () banked
  1568  004DCA  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1569  004DCC  0E01               	movlw	high _data
  1570  004DCE  0100               	movlb	0	; () banked
  1571  004DD0  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1572  004DD2  0E08               	movlw	8
  1573  004DD4  0100               	movlb	0	; () banked
  1574  004DD6  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1575  004DD8  0EFC               	movlw	252
  1576  004DDA  0100               	movlb	0	; () banked
  1577  004DDC  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1578  004DDE  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1579  004DE2                     l6924:
  1580                           
  1581                           ;parcheggio.c: 240: }
  1582                           ;parcheggio.c: 241: if (distance_received == 1) {
  1583  004DE2  A844               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1584  004DE4  D047               	goto	l718
  1585                           
  1586                           ;parcheggio.c: 242: if (distance_average > 55) {
  1587  004DE6  0100               	movlb	0	; () banked
  1588  004DE8  51E4               	movf	(_distance_average+1)& (0+255),w,b	;volatile
  1589  004DEA  E105               	bnz	u8830
  1590  004DEC  0E38               	movlw	56
  1591  004DEE  0100               	movlb	0	; () banked
  1592  004DF0  5DE3               	subwf	_distance_average& (0+255),w,b	;volatile
  1593  004DF2  A0D8               	btfss	status,0,c
  1594  004DF4  D03D               	goto	l731
  1595  004DF6                     u8830:
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;parcheggio.c: 243: PORTBbits.RB5 = 1;
  1599  004DF6  8A81               	bsf	3969,5,c	;volatile
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;parcheggio.c: 244: data[0] = 1;
  1603  004DF8  0E01               	movlw	1
  1604  004DFA  0101               	movlb	1	; () banked
  1605  004DFC  6F4F               	movwf	_data& (0+255),b
  1606                           
  1607                           ; BSR set to: 1
  1608                           ;parcheggio.c: 245: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1609  004DFE  0E0B               	movlw	11
  1610  004E00  0100               	movlb	0	; () banked
  1611  004E02  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1612  004E04  0E00               	movlw	0
  1613  004E06  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1614  004E08  0E00               	movlw	0
  1615  004E0A  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1616  004E0C  0E00               	movlw	0
  1617  004E0E  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1618  004E10  0E4F               	movlw	low _data
  1619  004E12  0100               	movlb	0	; () banked
  1620  004E14  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1621  004E16  0E01               	movlw	high _data
  1622  004E18  0100               	movlb	0	; () banked
  1623  004E1A  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1624  004E1C  0E01               	movlw	1
  1625  004E1E  0100               	movlb	0	; () banked
  1626  004E20  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1627  004E22  0EBC               	movlw	188
  1628  004E24  0100               	movlb	0	; () banked
  1629  004E26  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1630  004E28  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1631                           
  1632                           ;parcheggio.c: 246: if ((request_sent1 == 0)&&(sensor_distance[0] < 40)) {
  1633  004E2C  B245               	btfsc	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1634  004E2E  D022               	goto	l718
  1635  004E30  5025               	movf	_sensor_distance+1,w,c	;volatile
  1636  004E32  E120               	bnz	l718
  1637  004E34  0E28               	movlw	40
  1638  004E36  5C24               	subwf	_sensor_distance,w,c	;volatile
  1639  004E38  B0D8               	btfsc	status,0,c
  1640  004E3A  D01C               	goto	l718
  1641                           
  1642                           ;parcheggio.c: 247: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1643  004E3C  0E08               	movlw	8
  1644  004E3E  0100               	movlb	0	; () banked
  1645  004E40  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1646  004E42  0E00               	movlw	0
  1647  004E44  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1648  004E46  0E00               	movlw	0
  1649  004E48  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1650  004E4A  0E00               	movlw	0
  1651  004E4C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1652  004E4E  0E4F               	movlw	low _data
  1653  004E50  0100               	movlb	0	; () banked
  1654  004E52  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1655  004E54  0E01               	movlw	high _data
  1656  004E56  0100               	movlb	0	; () banked
  1657  004E58  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1658  004E5A  0E08               	movlw	8
  1659  004E5C  0100               	movlb	0	; () banked
  1660  004E5E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1661  004E60  0EFC               	movlw	252
  1662  004E62  0100               	movlb	0	; () banked
  1663  004E64  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1664  004E66  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1665                           
  1666                           ;parcheggio.c: 248: distance_received1 = 0;
  1667  004E6A  9A44               	bcf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  1668                           
  1669                           ;parcheggio.c: 249: request_sent1 = 1;
  1670  004E6C  8245               	bsf	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1671                           
  1672                           ;parcheggio.c: 250: }
  1673                           ;parcheggio.c: 251: } else {
  1674  004E6E  D002               	goto	l718
  1675  004E70                     l731:
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;parcheggio.c: 252: distance_received = 0;
  1679  004E70  9844               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1680                           
  1681                           ;parcheggio.c: 253: PORTBbits.RB5 = 0;
  1682  004E72  9A81               	bcf	3969,5,c	;volatile
  1683  004E74                     l718:
  1684  004E74  A044               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1685  004E76  0012               	return	
  1686  004E78  BA81               	btfsc	3969,5,c	;volatile
  1687  004E7A  0012               	return	
  1688  004E7C  D72D               	goto	l6894
  1689  004E7E                     __end_of_park_search:
  1690                           	opt stack 0
  1691                           tblptru	equ	0xFF8
  1692                           tblptrh	equ	0xFF7
  1693                           tblptrl	equ	0xFF6
  1694                           tablat	equ	0xFF5
  1695                           postinc0	equ	0xFEE
  1696                           wreg	equ	0xFE8
  1697                           postdec1	equ	0xFE5
  1698                           fsr1l	equ	0xFE1
  1699                           postinc2	equ	0xFDE
  1700                           postdec2	equ	0xFDD
  1701                           status	equ	0xFD8
  1702                           
  1703 ;; *************** function _parallelo *****************
  1704 ;; Defined at:
  1705 ;;		line 324 in file "parcheggio.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;		None
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;		None
  1710 ;; Return value:  Size  Location     Type
  1711 ;;		None               void
  1712 ;; Registers used:
  1713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1721 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1722 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1723 ;;Total ram usage:        2 bytes
  1724 ;; Hardware stack levels used:    1
  1725 ;; Hardware stack levels required when called:    8
  1726 ;; This function calls:
  1727 ;;		___fladd
  1728 ;;		___fldiv
  1729 ;;		___flge
  1730 ;;		___flmul
  1731 ;;		___fltol
  1732 ;;		___xxtofl
  1733 ;;		_abs
  1734 ;;		_asin
  1735 ;;		_can_send
  1736 ;;		_sqrt
  1737 ;; This function is called by:
  1738 ;;		_park_search
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text2
  1743  004464                     __ptext2:
  1744                           	opt stack 0
  1745  004464                     _parallelo:
  1746                           	opt stack 21
  1747                           
  1748                           ;parcheggio.c: 325: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1749                           
  1750                           ;incstack = 0
  1751  004464  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1752  004468  CFDE F0D5          	movff	postinc2,??_parallelo
  1753  00446C  CFDD F0D6          	movff	postdec2,??_parallelo+1
  1754  004470  0100               	movlb	0	; () banked
  1755  004472  1FD5               	comf	??_parallelo& (0+255),f,b
  1756  004474  1FD6               	comf	(??_parallelo+1)& (0+255),f,b
  1757  004476  4BD5               	infsnz	??_parallelo& (0+255),f,b
  1758  004478  2BD6               	incf	(??_parallelo+1)& (0+255),f,b
  1759  00447A  5024               	movf	_sensor_distance,w,c	;volatile
  1760  00447C  0100               	movlb	0	; () banked
  1761  00447E  25D5               	addwf	??_parallelo& (0+255),w,b
  1762  004480  0100               	movlb	0	; () banked
  1763  004482  6F77               	movwf	abs@a& (0+255),b
  1764  004484  5025               	movf	_sensor_distance+1,w,c	;volatile
  1765  004486  0100               	movlb	0	; () banked
  1766  004488  21D6               	addwfc	(??_parallelo+1)& (0+255),w,b
  1767  00448A  0100               	movlb	0	; () banked
  1768  00448C  6F78               	movwf	(abs@a+1)& (0+255),b
  1769  00448E  ECD7  F02D         	call	_abs	;wreg free
  1770  004492  0100               	movlb	0	; () banked
  1771  004494  C077  F081         	movff	?_abs,___xxtofl@val
  1772  004498  0100               	movlb	0	; () banked
  1773  00449A  C078  F082         	movff	?_abs+1,___xxtofl@val+1
  1774  00449E  0100               	movlb	0	; () banked
  1775  0044A0  0E00               	movlw	0
  1776  0044A2  BF82               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1777  0044A4  0EFF               	movlw	-1
  1778  0044A6  6F83               	movwf	(___xxtofl@val+2)& (0+255),b
  1779  0044A8  6F84               	movwf	(___xxtofl@val+3)& (0+255),b
  1780  0044AA  0E01               	movlw	1
  1781  0044AC  ECA1  F024         	call	___xxtofl
  1782  0044B0  C081  F0D7         	movff	?___xxtofl,_alignment_gap
  1783  0044B4  C082  F0D8         	movff	?___xxtofl+1,_alignment_gap+1
  1784  0044B8  C083  F0D9         	movff	?___xxtofl+2,_alignment_gap+2
  1785  0044BC  C084  F0DA         	movff	?___xxtofl+3,_alignment_gap+3
  1786                           
  1787                           ;parcheggio.c: 327: if (alignment_gap < 30) {
  1788  0044C0  C0D7  F0B1         	movff	_alignment_gap,___flge@ff1
  1789  0044C4  C0D8  F0B2         	movff	_alignment_gap+1,___flge@ff1+1
  1790  0044C8  C0D9  F0B3         	movff	_alignment_gap+2,___flge@ff1+2
  1791  0044CC  C0DA  F0B4         	movff	_alignment_gap+3,___flge@ff1+3
  1792  0044D0  0E00               	movlw	0
  1793  0044D2  0100               	movlb	0	; () banked
  1794  0044D4  6FB5               	movwf	___flge@ff2& (0+255),b
  1795  0044D6  0E00               	movlw	0
  1796  0044D8  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  1797  0044DA  0EF0               	movlw	240
  1798  0044DC  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  1799  0044DE  0E41               	movlw	65
  1800  0044E0  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  1801  0044E2  EC10  F028         	call	___flge	;wreg free
  1802  0044E6  0100               	movlb	0	; () banked
  1803  0044E8  B0D8               	btfsc	status,0,c
  1804  0044EA  D0F9               	goto	l778
  1805                           
  1806                           ; BSR set to: 0
  1807                           ;parcheggio.c: 328: if ((sensor_distance[0] < 40) && (sensor_distance[1] < 40)) {
  1808  0044EC  5025               	movf	_sensor_distance+1,w,c	;volatile
  1809  0044EE  E103               	bnz	u8671
  1810  0044F0  0E28               	movlw	40
  1811  0044F2  5C24               	subwf	_sensor_distance,w,c	;volatile
  1812  0044F4  B0D8               	btfsc	status,0,c
  1813  0044F6                     u8671:
  1814  0044F6  D0E5               	goto	l6846
  1815                           
  1816                           ; BSR set to: 0
  1817  0044F8  5027               	movf	_sensor_distance+3,w,c	;volatile
  1818  0044FA  E103               	bnz	u8681
  1819  0044FC  0E28               	movlw	40
  1820  0044FE  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  1821  004500  B0D8               	btfsc	status,0,c
  1822  004502                     u8681:
  1823  004502  D0DF               	goto	l6846
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;parcheggio.c: 333: x = ((100) + (alignment_gap * alignment_gap));
  1827  004504  C0D7  F094         	movff	_alignment_gap,___flmul@a
  1828  004508  C0D8  F095         	movff	_alignment_gap+1,___flmul@a+1
  1829  00450C  C0D9  F096         	movff	_alignment_gap+2,___flmul@a+2
  1830  004510  C0DA  F097         	movff	_alignment_gap+3,___flmul@a+3
  1831  004514  C0D7  F090         	movff	_alignment_gap,___flmul@b
  1832  004518  C0D8  F091         	movff	_alignment_gap+1,___flmul@b+1
  1833  00451C  C0D9  F092         	movff	_alignment_gap+2,___flmul@b+2
  1834  004520  C0DA  F093         	movff	_alignment_gap+3,___flmul@b+3
  1835  004524  EC36  F017         	call	___flmul	;wreg free
  1836  004528  C090  F0AD         	movff	?___flmul,___fladd@b
  1837  00452C  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  1838  004530  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  1839  004534  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  1840  004538  0E00               	movlw	0
  1841  00453A  0100               	movlb	0	; () banked
  1842  00453C  6FB1               	movwf	___fladd@a& (0+255),b
  1843  00453E  0E00               	movlw	0
  1844  004540  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  1845  004542  0EC8               	movlw	200
  1846  004544  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  1847  004546  0E42               	movlw	66
  1848  004548  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  1849  00454A  ECE2  F014         	call	___fladd	;wreg free
  1850  00454E  C0AD  F138         	movff	?___fladd,_x
  1851  004552  C0AE  F139         	movff	?___fladd+1,_x+1
  1852  004556  C0AF  F13A         	movff	?___fladd+2,_x+2
  1853  00455A  C0B0  F13B         	movff	?___fladd+3,_x+3
  1854                           
  1855                           ;parcheggio.c: 334: x = sqrt(x);
  1856  00455E  C138  F0C1         	movff	_x,sqrt@a
  1857  004562  C139  F0C2         	movff	_x+1,sqrt@a+1
  1858  004566  C13A  F0C3         	movff	_x+2,sqrt@a+2
  1859  00456A  C13B  F0C4         	movff	_x+3,sqrt@a+3
  1860  00456E  EC89  F019         	call	_sqrt	;wreg free
  1861  004572  C0C1  F138         	movff	?_sqrt,_x
  1862  004576  C0C2  F139         	movff	?_sqrt+1,_x+1
  1863  00457A  C0C3  F13A         	movff	?_sqrt+2,_x+2
  1864  00457E  C0C4  F13B         	movff	?_sqrt+3,_x+3
  1865                           
  1866                           ;parcheggio.c: 335: z = alignment_gap / x;
  1867  004582  C0D7  F077         	movff	_alignment_gap,___fldiv@b
  1868  004586  C0D8  F078         	movff	_alignment_gap+1,___fldiv@b+1
  1869  00458A  C0D9  F079         	movff	_alignment_gap+2,___fldiv@b+2
  1870  00458E  C0DA  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  1871  004592  C138  F07B         	movff	_x,___fldiv@a
  1872  004596  C139  F07C         	movff	_x+1,___fldiv@a+1
  1873  00459A  C13A  F07D         	movff	_x+2,___fldiv@a+2
  1874  00459E  C13B  F07E         	movff	_x+3,___fldiv@a+3
  1875  0045A2  EC6E  F01B         	call	___fldiv	;wreg free
  1876  0045A6  C077  F0DB         	movff	?___fldiv,_z
  1877  0045AA  C078  F0DC         	movff	?___fldiv+1,_z+1
  1878  0045AE  C079  F0DD         	movff	?___fldiv+2,_z+2
  1879  0045B2  C07A  F0DE         	movff	?___fldiv+3,_z+3
  1880                           
  1881                           ;parcheggio.c: 336: z = asin(z);
  1882  0045B6  C0DB  F194         	movff	_z,asin@x
  1883  0045BA  C0DC  F195         	movff	_z+1,asin@x+1
  1884  0045BE  C0DD  F196         	movff	_z+2,asin@x+2
  1885  0045C2  C0DE  F197         	movff	_z+3,asin@x+3
  1886  0045C6  ECA9  F020         	call	_asin	;wreg free
  1887  0045CA  C194  F0DB         	movff	?_asin,_z
  1888  0045CE  C195  F0DC         	movff	?_asin+1,_z+1
  1889  0045D2  C196  F0DD         	movff	?_asin+2,_z+2
  1890  0045D6  C197  F0DE         	movff	?_asin+3,_z+3
  1891                           
  1892                           ;parcheggio.c: 337: z = z / 3.14159265358979323846 * 180;
  1893  0045DA  0EDB               	movlw	219
  1894  0045DC  0100               	movlb	0	; () banked
  1895  0045DE  6F7B               	movwf	___fldiv@a& (0+255),b
  1896  0045E0  0E0F               	movlw	15
  1897  0045E2  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  1898  0045E4  0E49               	movlw	73
  1899  0045E6  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  1900  0045E8  0E40               	movlw	64
  1901  0045EA  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  1902  0045EC  C0DB  F077         	movff	_z,___fldiv@b
  1903  0045F0  C0DC  F078         	movff	_z+1,___fldiv@b+1
  1904  0045F4  C0DD  F079         	movff	_z+2,___fldiv@b+2
  1905  0045F8  C0DE  F07A         	movff	_z+3,___fldiv@b+3
  1906  0045FC  EC6E  F01B         	call	___fldiv	;wreg free
  1907  004600  C077  F090         	movff	?___fldiv,___flmul@b
  1908  004604  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  1909  004608  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  1910  00460C  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  1911  004610  0E00               	movlw	0
  1912  004612  0100               	movlb	0	; () banked
  1913  004614  6F94               	movwf	___flmul@a& (0+255),b
  1914  004616  0E00               	movlw	0
  1915  004618  6F95               	movwf	(___flmul@a+1)& (0+255),b
  1916  00461A  0E34               	movlw	52
  1917  00461C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  1918  00461E  0E43               	movlw	67
  1919  004620  6F97               	movwf	(___flmul@a+3)& (0+255),b
  1920  004622  EC36  F017         	call	___flmul	;wreg free
  1921  004626  C090  F0DB         	movff	?___flmul,_z
  1922  00462A  C091  F0DC         	movff	?___flmul+1,_z+1
  1923  00462E  C092  F0DD         	movff	?___flmul+2,_z+2
  1924  004632  C093  F0DE         	movff	?___flmul+3,_z+3
  1925                           
  1926                           ;parcheggio.c: 338: data_correction[0] = z;
  1927  004636  C0DB  F077         	movff	_z,___fltol@f1
  1928  00463A  C0DC  F078         	movff	_z+1,___fltol@f1+1
  1929  00463E  C0DD  F079         	movff	_z+2,___fltol@f1+2
  1930  004642  C0DE  F07A         	movff	_z+3,___fltol@f1+3
  1931  004646  EC8E  F02A         	call	___fltol	;wreg free
  1932  00464A  0100               	movlb	0	; () banked
  1933  00464C  5177               	movf	?___fltol& (0+255),w,b
  1934  00464E  0101               	movlb	1	; () banked
  1935  004650  6F5F               	movwf	_data_correction& (0+255),b
  1936                           
  1937                           ; BSR set to: 1
  1938                           ;parcheggio.c: 340: if (sensor_distance[0] < sensor_distance[1]) {
  1939  004652  5026               	movf	_sensor_distance+2,w,c	;volatile
  1940  004654  5C24               	subwf	_sensor_distance,w,c	;volatile
  1941  004656  5027               	movf	_sensor_distance+3,w,c	;volatile
  1942  004658  5825               	subwfb	_sensor_distance+1,w,c	;volatile
  1943  00465A  B0D8               	btfsc	status,0,c
  1944  00465C  D002               	goto	l6838
  1945                           
  1946                           ; BSR set to: 1
  1947                           ;parcheggio.c: 341: data_correction[1] = 0;
  1948  00465E  0E00               	movlw	0
  1949  004660  D001               	goto	L1
  1950  004662                     l6838:
  1951                           
  1952                           ; BSR set to: 1
  1953                           ;parcheggio.c: 343: data_correction[1] = 1;
  1954  004662  0E01               	movlw	1
  1955  004664                     L1:
  1956  004664  0101               	movlb	1	; () banked
  1957  004666  6F60               	movwf	(_data_correction+1)& (0+255),b
  1958                           
  1959                           ; BSR set to: 1
  1960                           ;parcheggio.c: 344: }
  1961                           ;parcheggio.c: 345: if ((old_alignment_gap != alignment_gap) || (old_data_correction != 
      +                          data_correction[1])) {
  1962                           
  1963                           ; BSR set to: 1
  1964  004668  0100               	movlb	0	; () banked
  1965  00466A  51D7               	movf	_alignment_gap& (0+255),w,b
  1966  00466C  0101               	movlb	1	; () banked
  1967  00466E  1930               	xorwf	_old_alignment_gap& (0+255),w,b
  1968  004670  E117               	bnz	l784
  1969  004672  0100               	movlb	0	; () banked
  1970  004674  51D8               	movf	(_alignment_gap+1)& (0+255),w,b
  1971  004676  0101               	movlb	1	; () banked
  1972  004678  1931               	xorwf	(_old_alignment_gap+1)& (0+255),w,b
  1973  00467A  E112               	bnz	l784
  1974  00467C  0100               	movlb	0	; () banked
  1975  00467E  51D9               	movf	(_alignment_gap+2)& (0+255),w,b
  1976  004680  0101               	movlb	1	; () banked
  1977  004682  1932               	xorwf	(_old_alignment_gap+2)& (0+255),w,b
  1978  004684  E10D               	bnz	l784
  1979  004686  0100               	movlb	0	; () banked
  1980  004688  51DA               	movf	(_alignment_gap+3)& (0+255),w,b
  1981  00468A  0101               	movlb	1	; () banked
  1982  00468C  1933               	xorwf	(_old_alignment_gap+3)& (0+255),w,b
  1983  00468E  A4D8               	btfss	status,2,c
  1984  004690  D007               	goto	l784
  1985                           
  1986                           ; BSR set to: 1
  1987  004692  0E00               	movlw	0
  1988  004694  BE44               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  1989  004696  0E01               	movlw	1
  1990  004698  0101               	movlb	1	; () banked
  1991  00469A  1960               	xorwf	(_data_correction+1)& (0+255),w,b
  1992  00469C  B4D8               	btfsc	status,2,c
  1993  00469E  0012               	return	
  1994  0046A0                     l784:
  1995                           
  1996                           ; BSR set to: 1
  1997                           ;parcheggio.c: 346: old_alignment_gap = alignment_gap;
  1998  0046A0  C0D7  F130         	movff	_alignment_gap,_old_alignment_gap
  1999  0046A4  C0D8  F131         	movff	_alignment_gap+1,_old_alignment_gap+1
  2000  0046A8  C0D9  F132         	movff	_alignment_gap+2,_old_alignment_gap+2
  2001  0046AC  C0DA  F133         	movff	_alignment_gap+3,_old_alignment_gap+3
  2002                           
  2003                           ;parcheggio.c: 347: old_data_correction = data_correction[1];
  2004  0046B0  0101               	movlb	1	; () banked
  2005  0046B2  A160               	btfss	(_data_correction+1)& (0+255),0,b
  2006  0046B4  D002               	goto	u8720
  2007  0046B6  8E44               	bsf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2008  0046B8  D001               	goto	l6844
  2009  0046BA                     u8720:
  2010  0046BA  9E44               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2011  0046BC                     l6844:
  2012                           
  2013                           ;parcheggio.c: 348: can_send();
  2014  0046BC  ECD8  F028         	call	_can_send	;wreg free
  2015                           
  2016                           ;parcheggio.c: 349: }
  2017                           ;parcheggio.c: 350: } else if (data_correction[0] != old_data_correction) {
  2018  0046C0  0012               	return	
  2019  0046C2                     l6846:
  2020  0046C2  0E00               	movlw	0
  2021  0046C4  BE44               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2022  0046C6  0E01               	movlw	1
  2023  0046C8  0101               	movlb	1	; () banked
  2024  0046CA  195F               	xorwf	_data_correction& (0+255),w,b
  2025  0046CC  B4D8               	btfsc	status,2,c
  2026  0046CE  0012               	return	
  2027                           
  2028                           ; BSR set to: 1
  2029                           ;parcheggio.c: 351: data_correction[0] = 0;
  2030  0046D0  0E00               	movlw	0
  2031  0046D2  0101               	movlb	1	; () banked
  2032  0046D4  6F5F               	movwf	_data_correction& (0+255),b
  2033                           
  2034                           ; BSR set to: 1
  2035                           ;parcheggio.c: 352: old_data_correction = 0;
  2036  0046D6  9E44               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2037                           
  2038                           ; BSR set to: 1
  2039                           ;parcheggio.c: 353: can_send();
  2040  0046D8  ECD8  F028         	call	_can_send	;wreg free
  2041                           
  2042                           ;parcheggio.c: 354: }
  2043                           ;parcheggio.c: 355: } else {
  2044  0046DC  0012               	return	
  2045  0046DE                     l778:
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;parcheggio.c: 356: if (old_data_correction != 0) {
  2049  0046DE  AE44               	btfss	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2050  0046E0  0012               	return	
  2051                           
  2052                           ; BSR set to: 0
  2053                           ;parcheggio.c: 357: data_correction[0] = 0;
  2054  0046E2  0E00               	movlw	0
  2055  0046E4  0101               	movlb	1	; () banked
  2056  0046E6  6F5F               	movwf	_data_correction& (0+255),b
  2057                           
  2058                           ; BSR set to: 1
  2059                           ;parcheggio.c: 358: old_data_correction = 0;
  2060  0046E8  9E44               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2061                           
  2062                           ; BSR set to: 1
  2063                           ;parcheggio.c: 359: can_send();
  2064  0046EA  ECD8  F028         	call	_can_send	;wreg free
  2065  0046EE  0012               	return	
  2066  0046F0                     __end_of_parallelo:
  2067                           	opt stack 0
  2068                           tblptru	equ	0xFF8
  2069                           tblptrh	equ	0xFF7
  2070                           tblptrl	equ	0xFF6
  2071                           tablat	equ	0xFF5
  2072                           postinc0	equ	0xFEE
  2073                           wreg	equ	0xFE8
  2074                           postdec1	equ	0xFE5
  2075                           fsr1l	equ	0xFE1
  2076                           postinc2	equ	0xFDE
  2077                           postdec2	equ	0xFDD
  2078                           status	equ	0xFD8
  2079                           
  2080 ;; *************** function _abs *****************
  2081 ;; Defined at:
  2082 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;  a               2   23[BANK0 ] int 
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;		None
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  2   23[BANK0 ] int 
  2089 ;; Registers used:
  2090 ;;		wreg, status,2, status,0
  2091 ;; Tracked objects:
  2092 ;;		On entry : 0/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2096 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2098 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2099 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2100 ;;Total ram usage:        4 bytes
  2101 ;; Hardware stack levels used:    1
  2102 ;; Hardware stack levels required when called:    4
  2103 ;; This function calls:
  2104 ;;		Nothing
  2105 ;; This function is called by:
  2106 ;;		_park_search
  2107 ;;		_parallelo
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text3
  2112  005BAE                     __ptext3:
  2113                           	opt stack 0
  2114  005BAE                     _abs:
  2115                           	opt stack 24
  2116                           
  2117                           ;incstack = 0
  2118  005BAE  0100               	movlb	0	; () banked
  2119  005BB0  AF78               	btfss	(abs@a+1)& (0+255),7,b
  2120  005BB2  D00E               	goto	l848
  2121                           
  2122                           ; BSR set to: 0
  2123  005BB4  C077  F079         	movff	abs@a,??_abs
  2124  005BB8  C078  F07A         	movff	abs@a+1,??_abs+1
  2125  005BBC  0100               	movlb	0	; () banked
  2126  005BBE  1F79               	comf	??_abs& (0+255),f,b
  2127  005BC0  1F7A               	comf	(??_abs+1)& (0+255),f,b
  2128  005BC2  4B79               	infsnz	??_abs& (0+255),f,b
  2129  005BC4  2B7A               	incf	(??_abs+1)& (0+255),f,b
  2130  005BC6  C079  F077         	movff	??_abs,?_abs
  2131  005BCA  C07A  F078         	movff	??_abs+1,?_abs+1
  2132  005BCE  0012               	return	
  2133  005BD0                     l848:
  2134                           
  2135                           ; BSR set to: 0
  2136  005BD0  C077  F077         	movff	abs@a,?_abs
  2137  005BD4  C078  F078         	movff	abs@a+1,?_abs+1
  2138                           
  2139                           ; BSR set to: 0
  2140  005BD8  0012               	return		;funcret
  2141  005BDA                     __end_of_abs:
  2142                           	opt stack 0
  2143                           tblptru	equ	0xFF8
  2144                           tblptrh	equ	0xFF7
  2145                           tblptrl	equ	0xFF6
  2146                           tablat	equ	0xFF5
  2147                           postinc0	equ	0xFEE
  2148                           wreg	equ	0xFE8
  2149                           postdec1	equ	0xFE5
  2150                           fsr1l	equ	0xFE1
  2151                           postinc2	equ	0xFDE
  2152                           postdec2	equ	0xFDD
  2153                           status	equ	0xFD8
  2154                           
  2155 ;; *************** function _park_routine *****************
  2156 ;; Defined at:
  2157 ;;		line 259 in file "parcheggio.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;		None
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;		None
  2162 ;; Return value:  Size  Location     Type
  2163 ;;		None               void
  2164 ;; Registers used:
  2165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2175 ;;Total ram usage:        0 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    9
  2178 ;; This function calls:
  2179 ;;		_CANsendMessage
  2180 ;;		___fltol
  2181 ;;		_can_send
  2182 ;;		_delay_s
  2183 ;;		_matematica
  2184 ;; This function is called by:
  2185 ;;		_main
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	text4
  2190  004E7E                     __ptext4:
  2191                           	opt stack 0
  2192  004E7E                     _park_routine:
  2193                           	opt stack 21
  2194                           
  2195                           ;parcheggio.c: 260: while ((PORTBbits.RB5 == 1) && (activation == 1)&&(start_operation =
      +                          = 1)) {
  2196                           
  2197                           ; BSR set to: 0
  2198                           ;incstack = 0
  2199  004E7E  D0C9               	goto	l740
  2200  004E80                     l6948:
  2201                           
  2202                           ;parcheggio.c: 261: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  2203  004E80  0E07               	movlw	7
  2204  004E82  0100               	movlb	0	; () banked
  2205  004E84  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2206  004E86  0E00               	movlw	0
  2207  004E88  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2208  004E8A  0E00               	movlw	0
  2209  004E8C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2210  004E8E  0E00               	movlw	0
  2211  004E90  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2212  004E92  0E4F               	movlw	low _data
  2213  004E94  0100               	movlb	0	; () banked
  2214  004E96  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2215  004E98  0E01               	movlw	high _data
  2216  004E9A  0100               	movlb	0	; () banked
  2217  004E9C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2218  004E9E  0E08               	movlw	8
  2219  004EA0  0100               	movlb	0	; () banked
  2220  004EA2  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2221  004EA4  0EFC               	movlw	252
  2222  004EA6  0100               	movlb	0	; () banked
  2223  004EA8  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2224  004EAA  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2225                           
  2226                           ;parcheggio.c: 262: matematica();
  2227  004EAE  EC78  F012         	call	_matematica	;wreg free
  2228                           
  2229                           ;parcheggio.c: 263: set_speed = 0;
  2230  004EB2  0E00               	movlw	0
  2231  004EB4  0100               	movlb	0	; () banked
  2232  004EB6  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2233  004EB8  0E00               	movlw	0
  2234  004EBA  6FE5               	movwf	_set_speed& (0+255),b
  2235                           
  2236                           ; BSR set to: 0
  2237                           ;parcheggio.c: 264: data_brake[0] = 0;
  2238  004EBC  0E00               	movlw	0
  2239  004EBE  0101               	movlb	1	; () banked
  2240  004EC0  6F57               	movwf	_data_brake& (0+255),b
  2241                           
  2242                           ; BSR set to: 1
  2243                           ;parcheggio.c: 265: data_steering[0] = 90;
  2244  004EC2  0E5A               	movlw	90
  2245  004EC4  0101               	movlb	1	; () banked
  2246  004EC6  6F6F               	movwf	_data_steering& (0+255),b
  2247                           
  2248                           ; BSR set to: 1
  2249                           ;parcheggio.c: 266: can_send();
  2250  004EC8  ECD8  F028         	call	_can_send	;wreg free
  2251                           
  2252                           ;parcheggio.c: 267: delay_s(1);
  2253  004ECC  0E01               	movlw	1
  2254  004ECE  ECED  F02D         	call	_delay_s
  2255  004ED2                     l742:
  2256  004ED2  AA44               	btfss	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  2257  004ED4  D7FE               	goto	l742
  2258                           
  2259                           ;parcheggio.c: 269: if (distance_average > 31) {
  2260  004ED6  0100               	movlb	0	; () banked
  2261  004ED8  51E4               	movf	(_distance_average+1)& (0+255),w,b	;volatile
  2262  004EDA  E105               	bnz	u8890
  2263  004EDC  0E20               	movlw	32
  2264  004EDE  0100               	movlb	0	; () banked
  2265  004EE0  5DE3               	subwf	_distance_average& (0+255),w,b	;volatile
  2266  004EE2  A0D8               	btfss	status,0,c
  2267  004EE4  D02A               	goto	l6976
  2268  004EE6                     u8890:
  2269                           
  2270                           ; BSR set to: 0
  2271                           ;parcheggio.c: 270: set_speed = 50;
  2272  004EE6  0E00               	movlw	0
  2273  004EE8  0100               	movlb	0	; () banked
  2274  004EEA  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2275  004EEC  0E32               	movlw	50
  2276  004EEE  6FE5               	movwf	_set_speed& (0+255),b
  2277                           
  2278                           ; BSR set to: 0
  2279                           ;parcheggio.c: 271: dir = 0;
  2280  004EF0  9444               	bcf	_dir/(0+8),_dir& (0+7),c
  2281                           
  2282                           ;parcheggio.c: 272: data_steering[0] = 90;
  2283  004EF2  0E5A               	movlw	90
  2284  004EF4  0101               	movlb	1	; () banked
  2285  004EF6  6F6F               	movwf	_data_steering& (0+255),b
  2286                           
  2287                           ; BSR set to: 1
  2288                           ;parcheggio.c: 273: data_test[0] = (distance_average - 30);
  2289  004EF8  0100               	movlb	0	; () banked
  2290  004EFA  51E3               	movf	_distance_average& (0+255),w,b	;volatile
  2291  004EFC  0FE2               	addlw	226
  2292  004EFE  0101               	movlb	1	; () banked
  2293  004F00  6F77               	movwf	_data_test& (0+255),b
  2294                           
  2295                           ; BSR set to: 1
  2296                           ;parcheggio.c: 274: asd = 1;
  2297  004F02  8244               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2298                           
  2299                           ; BSR set to: 1
  2300                           ;parcheggio.c: 275: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2301  004F04  0E0D               	movlw	13
  2302  004F06  0100               	movlb	0	; () banked
  2303  004F08  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2304  004F0A  0E00               	movlw	0
  2305  004F0C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2306  004F0E  0E00               	movlw	0
  2307  004F10  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2308  004F12  0E00               	movlw	0
  2309  004F14  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2310  004F16  0E77               	movlw	low _data_test
  2311  004F18  0100               	movlb	0	; () banked
  2312  004F1A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2313  004F1C  0E01               	movlw	high _data_test
  2314  004F1E  0100               	movlb	0	; () banked
  2315  004F20  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2316  004F22  0E08               	movlw	8
  2317  004F24  0100               	movlb	0	; () banked
  2318  004F26  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2319  004F28  0EBC               	movlw	188
  2320  004F2A  0100               	movlb	0	; () banked
  2321  004F2C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2322  004F2E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2323                           
  2324                           ;parcheggio.c: 276: can_send();
  2325  004F32  ECD8  F028         	call	_can_send	;wreg free
  2326  004F36                     l746:
  2327  004F36  B244               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2328  004F38  D7FE               	goto	l746
  2329  004F3A                     l6976:
  2330                           
  2331                           ;parcheggio.c: 278: }
  2332                           ;parcheggio.c: 279: set_speed = 0;
  2333  004F3A  0E00               	movlw	0
  2334  004F3C  0100               	movlb	0	; () banked
  2335  004F3E  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2336  004F40  0E00               	movlw	0
  2337  004F42  6FE5               	movwf	_set_speed& (0+255),b
  2338                           
  2339                           ;parcheggio.c: 280: data_steering[0] = 90;
  2340  004F44  0E5A               	movlw	90
  2341  004F46  0101               	movlb	1	; () banked
  2342  004F48  6F6F               	movwf	_data_steering& (0+255),b
  2343                           
  2344                           ; BSR set to: 1
  2345                           ;parcheggio.c: 281: can_send();
  2346  004F4A  ECD8  F028         	call	_can_send	;wreg free
  2347                           
  2348                           ;parcheggio.c: 282: delay_s(1);
  2349  004F4E  0E01               	movlw	1
  2350  004F50  ECED  F02D         	call	_delay_s
  2351                           
  2352                           ;parcheggio.c: 283: set_speed = 50;
  2353  004F54  0E00               	movlw	0
  2354  004F56  0100               	movlb	0	; () banked
  2355  004F58  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2356  004F5A  0E32               	movlw	50
  2357  004F5C  6FE5               	movwf	_set_speed& (0+255),b
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;parcheggio.c: 284: dir = 0;
  2361  004F5E  9444               	bcf	_dir/(0+8),_dir& (0+7),c
  2362                           
  2363                           ; BSR set to: 0
  2364                           ;parcheggio.c: 285: data_steering[0] = 180;
  2365  004F60  0EB4               	movlw	180
  2366  004F62  0101               	movlb	1	; () banked
  2367  004F64  6F6F               	movwf	_data_steering& (0+255),b
  2368                           
  2369                           ; BSR set to: 1
  2370                           ;parcheggio.c: 286: data_test[0] = prima_sterzata;
  2371  004F66  C134  F077         	movff	_prima_sterzata,___fltol@f1
  2372  004F6A  C135  F078         	movff	_prima_sterzata+1,___fltol@f1+1
  2373  004F6E  C136  F079         	movff	_prima_sterzata+2,___fltol@f1+2
  2374  004F72  C137  F07A         	movff	_prima_sterzata+3,___fltol@f1+3
  2375  004F76  EC8E  F02A         	call	___fltol	;wreg free
  2376  004F7A  0100               	movlb	0	; () banked
  2377  004F7C  5177               	movf	?___fltol& (0+255),w,b
  2378  004F7E  0101               	movlb	1	; () banked
  2379  004F80  6F77               	movwf	_data_test& (0+255),b
  2380                           
  2381                           ; BSR set to: 1
  2382                           ;parcheggio.c: 287: asd = 1;
  2383  004F82  8244               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2384                           
  2385                           ; BSR set to: 1
  2386                           ;parcheggio.c: 288: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2387  004F84  0E0D               	movlw	13
  2388  004F86  0100               	movlb	0	; () banked
  2389  004F88  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2390  004F8A  0E00               	movlw	0
  2391  004F8C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2392  004F8E  0E00               	movlw	0
  2393  004F90  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2394  004F92  0E00               	movlw	0
  2395  004F94  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2396  004F96  0E77               	movlw	low _data_test
  2397  004F98  0100               	movlb	0	; () banked
  2398  004F9A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2399  004F9C  0E01               	movlw	high _data_test
  2400  004F9E  0100               	movlb	0	; () banked
  2401  004FA0  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2402  004FA2  0E08               	movlw	8
  2403  004FA4  0100               	movlb	0	; () banked
  2404  004FA6  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2405  004FA8  0EBC               	movlw	188
  2406  004FAA  0100               	movlb	0	; () banked
  2407  004FAC  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2408  004FAE  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2409                           
  2410                           ;parcheggio.c: 289: can_send();
  2411  004FB2  ECD8  F028         	call	_can_send	;wreg free
  2412  004FB6                     l749:
  2413  004FB6  B244               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2414  004FB8  D7FE               	goto	l749
  2415                           
  2416                           ;parcheggio.c: 291: set_speed = 50;
  2417  004FBA  0E00               	movlw	0
  2418  004FBC  0100               	movlb	0	; () banked
  2419  004FBE  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2420  004FC0  0E32               	movlw	50
  2421  004FC2  6FE5               	movwf	_set_speed& (0+255),b
  2422                           
  2423                           ;parcheggio.c: 292: data_steering[0] = 0;
  2424  004FC4  0E00               	movlw	0
  2425  004FC6  0101               	movlb	1	; () banked
  2426  004FC8  6F6F               	movwf	_data_steering& (0+255),b
  2427                           
  2428                           ; BSR set to: 1
  2429                           ;parcheggio.c: 293: asd = 1;
  2430  004FCA  8244               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2431                           
  2432                           ; BSR set to: 1
  2433                           ;parcheggio.c: 294: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2434  004FCC  0E0D               	movlw	13
  2435  004FCE  0100               	movlb	0	; () banked
  2436  004FD0  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2437  004FD2  0E00               	movlw	0
  2438  004FD4  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2439  004FD6  0E00               	movlw	0
  2440  004FD8  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2441  004FDA  0E00               	movlw	0
  2442  004FDC  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2443  004FDE  0E77               	movlw	low _data_test
  2444  004FE0  0100               	movlb	0	; () banked
  2445  004FE2  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2446  004FE4  0E01               	movlw	high _data_test
  2447  004FE6  0100               	movlb	0	; () banked
  2448  004FE8  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2449  004FEA  0E08               	movlw	8
  2450  004FEC  0100               	movlb	0	; () banked
  2451  004FEE  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2452  004FF0  0EBC               	movlw	188
  2453  004FF2  0100               	movlb	0	; () banked
  2454  004FF4  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2455  004FF6  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2456                           
  2457                           ;parcheggio.c: 295: can_send();
  2458  004FFA  ECD8  F028         	call	_can_send	;wreg free
  2459  004FFE                     l752:
  2460  004FFE  B244               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2461  005000  D7FE               	goto	l752
  2462                           
  2463                           ;parcheggio.c: 297: set_speed = 0;
  2464  005002  0E00               	movlw	0
  2465  005004  0100               	movlb	0	; () banked
  2466  005006  6FE6               	movwf	(_set_speed+1)& (0+255),b
  2467  005008  0E00               	movlw	0
  2468  00500A  6FE5               	movwf	_set_speed& (0+255),b
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;parcheggio.c: 298: can_send();
  2472  00500C  ECD8  F028         	call	_can_send	;wreg free
  2473  005010  D7FF               	goto	l756
  2474  005012                     l740:
  2475  005012  AA81               	btfss	3969,5,c	;volatile
  2476  005014  0012               	return	
  2477  005016  A044               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2478  005018  0012               	return	
  2479  00501A  A445               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2480  00501C  0012               	return	
  2481  00501E  D730               	goto	l6948
  2482  005020                     __end_of_park_routine:
  2483                           	opt stack 0
  2484                           tblptru	equ	0xFF8
  2485                           tblptrh	equ	0xFF7
  2486                           tblptrl	equ	0xFF6
  2487                           tablat	equ	0xFF5
  2488                           postinc0	equ	0xFEE
  2489                           wreg	equ	0xFE8
  2490                           postdec1	equ	0xFE5
  2491                           fsr1l	equ	0xFE1
  2492                           postinc2	equ	0xFDE
  2493                           postdec2	equ	0xFDD
  2494                           status	equ	0xFD8
  2495                           
  2496 ;; *************** function _matematica *****************
  2497 ;; Defined at:
  2498 ;;		line 365 in file "parcheggio.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;		None
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;		None
  2503 ;; Return value:  Size  Location     Type
  2504 ;;		None               void
  2505 ;; Registers used:
  2506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2513 ;;      Locals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
  2514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2515 ;;      Totals:         0       0      32       0       0       0       0       0       0       0       0       0       
      +0       0
  2516 ;;Total ram usage:       32 bytes
  2517 ;; Hardware stack levels used:    1
  2518 ;; Hardware stack levels required when called:    8
  2519 ;; This function calls:
  2520 ;;		___fladd
  2521 ;;		___fldiv
  2522 ;;		___flmul
  2523 ;;		___flneg
  2524 ;;		_asin
  2525 ;;		_cos
  2526 ;; This function is called by:
  2527 ;;		_park_routine
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           	psect	text5
  2532  0024F0                     __ptext5:
  2533                           	opt stack 0
  2534  0024F0                     _matematica:
  2535                           	opt stack 21
  2536                           
  2537                           ;parcheggio.c: 367: alfa = asin(((2 * raggio)-(larghezza / 2) - bordo) / (2 * raggio));
  2538                           
  2539                           ;incstack = 0
  2540  0024F0  C1D4  F0A9         	movff	_bordo,___flneg@f1
  2541  0024F4  C1D5  F0AA         	movff	_bordo+1,___flneg@f1+1
  2542  0024F8  C1D6  F0AB         	movff	_bordo+2,___flneg@f1+2
  2543  0024FC  C1D7  F0AC         	movff	_bordo+3,___flneg@f1+3
  2544  002500  ECA0  F02D         	call	___flneg	;wreg free
  2545  002504  C0A9  F0B1         	movff	?___flneg,___fladd@a
  2546  002508  C0AA  F0B2         	movff	?___flneg+1,___fladd@a+1
  2547  00250C  C0AB  F0B3         	movff	?___flneg+2,___fladd@a+2
  2548  002510  C0AC  F0B4         	movff	?___flneg+3,___fladd@a+3
  2549  002514  0E00               	movlw	0
  2550  002516  0100               	movlb	0	; () banked
  2551  002518  6F94               	movwf	___flmul@a& (0+255),b
  2552  00251A  0E00               	movlw	0
  2553  00251C  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2554  00251E  0E00               	movlw	0
  2555  002520  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2556  002522  0E40               	movlw	64
  2557  002524  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2558  002526  C1DC  F090         	movff	_raggio,___flmul@b
  2559  00252A  C1DD  F091         	movff	_raggio+1,___flmul@b+1
  2560  00252E  C1DE  F092         	movff	_raggio+2,___flmul@b+2
  2561  002532  C1DF  F093         	movff	_raggio+3,___flmul@b+3
  2562  002536  EC36  F017         	call	___flmul	;wreg free
  2563  00253A  C090  F0AD         	movff	?___flmul,___fladd@b
  2564  00253E  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  2565  002542  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  2566  002546  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  2567  00254A  ECE2  F014         	call	___fladd	;wreg free
  2568  00254E  C0AD  F1B4         	movff	?___fladd,_matematica$3738
  2569  002552  C0AE  F1B5         	movff	?___fladd+1,_matematica$3738+1
  2570  002556  C0AF  F1B6         	movff	?___fladd+2,_matematica$3738+2
  2571  00255A  C0B0  F1B7         	movff	?___fladd+3,_matematica$3738+3
  2572                           
  2573                           ;parcheggio.c: 367: alfa = asin(((2 * raggio)-(larghezza / 2) - bordo) / (2 * raggio));
  2574  00255E  0E00               	movlw	0
  2575  002560  0100               	movlb	0	; () banked
  2576  002562  6F7B               	movwf	___fldiv@a& (0+255),b
  2577  002564  0E00               	movlw	0
  2578  002566  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2579  002568  0E00               	movlw	0
  2580  00256A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2581  00256C  0E40               	movlw	64
  2582  00256E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2583  002570  C1D8  F077         	movff	_larghezza,___fldiv@b
  2584  002574  C1D9  F078         	movff	_larghezza+1,___fldiv@b+1
  2585  002578  C1DA  F079         	movff	_larghezza+2,___fldiv@b+2
  2586  00257C  C1DB  F07A         	movff	_larghezza+3,___fldiv@b+3
  2587  002580  EC6E  F01B         	call	___fldiv	;wreg free
  2588  002584  C077  F0A9         	movff	?___fldiv,___flneg@f1
  2589  002588  C078  F0AA         	movff	?___fldiv+1,___flneg@f1+1
  2590  00258C  C079  F0AB         	movff	?___fldiv+2,___flneg@f1+2
  2591  002590  C07A  F0AC         	movff	?___fldiv+3,___flneg@f1+3
  2592  002594  ECA0  F02D         	call	___flneg	;wreg free
  2593  002598  C0A9  F0B1         	movff	?___flneg,___fladd@a
  2594  00259C  C0AA  F0B2         	movff	?___flneg+1,___fladd@a+1
  2595  0025A0  C0AB  F0B3         	movff	?___flneg+2,___fladd@a+2
  2596  0025A4  C0AC  F0B4         	movff	?___flneg+3,___fladd@a+3
  2597  0025A8  C1B4  F0AD         	movff	_matematica$3738,___fladd@b
  2598  0025AC  C1B5  F0AE         	movff	_matematica$3738+1,___fladd@b+1
  2599  0025B0  C1B6  F0AF         	movff	_matematica$3738+2,___fladd@b+2
  2600  0025B4  C1B7  F0B0         	movff	_matematica$3738+3,___fladd@b+3
  2601  0025B8  ECE2  F014         	call	___fladd	;wreg free
  2602  0025BC  C0AD  F1B8         	movff	?___fladd,_matematica$3739
  2603  0025C0  C0AE  F1B9         	movff	?___fladd+1,_matematica$3739+1
  2604  0025C4  C0AF  F1BA         	movff	?___fladd+2,_matematica$3739+2
  2605  0025C8  C0B0  F1BB         	movff	?___fladd+3,_matematica$3739+3
  2606                           
  2607                           ;parcheggio.c: 367: alfa = asin(((2 * raggio)-(larghezza / 2) - bordo) / (2 * raggio));
  2608  0025CC  C1B8  F077         	movff	_matematica$3739,___fldiv@b
  2609  0025D0  C1B9  F078         	movff	_matematica$3739+1,___fldiv@b+1
  2610  0025D4  C1BA  F079         	movff	_matematica$3739+2,___fldiv@b+2
  2611  0025D8  C1BB  F07A         	movff	_matematica$3739+3,___fldiv@b+3
  2612  0025DC  0E00               	movlw	0
  2613  0025DE  0100               	movlb	0	; () banked
  2614  0025E0  6F94               	movwf	___flmul@a& (0+255),b
  2615  0025E2  0E00               	movlw	0
  2616  0025E4  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2617  0025E6  0E00               	movlw	0
  2618  0025E8  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2619  0025EA  0E40               	movlw	64
  2620  0025EC  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2621  0025EE  C1DC  F090         	movff	_raggio,___flmul@b
  2622  0025F2  C1DD  F091         	movff	_raggio+1,___flmul@b+1
  2623  0025F6  C1DE  F092         	movff	_raggio+2,___flmul@b+2
  2624  0025FA  C1DF  F093         	movff	_raggio+3,___flmul@b+3
  2625  0025FE  EC36  F017         	call	___flmul	;wreg free
  2626  002602  C090  F07B         	movff	?___flmul,___fldiv@a
  2627  002606  C091  F07C         	movff	?___flmul+1,___fldiv@a+1
  2628  00260A  C092  F07D         	movff	?___flmul+2,___fldiv@a+2
  2629  00260E  C093  F07E         	movff	?___flmul+3,___fldiv@a+3
  2630  002612  EC6E  F01B         	call	___fldiv	;wreg free
  2631  002616  C077  F1BC         	movff	?___fldiv,_matematica$3740
  2632  00261A  C078  F1BD         	movff	?___fldiv+1,_matematica$3740+1
  2633  00261E  C079  F1BE         	movff	?___fldiv+2,_matematica$3740+2
  2634  002622  C07A  F1BF         	movff	?___fldiv+3,_matematica$3740+3
  2635                           
  2636                           ;parcheggio.c: 367: alfa = asin(((2 * raggio)-(larghezza / 2) - bordo) / (2 * raggio));
  2637  002626  C1BC  F194         	movff	_matematica$3740,asin@x
  2638  00262A  C1BD  F195         	movff	_matematica$3740+1,asin@x+1
  2639  00262E  C1BE  F196         	movff	_matematica$3740+2,asin@x+2
  2640  002632  C1BF  F197         	movff	_matematica$3740+3,asin@x+3
  2641  002636  ECA9  F020         	call	_asin	;wreg free
  2642  00263A  C194  F11C         	movff	?_asin,_alfa
  2643  00263E  C195  F11D         	movff	?_asin+1,_alfa+1
  2644  002642  C196  F11E         	movff	?_asin+2,_alfa+2
  2645  002646  C197  F11F         	movff	?_asin+3,_alfa+3
  2646                           
  2647                           ;parcheggio.c: 368: alfa = alfa / 3.14159265358979323846 * 180;
  2648  00264A  0EDB               	movlw	219
  2649  00264C  0100               	movlb	0	; () banked
  2650  00264E  6F7B               	movwf	___fldiv@a& (0+255),b
  2651  002650  0E0F               	movlw	15
  2652  002652  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2653  002654  0E49               	movlw	73
  2654  002656  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2655  002658  0E40               	movlw	64
  2656  00265A  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2657  00265C  C11C  F077         	movff	_alfa,___fldiv@b
  2658  002660  C11D  F078         	movff	_alfa+1,___fldiv@b+1
  2659  002664  C11E  F079         	movff	_alfa+2,___fldiv@b+2
  2660  002668  C11F  F07A         	movff	_alfa+3,___fldiv@b+3
  2661  00266C  EC6E  F01B         	call	___fldiv	;wreg free
  2662  002670  C077  F090         	movff	?___fldiv,___flmul@b
  2663  002674  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  2664  002678  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  2665  00267C  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  2666  002680  0E00               	movlw	0
  2667  002682  0100               	movlb	0	; () banked
  2668  002684  6F94               	movwf	___flmul@a& (0+255),b
  2669  002686  0E00               	movlw	0
  2670  002688  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2671  00268A  0E34               	movlw	52
  2672  00268C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2673  00268E  0E43               	movlw	67
  2674  002690  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2675  002692  EC36  F017         	call	___flmul	;wreg free
  2676  002696  C090  F11C         	movff	?___flmul,_alfa
  2677  00269A  C091  F11D         	movff	?___flmul+1,_alfa+1
  2678  00269E  C092  F11E         	movff	?___flmul+2,_alfa+2
  2679  0026A2  C093  F11F         	movff	?___flmul+3,_alfa+3
  2680                           
  2681                           ;parcheggio.c: 369: beta = 90 - alfa;
  2682  0026A6  C11C  F0A9         	movff	_alfa,___flneg@f1
  2683  0026AA  C11D  F0AA         	movff	_alfa+1,___flneg@f1+1
  2684  0026AE  C11E  F0AB         	movff	_alfa+2,___flneg@f1+2
  2685  0026B2  C11F  F0AC         	movff	_alfa+3,___flneg@f1+3
  2686  0026B6  ECA0  F02D         	call	___flneg	;wreg free
  2687  0026BA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  2688  0026BE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  2689  0026C2  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  2690  0026C6  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  2691  0026CA  0E00               	movlw	0
  2692  0026CC  0100               	movlb	0	; () banked
  2693  0026CE  6FB1               	movwf	___fladd@a& (0+255),b
  2694  0026D0  0E00               	movlw	0
  2695  0026D2  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  2696  0026D4  0EB4               	movlw	180
  2697  0026D6  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  2698  0026D8  0E42               	movlw	66
  2699  0026DA  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  2700  0026DC  ECE2  F014         	call	___fladd	;wreg free
  2701  0026E0  C0AD  F120         	movff	?___fladd,_beta
  2702  0026E4  C0AE  F121         	movff	?___fladd+1,_beta+1
  2703  0026E8  C0AF  F122         	movff	?___fladd+2,_beta+2
  2704  0026EC  C0B0  F123         	movff	?___fladd+3,_beta+3
  2705                           
  2706                           ;parcheggio.c: 370: n = 2 * raggio * cos(alfa);
  2707  0026F0  C11C  F1AC         	movff	_alfa,cos@f
  2708  0026F4  C11D  F1AD         	movff	_alfa+1,cos@f+1
  2709  0026F8  C11E  F1AE         	movff	_alfa+2,cos@f+2
  2710  0026FC  C11F  F1AF         	movff	_alfa+3,cos@f+3
  2711  002700  EC14  F02B         	call	_cos	;wreg free
  2712  002704  C1AC  F1C0         	movff	?_cos,_matematica$3741
  2713  002708  C1AD  F1C1         	movff	?_cos+1,_matematica$3741+1
  2714  00270C  C1AE  F1C2         	movff	?_cos+2,_matematica$3741+2
  2715  002710  C1AF  F1C3         	movff	?_cos+3,_matematica$3741+3
  2716                           
  2717                           ;parcheggio.c: 370: n = 2 * raggio * cos(alfa);
  2718  002714  C1DC  F094         	movff	_raggio,___flmul@a
  2719  002718  C1DD  F095         	movff	_raggio+1,___flmul@a+1
  2720  00271C  C1DE  F096         	movff	_raggio+2,___flmul@a+2
  2721  002720  C1DF  F097         	movff	_raggio+3,___flmul@a+3
  2722  002724  C1C0  F090         	movff	_matematica$3741,___flmul@b
  2723  002728  C1C1  F091         	movff	_matematica$3741+1,___flmul@b+1
  2724  00272C  C1C2  F092         	movff	_matematica$3741+2,___flmul@b+2
  2725  002730  C1C3  F093         	movff	_matematica$3741+3,___flmul@b+3
  2726  002734  EC36  F017         	call	___flmul	;wreg free
  2727  002738  C090  F1C4         	movff	?___flmul,_matematica$3742
  2728  00273C  C091  F1C5         	movff	?___flmul+1,_matematica$3742+1
  2729  002740  C092  F1C6         	movff	?___flmul+2,_matematica$3742+2
  2730  002744  C093  F1C7         	movff	?___flmul+3,_matematica$3742+3
  2731                           
  2732                           ;parcheggio.c: 370: n = 2 * raggio * cos(alfa);
  2733  002748  C1C4  F090         	movff	_matematica$3742,___flmul@b
  2734  00274C  C1C5  F091         	movff	_matematica$3742+1,___flmul@b+1
  2735  002750  C1C6  F092         	movff	_matematica$3742+2,___flmul@b+2
  2736  002754  C1C7  F093         	movff	_matematica$3742+3,___flmul@b+3
  2737  002758  0E00               	movlw	0
  2738  00275A  0100               	movlb	0	; () banked
  2739  00275C  6F94               	movwf	___flmul@a& (0+255),b
  2740  00275E  0E00               	movlw	0
  2741  002760  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2742  002762  0E00               	movlw	0
  2743  002764  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2744  002766  0E40               	movlw	64
  2745  002768  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2746  00276A  EC36  F017         	call	___flmul	;wreg free
  2747  00276E  C090  F12C         	movff	?___flmul,_n
  2748  002772  C091  F12D         	movff	?___flmul+1,_n+1
  2749  002776  C092  F12E         	movff	?___flmul+2,_n+2
  2750  00277A  C093  F12F         	movff	?___flmul+3,_n+3
  2751                           
  2752                           ;parcheggio.c: 371: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  2753  00277E  C120  F094         	movff	_beta,___flmul@a
  2754  002782  C121  F095         	movff	_beta+1,___flmul@a+1
  2755  002786  C122  F096         	movff	_beta+2,___flmul@a+2
  2756  00278A  C123  F097         	movff	_beta+3,___flmul@a+3
  2757  00278E  C1DC  F090         	movff	_raggio,___flmul@b
  2758  002792  C1DD  F091         	movff	_raggio+1,___flmul@b+1
  2759  002796  C1DE  F092         	movff	_raggio+2,___flmul@b+2
  2760  00279A  C1DF  F093         	movff	_raggio+3,___flmul@b+3
  2761  00279E  EC36  F017         	call	___flmul	;wreg free
  2762  0027A2  C090  F1C8         	movff	?___flmul,_matematica$3743
  2763  0027A6  C091  F1C9         	movff	?___flmul+1,_matematica$3743+1
  2764  0027AA  C092  F1CA         	movff	?___flmul+2,_matematica$3743+2
  2765  0027AE  C093  F1CB         	movff	?___flmul+3,_matematica$3743+3
  2766                           
  2767                           ;parcheggio.c: 371: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  2768  0027B2  0EDB               	movlw	219
  2769  0027B4  0100               	movlb	0	; () banked
  2770  0027B6  6F94               	movwf	___flmul@a& (0+255),b
  2771  0027B8  0E0F               	movlw	15
  2772  0027BA  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2773  0027BC  0EC9               	movlw	201
  2774  0027BE  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2775  0027C0  0E40               	movlw	64
  2776  0027C2  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2777  0027C4  C1C8  F090         	movff	_matematica$3743,___flmul@b
  2778  0027C8  C1C9  F091         	movff	_matematica$3743+1,___flmul@b+1
  2779  0027CC  C1CA  F092         	movff	_matematica$3743+2,___flmul@b+2
  2780  0027D0  C1CB  F093         	movff	_matematica$3743+3,___flmul@b+3
  2781  0027D4  EC36  F017         	call	___flmul	;wreg free
  2782  0027D8  C090  F077         	movff	?___flmul,___fldiv@b
  2783  0027DC  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  2784  0027E0  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  2785  0027E4  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  2786  0027E8  0E00               	movlw	0
  2787  0027EA  0100               	movlb	0	; () banked
  2788  0027EC  6F7B               	movwf	___fldiv@a& (0+255),b
  2789  0027EE  0E00               	movlw	0
  2790  0027F0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2791  0027F2  0EB4               	movlw	180
  2792  0027F4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2793  0027F6  0E43               	movlw	67
  2794  0027F8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2795  0027FA  EC6E  F01B         	call	___fldiv	;wreg free
  2796  0027FE  C077  F134         	movff	?___fldiv,_prima_sterzata
  2797  002802  C078  F135         	movff	?___fldiv+1,_prima_sterzata+1
  2798  002806  C079  F136         	movff	?___fldiv+2,_prima_sterzata+2
  2799  00280A  C07A  F137         	movff	?___fldiv+3,_prima_sterzata+3
  2800                           
  2801                           ;parcheggio.c: 372: kkk = raggio + (2 * larghezza / 3);
  2802  00280E  0E00               	movlw	0
  2803  002810  0100               	movlb	0	; () banked
  2804  002812  6F7B               	movwf	___fldiv@a& (0+255),b
  2805  002814  0E00               	movlw	0
  2806  002816  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2807  002818  0E40               	movlw	64
  2808  00281A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2809  00281C  0E40               	movlw	64
  2810  00281E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2811  002820  0E00               	movlw	0
  2812  002822  0100               	movlb	0	; () banked
  2813  002824  6F94               	movwf	___flmul@a& (0+255),b
  2814  002826  0E00               	movlw	0
  2815  002828  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2816  00282A  0E00               	movlw	0
  2817  00282C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2818  00282E  0E40               	movlw	64
  2819  002830  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2820  002832  C1D8  F090         	movff	_larghezza,___flmul@b
  2821  002836  C1D9  F091         	movff	_larghezza+1,___flmul@b+1
  2822  00283A  C1DA  F092         	movff	_larghezza+2,___flmul@b+2
  2823  00283E  C1DB  F093         	movff	_larghezza+3,___flmul@b+3
  2824  002842  EC36  F017         	call	___flmul	;wreg free
  2825  002846  C090  F077         	movff	?___flmul,___fldiv@b
  2826  00284A  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  2827  00284E  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  2828  002852  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  2829  002856  EC6E  F01B         	call	___fldiv	;wreg free
  2830  00285A  C077  F0AD         	movff	?___fldiv,___fladd@b
  2831  00285E  C078  F0AE         	movff	?___fldiv+1,___fladd@b+1
  2832  002862  C079  F0AF         	movff	?___fldiv+2,___fladd@b+2
  2833  002866  C07A  F0B0         	movff	?___fldiv+3,___fladd@b+3
  2834  00286A  C1DC  F0B1         	movff	_raggio,___fladd@a
  2835  00286E  C1DD  F0B2         	movff	_raggio+1,___fladd@a+1
  2836  002872  C1DE  F0B3         	movff	_raggio+2,___fladd@a+2
  2837  002876  C1DF  F0B4         	movff	_raggio+3,___fladd@a+3
  2838  00287A  ECE2  F014         	call	___fladd	;wreg free
  2839  00287E  C0AD  F128         	movff	?___fladd,_kkk
  2840  002882  C0AE  F129         	movff	?___fladd+1,_kkk+1
  2841  002886  C0AF  F12A         	movff	?___fladd+2,_kkk+2
  2842  00288A  C0B0  F12B         	movff	?___fladd+3,_kkk+3
  2843                           
  2844                           ;parcheggio.c: 373: jjj = raggio - (2 * larghezza / 3);
  2845  00288E  0E00               	movlw	0
  2846  002890  0100               	movlb	0	; () banked
  2847  002892  6F7B               	movwf	___fldiv@a& (0+255),b
  2848  002894  0E00               	movlw	0
  2849  002896  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2850  002898  0E40               	movlw	64
  2851  00289A  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2852  00289C  0E40               	movlw	64
  2853  00289E  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2854  0028A0  0E00               	movlw	0
  2855  0028A2  0100               	movlb	0	; () banked
  2856  0028A4  6F94               	movwf	___flmul@a& (0+255),b
  2857  0028A6  0E00               	movlw	0
  2858  0028A8  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2859  0028AA  0E00               	movlw	0
  2860  0028AC  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2861  0028AE  0E40               	movlw	64
  2862  0028B0  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2863  0028B2  C1D8  F090         	movff	_larghezza,___flmul@b
  2864  0028B6  C1D9  F091         	movff	_larghezza+1,___flmul@b+1
  2865  0028BA  C1DA  F092         	movff	_larghezza+2,___flmul@b+2
  2866  0028BE  C1DB  F093         	movff	_larghezza+3,___flmul@b+3
  2867  0028C2  EC36  F017         	call	___flmul	;wreg free
  2868  0028C6  C090  F077         	movff	?___flmul,___fldiv@b
  2869  0028CA  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  2870  0028CE  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  2871  0028D2  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  2872  0028D6  EC6E  F01B         	call	___fldiv	;wreg free
  2873  0028DA  C077  F0A9         	movff	?___fldiv,___flneg@f1
  2874  0028DE  C078  F0AA         	movff	?___fldiv+1,___flneg@f1+1
  2875  0028E2  C079  F0AB         	movff	?___fldiv+2,___flneg@f1+2
  2876  0028E6  C07A  F0AC         	movff	?___fldiv+3,___flneg@f1+3
  2877  0028EA  ECA0  F02D         	call	___flneg	;wreg free
  2878  0028EE  C0A9  F0AD         	movff	?___flneg,___fladd@b
  2879  0028F2  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  2880  0028F6  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  2881  0028FA  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  2882  0028FE  C1DC  F0B1         	movff	_raggio,___fladd@a
  2883  002902  C1DD  F0B2         	movff	_raggio+1,___fladd@a+1
  2884  002906  C1DE  F0B3         	movff	_raggio+2,___fladd@a+2
  2885  00290A  C1DF  F0B4         	movff	_raggio+3,___fladd@a+3
  2886  00290E  ECE2  F014         	call	___fladd	;wreg free
  2887  002912  C0AD  F124         	movff	?___fladd,_jjj
  2888  002916  C0AE  F125         	movff	?___fladd+1,_jjj+1
  2889  00291A  C0AF  F126         	movff	?___fladd+2,_jjj+2
  2890  00291E  C0B0  F127         	movff	?___fladd+3,_jjj+3
  2891                           
  2892                           ;parcheggio.c: 374: Pminimo = kkk * cos(asin((jjj / kkk)));
  2893  002922  C128  F07B         	movff	_kkk,___fldiv@a
  2894  002926  C129  F07C         	movff	_kkk+1,___fldiv@a+1
  2895  00292A  C12A  F07D         	movff	_kkk+2,___fldiv@a+2
  2896  00292E  C12B  F07E         	movff	_kkk+3,___fldiv@a+3
  2897  002932  C124  F077         	movff	_jjj,___fldiv@b
  2898  002936  C125  F078         	movff	_jjj+1,___fldiv@b+1
  2899  00293A  C126  F079         	movff	_jjj+2,___fldiv@b+2
  2900  00293E  C127  F07A         	movff	_jjj+3,___fldiv@b+3
  2901  002942  EC6E  F01B         	call	___fldiv	;wreg free
  2902  002946  C077  F1CC         	movff	?___fldiv,_matematica$3744
  2903  00294A  C078  F1CD         	movff	?___fldiv+1,_matematica$3744+1
  2904  00294E  C079  F1CE         	movff	?___fldiv+2,_matematica$3744+2
  2905  002952  C07A  F1CF         	movff	?___fldiv+3,_matematica$3744+3
  2906                           
  2907                           ;parcheggio.c: 374: Pminimo = kkk * cos(asin((jjj / kkk)));
  2908  002956  C1CC  F194         	movff	_matematica$3744,asin@x
  2909  00295A  C1CD  F195         	movff	_matematica$3744+1,asin@x+1
  2910  00295E  C1CE  F196         	movff	_matematica$3744+2,asin@x+2
  2911  002962  C1CF  F197         	movff	_matematica$3744+3,asin@x+3
  2912  002966  ECA9  F020         	call	_asin	;wreg free
  2913  00296A  C194  F1AC         	movff	?_asin,cos@f
  2914  00296E  C195  F1AD         	movff	?_asin+1,cos@f+1
  2915  002972  C196  F1AE         	movff	?_asin+2,cos@f+2
  2916  002976  C197  F1AF         	movff	?_asin+3,cos@f+3
  2917  00297A  EC14  F02B         	call	_cos	;wreg free
  2918  00297E  C1AC  F1D0         	movff	?_cos,_matematica$3745
  2919  002982  C1AD  F1D1         	movff	?_cos+1,_matematica$3745+1
  2920  002986  C1AE  F1D2         	movff	?_cos+2,_matematica$3745+2
  2921  00298A  C1AF  F1D3         	movff	?_cos+3,_matematica$3745+3
  2922                           
  2923                           ;parcheggio.c: 374: Pminimo = kkk * cos(asin((jjj / kkk)));
  2924  00298E  C1D0  F090         	movff	_matematica$3745,___flmul@b
  2925  002992  C1D1  F091         	movff	_matematica$3745+1,___flmul@b+1
  2926  002996  C1D2  F092         	movff	_matematica$3745+2,___flmul@b+2
  2927  00299A  C1D3  F093         	movff	_matematica$3745+3,___flmul@b+3
  2928  00299E  C128  F094         	movff	_kkk,___flmul@a
  2929  0029A2  C129  F095         	movff	_kkk+1,___flmul@a+1
  2930  0029A6  C12A  F096         	movff	_kkk+2,___flmul@a+2
  2931  0029AA  C12B  F097         	movff	_kkk+3,___flmul@a+3
  2932  0029AE  EC36  F017         	call	___flmul	;wreg free
  2933  0029B2  C090  F118         	movff	?___flmul,_Pminimo
  2934  0029B6  C091  F119         	movff	?___flmul+1,_Pminimo+1
  2935  0029BA  C092  F11A         	movff	?___flmul+2,_Pminimo+2
  2936  0029BE  C093  F11B         	movff	?___flmul+3,_Pminimo+3
  2937  0029C2  0012               	return		;funcret
  2938  0029C4                     __end_of_matematica:
  2939                           	opt stack 0
  2940                           tblptru	equ	0xFF8
  2941                           tblptrh	equ	0xFF7
  2942                           tblptrl	equ	0xFF6
  2943                           tablat	equ	0xFF5
  2944                           postinc0	equ	0xFEE
  2945                           wreg	equ	0xFE8
  2946                           postdec1	equ	0xFE5
  2947                           fsr1l	equ	0xFE1
  2948                           postinc2	equ	0xFDE
  2949                           postdec2	equ	0xFDD
  2950                           status	equ	0xFD8
  2951                           
  2952 ;; *************** function _cos *****************
  2953 ;; Defined at:
  2954 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\cos.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  f               4   45[BANK1 ] int 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;		None
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  4   45[BANK1 ] int 
  2961 ;; Registers used:
  2962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2968 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2969 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  2970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2971 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  2972 ;;Total ram usage:        8 bytes
  2973 ;; Hardware stack levels used:    1
  2974 ;; Hardware stack levels required when called:    7
  2975 ;; This function calls:
  2976 ;;		___fladd
  2977 ;;		___flge
  2978 ;;		_sin
  2979 ;; This function is called by:
  2980 ;;		_matematica
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text6
  2985  005628                     __ptext6:
  2986                           	opt stack 0
  2987  005628                     _cos:
  2988                           	opt stack 21
  2989                           
  2990                           ;incstack = 0
  2991  005628  0EDB               	movlw	219
  2992  00562A  0100               	movlb	0	; () banked
  2993  00562C  6FB1               	movwf	___flge@ff1& (0+255),b
  2994  00562E  0E0F               	movlw	15
  2995  005630  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  2996  005632  0E49               	movlw	73
  2997  005634  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  2998  005636  0E40               	movlw	64
  2999  005638  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  3000  00563A  C1AC  F0B5         	movff	cos@f,___flge@ff2
  3001  00563E  C1AD  F0B6         	movff	cos@f+1,___flge@ff2+1
  3002  005642  C1AE  F0B7         	movff	cos@f+2,___flge@ff2+2
  3003  005646  C1AF  F0B8         	movff	cos@f+3,___flge@ff2+3
  3004  00564A  EC10  F028         	call	___flge	;wreg free
  3005  00564E  0100               	movlb	0	; () banked
  3006  005650  B0D8               	btfsc	status,0,c
  3007  005652  D02E               	goto	l6808
  3008                           
  3009                           ; BSR set to: 0
  3010  005654  C1AC  F0AD         	movff	cos@f,___fladd@b
  3011  005658  C1AD  F0AE         	movff	cos@f+1,___fladd@b+1
  3012  00565C  C1AE  F0AF         	movff	cos@f+2,___fladd@b+2
  3013  005660  C1AF  F0B0         	movff	cos@f+3,___fladd@b+3
  3014  005664  0EE4               	movlw	228
  3015  005666  0100               	movlb	0	; () banked
  3016  005668  6FB1               	movwf	___fladd@a& (0+255),b
  3017  00566A  0ECB               	movlw	203
  3018  00566C  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3019  00566E  0E96               	movlw	150
  3020  005670  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3021  005672  0EC0               	movlw	192
  3022  005674  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3023  005676  ECE2  F014         	call	___fladd	;wreg free
  3024  00567A  C0AD  F1B0         	movff	?___fladd,_cos$3749
  3025  00567E  C0AE  F1B1         	movff	?___fladd+1,_cos$3749+1
  3026  005682  C0AF  F1B2         	movff	?___fladd+2,_cos$3749+2
  3027  005686  C0B0  F1B3         	movff	?___fladd+3,_cos$3749+3
  3028  00568A  C1B0  F0D3         	movff	_cos$3749,sin@f
  3029  00568E  C1B1  F0D4         	movff	_cos$3749+1,sin@f+1
  3030  005692  C1B2  F0D5         	movff	_cos$3749+2,sin@f+2
  3031  005696  C1B3  F0D6         	movff	_cos$3749+3,sin@f+3
  3032  00569A  EC1D  F01F         	call	_sin	;wreg free
  3033  00569E  C0D3  F1AC         	movff	?_sin,?_cos
  3034  0056A2  C0D4  F1AD         	movff	?_sin+1,?_cos+1
  3035  0056A6  C0D5  F1AE         	movff	?_sin+2,?_cos+2
  3036  0056AA  C0D6  F1AF         	movff	?_sin+3,?_cos+3
  3037  0056AE  0012               	return	
  3038  0056B0                     l6808:
  3039  0056B0  C1AC  F0AD         	movff	cos@f,___fladd@b
  3040  0056B4  C1AD  F0AE         	movff	cos@f+1,___fladd@b+1
  3041  0056B8  C1AE  F0AF         	movff	cos@f+2,___fladd@b+2
  3042  0056BC  C1AF  F0B0         	movff	cos@f+3,___fladd@b+3
  3043  0056C0  0EDB               	movlw	219
  3044  0056C2  0100               	movlb	0	; () banked
  3045  0056C4  6FB1               	movwf	___fladd@a& (0+255),b
  3046  0056C6  0E0F               	movlw	15
  3047  0056C8  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3048  0056CA  0EC9               	movlw	201
  3049  0056CC  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3050  0056CE  0E3F               	movlw	63
  3051  0056D0  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3052  0056D2  ECE2  F014         	call	___fladd	;wreg free
  3053  0056D6  C0AD  F1B0         	movff	?___fladd,_cos$3749
  3054  0056DA  C0AE  F1B1         	movff	?___fladd+1,_cos$3749+1
  3055  0056DE  C0AF  F1B2         	movff	?___fladd+2,_cos$3749+2
  3056  0056E2  C0B0  F1B3         	movff	?___fladd+3,_cos$3749+3
  3057  0056E6  C1B0  F0D3         	movff	_cos$3749,sin@f
  3058  0056EA  C1B1  F0D4         	movff	_cos$3749+1,sin@f+1
  3059  0056EE  C1B2  F0D5         	movff	_cos$3749+2,sin@f+2
  3060  0056F2  C1B3  F0D6         	movff	_cos$3749+3,sin@f+3
  3061  0056F6  EC1D  F01F         	call	_sin	;wreg free
  3062  0056FA  C0D3  F1AC         	movff	?_sin,?_cos
  3063  0056FE  C0D4  F1AD         	movff	?_sin+1,?_cos+1
  3064  005702  C0D5  F1AE         	movff	?_sin+2,?_cos+2
  3065  005706  C0D6  F1AF         	movff	?_sin+3,?_cos+3
  3066  00570A  0012               	return	
  3067  00570C                     __end_of_cos:
  3068                           	opt stack 0
  3069                           tblptru	equ	0xFF8
  3070                           tblptrh	equ	0xFF7
  3071                           tblptrl	equ	0xFF6
  3072                           tablat	equ	0xFF5
  3073                           postinc0	equ	0xFEE
  3074                           wreg	equ	0xFE8
  3075                           postdec1	equ	0xFE5
  3076                           fsr1l	equ	0xFE1
  3077                           postinc2	equ	0xFDE
  3078                           postdec2	equ	0xFDD
  3079                           status	equ	0xFD8
  3080                           
  3081 ;; *************** function _sin *****************
  3082 ;; Defined at:
  3083 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sin.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  f               4  115[BANK0 ] int 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  x2              4    8[BANK1 ] int 
  3088 ;;  y               4    0[BANK1 ] int 
  3089 ;;  sgn             1   12[BANK1 ] unsigned char 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  4  115[BANK0 ] unsigned char 
  3092 ;; Registers used:
  3093 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3099 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3100 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  3101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3102 ;;      Totals:         0       4      13       0       0       0       0       0       0       0       0       0       
      +0       0
  3103 ;;Total ram usage:       17 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; Hardware stack levels required when called:    6
  3106 ;; This function calls:
  3107 ;;		___fladd
  3108 ;;		___fldiv
  3109 ;;		___flge
  3110 ;;		___flmul
  3111 ;;		___flneg
  3112 ;;		___flsub
  3113 ;;		_eval_poly
  3114 ;;		_floor
  3115 ;; This function is called by:
  3116 ;;		_cos
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           	psect	text7
  3121  003E3A                     __ptext7:
  3122                           	opt stack 0
  3123  003E3A                     _sin:
  3124                           	opt stack 21
  3125                           
  3126                           ;incstack = 0
  3127  003E3A  0E00               	movlw	0
  3128  003E3C  0101               	movlb	1	; () banked
  3129  003E3E  6F8B               	movwf	sin@sgn& (0+255),b
  3130                           
  3131                           ; BSR set to: 1
  3132  003E40  0100               	movlb	0	; () banked
  3133  003E42  AFD6               	btfss	(sin@f+3)& (0+255),7,b
  3134  003E44  D015               	goto	l6732
  3135                           
  3136                           ; BSR set to: 0
  3137  003E46  C0D3  F0A9         	movff	sin@f,___flneg@f1
  3138  003E4A  C0D4  F0AA         	movff	sin@f+1,___flneg@f1+1
  3139  003E4E  C0D5  F0AB         	movff	sin@f+2,___flneg@f1+2
  3140  003E52  C0D6  F0AC         	movff	sin@f+3,___flneg@f1+3
  3141  003E56  ECA0  F02D         	call	___flneg	;wreg free
  3142  003E5A  C0A9  F0D3         	movff	?___flneg,sin@f
  3143  003E5E  C0AA  F0D4         	movff	?___flneg+1,sin@f+1
  3144  003E62  C0AB  F0D5         	movff	?___flneg+2,sin@f+2
  3145  003E66  C0AC  F0D6         	movff	?___flneg+3,sin@f+3
  3146  003E6A  0E01               	movlw	1
  3147  003E6C  0101               	movlb	1	; () banked
  3148  003E6E  6F8B               	movwf	sin@sgn& (0+255),b
  3149  003E70                     l6732:
  3150  003E70  C0D3  F090         	movff	sin@f,___flmul@b
  3151  003E74  C0D4  F091         	movff	sin@f+1,___flmul@b+1
  3152  003E78  C0D5  F092         	movff	sin@f+2,___flmul@b+2
  3153  003E7C  C0D6  F093         	movff	sin@f+3,___flmul@b+3
  3154  003E80  0E83               	movlw	131
  3155  003E82  0100               	movlb	0	; () banked
  3156  003E84  6F94               	movwf	___flmul@a& (0+255),b
  3157  003E86  0EF9               	movlw	249
  3158  003E88  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3159  003E8A  0E22               	movlw	34
  3160  003E8C  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3161  003E8E  0E3E               	movlw	62
  3162  003E90  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3163  003E92  EC36  F017         	call	___flmul	;wreg free
  3164  003E96  C090  F0D3         	movff	?___flmul,sin@f
  3165  003E9A  C091  F0D4         	movff	?___flmul+1,sin@f+1
  3166  003E9E  C092  F0D5         	movff	?___flmul+2,sin@f+2
  3167  003EA2  C093  F0D6         	movff	?___flmul+3,sin@f+3
  3168  003EA6  C0D3  F0CB         	movff	sin@f,___flsub@b
  3169  003EAA  C0D4  F0CC         	movff	sin@f+1,___flsub@b+1
  3170  003EAE  C0D5  F0CD         	movff	sin@f+2,___flsub@b+2
  3171  003EB2  C0D6  F0CE         	movff	sin@f+3,___flsub@b+3
  3172  003EB6  C0D3  F0C1         	movff	sin@f,floor@x
  3173  003EBA  C0D4  F0C2         	movff	sin@f+1,floor@x+1
  3174  003EBE  C0D5  F0C3         	movff	sin@f+2,floor@x+2
  3175  003EC2  C0D6  F0C4         	movff	sin@f+3,floor@x+3
  3176  003EC6  EC70  F029         	call	_floor	;wreg free
  3177  003ECA  C0C1  F0CF         	movff	?_floor,___flsub@a
  3178  003ECE  C0C2  F0D0         	movff	?_floor+1,___flsub@a+1
  3179  003ED2  C0C3  F0D1         	movff	?_floor+2,___flsub@a+2
  3180  003ED6  C0C4  F0D2         	movff	?_floor+3,___flsub@a+3
  3181  003EDA  EC40  F02D         	call	___flsub	;wreg free
  3182  003EDE  C0CB  F0D3         	movff	?___flsub,sin@f
  3183  003EE2  C0CC  F0D4         	movff	?___flsub+1,sin@f+1
  3184  003EE6  C0CD  F0D5         	movff	?___flsub+2,sin@f+2
  3185  003EEA  C0CE  F0D6         	movff	?___flsub+3,sin@f+3
  3186  003EEE  C0D3  F090         	movff	sin@f,___flmul@b
  3187  003EF2  C0D4  F091         	movff	sin@f+1,___flmul@b+1
  3188  003EF6  C0D5  F092         	movff	sin@f+2,___flmul@b+2
  3189  003EFA  C0D6  F093         	movff	sin@f+3,___flmul@b+3
  3190  003EFE  0E00               	movlw	0
  3191  003F00  0100               	movlb	0	; () banked
  3192  003F02  6F94               	movwf	___flmul@a& (0+255),b
  3193  003F04  0E00               	movlw	0
  3194  003F06  6F95               	movwf	(___flmul@a+1)& (0+255),b
  3195  003F08  0E80               	movlw	128
  3196  003F0A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  3197  003F0C  0E40               	movlw	64
  3198  003F0E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  3199  003F10  EC36  F017         	call	___flmul	;wreg free
  3200  003F14  C090  F0D3         	movff	?___flmul,sin@f
  3201  003F18  C091  F0D4         	movff	?___flmul+1,sin@f+1
  3202  003F1C  C092  F0D5         	movff	?___flmul+2,sin@f+2
  3203  003F20  C093  F0D6         	movff	?___flmul+3,sin@f+3
  3204  003F24  0E00               	movlw	0
  3205  003F26  0100               	movlb	0	; () banked
  3206  003F28  6FB1               	movwf	___flge@ff1& (0+255),b
  3207  003F2A  0E00               	movlw	0
  3208  003F2C  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  3209  003F2E  0E00               	movlw	0
  3210  003F30  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  3211  003F32  0E40               	movlw	64
  3212  003F34  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  3213  003F36  C0D3  F0B5         	movff	sin@f,___flge@ff2
  3214  003F3A  C0D4  F0B6         	movff	sin@f+1,___flge@ff2+1
  3215  003F3E  C0D5  F0B7         	movff	sin@f+2,___flge@ff2+2
  3216  003F42  C0D6  F0B8         	movff	sin@f+3,___flge@ff2+3
  3217  003F46  EC10  F028         	call	___flge	;wreg free
  3218  003F4A  0100               	movlb	0	; () banked
  3219  003F4C  B0D8               	btfsc	status,0,c
  3220  003F4E  D025               	goto	l6744
  3221                           
  3222                           ; BSR set to: 0
  3223  003F50  C0D3  F0CB         	movff	sin@f,___flsub@b
  3224  003F54  C0D4  F0CC         	movff	sin@f+1,___flsub@b+1
  3225  003F58  C0D5  F0CD         	movff	sin@f+2,___flsub@b+2
  3226  003F5C  C0D6  F0CE         	movff	sin@f+3,___flsub@b+3
  3227  003F60  0E00               	movlw	0
  3228  003F62  0100               	movlb	0	; () banked
  3229  003F64  6FCF               	movwf	___flsub@a& (0+255),b
  3230  003F66  0E00               	movlw	0
  3231  003F68  6FD0               	movwf	(___flsub@a+1)& (0+255),b
  3232  003F6A  0E00               	movlw	0
  3233  003F6C  6FD1               	movwf	(___flsub@a+2)& (0+255),b
  3234  003F6E  0E40               	movlw	64
  3235  003F70  6FD2               	movwf	(___flsub@a+3)& (0+255),b
  3236  003F72  EC40  F02D         	call	___flsub	;wreg free
  3237  003F76  C0CB  F0D3         	movff	?___flsub,sin@f
  3238  003F7A  C0CC  F0D4         	movff	?___flsub+1,sin@f+1
  3239  003F7E  C0CD  F0D5         	movff	?___flsub+2,sin@f+2
  3240  003F82  C0CE  F0D6         	movff	?___flsub+3,sin@f+3
  3241  003F86  0101               	movlb	1	; () banked
  3242  003F88  518B               	movf	sin@sgn& (0+255),w,b
  3243  003F8A  0101               	movlb	1	; () banked
  3244  003F8C  A4D8               	btfss	status,2,c
  3245  003F8E  D002               	goto	u8580
  3246  003F90  0E01               	movlw	1
  3247  003F92  D001               	goto	u8590
  3248  003F94                     u8580:
  3249  003F94  0E00               	movlw	0
  3250  003F96                     u8590:
  3251  003F96  0101               	movlb	1	; () banked
  3252  003F98  6F8B               	movwf	sin@sgn& (0+255),b
  3253  003F9A                     l6744:
  3254  003F9A  0E00               	movlw	0
  3255  003F9C  0100               	movlb	0	; () banked
  3256  003F9E  6FB1               	movwf	___flge@ff1& (0+255),b
  3257  003FA0  0E00               	movlw	0
  3258  003FA2  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  3259  003FA4  0E80               	movlw	128
  3260  003FA6  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  3261  003FA8  0E3F               	movlw	63
  3262  003FAA  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  3263  003FAC  C0D3  F0B5         	movff	sin@f,___flge@ff2
  3264  003FB0  C0D4  F0B6         	movff	sin@f+1,___flge@ff2+1
  3265  003FB4  C0D5  F0B7         	movff	sin@f+2,___flge@ff2+2
  3266  003FB8  C0D6  F0B8         	movff	sin@f+3,___flge@ff2+3
  3267  003FBC  EC10  F028         	call	___flge	;wreg free
  3268  003FC0  0100               	movlb	0	; () banked
  3269  003FC2  B0D8               	btfsc	status,0,c
  3270  003FC4  D025               	goto	l6748
  3271                           
  3272                           ; BSR set to: 0
  3273  003FC6  C0D3  F0A9         	movff	sin@f,___flneg@f1
  3274  003FCA  C0D4  F0AA         	movff	sin@f+1,___flneg@f1+1
  3275  003FCE  C0D5  F0AB         	movff	sin@f+2,___flneg@f1+2
  3276  003FD2  C0D6  F0AC         	movff	sin@f+3,___flneg@f1+3
  3277  003FD6  ECA0  F02D         	call	___flneg	;wreg free
  3278  003FDA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  3279  003FDE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  3280  003FE2  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  3281  003FE6  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  3282  003FEA  0E00               	movlw	0
  3283  003FEC  0100               	movlb	0	; () banked
  3284  003FEE  6FB1               	movwf	___fladd@a& (0+255),b
  3285  003FF0  0E00               	movlw	0
  3286  003FF2  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3287  003FF4  0E00               	movlw	0
  3288  003FF6  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3289  003FF8  0E40               	movlw	64
  3290  003FFA  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3291  003FFC  ECE2  F014         	call	___fladd	;wreg free
  3292  004000  C0AD  F0D3         	movff	?___fladd,sin@f
  3293  004004  C0AE  F0D4         	movff	?___fladd+1,sin@f+1
  3294  004008  C0AF  F0D5         	movff	?___fladd+2,sin@f+2
  3295  00400C  C0B0  F0D6         	movff	?___fladd+3,sin@f+3
  3296  004010                     l6748:
  3297  004010  C0D3  F090         	movff	sin@f,___flmul@b
  3298  004014  C0D4  F091         	movff	sin@f+1,___flmul@b+1
  3299  004018  C0D5  F092         	movff	sin@f+2,___flmul@b+2
  3300  00401C  C0D6  F093         	movff	sin@f+3,___flmul@b+3
  3301  004020  C0D3  F094         	movff	sin@f,___flmul@a
  3302  004024  C0D4  F095         	movff	sin@f+1,___flmul@a+1
  3303  004028  C0D5  F096         	movff	sin@f+2,___flmul@a+2
  3304  00402C  C0D6  F097         	movff	sin@f+3,___flmul@a+3
  3305  004030  EC36  F017         	call	___flmul	;wreg free
  3306  004034  C090  F187         	movff	?___flmul,sin@x2
  3307  004038  C091  F188         	movff	?___flmul+1,sin@x2+1
  3308  00403C  C092  F189         	movff	?___flmul+2,sin@x2+2
  3309  004040  C093  F18A         	movff	?___flmul+3,sin@x2+3
  3310  004044  C187  F0C1         	movff	sin@x2,eval_poly@x
  3311  004048  C188  F0C2         	movff	sin@x2+1,eval_poly@x+1
  3312  00404C  C189  F0C3         	movff	sin@x2+2,eval_poly@x+2
  3313  004050  C18A  F0C4         	movff	sin@x2+3,eval_poly@x+3
  3314  004054  0E41               	movlw	low sin@coeff_b
  3315  004056  0100               	movlb	0	; () banked
  3316  004058  6FC5               	movwf	eval_poly@d& (0+255),b
  3317  00405A  0E0D               	movlw	high sin@coeff_b
  3318  00405C  0100               	movlb	0	; () banked
  3319  00405E  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  3320  004060  0E00               	movlw	0
  3321  004062  0100               	movlb	0	; () banked
  3322  004064  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  3323  004066  0E03               	movlw	3
  3324  004068  6FC7               	movwf	eval_poly@n& (0+255),b
  3325  00406A  EC02  F02A         	call	_eval_poly	;wreg free
  3326  00406E  C0C1  F17F         	movff	?_eval_poly,sin@y
  3327  004072  C0C2  F180         	movff	?_eval_poly+1,sin@y+1
  3328  004076  C0C3  F181         	movff	?_eval_poly+2,sin@y+2
  3329  00407A  C0C4  F182         	movff	?_eval_poly+3,sin@y+3
  3330  00407E  C17F  F07B         	movff	sin@y,___fldiv@a
  3331  004082  C180  F07C         	movff	sin@y+1,___fldiv@a+1
  3332  004086  C181  F07D         	movff	sin@y+2,___fldiv@a+2
  3333  00408A  C182  F07E         	movff	sin@y+3,___fldiv@a+3
  3334  00408E  0E00               	movlw	0
  3335  004090  0100               	movlb	0	; () banked
  3336  004092  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  3337  004094  0E04               	movlw	4
  3338  004096  6FC7               	movwf	eval_poly@n& (0+255),b
  3339  004098  0E2D               	movlw	low sin@coeff_a
  3340  00409A  0100               	movlb	0	; () banked
  3341  00409C  6FC5               	movwf	eval_poly@d& (0+255),b
  3342  00409E  0E0D               	movlw	high sin@coeff_a
  3343  0040A0  0100               	movlb	0	; () banked
  3344  0040A2  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  3345  0040A4  C187  F0C1         	movff	sin@x2,eval_poly@x
  3346  0040A8  C188  F0C2         	movff	sin@x2+1,eval_poly@x+1
  3347  0040AC  C189  F0C3         	movff	sin@x2+2,eval_poly@x+2
  3348  0040B0  C18A  F0C4         	movff	sin@x2+3,eval_poly@x+3
  3349  0040B4  EC02  F02A         	call	_eval_poly	;wreg free
  3350  0040B8  C0C1  F077         	movff	?_eval_poly,___fldiv@b
  3351  0040BC  C0C2  F078         	movff	?_eval_poly+1,___fldiv@b+1
  3352  0040C0  C0C3  F079         	movff	?_eval_poly+2,___fldiv@b+2
  3353  0040C4  C0C4  F07A         	movff	?_eval_poly+3,___fldiv@b+3
  3354  0040C8  EC6E  F01B         	call	___fldiv	;wreg free
  3355  0040CC  C077  F183         	movff	?___fldiv,_sin$3750
  3356  0040D0  C078  F184         	movff	?___fldiv+1,_sin$3750+1
  3357  0040D4  C079  F185         	movff	?___fldiv+2,_sin$3750+2
  3358  0040D8  C07A  F186         	movff	?___fldiv+3,_sin$3750+3
  3359  0040DC  C0D3  F090         	movff	sin@f,___flmul@b
  3360  0040E0  C0D4  F091         	movff	sin@f+1,___flmul@b+1
  3361  0040E4  C0D5  F092         	movff	sin@f+2,___flmul@b+2
  3362  0040E8  C0D6  F093         	movff	sin@f+3,___flmul@b+3
  3363  0040EC  C183  F094         	movff	_sin$3750,___flmul@a
  3364  0040F0  C184  F095         	movff	_sin$3750+1,___flmul@a+1
  3365  0040F4  C185  F096         	movff	_sin$3750+2,___flmul@a+2
  3366  0040F8  C186  F097         	movff	_sin$3750+3,___flmul@a+3
  3367  0040FC  EC36  F017         	call	___flmul	;wreg free
  3368  004100  C090  F0D3         	movff	?___flmul,sin@f
  3369  004104  C091  F0D4         	movff	?___flmul+1,sin@f+1
  3370  004108  C092  F0D5         	movff	?___flmul+2,sin@f+2
  3371  00410C  C093  F0D6         	movff	?___flmul+3,sin@f+3
  3372  004110  0101               	movlb	1	; () banked
  3373  004112  518B               	movf	sin@sgn& (0+255),w,b
  3374  004114  0101               	movlb	1	; () banked
  3375  004116  B4D8               	btfsc	status,2,c
  3376  004118  D013               	goto	l1291
  3377                           
  3378                           ; BSR set to: 1
  3379  00411A  C0D3  F0A9         	movff	sin@f,___flneg@f1
  3380  00411E  C0D4  F0AA         	movff	sin@f+1,___flneg@f1+1
  3381  004122  C0D5  F0AB         	movff	sin@f+2,___flneg@f1+2
  3382  004126  C0D6  F0AC         	movff	sin@f+3,___flneg@f1+3
  3383  00412A  ECA0  F02D         	call	___flneg	;wreg free
  3384  00412E  C0A9  F0D3         	movff	?___flneg,?_sin
  3385  004132  C0AA  F0D4         	movff	?___flneg+1,?_sin+1
  3386  004136  C0AB  F0D5         	movff	?___flneg+2,?_sin+2
  3387  00413A  C0AC  F0D6         	movff	?___flneg+3,?_sin+3
  3388  00413E  0012               	return	
  3389  004140                     l1291:
  3390                           
  3391                           ; BSR set to: 1
  3392  004140  C0D3  F0D3         	movff	sin@f,?_sin
  3393  004144  C0D4  F0D4         	movff	sin@f+1,?_sin+1
  3394  004148  C0D5  F0D5         	movff	sin@f+2,?_sin+2
  3395  00414C  C0D6  F0D6         	movff	sin@f+3,?_sin+3
  3396  004150  0012               	return		;funcret
  3397  004152                     __end_of_sin:
  3398                           	opt stack 0
  3399                           tblptru	equ	0xFF8
  3400                           tblptrh	equ	0xFF7
  3401                           tblptrl	equ	0xFF6
  3402                           tablat	equ	0xFF5
  3403                           postinc0	equ	0xFEE
  3404                           wreg	equ	0xFE8
  3405                           postdec1	equ	0xFE5
  3406                           fsr1l	equ	0xFE1
  3407                           postinc2	equ	0xFDE
  3408                           postdec2	equ	0xFDD
  3409                           status	equ	0xFD8
  3410                           
  3411 ;; *************** function _floor *****************
  3412 ;; Defined at:
  3413 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  x               4   97[BANK0 ] unsigned char 
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;  i               4  101[BANK0 ] unsigned char 
  3418 ;;  expon           2  105[BANK0 ] int 
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  4   97[BANK0 ] int 
  3421 ;; Registers used:
  3422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3428 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3429 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3431 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3432 ;;Total ram usage:       10 bytes
  3433 ;; Hardware stack levels used:    1
  3434 ;; Hardware stack levels required when called:    5
  3435 ;; This function calls:
  3436 ;;		___fladd
  3437 ;;		___flge
  3438 ;;		___fltol
  3439 ;;		___xxtofl
  3440 ;;		_frexp
  3441 ;; This function is called by:
  3442 ;;		_sin
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text8
  3447  0052E0                     __ptext8:
  3448                           	opt stack 0
  3449  0052E0                     _floor:
  3450                           	opt stack 21
  3451                           
  3452                           ;incstack = 0
  3453  0052E0  C0C1  F077         	movff	floor@x,frexp@value
  3454  0052E4  C0C2  F078         	movff	floor@x+1,frexp@value+1
  3455  0052E8  C0C3  F079         	movff	floor@x+2,frexp@value+2
  3456  0052EC  C0C4  F07A         	movff	floor@x+3,frexp@value+3
  3457  0052F0  0EC9               	movlw	low floor@expon
  3458  0052F2  0100               	movlb	0	; () banked
  3459  0052F4  6F7B               	movwf	frexp@eptr& (0+255),b
  3460  0052F6  0E00               	movlw	high floor@expon
  3461  0052F8  0100               	movlb	0	; () banked
  3462  0052FA  6F7C               	movwf	(frexp@eptr+1)& (0+255),b
  3463  0052FC  ECF6  F02B         	call	_frexp	;wreg free
  3464  005300  0100               	movlb	0	; () banked
  3465  005302  AFCA               	btfss	(floor@expon+1)& (0+255),7,b
  3466  005304  D017               	goto	l6586
  3467                           
  3468                           ; BSR set to: 0
  3469  005306  0100               	movlb	0	; () banked
  3470  005308  AFC4               	btfss	(floor@x+3)& (0+255),7,b
  3471  00530A  D00A               	goto	l6582
  3472                           
  3473                           ; BSR set to: 0
  3474  00530C  0E00               	movlw	0
  3475  00530E  0100               	movlb	0	; () banked
  3476  005310  6FC1               	movwf	?_floor& (0+255),b
  3477  005312  0E00               	movlw	0
  3478  005314  6FC2               	movwf	(?_floor+1)& (0+255),b
  3479  005316  0E80               	movlw	128
  3480  005318  6FC3               	movwf	(?_floor+2)& (0+255),b
  3481  00531A  0EBF               	movlw	191
  3482  00531C  6FC4               	movwf	(?_floor+3)& (0+255),b
  3483                           
  3484                           ; BSR set to: 0
  3485  00531E  0012               	return	
  3486  005320                     l6582:
  3487                           
  3488                           ; BSR set to: 0
  3489  005320  0E00               	movlw	0
  3490  005322  0100               	movlb	0	; () banked
  3491  005324  6FC1               	movwf	?_floor& (0+255),b
  3492  005326  0E00               	movlw	0
  3493  005328  6FC2               	movwf	(?_floor+1)& (0+255),b
  3494  00532A  0E00               	movlw	0
  3495  00532C  6FC3               	movwf	(?_floor+2)& (0+255),b
  3496  00532E  0E00               	movlw	0
  3497  005330  6FC4               	movwf	(?_floor+3)& (0+255),b
  3498                           
  3499                           ; BSR set to: 0
  3500  005332  0012               	return	
  3501  005334                     l6586:
  3502                           
  3503                           ; BSR set to: 0
  3504  005334  0100               	movlb	0	; () banked
  3505  005336  51CA               	movf	(floor@expon+1)& (0+255),w,b
  3506  005338  E105               	bnz	u8370
  3507  00533A  0E1D               	movlw	29
  3508  00533C  0100               	movlb	0	; () banked
  3509  00533E  5DC9               	subwf	floor@expon& (0+255),w,b
  3510  005340  A0D8               	btfss	status,0,c
  3511  005342  D009               	goto	l6590
  3512  005344                     u8370:
  3513                           
  3514                           ; BSR set to: 0
  3515  005344  C0C1  F0C1         	movff	floor@x,?_floor
  3516  005348  C0C2  F0C2         	movff	floor@x+1,?_floor+1
  3517  00534C  C0C3  F0C3         	movff	floor@x+2,?_floor+2
  3518  005350  C0C4  F0C4         	movff	floor@x+3,?_floor+3
  3519  005354  0012               	return	
  3520  005356                     l6590:
  3521                           
  3522                           ; BSR set to: 0
  3523  005356  C0C1  F077         	movff	floor@x,___fltol@f1
  3524  00535A  C0C2  F078         	movff	floor@x+1,___fltol@f1+1
  3525  00535E  C0C3  F079         	movff	floor@x+2,___fltol@f1+2
  3526  005362  C0C4  F07A         	movff	floor@x+3,___fltol@f1+3
  3527  005366  EC8E  F02A         	call	___fltol	;wreg free
  3528  00536A  C077  F081         	movff	?___fltol,___xxtofl@val
  3529  00536E  C078  F082         	movff	?___fltol+1,___xxtofl@val+1
  3530  005372  C079  F083         	movff	?___fltol+2,___xxtofl@val+2
  3531  005376  C07A  F084         	movff	?___fltol+3,___xxtofl@val+3
  3532  00537A  0E01               	movlw	1
  3533  00537C  ECA1  F024         	call	___xxtofl
  3534  005380  C081  F0C5         	movff	?___xxtofl,floor@i
  3535  005384  C082  F0C6         	movff	?___xxtofl+1,floor@i+1
  3536  005388  C083  F0C7         	movff	?___xxtofl+2,floor@i+2
  3537  00538C  C084  F0C8         	movff	?___xxtofl+3,floor@i+3
  3538  005390  C0C1  F0B1         	movff	floor@x,___flge@ff1
  3539  005394  C0C2  F0B2         	movff	floor@x+1,___flge@ff1+1
  3540  005398  C0C3  F0B3         	movff	floor@x+2,___flge@ff1+2
  3541  00539C  C0C4  F0B4         	movff	floor@x+3,___flge@ff1+3
  3542  0053A0  C0C5  F0B5         	movff	floor@i,___flge@ff2
  3543  0053A4  C0C6  F0B6         	movff	floor@i+1,___flge@ff2+1
  3544  0053A8  C0C7  F0B7         	movff	floor@i+2,___flge@ff2+2
  3545  0053AC  C0C8  F0B8         	movff	floor@i+3,___flge@ff2+3
  3546  0053B0  EC10  F028         	call	___flge	;wreg free
  3547  0053B4  0100               	movlb	0	; () banked
  3548  0053B6  B0D8               	btfsc	status,0,c
  3549  0053B8  D01C               	goto	l1460
  3550                           
  3551                           ; BSR set to: 0
  3552  0053BA  C0C5  F0AD         	movff	floor@i,___fladd@b
  3553  0053BE  C0C6  F0AE         	movff	floor@i+1,___fladd@b+1
  3554  0053C2  C0C7  F0AF         	movff	floor@i+2,___fladd@b+2
  3555  0053C6  C0C8  F0B0         	movff	floor@i+3,___fladd@b+3
  3556  0053CA  0E00               	movlw	0
  3557  0053CC  0100               	movlb	0	; () banked
  3558  0053CE  6FB1               	movwf	___fladd@a& (0+255),b
  3559  0053D0  0E00               	movlw	0
  3560  0053D2  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  3561  0053D4  0E80               	movlw	128
  3562  0053D6  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  3563  0053D8  0EBF               	movlw	191
  3564  0053DA  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  3565  0053DC  ECE2  F014         	call	___fladd	;wreg free
  3566  0053E0  C0AD  F0C1         	movff	?___fladd,?_floor
  3567  0053E4  C0AE  F0C2         	movff	?___fladd+1,?_floor+1
  3568  0053E8  C0AF  F0C3         	movff	?___fladd+2,?_floor+2
  3569  0053EC  C0B0  F0C4         	movff	?___fladd+3,?_floor+3
  3570  0053F0  0012               	return	
  3571  0053F2                     l1460:
  3572                           
  3573                           ; BSR set to: 0
  3574  0053F2  C0C5  F0C1         	movff	floor@i,?_floor
  3575  0053F6  C0C6  F0C2         	movff	floor@i+1,?_floor+1
  3576  0053FA  C0C7  F0C3         	movff	floor@i+2,?_floor+2
  3577  0053FE  C0C8  F0C4         	movff	floor@i+3,?_floor+3
  3578  005402  0012               	return		;funcret
  3579  005404                     __end_of_floor:
  3580                           	opt stack 0
  3581                           tblptru	equ	0xFF8
  3582                           tblptrh	equ	0xFF7
  3583                           tblptrl	equ	0xFF6
  3584                           tablat	equ	0xFF5
  3585                           postinc0	equ	0xFEE
  3586                           wreg	equ	0xFE8
  3587                           postdec1	equ	0xFE5
  3588                           fsr1l	equ	0xFE1
  3589                           postinc2	equ	0xFDE
  3590                           postdec2	equ	0xFDD
  3591                           status	equ	0xFD8
  3592                           
  3593 ;; *************** function _frexp *****************
  3594 ;; Defined at:
  3595 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  value           4   23[BANK0 ] int 
  3598 ;;  eptr            2   27[BANK0 ] PTR int 
  3599 ;;		 -> floor@expon(2), 
  3600 ;; Auto vars:     Size  Location     Type
  3601 ;;		None
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  4   23[BANK0 ] PTR int 
  3604 ;; Registers used:
  3605 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3611 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3613 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3614 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3615 ;;Total ram usage:        8 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:    4
  3618 ;; This function calls:
  3619 ;;		Nothing
  3620 ;; This function is called by:
  3621 ;;		_floor
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text9
  3626  0057EC                     __ptext9:
  3627                           	opt stack 0
  3628  0057EC                     _frexp:
  3629                           	opt stack 21
  3630                           
  3631                           ;incstack = 0
  3632  0057EC  0100               	movlb	0	; () banked
  3633  0057EE  5177               	movf	frexp@value& (0+255),w,b
  3634  0057F0  0100               	movlb	0	; () banked
  3635  0057F2  1178               	iorwf	(frexp@value+1)& (0+255),w,b
  3636  0057F4  0100               	movlb	0	; () banked
  3637  0057F6  1179               	iorwf	(frexp@value+2)& (0+255),w,b
  3638  0057F8  0100               	movlb	0	; () banked
  3639  0057FA  117A               	iorwf	(frexp@value+3)& (0+255),w,b
  3640  0057FC  A4D8               	btfss	status,2,c
  3641  0057FE  D009               	goto	l6408
  3642                           
  3643                           ; BSR set to: 0
  3644  005800  C07B  FFD9         	movff	frexp@eptr,fsr2l
  3645  005804  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  3646  005808  0E00               	movlw	0
  3647  00580A  6EDE               	movwf	postinc2,c
  3648  00580C  0E00               	movlw	0
  3649  00580E  6EDD               	movwf	postdec2,c
  3650                           
  3651                           ; BSR set to: 0
  3652                           ;	Return value of _frexp is never used
  3653  005810  0012               	return	
  3654  005812                     l6408:
  3655                           
  3656                           ; BSR set to: 0
  3657  005812  0100               	movlb	0	; () banked
  3658  005814  517A               	movf	(frexp@value+3)& (0+255),w,b
  3659  005816  0B7F               	andlw	127
  3660  005818  0100               	movlb	0	; () banked
  3661  00581A  6F7D               	movwf	??_frexp& (0+255),b
  3662  00581C  6B7E               	clrf	(??_frexp+1)& (0+255),b
  3663  00581E  90D8               	bcf	status,0,c
  3664  005820  0100               	movlb	0	; () banked
  3665  005822  377D               	rlcf	??_frexp& (0+255),f,b
  3666  005824  377E               	rlcf	(??_frexp+1)& (0+255),f,b
  3667  005826  C07B  FFD9         	movff	frexp@eptr,fsr2l
  3668  00582A  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  3669  00582E  C07D  FFDE         	movff	??_frexp,postinc2
  3670  005832  C07E  FFDD         	movff	??_frexp+1,postdec2
  3671  005836  0100               	movlb	0	; () banked
  3672  005838  AF79               	btfss	(frexp@value+2)& (0+255),7,b
  3673  00583A  D004               	goto	u8090
  3674  00583C  0100               	movlb	0	; () banked
  3675  00583E  6B7D               	clrf	??_frexp& (0+255),b
  3676  005840  2B7D               	incf	??_frexp& (0+255),f,b
  3677  005842  D002               	goto	u8098
  3678  005844                     u8090:
  3679  005844  0100               	movlb	0	; () banked
  3680  005846  6B7D               	clrf	??_frexp& (0+255),b
  3681  005848                     u8098:
  3682  005848  0100               	movlb	0	; () banked
  3683  00584A  517D               	movf	??_frexp& (0+255),w,b
  3684  00584C  C07B  FFD9         	movff	frexp@eptr,fsr2l
  3685  005850  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  3686  005854  12DE               	iorwf	postinc2,f,c
  3687  005856  0E00               	movlw	0
  3688  005858  12DD               	iorwf	postdec2,f,c
  3689                           
  3690                           ; BSR set to: 0
  3691  00585A  C07B  FFD9         	movff	frexp@eptr,fsr2l
  3692  00585E  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  3693  005862  0E82               	movlw	130
  3694  005864  26DE               	addwf	postinc2,f,c
  3695  005866  0EFF               	movlw	255
  3696  005868  22DD               	addwfc	postdec2,f,c
  3697                           
  3698                           ; BSR set to: 0
  3699  00586A  0100               	movlb	0	; () banked
  3700  00586C  817A               	bsf	(frexp@value+3)& (0+255),0,b
  3701  00586E  837A               	bsf	(frexp@value+3)& (0+255),1,b
  3702  005870  857A               	bsf	(frexp@value+3)& (0+255),2,b
  3703  005872  877A               	bsf	(frexp@value+3)& (0+255),3,b
  3704  005874  897A               	bsf	(frexp@value+3)& (0+255),4,b
  3705  005876  8B7A               	bsf	(frexp@value+3)& (0+255),5,b
  3706  005878  9D7A               	bcf	(frexp@value+3)& (0+255),6,b
  3707                           
  3708                           ; BSR set to: 0
  3709  00587A  0100               	movlb	0	; () banked
  3710  00587C  9F79               	bcf	(frexp@value+2)& (0+255),7,b
  3711  00587E  0012               	return	
  3712  005880                     __end_of_frexp:
  3713                           	opt stack 0
  3714                           tblptru	equ	0xFF8
  3715                           tblptrh	equ	0xFF7
  3716                           tblptrl	equ	0xFF6
  3717                           tablat	equ	0xFF5
  3718                           postinc0	equ	0xFEE
  3719                           wreg	equ	0xFE8
  3720                           postdec1	equ	0xFE5
  3721                           fsr1l	equ	0xFE1
  3722                           postinc2	equ	0xFDE
  3723                           postdec2	equ	0xFDD
  3724                           fsr2h	equ	0xFDA
  3725                           fsr2l	equ	0xFD9
  3726                           status	equ	0xFD8
  3727                           
  3728 ;; *************** function ___xxtofl *****************
  3729 ;; Defined at:
  3730 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  3731 ;; Parameters:    Size  Location     Type
  3732 ;;  sign            1    wreg     unsigned char 
  3733 ;;  val             4   33[BANK0 ] long 
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;  sign            1   41[BANK0 ] unsigned char 
  3736 ;;  arg             4   43[BANK0 ] unsigned long 
  3737 ;;  exp             1   42[BANK0 ] unsigned char 
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  4   33[BANK0 ] unsigned char 
  3740 ;; Registers used:
  3741 ;;		wreg, status,2, status,0
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3747 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3748 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3749 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3750 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3751 ;;Total ram usage:       14 bytes
  3752 ;; Hardware stack levels used:    1
  3753 ;; Hardware stack levels required when called:    4
  3754 ;; This function calls:
  3755 ;;		Nothing
  3756 ;; This function is called by:
  3757 ;;		_park_search
  3758 ;;		_parallelo
  3759 ;;		_floor
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text10
  3764  004942                     __ptext10:
  3765                           	opt stack 0
  3766  004942                     ___xxtofl:
  3767                           	opt stack 24
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;incstack = 0
  3771                           ;___xxtofl@sign stored from wreg
  3772  004942  0100               	movlb	0	; () banked
  3773  004944  6F89               	movwf	___xxtofl@sign& (0+255),b
  3774  004946  0100               	movlb	0	; () banked
  3775  004948  5189               	movf	___xxtofl@sign& (0+255),w,b
  3776  00494A  0100               	movlb	0	; () banked
  3777  00494C  B4D8               	btfsc	status,2,c
  3778  00494E  D01E               	goto	l1435
  3779                           
  3780                           ; BSR set to: 0
  3781  004950  0100               	movlb	0	; () banked
  3782  004952  AF84               	btfss	(___xxtofl@val+3)& (0+255),7,b
  3783  004954  D01B               	goto	l1435
  3784                           
  3785                           ; BSR set to: 0
  3786  004956  C081  F085         	movff	___xxtofl@val,??___xxtofl
  3787  00495A  C082  F086         	movff	___xxtofl@val+1,??___xxtofl+1
  3788  00495E  C083  F087         	movff	___xxtofl@val+2,??___xxtofl+2
  3789  004962  C084  F088         	movff	___xxtofl@val+3,??___xxtofl+3
  3790  004966  0100               	movlb	0	; () banked
  3791  004968  1F85               	comf	??___xxtofl& (0+255),f,b
  3792  00496A  1F86               	comf	(??___xxtofl+1)& (0+255),f,b
  3793  00496C  1F87               	comf	(??___xxtofl+2)& (0+255),f,b
  3794  00496E  1F88               	comf	(??___xxtofl+3)& (0+255),f,b
  3795  004970  2B85               	incf	??___xxtofl& (0+255),f,b
  3796  004972  0E00               	movlw	0
  3797  004974  2386               	addwfc	(??___xxtofl+1)& (0+255),f,b
  3798  004976  2387               	addwfc	(??___xxtofl+2)& (0+255),f,b
  3799  004978  2388               	addwfc	(??___xxtofl+3)& (0+255),f,b
  3800  00497A  C085  F08B         	movff	??___xxtofl,___xxtofl@arg
  3801  00497E  C086  F08C         	movff	??___xxtofl+1,___xxtofl@arg+1
  3802  004982  C087  F08D         	movff	??___xxtofl+2,___xxtofl@arg+2
  3803  004986  C088  F08E         	movff	??___xxtofl+3,___xxtofl@arg+3
  3804  00498A  D008               	goto	l6366
  3805  00498C                     l1435:
  3806                           
  3807                           ; BSR set to: 0
  3808  00498C  C081  F08B         	movff	___xxtofl@val,___xxtofl@arg
  3809  004990  C082  F08C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  3810  004994  C083  F08D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  3811  004998  C084  F08E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  3812  00499C                     l6366:
  3813                           
  3814                           ; BSR set to: 0
  3815  00499C  0100               	movlb	0	; () banked
  3816  00499E  5181               	movf	___xxtofl@val& (0+255),w,b
  3817  0049A0  0100               	movlb	0	; () banked
  3818  0049A2  1182               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  3819  0049A4  0100               	movlb	0	; () banked
  3820  0049A6  1183               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  3821  0049A8  0100               	movlb	0	; () banked
  3822  0049AA  1184               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  3823  0049AC  A4D8               	btfss	status,2,c
  3824  0049AE  D00A               	goto	l6372
  3825                           
  3826                           ; BSR set to: 0
  3827  0049B0  0E00               	movlw	0
  3828  0049B2  0100               	movlb	0	; () banked
  3829  0049B4  6F81               	movwf	?___xxtofl& (0+255),b
  3830  0049B6  0E00               	movlw	0
  3831  0049B8  6F82               	movwf	(?___xxtofl+1)& (0+255),b
  3832  0049BA  0E00               	movlw	0
  3833  0049BC  6F83               	movwf	(?___xxtofl+2)& (0+255),b
  3834  0049BE  0E00               	movlw	0
  3835  0049C0  6F84               	movwf	(?___xxtofl+3)& (0+255),b
  3836                           
  3837                           ; BSR set to: 0
  3838  0049C2  0012               	return	
  3839  0049C4                     l6372:
  3840                           
  3841                           ; BSR set to: 0
  3842  0049C4  0E96               	movlw	150
  3843  0049C6  0100               	movlb	0	; () banked
  3844  0049C8  6F8A               	movwf	___xxtofl@exp& (0+255),b
  3845  0049CA  D008               	goto	l6376
  3846  0049CC                     l6374:
  3847                           
  3848                           ; BSR set to: 0
  3849  0049CC  0100               	movlb	0	; () banked
  3850  0049CE  2B8A               	incf	___xxtofl@exp& (0+255),f,b
  3851  0049D0  0100               	movlb	0	; () banked
  3852  0049D2  90D8               	bcf	status,0,c
  3853  0049D4  338E               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3854  0049D6  338D               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3855  0049D8  338C               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3856  0049DA  338B               	rrcf	___xxtofl@arg& (0+255),f,b
  3857  0049DC                     l6376:
  3858                           
  3859                           ; BSR set to: 0
  3860  0049DC  0E00               	movlw	0
  3861  0049DE  0100               	movlb	0	; () banked
  3862  0049E0  158B               	andwf	___xxtofl@arg& (0+255),w,b
  3863  0049E2  0100               	movlb	0	; () banked
  3864  0049E4  6F85               	movwf	??___xxtofl& (0+255),b
  3865  0049E6  0E00               	movlw	0
  3866  0049E8  0100               	movlb	0	; () banked
  3867  0049EA  158C               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3868  0049EC  0100               	movlb	0	; () banked
  3869  0049EE  6F86               	movwf	(??___xxtofl+1)& (0+255),b
  3870  0049F0  0E00               	movlw	0
  3871  0049F2  0100               	movlb	0	; () banked
  3872  0049F4  158D               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3873  0049F6  0100               	movlb	0	; () banked
  3874  0049F8  6F87               	movwf	(??___xxtofl+2)& (0+255),b
  3875  0049FA  0EFE               	movlw	254
  3876  0049FC  0100               	movlb	0	; () banked
  3877  0049FE  158E               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3878  004A00  0100               	movlb	0	; () banked
  3879  004A02  6F88               	movwf	(??___xxtofl+3)& (0+255),b
  3880  004A04  0100               	movlb	0	; () banked
  3881  004A06  5185               	movf	??___xxtofl& (0+255),w,b
  3882  004A08  0100               	movlb	0	; () banked
  3883  004A0A  1186               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3884  004A0C  0100               	movlb	0	; () banked
  3885  004A0E  1187               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3886  004A10  0100               	movlb	0	; () banked
  3887  004A12  1188               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3888  004A14  B4D8               	btfsc	status,2,c
  3889  004A16  D010               	goto	l1442
  3890  004A18  D7D9               	goto	l6374
  3891  004A1A                     l6378:
  3892                           
  3893                           ; BSR set to: 0
  3894  004A1A  0100               	movlb	0	; () banked
  3895  004A1C  2B8A               	incf	___xxtofl@exp& (0+255),f,b
  3896                           
  3897                           ; BSR set to: 0
  3898  004A1E  0E01               	movlw	1
  3899  004A20  0100               	movlb	0	; () banked
  3900  004A22  278B               	addwf	___xxtofl@arg& (0+255),f,b
  3901  004A24  0E00               	movlw	0
  3902  004A26  238C               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  3903  004A28  238D               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  3904  004A2A  238E               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  3905                           
  3906                           ; BSR set to: 0
  3907  004A2C  0100               	movlb	0	; () banked
  3908  004A2E  90D8               	bcf	status,0,c
  3909  004A30  338E               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  3910  004A32  338D               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  3911  004A34  338C               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  3912  004A36  338B               	rrcf	___xxtofl@arg& (0+255),f,b
  3913  004A38                     l1442:
  3914                           
  3915                           ; BSR set to: 0
  3916  004A38  0E00               	movlw	0
  3917  004A3A  0100               	movlb	0	; () banked
  3918  004A3C  158B               	andwf	___xxtofl@arg& (0+255),w,b
  3919  004A3E  0100               	movlb	0	; () banked
  3920  004A40  6F85               	movwf	??___xxtofl& (0+255),b
  3921  004A42  0E00               	movlw	0
  3922  004A44  0100               	movlb	0	; () banked
  3923  004A46  158C               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  3924  004A48  0100               	movlb	0	; () banked
  3925  004A4A  6F86               	movwf	(??___xxtofl+1)& (0+255),b
  3926  004A4C  0E00               	movlw	0
  3927  004A4E  0100               	movlb	0	; () banked
  3928  004A50  158D               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  3929  004A52  0100               	movlb	0	; () banked
  3930  004A54  6F87               	movwf	(??___xxtofl+2)& (0+255),b
  3931  004A56  0EFF               	movlw	255
  3932  004A58  0100               	movlb	0	; () banked
  3933  004A5A  158E               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  3934  004A5C  0100               	movlb	0	; () banked
  3935  004A5E  6F88               	movwf	(??___xxtofl+3)& (0+255),b
  3936  004A60  0100               	movlb	0	; () banked
  3937  004A62  5185               	movf	??___xxtofl& (0+255),w,b
  3938  004A64  0100               	movlb	0	; () banked
  3939  004A66  1186               	iorwf	(??___xxtofl+1)& (0+255),w,b
  3940  004A68  0100               	movlb	0	; () banked
  3941  004A6A  1187               	iorwf	(??___xxtofl+2)& (0+255),w,b
  3942  004A6C  0100               	movlb	0	; () banked
  3943  004A6E  1188               	iorwf	(??___xxtofl+3)& (0+255),w,b
  3944  004A70  B4D8               	btfsc	status,2,c
  3945  004A72  D009               	goto	l6386
  3946  004A74  D7D2               	goto	l6378
  3947  004A76                     l6384:
  3948                           
  3949                           ; BSR set to: 0
  3950  004A76  0100               	movlb	0	; () banked
  3951  004A78  078A               	decf	___xxtofl@exp& (0+255),f,b
  3952  004A7A  0100               	movlb	0	; () banked
  3953  004A7C  90D8               	bcf	status,0,c
  3954  004A7E  378B               	rlcf	___xxtofl@arg& (0+255),f,b
  3955  004A80  378C               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  3956  004A82  378D               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  3957  004A84  378E               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  3958  004A86                     l6386:
  3959                           
  3960                           ; BSR set to: 0
  3961  004A86  0100               	movlb	0	; () banked
  3962  004A88  BF8D               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  3963  004A8A  D004               	goto	l1449
  3964                           
  3965                           ; BSR set to: 0
  3966  004A8C  0E02               	movlw	2
  3967  004A8E  0100               	movlb	0	; () banked
  3968  004A90  618A               	cpfslt	___xxtofl@exp& (0+255),b
  3969  004A92  D7F1               	goto	l6384
  3970  004A94                     l1449:
  3971                           
  3972                           ; BSR set to: 0
  3973  004A94  0100               	movlb	0	; () banked
  3974  004A96  B18A               	btfsc	___xxtofl@exp& (0+255),0,b
  3975  004A98  D009               	goto	l1450
  3976                           
  3977                           ; BSR set to: 0
  3978  004A9A  0EFF               	movlw	255
  3979  004A9C  0100               	movlb	0	; () banked
  3980  004A9E  178B               	andwf	___xxtofl@arg& (0+255),f,b
  3981  004AA0  0EFF               	movlw	255
  3982  004AA2  178C               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  3983  004AA4  0E7F               	movlw	127
  3984  004AA6  178D               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  3985  004AA8  0EFF               	movlw	255
  3986  004AAA  178E               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  3987  004AAC                     l1450:
  3988                           
  3989                           ; BSR set to: 0
  3990  004AAC  0100               	movlb	0	; () banked
  3991  004AAE  90D8               	bcf	status,0,c
  3992  004AB0  338A               	rrcf	___xxtofl@exp& (0+255),f,b
  3993  004AB2  C08A  F085         	movff	___xxtofl@exp,??___xxtofl
  3994  004AB6  0100               	movlb	0	; () banked
  3995  004AB8  6B86               	clrf	(??___xxtofl+1)& (0+255),b
  3996  004ABA  6B87               	clrf	(??___xxtofl+2)& (0+255),b
  3997  004ABC  6B88               	clrf	(??___xxtofl+3)& (0+255),b
  3998  004ABE  C085  F088         	movff	??___xxtofl,??___xxtofl+3
  3999  004AC2  0100               	movlb	0	; () banked
  4000  004AC4  6B87               	clrf	(??___xxtofl+2)& (0+255),b
  4001  004AC6  6B86               	clrf	(??___xxtofl+1)& (0+255),b
  4002  004AC8  6B85               	clrf	??___xxtofl& (0+255),b
  4003  004ACA  0100               	movlb	0	; () banked
  4004  004ACC  5185               	movf	??___xxtofl& (0+255),w,b
  4005  004ACE  0100               	movlb	0	; () banked
  4006  004AD0  138B               	iorwf	___xxtofl@arg& (0+255),f,b
  4007  004AD2  0100               	movlb	0	; () banked
  4008  004AD4  5186               	movf	(??___xxtofl+1)& (0+255),w,b
  4009  004AD6  0100               	movlb	0	; () banked
  4010  004AD8  138C               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  4011  004ADA  0100               	movlb	0	; () banked
  4012  004ADC  5187               	movf	(??___xxtofl+2)& (0+255),w,b
  4013  004ADE  0100               	movlb	0	; () banked
  4014  004AE0  138D               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  4015  004AE2  0100               	movlb	0	; () banked
  4016  004AE4  5188               	movf	(??___xxtofl+3)& (0+255),w,b
  4017  004AE6  0100               	movlb	0	; () banked
  4018  004AE8  138E               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  4019                           
  4020                           ; BSR set to: 0
  4021  004AEA  0100               	movlb	0	; () banked
  4022  004AEC  5189               	movf	___xxtofl@sign& (0+255),w,b
  4023  004AEE  0100               	movlb	0	; () banked
  4024  004AF0  B4D8               	btfsc	status,2,c
  4025  004AF2  D005               	goto	l6398
  4026                           
  4027                           ; BSR set to: 0
  4028  004AF4  0100               	movlb	0	; () banked
  4029  004AF6  AF84               	btfss	(___xxtofl@val+3)& (0+255),7,b
  4030  004AF8  D002               	goto	l6398
  4031                           
  4032                           ; BSR set to: 0
  4033  004AFA  0100               	movlb	0	; () banked
  4034  004AFC  8F8E               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  4035  004AFE                     l6398:
  4036                           
  4037                           ; BSR set to: 0
  4038  004AFE  C08B  F081         	movff	___xxtofl@arg,?___xxtofl
  4039  004B02  C08C  F082         	movff	___xxtofl@arg+1,?___xxtofl+1
  4040  004B06  C08D  F083         	movff	___xxtofl@arg+2,?___xxtofl+2
  4041  004B0A  C08E  F084         	movff	___xxtofl@arg+3,?___xxtofl+3
  4042  004B0E  0012               	return	
  4043  004B10                     __end_of___xxtofl:
  4044                           	opt stack 0
  4045                           tblptru	equ	0xFF8
  4046                           tblptrh	equ	0xFF7
  4047                           tblptrl	equ	0xFF6
  4048                           tablat	equ	0xFF5
  4049                           postinc0	equ	0xFEE
  4050                           wreg	equ	0xFE8
  4051                           postdec1	equ	0xFE5
  4052                           fsr1l	equ	0xFE1
  4053                           postinc2	equ	0xFDE
  4054                           postdec2	equ	0xFDD
  4055                           fsr2h	equ	0xFDA
  4056                           fsr2l	equ	0xFD9
  4057                           status	equ	0xFD8
  4058                           
  4059 ;; *************** function ___fltol *****************
  4060 ;; Defined at:
  4061 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;  f1              4   23[BANK0 ] unsigned char 
  4064 ;; Auto vars:     Size  Location     Type
  4065 ;;  exp1            1   32[BANK0 ] unsigned char 
  4066 ;;  sign1           1   31[BANK0 ] unsigned char 
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  4   23[BANK0 ] long 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2, status,0
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4076 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4077 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4078 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4079 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4080 ;;Total ram usage:       10 bytes
  4081 ;; Hardware stack levels used:    1
  4082 ;; Hardware stack levels required when called:    4
  4083 ;; This function calls:
  4084 ;;		Nothing
  4085 ;; This function is called by:
  4086 ;;		_park_routine
  4087 ;;		_parallelo
  4088 ;;		_floor
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           	psect	text11
  4093  00551C                     __ptext11:
  4094                           	opt stack 0
  4095  00551C                     ___fltol:
  4096                           	opt stack 24
  4097                           
  4098                           ; BSR set to: 0
  4099                           ;incstack = 0
  4100  00551C  0100               	movlb	0	; () banked
  4101  00551E  3579               	rlcf	(___fltol@f1+2)& (0+255),w,b
  4102  005520  357A               	rlcf	(___fltol@f1+3)& (0+255),w,b
  4103  005522  0100               	movlb	0	; () banked
  4104  005524  6F80               	movwf	___fltol@exp1& (0+255),b
  4105  005526  0100               	movlb	0	; () banked
  4106  005528  5180               	movf	___fltol@exp1& (0+255),w,b
  4107  00552A  A4D8               	btfss	status,2,c
  4108  00552C  D00A               	goto	l6322
  4109                           
  4110                           ; BSR set to: 0
  4111  00552E  0E00               	movlw	0
  4112  005530  0100               	movlb	0	; () banked
  4113  005532  6F77               	movwf	?___fltol& (0+255),b
  4114  005534  0E00               	movlw	0
  4115  005536  6F78               	movwf	(?___fltol+1)& (0+255),b
  4116  005538  0E00               	movlw	0
  4117  00553A  6F79               	movwf	(?___fltol+2)& (0+255),b
  4118  00553C  0E00               	movlw	0
  4119  00553E  6F7A               	movwf	(?___fltol+3)& (0+255),b
  4120                           
  4121                           ; BSR set to: 0
  4122  005540  0012               	return	
  4123  005542                     l6322:
  4124                           
  4125                           ; BSR set to: 0
  4126  005542  C077  F07B         	movff	___fltol@f1,??___fltol
  4127  005546  C078  F07C         	movff	___fltol@f1+1,??___fltol+1
  4128  00554A  C079  F07D         	movff	___fltol@f1+2,??___fltol+2
  4129  00554E  C07A  F07E         	movff	___fltol@f1+3,??___fltol+3
  4130  005552  0E20               	movlw	32
  4131  005554  D006               	goto	u7920
  4132  005556                     u7925:
  4133  005556  0100               	movlb	0	; () banked
  4134  005558  90D8               	bcf	status,0,c
  4135  00555A  337E               	rrcf	(??___fltol+3)& (0+255),f,b
  4136  00555C  337D               	rrcf	(??___fltol+2)& (0+255),f,b
  4137  00555E  337C               	rrcf	(??___fltol+1)& (0+255),f,b
  4138  005560  337B               	rrcf	??___fltol& (0+255),f,b
  4139  005562                     u7920:
  4140  005562  2EE8               	decfsz	wreg,f,c
  4141  005564  D7F8               	goto	u7925
  4142  005566  0100               	movlb	0	; () banked
  4143  005568  517B               	movf	??___fltol& (0+255),w,b
  4144  00556A  0100               	movlb	0	; () banked
  4145  00556C  6F7F               	movwf	___fltol@sign1& (0+255),b
  4146                           
  4147                           ; BSR set to: 0
  4148  00556E  0100               	movlb	0	; () banked
  4149  005570  8F79               	bsf	(___fltol@f1+2)& (0+255),7,b
  4150                           
  4151                           ; BSR set to: 0
  4152  005572  0EFF               	movlw	255
  4153  005574  0100               	movlb	0	; () banked
  4154  005576  1777               	andwf	___fltol@f1& (0+255),f,b
  4155  005578  0EFF               	movlw	255
  4156  00557A  1778               	andwf	(___fltol@f1+1)& (0+255),f,b
  4157  00557C  0EFF               	movlw	255
  4158  00557E  1779               	andwf	(___fltol@f1+2)& (0+255),f,b
  4159  005580  0E00               	movlw	0
  4160  005582  177A               	andwf	(___fltol@f1+3)& (0+255),f,b
  4161                           
  4162                           ; BSR set to: 0
  4163  005584  0E96               	movlw	150
  4164  005586  0100               	movlb	0	; () banked
  4165  005588  5F80               	subwf	___fltol@exp1& (0+255),f,b
  4166                           
  4167                           ; BSR set to: 0
  4168  00558A  0100               	movlb	0	; () banked
  4169  00558C  AF80               	btfss	___fltol@exp1& (0+255),7,b
  4170  00558E  D01A               	goto	l6342
  4171                           
  4172                           ; BSR set to: 0
  4173  005590  0100               	movlb	0	; () banked
  4174  005592  5180               	movf	___fltol@exp1& (0+255),w,b
  4175  005594  0A80               	xorlw	128
  4176  005596  0F97               	addlw	151
  4177  005598  B0D8               	btfsc	status,0,c
  4178  00559A  D00A               	goto	l6338
  4179                           
  4180                           ; BSR set to: 0
  4181  00559C  0E00               	movlw	0
  4182  00559E  0100               	movlb	0	; () banked
  4183  0055A0  6F77               	movwf	?___fltol& (0+255),b
  4184  0055A2  0E00               	movlw	0
  4185  0055A4  6F78               	movwf	(?___fltol+1)& (0+255),b
  4186  0055A6  0E00               	movlw	0
  4187  0055A8  6F79               	movwf	(?___fltol+2)& (0+255),b
  4188  0055AA  0E00               	movlw	0
  4189  0055AC  6F7A               	movwf	(?___fltol+3)& (0+255),b
  4190                           
  4191                           ; BSR set to: 0
  4192  0055AE  0012               	return	
  4193  0055B0                     l6338:
  4194                           
  4195                           ; BSR set to: 0
  4196  0055B0  0100               	movlb	0	; () banked
  4197  0055B2  90D8               	bcf	status,0,c
  4198  0055B4  337A               	rrcf	(___fltol@f1+3)& (0+255),f,b
  4199  0055B6  3379               	rrcf	(___fltol@f1+2)& (0+255),f,b
  4200  0055B8  3378               	rrcf	(___fltol@f1+1)& (0+255),f,b
  4201  0055BA  3377               	rrcf	___fltol@f1& (0+255),f,b
  4202                           
  4203                           ; BSR set to: 0
  4204  0055BC  0100               	movlb	0	; () banked
  4205  0055BE  3F80               	incfsz	___fltol@exp1& (0+255),f,b
  4206  0055C0  D7F7               	goto	l6338
  4207                           
  4208                           ; BSR set to: 0
  4209  0055C2  D01B               	goto	l6352
  4210  0055C4                     l6342:
  4211                           
  4212                           ; BSR set to: 0
  4213  0055C4  0E1F               	movlw	31
  4214  0055C6  0100               	movlb	0	; () banked
  4215  0055C8  6580               	cpfsgt	___fltol@exp1& (0+255),b
  4216  0055CA  D012               	goto	l6350
  4217                           
  4218                           ; BSR set to: 0
  4219  0055CC  0E00               	movlw	0
  4220  0055CE  0100               	movlb	0	; () banked
  4221  0055D0  6F77               	movwf	?___fltol& (0+255),b
  4222  0055D2  0E00               	movlw	0
  4223  0055D4  6F78               	movwf	(?___fltol+1)& (0+255),b
  4224  0055D6  0E00               	movlw	0
  4225  0055D8  6F79               	movwf	(?___fltol+2)& (0+255),b
  4226  0055DA  0E00               	movlw	0
  4227  0055DC  6F7A               	movwf	(?___fltol+3)& (0+255),b
  4228                           
  4229                           ; BSR set to: 0
  4230  0055DE  0012               	return	
  4231  0055E0                     l6348:
  4232                           
  4233                           ; BSR set to: 0
  4234  0055E0  0100               	movlb	0	; () banked
  4235  0055E2  90D8               	bcf	status,0,c
  4236  0055E4  3777               	rlcf	___fltol@f1& (0+255),f,b
  4237  0055E6  3778               	rlcf	(___fltol@f1+1)& (0+255),f,b
  4238  0055E8  3779               	rlcf	(___fltol@f1+2)& (0+255),f,b
  4239  0055EA  377A               	rlcf	(___fltol@f1+3)& (0+255),f,b
  4240  0055EC  0100               	movlb	0	; () banked
  4241  0055EE  0780               	decf	___fltol@exp1& (0+255),f,b
  4242  0055F0                     l6350:
  4243                           
  4244                           ; BSR set to: 0
  4245  0055F0  0100               	movlb	0	; () banked
  4246  0055F2  5180               	movf	___fltol@exp1& (0+255),w,b
  4247  0055F4  0100               	movlb	0	; () banked
  4248  0055F6  A4D8               	btfss	status,2,c
  4249  0055F8  D7F3               	goto	l6348
  4250  0055FA                     l6352:
  4251                           
  4252                           ; BSR set to: 0
  4253  0055FA  0100               	movlb	0	; () banked
  4254  0055FC  517F               	movf	___fltol@sign1& (0+255),w,b
  4255  0055FE  0100               	movlb	0	; () banked
  4256  005600  B4D8               	btfsc	status,2,c
  4257  005602  D009               	goto	l6356
  4258                           
  4259                           ; BSR set to: 0
  4260  005604  0100               	movlb	0	; () banked
  4261  005606  1F7A               	comf	(___fltol@f1+3)& (0+255),f,b
  4262  005608  1F79               	comf	(___fltol@f1+2)& (0+255),f,b
  4263  00560A  1F78               	comf	(___fltol@f1+1)& (0+255),f,b
  4264  00560C  6D77               	negf	___fltol@f1& (0+255),b
  4265  00560E  0E00               	movlw	0
  4266  005610  2378               	addwfc	(___fltol@f1+1)& (0+255),f,b
  4267  005612  2379               	addwfc	(___fltol@f1+2)& (0+255),f,b
  4268  005614  237A               	addwfc	(___fltol@f1+3)& (0+255),f,b
  4269  005616                     l6356:
  4270                           
  4271                           ; BSR set to: 0
  4272  005616  C077  F077         	movff	___fltol@f1,?___fltol
  4273  00561A  C078  F078         	movff	___fltol@f1+1,?___fltol+1
  4274  00561E  C079  F079         	movff	___fltol@f1+2,?___fltol+2
  4275  005622  C07A  F07A         	movff	___fltol@f1+3,?___fltol+3
  4276  005626  0012               	return	
  4277  005628                     __end_of___fltol:
  4278                           	opt stack 0
  4279                           tblptru	equ	0xFF8
  4280                           tblptrh	equ	0xFF7
  4281                           tblptrl	equ	0xFF6
  4282                           tablat	equ	0xFF5
  4283                           postinc0	equ	0xFEE
  4284                           wreg	equ	0xFE8
  4285                           postdec1	equ	0xFE5
  4286                           fsr1l	equ	0xFE1
  4287                           postinc2	equ	0xFDE
  4288                           postdec2	equ	0xFDD
  4289                           fsr2h	equ	0xFDA
  4290                           fsr2l	equ	0xFD9
  4291                           status	equ	0xFD8
  4292                           
  4293 ;; *************** function ___flsub *****************
  4294 ;; Defined at:
  4295 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;  b               4  107[BANK0 ] long 
  4298 ;;  a               4  111[BANK0 ] long 
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;		None
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  4  107[BANK0 ] long 
  4303 ;; Registers used:
  4304 ;;		wreg, status,2, status,0, cstack
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4310 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4313 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4314 ;;Total ram usage:        8 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; Hardware stack levels required when called:    5
  4317 ;; This function calls:
  4318 ;;		___fladd
  4319 ;; This function is called by:
  4320 ;;		_sin
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           	psect	text12
  4325  005A80                     __ptext12:
  4326                           	opt stack 0
  4327  005A80                     ___flsub:
  4328                           	opt stack 21
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;incstack = 0
  4332  005A80  0E00               	movlw	0
  4333  005A82  0100               	movlb	0	; () banked
  4334  005A84  1BCF               	xorwf	___flsub@a& (0+255),f,b
  4335  005A86  0E00               	movlw	0
  4336  005A88  1BD0               	xorwf	(___flsub@a+1)& (0+255),f,b
  4337  005A8A  0E00               	movlw	0
  4338  005A8C  1BD1               	xorwf	(___flsub@a+2)& (0+255),f,b
  4339  005A8E  0E80               	movlw	128
  4340  005A90  1BD2               	xorwf	(___flsub@a+3)& (0+255),f,b
  4341                           
  4342                           ; BSR set to: 0
  4343  005A92  C0CB  F0AD         	movff	___flsub@b,___fladd@b
  4344  005A96  C0CC  F0AE         	movff	___flsub@b+1,___fladd@b+1
  4345  005A9A  C0CD  F0AF         	movff	___flsub@b+2,___fladd@b+2
  4346  005A9E  C0CE  F0B0         	movff	___flsub@b+3,___fladd@b+3
  4347  005AA2  C0CF  F0B1         	movff	___flsub@a,___fladd@a
  4348  005AA6  C0D0  F0B2         	movff	___flsub@a+1,___fladd@a+1
  4349  005AAA  C0D1  F0B3         	movff	___flsub@a+2,___fladd@a+2
  4350  005AAE  C0D2  F0B4         	movff	___flsub@a+3,___fladd@a+3
  4351  005AB2  ECE2  F014         	call	___fladd	;wreg free
  4352  005AB6  C0AD  F0CB         	movff	?___fladd,?___flsub
  4353  005ABA  C0AE  F0CC         	movff	?___fladd+1,?___flsub+1
  4354  005ABE  C0AF  F0CD         	movff	?___fladd+2,?___flsub+2
  4355  005AC2  C0B0  F0CE         	movff	?___fladd+3,?___flsub+3
  4356  005AC6  0012               	return	
  4357  005AC8                     __end_of___flsub:
  4358                           	opt stack 0
  4359                           tblptru	equ	0xFF8
  4360                           tblptrh	equ	0xFF7
  4361                           tblptrl	equ	0xFF6
  4362                           tablat	equ	0xFF5
  4363                           postinc0	equ	0xFEE
  4364                           wreg	equ	0xFE8
  4365                           postdec1	equ	0xFE5
  4366                           fsr1l	equ	0xFE1
  4367                           postinc2	equ	0xFDE
  4368                           postdec2	equ	0xFDD
  4369                           fsr2h	equ	0xFDA
  4370                           fsr2l	equ	0xFD9
  4371                           status	equ	0xFD8
  4372                           
  4373 ;; *************** function _asin *****************
  4374 ;; Defined at:
  4375 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\asin.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;  x               4   21[BANK1 ] long 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  y               4   37[BANK1 ] long 
  4380 ;;  sgn             4   25[BANK1 ] long 
  4381 ;; Return value:  Size  Location     Type
  4382 ;;                  4   21[BANK1 ] long 
  4383 ;; Registers used:
  4384 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4385 ;; Tracked objects:
  4386 ;;		On entry : 0/0
  4387 ;;		On exit  : 0/0
  4388 ;;		Unchanged: 0/0
  4389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4390 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  4391 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  4392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4393 ;;      Totals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0
  4394 ;;Total ram usage:       24 bytes
  4395 ;; Hardware stack levels used:    1
  4396 ;; Hardware stack levels required when called:    7
  4397 ;; This function calls:
  4398 ;;		___fladd
  4399 ;;		___fldiv
  4400 ;;		___flge
  4401 ;;		___flmul
  4402 ;;		___flneg
  4403 ;;		_atan
  4404 ;;		_fabs
  4405 ;;		_sqrt
  4406 ;; This function is called by:
  4407 ;;		_parallelo
  4408 ;;		_matematica
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           	psect	text13
  4413  004152                     __ptext13:
  4414                           	opt stack 0
  4415  004152                     _asin:
  4416                           	opt stack 21
  4417                           
  4418                           ;incstack = 0
  4419  004152  0E00               	movlw	0
  4420  004154  0100               	movlb	0	; () banked
  4421  004156  6FB1               	movwf	___flge@ff1& (0+255),b
  4422  004158  0E00               	movlw	0
  4423  00415A  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  4424  00415C  0E80               	movlw	128
  4425  00415E  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  4426  004160  0E3F               	movlw	63
  4427  004162  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  4428  004164  C194  F0AD         	movff	asin@x,fabs@d
  4429  004168  C195  F0AE         	movff	asin@x+1,fabs@d+1
  4430  00416C  C196  F0AF         	movff	asin@x+2,fabs@d+2
  4431  004170  C197  F0B0         	movff	asin@x+3,fabs@d+3
  4432  004174  EC64  F02D         	call	_fabs	;wreg free
  4433  004178  C0AD  F0B5         	movff	?_fabs,___flge@ff2
  4434  00417C  C0AE  F0B6         	movff	?_fabs+1,___flge@ff2+1
  4435  004180  C0AF  F0B7         	movff	?_fabs+2,___flge@ff2+2
  4436  004184  C0B0  F0B8         	movff	?_fabs+3,___flge@ff2+3
  4437  004188  EC10  F028         	call	___flge	;wreg free
  4438  00418C  0100               	movlb	0	; () banked
  4439  00418E  B0D8               	btfsc	status,0,c
  4440  004190  D00F               	goto	l6768
  4441                           
  4442                           ; BSR set to: 0
  4443  004192  0E00               	movlw	0
  4444  004194  0101               	movlb	1	; () banked
  4445  004196  6F3F               	movwf	(_errno+1)& (0+255),b
  4446  004198  0E21               	movlw	33
  4447  00419A  6F3E               	movwf	_errno& (0+255),b
  4448  00419C  0E00               	movlw	0
  4449  00419E  0101               	movlb	1	; () banked
  4450  0041A0  6F94               	movwf	?_asin& (0+255),b
  4451  0041A2  0E00               	movlw	0
  4452  0041A4  6F95               	movwf	(?_asin+1)& (0+255),b
  4453  0041A6  0E00               	movlw	0
  4454  0041A8  6F96               	movwf	(?_asin+2)& (0+255),b
  4455  0041AA  0E00               	movlw	0
  4456  0041AC  6F97               	movwf	(?_asin+3)& (0+255),b
  4457                           
  4458                           ; BSR set to: 1
  4459  0041AE  0012               	return	
  4460  0041B0                     l6768:
  4461  0041B0  0E00               	movlw	0
  4462  0041B2  0101               	movlb	1	; () banked
  4463  0041B4  6F98               	movwf	asin@sgn& (0+255),b
  4464  0041B6  0E00               	movlw	0
  4465  0041B8  6F99               	movwf	(asin@sgn+1)& (0+255),b
  4466  0041BA  0E80               	movlw	128
  4467  0041BC  6F9A               	movwf	(asin@sgn+2)& (0+255),b
  4468  0041BE  0E3F               	movlw	63
  4469  0041C0  6F9B               	movwf	(asin@sgn+3)& (0+255),b
  4470                           
  4471                           ; BSR set to: 1
  4472  0041C2  C194  F094         	movff	asin@x,___flmul@a
  4473  0041C6  C195  F095         	movff	asin@x+1,___flmul@a+1
  4474  0041CA  C196  F096         	movff	asin@x+2,___flmul@a+2
  4475  0041CE  C197  F097         	movff	asin@x+3,___flmul@a+3
  4476  0041D2  C194  F090         	movff	asin@x,___flmul@b
  4477  0041D6  C195  F091         	movff	asin@x+1,___flmul@b+1
  4478  0041DA  C196  F092         	movff	asin@x+2,___flmul@b+2
  4479  0041DE  C197  F093         	movff	asin@x+3,___flmul@b+3
  4480  0041E2  EC36  F017         	call	___flmul	;wreg free
  4481  0041E6  C090  F0A9         	movff	?___flmul,___flneg@f1
  4482  0041EA  C091  F0AA         	movff	?___flmul+1,___flneg@f1+1
  4483  0041EE  C092  F0AB         	movff	?___flmul+2,___flneg@f1+2
  4484  0041F2  C093  F0AC         	movff	?___flmul+3,___flneg@f1+3
  4485  0041F6  ECA0  F02D         	call	___flneg	;wreg free
  4486  0041FA  C0A9  F0AD         	movff	?___flneg,___fladd@b
  4487  0041FE  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  4488  004202  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  4489  004206  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  4490  00420A  0E00               	movlw	0
  4491  00420C  0100               	movlb	0	; () banked
  4492  00420E  6FB1               	movwf	___fladd@a& (0+255),b
  4493  004210  0E00               	movlw	0
  4494  004212  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4495  004214  0E80               	movlw	128
  4496  004216  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4497  004218  0E3F               	movlw	63
  4498  00421A  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4499  00421C  ECE2  F014         	call	___fladd	;wreg free
  4500  004220  C0AD  F0C1         	movff	?___fladd,sqrt@a
  4501  004224  C0AE  F0C2         	movff	?___fladd+1,sqrt@a+1
  4502  004228  C0AF  F0C3         	movff	?___fladd+2,sqrt@a+2
  4503  00422C  C0B0  F0C4         	movff	?___fladd+3,sqrt@a+3
  4504  004230  EC89  F019         	call	_sqrt	;wreg free
  4505  004234  C0C1  F1A4         	movff	?_sqrt,asin@y
  4506  004238  C0C2  F1A5         	movff	?_sqrt+1,asin@y+1
  4507  00423C  C0C3  F1A6         	movff	?_sqrt+2,asin@y+2
  4508  004240  C0C4  F1A7         	movff	?_sqrt+3,asin@y+3
  4509  004244  C194  F0AD         	movff	asin@x,fabs@d
  4510  004248  C195  F0AE         	movff	asin@x+1,fabs@d+1
  4511  00424C  C196  F0AF         	movff	asin@x+2,fabs@d+2
  4512  004250  C197  F0B0         	movff	asin@x+3,fabs@d+3
  4513  004254  EC64  F02D         	call	_fabs	;wreg free
  4514  004258  C0AD  F0B1         	movff	?_fabs,___flge@ff1
  4515  00425C  C0AE  F0B2         	movff	?_fabs+1,___flge@ff1+1
  4516  004260  C0AF  F0B3         	movff	?_fabs+2,___flge@ff1+2
  4517  004264  C0B0  F0B4         	movff	?_fabs+3,___flge@ff1+3
  4518  004268  0E8F               	movlw	143
  4519  00426A  0100               	movlb	0	; () banked
  4520  00426C  6FB5               	movwf	___flge@ff2& (0+255),b
  4521  00426E  0EC2               	movlw	194
  4522  004270  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  4523  004272  0E35               	movlw	53
  4524  004274  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  4525  004276  0E3F               	movlw	63
  4526  004278  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  4527  00427A  EC10  F028         	call	___flge	;wreg free
  4528  00427E  0100               	movlb	0	; () banked
  4529  004280  B0D8               	btfsc	status,0,c
  4530  004282  D02D               	goto	l6780
  4531                           
  4532                           ; BSR set to: 0
  4533  004284  C194  F077         	movff	asin@x,___fldiv@b
  4534  004288  C195  F078         	movff	asin@x+1,___fldiv@b+1
  4535  00428C  C196  F079         	movff	asin@x+2,___fldiv@b+2
  4536  004290  C197  F07A         	movff	asin@x+3,___fldiv@b+3
  4537  004294  C1A4  F07B         	movff	asin@y,___fldiv@a
  4538  004298  C1A5  F07C         	movff	asin@y+1,___fldiv@a+1
  4539  00429C  C1A6  F07D         	movff	asin@y+2,___fldiv@a+2
  4540  0042A0  C1A7  F07E         	movff	asin@y+3,___fldiv@a+3
  4541  0042A4  EC6E  F01B         	call	___fldiv	;wreg free
  4542  0042A8  C077  F1A8         	movff	?___fldiv,_asin$3746
  4543  0042AC  C078  F1A9         	movff	?___fldiv+1,_asin$3746+1
  4544  0042B0  C079  F1AA         	movff	?___fldiv+2,_asin$3746+2
  4545  0042B4  C07A  F1AB         	movff	?___fldiv+3,_asin$3746+3
  4546  0042B8  C1A8  F0D1         	movff	_asin$3746,atan@f
  4547  0042BC  C1A9  F0D2         	movff	_asin$3746+1,atan@f+1
  4548  0042C0  C1AA  F0D3         	movff	_asin$3746+2,atan@f+2
  4549  0042C4  C1AB  F0D4         	movff	_asin$3746+3,atan@f+3
  4550  0042C8  EC78  F023         	call	_atan	;wreg free
  4551  0042CC  C0D1  F194         	movff	?_atan,?_asin
  4552  0042D0  C0D2  F195         	movff	?_atan+1,?_asin+1
  4553  0042D4  C0D3  F196         	movff	?_atan+2,?_asin+2
  4554  0042D8  C0D4  F197         	movff	?_atan+3,?_asin+3
  4555  0042DC  0012               	return	
  4556  0042DE                     l6780:
  4557  0042DE  0101               	movlb	1	; () banked
  4558  0042E0  AF97               	btfss	(asin@x+3)& (0+255),7,b
  4559  0042E2  D06E               	goto	l6792
  4560                           
  4561                           ; BSR set to: 1
  4562  0042E4  C194  F07B         	movff	asin@x,___fldiv@a
  4563  0042E8  C195  F07C         	movff	asin@x+1,___fldiv@a+1
  4564  0042EC  C196  F07D         	movff	asin@x+2,___fldiv@a+2
  4565  0042F0  C197  F07E         	movff	asin@x+3,___fldiv@a+3
  4566  0042F4  C1A4  F0A9         	movff	asin@y,___flneg@f1
  4567  0042F8  C1A5  F0AA         	movff	asin@y+1,___flneg@f1+1
  4568  0042FC  C1A6  F0AB         	movff	asin@y+2,___flneg@f1+2
  4569  004300  C1A7  F0AC         	movff	asin@y+3,___flneg@f1+3
  4570  004304  ECA0  F02D         	call	___flneg	;wreg free
  4571  004308  C0A9  F077         	movff	?___flneg,___fldiv@b
  4572  00430C  C0AA  F078         	movff	?___flneg+1,___fldiv@b+1
  4573  004310  C0AB  F079         	movff	?___flneg+2,___fldiv@b+2
  4574  004314  C0AC  F07A         	movff	?___flneg+3,___fldiv@b+3
  4575  004318  EC6E  F01B         	call	___fldiv	;wreg free
  4576  00431C  C077  F1A8         	movff	?___fldiv,_asin$3746
  4577  004320  C078  F1A9         	movff	?___fldiv+1,_asin$3746+1
  4578  004324  C079  F1AA         	movff	?___fldiv+2,_asin$3746+2
  4579  004328  C07A  F1AB         	movff	?___fldiv+3,_asin$3746+3
  4580  00432C  C1A8  F0D1         	movff	_asin$3746,atan@f
  4581  004330  C1A9  F0D2         	movff	_asin$3746+1,atan@f+1
  4582  004334  C1AA  F0D3         	movff	_asin$3746+2,atan@f+2
  4583  004338  C1AB  F0D4         	movff	_asin$3746+3,atan@f+3
  4584  00433C  EC78  F023         	call	_atan	;wreg free
  4585  004340  C0D1  F1A0         	movff	?_atan,_asin$3747
  4586  004344  C0D2  F1A1         	movff	?_atan+1,_asin$3747+1
  4587  004348  C0D3  F1A2         	movff	?_atan+2,_asin$3747+2
  4588  00434C  C0D4  F1A3         	movff	?_atan+3,_asin$3747+3
  4589  004350  0EDB               	movlw	219
  4590  004352  0100               	movlb	0	; () banked
  4591  004354  6FB1               	movwf	___fladd@a& (0+255),b
  4592  004356  0E0F               	movlw	15
  4593  004358  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4594  00435A  0EC9               	movlw	201
  4595  00435C  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4596  00435E  0E3F               	movlw	63
  4597  004360  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4598  004362  C1A0  F0A9         	movff	_asin$3747,___flneg@f1
  4599  004366  C1A1  F0AA         	movff	_asin$3747+1,___flneg@f1+1
  4600  00436A  C1A2  F0AB         	movff	_asin$3747+2,___flneg@f1+2
  4601  00436E  C1A3  F0AC         	movff	_asin$3747+3,___flneg@f1+3
  4602  004372  ECA0  F02D         	call	___flneg	;wreg free
  4603  004376  C0A9  F0AD         	movff	?___flneg,___fladd@b
  4604  00437A  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  4605  00437E  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  4606  004382  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  4607  004386  ECE2  F014         	call	___fladd	;wreg free
  4608  00438A  C0AD  F19C         	movff	?___fladd,_asin$3748
  4609  00438E  C0AE  F19D         	movff	?___fladd+1,_asin$3748+1
  4610  004392  C0AF  F19E         	movff	?___fladd+2,_asin$3748+2
  4611  004396  C0B0  F19F         	movff	?___fladd+3,_asin$3748+3
  4612  00439A  C19C  F0A9         	movff	_asin$3748,___flneg@f1
  4613  00439E  C19D  F0AA         	movff	_asin$3748+1,___flneg@f1+1
  4614  0043A2  C19E  F0AB         	movff	_asin$3748+2,___flneg@f1+2
  4615  0043A6  C19F  F0AC         	movff	_asin$3748+3,___flneg@f1+3
  4616  0043AA  ECA0  F02D         	call	___flneg	;wreg free
  4617  0043AE  C0A9  F194         	movff	?___flneg,?_asin
  4618  0043B2  C0AA  F195         	movff	?___flneg+1,?_asin+1
  4619  0043B6  C0AB  F196         	movff	?___flneg+2,?_asin+2
  4620  0043BA  C0AC  F197         	movff	?___flneg+3,?_asin+3
  4621  0043BE  0012               	return	
  4622  0043C0                     l6792:
  4623  0043C0  C194  F07B         	movff	asin@x,___fldiv@a
  4624  0043C4  C195  F07C         	movff	asin@x+1,___fldiv@a+1
  4625  0043C8  C196  F07D         	movff	asin@x+2,___fldiv@a+2
  4626  0043CC  C197  F07E         	movff	asin@x+3,___fldiv@a+3
  4627  0043D0  C1A4  F077         	movff	asin@y,___fldiv@b
  4628  0043D4  C1A5  F078         	movff	asin@y+1,___fldiv@b+1
  4629  0043D8  C1A6  F079         	movff	asin@y+2,___fldiv@b+2
  4630  0043DC  C1A7  F07A         	movff	asin@y+3,___fldiv@b+3
  4631  0043E0  EC6E  F01B         	call	___fldiv	;wreg free
  4632  0043E4  C077  F1A8         	movff	?___fldiv,_asin$3746
  4633  0043E8  C078  F1A9         	movff	?___fldiv+1,_asin$3746+1
  4634  0043EC  C079  F1AA         	movff	?___fldiv+2,_asin$3746+2
  4635  0043F0  C07A  F1AB         	movff	?___fldiv+3,_asin$3746+3
  4636  0043F4  C1A8  F0D1         	movff	_asin$3746,atan@f
  4637  0043F8  C1A9  F0D2         	movff	_asin$3746+1,atan@f+1
  4638  0043FC  C1AA  F0D3         	movff	_asin$3746+2,atan@f+2
  4639  004400  C1AB  F0D4         	movff	_asin$3746+3,atan@f+3
  4640  004404  EC78  F023         	call	_atan	;wreg free
  4641  004408  C0D1  F1A0         	movff	?_atan,_asin$3747
  4642  00440C  C0D2  F1A1         	movff	?_atan+1,_asin$3747+1
  4643  004410  C0D3  F1A2         	movff	?_atan+2,_asin$3747+2
  4644  004414  C0D4  F1A3         	movff	?_atan+3,_asin$3747+3
  4645  004418  C1A0  F0A9         	movff	_asin$3747,___flneg@f1
  4646  00441C  C1A1  F0AA         	movff	_asin$3747+1,___flneg@f1+1
  4647  004420  C1A2  F0AB         	movff	_asin$3747+2,___flneg@f1+2
  4648  004424  C1A3  F0AC         	movff	_asin$3747+3,___flneg@f1+3
  4649  004428  ECA0  F02D         	call	___flneg	;wreg free
  4650  00442C  C0A9  F0AD         	movff	?___flneg,___fladd@b
  4651  004430  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  4652  004434  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  4653  004438  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  4654  00443C  0EDB               	movlw	219
  4655  00443E  0100               	movlb	0	; () banked
  4656  004440  6FB1               	movwf	___fladd@a& (0+255),b
  4657  004442  0E0F               	movlw	15
  4658  004444  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  4659  004446  0EC9               	movlw	201
  4660  004448  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  4661  00444A  0E3F               	movlw	63
  4662  00444C  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  4663  00444E  ECE2  F014         	call	___fladd	;wreg free
  4664  004452  C0AD  F194         	movff	?___fladd,?_asin
  4665  004456  C0AE  F195         	movff	?___fladd+1,?_asin+1
  4666  00445A  C0AF  F196         	movff	?___fladd+2,?_asin+2
  4667  00445E  C0B0  F197         	movff	?___fladd+3,?_asin+3
  4668  004462  0012               	return	
  4669  004464                     __end_of_asin:
  4670                           	opt stack 0
  4671                           tblptru	equ	0xFF8
  4672                           tblptrh	equ	0xFF7
  4673                           tblptrl	equ	0xFF6
  4674                           tablat	equ	0xFF5
  4675                           postinc0	equ	0xFEE
  4676                           wreg	equ	0xFE8
  4677                           postdec1	equ	0xFE5
  4678                           fsr1l	equ	0xFE1
  4679                           postinc2	equ	0xFDE
  4680                           postdec2	equ	0xFDD
  4681                           fsr2h	equ	0xFDA
  4682                           fsr2l	equ	0xFD9
  4683                           status	equ	0xFD8
  4684                           
  4685 ;; *************** function _sqrt *****************
  4686 ;; Defined at:
  4687 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;  a               4   97[BANK0 ] long 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  frac            4   17[BANK1 ] unsigned long 
  4692 ;;  root            4   13[BANK1 ] struct .
  4693 ;;  grs             4    7[BANK1 ] unsigned long 
  4694 ;;  tfrac           4    2[BANK1 ] unsigned long 
  4695 ;;  exp             2   11[BANK1 ] int 
  4696 ;;  p               1    6[BANK1 ] unsigned char 
  4697 ;;  i               1    1[BANK1 ] unsigned char 
  4698 ;;  sign            1    0[BANK1 ] unsigned char 
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  4   97[BANK0 ] unsigned char 
  4701 ;; Registers used:
  4702 ;;		wreg, status,2, status,0
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4708 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4709 ;;      Locals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;      Totals:         0       8      21       0       0       0       0       0       0       0       0       0       
      +0       0
  4712 ;;Total ram usage:       29 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:    4
  4715 ;; This function calls:
  4716 ;;		Nothing
  4717 ;; This function is called by:
  4718 ;;		_parallelo
  4719 ;;		_asin
  4720 ;; This function uses a non-reentrant model
  4721 ;;
  4722                           
  4723                           	psect	text14
  4724  003312                     __ptext14:
  4725                           	opt stack 0
  4726  003312                     _sqrt:
  4727                           	opt stack 24
  4728                           
  4729                           ;incstack = 0
  4730  003312  0100               	movlb	0	; () banked
  4731  003314  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  4732  003316  0B80               	andlw	128
  4733  003318  0101               	movlb	1	; () banked
  4734  00331A  6F7F               	movwf	sqrt@sign& (0+255),b
  4735  00331C  0100               	movlb	0	; () banked
  4736  00331E  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  4737  003320  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  4738  003322  0101               	movlb	1	; () banked
  4739  003324  6F85               	movwf	sqrt@p& (0+255),b
  4740                           
  4741                           ; BSR set to: 1
  4742  003326  0100               	movlb	0	; () banked
  4743  003328  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  4744  00332A  D002               	goto	l6602
  4745                           
  4746                           ; BSR set to: 0
  4747  00332C  0101               	movlb	1	; () banked
  4748  00332E  8185               	bsf	sqrt@p& (0+255),0,b
  4749  003330                     l6602:
  4750  003330  C185  F18A         	movff	sqrt@p,sqrt@exp
  4751  003334  0101               	movlb	1	; () banked
  4752  003336  6B8B               	clrf	(sqrt@exp+1)& (0+255),b
  4753                           
  4754                           ; BSR set to: 1
  4755  003338  0EFF               	movlw	255
  4756  00333A  0100               	movlb	0	; () banked
  4757  00333C  15C1               	andwf	sqrt@a& (0+255),w,b
  4758  00333E  0101               	movlb	1	; () banked
  4759  003340  6F90               	movwf	sqrt@frac& (0+255),b
  4760  003342  0EFF               	movlw	255
  4761  003344  0100               	movlb	0	; () banked
  4762  003346  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  4763  003348  0101               	movlb	1	; () banked
  4764  00334A  6F91               	movwf	(sqrt@frac+1)& (0+255),b
  4765  00334C  0E7F               	movlw	127
  4766  00334E  0100               	movlb	0	; () banked
  4767  003350  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  4768  003352  0101               	movlb	1	; () banked
  4769  003354  6F92               	movwf	(sqrt@frac+2)& (0+255),b
  4770  003356  0E00               	movlw	0
  4771  003358  0100               	movlb	0	; () banked
  4772  00335A  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  4773  00335C  0101               	movlb	1	; () banked
  4774  00335E  6F93               	movwf	(sqrt@frac+3)& (0+255),b
  4775                           
  4776                           ; BSR set to: 1
  4777  003360  0101               	movlb	1	; () banked
  4778  003362  518A               	movf	sqrt@exp& (0+255),w,b
  4779  003364  0101               	movlb	1	; () banked
  4780  003366  118B               	iorwf	(sqrt@exp+1)& (0+255),w,b
  4781  003368  B4D8               	btfsc	status,2,c
  4782  00336A  D008               	goto	l6614
  4783                           
  4784                           ; BSR set to: 1
  4785  00336C  0101               	movlb	1	; () banked
  4786  00336E  8F92               	bsf	(sqrt@frac+2)& (0+255),7,b
  4787                           
  4788                           ; BSR set to: 1
  4789  003370  0101               	movlb	1	; () banked
  4790  003372  298A               	incf	sqrt@exp& (0+255),w,b
  4791  003374  0101               	movlb	1	; () banked
  4792  003376  118B               	iorwf	(sqrt@exp+1)& (0+255),w,b
  4793  003378  A4D8               	btfss	status,2,c
  4794  00337A  D009               	goto	l6616
  4795  00337C                     l6614:
  4796                           
  4797                           ; BSR set to: 1
  4798  00337C  0E00               	movlw	0
  4799  00337E  0101               	movlb	1	; () banked
  4800  003380  6F90               	movwf	sqrt@frac& (0+255),b
  4801  003382  0E00               	movlw	0
  4802  003384  6F91               	movwf	(sqrt@frac+1)& (0+255),b
  4803  003386  0E00               	movlw	0
  4804  003388  6F92               	movwf	(sqrt@frac+2)& (0+255),b
  4805  00338A  0E00               	movlw	0
  4806  00338C  6F93               	movwf	(sqrt@frac+3)& (0+255),b
  4807  00338E                     l6616:
  4808                           
  4809                           ; BSR set to: 1
  4810  00338E  0101               	movlb	1	; () banked
  4811  003390  518A               	movf	sqrt@exp& (0+255),w,b
  4812  003392  0101               	movlb	1	; () banked
  4813  003394  118B               	iorwf	(sqrt@exp+1)& (0+255),w,b
  4814  003396  A4D8               	btfss	status,2,c
  4815  003398  D00A               	goto	l6622
  4816                           
  4817                           ; BSR set to: 1
  4818  00339A  0E00               	movlw	0
  4819  00339C  0100               	movlb	0	; () banked
  4820  00339E  6FC1               	movwf	?_sqrt& (0+255),b
  4821  0033A0  0E00               	movlw	0
  4822  0033A2  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  4823  0033A4  0E00               	movlw	0
  4824  0033A6  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  4825  0033A8  0E00               	movlw	0
  4826  0033AA  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  4827                           
  4828                           ; BSR set to: 0
  4829  0033AC  0012               	return	
  4830  0033AE                     l6622:
  4831  0033AE  0101               	movlb	1	; () banked
  4832  0033B0  517F               	movf	sqrt@sign& (0+255),w,b
  4833  0033B2  0101               	movlb	1	; () banked
  4834  0033B4  B4D8               	btfsc	status,2,c
  4835  0033B6  D01C               	goto	l6634
  4836                           
  4837                           ; BSR set to: 1
  4838  0033B8  0E00               	movlw	0
  4839  0033BA  0101               	movlb	1	; () banked
  4840  0033BC  6F8C               	movwf	sqrt@root& (0+255),b
  4841  0033BE  0E00               	movlw	0
  4842  0033C0  6F8D               	movwf	(sqrt@root+1)& (0+255),b
  4843  0033C2  0E40               	movlw	64
  4844  0033C4  6F8E               	movwf	(sqrt@root+2)& (0+255),b
  4845  0033C6  0E00               	movlw	0
  4846  0033C8  6F8F               	movwf	(sqrt@root+3)& (0+255),b
  4847                           
  4848                           ; BSR set to: 1
  4849  0033CA  0101               	movlb	1	; () banked
  4850  0033CC  0E80               	movlw	128
  4851  0033CE  138E               	iorwf	(sqrt@root+2)& (0+255),f,b
  4852  0033D0  0EFF               	movlw	255
  4853  0033D2  138F               	iorwf	(sqrt@root+3)& (0+255),f,b
  4854                           
  4855                           ; BSR set to: 1
  4856  0033D4  0E00               	movlw	0
  4857  0033D6  0101               	movlb	1	; () banked
  4858  0033D8  6F3F               	movwf	(_errno+1)& (0+255),b
  4859  0033DA  0E21               	movlw	33
  4860  0033DC  6F3E               	movwf	_errno& (0+255),b
  4861                           
  4862                           ; BSR set to: 1
  4863  0033DE  C18C  F0C1         	movff	sqrt@root,?_sqrt
  4864  0033E2  C18D  F0C2         	movff	sqrt@root+1,?_sqrt+1
  4865  0033E6  C18E  F0C3         	movff	sqrt@root+2,?_sqrt+2
  4866  0033EA  C18F  F0C4         	movff	sqrt@root+3,?_sqrt+3
  4867                           
  4868                           ; BSR set to: 1
  4869  0033EE  0012               	return	
  4870  0033F0                     l6634:
  4871                           
  4872                           ; BSR set to: 1
  4873  0033F0  0101               	movlb	1	; () banked
  4874  0033F2  298A               	incf	sqrt@exp& (0+255),w,b
  4875  0033F4  0101               	movlb	1	; () banked
  4876  0033F6  118B               	iorwf	(sqrt@exp+1)& (0+255),w,b
  4877  0033F8  A4D8               	btfss	status,2,c
  4878  0033FA  D012               	goto	l6642
  4879                           
  4880                           ; BSR set to: 1
  4881  0033FC  0E00               	movlw	0
  4882  0033FE  0101               	movlb	1	; () banked
  4883  003400  6F8C               	movwf	sqrt@root& (0+255),b
  4884  003402  0E00               	movlw	0
  4885  003404  6F8D               	movwf	(sqrt@root+1)& (0+255),b
  4886  003406  0E80               	movlw	128
  4887  003408  6F8E               	movwf	(sqrt@root+2)& (0+255),b
  4888  00340A  0E7F               	movlw	127
  4889  00340C  6F8F               	movwf	(sqrt@root+3)& (0+255),b
  4890                           
  4891                           ; BSR set to: 1
  4892  00340E  C18C  F0C1         	movff	sqrt@root,?_sqrt
  4893  003412  C18D  F0C2         	movff	sqrt@root+1,?_sqrt+1
  4894  003416  C18E  F0C3         	movff	sqrt@root+2,?_sqrt+2
  4895  00341A  C18F  F0C4         	movff	sqrt@root+3,?_sqrt+3
  4896                           
  4897                           ; BSR set to: 1
  4898  00341E  0012               	return	
  4899  003420                     l6642:
  4900                           
  4901                           ; BSR set to: 1
  4902  003420  0101               	movlb	1	; () banked
  4903  003422  0E81               	movlw	129
  4904  003424  278A               	addwf	sqrt@exp& (0+255),f,b
  4905  003426  0EFF               	movlw	255
  4906  003428  238B               	addwfc	(sqrt@exp+1)& (0+255),f,b
  4907  00342A  0101               	movlb	1	; () banked
  4908  00342C  518A               	movf	sqrt@exp& (0+255),w,b
  4909  00342E  0B01               	andlw	1
  4910  003430  0101               	movlb	1	; () banked
  4911  003432  6F85               	movwf	sqrt@p& (0+255),b
  4912  003434  0101               	movlb	1	; () banked
  4913  003436  358B               	rlcf	(sqrt@exp+1)& (0+255),w,b
  4914  003438  338B               	rrcf	(sqrt@exp+1)& (0+255),f,b
  4915  00343A  338A               	rrcf	sqrt@exp& (0+255),f,b
  4916  00343C  0E7F               	movlw	127
  4917  00343E  0101               	movlb	1	; () banked
  4918  003440  278A               	addwf	sqrt@exp& (0+255),f,b
  4919  003442  0E00               	movlw	0
  4920  003444  238B               	addwfc	(sqrt@exp+1)& (0+255),f,b
  4921  003446  90D8               	bcf	status,0,c
  4922  003448  0101               	movlb	1	; () banked
  4923  00344A  3590               	rlcf	sqrt@frac& (0+255),w,b
  4924  00344C  0101               	movlb	1	; () banked
  4925  00344E  6F81               	movwf	sqrt@tfrac& (0+255),b
  4926  003450  0101               	movlb	1	; () banked
  4927  003452  3591               	rlcf	(sqrt@frac+1)& (0+255),w,b
  4928  003454  0101               	movlb	1	; () banked
  4929  003456  6F82               	movwf	(sqrt@tfrac+1)& (0+255),b
  4930  003458  0101               	movlb	1	; () banked
  4931  00345A  3592               	rlcf	(sqrt@frac+2)& (0+255),w,b
  4932  00345C  0101               	movlb	1	; () banked
  4933  00345E  6F83               	movwf	(sqrt@tfrac+2)& (0+255),b
  4934  003460  0101               	movlb	1	; () banked
  4935  003462  3593               	rlcf	(sqrt@frac+3)& (0+255),w,b
  4936  003464  0101               	movlb	1	; () banked
  4937  003466  6F84               	movwf	(sqrt@tfrac+3)& (0+255),b
  4938                           
  4939                           ; BSR set to: 1
  4940  003468  0E00               	movlw	0
  4941  00346A  0101               	movlb	1	; () banked
  4942  00346C  6F90               	movwf	sqrt@frac& (0+255),b
  4943  00346E  0E00               	movlw	0
  4944  003470  6F91               	movwf	(sqrt@frac+1)& (0+255),b
  4945  003472  0E00               	movlw	0
  4946  003474  6F92               	movwf	(sqrt@frac+2)& (0+255),b
  4947  003476  0E00               	movlw	0
  4948  003478  6F93               	movwf	(sqrt@frac+3)& (0+255),b
  4949                           
  4950                           ; BSR set to: 1
  4951  00347A  0E00               	movlw	0
  4952  00347C  0101               	movlb	1	; () banked
  4953  00347E  6F86               	movwf	sqrt@grs& (0+255),b
  4954  003480  0E00               	movlw	0
  4955  003482  6F87               	movwf	(sqrt@grs+1)& (0+255),b
  4956  003484  0E00               	movlw	0
  4957  003486  6F88               	movwf	(sqrt@grs+2)& (0+255),b
  4958  003488  0E01               	movlw	1
  4959  00348A  6F89               	movwf	(sqrt@grs+3)& (0+255),b
  4960                           
  4961                           ; BSR set to: 1
  4962  00348C  0101               	movlb	1	; () banked
  4963  00348E  5185               	movf	sqrt@p& (0+255),w,b
  4964  003490  0101               	movlb	1	; () banked
  4965  003492  B4D8               	btfsc	status,2,c
  4966  003494  D006               	goto	l6652
  4967                           
  4968                           ; BSR set to: 1
  4969  003496  0101               	movlb	1	; () banked
  4970  003498  90D8               	bcf	status,0,c
  4971  00349A  3781               	rlcf	sqrt@tfrac& (0+255),f,b
  4972  00349C  3782               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  4973  00349E  3783               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  4974  0034A0  3784               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  4975  0034A2                     l6652:
  4976                           
  4977                           ; BSR set to: 1
  4978  0034A2  0E00               	movlw	0
  4979  0034A4  0101               	movlb	1	; () banked
  4980  0034A6  6F80               	movwf	sqrt@i& (0+255),b
  4981  0034A8  D07E               	goto	l6666
  4982  0034AA                     l6654:
  4983                           
  4984                           ; BSR set to: 1
  4985  0034AA  0101               	movlb	1	; () banked
  4986  0034AC  5186               	movf	sqrt@grs& (0+255),w,b
  4987  0034AE  0101               	movlb	1	; () banked
  4988  0034B0  1390               	iorwf	sqrt@frac& (0+255),f,b
  4989  0034B2  0101               	movlb	1	; () banked
  4990  0034B4  5187               	movf	(sqrt@grs+1)& (0+255),w,b
  4991  0034B6  0101               	movlb	1	; () banked
  4992  0034B8  1391               	iorwf	(sqrt@frac+1)& (0+255),f,b
  4993  0034BA  0101               	movlb	1	; () banked
  4994  0034BC  5188               	movf	(sqrt@grs+2)& (0+255),w,b
  4995  0034BE  0101               	movlb	1	; () banked
  4996  0034C0  1392               	iorwf	(sqrt@frac+2)& (0+255),f,b
  4997  0034C2  0101               	movlb	1	; () banked
  4998  0034C4  5189               	movf	(sqrt@grs+3)& (0+255),w,b
  4999  0034C6  0101               	movlb	1	; () banked
  5000  0034C8  1393               	iorwf	(sqrt@frac+3)& (0+255),f,b
  5001  0034CA  0101               	movlb	1	; () banked
  5002  0034CC  5190               	movf	sqrt@frac& (0+255),w,b
  5003  0034CE  0101               	movlb	1	; () banked
  5004  0034D0  5D81               	subwf	sqrt@tfrac& (0+255),w,b
  5005  0034D2  0101               	movlb	1	; () banked
  5006  0034D4  5191               	movf	(sqrt@frac+1)& (0+255),w,b
  5007  0034D6  0101               	movlb	1	; () banked
  5008  0034D8  5982               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  5009  0034DA  0101               	movlb	1	; () banked
  5010  0034DC  5192               	movf	(sqrt@frac+2)& (0+255),w,b
  5011  0034DE  0101               	movlb	1	; () banked
  5012  0034E0  5983               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  5013  0034E2  0101               	movlb	1	; () banked
  5014  0034E4  5193               	movf	(sqrt@frac+3)& (0+255),w,b
  5015  0034E6  0101               	movlb	1	; () banked
  5016  0034E8  5984               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  5017  0034EA  A0D8               	btfss	status,0,c
  5018  0034EC  D021               	goto	l6658
  5019                           
  5020                           ; BSR set to: 1
  5021  0034EE  0101               	movlb	1	; () banked
  5022  0034F0  5190               	movf	sqrt@frac& (0+255),w,b
  5023  0034F2  0101               	movlb	1	; () banked
  5024  0034F4  5F81               	subwf	sqrt@tfrac& (0+255),f,b
  5025  0034F6  0101               	movlb	1	; () banked
  5026  0034F8  5191               	movf	(sqrt@frac+1)& (0+255),w,b
  5027  0034FA  0101               	movlb	1	; () banked
  5028  0034FC  5B82               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  5029  0034FE  0101               	movlb	1	; () banked
  5030  003500  5192               	movf	(sqrt@frac+2)& (0+255),w,b
  5031  003502  0101               	movlb	1	; () banked
  5032  003504  5B83               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  5033  003506  0101               	movlb	1	; () banked
  5034  003508  5193               	movf	(sqrt@frac+3)& (0+255),w,b
  5035  00350A  0101               	movlb	1	; () banked
  5036  00350C  5B84               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  5037  00350E  0101               	movlb	1	; () banked
  5038  003510  5186               	movf	sqrt@grs& (0+255),w,b
  5039  003512  0101               	movlb	1	; () banked
  5040  003514  2790               	addwf	sqrt@frac& (0+255),f,b
  5041  003516  0101               	movlb	1	; () banked
  5042  003518  5187               	movf	(sqrt@grs+1)& (0+255),w,b
  5043  00351A  0101               	movlb	1	; () banked
  5044  00351C  2391               	addwfc	(sqrt@frac+1)& (0+255),f,b
  5045  00351E  0101               	movlb	1	; () banked
  5046  003520  5188               	movf	(sqrt@grs+2)& (0+255),w,b
  5047  003522  0101               	movlb	1	; () banked
  5048  003524  2392               	addwfc	(sqrt@frac+2)& (0+255),f,b
  5049  003526  0101               	movlb	1	; () banked
  5050  003528  5189               	movf	(sqrt@grs+3)& (0+255),w,b
  5051  00352A  0101               	movlb	1	; () banked
  5052  00352C  2393               	addwfc	(sqrt@frac+3)& (0+255),f,b
  5053  00352E  D01D               	goto	l6660
  5054  003530                     l6658:
  5055                           
  5056                           ; BSR set to: 1
  5057  003530  C186  F0C5         	movff	sqrt@grs,??_sqrt
  5058  003534  C187  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  5059  003538  C188  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  5060  00353C  C189  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  5061  003540  0100               	movlb	0	; () banked
  5062  003542  1FC5               	comf	??_sqrt& (0+255),f,b
  5063  003544  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  5064  003546  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  5065  003548  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  5066  00354A  0100               	movlb	0	; () banked
  5067  00354C  51C5               	movf	??_sqrt& (0+255),w,b
  5068  00354E  0101               	movlb	1	; () banked
  5069  003550  1790               	andwf	sqrt@frac& (0+255),f,b
  5070  003552  0100               	movlb	0	; () banked
  5071  003554  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  5072  003556  0101               	movlb	1	; () banked
  5073  003558  1791               	andwf	(sqrt@frac+1)& (0+255),f,b
  5074  00355A  0100               	movlb	0	; () banked
  5075  00355C  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  5076  00355E  0101               	movlb	1	; () banked
  5077  003560  1792               	andwf	(sqrt@frac+2)& (0+255),f,b
  5078  003562  0100               	movlb	0	; () banked
  5079  003564  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  5080  003566  0101               	movlb	1	; () banked
  5081  003568  1793               	andwf	(sqrt@frac+3)& (0+255),f,b
  5082  00356A                     l6660:
  5083                           
  5084                           ; BSR set to: 1
  5085  00356A  C186  F0C5         	movff	sqrt@grs,??_sqrt
  5086  00356E  C187  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  5087  003572  C188  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  5088  003576  C189  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  5089  00357A  0100               	movlb	0	; () banked
  5090  00357C  90D8               	bcf	status,0,c
  5091  00357E  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  5092  003580  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  5093  003582  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  5094  003584  33C5               	rrcf	??_sqrt& (0+255),f,b
  5095  003586  C0C5  F186         	movff	??_sqrt,sqrt@grs
  5096  00358A  C0C6  F187         	movff	??_sqrt+1,sqrt@grs+1
  5097  00358E  C0C7  F188         	movff	??_sqrt+2,sqrt@grs+2
  5098  003592  C0C8  F189         	movff	??_sqrt+3,sqrt@grs+3
  5099                           
  5100                           ; BSR set to: 0
  5101  003596  0101               	movlb	1	; () banked
  5102  003598  90D8               	bcf	status,0,c
  5103  00359A  3781               	rlcf	sqrt@tfrac& (0+255),f,b
  5104  00359C  3782               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  5105  00359E  3783               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  5106  0035A0  3784               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  5107                           
  5108                           ; BSR set to: 1
  5109  0035A2  0101               	movlb	1	; () banked
  5110  0035A4  2B80               	incf	sqrt@i& (0+255),f,b
  5111  0035A6                     l6666:
  5112                           
  5113                           ; BSR set to: 1
  5114  0035A6  0E18               	movlw	24
  5115  0035A8  0101               	movlb	1	; () banked
  5116  0035AA  6580               	cpfsgt	sqrt@i& (0+255),b
  5117  0035AC  D77E               	goto	l6654
  5118                           
  5119                           ; BSR set to: 1
  5120                           
  5121                           ; BSR set to: 1
  5122  0035AE  C190  F0C5         	movff	sqrt@frac,??_sqrt
  5123  0035B2  C191  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  5124  0035B6  C192  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  5125  0035BA  C193  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  5126  0035BE  0100               	movlb	0	; () banked
  5127  0035C0  90D8               	bcf	status,0,c
  5128  0035C2  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  5129  0035C4  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  5130  0035C6  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  5131  0035C8  33C5               	rrcf	??_sqrt& (0+255),f,b
  5132  0035CA  C0C5  F190         	movff	??_sqrt,sqrt@frac
  5133  0035CE  C0C6  F191         	movff	??_sqrt+1,sqrt@frac+1
  5134  0035D2  C0C7  F192         	movff	??_sqrt+2,sqrt@frac+2
  5135  0035D6  C0C8  F193         	movff	??_sqrt+3,sqrt@frac+3
  5136                           
  5137                           ; BSR set to: 0
  5138  0035DA  0E01               	movlw	1
  5139  0035DC  0101               	movlb	1	; () banked
  5140  0035DE  1590               	andwf	sqrt@frac& (0+255),w,b
  5141  0035E0  0101               	movlb	1	; () banked
  5142  0035E2  6F86               	movwf	sqrt@grs& (0+255),b
  5143  0035E4  0E00               	movlw	0
  5144  0035E6  0101               	movlb	1	; () banked
  5145  0035E8  1591               	andwf	(sqrt@frac+1)& (0+255),w,b
  5146  0035EA  0101               	movlb	1	; () banked
  5147  0035EC  6F87               	movwf	(sqrt@grs+1)& (0+255),b
  5148  0035EE  0E00               	movlw	0
  5149  0035F0  0101               	movlb	1	; () banked
  5150  0035F2  1592               	andwf	(sqrt@frac+2)& (0+255),w,b
  5151  0035F4  0101               	movlb	1	; () banked
  5152  0035F6  6F88               	movwf	(sqrt@grs+2)& (0+255),b
  5153  0035F8  0E00               	movlw	0
  5154  0035FA  0101               	movlb	1	; () banked
  5155  0035FC  1593               	andwf	(sqrt@frac+3)& (0+255),w,b
  5156  0035FE  0101               	movlb	1	; () banked
  5157  003600  6F89               	movwf	(sqrt@grs+3)& (0+255),b
  5158                           
  5159                           ; BSR set to: 1
  5160  003602  C190  F0C5         	movff	sqrt@frac,??_sqrt
  5161  003606  C191  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  5162  00360A  C192  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  5163  00360E  C193  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  5164  003612  0100               	movlb	0	; () banked
  5165  003614  90D8               	bcf	status,0,c
  5166  003616  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  5167  003618  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  5168  00361A  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  5169  00361C  33C5               	rrcf	??_sqrt& (0+255),f,b
  5170  00361E  C0C5  F190         	movff	??_sqrt,sqrt@frac
  5171  003622  C0C6  F191         	movff	??_sqrt+1,sqrt@frac+1
  5172  003626  C0C7  F192         	movff	??_sqrt+2,sqrt@frac+2
  5173  00362A  C0C8  F193         	movff	??_sqrt+3,sqrt@frac+3
  5174  00362E  0101               	movlb	1	; () banked
  5175  003630  5186               	movf	sqrt@grs& (0+255),w,b
  5176  003632  0101               	movlb	1	; () banked
  5177  003634  2790               	addwf	sqrt@frac& (0+255),f,b
  5178  003636  0101               	movlb	1	; () banked
  5179  003638  5187               	movf	(sqrt@grs+1)& (0+255),w,b
  5180  00363A  0101               	movlb	1	; () banked
  5181  00363C  2391               	addwfc	(sqrt@frac+1)& (0+255),f,b
  5182  00363E  0101               	movlb	1	; () banked
  5183  003640  5188               	movf	(sqrt@grs+2)& (0+255),w,b
  5184  003642  0101               	movlb	1	; () banked
  5185  003644  2392               	addwfc	(sqrt@frac+2)& (0+255),f,b
  5186  003646  0101               	movlb	1	; () banked
  5187  003648  5189               	movf	(sqrt@grs+3)& (0+255),w,b
  5188  00364A  0101               	movlb	1	; () banked
  5189  00364C  2393               	addwfc	(sqrt@frac+3)& (0+255),f,b
  5190                           
  5191                           ; BSR set to: 1
  5192  00364E  0101               	movlb	1	; () banked
  5193  003650  A193               	btfss	(sqrt@frac+3)& (0+255),0,b
  5194  003652  D019               	goto	l6678
  5195                           
  5196                           ; BSR set to: 1
  5197  003654  C190  F0C5         	movff	sqrt@frac,??_sqrt
  5198  003658  C191  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  5199  00365C  C192  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  5200  003660  C193  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  5201  003664  0100               	movlb	0	; () banked
  5202  003666  90D8               	bcf	status,0,c
  5203  003668  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  5204  00366A  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  5205  00366C  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  5206  00366E  33C5               	rrcf	??_sqrt& (0+255),f,b
  5207  003670  C0C5  F190         	movff	??_sqrt,sqrt@frac
  5208  003674  C0C6  F191         	movff	??_sqrt+1,sqrt@frac+1
  5209  003678  C0C7  F192         	movff	??_sqrt+2,sqrt@frac+2
  5210  00367C  C0C8  F193         	movff	??_sqrt+3,sqrt@frac+3
  5211  003680  0101               	movlb	1	; () banked
  5212  003682  4B8A               	infsnz	sqrt@exp& (0+255),f,b
  5213  003684  2B8B               	incf	(sqrt@exp+1)& (0+255),f,b
  5214  003686                     l6678:
  5215                           
  5216                           ; BSR set to: 1
  5217  003686  0EFF               	movlw	255
  5218  003688  0101               	movlb	1	; () banked
  5219  00368A  1590               	andwf	sqrt@frac& (0+255),w,b
  5220  00368C  0101               	movlb	1	; () banked
  5221  00368E  6F8C               	movwf	sqrt@root& (0+255),b
  5222  003690  0EFF               	movlw	255
  5223  003692  0101               	movlb	1	; () banked
  5224  003694  1591               	andwf	(sqrt@frac+1)& (0+255),w,b
  5225  003696  0101               	movlb	1	; () banked
  5226  003698  6F8D               	movwf	(sqrt@root+1)& (0+255),b
  5227  00369A  0E7F               	movlw	127
  5228  00369C  0101               	movlb	1	; () banked
  5229  00369E  1592               	andwf	(sqrt@frac+2)& (0+255),w,b
  5230  0036A0  0101               	movlb	1	; () banked
  5231  0036A2  6F8E               	movwf	(sqrt@root+2)& (0+255),b
  5232  0036A4  0E00               	movlw	0
  5233  0036A6  0101               	movlb	1	; () banked
  5234  0036A8  1593               	andwf	(sqrt@frac+3)& (0+255),w,b
  5235  0036AA  0101               	movlb	1	; () banked
  5236  0036AC  6F8F               	movwf	(sqrt@root+3)& (0+255),b
  5237                           
  5238                           ; BSR set to: 1
  5239  0036AE  C18A  F185         	movff	sqrt@exp,sqrt@p
  5240                           
  5241                           ; BSR set to: 1
  5242  0036B2  0101               	movlb	1	; () banked
  5243  0036B4  A185               	btfss	sqrt@p& (0+255),0,b
  5244  0036B6  D002               	goto	l6686
  5245                           
  5246                           ; BSR set to: 1
  5247  0036B8  0101               	movlb	1	; () banked
  5248  0036BA  8F8E               	bsf	(sqrt@root+2)& (0+255),7,b
  5249  0036BC                     l6686:
  5250                           
  5251                           ; BSR set to: 1
  5252  0036BC  0101               	movlb	1	; () banked
  5253  0036BE  90D8               	bcf	status,0,c
  5254  0036C0  3185               	rrcf	sqrt@p& (0+255),w,b
  5255  0036C2  0101               	movlb	1	; () banked
  5256  0036C4  6F8F               	movwf	(sqrt@root+3)& (0+255),b
  5257                           
  5258                           ; BSR set to: 1
  5259  0036C6  0101               	movlb	1	; () banked
  5260  0036C8  9F8F               	bcf	(sqrt@root+3)& (0+255),7,b
  5261                           
  5262                           ; BSR set to: 1
  5263  0036CA  C18C  F0C1         	movff	sqrt@root,?_sqrt
  5264  0036CE  C18D  F0C2         	movff	sqrt@root+1,?_sqrt+1
  5265  0036D2  C18E  F0C3         	movff	sqrt@root+2,?_sqrt+2
  5266  0036D6  C18F  F0C4         	movff	sqrt@root+3,?_sqrt+3
  5267  0036DA  0012               	return	
  5268  0036DC                     __end_of_sqrt:
  5269                           	opt stack 0
  5270                           tblptru	equ	0xFF8
  5271                           tblptrh	equ	0xFF7
  5272                           tblptrl	equ	0xFF6
  5273                           tablat	equ	0xFF5
  5274                           postinc0	equ	0xFEE
  5275                           wreg	equ	0xFE8
  5276                           postdec1	equ	0xFE5
  5277                           fsr1l	equ	0xFE1
  5278                           postinc2	equ	0xFDE
  5279                           postdec2	equ	0xFDD
  5280                           fsr2h	equ	0xFDA
  5281                           fsr2l	equ	0xFD9
  5282                           status	equ	0xFD8
  5283                           
  5284 ;; *************** function _atan *****************
  5285 ;; Defined at:
  5286 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;  f               4  113[BANK0 ] unsigned char 
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;  val             4   13[BANK1 ] unsigned char 
  5291 ;;  val_squared     4    9[BANK1 ] unsigned char 
  5292 ;;  x               4    4[BANK1 ] unsigned char 
  5293 ;;  y               4    0[BANK1 ] unsigned char 
  5294 ;;  recip           1    8[BANK1 ] unsigned char 
  5295 ;; Return value:  Size  Location     Type
  5296 ;;                  4  113[BANK0 ] unsigned char 
  5297 ;; Registers used:
  5298 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 0/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5304 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5305 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5307 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5308 ;;Total ram usage:       21 bytes
  5309 ;; Hardware stack levels used:    1
  5310 ;; Hardware stack levels required when called:    6
  5311 ;; This function calls:
  5312 ;;		___fladd
  5313 ;;		___fldiv
  5314 ;;		___flge
  5315 ;;		___flmul
  5316 ;;		___flneg
  5317 ;;		_eval_poly
  5318 ;;		_fabs
  5319 ;; This function is called by:
  5320 ;;		_asin
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           	psect	text15
  5325  0046F0                     __ptext15:
  5326                           	opt stack 0
  5327  0046F0                     _atan:
  5328                           	opt stack 21
  5329                           
  5330                           ;incstack = 0
  5331  0046F0  C0D1  F0AD         	movff	atan@f,fabs@d
  5332  0046F4  C0D2  F0AE         	movff	atan@f+1,fabs@d+1
  5333  0046F8  C0D3  F0AF         	movff	atan@f+2,fabs@d+2
  5334  0046FC  C0D4  F0B0         	movff	atan@f+3,fabs@d+3
  5335  004700  EC64  F02D         	call	_fabs	;wreg free
  5336  004704  C0AD  F18C         	movff	?_fabs,atan@val
  5337  004708  C0AE  F18D         	movff	?_fabs+1,atan@val+1
  5338  00470C  C0AF  F18E         	movff	?_fabs+2,atan@val+2
  5339  004710  C0B0  F18F         	movff	?_fabs+3,atan@val+3
  5340  004714  0101               	movlb	1	; () banked
  5341  004716  518C               	movf	atan@val& (0+255),w,b
  5342  004718  0101               	movlb	1	; () banked
  5343  00471A  118D               	iorwf	(atan@val+1)& (0+255),w,b
  5344  00471C  0101               	movlb	1	; () banked
  5345  00471E  118E               	iorwf	(atan@val+2)& (0+255),w,b
  5346  004720  0101               	movlb	1	; () banked
  5347  004722  118F               	iorwf	(atan@val+3)& (0+255),w,b
  5348  004724  A4D8               	btfss	status,2,c
  5349  004726  D00A               	goto	l6700
  5350                           
  5351                           ; BSR set to: 1
  5352  004728  0E00               	movlw	0
  5353  00472A  0100               	movlb	0	; () banked
  5354  00472C  6FD1               	movwf	?_atan& (0+255),b
  5355  00472E  0E00               	movlw	0
  5356  004730  6FD2               	movwf	(?_atan+1)& (0+255),b
  5357  004732  0E00               	movlw	0
  5358  004734  6FD3               	movwf	(?_atan+2)& (0+255),b
  5359  004736  0E00               	movlw	0
  5360  004738  6FD4               	movwf	(?_atan+3)& (0+255),b
  5361                           
  5362                           ; BSR set to: 0
  5363  00473A  0012               	return	
  5364  00473C                     l6700:
  5365  00473C  0E00               	movlw	0
  5366  00473E  0100               	movlb	0	; () banked
  5367  004740  6FB1               	movwf	___flge@ff1& (0+255),b
  5368  004742  0E00               	movlw	0
  5369  004744  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  5370  004746  0E80               	movlw	128
  5371  004748  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  5372  00474A  0E3F               	movlw	63
  5373  00474C  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  5374  00474E  C18C  F0B5         	movff	atan@val,___flge@ff2
  5375  004752  C18D  F0B6         	movff	atan@val+1,___flge@ff2+1
  5376  004756  C18E  F0B7         	movff	atan@val+2,___flge@ff2+2
  5377  00475A  C18F  F0B8         	movff	atan@val+3,___flge@ff2+3
  5378  00475E  EC10  F028         	call	___flge	;wreg free
  5379  004762  0100               	movlb	0	; () banked
  5380  004764  B0D8               	btfsc	status,0,c
  5381  004766  D002               	goto	u8510
  5382  004768  0E01               	movlw	1
  5383  00476A  D001               	goto	u8520
  5384  00476C                     u8510:
  5385  00476C  0E00               	movlw	0
  5386  00476E                     u8520:
  5387  00476E  0101               	movlb	1	; () banked
  5388  004770  6F87               	movwf	atan@recip& (0+255),b
  5389  004772  0101               	movlb	1	; () banked
  5390  004774  5187               	movf	atan@recip& (0+255),w,b
  5391  004776  B4D8               	btfsc	status,2,c
  5392  004778  D01B               	goto	l6704
  5393                           
  5394                           ; BSR set to: 1
  5395  00477A  0E00               	movlw	0
  5396  00477C  0100               	movlb	0	; () banked
  5397  00477E  6F77               	movwf	___fldiv@b& (0+255),b
  5398  004780  0E00               	movlw	0
  5399  004782  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  5400  004784  0E80               	movlw	128
  5401  004786  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  5402  004788  0E3F               	movlw	63
  5403  00478A  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  5404  00478C  C18C  F07B         	movff	atan@val,___fldiv@a
  5405  004790  C18D  F07C         	movff	atan@val+1,___fldiv@a+1
  5406  004794  C18E  F07D         	movff	atan@val+2,___fldiv@a+2
  5407  004798  C18F  F07E         	movff	atan@val+3,___fldiv@a+3
  5408  00479C  EC6E  F01B         	call	___fldiv	;wreg free
  5409  0047A0  C077  F18C         	movff	?___fldiv,atan@val
  5410  0047A4  C078  F18D         	movff	?___fldiv+1,atan@val+1
  5411  0047A8  C079  F18E         	movff	?___fldiv+2,atan@val+2
  5412  0047AC  C07A  F18F         	movff	?___fldiv+3,atan@val+3
  5413  0047B0                     l6704:
  5414  0047B0  C18C  F090         	movff	atan@val,___flmul@b
  5415  0047B4  C18D  F091         	movff	atan@val+1,___flmul@b+1
  5416  0047B8  C18E  F092         	movff	atan@val+2,___flmul@b+2
  5417  0047BC  C18F  F093         	movff	atan@val+3,___flmul@b+3
  5418  0047C0  C18C  F094         	movff	atan@val,___flmul@a
  5419  0047C4  C18D  F095         	movff	atan@val+1,___flmul@a+1
  5420  0047C8  C18E  F096         	movff	atan@val+2,___flmul@a+2
  5421  0047CC  C18F  F097         	movff	atan@val+3,___flmul@a+3
  5422  0047D0  EC36  F017         	call	___flmul	;wreg free
  5423  0047D4  C090  F188         	movff	?___flmul,atan@val_squared
  5424  0047D8  C091  F189         	movff	?___flmul+1,atan@val_squared+1
  5425  0047DC  C092  F18A         	movff	?___flmul+2,atan@val_squared+2
  5426  0047E0  C093  F18B         	movff	?___flmul+3,atan@val_squared+3
  5427  0047E4  C188  F0C1         	movff	atan@val_squared,eval_poly@x
  5428  0047E8  C189  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  5429  0047EC  C18A  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  5430  0047F0  C18B  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  5431  0047F4  0E19               	movlw	low atan@coeff_b
  5432  0047F6  0100               	movlb	0	; () banked
  5433  0047F8  6FC5               	movwf	eval_poly@d& (0+255),b
  5434  0047FA  0E0D               	movlw	high atan@coeff_b
  5435  0047FC  0100               	movlb	0	; () banked
  5436  0047FE  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  5437  004800  0E00               	movlw	0
  5438  004802  0100               	movlb	0	; () banked
  5439  004804  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  5440  004806  0E04               	movlw	4
  5441  004808  6FC7               	movwf	eval_poly@n& (0+255),b
  5442  00480A  EC02  F02A         	call	_eval_poly	;wreg free
  5443  00480E  C0C1  F17F         	movff	?_eval_poly,atan@y
  5444  004812  C0C2  F180         	movff	?_eval_poly+1,atan@y+1
  5445  004816  C0C3  F181         	movff	?_eval_poly+2,atan@y+2
  5446  00481A  C0C4  F182         	movff	?_eval_poly+3,atan@y+3
  5447  00481E  C188  F0C1         	movff	atan@val_squared,eval_poly@x
  5448  004822  C189  F0C2         	movff	atan@val_squared+1,eval_poly@x+1
  5449  004826  C18A  F0C3         	movff	atan@val_squared+2,eval_poly@x+2
  5450  00482A  C18B  F0C4         	movff	atan@val_squared+3,eval_poly@x+3
  5451  00482E  0E01               	movlw	low atan@coeff_a
  5452  004830  0100               	movlb	0	; () banked
  5453  004832  6FC5               	movwf	eval_poly@d& (0+255),b
  5454  004834  0E0D               	movlw	high atan@coeff_a
  5455  004836  0100               	movlb	0	; () banked
  5456  004838  6FC6               	movwf	(eval_poly@d+1)& (0+255),b
  5457  00483A  0E00               	movlw	0
  5458  00483C  0100               	movlb	0	; () banked
  5459  00483E  6FC8               	movwf	(eval_poly@n+1)& (0+255),b
  5460  004840  0E05               	movlw	5
  5461  004842  6FC7               	movwf	eval_poly@n& (0+255),b
  5462  004844  EC02  F02A         	call	_eval_poly	;wreg free
  5463  004848  C0C1  F183         	movff	?_eval_poly,atan@x
  5464  00484C  C0C2  F184         	movff	?_eval_poly+1,atan@x+1
  5465  004850  C0C3  F185         	movff	?_eval_poly+2,atan@x+2
  5466  004854  C0C4  F186         	movff	?_eval_poly+3,atan@x+3
  5467  004858  C18C  F090         	movff	atan@val,___flmul@b
  5468  00485C  C18D  F091         	movff	atan@val+1,___flmul@b+1
  5469  004860  C18E  F092         	movff	atan@val+2,___flmul@b+2
  5470  004864  C18F  F093         	movff	atan@val+3,___flmul@b+3
  5471  004868  C17F  F07B         	movff	atan@y,___fldiv@a
  5472  00486C  C180  F07C         	movff	atan@y+1,___fldiv@a+1
  5473  004870  C181  F07D         	movff	atan@y+2,___fldiv@a+2
  5474  004874  C182  F07E         	movff	atan@y+3,___fldiv@a+3
  5475  004878  C183  F077         	movff	atan@x,___fldiv@b
  5476  00487C  C184  F078         	movff	atan@x+1,___fldiv@b+1
  5477  004880  C185  F079         	movff	atan@x+2,___fldiv@b+2
  5478  004884  C186  F07A         	movff	atan@x+3,___fldiv@b+3
  5479  004888  EC6E  F01B         	call	___fldiv	;wreg free
  5480  00488C  C077  F094         	movff	?___fldiv,___flmul@a
  5481  004890  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  5482  004894  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  5483  004898  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  5484  00489C  EC36  F017         	call	___flmul	;wreg free
  5485  0048A0  C090  F18C         	movff	?___flmul,atan@val
  5486  0048A4  C091  F18D         	movff	?___flmul+1,atan@val+1
  5487  0048A8  C092  F18E         	movff	?___flmul+2,atan@val+2
  5488  0048AC  C093  F18F         	movff	?___flmul+3,atan@val+3
  5489  0048B0  0101               	movlb	1	; () banked
  5490  0048B2  5187               	movf	atan@recip& (0+255),w,b
  5491  0048B4  0101               	movlb	1	; () banked
  5492  0048B6  B4D8               	btfsc	status,2,c
  5493  0048B8  D025               	goto	l6716
  5494                           
  5495                           ; BSR set to: 1
  5496  0048BA  C18C  F0A9         	movff	atan@val,___flneg@f1
  5497  0048BE  C18D  F0AA         	movff	atan@val+1,___flneg@f1+1
  5498  0048C2  C18E  F0AB         	movff	atan@val+2,___flneg@f1+2
  5499  0048C6  C18F  F0AC         	movff	atan@val+3,___flneg@f1+3
  5500  0048CA  ECA0  F02D         	call	___flneg	;wreg free
  5501  0048CE  C0A9  F0AD         	movff	?___flneg,___fladd@b
  5502  0048D2  C0AA  F0AE         	movff	?___flneg+1,___fladd@b+1
  5503  0048D6  C0AB  F0AF         	movff	?___flneg+2,___fladd@b+2
  5504  0048DA  C0AC  F0B0         	movff	?___flneg+3,___fladd@b+3
  5505  0048DE  0EDB               	movlw	219
  5506  0048E0  0100               	movlb	0	; () banked
  5507  0048E2  6FB1               	movwf	___fladd@a& (0+255),b
  5508  0048E4  0E0F               	movlw	15
  5509  0048E6  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  5510  0048E8  0EC9               	movlw	201
  5511  0048EA  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  5512  0048EC  0E3F               	movlw	63
  5513  0048EE  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  5514  0048F0  ECE2  F014         	call	___fladd	;wreg free
  5515  0048F4  C0AD  F18C         	movff	?___fladd,atan@val
  5516  0048F8  C0AE  F18D         	movff	?___fladd+1,atan@val+1
  5517  0048FC  C0AF  F18E         	movff	?___fladd+2,atan@val+2
  5518  004900  C0B0  F18F         	movff	?___fladd+3,atan@val+3
  5519  004904                     l6716:
  5520  004904  0100               	movlb	0	; () banked
  5521  004906  BFD4               	btfsc	(atan@f+3)& (0+255),7,b
  5522  004908  D009               	goto	l6720
  5523                           
  5524                           ; BSR set to: 0
  5525  00490A  C18C  F0D1         	movff	atan@val,?_atan
  5526  00490E  C18D  F0D2         	movff	atan@val+1,?_atan+1
  5527  004912  C18E  F0D3         	movff	atan@val+2,?_atan+2
  5528  004916  C18F  F0D4         	movff	atan@val+3,?_atan+3
  5529  00491A  0012               	return	
  5530  00491C                     l6720:
  5531                           
  5532                           ; BSR set to: 0
  5533  00491C  C18C  F0A9         	movff	atan@val,___flneg@f1
  5534  004920  C18D  F0AA         	movff	atan@val+1,___flneg@f1+1
  5535  004924  C18E  F0AB         	movff	atan@val+2,___flneg@f1+2
  5536  004928  C18F  F0AC         	movff	atan@val+3,___flneg@f1+3
  5537  00492C  ECA0  F02D         	call	___flneg	;wreg free
  5538  004930  C0A9  F0D1         	movff	?___flneg,?_atan
  5539  004934  C0AA  F0D2         	movff	?___flneg+1,?_atan+1
  5540  004938  C0AB  F0D3         	movff	?___flneg+2,?_atan+2
  5541  00493C  C0AC  F0D4         	movff	?___flneg+3,?_atan+3
  5542  004940  0012               	return	
  5543  004942                     __end_of_atan:
  5544                           	opt stack 0
  5545                           tblptru	equ	0xFF8
  5546                           tblptrh	equ	0xFF7
  5547                           tblptrl	equ	0xFF6
  5548                           tablat	equ	0xFF5
  5549                           postinc0	equ	0xFEE
  5550                           wreg	equ	0xFE8
  5551                           postdec1	equ	0xFE5
  5552                           fsr1l	equ	0xFE1
  5553                           postinc2	equ	0xFDE
  5554                           postdec2	equ	0xFDD
  5555                           fsr2h	equ	0xFDA
  5556                           fsr2l	equ	0xFD9
  5557                           status	equ	0xFD8
  5558                           
  5559 ;; *************** function _fabs *****************
  5560 ;; Defined at:
  5561 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  5562 ;; Parameters:    Size  Location     Type
  5563 ;;  d               4   77[BANK0 ] unsigned char 
  5564 ;; Auto vars:     Size  Location     Type
  5565 ;;		None
  5566 ;; Return value:  Size  Location     Type
  5567 ;;                  4   77[BANK0 ] unsigned char 
  5568 ;; Registers used:
  5569 ;;		wreg, status,2, status,0, cstack
  5570 ;; Tracked objects:
  5571 ;;		On entry : 0/0
  5572 ;;		On exit  : 0/0
  5573 ;;		Unchanged: 0/0
  5574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5575 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5578 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5579 ;;Total ram usage:        4 bytes
  5580 ;; Hardware stack levels used:    1
  5581 ;; Hardware stack levels required when called:    5
  5582 ;; This function calls:
  5583 ;;		___flneg
  5584 ;; This function is called by:
  5585 ;;		_asin
  5586 ;;		_atan
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text16
  5591  005AC8                     __ptext16:
  5592                           	opt stack 0
  5593  005AC8                     _fabs:
  5594                           	opt stack 22
  5595                           
  5596                           ;incstack = 0
  5597  005AC8  0100               	movlb	0	; () banked
  5598  005ACA  AFB0               	btfss	(fabs@d+3)& (0+255),7,b
  5599  005ACC  D013               	goto	l1048
  5600                           
  5601                           ; BSR set to: 0
  5602  005ACE  C0AD  F0A9         	movff	fabs@d,___flneg@f1
  5603  005AD2  C0AE  F0AA         	movff	fabs@d+1,___flneg@f1+1
  5604  005AD6  C0AF  F0AB         	movff	fabs@d+2,___flneg@f1+2
  5605  005ADA  C0B0  F0AC         	movff	fabs@d+3,___flneg@f1+3
  5606  005ADE  ECA0  F02D         	call	___flneg	;wreg free
  5607  005AE2  C0A9  F0AD         	movff	?___flneg,?_fabs
  5608  005AE6  C0AA  F0AE         	movff	?___flneg+1,?_fabs+1
  5609  005AEA  C0AB  F0AF         	movff	?___flneg+2,?_fabs+2
  5610  005AEE  C0AC  F0B0         	movff	?___flneg+3,?_fabs+3
  5611  005AF2  0012               	return	
  5612  005AF4                     l1048:
  5613                           
  5614                           ; BSR set to: 0
  5615  005AF4  C0AD  F0AD         	movff	fabs@d,?_fabs
  5616  005AF8  C0AE  F0AE         	movff	fabs@d+1,?_fabs+1
  5617  005AFC  C0AF  F0AF         	movff	fabs@d+2,?_fabs+2
  5618  005B00  C0B0  F0B0         	movff	fabs@d+3,?_fabs+3
  5619  005B04  0012               	return		;funcret
  5620  005B06                     __end_of_fabs:
  5621                           	opt stack 0
  5622                           tblptru	equ	0xFF8
  5623                           tblptrh	equ	0xFF7
  5624                           tblptrl	equ	0xFF6
  5625                           tablat	equ	0xFF5
  5626                           postinc0	equ	0xFEE
  5627                           wreg	equ	0xFE8
  5628                           postdec1	equ	0xFE5
  5629                           fsr1l	equ	0xFE1
  5630                           postinc2	equ	0xFDE
  5631                           postdec2	equ	0xFDD
  5632                           fsr2h	equ	0xFDA
  5633                           fsr2l	equ	0xFD9
  5634                           status	equ	0xFD8
  5635                           
  5636 ;; *************** function ___flneg *****************
  5637 ;; Defined at:
  5638 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  5639 ;; Parameters:    Size  Location     Type
  5640 ;;  f1              4   73[BANK0 ] unsigned char 
  5641 ;; Auto vars:     Size  Location     Type
  5642 ;;		None
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  4   73[BANK0 ] unsigned char 
  5645 ;; Registers used:
  5646 ;;		wreg, status,2, status,0
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5652 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5655 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5656 ;;Total ram usage:        4 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; Hardware stack levels required when called:    4
  5659 ;; This function calls:
  5660 ;;		Nothing
  5661 ;; This function is called by:
  5662 ;;		_matematica
  5663 ;;		_asin
  5664 ;;		_atan
  5665 ;;		_fabs
  5666 ;;		_sin
  5667 ;; This function uses a non-reentrant model
  5668 ;;
  5669                           
  5670                           	psect	text17
  5671  005B40                     __ptext17:
  5672                           	opt stack 0
  5673  005B40                     ___flneg:
  5674                           	opt stack 22
  5675                           
  5676                           ;incstack = 0
  5677  005B40  0100               	movlb	0	; () banked
  5678  005B42  51A9               	movf	___flneg@f1& (0+255),w,b
  5679  005B44  0100               	movlb	0	; () banked
  5680  005B46  11AA               	iorwf	(___flneg@f1+1)& (0+255),w,b
  5681  005B48  0100               	movlb	0	; () banked
  5682  005B4A  11AB               	iorwf	(___flneg@f1+2)& (0+255),w,b
  5683  005B4C  0100               	movlb	0	; () banked
  5684  005B4E  11AC               	iorwf	(___flneg@f1+3)& (0+255),w,b
  5685  005B50  B4D8               	btfsc	status,2,c
  5686  005B52  D009               	goto	l6312
  5687                           
  5688                           ; BSR set to: 0
  5689  005B54  0E00               	movlw	0
  5690  005B56  0100               	movlb	0	; () banked
  5691  005B58  1BA9               	xorwf	___flneg@f1& (0+255),f,b
  5692  005B5A  0E00               	movlw	0
  5693  005B5C  1BAA               	xorwf	(___flneg@f1+1)& (0+255),f,b
  5694  005B5E  0E00               	movlw	0
  5695  005B60  1BAB               	xorwf	(___flneg@f1+2)& (0+255),f,b
  5696  005B62  0E80               	movlw	128
  5697  005B64  1BAC               	xorwf	(___flneg@f1+3)& (0+255),f,b
  5698  005B66                     l6312:
  5699                           
  5700                           ; BSR set to: 0
  5701  005B66  C0A9  F0A9         	movff	___flneg@f1,?___flneg
  5702  005B6A  C0AA  F0AA         	movff	___flneg@f1+1,?___flneg+1
  5703  005B6E  C0AB  F0AB         	movff	___flneg@f1+2,?___flneg+2
  5704  005B72  C0AC  F0AC         	movff	___flneg@f1+3,?___flneg+3
  5705  005B76  0012               	return	
  5706  005B78                     __end_of___flneg:
  5707                           	opt stack 0
  5708                           tblptru	equ	0xFF8
  5709                           tblptrh	equ	0xFF7
  5710                           tblptrl	equ	0xFF6
  5711                           tablat	equ	0xFF5
  5712                           postinc0	equ	0xFEE
  5713                           wreg	equ	0xFE8
  5714                           postdec1	equ	0xFE5
  5715                           fsr1l	equ	0xFE1
  5716                           postinc2	equ	0xFDE
  5717                           postdec2	equ	0xFDD
  5718                           fsr2h	equ	0xFDA
  5719                           fsr2l	equ	0xFD9
  5720                           status	equ	0xFD8
  5721                           
  5722 ;; *************** function _eval_poly *****************
  5723 ;; Defined at:
  5724 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  x               4   97[BANK0 ] unsigned char 
  5727 ;;  d               2  101[BANK0 ] PTR const 
  5728 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
  5729 ;;  n               2  103[BANK0 ] int 
  5730 ;; Auto vars:     Size  Location     Type
  5731 ;;  res             4  109[BANK0 ] int 
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  4   97[BANK0 ] int 
  5734 ;; Registers used:
  5735 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5741 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5742 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5743 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5744 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5745 ;;Total ram usage:       16 bytes
  5746 ;; Hardware stack levels used:    1
  5747 ;; Hardware stack levels required when called:    5
  5748 ;; This function calls:
  5749 ;;		___fladd
  5750 ;;		___flmul
  5751 ;; This function is called by:
  5752 ;;		_atan
  5753 ;;		_sin
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757                           	psect	text18
  5758  005404                     __ptext18:
  5759                           	opt stack 0
  5760  005404                     _eval_poly:
  5761                           	opt stack 21
  5762                           
  5763                           ; BSR set to: 0
  5764                           ;incstack = 0
  5765  005404  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  5766  005408  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  5767  00540C  0100               	movlb	0	; () banked
  5768  00540E  90D8               	bcf	status,0,c
  5769  005410  37C9               	rlcf	??_eval_poly& (0+255),f,b
  5770  005412  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5771  005414  0100               	movlb	0	; () banked
  5772  005416  90D8               	bcf	status,0,c
  5773  005418  37C9               	rlcf	??_eval_poly& (0+255),f,b
  5774  00541A  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5775  00541C  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  5776  005420  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  5777  005424  0100               	movlb	0	; () banked
  5778  005426  51C9               	movf	??_eval_poly& (0+255),w,b
  5779  005428  0100               	movlb	0	; () banked
  5780  00542A  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  5781  00542C  0100               	movlb	0	; () banked
  5782  00542E  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  5783  005430  0100               	movlb	0	; () banked
  5784  005432  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  5785  005434  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  5786  005438  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  5787  00543C                     	if	0	;tblptru may be non-zero
  5788  00543C                     	endif
  5789  00543C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5790  00543C  0E00               	movlw	low (__mediumconst shr (0+16))
  5791  00543E  6EF8               	movwf	tblptru,c
  5792  005440                     	endif
  5793  005440  0009               	tblrd		*+
  5794  005442  CFF5 F0CD          	movff	tablat,eval_poly@res
  5795  005446  0009               	tblrd		*+
  5796  005448  CFF5 F0CE          	movff	tablat,eval_poly@res+1
  5797  00544C  0009               	tblrd		*+
  5798  00544E  CFF5 F0CF          	movff	tablat,eval_poly@res+2
  5799  005452  000A               	tblrd		*-
  5800  005454  CFF5 F0D0          	movff	tablat,eval_poly@res+3
  5801  005458  D052               	goto	l6570
  5802  00545A                     l6568:
  5803                           
  5804                           ; BSR set to: 0
  5805  00545A  C0CD  F094         	movff	eval_poly@res,___flmul@a
  5806  00545E  C0CE  F095         	movff	eval_poly@res+1,___flmul@a+1
  5807  005462  C0CF  F096         	movff	eval_poly@res+2,___flmul@a+2
  5808  005466  C0D0  F097         	movff	eval_poly@res+3,___flmul@a+3
  5809  00546A  C0C1  F090         	movff	eval_poly@x,___flmul@b
  5810  00546E  C0C2  F091         	movff	eval_poly@x+1,___flmul@b+1
  5811  005472  C0C3  F092         	movff	eval_poly@x+2,___flmul@b+2
  5812  005476  C0C4  F093         	movff	eval_poly@x+3,___flmul@b+3
  5813  00547A  EC36  F017         	call	___flmul	;wreg free
  5814  00547E  C090  F0AD         	movff	?___flmul,___fladd@b
  5815  005482  C091  F0AE         	movff	?___flmul+1,___fladd@b+1
  5816  005486  C092  F0AF         	movff	?___flmul+2,___fladd@b+2
  5817  00548A  C093  F0B0         	movff	?___flmul+3,___fladd@b+3
  5818  00548E  0100               	movlb	0	; () banked
  5819  005490  07C7               	decf	eval_poly@n& (0+255),f,b
  5820  005492  A0D8               	btfss	status,0,c
  5821  005494  07C8               	decf	(eval_poly@n+1)& (0+255),f,b
  5822  005496  C0C7  F0C9         	movff	eval_poly@n,??_eval_poly
  5823  00549A  C0C8  F0CA         	movff	eval_poly@n+1,??_eval_poly+1
  5824  00549E  0100               	movlb	0	; () banked
  5825  0054A0  90D8               	bcf	status,0,c
  5826  0054A2  37C9               	rlcf	??_eval_poly& (0+255),f,b
  5827  0054A4  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5828  0054A6  0100               	movlb	0	; () banked
  5829  0054A8  90D8               	bcf	status,0,c
  5830  0054AA  37C9               	rlcf	??_eval_poly& (0+255),f,b
  5831  0054AC  37CA               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5832  0054AE  C0C5  F0CB         	movff	eval_poly@d,??_eval_poly+2
  5833  0054B2  C0C6  F0CC         	movff	eval_poly@d+1,??_eval_poly+3
  5834  0054B6  0100               	movlb	0	; () banked
  5835  0054B8  51C9               	movf	??_eval_poly& (0+255),w,b
  5836  0054BA  0100               	movlb	0	; () banked
  5837  0054BC  27CB               	addwf	(??_eval_poly+2)& (0+255),f,b
  5838  0054BE  0100               	movlb	0	; () banked
  5839  0054C0  51CA               	movf	(??_eval_poly+1)& (0+255),w,b
  5840  0054C2  0100               	movlb	0	; () banked
  5841  0054C4  23CC               	addwfc	(??_eval_poly+3)& (0+255),f,b
  5842  0054C6  C0CB  FFF6         	movff	??_eval_poly+2,tblptrl
  5843  0054CA  C0CC  FFF7         	movff	??_eval_poly+3,tblptrh
  5844  0054CE                     	if	0	;tblptru may be non-zero
  5845  0054CE                     	endif
  5846  0054CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5847  0054CE  0E00               	movlw	low (__mediumconst shr (0+16))
  5848  0054D0  6EF8               	movwf	tblptru,c
  5849  0054D2                     	endif
  5850  0054D2  0009               	tblrd		*+
  5851  0054D4  CFF5 F0B1          	movff	tablat,___fladd@a
  5852  0054D8  0009               	tblrd		*+
  5853  0054DA  CFF5 F0B2          	movff	tablat,___fladd@a+1
  5854  0054DE  0009               	tblrd		*+
  5855  0054E0  CFF5 F0B3          	movff	tablat,___fladd@a+2
  5856  0054E4  000A               	tblrd		*-
  5857  0054E6  CFF5 F0B4          	movff	tablat,___fladd@a+3
  5858  0054EA  ECE2  F014         	call	___fladd	;wreg free
  5859  0054EE  C0AD  F0CD         	movff	?___fladd,eval_poly@res
  5860  0054F2  C0AE  F0CE         	movff	?___fladd+1,eval_poly@res+1
  5861  0054F6  C0AF  F0CF         	movff	?___fladd+2,eval_poly@res+2
  5862  0054FA  C0B0  F0D0         	movff	?___fladd+3,eval_poly@res+3
  5863  0054FE                     l6570:
  5864  0054FE  0100               	movlb	0	; () banked
  5865  005500  51C7               	movf	eval_poly@n& (0+255),w,b
  5866  005502  0100               	movlb	0	; () banked
  5867  005504  11C8               	iorwf	(eval_poly@n+1)& (0+255),w,b
  5868  005506  A4D8               	btfss	status,2,c
  5869  005508  D7A8               	goto	l6568
  5870                           
  5871                           ; BSR set to: 0
  5872  00550A  C0CD  F0C1         	movff	eval_poly@res,?_eval_poly
  5873  00550E  C0CE  F0C2         	movff	eval_poly@res+1,?_eval_poly+1
  5874  005512  C0CF  F0C3         	movff	eval_poly@res+2,?_eval_poly+2
  5875  005516  C0D0  F0C4         	movff	eval_poly@res+3,?_eval_poly+3
  5876                           
  5877                           ; BSR set to: 0
  5878  00551A  0012               	return		;funcret
  5879  00551C                     __end_of_eval_poly:
  5880                           	opt stack 0
  5881                           tblptru	equ	0xFF8
  5882                           tblptrh	equ	0xFF7
  5883                           tblptrl	equ	0xFF6
  5884                           tablat	equ	0xFF5
  5885                           postinc0	equ	0xFEE
  5886                           wreg	equ	0xFE8
  5887                           postdec1	equ	0xFE5
  5888                           fsr1l	equ	0xFE1
  5889                           postinc2	equ	0xFDE
  5890                           postdec2	equ	0xFDD
  5891                           fsr2h	equ	0xFDA
  5892                           fsr2l	equ	0xFD9
  5893                           status	equ	0xFD8
  5894                           
  5895 ;; *************** function ___flmul *****************
  5896 ;; Defined at:
  5897 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  5898 ;; Parameters:    Size  Location     Type
  5899 ;;  b               4   48[BANK0 ] int 
  5900 ;;  a               4   52[BANK0 ] int 
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;  prod            4   67[BANK0 ] struct .
  5903 ;;  grs             4   62[BANK0 ] unsigned long 
  5904 ;;  temp            2   71[BANK0 ] struct .
  5905 ;;  bexp            1   66[BANK0 ] unsigned char 
  5906 ;;  aexp            1   61[BANK0 ] unsigned char 
  5907 ;;  sign            1   60[BANK0 ] unsigned char 
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  4   48[BANK0 ] unsigned char 
  5910 ;; Registers used:
  5911 ;;		wreg, status,2, status,0, prodl, prodh
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5917 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5918 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5919 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5920 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5921 ;;Total ram usage:       25 bytes
  5922 ;; Hardware stack levels used:    1
  5923 ;; Hardware stack levels required when called:    4
  5924 ;; This function calls:
  5925 ;;		Nothing
  5926 ;; This function is called by:
  5927 ;;		_parallelo
  5928 ;;		_matematica
  5929 ;;		_asin
  5930 ;;		_atan
  5931 ;;		_eval_poly
  5932 ;;		_sin
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text19
  5937  002E6C                     __ptext19:
  5938                           	opt stack 0
  5939  002E6C                     ___flmul:
  5940                           	opt stack 21
  5941                           
  5942                           ; BSR set to: 0
  5943                           ;incstack = 0
  5944  002E6C  0100               	movlb	0	; () banked
  5945  002E6E  5193               	movf	(___flmul@b+3)& (0+255),w,b
  5946  002E70  0B80               	andlw	128
  5947  002E72  0100               	movlb	0	; () banked
  5948  002E74  6F9C               	movwf	___flmul@sign& (0+255),b
  5949  002E76  0100               	movlb	0	; () banked
  5950  002E78  5193               	movf	(___flmul@b+3)& (0+255),w,b
  5951  002E7A  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  5952  002E7C  0100               	movlb	0	; () banked
  5953  002E7E  6FA2               	movwf	___flmul@bexp& (0+255),b
  5954                           
  5955                           ; BSR set to: 0
  5956  002E80  0100               	movlb	0	; () banked
  5957  002E82  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  5958  002E84  D002               	goto	l6162
  5959                           
  5960                           ; BSR set to: 0
  5961  002E86  0100               	movlb	0	; () banked
  5962  002E88  81A2               	bsf	___flmul@bexp& (0+255),0,b
  5963  002E8A                     l6162:
  5964                           
  5965                           ; BSR set to: 0
  5966  002E8A  0100               	movlb	0	; () banked
  5967  002E8C  51A2               	movf	___flmul@bexp& (0+255),w,b
  5968  002E8E  0100               	movlb	0	; () banked
  5969  002E90  B4D8               	btfsc	status,2,c
  5970  002E92  D010               	goto	l6170
  5971                           
  5972                           ; BSR set to: 0
  5973  002E94  0100               	movlb	0	; () banked
  5974  002E96  29A2               	incf	___flmul@bexp& (0+255),w,b
  5975  002E98  A4D8               	btfss	status,2,c
  5976  002E9A  D009               	goto	l6168
  5977                           
  5978                           ; BSR set to: 0
  5979  002E9C  0E00               	movlw	0
  5980  002E9E  0100               	movlb	0	; () banked
  5981  002EA0  6F90               	movwf	___flmul@b& (0+255),b
  5982  002EA2  0E00               	movlw	0
  5983  002EA4  6F91               	movwf	(___flmul@b+1)& (0+255),b
  5984  002EA6  0E00               	movlw	0
  5985  002EA8  6F92               	movwf	(___flmul@b+2)& (0+255),b
  5986  002EAA  0E00               	movlw	0
  5987  002EAC  6F93               	movwf	(___flmul@b+3)& (0+255),b
  5988  002EAE                     l6168:
  5989                           
  5990                           ; BSR set to: 0
  5991  002EAE  0100               	movlb	0	; () banked
  5992  002EB0  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  5993  002EB2  D009               	goto	l6172
  5994  002EB4                     l6170:
  5995                           
  5996                           ; BSR set to: 0
  5997  002EB4  0E00               	movlw	0
  5998  002EB6  0100               	movlb	0	; () banked
  5999  002EB8  6F90               	movwf	___flmul@b& (0+255),b
  6000  002EBA  0E00               	movlw	0
  6001  002EBC  6F91               	movwf	(___flmul@b+1)& (0+255),b
  6002  002EBE  0E00               	movlw	0
  6003  002EC0  6F92               	movwf	(___flmul@b+2)& (0+255),b
  6004  002EC2  0E00               	movlw	0
  6005  002EC4  6F93               	movwf	(___flmul@b+3)& (0+255),b
  6006  002EC6                     l6172:
  6007                           
  6008                           ; BSR set to: 0
  6009  002EC6  0100               	movlb	0	; () banked
  6010  002EC8  5197               	movf	(___flmul@a+3)& (0+255),w,b
  6011  002ECA  0B80               	andlw	128
  6012  002ECC  0100               	movlb	0	; () banked
  6013  002ECE  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  6014                           
  6015                           ; BSR set to: 0
  6016  002ED0  0100               	movlb	0	; () banked
  6017  002ED2  5197               	movf	(___flmul@a+3)& (0+255),w,b
  6018  002ED4  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  6019  002ED6  0100               	movlb	0	; () banked
  6020  002ED8  6F9D               	movwf	___flmul@aexp& (0+255),b
  6021                           
  6022                           ; BSR set to: 0
  6023  002EDA  0100               	movlb	0	; () banked
  6024  002EDC  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  6025  002EDE  D002               	goto	l6180
  6026                           
  6027                           ; BSR set to: 0
  6028  002EE0  0100               	movlb	0	; () banked
  6029  002EE2  819D               	bsf	___flmul@aexp& (0+255),0,b
  6030  002EE4                     l6180:
  6031                           
  6032                           ; BSR set to: 0
  6033  002EE4  0100               	movlb	0	; () banked
  6034  002EE6  519D               	movf	___flmul@aexp& (0+255),w,b
  6035  002EE8  0100               	movlb	0	; () banked
  6036  002EEA  B4D8               	btfsc	status,2,c
  6037  002EEC  D010               	goto	l6188
  6038                           
  6039                           ; BSR set to: 0
  6040  002EEE  0100               	movlb	0	; () banked
  6041  002EF0  299D               	incf	___flmul@aexp& (0+255),w,b
  6042  002EF2  A4D8               	btfss	status,2,c
  6043  002EF4  D009               	goto	l6186
  6044                           
  6045                           ; BSR set to: 0
  6046  002EF6  0E00               	movlw	0
  6047  002EF8  0100               	movlb	0	; () banked
  6048  002EFA  6F94               	movwf	___flmul@a& (0+255),b
  6049  002EFC  0E00               	movlw	0
  6050  002EFE  6F95               	movwf	(___flmul@a+1)& (0+255),b
  6051  002F00  0E00               	movlw	0
  6052  002F02  6F96               	movwf	(___flmul@a+2)& (0+255),b
  6053  002F04  0E00               	movlw	0
  6054  002F06  6F97               	movwf	(___flmul@a+3)& (0+255),b
  6055  002F08                     l6186:
  6056                           
  6057                           ; BSR set to: 0
  6058  002F08  0100               	movlb	0	; () banked
  6059  002F0A  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  6060  002F0C  D009               	goto	l1393
  6061  002F0E                     l6188:
  6062                           
  6063                           ; BSR set to: 0
  6064  002F0E  0E00               	movlw	0
  6065  002F10  0100               	movlb	0	; () banked
  6066  002F12  6F94               	movwf	___flmul@a& (0+255),b
  6067  002F14  0E00               	movlw	0
  6068  002F16  6F95               	movwf	(___flmul@a+1)& (0+255),b
  6069  002F18  0E00               	movlw	0
  6070  002F1A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  6071  002F1C  0E00               	movlw	0
  6072  002F1E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  6073  002F20                     l1393:
  6074                           
  6075                           ; BSR set to: 0
  6076  002F20  0100               	movlb	0	; () banked
  6077  002F22  519D               	movf	___flmul@aexp& (0+255),w,b
  6078  002F24  0100               	movlb	0	; () banked
  6079  002F26  B4D8               	btfsc	status,2,c
  6080  002F28  D005               	goto	l6192
  6081                           
  6082                           ; BSR set to: 0
  6083  002F2A  0100               	movlb	0	; () banked
  6084  002F2C  51A2               	movf	___flmul@bexp& (0+255),w,b
  6085  002F2E  0100               	movlb	0	; () banked
  6086  002F30  A4D8               	btfss	status,2,c
  6087  002F32  D00A               	goto	l6196
  6088  002F34                     l6192:
  6089                           
  6090                           ; BSR set to: 0
  6091  002F34  0E00               	movlw	0
  6092  002F36  0100               	movlb	0	; () banked
  6093  002F38  6F90               	movwf	?___flmul& (0+255),b
  6094  002F3A  0E00               	movlw	0
  6095  002F3C  6F91               	movwf	(?___flmul+1)& (0+255),b
  6096  002F3E  0E00               	movlw	0
  6097  002F40  6F92               	movwf	(?___flmul+2)& (0+255),b
  6098  002F42  0E00               	movlw	0
  6099  002F44  6F93               	movwf	(?___flmul+3)& (0+255),b
  6100                           
  6101                           ; BSR set to: 0
  6102  002F46  0012               	return	
  6103  002F48                     l6196:
  6104                           
  6105                           ; BSR set to: 0
  6106  002F48  0100               	movlb	0	; () banked
  6107  002F4A  5196               	movf	(___flmul@a+2)& (0+255),w,b
  6108  002F4C  0100               	movlb	0	; () banked
  6109  002F4E  0390               	mulwf	___flmul@b& (0+255),b
  6110  002F50  CFF3 F0A7          	movff	prodl,___flmul@temp
  6111  002F54  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6112                           
  6113                           ; BSR set to: 0
  6114  002F58  0100               	movlb	0	; () banked
  6115  002F5A  51A7               	movf	___flmul@temp& (0+255),w,b
  6116  002F5C  0100               	movlb	0	; () banked
  6117  002F5E  6F9E               	movwf	___flmul@grs& (0+255),b
  6118  002F60  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  6119  002F62  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  6120  002F64  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  6121                           
  6122                           ; BSR set to: 0
  6123  002F66  0100               	movlb	0	; () banked
  6124  002F68  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6125  002F6A  0100               	movlb	0	; () banked
  6126  002F6C  6FA3               	movwf	___flmul@prod& (0+255),b
  6127  002F6E  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  6128  002F70  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  6129  002F72  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  6130  002F74  0100               	movlb	0	; () banked
  6131  002F76  5195               	movf	(___flmul@a+1)& (0+255),w,b
  6132  002F78  0100               	movlb	0	; () banked
  6133  002F7A  0391               	mulwf	(___flmul@b+1)& (0+255),b
  6134  002F7C  CFF3 F0A7          	movff	prodl,___flmul@temp
  6135  002F80  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6136                           
  6137                           ; BSR set to: 0
  6138  002F84  0100               	movlb	0	; () banked
  6139  002F86  51A7               	movf	___flmul@temp& (0+255),w,b
  6140  002F88  0100               	movlb	0	; () banked
  6141  002F8A  279E               	addwf	___flmul@grs& (0+255),f,b
  6142  002F8C  0E00               	movlw	0
  6143  002F8E  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6144  002F90  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6145  002F92  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6146                           
  6147                           ; BSR set to: 0
  6148  002F94  0100               	movlb	0	; () banked
  6149  002F96  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6150  002F98  0100               	movlb	0	; () banked
  6151  002F9A  27A3               	addwf	___flmul@prod& (0+255),f,b
  6152  002F9C  0E00               	movlw	0
  6153  002F9E  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6154  002FA0  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6155  002FA2  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6156  002FA4  0100               	movlb	0	; () banked
  6157  002FA6  5194               	movf	___flmul@a& (0+255),w,b
  6158  002FA8  0100               	movlb	0	; () banked
  6159  002FAA  0392               	mulwf	(___flmul@b+2)& (0+255),b
  6160  002FAC  CFF3 F0A7          	movff	prodl,___flmul@temp
  6161  002FB0  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6162                           
  6163                           ; BSR set to: 0
  6164  002FB4  0100               	movlb	0	; () banked
  6165  002FB6  51A7               	movf	___flmul@temp& (0+255),w,b
  6166  002FB8  0100               	movlb	0	; () banked
  6167  002FBA  279E               	addwf	___flmul@grs& (0+255),f,b
  6168  002FBC  0E00               	movlw	0
  6169  002FBE  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6170  002FC0  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6171  002FC2  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6172                           
  6173                           ; BSR set to: 0
  6174  002FC4  0100               	movlb	0	; () banked
  6175  002FC6  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6176  002FC8  0100               	movlb	0	; () banked
  6177  002FCA  27A3               	addwf	___flmul@prod& (0+255),f,b
  6178  002FCC  0E00               	movlw	0
  6179  002FCE  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6180  002FD0  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6181  002FD2  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6182                           
  6183                           ; BSR set to: 0
  6184  002FD4  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  6185  002FD8  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  6186  002FDC  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  6187  002FE0  0100               	movlb	0	; () banked
  6188  002FE2  6B9E               	clrf	___flmul@grs& (0+255),b
  6189                           
  6190                           ; BSR set to: 0
  6191  002FE4  0100               	movlb	0	; () banked
  6192  002FE6  5194               	movf	___flmul@a& (0+255),w,b
  6193  002FE8  0100               	movlb	0	; () banked
  6194  002FEA  0391               	mulwf	(___flmul@b+1)& (0+255),b
  6195  002FEC  CFF3 F0A7          	movff	prodl,___flmul@temp
  6196  002FF0  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6197                           
  6198                           ; BSR set to: 0
  6199  002FF4  0100               	movlb	0	; () banked
  6200  002FF6  51A7               	movf	___flmul@temp& (0+255),w,b
  6201  002FF8  0100               	movlb	0	; () banked
  6202  002FFA  279E               	addwf	___flmul@grs& (0+255),f,b
  6203  002FFC  0100               	movlb	0	; () banked
  6204  002FFE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6205  003000  0100               	movlb	0	; () banked
  6206  003002  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6207  003004  0E00               	movlw	0
  6208  003006  0100               	movlb	0	; () banked
  6209  003008  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6210  00300A  0E00               	movlw	0
  6211  00300C  0100               	movlb	0	; () banked
  6212  00300E  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6213                           
  6214                           ; BSR set to: 0
  6215  003010  0100               	movlb	0	; () banked
  6216  003012  5195               	movf	(___flmul@a+1)& (0+255),w,b
  6217  003014  0100               	movlb	0	; () banked
  6218  003016  0390               	mulwf	___flmul@b& (0+255),b
  6219  003018  CFF3 F0A7          	movff	prodl,___flmul@temp
  6220  00301C  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6221                           
  6222                           ; BSR set to: 0
  6223  003020  0100               	movlb	0	; () banked
  6224  003022  51A7               	movf	___flmul@temp& (0+255),w,b
  6225  003024  0100               	movlb	0	; () banked
  6226  003026  279E               	addwf	___flmul@grs& (0+255),f,b
  6227  003028  0100               	movlb	0	; () banked
  6228  00302A  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6229  00302C  0100               	movlb	0	; () banked
  6230  00302E  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6231  003030  0E00               	movlw	0
  6232  003032  0100               	movlb	0	; () banked
  6233  003034  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6234  003036  0E00               	movlw	0
  6235  003038  0100               	movlb	0	; () banked
  6236  00303A  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6237                           
  6238                           ; BSR set to: 0
  6239  00303C  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  6240  003040  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  6241  003044  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  6242  003048  0100               	movlb	0	; () banked
  6243  00304A  6B9E               	clrf	___flmul@grs& (0+255),b
  6244  00304C  0100               	movlb	0	; () banked
  6245  00304E  5194               	movf	___flmul@a& (0+255),w,b
  6246  003050  0100               	movlb	0	; () banked
  6247  003052  0390               	mulwf	___flmul@b& (0+255),b
  6248  003054  CFF3 F0A7          	movff	prodl,___flmul@temp
  6249  003058  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6250                           
  6251                           ; BSR set to: 0
  6252  00305C  0100               	movlb	0	; () banked
  6253  00305E  51A7               	movf	___flmul@temp& (0+255),w,b
  6254  003060  0100               	movlb	0	; () banked
  6255  003062  279E               	addwf	___flmul@grs& (0+255),f,b
  6256  003064  0100               	movlb	0	; () banked
  6257  003066  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6258  003068  0100               	movlb	0	; () banked
  6259  00306A  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6260  00306C  0E00               	movlw	0
  6261  00306E  0100               	movlb	0	; () banked
  6262  003070  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6263  003072  0E00               	movlw	0
  6264  003074  0100               	movlb	0	; () banked
  6265  003076  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6266                           
  6267                           ; BSR set to: 0
  6268  003078  0100               	movlb	0	; () banked
  6269  00307A  5196               	movf	(___flmul@a+2)& (0+255),w,b
  6270  00307C  0100               	movlb	0	; () banked
  6271  00307E  0391               	mulwf	(___flmul@b+1)& (0+255),b
  6272  003080  CFF3 F0A7          	movff	prodl,___flmul@temp
  6273  003084  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6274  003088  0100               	movlb	0	; () banked
  6275  00308A  51A7               	movf	___flmul@temp& (0+255),w,b
  6276  00308C  0100               	movlb	0	; () banked
  6277  00308E  27A3               	addwf	___flmul@prod& (0+255),f,b
  6278  003090  0100               	movlb	0	; () banked
  6279  003092  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6280  003094  0100               	movlb	0	; () banked
  6281  003096  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6282  003098  0E00               	movlw	0
  6283  00309A  0100               	movlb	0	; () banked
  6284  00309C  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6285  00309E  0E00               	movlw	0
  6286  0030A0  0100               	movlb	0	; () banked
  6287  0030A2  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6288                           
  6289                           ; BSR set to: 0
  6290  0030A4  0100               	movlb	0	; () banked
  6291  0030A6  5195               	movf	(___flmul@a+1)& (0+255),w,b
  6292  0030A8  0100               	movlb	0	; () banked
  6293  0030AA  0392               	mulwf	(___flmul@b+2)& (0+255),b
  6294  0030AC  CFF3 F0A7          	movff	prodl,___flmul@temp
  6295  0030B0  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6296                           
  6297                           ; BSR set to: 0
  6298  0030B4  0100               	movlb	0	; () banked
  6299  0030B6  51A7               	movf	___flmul@temp& (0+255),w,b
  6300  0030B8  0100               	movlb	0	; () banked
  6301  0030BA  27A3               	addwf	___flmul@prod& (0+255),f,b
  6302  0030BC  0100               	movlb	0	; () banked
  6303  0030BE  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6304  0030C0  0100               	movlb	0	; () banked
  6305  0030C2  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6306  0030C4  0E00               	movlw	0
  6307  0030C6  0100               	movlb	0	; () banked
  6308  0030C8  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6309  0030CA  0E00               	movlw	0
  6310  0030CC  0100               	movlb	0	; () banked
  6311  0030CE  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6312  0030D0  0100               	movlb	0	; () banked
  6313  0030D2  5196               	movf	(___flmul@a+2)& (0+255),w,b
  6314  0030D4  0100               	movlb	0	; () banked
  6315  0030D6  0392               	mulwf	(___flmul@b+2)& (0+255),b
  6316  0030D8  CFF3 F0A7          	movff	prodl,___flmul@temp
  6317  0030DC  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  6318                           
  6319                           ; BSR set to: 0
  6320  0030E0  0100               	movlb	0	; () banked
  6321  0030E2  51A7               	movf	___flmul@temp& (0+255),w,b
  6322  0030E4  0100               	movlb	0	; () banked
  6323  0030E6  6F98               	movwf	??___flmul& (0+255),b
  6324  0030E8  0100               	movlb	0	; () banked
  6325  0030EA  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6326  0030EC  0100               	movlb	0	; () banked
  6327  0030EE  6F99               	movwf	(??___flmul+1)& (0+255),b
  6328  0030F0  0100               	movlb	0	; () banked
  6329  0030F2  6B9A               	clrf	(??___flmul+2)& (0+255),b
  6330  0030F4  0100               	movlb	0	; () banked
  6331  0030F6  6B9B               	clrf	(??___flmul+3)& (0+255),b
  6332  0030F8  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  6333  0030FC  C099  F09A         	movff	??___flmul+1,??___flmul+2
  6334  003100  C098  F099         	movff	??___flmul,??___flmul+1
  6335  003104  0100               	movlb	0	; () banked
  6336  003106  6B98               	clrf	??___flmul& (0+255),b
  6337  003108  0100               	movlb	0	; () banked
  6338  00310A  5198               	movf	??___flmul& (0+255),w,b
  6339  00310C  0100               	movlb	0	; () banked
  6340  00310E  27A3               	addwf	___flmul@prod& (0+255),f,b
  6341  003110  0100               	movlb	0	; () banked
  6342  003112  5199               	movf	(??___flmul+1)& (0+255),w,b
  6343  003114  0100               	movlb	0	; () banked
  6344  003116  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6345  003118  0100               	movlb	0	; () banked
  6346  00311A  519A               	movf	(??___flmul+2)& (0+255),w,b
  6347  00311C  0100               	movlb	0	; () banked
  6348  00311E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6349  003120  0100               	movlb	0	; () banked
  6350  003122  519B               	movf	(??___flmul+3)& (0+255),w,b
  6351  003124  0100               	movlb	0	; () banked
  6352  003126  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6353                           
  6354                           ; BSR set to: 0
  6355  003128  C09E  F098         	movff	___flmul@grs,??___flmul
  6356  00312C  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  6357  003130  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  6358  003134  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  6359  003138  0E19               	movlw	25
  6360  00313A  D006               	goto	u7740
  6361  00313C                     u7745:
  6362  00313C  0100               	movlb	0	; () banked
  6363  00313E  90D8               	bcf	status,0,c
  6364  003140  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  6365  003142  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  6366  003144  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  6367  003146  3398               	rrcf	??___flmul& (0+255),f,b
  6368  003148                     u7740:
  6369  003148  2EE8               	decfsz	wreg,f,c
  6370  00314A  D7F8               	goto	u7745
  6371  00314C  0100               	movlb	0	; () banked
  6372  00314E  5198               	movf	??___flmul& (0+255),w,b
  6373  003150  0100               	movlb	0	; () banked
  6374  003152  27A3               	addwf	___flmul@prod& (0+255),f,b
  6375  003154  0100               	movlb	0	; () banked
  6376  003156  5199               	movf	(??___flmul+1)& (0+255),w,b
  6377  003158  0100               	movlb	0	; () banked
  6378  00315A  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6379  00315C  0100               	movlb	0	; () banked
  6380  00315E  519A               	movf	(??___flmul+2)& (0+255),w,b
  6381  003160  0100               	movlb	0	; () banked
  6382  003162  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6383  003164  0100               	movlb	0	; () banked
  6384  003166  519B               	movf	(??___flmul+3)& (0+255),w,b
  6385  003168  0100               	movlb	0	; () banked
  6386  00316A  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6387                           
  6388                           ; BSR set to: 0
  6389  00316C  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  6390  003170  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  6391  003174  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  6392  003178  0100               	movlb	0	; () banked
  6393  00317A  6B9E               	clrf	___flmul@grs& (0+255),b
  6394                           
  6395                           ; BSR set to: 0
  6396  00317C  0100               	movlb	0	; () banked
  6397  00317E  519D               	movf	___flmul@aexp& (0+255),w,b
  6398  003180  C0A2  F098         	movff	___flmul@bexp,??___flmul
  6399  003184  0100               	movlb	0	; () banked
  6400  003186  6B99               	clrf	(??___flmul+1)& (0+255),b
  6401  003188  0100               	movlb	0	; () banked
  6402  00318A  2798               	addwf	??___flmul& (0+255),f,b
  6403  00318C  0E00               	movlw	0
  6404  00318E  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  6405  003190  0E82               	movlw	130
  6406  003192  0100               	movlb	0	; () banked
  6407  003194  2598               	addwf	??___flmul& (0+255),w,b
  6408  003196  0100               	movlb	0	; () banked
  6409  003198  6FA7               	movwf	___flmul@temp& (0+255),b
  6410  00319A  0EFF               	movlw	255
  6411  00319C  0100               	movlb	0	; () banked
  6412  00319E  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  6413  0031A0  0100               	movlb	0	; () banked
  6414  0031A2  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  6415  0031A4  D015               	goto	l6244
  6416  0031A6                     l6238:
  6417                           
  6418                           ; BSR set to: 0
  6419  0031A6  0100               	movlb	0	; () banked
  6420  0031A8  90D8               	bcf	status,0,c
  6421  0031AA  37A3               	rlcf	___flmul@prod& (0+255),f,b
  6422  0031AC  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6423  0031AE  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6424  0031B0  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6425                           
  6426                           ; BSR set to: 0
  6427  0031B2  0100               	movlb	0	; () banked
  6428  0031B4  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  6429  0031B6  D002               	goto	l1400
  6430                           
  6431                           ; BSR set to: 0
  6432  0031B8  0100               	movlb	0	; () banked
  6433  0031BA  81A3               	bsf	___flmul@prod& (0+255),0,b
  6434  0031BC                     l1400:
  6435                           
  6436                           ; BSR set to: 0
  6437  0031BC  0100               	movlb	0	; () banked
  6438  0031BE  90D8               	bcf	status,0,c
  6439  0031C0  379E               	rlcf	___flmul@grs& (0+255),f,b
  6440  0031C2  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6441  0031C4  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6442  0031C6  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6443  0031C8  0100               	movlb	0	; () banked
  6444  0031CA  07A7               	decf	___flmul@temp& (0+255),f,b
  6445  0031CC  A0D8               	btfss	status,0,c
  6446  0031CE  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  6447  0031D0                     l6244:
  6448                           
  6449                           ; BSR set to: 0
  6450  0031D0  0100               	movlb	0	; () banked
  6451  0031D2  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  6452  0031D4  D7E8               	goto	l6238
  6453                           
  6454                           ; BSR set to: 0
  6455                           
  6456                           ; BSR set to: 0
  6457  0031D6  0E00               	movlw	0
  6458  0031D8  0100               	movlb	0	; () banked
  6459  0031DA  6F9D               	movwf	___flmul@aexp& (0+255),b
  6460                           
  6461                           ; BSR set to: 0
  6462  0031DC  0100               	movlb	0	; () banked
  6463  0031DE  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  6464  0031E0  D024               	goto	l1402
  6465                           
  6466                           ; BSR set to: 0
  6467  0031E2  0EFF               	movlw	255
  6468  0031E4  0100               	movlb	0	; () banked
  6469  0031E6  159E               	andwf	___flmul@grs& (0+255),w,b
  6470  0031E8  0100               	movlb	0	; () banked
  6471  0031EA  6F98               	movwf	??___flmul& (0+255),b
  6472  0031EC  0EFF               	movlw	255
  6473  0031EE  0100               	movlb	0	; () banked
  6474  0031F0  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  6475  0031F2  0100               	movlb	0	; () banked
  6476  0031F4  6F99               	movwf	(??___flmul+1)& (0+255),b
  6477  0031F6  0EFF               	movlw	255
  6478  0031F8  0100               	movlb	0	; () banked
  6479  0031FA  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  6480  0031FC  0100               	movlb	0	; () banked
  6481  0031FE  6F9A               	movwf	(??___flmul+2)& (0+255),b
  6482  003200  0E7F               	movlw	127
  6483  003202  0100               	movlb	0	; () banked
  6484  003204  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  6485  003206  0100               	movlb	0	; () banked
  6486  003208  6F9B               	movwf	(??___flmul+3)& (0+255),b
  6487  00320A  0100               	movlb	0	; () banked
  6488  00320C  5198               	movf	??___flmul& (0+255),w,b
  6489  00320E  0100               	movlb	0	; () banked
  6490  003210  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  6491  003212  0100               	movlb	0	; () banked
  6492  003214  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  6493  003216  0100               	movlb	0	; () banked
  6494  003218  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  6495  00321A  A4D8               	btfss	status,2,c
  6496  00321C  D003               	goto	l6254
  6497                           
  6498                           ; BSR set to: 0
  6499                           
  6500                           ; BSR set to: 0
  6501  00321E  0100               	movlb	0	; () banked
  6502  003220  A1A3               	btfss	___flmul@prod& (0+255),0,b
  6503  003222  D003               	goto	l1402
  6504  003224                     l6254:
  6505                           
  6506                           ; BSR set to: 0
  6507  003224  0E01               	movlw	1
  6508  003226  0100               	movlb	0	; () banked
  6509  003228  6F9D               	movwf	___flmul@aexp& (0+255),b
  6510  00322A                     l1402:
  6511                           
  6512                           ; BSR set to: 0
  6513  00322A  0100               	movlb	0	; () banked
  6514  00322C  519D               	movf	___flmul@aexp& (0+255),w,b
  6515  00322E  0100               	movlb	0	; () banked
  6516  003230  B4D8               	btfsc	status,2,c
  6517  003232  D023               	goto	l6264
  6518                           
  6519                           ; BSR set to: 0
  6520  003234  0E01               	movlw	1
  6521  003236  0100               	movlb	0	; () banked
  6522  003238  27A3               	addwf	___flmul@prod& (0+255),f,b
  6523  00323A  0E00               	movlw	0
  6524  00323C  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6525  00323E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6526  003240  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6527                           
  6528                           ; BSR set to: 0
  6529  003242  0100               	movlb	0	; () banked
  6530  003244  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  6531  003246  D019               	goto	l6264
  6532                           
  6533                           ; BSR set to: 0
  6534  003248  C0A3  F098         	movff	___flmul@prod,??___flmul
  6535  00324C  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  6536  003250  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  6537  003254  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  6538  003258  0100               	movlb	0	; () banked
  6539  00325A  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  6540  00325C  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  6541  00325E  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  6542  003260  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  6543  003262  3398               	rrcf	??___flmul& (0+255),f,b
  6544  003264  C098  F0A3         	movff	??___flmul,___flmul@prod
  6545  003268  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  6546  00326C  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  6547  003270  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  6548                           
  6549                           ; BSR set to: 0
  6550  003274  0100               	movlb	0	; () banked
  6551  003276  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  6552  003278  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  6553  00327A                     l6264:
  6554                           
  6555                           ; BSR set to: 0
  6556  00327A  0100               	movlb	0	; () banked
  6557  00327C  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6558  00327E  D010               	goto	l6268
  6559  003280  0100               	movlb	0	; () banked
  6560  003282  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6561  003284  E104               	bnz	u7820
  6562  003286  0100               	movlb	0	; () banked
  6563  003288  29A7               	incf	___flmul@temp& (0+255),w,b
  6564  00328A  A0D8               	btfss	status,0,c
  6565  00328C  D009               	goto	l6268
  6566  00328E                     u7820:
  6567                           
  6568                           ; BSR set to: 0
  6569  00328E  0E00               	movlw	0
  6570  003290  0100               	movlb	0	; () banked
  6571  003292  6FA3               	movwf	___flmul@prod& (0+255),b
  6572  003294  0E00               	movlw	0
  6573  003296  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  6574  003298  0E80               	movlw	128
  6575  00329A  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  6576  00329C  0E7F               	movlw	127
  6577  00329E  D02B               	goto	L2
  6578  0032A0                     l6268:
  6579                           
  6580                           ; BSR set to: 0
  6581  0032A0  0100               	movlb	0	; () banked
  6582  0032A2  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6583  0032A4  D007               	goto	l6270
  6584  0032A6  0100               	movlb	0	; () banked
  6585  0032A8  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  6586  0032AA  E111               	bnz	l1410
  6587  0032AC  0100               	movlb	0	; () banked
  6588  0032AE  05A7               	decf	___flmul@temp& (0+255),w,b
  6589  0032B0  B0D8               	btfsc	status,0,c
  6590  0032B2  D00D               	goto	l1410
  6591  0032B4                     l6270:
  6592                           
  6593                           ; BSR set to: 0
  6594  0032B4  0E00               	movlw	0
  6595  0032B6  0100               	movlb	0	; () banked
  6596  0032B8  6FA3               	movwf	___flmul@prod& (0+255),b
  6597  0032BA  0E00               	movlw	0
  6598  0032BC  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  6599  0032BE  0E00               	movlw	0
  6600  0032C0  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  6601  0032C2  0E00               	movlw	0
  6602  0032C4  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  6603  0032C6  0E00               	movlw	0
  6604  0032C8  0100               	movlb	0	; () banked
  6605  0032CA  6F9C               	movwf	___flmul@sign& (0+255),b
  6606  0032CC  D015               	goto	l6280
  6607  0032CE                     l1410:
  6608                           
  6609                           ; BSR set to: 0
  6610  0032CE  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  6611                           
  6612                           ; BSR set to: 0
  6613  0032D2  0EFF               	movlw	255
  6614  0032D4  0100               	movlb	0	; () banked
  6615  0032D6  17A3               	andwf	___flmul@prod& (0+255),f,b
  6616  0032D8  0EFF               	movlw	255
  6617  0032DA  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  6618  0032DC  0E7F               	movlw	127
  6619  0032DE  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  6620  0032E0  0E00               	movlw	0
  6621  0032E2  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  6622                           
  6623                           ; BSR set to: 0
  6624  0032E4  0100               	movlb	0	; () banked
  6625  0032E6  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  6626  0032E8  D002               	goto	l6278
  6627                           
  6628                           ; BSR set to: 0
  6629  0032EA  0100               	movlb	0	; () banked
  6630  0032EC  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  6631  0032EE                     l6278:
  6632                           
  6633                           ; BSR set to: 0
  6634  0032EE  0100               	movlb	0	; () banked
  6635  0032F0  90D8               	bcf	status,0,c
  6636  0032F2  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  6637  0032F4  0100               	movlb	0	; () banked
  6638  0032F6                     L2:
  6639  0032F6  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  6640  0032F8                     l6280:
  6641                           
  6642                           ; BSR set to: 0
  6643  0032F8  0100               	movlb	0	; () banked
  6644  0032FA  519C               	movf	___flmul@sign& (0+255),w,b
  6645  0032FC  0100               	movlb	0	; () banked
  6646  0032FE  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6647                           
  6648                           ; BSR set to: 0
  6649  003300  C0A3  F090         	movff	___flmul@prod,?___flmul
  6650  003304  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  6651  003308  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  6652  00330C  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  6653  003310  0012               	return	
  6654  003312                     __end_of___flmul:
  6655                           	opt stack 0
  6656                           tblptru	equ	0xFF8
  6657                           tblptrh	equ	0xFF7
  6658                           tblptrl	equ	0xFF6
  6659                           tablat	equ	0xFF5
  6660                           prodh	equ	0xFF4
  6661                           prodl	equ	0xFF3
  6662                           postinc0	equ	0xFEE
  6663                           wreg	equ	0xFE8
  6664                           postdec1	equ	0xFE5
  6665                           fsr1l	equ	0xFE1
  6666                           postinc2	equ	0xFDE
  6667                           postdec2	equ	0xFDD
  6668                           fsr2h	equ	0xFDA
  6669                           fsr2l	equ	0xFD9
  6670                           status	equ	0xFD8
  6671                           
  6672 ;; *************** function ___fladd *****************
  6673 ;; Defined at:
  6674 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;  b               4   77[BANK0 ] unsigned char 
  6677 ;;  a               4   81[BANK0 ] unsigned char 
  6678 ;; Auto vars:     Size  Location     Type
  6679 ;;  grs             1   96[BANK0 ] unsigned char 
  6680 ;;  bexp            1   95[BANK0 ] unsigned char 
  6681 ;;  aexp            1   94[BANK0 ] unsigned char 
  6682 ;;  signs           1   93[BANK0 ] unsigned char 
  6683 ;; Return value:  Size  Location     Type
  6684 ;;                  4   77[BANK0 ] unsigned char 
  6685 ;; Registers used:
  6686 ;;		wreg, status,2, status,0
  6687 ;; Tracked objects:
  6688 ;;		On entry : 0/0
  6689 ;;		On exit  : 0/0
  6690 ;;		Unchanged: 0/0
  6691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6692 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6693 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6694 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6695 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6696 ;;Total ram usage:       20 bytes
  6697 ;; Hardware stack levels used:    1
  6698 ;; Hardware stack levels required when called:    4
  6699 ;; This function calls:
  6700 ;;		Nothing
  6701 ;; This function is called by:
  6702 ;;		_parallelo
  6703 ;;		_matematica
  6704 ;;		_asin
  6705 ;;		_atan
  6706 ;;		_cos
  6707 ;;		_eval_poly
  6708 ;;		_sin
  6709 ;;		___flsub
  6710 ;;		_floor
  6711 ;; This function uses a non-reentrant model
  6712 ;;
  6713                           
  6714                           	psect	text20
  6715  0029C4                     __ptext20:
  6716                           	opt stack 0
  6717  0029C4                     ___fladd:
  6718                           	opt stack 21
  6719                           
  6720                           ; BSR set to: 0
  6721                           ;incstack = 0
  6722  0029C4  0100               	movlb	0	; () banked
  6723  0029C6  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  6724  0029C8  0B80               	andlw	128
  6725  0029CA  0100               	movlb	0	; () banked
  6726  0029CC  6FBD               	movwf	___fladd@signs& (0+255),b
  6727  0029CE  0100               	movlb	0	; () banked
  6728  0029D0  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  6729  0029D2  25B0               	addwf	(___fladd@b+3)& (0+255),w,b
  6730  0029D4  0100               	movlb	0	; () banked
  6731  0029D6  6FBF               	movwf	___fladd@bexp& (0+255),b
  6732                           
  6733                           ; BSR set to: 0
  6734  0029D8  0100               	movlb	0	; () banked
  6735  0029DA  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  6736  0029DC  D002               	goto	l5960
  6737                           
  6738                           ; BSR set to: 0
  6739  0029DE  0100               	movlb	0	; () banked
  6740  0029E0  81BF               	bsf	___fladd@bexp& (0+255),0,b
  6741  0029E2                     l5960:
  6742                           
  6743                           ; BSR set to: 0
  6744  0029E2  0100               	movlb	0	; () banked
  6745  0029E4  51BF               	movf	___fladd@bexp& (0+255),w,b
  6746  0029E6  0100               	movlb	0	; () banked
  6747  0029E8  B4D8               	btfsc	status,2,c
  6748  0029EA  D012               	goto	l5970
  6749                           
  6750                           ; BSR set to: 0
  6751  0029EC  0100               	movlb	0	; () banked
  6752  0029EE  29BF               	incf	___fladd@bexp& (0+255),w,b
  6753  0029F0  A4D8               	btfss	status,2,c
  6754  0029F2  D009               	goto	l5966
  6755                           
  6756                           ; BSR set to: 0
  6757  0029F4  0E00               	movlw	0
  6758  0029F6  0100               	movlb	0	; () banked
  6759  0029F8  6FAD               	movwf	___fladd@b& (0+255),b
  6760  0029FA  0E00               	movlw	0
  6761  0029FC  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  6762  0029FE  0E00               	movlw	0
  6763  002A00  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  6764  002A02  0E00               	movlw	0
  6765  002A04  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  6766  002A06                     l5966:
  6767                           
  6768                           ; BSR set to: 0
  6769  002A06  0100               	movlb	0	; () banked
  6770  002A08  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  6771                           
  6772                           ; BSR set to: 0
  6773  002A0A  0E00               	movlw	0
  6774  002A0C  0100               	movlb	0	; () banked
  6775  002A0E  D008               	goto	L3
  6776  002A10                     l5970:
  6777                           
  6778                           ; BSR set to: 0
  6779  002A10  0E00               	movlw	0
  6780  002A12  0100               	movlb	0	; () banked
  6781  002A14  6FAD               	movwf	___fladd@b& (0+255),b
  6782  002A16  0E00               	movlw	0
  6783  002A18  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  6784  002A1A  0E00               	movlw	0
  6785  002A1C  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  6786  002A1E  0E00               	movlw	0
  6787  002A20                     L3:
  6788  002A20  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  6789                           
  6790                           ; BSR set to: 0
  6791                           
  6792                           ; BSR set to: 0
  6793  002A22  0100               	movlb	0	; () banked
  6794  002A24  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  6795  002A26  0B80               	andlw	128
  6796  002A28  0100               	movlb	0	; () banked
  6797  002A2A  6FBE               	movwf	___fladd@aexp& (0+255),b
  6798                           
  6799                           ; BSR set to: 0
  6800  002A2C  0100               	movlb	0	; () banked
  6801  002A2E  51BD               	movf	___fladd@signs& (0+255),w,b
  6802  002A30  0100               	movlb	0	; () banked
  6803  002A32  19BE               	xorwf	___fladd@aexp& (0+255),w,b
  6804  002A34  B4D8               	btfsc	status,2,c
  6805  002A36  D002               	goto	l5978
  6806                           
  6807                           ; BSR set to: 0
  6808  002A38  0100               	movlb	0	; () banked
  6809  002A3A  8DBD               	bsf	___fladd@signs& (0+255),6,b
  6810  002A3C                     l5978:
  6811                           
  6812                           ; BSR set to: 0
  6813  002A3C  0100               	movlb	0	; () banked
  6814  002A3E  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  6815  002A40  25B4               	addwf	(___fladd@a+3)& (0+255),w,b
  6816  002A42  0100               	movlb	0	; () banked
  6817  002A44  6FBE               	movwf	___fladd@aexp& (0+255),b
  6818                           
  6819                           ; BSR set to: 0
  6820  002A46  0100               	movlb	0	; () banked
  6821  002A48  AFB3               	btfss	(___fladd@a+2)& (0+255),7,b
  6822  002A4A  D002               	goto	l5984
  6823                           
  6824                           ; BSR set to: 0
  6825  002A4C  0100               	movlb	0	; () banked
  6826  002A4E  81BE               	bsf	___fladd@aexp& (0+255),0,b
  6827  002A50                     l5984:
  6828                           
  6829                           ; BSR set to: 0
  6830  002A50  0100               	movlb	0	; () banked
  6831  002A52  51BE               	movf	___fladd@aexp& (0+255),w,b
  6832  002A54  0100               	movlb	0	; () banked
  6833  002A56  B4D8               	btfsc	status,2,c
  6834  002A58  D012               	goto	l5994
  6835                           
  6836                           ; BSR set to: 0
  6837  002A5A  0100               	movlb	0	; () banked
  6838  002A5C  29BE               	incf	___fladd@aexp& (0+255),w,b
  6839  002A5E  A4D8               	btfss	status,2,c
  6840  002A60  D009               	goto	l5990
  6841                           
  6842                           ; BSR set to: 0
  6843  002A62  0E00               	movlw	0
  6844  002A64  0100               	movlb	0	; () banked
  6845  002A66  6FB1               	movwf	___fladd@a& (0+255),b
  6846  002A68  0E00               	movlw	0
  6847  002A6A  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  6848  002A6C  0E00               	movlw	0
  6849  002A6E  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  6850  002A70  0E00               	movlw	0
  6851  002A72  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  6852  002A74                     l5990:
  6853                           
  6854                           ; BSR set to: 0
  6855  002A74  0100               	movlb	0	; () banked
  6856  002A76  8FB3               	bsf	(___fladd@a+2)& (0+255),7,b
  6857                           
  6858                           ; BSR set to: 0
  6859  002A78  0E00               	movlw	0
  6860  002A7A  0100               	movlb	0	; () banked
  6861  002A7C  D008               	goto	L4
  6862  002A7E                     l5994:
  6863                           
  6864                           ; BSR set to: 0
  6865  002A7E  0E00               	movlw	0
  6866  002A80  0100               	movlb	0	; () banked
  6867  002A82  6FB1               	movwf	___fladd@a& (0+255),b
  6868  002A84  0E00               	movlw	0
  6869  002A86  6FB2               	movwf	(___fladd@a+1)& (0+255),b
  6870  002A88  0E00               	movlw	0
  6871  002A8A  6FB3               	movwf	(___fladd@a+2)& (0+255),b
  6872  002A8C  0E00               	movlw	0
  6873  002A8E                     L4:
  6874  002A8E  6FB4               	movwf	(___fladd@a+3)& (0+255),b
  6875                           
  6876                           ; BSR set to: 0
  6877                           
  6878                           ; BSR set to: 0
  6879  002A90  0100               	movlb	0	; () banked
  6880  002A92  51BF               	movf	___fladd@bexp& (0+255),w,b
  6881  002A94  0100               	movlb	0	; () banked
  6882  002A96  5DBE               	subwf	___fladd@aexp& (0+255),w,b
  6883  002A98  B0D8               	btfsc	status,0,c
  6884  002A9A  D024               	goto	l6032
  6885                           
  6886                           ; BSR set to: 0
  6887  002A9C  0100               	movlb	0	; () banked
  6888  002A9E  ADBD               	btfss	___fladd@signs& (0+255),6,b
  6889  002AA0  D003               	goto	l6002
  6890                           
  6891                           ; BSR set to: 0
  6892  002AA2  0E80               	movlw	128
  6893  002AA4  0100               	movlb	0	; () banked
  6894  002AA6  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  6895  002AA8                     l6002:
  6896                           
  6897                           ; BSR set to: 0
  6898  002AA8  C0BF  F0C0         	movff	___fladd@bexp,___fladd@grs
  6899                           
  6900                           ; BSR set to: 0
  6901  002AAC  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  6902                           
  6903                           ; BSR set to: 0
  6904  002AB0  C0C0  F0BE         	movff	___fladd@grs,___fladd@aexp
  6905                           
  6906                           ; BSR set to: 0
  6907  002AB4  C0AD  F0C0         	movff	___fladd@b,___fladd@grs
  6908                           
  6909                           ; BSR set to: 0
  6910  002AB8  C0B1  F0AD         	movff	___fladd@a,___fladd@b
  6911                           
  6912                           ; BSR set to: 0
  6913  002ABC  C0C0  F0B1         	movff	___fladd@grs,___fladd@a
  6914                           
  6915                           ; BSR set to: 0
  6916  002AC0  C0AE  F0C0         	movff	___fladd@b+1,___fladd@grs
  6917                           
  6918                           ; BSR set to: 0
  6919  002AC4  C0B2  F0AE         	movff	___fladd@a+1,___fladd@b+1
  6920                           
  6921                           ; BSR set to: 0
  6922  002AC8  C0C0  F0B2         	movff	___fladd@grs,___fladd@a+1
  6923                           
  6924                           ; BSR set to: 0
  6925  002ACC  C0AF  F0C0         	movff	___fladd@b+2,___fladd@grs
  6926                           
  6927                           ; BSR set to: 0
  6928  002AD0  C0B3  F0AF         	movff	___fladd@a+2,___fladd@b+2
  6929                           
  6930                           ; BSR set to: 0
  6931  002AD4  C0C0  F0B3         	movff	___fladd@grs,___fladd@a+2
  6932                           
  6933                           ; BSR set to: 0
  6934  002AD8  C0B0  F0C0         	movff	___fladd@b+3,___fladd@grs
  6935                           
  6936                           ; BSR set to: 0
  6937  002ADC  C0B4  F0B0         	movff	___fladd@a+3,___fladd@b+3
  6938                           
  6939                           ; BSR set to: 0
  6940  002AE0  C0C0  F0B4         	movff	___fladd@grs,___fladd@a+3
  6941  002AE4                     l6032:
  6942                           
  6943                           ; BSR set to: 0
  6944  002AE4  0E00               	movlw	0
  6945  002AE6  0100               	movlb	0	; () banked
  6946  002AE8  6FC0               	movwf	___fladd@grs& (0+255),b
  6947                           
  6948                           ; BSR set to: 0
  6949  002AEA  0100               	movlb	0	; () banked
  6950  002AEC  51BF               	movf	___fladd@bexp& (0+255),w,b
  6951  002AEE  0100               	movlb	0	; () banked
  6952  002AF0  6FB5               	movwf	??___fladd& (0+255),b
  6953  002AF2  6BB6               	clrf	(??___fladd+1)& (0+255),b
  6954  002AF4  0100               	movlb	0	; () banked
  6955  002AF6  1FB5               	comf	??___fladd& (0+255),f,b
  6956  002AF8  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  6957  002AFA  4BB5               	infsnz	??___fladd& (0+255),f,b
  6958  002AFC  2BB6               	incf	(??___fladd+1)& (0+255),f,b
  6959  002AFE  0100               	movlb	0	; () banked
  6960  002B00  51BE               	movf	___fladd@aexp& (0+255),w,b
  6961  002B02  0100               	movlb	0	; () banked
  6962  002B04  6FB7               	movwf	(??___fladd+2)& (0+255),b
  6963  002B06  6BB8               	clrf	(??___fladd+3)& (0+255),b
  6964  002B08  0100               	movlb	0	; () banked
  6965  002B0A  51B5               	movf	??___fladd& (0+255),w,b
  6966  002B0C  0100               	movlb	0	; () banked
  6967  002B0E  27B7               	addwf	(??___fladd+2)& (0+255),f,b
  6968  002B10  0100               	movlb	0	; () banked
  6969  002B12  51B6               	movf	(??___fladd+1)& (0+255),w,b
  6970  002B14  0100               	movlb	0	; () banked
  6971  002B16  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  6972  002B18  0100               	movlb	0	; () banked
  6973  002B1A  BFB8               	btfsc	(??___fladd+3)& (0+255),7,b
  6974  002B1C  D03D               	goto	l1308
  6975  002B1E  0100               	movlb	0	; () banked
  6976  002B20  51B8               	movf	(??___fladd+3)& (0+255),w,b
  6977  002B22  E105               	bnz	u7360
  6978  002B24  0E1A               	movlw	26
  6979  002B26  0100               	movlb	0	; () banked
  6980  002B28  5DB7               	subwf	(??___fladd+2)& (0+255),w,b
  6981  002B2A  A0D8               	btfss	status,0,c
  6982  002B2C  D035               	goto	l1308
  6983  002B2E                     u7360:
  6984                           
  6985                           ; BSR set to: 0
  6986  002B2E  0100               	movlb	0	; () banked
  6987  002B30  51AD               	movf	___fladd@b& (0+255),w,b
  6988  002B32  0100               	movlb	0	; () banked
  6989  002B34  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  6990  002B36  0100               	movlb	0	; () banked
  6991  002B38  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  6992  002B3A  0100               	movlb	0	; () banked
  6993  002B3C  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  6994  002B3E  B4D8               	btfsc	status,2,c
  6995  002B40  D002               	goto	u7370
  6996  002B42  0E01               	movlw	1
  6997  002B44  D001               	goto	u7380
  6998  002B46                     u7370:
  6999  002B46  0E00               	movlw	0
  7000  002B48                     u7380:
  7001  002B48  0100               	movlb	0	; () banked
  7002  002B4A  6FC0               	movwf	___fladd@grs& (0+255),b
  7003                           
  7004                           ; BSR set to: 0
  7005  002B4C  0E00               	movlw	0
  7006  002B4E  0100               	movlb	0	; () banked
  7007  002B50  6FAD               	movwf	___fladd@b& (0+255),b
  7008  002B52  0E00               	movlw	0
  7009  002B54  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  7010  002B56  0E00               	movlw	0
  7011  002B58  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  7012  002B5A  0E00               	movlw	0
  7013  002B5C  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7014                           
  7015                           ; BSR set to: 0
  7016  002B5E  C0BE  F0BF         	movff	___fladd@aexp,___fladd@bexp
  7017  002B62  D020               	goto	l1307
  7018  002B64                     l1309:
  7019                           
  7020                           ; BSR set to: 0
  7021  002B64  0100               	movlb	0	; () banked
  7022  002B66  A1C0               	btfss	___fladd@grs& (0+255),0,b
  7023  002B68  D007               	goto	l6044
  7024                           
  7025                           ; BSR set to: 0
  7026  002B6A  0100               	movlb	0	; () banked
  7027  002B6C  90D8               	bcf	status,0,c
  7028  002B6E  31C0               	rrcf	___fladd@grs& (0+255),w,b
  7029  002B70  0901               	iorlw	1
  7030  002B72  0100               	movlb	0	; () banked
  7031  002B74  6FC0               	movwf	___fladd@grs& (0+255),b
  7032  002B76  D003               	goto	l6046
  7033  002B78                     l6044:
  7034                           
  7035                           ; BSR set to: 0
  7036  002B78  0100               	movlb	0	; () banked
  7037  002B7A  90D8               	bcf	status,0,c
  7038  002B7C  33C0               	rrcf	___fladd@grs& (0+255),f,b
  7039  002B7E                     l6046:
  7040                           
  7041                           ; BSR set to: 0
  7042  002B7E  0100               	movlb	0	; () banked
  7043  002B80  A1AD               	btfss	___fladd@b& (0+255),0,b
  7044  002B82  D002               	goto	l6050
  7045                           
  7046                           ; BSR set to: 0
  7047  002B84  0100               	movlb	0	; () banked
  7048  002B86  8FC0               	bsf	___fladd@grs& (0+255),7,b
  7049  002B88                     l6050:
  7050                           
  7051                           ; BSR set to: 0
  7052  002B88  0100               	movlb	0	; () banked
  7053  002B8A  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  7054  002B8C  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  7055  002B8E  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  7056  002B90  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  7057  002B92  33AD               	rrcf	___fladd@b& (0+255),f,b
  7058                           
  7059                           ; BSR set to: 0
  7060  002B94  0100               	movlb	0	; () banked
  7061  002B96  2BBF               	incf	___fladd@bexp& (0+255),f,b
  7062  002B98                     l1308:
  7063                           
  7064                           ; BSR set to: 0
  7065  002B98  0100               	movlb	0	; () banked
  7066  002B9A  51BE               	movf	___fladd@aexp& (0+255),w,b
  7067  002B9C  0100               	movlb	0	; () banked
  7068  002B9E  5DBF               	subwf	___fladd@bexp& (0+255),w,b
  7069  002BA0  A0D8               	btfss	status,0,c
  7070  002BA2  D7E0               	goto	l1309
  7071  002BA4                     l1307:
  7072                           
  7073                           ; BSR set to: 0
  7074  002BA4  0100               	movlb	0	; () banked
  7075  002BA6  BDBD               	btfsc	___fladd@signs& (0+255),6,b
  7076  002BA8  D03F               	goto	l6078
  7077                           
  7078                           ; BSR set to: 0
  7079  002BAA  0100               	movlb	0	; () banked
  7080  002BAC  51BF               	movf	___fladd@bexp& (0+255),w,b
  7081  002BAE  0100               	movlb	0	; () banked
  7082  002BB0  A4D8               	btfss	status,2,c
  7083  002BB2  D00A               	goto	l6060
  7084                           
  7085                           ; BSR set to: 0
  7086  002BB4  0E00               	movlw	0
  7087  002BB6  0100               	movlb	0	; () banked
  7088  002BB8  6FAD               	movwf	?___fladd& (0+255),b
  7089  002BBA  0E00               	movlw	0
  7090  002BBC  6FAE               	movwf	(?___fladd+1)& (0+255),b
  7091  002BBE  0E00               	movlw	0
  7092  002BC0  6FAF               	movwf	(?___fladd+2)& (0+255),b
  7093  002BC2  0E00               	movlw	0
  7094  002BC4  6FB0               	movwf	(?___fladd+3)& (0+255),b
  7095                           
  7096                           ; BSR set to: 0
  7097  002BC6  0012               	return	
  7098  002BC8                     l6060:
  7099                           
  7100                           ; BSR set to: 0
  7101  002BC8  0100               	movlb	0	; () banked
  7102  002BCA  51B1               	movf	___fladd@a& (0+255),w,b
  7103  002BCC  0100               	movlb	0	; () banked
  7104  002BCE  27AD               	addwf	___fladd@b& (0+255),f,b
  7105  002BD0  0100               	movlb	0	; () banked
  7106  002BD2  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  7107  002BD4  0100               	movlb	0	; () banked
  7108  002BD6  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  7109  002BD8  0100               	movlb	0	; () banked
  7110  002BDA  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  7111  002BDC  0100               	movlb	0	; () banked
  7112  002BDE  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  7113  002BE0  0100               	movlb	0	; () banked
  7114  002BE2  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7115  002BE4  0100               	movlb	0	; () banked
  7116  002BE6  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  7117                           
  7118                           ; BSR set to: 0
  7119  002BE8  0100               	movlb	0	; () banked
  7120  002BEA  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  7121  002BEC  D0CC               	goto	l6114
  7122                           
  7123                           ; BSR set to: 0
  7124  002BEE  0100               	movlb	0	; () banked
  7125  002BF0  A1C0               	btfss	___fladd@grs& (0+255),0,b
  7126  002BF2  D009               	goto	l6068
  7127                           
  7128                           ; BSR set to: 0
  7129  002BF4  0100               	movlb	0	; () banked
  7130  002BF6  90D8               	bcf	status,0,c
  7131  002BF8  33C0               	rrcf	___fladd@grs& (0+255),f,b
  7132  002BFA  0100               	movlb	0	; () banked
  7133  002BFC  51C0               	movf	___fladd@grs& (0+255),w,b
  7134  002BFE  0901               	iorlw	1
  7135  002C00  0100               	movlb	0	; () banked
  7136  002C02  6FC0               	movwf	___fladd@grs& (0+255),b
  7137  002C04  D003               	goto	l6070
  7138  002C06                     l6068:
  7139                           
  7140                           ; BSR set to: 0
  7141  002C06  0100               	movlb	0	; () banked
  7142  002C08  90D8               	bcf	status,0,c
  7143  002C0A  33C0               	rrcf	___fladd@grs& (0+255),f,b
  7144  002C0C                     l6070:
  7145                           
  7146                           ; BSR set to: 0
  7147  002C0C  0100               	movlb	0	; () banked
  7148  002C0E  A1AD               	btfss	___fladd@b& (0+255),0,b
  7149  002C10  D002               	goto	l6074
  7150                           
  7151                           ; BSR set to: 0
  7152  002C12  0100               	movlb	0	; () banked
  7153  002C14  8FC0               	bsf	___fladd@grs& (0+255),7,b
  7154  002C16                     l6074:
  7155                           
  7156                           ; BSR set to: 0
  7157  002C16  0100               	movlb	0	; () banked
  7158  002C18  35B0               	rlcf	(___fladd@b+3)& (0+255),w,b
  7159  002C1A  33B0               	rrcf	(___fladd@b+3)& (0+255),f,b
  7160  002C1C  33AF               	rrcf	(___fladd@b+2)& (0+255),f,b
  7161  002C1E  33AE               	rrcf	(___fladd@b+1)& (0+255),f,b
  7162  002C20  33AD               	rrcf	___fladd@b& (0+255),f,b
  7163                           
  7164                           ; BSR set to: 0
  7165  002C22  0100               	movlb	0	; () banked
  7166  002C24  2BBF               	incf	___fladd@bexp& (0+255),f,b
  7167                           
  7168                           ; BSR set to: 0
  7169  002C26  D0AF               	goto	l6114
  7170  002C28                     l6078:
  7171                           
  7172                           ; BSR set to: 0
  7173  002C28  0100               	movlb	0	; () banked
  7174  002C2A  51B1               	movf	___fladd@a& (0+255),w,b
  7175  002C2C  0100               	movlb	0	; () banked
  7176  002C2E  5DAD               	subwf	___fladd@b& (0+255),w,b
  7177  002C30  0100               	movlb	0	; () banked
  7178  002C32  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  7179  002C34  0100               	movlb	0	; () banked
  7180  002C36  59AE               	subwfb	(___fladd@b+1)& (0+255),w,b
  7181  002C38  0100               	movlb	0	; () banked
  7182  002C3A  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  7183  002C3C  0100               	movlb	0	; () banked
  7184  002C3E  59AF               	subwfb	(___fladd@b+2)& (0+255),w,b
  7185  002C40  0100               	movlb	0	; () banked
  7186  002C42  51B0               	movf	(___fladd@b+3)& (0+255),w,b
  7187  002C44  0A80               	xorlw	128
  7188  002C46  0100               	movlb	0	; () banked
  7189  002C48  6FB5               	movwf	??___fladd& (0+255),b
  7190  002C4A  0100               	movlb	0	; () banked
  7191  002C4C  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7192  002C4E  0A80               	xorlw	128
  7193  002C50  0100               	movlb	0	; () banked
  7194  002C52  59B5               	subwfb	??___fladd& (0+255),w,b
  7195  002C54  B0D8               	btfsc	status,0,c
  7196  002C56  D050               	goto	l6088
  7197                           
  7198                           ; BSR set to: 0
  7199  002C58  C0AD  F0B5         	movff	___fladd@b,??___fladd
  7200  002C5C  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  7201  002C60  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  7202  002C64  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  7203  002C68  0100               	movlb	0	; () banked
  7204  002C6A  1FB5               	comf	??___fladd& (0+255),f,b
  7205  002C6C  1FB6               	comf	(??___fladd+1)& (0+255),f,b
  7206  002C6E  1FB7               	comf	(??___fladd+2)& (0+255),f,b
  7207  002C70  1FB8               	comf	(??___fladd+3)& (0+255),f,b
  7208  002C72  2BB5               	incf	??___fladd& (0+255),f,b
  7209  002C74  0E00               	movlw	0
  7210  002C76  23B6               	addwfc	(??___fladd+1)& (0+255),f,b
  7211  002C78  23B7               	addwfc	(??___fladd+2)& (0+255),f,b
  7212  002C7A  23B8               	addwfc	(??___fladd+3)& (0+255),f,b
  7213  002C7C  0100               	movlb	0	; () banked
  7214  002C7E  51B1               	movf	___fladd@a& (0+255),w,b
  7215  002C80  0100               	movlb	0	; () banked
  7216  002C82  25B5               	addwf	??___fladd& (0+255),w,b
  7217  002C84  0100               	movlb	0	; () banked
  7218  002C86  6FB9               	movwf	(??___fladd+4)& (0+255),b
  7219  002C88  0100               	movlb	0	; () banked
  7220  002C8A  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  7221  002C8C  0100               	movlb	0	; () banked
  7222  002C8E  21B6               	addwfc	(??___fladd+1)& (0+255),w,b
  7223  002C90  0100               	movlb	0	; () banked
  7224  002C92  6FBA               	movwf	(??___fladd+5)& (0+255),b
  7225  002C94  0100               	movlb	0	; () banked
  7226  002C96  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  7227  002C98  0100               	movlb	0	; () banked
  7228  002C9A  21B7               	addwfc	(??___fladd+2)& (0+255),w,b
  7229  002C9C  0100               	movlb	0	; () banked
  7230  002C9E  6FBB               	movwf	(??___fladd+6)& (0+255),b
  7231  002CA0  0100               	movlb	0	; () banked
  7232  002CA2  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7233  002CA4  0100               	movlb	0	; () banked
  7234  002CA6  21B8               	addwfc	(??___fladd+3)& (0+255),w,b
  7235  002CA8  0100               	movlb	0	; () banked
  7236  002CAA  6FBC               	movwf	(??___fladd+7)& (0+255),b
  7237  002CAC  0EFF               	movlw	255
  7238  002CAE  0100               	movlb	0	; () banked
  7239  002CB0  25B9               	addwf	(??___fladd+4)& (0+255),w,b
  7240  002CB2  0100               	movlb	0	; () banked
  7241  002CB4  6FAD               	movwf	___fladd@b& (0+255),b
  7242  002CB6  0EFF               	movlw	255
  7243  002CB8  0100               	movlb	0	; () banked
  7244  002CBA  21BA               	addwfc	(??___fladd+5)& (0+255),w,b
  7245  002CBC  0100               	movlb	0	; () banked
  7246  002CBE  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  7247  002CC0  0EFF               	movlw	255
  7248  002CC2  0100               	movlb	0	; () banked
  7249  002CC4  21BB               	addwfc	(??___fladd+6)& (0+255),w,b
  7250  002CC6  0100               	movlb	0	; () banked
  7251  002CC8  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  7252  002CCA  0EFF               	movlw	255
  7253  002CCC  0100               	movlb	0	; () banked
  7254  002CCE  21BC               	addwfc	(??___fladd+7)& (0+255),w,b
  7255  002CD0  0100               	movlb	0	; () banked
  7256  002CD2  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7257  002CD4  0E80               	movlw	128
  7258  002CD6  0100               	movlb	0	; () banked
  7259  002CD8  1BBD               	xorwf	___fladd@signs& (0+255),f,b
  7260                           
  7261                           ; BSR set to: 0
  7262  002CDA  0100               	movlb	0	; () banked
  7263  002CDC  6DC0               	negf	___fladd@grs& (0+255),b
  7264                           
  7265                           ; BSR set to: 0
  7266  002CDE  0100               	movlb	0	; () banked
  7267  002CE0  51C0               	movf	___fladd@grs& (0+255),w,b
  7268  002CE2  0100               	movlb	0	; () banked
  7269  002CE4  A4D8               	btfss	status,2,c
  7270  002CE6  D018               	goto	l1324
  7271                           
  7272                           ; BSR set to: 0
  7273  002CE8  0E01               	movlw	1
  7274  002CEA  0100               	movlb	0	; () banked
  7275  002CEC  27AD               	addwf	___fladd@b& (0+255),f,b
  7276  002CEE  0E00               	movlw	0
  7277  002CF0  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  7278  002CF2  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  7279  002CF4  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  7280                           
  7281                           ; BSR set to: 0
  7282  002CF6  D010               	goto	l1324
  7283  002CF8                     l6088:
  7284                           
  7285                           ; BSR set to: 0
  7286  002CF8  0100               	movlb	0	; () banked
  7287  002CFA  51B1               	movf	___fladd@a& (0+255),w,b
  7288  002CFC  0100               	movlb	0	; () banked
  7289  002CFE  5FAD               	subwf	___fladd@b& (0+255),f,b
  7290  002D00  0100               	movlb	0	; () banked
  7291  002D02  51B2               	movf	(___fladd@a+1)& (0+255),w,b
  7292  002D04  0100               	movlb	0	; () banked
  7293  002D06  5BAE               	subwfb	(___fladd@b+1)& (0+255),f,b
  7294  002D08  0100               	movlb	0	; () banked
  7295  002D0A  51B3               	movf	(___fladd@a+2)& (0+255),w,b
  7296  002D0C  0100               	movlb	0	; () banked
  7297  002D0E  5BAF               	subwfb	(___fladd@b+2)& (0+255),f,b
  7298  002D10  0100               	movlb	0	; () banked
  7299  002D12  51B4               	movf	(___fladd@a+3)& (0+255),w,b
  7300  002D14  0100               	movlb	0	; () banked
  7301  002D16  5BB0               	subwfb	(___fladd@b+3)& (0+255),f,b
  7302  002D18                     l1324:
  7303                           
  7304                           ; BSR set to: 0
  7305  002D18  0100               	movlb	0	; () banked
  7306  002D1A  51AD               	movf	___fladd@b& (0+255),w,b
  7307  002D1C  0100               	movlb	0	; () banked
  7308  002D1E  11AE               	iorwf	(___fladd@b+1)& (0+255),w,b
  7309  002D20  0100               	movlb	0	; () banked
  7310  002D22  11AF               	iorwf	(___fladd@b+2)& (0+255),w,b
  7311  002D24  0100               	movlb	0	; () banked
  7312  002D26  11B0               	iorwf	(___fladd@b+3)& (0+255),w,b
  7313  002D28  A4D8               	btfss	status,2,c
  7314  002D2A  D02A               	goto	l6112
  7315                           
  7316                           ; BSR set to: 0
  7317  002D2C  0100               	movlb	0	; () banked
  7318  002D2E  51C0               	movf	___fladd@grs& (0+255),w,b
  7319  002D30  0100               	movlb	0	; () banked
  7320  002D32  A4D8               	btfss	status,2,c
  7321  002D34  D025               	goto	l6112
  7322                           
  7323                           ; BSR set to: 0
  7324  002D36  0E00               	movlw	0
  7325  002D38  0100               	movlb	0	; () banked
  7326  002D3A  6FAD               	movwf	?___fladd& (0+255),b
  7327  002D3C  0E00               	movlw	0
  7328  002D3E  6FAE               	movwf	(?___fladd+1)& (0+255),b
  7329  002D40  0E00               	movlw	0
  7330  002D42  6FAF               	movwf	(?___fladd+2)& (0+255),b
  7331  002D44  0E00               	movlw	0
  7332  002D46  6FB0               	movwf	(?___fladd+3)& (0+255),b
  7333                           
  7334                           ; BSR set to: 0
  7335  002D48  0012               	return	
  7336  002D4A                     l6096:
  7337                           
  7338                           ; BSR set to: 0
  7339  002D4A  0100               	movlb	0	; () banked
  7340  002D4C  90D8               	bcf	status,0,c
  7341  002D4E  37AD               	rlcf	___fladd@b& (0+255),f,b
  7342  002D50  37AE               	rlcf	(___fladd@b+1)& (0+255),f,b
  7343  002D52  37AF               	rlcf	(___fladd@b+2)& (0+255),f,b
  7344  002D54  37B0               	rlcf	(___fladd@b+3)& (0+255),f,b
  7345                           
  7346                           ; BSR set to: 0
  7347  002D56  0100               	movlb	0	; () banked
  7348  002D58  AFC0               	btfss	___fladd@grs& (0+255),7,b
  7349  002D5A  D002               	goto	l6102
  7350                           
  7351                           ; BSR set to: 0
  7352  002D5C  0100               	movlb	0	; () banked
  7353  002D5E  81AD               	bsf	___fladd@b& (0+255),0,b
  7354  002D60                     l6102:
  7355                           
  7356                           ; BSR set to: 0
  7357  002D60  0100               	movlb	0	; () banked
  7358  002D62  A1C0               	btfss	___fladd@grs& (0+255),0,b
  7359  002D64  D003               	goto	l6106
  7360                           
  7361                           ; BSR set to: 0
  7362  002D66  80D8               	bsf	status,0,c
  7363  002D68  0100               	movlb	0	; () banked
  7364  002D6A  D002               	goto	L5
  7365  002D6C                     l6106:
  7366                           
  7367                           ; BSR set to: 0
  7368  002D6C  0100               	movlb	0	; () banked
  7369  002D6E  90D8               	bcf	status,0,c
  7370  002D70                     L5:
  7371  002D70  37C0               	rlcf	___fladd@grs& (0+255),f,b
  7372                           
  7373                           ; BSR set to: 0
  7374                           
  7375                           ; BSR set to: 0
  7376  002D72  0100               	movlb	0	; () banked
  7377  002D74  51BF               	movf	___fladd@bexp& (0+255),w,b
  7378  002D76  0100               	movlb	0	; () banked
  7379  002D78  B4D8               	btfsc	status,2,c
  7380  002D7A  D002               	goto	l6112
  7381                           
  7382                           ; BSR set to: 0
  7383  002D7C  0100               	movlb	0	; () banked
  7384  002D7E  07BF               	decf	___fladd@bexp& (0+255),f,b
  7385  002D80                     l6112:
  7386                           
  7387                           ; BSR set to: 0
  7388  002D80  0100               	movlb	0	; () banked
  7389  002D82  AFAF               	btfss	(___fladd@b+2)& (0+255),7,b
  7390  002D84  D7E2               	goto	l6096
  7391  002D86                     l6114:
  7392                           
  7393                           ; BSR set to: 0
  7394  002D86  0E00               	movlw	0
  7395  002D88  0100               	movlb	0	; () banked
  7396  002D8A  6FBE               	movwf	___fladd@aexp& (0+255),b
  7397                           
  7398                           ; BSR set to: 0
  7399  002D8C  0100               	movlb	0	; () banked
  7400  002D8E  AFC0               	btfss	___fladd@grs& (0+255),7,b
  7401  002D90  D00D               	goto	l1333
  7402                           
  7403                           ; BSR set to: 0
  7404  002D92  C0C0  F0B5         	movff	___fladd@grs,??___fladd
  7405  002D96  0E7F               	movlw	127
  7406  002D98  0100               	movlb	0	; () banked
  7407  002D9A  17B5               	andwf	??___fladd& (0+255),f,b
  7408  002D9C  A4D8               	btfss	status,2,c
  7409  002D9E  D003               	goto	l6122
  7410                           
  7411                           ; BSR set to: 0
  7412                           
  7413                           ; BSR set to: 0
  7414  002DA0  0100               	movlb	0	; () banked
  7415  002DA2  A1AD               	btfss	___fladd@b& (0+255),0,b
  7416  002DA4  D003               	goto	l1333
  7417  002DA6                     l6122:
  7418                           
  7419                           ; BSR set to: 0
  7420  002DA6  0E01               	movlw	1
  7421  002DA8  0100               	movlb	0	; () banked
  7422  002DAA  6FBE               	movwf	___fladd@aexp& (0+255),b
  7423  002DAC                     l1333:
  7424                           
  7425                           ; BSR set to: 0
  7426  002DAC  0100               	movlb	0	; () banked
  7427  002DAE  51BE               	movf	___fladd@aexp& (0+255),w,b
  7428  002DB0  0100               	movlb	0	; () banked
  7429  002DB2  B4D8               	btfsc	status,2,c
  7430  002DB4  D026               	goto	l6132
  7431                           
  7432                           ; BSR set to: 0
  7433  002DB6  0E01               	movlw	1
  7434  002DB8  0100               	movlb	0	; () banked
  7435  002DBA  27AD               	addwf	___fladd@b& (0+255),f,b
  7436  002DBC  0E00               	movlw	0
  7437  002DBE  23AE               	addwfc	(___fladd@b+1)& (0+255),f,b
  7438  002DC0  23AF               	addwfc	(___fladd@b+2)& (0+255),f,b
  7439  002DC2  23B0               	addwfc	(___fladd@b+3)& (0+255),f,b
  7440                           
  7441                           ; BSR set to: 0
  7442  002DC4  0100               	movlb	0	; () banked
  7443  002DC6  A1B0               	btfss	(___fladd@b+3)& (0+255),0,b
  7444  002DC8  D01C               	goto	l6132
  7445                           
  7446                           ; BSR set to: 0
  7447  002DCA  C0AD  F0B5         	movff	___fladd@b,??___fladd
  7448  002DCE  C0AE  F0B6         	movff	___fladd@b+1,??___fladd+1
  7449  002DD2  C0AF  F0B7         	movff	___fladd@b+2,??___fladd+2
  7450  002DD6  C0B0  F0B8         	movff	___fladd@b+3,??___fladd+3
  7451  002DDA  0100               	movlb	0	; () banked
  7452  002DDC  35B8               	rlcf	(??___fladd+3)& (0+255),w,b
  7453  002DDE  33B8               	rrcf	(??___fladd+3)& (0+255),f,b
  7454  002DE0  33B7               	rrcf	(??___fladd+2)& (0+255),f,b
  7455  002DE2  33B6               	rrcf	(??___fladd+1)& (0+255),f,b
  7456  002DE4  33B5               	rrcf	??___fladd& (0+255),f,b
  7457  002DE6  C0B5  F0AD         	movff	??___fladd,___fladd@b
  7458  002DEA  C0B6  F0AE         	movff	??___fladd+1,___fladd@b+1
  7459  002DEE  C0B7  F0AF         	movff	??___fladd+2,___fladd@b+2
  7460  002DF2  C0B8  F0B0         	movff	??___fladd+3,___fladd@b+3
  7461  002DF6  0100               	movlb	0	; () banked
  7462  002DF8  29BF               	incf	___fladd@bexp& (0+255),w,b
  7463  002DFA  B4D8               	btfsc	status,2,c
  7464  002DFC  D002               	goto	l6132
  7465                           
  7466                           ; BSR set to: 0
  7467  002DFE  0100               	movlb	0	; () banked
  7468  002E00  2BBF               	incf	___fladd@bexp& (0+255),f,b
  7469  002E02                     l6132:
  7470                           
  7471                           ; BSR set to: 0
  7472  002E02  0100               	movlb	0	; () banked
  7473  002E04  29BF               	incf	___fladd@bexp& (0+255),w,b
  7474  002E06  B4D8               	btfsc	status,2,c
  7475  002E08  D005               	goto	l6136
  7476                           
  7477                           ; BSR set to: 0
  7478  002E0A  0100               	movlb	0	; () banked
  7479  002E0C  51BF               	movf	___fladd@bexp& (0+255),w,b
  7480  002E0E  0100               	movlb	0	; () banked
  7481  002E10  A4D8               	btfss	status,2,c
  7482  002E12  D011               	goto	l6140
  7483  002E14                     l6136:
  7484                           
  7485                           ; BSR set to: 0
  7486  002E14  0E00               	movlw	0
  7487  002E16  0100               	movlb	0	; () banked
  7488  002E18  6FAD               	movwf	___fladd@b& (0+255),b
  7489  002E1A  0E00               	movlw	0
  7490  002E1C  6FAE               	movwf	(___fladd@b+1)& (0+255),b
  7491  002E1E  0E00               	movlw	0
  7492  002E20  6FAF               	movwf	(___fladd@b+2)& (0+255),b
  7493  002E22  0E00               	movlw	0
  7494  002E24  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7495  002E26  0100               	movlb	0	; () banked
  7496  002E28  51BF               	movf	___fladd@bexp& (0+255),w,b
  7497  002E2A  0100               	movlb	0	; () banked
  7498  002E2C  A4D8               	btfss	status,2,c
  7499  002E2E  D003               	goto	l6140
  7500                           
  7501                           ; BSR set to: 0
  7502  002E30  0E00               	movlw	0
  7503  002E32  0100               	movlb	0	; () banked
  7504  002E34  6FBD               	movwf	___fladd@signs& (0+255),b
  7505  002E36                     l6140:
  7506                           
  7507                           ; BSR set to: 0
  7508  002E36  0100               	movlb	0	; () banked
  7509  002E38  A1BF               	btfss	___fladd@bexp& (0+255),0,b
  7510  002E3A  D003               	goto	l6144
  7511                           
  7512                           ; BSR set to: 0
  7513  002E3C  0100               	movlb	0	; () banked
  7514  002E3E  8FAF               	bsf	(___fladd@b+2)& (0+255),7,b
  7515  002E40  D002               	goto	l6146
  7516  002E42                     l6144:
  7517                           
  7518                           ; BSR set to: 0
  7519  002E42  0100               	movlb	0	; () banked
  7520  002E44  9FAF               	bcf	(___fladd@b+2)& (0+255),7,b
  7521  002E46                     l6146:
  7522                           
  7523                           ; BSR set to: 0
  7524  002E46  0100               	movlb	0	; () banked
  7525  002E48  90D8               	bcf	status,0,c
  7526  002E4A  31BF               	rrcf	___fladd@bexp& (0+255),w,b
  7527  002E4C  0100               	movlb	0	; () banked
  7528  002E4E  6FB0               	movwf	(___fladd@b+3)& (0+255),b
  7529                           
  7530                           ; BSR set to: 0
  7531  002E50  0100               	movlb	0	; () banked
  7532  002E52  AFBD               	btfss	___fladd@signs& (0+255),7,b
  7533  002E54  D002               	goto	l6152
  7534                           
  7535                           ; BSR set to: 0
  7536  002E56  0100               	movlb	0	; () banked
  7537  002E58  8FB0               	bsf	(___fladd@b+3)& (0+255),7,b
  7538  002E5A                     l6152:
  7539                           
  7540                           ; BSR set to: 0
  7541  002E5A  C0AD  F0AD         	movff	___fladd@b,?___fladd
  7542  002E5E  C0AE  F0AE         	movff	___fladd@b+1,?___fladd+1
  7543  002E62  C0AF  F0AF         	movff	___fladd@b+2,?___fladd+2
  7544  002E66  C0B0  F0B0         	movff	___fladd@b+3,?___fladd+3
  7545  002E6A  0012               	return	
  7546  002E6C                     __end_of___fladd:
  7547                           	opt stack 0
  7548                           tblptru	equ	0xFF8
  7549                           tblptrh	equ	0xFF7
  7550                           tblptrl	equ	0xFF6
  7551                           tablat	equ	0xFF5
  7552                           prodh	equ	0xFF4
  7553                           prodl	equ	0xFF3
  7554                           postinc0	equ	0xFEE
  7555                           wreg	equ	0xFE8
  7556                           postdec1	equ	0xFE5
  7557                           fsr1l	equ	0xFE1
  7558                           postinc2	equ	0xFDE
  7559                           postdec2	equ	0xFDD
  7560                           fsr2h	equ	0xFDA
  7561                           fsr2l	equ	0xFD9
  7562                           status	equ	0xFD8
  7563                           
  7564 ;; *************** function ___flge *****************
  7565 ;; Defined at:
  7566 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  7567 ;; Parameters:    Size  Location     Type
  7568 ;;  ff1             4   81[BANK0 ] unsigned char 
  7569 ;;  ff2             4   85[BANK0 ] unsigned char 
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;		None
  7572 ;; Return value:  Size  Location     Type
  7573 ;;		None               void
  7574 ;; Registers used:
  7575 ;;		wreg, status,2, status,0
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7581 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7583 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7584 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7585 ;;Total ram usage:       12 bytes
  7586 ;; Hardware stack levels used:    1
  7587 ;; Hardware stack levels required when called:    4
  7588 ;; This function calls:
  7589 ;;		Nothing
  7590 ;; This function is called by:
  7591 ;;		_parallelo
  7592 ;;		_asin
  7593 ;;		_atan
  7594 ;;		_cos
  7595 ;;		_sin
  7596 ;;		_floor
  7597 ;; This function uses a non-reentrant model
  7598 ;;
  7599                           
  7600                           	psect	text21
  7601  005020                     __ptext21:
  7602                           	opt stack 0
  7603  005020                     ___flge:
  7604                           	opt stack 22
  7605                           
  7606                           ; BSR set to: 0
  7607                           ;incstack = 0
  7608  005020  0E00               	movlw	0
  7609  005022  0100               	movlb	0	; () banked
  7610  005024  15B1               	andwf	___flge@ff1& (0+255),w,b
  7611  005026  0100               	movlb	0	; () banked
  7612  005028  6FB9               	movwf	??___flge& (0+255),b
  7613  00502A  0E00               	movlw	0
  7614  00502C  0100               	movlb	0	; () banked
  7615  00502E  15B2               	andwf	(___flge@ff1+1)& (0+255),w,b
  7616  005030  0100               	movlb	0	; () banked
  7617  005032  6FBA               	movwf	(??___flge+1)& (0+255),b
  7618  005034  0E80               	movlw	128
  7619  005036  0100               	movlb	0	; () banked
  7620  005038  15B3               	andwf	(___flge@ff1+2)& (0+255),w,b
  7621  00503A  0100               	movlb	0	; () banked
  7622  00503C  6FBB               	movwf	(??___flge+2)& (0+255),b
  7623  00503E  0E7F               	movlw	127
  7624  005040  0100               	movlb	0	; () banked
  7625  005042  15B4               	andwf	(___flge@ff1+3)& (0+255),w,b
  7626  005044  0100               	movlb	0	; () banked
  7627  005046  6FBC               	movwf	(??___flge+3)& (0+255),b
  7628  005048  0100               	movlb	0	; () banked
  7629  00504A  51B9               	movf	??___flge& (0+255),w,b
  7630  00504C  0100               	movlb	0	; () banked
  7631  00504E  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  7632  005050  0100               	movlb	0	; () banked
  7633  005052  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  7634  005054  0100               	movlb	0	; () banked
  7635  005056  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  7636  005058  A4D8               	btfss	status,2,c
  7637  00505A  D009               	goto	l6290
  7638                           
  7639                           ; BSR set to: 0
  7640  00505C  0E00               	movlw	0
  7641  00505E  0100               	movlb	0	; () banked
  7642  005060  6FB1               	movwf	___flge@ff1& (0+255),b
  7643  005062  0E00               	movlw	0
  7644  005064  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  7645  005066  0E00               	movlw	0
  7646  005068  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  7647  00506A  0E00               	movlw	0
  7648  00506C  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  7649  00506E                     l6290:
  7650                           
  7651                           ; BSR set to: 0
  7652  00506E  0E00               	movlw	0
  7653  005070  0100               	movlb	0	; () banked
  7654  005072  15B5               	andwf	___flge@ff2& (0+255),w,b
  7655  005074  0100               	movlb	0	; () banked
  7656  005076  6FB9               	movwf	??___flge& (0+255),b
  7657  005078  0E00               	movlw	0
  7658  00507A  0100               	movlb	0	; () banked
  7659  00507C  15B6               	andwf	(___flge@ff2+1)& (0+255),w,b
  7660  00507E  0100               	movlb	0	; () banked
  7661  005080  6FBA               	movwf	(??___flge+1)& (0+255),b
  7662  005082  0E80               	movlw	128
  7663  005084  0100               	movlb	0	; () banked
  7664  005086  15B7               	andwf	(___flge@ff2+2)& (0+255),w,b
  7665  005088  0100               	movlb	0	; () banked
  7666  00508A  6FBB               	movwf	(??___flge+2)& (0+255),b
  7667  00508C  0E7F               	movlw	127
  7668  00508E  0100               	movlb	0	; () banked
  7669  005090  15B8               	andwf	(___flge@ff2+3)& (0+255),w,b
  7670  005092  0100               	movlb	0	; () banked
  7671  005094  6FBC               	movwf	(??___flge+3)& (0+255),b
  7672  005096  0100               	movlb	0	; () banked
  7673  005098  51B9               	movf	??___flge& (0+255),w,b
  7674  00509A  0100               	movlb	0	; () banked
  7675  00509C  11BA               	iorwf	(??___flge+1)& (0+255),w,b
  7676  00509E  0100               	movlb	0	; () banked
  7677  0050A0  11BB               	iorwf	(??___flge+2)& (0+255),w,b
  7678  0050A2  0100               	movlb	0	; () banked
  7679  0050A4  11BC               	iorwf	(??___flge+3)& (0+255),w,b
  7680  0050A6  A4D8               	btfss	status,2,c
  7681  0050A8  D009               	goto	l6294
  7682                           
  7683                           ; BSR set to: 0
  7684  0050AA  0E00               	movlw	0
  7685  0050AC  0100               	movlb	0	; () banked
  7686  0050AE  6FB5               	movwf	___flge@ff2& (0+255),b
  7687  0050B0  0E00               	movlw	0
  7688  0050B2  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  7689  0050B4  0E00               	movlw	0
  7690  0050B6  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  7691  0050B8  0E00               	movlw	0
  7692  0050BA  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  7693  0050BC                     l6294:
  7694                           
  7695                           ; BSR set to: 0
  7696  0050BC  0100               	movlb	0	; () banked
  7697  0050BE  AFB4               	btfss	(___flge@ff1+3)& (0+255),7,b
  7698  0050C0  D026               	goto	l6298
  7699                           
  7700                           ; BSR set to: 0
  7701  0050C2  C0B1  F0B9         	movff	___flge@ff1,??___flge
  7702  0050C6  C0B2  F0BA         	movff	___flge@ff1+1,??___flge+1
  7703  0050CA  C0B3  F0BB         	movff	___flge@ff1+2,??___flge+2
  7704  0050CE  C0B4  F0BC         	movff	___flge@ff1+3,??___flge+3
  7705  0050D2  0100               	movlb	0	; () banked
  7706  0050D4  1FB9               	comf	??___flge& (0+255),f,b
  7707  0050D6  1FBA               	comf	(??___flge+1)& (0+255),f,b
  7708  0050D8  1FBB               	comf	(??___flge+2)& (0+255),f,b
  7709  0050DA  1FBC               	comf	(??___flge+3)& (0+255),f,b
  7710  0050DC  2BB9               	incf	??___flge& (0+255),f,b
  7711  0050DE  0E00               	movlw	0
  7712  0050E0  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  7713  0050E2  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  7714  0050E4  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  7715  0050E6  0E00               	movlw	0
  7716  0050E8  0100               	movlb	0	; () banked
  7717  0050EA  25B9               	addwf	??___flge& (0+255),w,b
  7718  0050EC  0100               	movlb	0	; () banked
  7719  0050EE  6FB1               	movwf	___flge@ff1& (0+255),b
  7720  0050F0  0E00               	movlw	0
  7721  0050F2  0100               	movlb	0	; () banked
  7722  0050F4  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  7723  0050F6  0100               	movlb	0	; () banked
  7724  0050F8  6FB2               	movwf	(___flge@ff1+1)& (0+255),b
  7725  0050FA  0E00               	movlw	0
  7726  0050FC  0100               	movlb	0	; () banked
  7727  0050FE  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  7728  005100  0100               	movlb	0	; () banked
  7729  005102  6FB3               	movwf	(___flge@ff1+2)& (0+255),b
  7730  005104  0E80               	movlw	128
  7731  005106  0100               	movlb	0	; () banked
  7732  005108  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  7733  00510A  0100               	movlb	0	; () banked
  7734  00510C  6FB4               	movwf	(___flge@ff1+3)& (0+255),b
  7735  00510E                     l6298:
  7736                           
  7737                           ; BSR set to: 0
  7738  00510E  0100               	movlb	0	; () banked
  7739  005110  AFB8               	btfss	(___flge@ff2+3)& (0+255),7,b
  7740  005112  D026               	goto	l1055
  7741                           
  7742                           ; BSR set to: 0
  7743  005114  C0B5  F0B9         	movff	___flge@ff2,??___flge
  7744  005118  C0B6  F0BA         	movff	___flge@ff2+1,??___flge+1
  7745  00511C  C0B7  F0BB         	movff	___flge@ff2+2,??___flge+2
  7746  005120  C0B8  F0BC         	movff	___flge@ff2+3,??___flge+3
  7747  005124  0100               	movlb	0	; () banked
  7748  005126  1FB9               	comf	??___flge& (0+255),f,b
  7749  005128  1FBA               	comf	(??___flge+1)& (0+255),f,b
  7750  00512A  1FBB               	comf	(??___flge+2)& (0+255),f,b
  7751  00512C  1FBC               	comf	(??___flge+3)& (0+255),f,b
  7752  00512E  2BB9               	incf	??___flge& (0+255),f,b
  7753  005130  0E00               	movlw	0
  7754  005132  23BA               	addwfc	(??___flge+1)& (0+255),f,b
  7755  005134  23BB               	addwfc	(??___flge+2)& (0+255),f,b
  7756  005136  23BC               	addwfc	(??___flge+3)& (0+255),f,b
  7757  005138  0E00               	movlw	0
  7758  00513A  0100               	movlb	0	; () banked
  7759  00513C  25B9               	addwf	??___flge& (0+255),w,b
  7760  00513E  0100               	movlb	0	; () banked
  7761  005140  6FB5               	movwf	___flge@ff2& (0+255),b
  7762  005142  0E00               	movlw	0
  7763  005144  0100               	movlb	0	; () banked
  7764  005146  21BA               	addwfc	(??___flge+1)& (0+255),w,b
  7765  005148  0100               	movlb	0	; () banked
  7766  00514A  6FB6               	movwf	(___flge@ff2+1)& (0+255),b
  7767  00514C  0E00               	movlw	0
  7768  00514E  0100               	movlb	0	; () banked
  7769  005150  21BB               	addwfc	(??___flge+2)& (0+255),w,b
  7770  005152  0100               	movlb	0	; () banked
  7771  005154  6FB7               	movwf	(___flge@ff2+2)& (0+255),b
  7772  005156  0E80               	movlw	128
  7773  005158  0100               	movlb	0	; () banked
  7774  00515A  21BC               	addwfc	(??___flge+3)& (0+255),w,b
  7775  00515C  0100               	movlb	0	; () banked
  7776  00515E  6FB8               	movwf	(___flge@ff2+3)& (0+255),b
  7777  005160                     l1055:
  7778                           
  7779                           ; BSR set to: 0
  7780  005160  0E00               	movlw	0
  7781  005162  0100               	movlb	0	; () banked
  7782  005164  1BB1               	xorwf	___flge@ff1& (0+255),f,b
  7783  005166  0E00               	movlw	0
  7784  005168  1BB2               	xorwf	(___flge@ff1+1)& (0+255),f,b
  7785  00516A  0E00               	movlw	0
  7786  00516C  1BB3               	xorwf	(___flge@ff1+2)& (0+255),f,b
  7787  00516E  0E80               	movlw	128
  7788  005170  1BB4               	xorwf	(___flge@ff1+3)& (0+255),f,b
  7789  005172  0E00               	movlw	0
  7790  005174  0100               	movlb	0	; () banked
  7791  005176  1BB5               	xorwf	___flge@ff2& (0+255),f,b
  7792  005178  0E00               	movlw	0
  7793  00517A  1BB6               	xorwf	(___flge@ff2+1)& (0+255),f,b
  7794  00517C  0E00               	movlw	0
  7795  00517E  1BB7               	xorwf	(___flge@ff2+2)& (0+255),f,b
  7796  005180  0E80               	movlw	128
  7797  005182  1BB8               	xorwf	(___flge@ff2+3)& (0+255),f,b
  7798  005184  0100               	movlb	0	; () banked
  7799  005186  51B5               	movf	___flge@ff2& (0+255),w,b
  7800  005188  0100               	movlb	0	; () banked
  7801  00518A  5DB1               	subwf	___flge@ff1& (0+255),w,b
  7802  00518C  0100               	movlb	0	; () banked
  7803  00518E  51B6               	movf	(___flge@ff2+1)& (0+255),w,b
  7804  005190  0100               	movlb	0	; () banked
  7805  005192  59B2               	subwfb	(___flge@ff1+1)& (0+255),w,b
  7806  005194  0100               	movlb	0	; () banked
  7807  005196  51B7               	movf	(___flge@ff2+2)& (0+255),w,b
  7808  005198  0100               	movlb	0	; () banked
  7809  00519A  59B3               	subwfb	(___flge@ff1+2)& (0+255),w,b
  7810  00519C  0100               	movlb	0	; () banked
  7811  00519E  51B8               	movf	(___flge@ff2+3)& (0+255),w,b
  7812  0051A0  0100               	movlb	0	; () banked
  7813  0051A2  59B4               	subwfb	(___flge@ff1+3)& (0+255),w,b
  7814  0051A4  B0D8               	btfsc	status,0,c
  7815  0051A6  D002               	goto	l6304
  7816                           
  7817                           ; BSR set to: 0
  7818  0051A8  90D8               	bcf	status,0,c
  7819  0051AA  0012               	return	
  7820  0051AC                     l6304:
  7821                           
  7822                           ; BSR set to: 0
  7823  0051AC  80D8               	bsf	status,0,c
  7824                           
  7825                           ; BSR set to: 0
  7826  0051AE  0012               	return	
  7827  0051B0                     __end_of___flge:
  7828                           	opt stack 0
  7829                           tblptru	equ	0xFF8
  7830                           tblptrh	equ	0xFF7
  7831                           tblptrl	equ	0xFF6
  7832                           tablat	equ	0xFF5
  7833                           prodh	equ	0xFF4
  7834                           prodl	equ	0xFF3
  7835                           postinc0	equ	0xFEE
  7836                           wreg	equ	0xFE8
  7837                           postdec1	equ	0xFE5
  7838                           fsr1l	equ	0xFE1
  7839                           postinc2	equ	0xFDE
  7840                           postdec2	equ	0xFDD
  7841                           fsr2h	equ	0xFDA
  7842                           fsr2l	equ	0xFD9
  7843                           status	equ	0xFD8
  7844                           
  7845 ;; *************** function ___fldiv *****************
  7846 ;; Defined at:
  7847 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
  7848 ;; Parameters:    Size  Location     Type
  7849 ;;  b               4   23[BANK0 ] unsigned char 
  7850 ;;  a               4   27[BANK0 ] unsigned char 
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;  grs             4   42[BANK0 ] unsigned long 
  7853 ;;  rem             4   36[BANK0 ] unsigned long 
  7854 ;;  new_exp         2   40[BANK0 ] int 
  7855 ;;  aexp            1   47[BANK0 ] unsigned char 
  7856 ;;  bexp            1   46[BANK0 ] unsigned char 
  7857 ;;  sign            1   35[BANK0 ] unsigned char 
  7858 ;; Return value:  Size  Location     Type
  7859 ;;                  4   23[BANK0 ] unsigned char 
  7860 ;; Registers used:
  7861 ;;		wreg, status,2, status,0
  7862 ;; Tracked objects:
  7863 ;;		On entry : 0/0
  7864 ;;		On exit  : 0/0
  7865 ;;		Unchanged: 0/0
  7866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7867 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7868 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7869 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7870 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7871 ;;Total ram usage:       25 bytes
  7872 ;; Hardware stack levels used:    1
  7873 ;; Hardware stack levels required when called:    4
  7874 ;; This function calls:
  7875 ;;		Nothing
  7876 ;; This function is called by:
  7877 ;;		_parallelo
  7878 ;;		_matematica
  7879 ;;		_asin
  7880 ;;		_atan
  7881 ;;		_sin
  7882 ;; This function uses a non-reentrant model
  7883 ;;
  7884                           
  7885                           	psect	text22
  7886  0036DC                     __ptext22:
  7887                           	opt stack 0
  7888  0036DC                     ___fldiv:
  7889                           	opt stack 22
  7890                           
  7891                           ; BSR set to: 0
  7892                           ;incstack = 0
  7893  0036DC  0100               	movlb	0	; () banked
  7894  0036DE  517A               	movf	(___fldiv@b+3)& (0+255),w,b
  7895  0036E0  0B80               	andlw	128
  7896  0036E2  0100               	movlb	0	; () banked
  7897  0036E4  6F83               	movwf	___fldiv@sign& (0+255),b
  7898  0036E6  0100               	movlb	0	; () banked
  7899  0036E8  517A               	movf	(___fldiv@b+3)& (0+255),w,b
  7900  0036EA  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
  7901  0036EC  0100               	movlb	0	; () banked
  7902  0036EE  6F8E               	movwf	___fldiv@bexp& (0+255),b
  7903                           
  7904                           ; BSR set to: 0
  7905  0036F0  0100               	movlb	0	; () banked
  7906  0036F2  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
  7907  0036F4  D002               	goto	l6424
  7908                           
  7909                           ; BSR set to: 0
  7910  0036F6  0100               	movlb	0	; () banked
  7911  0036F8  818E               	bsf	___fldiv@bexp& (0+255),0,b
  7912  0036FA                     l6424:
  7913                           
  7914                           ; BSR set to: 0
  7915  0036FA  0100               	movlb	0	; () banked
  7916  0036FC  518E               	movf	___fldiv@bexp& (0+255),w,b
  7917  0036FE  0100               	movlb	0	; () banked
  7918  003700  B4D8               	btfsc	status,2,c
  7919  003702  D012               	goto	l6434
  7920                           
  7921                           ; BSR set to: 0
  7922  003704  0100               	movlb	0	; () banked
  7923  003706  298E               	incf	___fldiv@bexp& (0+255),w,b
  7924  003708  A4D8               	btfss	status,2,c
  7925  00370A  D009               	goto	l6430
  7926                           
  7927                           ; BSR set to: 0
  7928  00370C  0E00               	movlw	0
  7929  00370E  0100               	movlb	0	; () banked
  7930  003710  6F77               	movwf	___fldiv@b& (0+255),b
  7931  003712  0E00               	movlw	0
  7932  003714  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7933  003716  0E00               	movlw	0
  7934  003718  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7935  00371A  0E00               	movlw	0
  7936  00371C  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7937  00371E                     l6430:
  7938                           
  7939                           ; BSR set to: 0
  7940  00371E  0100               	movlb	0	; () banked
  7941  003720  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
  7942                           
  7943                           ; BSR set to: 0
  7944  003722  0E00               	movlw	0
  7945  003724  0100               	movlb	0	; () banked
  7946  003726  D008               	goto	L6
  7947  003728                     l6434:
  7948                           
  7949                           ; BSR set to: 0
  7950  003728  0E00               	movlw	0
  7951  00372A  0100               	movlb	0	; () banked
  7952  00372C  6F77               	movwf	___fldiv@b& (0+255),b
  7953  00372E  0E00               	movlw	0
  7954  003730  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7955  003732  0E00               	movlw	0
  7956  003734  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7957  003736  0E00               	movlw	0
  7958  003738                     L6:
  7959  003738  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7960                           
  7961                           ; BSR set to: 0
  7962                           
  7963                           ; BSR set to: 0
  7964  00373A  0100               	movlb	0	; () banked
  7965  00373C  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  7966  00373E  0B80               	andlw	128
  7967  003740  0100               	movlb	0	; () banked
  7968  003742  1B83               	xorwf	___fldiv@sign& (0+255),f,b
  7969                           
  7970                           ; BSR set to: 0
  7971  003744  0100               	movlb	0	; () banked
  7972  003746  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  7973  003748  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
  7974  00374A  0100               	movlb	0	; () banked
  7975  00374C  6F8F               	movwf	___fldiv@aexp& (0+255),b
  7976                           
  7977                           ; BSR set to: 0
  7978  00374E  0100               	movlb	0	; () banked
  7979  003750  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
  7980  003752  D002               	goto	l6444
  7981                           
  7982                           ; BSR set to: 0
  7983  003754  0100               	movlb	0	; () banked
  7984  003756  818F               	bsf	___fldiv@aexp& (0+255),0,b
  7985  003758                     l6444:
  7986                           
  7987                           ; BSR set to: 0
  7988  003758  0100               	movlb	0	; () banked
  7989  00375A  518F               	movf	___fldiv@aexp& (0+255),w,b
  7990  00375C  0100               	movlb	0	; () banked
  7991  00375E  B4D8               	btfsc	status,2,c
  7992  003760  D012               	goto	l6454
  7993                           
  7994                           ; BSR set to: 0
  7995  003762  0100               	movlb	0	; () banked
  7996  003764  298F               	incf	___fldiv@aexp& (0+255),w,b
  7997  003766  A4D8               	btfss	status,2,c
  7998  003768  D009               	goto	l6450
  7999                           
  8000                           ; BSR set to: 0
  8001  00376A  0E00               	movlw	0
  8002  00376C  0100               	movlb	0	; () banked
  8003  00376E  6F7B               	movwf	___fldiv@a& (0+255),b
  8004  003770  0E00               	movlw	0
  8005  003772  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  8006  003774  0E00               	movlw	0
  8007  003776  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  8008  003778  0E00               	movlw	0
  8009  00377A  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  8010  00377C                     l6450:
  8011                           
  8012                           ; BSR set to: 0
  8013  00377C  0100               	movlb	0	; () banked
  8014  00377E  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
  8015                           
  8016                           ; BSR set to: 0
  8017  003780  0E00               	movlw	0
  8018  003782  0100               	movlb	0	; () banked
  8019  003784  D008               	goto	L7
  8020  003786                     l6454:
  8021                           
  8022                           ; BSR set to: 0
  8023  003786  0E00               	movlw	0
  8024  003788  0100               	movlb	0	; () banked
  8025  00378A  6F7B               	movwf	___fldiv@a& (0+255),b
  8026  00378C  0E00               	movlw	0
  8027  00378E  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  8028  003790  0E00               	movlw	0
  8029  003792  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  8030  003794  0E00               	movlw	0
  8031  003796                     L7:
  8032  003796  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  8033                           
  8034                           ; BSR set to: 0
  8035                           
  8036                           ; BSR set to: 0
  8037  003798  0100               	movlb	0	; () banked
  8038  00379A  517B               	movf	___fldiv@a& (0+255),w,b
  8039  00379C  0100               	movlb	0	; () banked
  8040  00379E  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
  8041  0037A0  0100               	movlb	0	; () banked
  8042  0037A2  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
  8043  0037A4  0100               	movlb	0	; () banked
  8044  0037A6  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
  8045  0037A8  A4D8               	btfss	status,2,c
  8046  0037AA  D017               	goto	l6466
  8047                           
  8048                           ; BSR set to: 0
  8049  0037AC  0E00               	movlw	0
  8050  0037AE  0100               	movlb	0	; () banked
  8051  0037B0  6F77               	movwf	___fldiv@b& (0+255),b
  8052  0037B2  0E00               	movlw	0
  8053  0037B4  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8054  0037B6  0E00               	movlw	0
  8055  0037B8  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8056  0037BA  0E00               	movlw	0
  8057  0037BC  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8058                           
  8059                           ; BSR set to: 0
  8060  0037BE  0100               	movlb	0	; () banked
  8061  0037C0  0E80               	movlw	128
  8062  0037C2  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
  8063  0037C4  0E7F               	movlw	127
  8064  0037C6  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
  8065                           
  8066                           ; BSR set to: 0
  8067  0037C8  C077  F077         	movff	___fldiv@b,?___fldiv
  8068  0037CC  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  8069  0037D0  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  8070  0037D4  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  8071                           
  8072                           ; BSR set to: 0
  8073  0037D8  0012               	return	
  8074  0037DA                     l6466:
  8075                           
  8076                           ; BSR set to: 0
  8077  0037DA  0100               	movlb	0	; () banked
  8078  0037DC  518E               	movf	___fldiv@bexp& (0+255),w,b
  8079  0037DE  0100               	movlb	0	; () banked
  8080  0037E0  A4D8               	btfss	status,2,c
  8081  0037E2  D012               	goto	l6474
  8082                           
  8083                           ; BSR set to: 0
  8084  0037E4  0E00               	movlw	0
  8085  0037E6  0100               	movlb	0	; () banked
  8086  0037E8  6F77               	movwf	___fldiv@b& (0+255),b
  8087  0037EA  0E00               	movlw	0
  8088  0037EC  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8089  0037EE  0E00               	movlw	0
  8090  0037F0  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8091  0037F2  0E00               	movlw	0
  8092  0037F4  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8093                           
  8094                           ; BSR set to: 0
  8095  0037F6  C077  F077         	movff	___fldiv@b,?___fldiv
  8096  0037FA  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  8097  0037FE  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  8098  003802  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  8099                           
  8100                           ; BSR set to: 0
  8101  003806  0012               	return	
  8102  003808                     l6474:
  8103                           
  8104                           ; BSR set to: 0
  8105  003808  0100               	movlb	0	; () banked
  8106  00380A  518F               	movf	___fldiv@aexp& (0+255),w,b
  8107  00380C  0100               	movlb	0	; () banked
  8108  00380E  6F7F               	movwf	??___fldiv& (0+255),b
  8109  003810  6B80               	clrf	(??___fldiv+1)& (0+255),b
  8110  003812  0100               	movlb	0	; () banked
  8111  003814  1F7F               	comf	??___fldiv& (0+255),f,b
  8112  003816  1F80               	comf	(??___fldiv+1)& (0+255),f,b
  8113  003818  4B7F               	infsnz	??___fldiv& (0+255),f,b
  8114  00381A  2B80               	incf	(??___fldiv+1)& (0+255),f,b
  8115  00381C  0100               	movlb	0	; () banked
  8116  00381E  518E               	movf	___fldiv@bexp& (0+255),w,b
  8117  003820  0100               	movlb	0	; () banked
  8118  003822  6F81               	movwf	(??___fldiv+2)& (0+255),b
  8119  003824  6B82               	clrf	(??___fldiv+3)& (0+255),b
  8120  003826  0100               	movlb	0	; () banked
  8121  003828  517F               	movf	??___fldiv& (0+255),w,b
  8122  00382A  0100               	movlb	0	; () banked
  8123  00382C  2781               	addwf	(??___fldiv+2)& (0+255),f,b
  8124  00382E  0100               	movlb	0	; () banked
  8125  003830  5180               	movf	(??___fldiv+1)& (0+255),w,b
  8126  003832  0100               	movlb	0	; () banked
  8127  003834  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
  8128  003836  0E7F               	movlw	127
  8129  003838  0100               	movlb	0	; () banked
  8130  00383A  2581               	addwf	(??___fldiv+2)& (0+255),w,b
  8131  00383C  0100               	movlb	0	; () banked
  8132  00383E  6F88               	movwf	___fldiv@new_exp& (0+255),b
  8133  003840  0E00               	movlw	0
  8134  003842  0100               	movlb	0	; () banked
  8135  003844  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
  8136  003846  0100               	movlb	0	; () banked
  8137  003848  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8138                           
  8139                           ; BSR set to: 0
  8140  00384A  C077  F084         	movff	___fldiv@b,___fldiv@rem
  8141  00384E  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
  8142  003852  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
  8143  003856  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
  8144                           
  8145                           ; BSR set to: 0
  8146  00385A  0E00               	movlw	0
  8147  00385C  0100               	movlb	0	; () banked
  8148  00385E  6F77               	movwf	___fldiv@b& (0+255),b
  8149  003860  0E00               	movlw	0
  8150  003862  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8151  003864  0E00               	movlw	0
  8152  003866  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8153  003868  0E00               	movlw	0
  8154  00386A  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8155                           
  8156                           ; BSR set to: 0
  8157  00386C  0E00               	movlw	0
  8158  00386E  0100               	movlb	0	; () banked
  8159  003870  6F8A               	movwf	___fldiv@grs& (0+255),b
  8160  003872  0E00               	movlw	0
  8161  003874  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
  8162  003876  0E00               	movlw	0
  8163  003878  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
  8164  00387A  0E00               	movlw	0
  8165  00387C  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
  8166                           
  8167                           ; BSR set to: 0
  8168  00387E  0E00               	movlw	0
  8169  003880  0100               	movlb	0	; () banked
  8170  003882  6F8F               	movwf	___fldiv@aexp& (0+255),b
  8171  003884  D042               	goto	l1363
  8172  003886                     l6484:
  8173                           
  8174                           ; BSR set to: 0
  8175  003886  0100               	movlb	0	; () banked
  8176  003888  518F               	movf	___fldiv@aexp& (0+255),w,b
  8177  00388A  0100               	movlb	0	; () banked
  8178  00388C  B4D8               	btfsc	status,2,c
  8179  00388E  D017               	goto	l6492
  8180                           
  8181                           ; BSR set to: 0
  8182  003890  0100               	movlb	0	; () banked
  8183  003892  90D8               	bcf	status,0,c
  8184  003894  3784               	rlcf	___fldiv@rem& (0+255),f,b
  8185  003896  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  8186  003898  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  8187  00389A  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  8188  00389C  0100               	movlb	0	; () banked
  8189  00389E  90D8               	bcf	status,0,c
  8190  0038A0  3777               	rlcf	___fldiv@b& (0+255),f,b
  8191  0038A2  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
  8192  0038A4  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
  8193  0038A6  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
  8194                           
  8195                           ; BSR set to: 0
  8196  0038A8  0100               	movlb	0	; () banked
  8197  0038AA  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8198  0038AC  D002               	goto	l1366
  8199                           
  8200                           ; BSR set to: 0
  8201  0038AE  0100               	movlb	0	; () banked
  8202  0038B0  8177               	bsf	___fldiv@b& (0+255),0,b
  8203  0038B2                     l1366:
  8204                           
  8205                           ; BSR set to: 0
  8206  0038B2  0100               	movlb	0	; () banked
  8207  0038B4  90D8               	bcf	status,0,c
  8208  0038B6  378A               	rlcf	___fldiv@grs& (0+255),f,b
  8209  0038B8  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8210  0038BA  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8211  0038BC  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8212  0038BE                     l6492:
  8213                           
  8214                           ; BSR set to: 0
  8215  0038BE  0100               	movlb	0	; () banked
  8216  0038C0  517B               	movf	___fldiv@a& (0+255),w,b
  8217  0038C2  0100               	movlb	0	; () banked
  8218  0038C4  5D84               	subwf	___fldiv@rem& (0+255),w,b
  8219  0038C6  0100               	movlb	0	; () banked
  8220  0038C8  517C               	movf	(___fldiv@a+1)& (0+255),w,b
  8221  0038CA  0100               	movlb	0	; () banked
  8222  0038CC  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  8223  0038CE  0100               	movlb	0	; () banked
  8224  0038D0  517D               	movf	(___fldiv@a+2)& (0+255),w,b
  8225  0038D2  0100               	movlb	0	; () banked
  8226  0038D4  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  8227  0038D6  0100               	movlb	0	; () banked
  8228  0038D8  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  8229  0038DA  0100               	movlb	0	; () banked
  8230  0038DC  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  8231  0038DE  A0D8               	btfss	status,0,c
  8232  0038E0  D012               	goto	l6498
  8233                           
  8234                           ; BSR set to: 0
  8235  0038E2  0100               	movlb	0	; () banked
  8236  0038E4  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
  8237                           
  8238                           ; BSR set to: 0
  8239  0038E6  0100               	movlb	0	; () banked
  8240  0038E8  517B               	movf	___fldiv@a& (0+255),w,b
  8241  0038EA  0100               	movlb	0	; () banked
  8242  0038EC  5F84               	subwf	___fldiv@rem& (0+255),f,b
  8243  0038EE  0100               	movlb	0	; () banked
  8244  0038F0  517C               	movf	(___fldiv@a+1)& (0+255),w,b
  8245  0038F2  0100               	movlb	0	; () banked
  8246  0038F4  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  8247  0038F6  0100               	movlb	0	; () banked
  8248  0038F8  517D               	movf	(___fldiv@a+2)& (0+255),w,b
  8249  0038FA  0100               	movlb	0	; () banked
  8250  0038FC  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  8251  0038FE  0100               	movlb	0	; () banked
  8252  003900  517E               	movf	(___fldiv@a+3)& (0+255),w,b
  8253  003902  0100               	movlb	0	; () banked
  8254  003904  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  8255  003906                     l6498:
  8256                           
  8257                           ; BSR set to: 0
  8258  003906  0100               	movlb	0	; () banked
  8259  003908  2B8F               	incf	___fldiv@aexp& (0+255),f,b
  8260  00390A                     l1363:
  8261                           
  8262                           ; BSR set to: 0
  8263  00390A  0E19               	movlw	25
  8264  00390C  0100               	movlb	0	; () banked
  8265  00390E  658F               	cpfsgt	___fldiv@aexp& (0+255),b
  8266  003910  D7BA               	goto	l6484
  8267                           
  8268                           ; BSR set to: 0
  8269                           
  8270                           ; BSR set to: 0
  8271  003912  0100               	movlb	0	; () banked
  8272  003914  5184               	movf	___fldiv@rem& (0+255),w,b
  8273  003916  0100               	movlb	0	; () banked
  8274  003918  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  8275  00391A  0100               	movlb	0	; () banked
  8276  00391C  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  8277  00391E  0100               	movlb	0	; () banked
  8278  003920  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  8279  003922  B4D8               	btfsc	status,2,c
  8280  003924  D018               	goto	l6510
  8281                           
  8282                           ; BSR set to: 0
  8283  003926  0100               	movlb	0	; () banked
  8284  003928  818A               	bsf	___fldiv@grs& (0+255),0,b
  8285                           
  8286                           ; BSR set to: 0
  8287  00392A  D015               	goto	l6510
  8288  00392C                     l6504:
  8289                           
  8290                           ; BSR set to: 0
  8291  00392C  0100               	movlb	0	; () banked
  8292  00392E  90D8               	bcf	status,0,c
  8293  003930  3777               	rlcf	___fldiv@b& (0+255),f,b
  8294  003932  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
  8295  003934  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
  8296  003936  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
  8297                           
  8298                           ; BSR set to: 0
  8299  003938  0100               	movlb	0	; () banked
  8300  00393A  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8301  00393C  D002               	goto	l1372
  8302                           
  8303                           ; BSR set to: 0
  8304  00393E  0100               	movlb	0	; () banked
  8305  003940  8177               	bsf	___fldiv@b& (0+255),0,b
  8306  003942                     l1372:
  8307                           
  8308                           ; BSR set to: 0
  8309  003942  0100               	movlb	0	; () banked
  8310  003944  90D8               	bcf	status,0,c
  8311  003946  378A               	rlcf	___fldiv@grs& (0+255),f,b
  8312  003948  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  8313  00394A  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  8314  00394C  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  8315  00394E  0100               	movlb	0	; () banked
  8316  003950  0788               	decf	___fldiv@new_exp& (0+255),f,b
  8317  003952  A0D8               	btfss	status,0,c
  8318  003954  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  8319  003956                     l6510:
  8320                           
  8321                           ; BSR set to: 0
  8322  003956  0100               	movlb	0	; () banked
  8323  003958  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
  8324  00395A  D7E8               	goto	l6504
  8325                           
  8326                           ; BSR set to: 0
  8327                           
  8328                           ; BSR set to: 0
  8329  00395C  0E00               	movlw	0
  8330  00395E  0100               	movlb	0	; () banked
  8331  003960  6F8F               	movwf	___fldiv@aexp& (0+255),b
  8332                           
  8333                           ; BSR set to: 0
  8334  003962  0100               	movlb	0	; () banked
  8335  003964  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
  8336  003966  D024               	goto	l1374
  8337                           
  8338                           ; BSR set to: 0
  8339  003968  0EFF               	movlw	255
  8340  00396A  0100               	movlb	0	; () banked
  8341  00396C  158A               	andwf	___fldiv@grs& (0+255),w,b
  8342  00396E  0100               	movlb	0	; () banked
  8343  003970  6F7F               	movwf	??___fldiv& (0+255),b
  8344  003972  0EFF               	movlw	255
  8345  003974  0100               	movlb	0	; () banked
  8346  003976  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
  8347  003978  0100               	movlb	0	; () banked
  8348  00397A  6F80               	movwf	(??___fldiv+1)& (0+255),b
  8349  00397C  0EFF               	movlw	255
  8350  00397E  0100               	movlb	0	; () banked
  8351  003980  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
  8352  003982  0100               	movlb	0	; () banked
  8353  003984  6F81               	movwf	(??___fldiv+2)& (0+255),b
  8354  003986  0E7F               	movlw	127
  8355  003988  0100               	movlb	0	; () banked
  8356  00398A  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
  8357  00398C  0100               	movlb	0	; () banked
  8358  00398E  6F82               	movwf	(??___fldiv+3)& (0+255),b
  8359  003990  0100               	movlb	0	; () banked
  8360  003992  517F               	movf	??___fldiv& (0+255),w,b
  8361  003994  0100               	movlb	0	; () banked
  8362  003996  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
  8363  003998  0100               	movlb	0	; () banked
  8364  00399A  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
  8365  00399C  0100               	movlb	0	; () banked
  8366  00399E  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
  8367  0039A0  A4D8               	btfss	status,2,c
  8368  0039A2  D003               	goto	l6520
  8369                           
  8370                           ; BSR set to: 0
  8371                           
  8372                           ; BSR set to: 0
  8373  0039A4  0100               	movlb	0	; () banked
  8374  0039A6  A177               	btfss	___fldiv@b& (0+255),0,b
  8375  0039A8  D003               	goto	l1374
  8376  0039AA                     l6520:
  8377                           
  8378                           ; BSR set to: 0
  8379  0039AA  0E01               	movlw	1
  8380  0039AC  0100               	movlb	0	; () banked
  8381  0039AE  6F8F               	movwf	___fldiv@aexp& (0+255),b
  8382  0039B0                     l1374:
  8383                           
  8384                           ; BSR set to: 0
  8385  0039B0  0100               	movlb	0	; () banked
  8386  0039B2  518F               	movf	___fldiv@aexp& (0+255),w,b
  8387  0039B4  0100               	movlb	0	; () banked
  8388  0039B6  B4D8               	btfsc	status,2,c
  8389  0039B8  D023               	goto	l6530
  8390                           
  8391                           ; BSR set to: 0
  8392  0039BA  0E01               	movlw	1
  8393  0039BC  0100               	movlb	0	; () banked
  8394  0039BE  2777               	addwf	___fldiv@b& (0+255),f,b
  8395  0039C0  0E00               	movlw	0
  8396  0039C2  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
  8397  0039C4  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
  8398  0039C6  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
  8399                           
  8400                           ; BSR set to: 0
  8401  0039C8  0100               	movlb	0	; () banked
  8402  0039CA  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
  8403  0039CC  D019               	goto	l6530
  8404                           
  8405                           ; BSR set to: 0
  8406  0039CE  C077  F07F         	movff	___fldiv@b,??___fldiv
  8407  0039D2  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
  8408  0039D6  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
  8409  0039DA  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
  8410  0039DE  0100               	movlb	0	; () banked
  8411  0039E0  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
  8412  0039E2  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
  8413  0039E4  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
  8414  0039E6  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
  8415  0039E8  337F               	rrcf	??___fldiv& (0+255),f,b
  8416  0039EA  C07F  F077         	movff	??___fldiv,___fldiv@b
  8417  0039EE  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
  8418  0039F2  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
  8419  0039F6  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
  8420                           
  8421                           ; BSR set to: 0
  8422  0039FA  0100               	movlb	0	; () banked
  8423  0039FC  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
  8424  0039FE  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  8425  003A00                     l6530:
  8426                           
  8427                           ; BSR set to: 0
  8428  003A00  0100               	movlb	0	; () banked
  8429  003A02  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8430  003A04  D014               	goto	l6534
  8431  003A06  0100               	movlb	0	; () banked
  8432  003A08  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8433  003A0A  E104               	bnz	u8300
  8434  003A0C  0100               	movlb	0	; () banked
  8435  003A0E  2988               	incf	___fldiv@new_exp& (0+255),w,b
  8436  003A10  A0D8               	btfss	status,0,c
  8437  003A12  D00D               	goto	l6534
  8438  003A14                     u8300:
  8439                           
  8440                           ; BSR set to: 0
  8441  003A14  0E00               	movlw	0
  8442  003A16  0100               	movlb	0	; () banked
  8443  003A18  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8444  003A1A  6988               	setf	___fldiv@new_exp& (0+255),b
  8445  003A1C  0E00               	movlw	0
  8446  003A1E  0100               	movlb	0	; () banked
  8447  003A20  6F77               	movwf	___fldiv@b& (0+255),b
  8448  003A22  0E00               	movlw	0
  8449  003A24  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8450  003A26  0E00               	movlw	0
  8451  003A28  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8452  003A2A  0E00               	movlw	0
  8453  003A2C  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8454  003A2E                     l6534:
  8455                           
  8456                           ; BSR set to: 0
  8457  003A2E  0100               	movlb	0	; () banked
  8458  003A30  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  8459  003A32  D007               	goto	l6536
  8460  003A34  0100               	movlb	0	; () banked
  8461  003A36  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  8462  003A38  E115               	bnz	l6538
  8463  003A3A  0100               	movlb	0	; () banked
  8464  003A3C  0588               	decf	___fldiv@new_exp& (0+255),w,b
  8465  003A3E  B0D8               	btfsc	status,0,c
  8466  003A40  D011               	goto	l6538
  8467  003A42                     l6536:
  8468                           
  8469                           ; BSR set to: 0
  8470  003A42  0E00               	movlw	0
  8471  003A44  0100               	movlb	0	; () banked
  8472  003A46  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
  8473  003A48  0E00               	movlw	0
  8474  003A4A  6F88               	movwf	___fldiv@new_exp& (0+255),b
  8475  003A4C  0E00               	movlw	0
  8476  003A4E  0100               	movlb	0	; () banked
  8477  003A50  6F77               	movwf	___fldiv@b& (0+255),b
  8478  003A52  0E00               	movlw	0
  8479  003A54  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  8480  003A56  0E00               	movlw	0
  8481  003A58  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  8482  003A5A  0E00               	movlw	0
  8483  003A5C  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8484  003A5E  0E00               	movlw	0
  8485  003A60  0100               	movlb	0	; () banked
  8486  003A62  6F83               	movwf	___fldiv@sign& (0+255),b
  8487  003A64                     l6538:
  8488                           
  8489                           ; BSR set to: 0
  8490  003A64  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
  8491                           
  8492                           ; BSR set to: 0
  8493  003A68  0100               	movlb	0	; () banked
  8494  003A6A  A18E               	btfss	___fldiv@bexp& (0+255),0,b
  8495  003A6C  D003               	goto	l6544
  8496                           
  8497                           ; BSR set to: 0
  8498  003A6E  0100               	movlb	0	; () banked
  8499  003A70  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
  8500  003A72  D002               	goto	l6546
  8501  003A74                     l6544:
  8502                           
  8503                           ; BSR set to: 0
  8504  003A74  0100               	movlb	0	; () banked
  8505  003A76  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
  8506  003A78                     l6546:
  8507                           
  8508                           ; BSR set to: 0
  8509  003A78  0100               	movlb	0	; () banked
  8510  003A7A  90D8               	bcf	status,0,c
  8511  003A7C  318E               	rrcf	___fldiv@bexp& (0+255),w,b
  8512  003A7E  0100               	movlb	0	; () banked
  8513  003A80  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  8514                           
  8515                           ; BSR set to: 0
  8516  003A82  0100               	movlb	0	; () banked
  8517  003A84  5183               	movf	___fldiv@sign& (0+255),w,b
  8518  003A86  0100               	movlb	0	; () banked
  8519  003A88  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
  8520                           
  8521                           ; BSR set to: 0
  8522  003A8A  C077  F077         	movff	___fldiv@b,?___fldiv
  8523  003A8E  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
  8524  003A92  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
  8525  003A96  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
  8526  003A9A  0012               	return	
  8527  003A9C                     __end_of___fldiv:
  8528                           	opt stack 0
  8529                           tblptru	equ	0xFF8
  8530                           tblptrh	equ	0xFF7
  8531                           tblptrl	equ	0xFF6
  8532                           tablat	equ	0xFF5
  8533                           prodh	equ	0xFF4
  8534                           prodl	equ	0xFF3
  8535                           postinc0	equ	0xFEE
  8536                           wreg	equ	0xFE8
  8537                           postdec1	equ	0xFE5
  8538                           fsr1l	equ	0xFE1
  8539                           postinc2	equ	0xFDE
  8540                           postdec2	equ	0xFDD
  8541                           fsr2h	equ	0xFDA
  8542                           fsr2l	equ	0xFD9
  8543                           status	equ	0xFD8
  8544                           
  8545 ;; *************** function _delay_s *****************
  8546 ;; Defined at:
  8547 ;;		line 102 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  8548 ;; Parameters:    Size  Location     Type
  8549 ;;  value_s         1    wreg     unsigned char 
  8550 ;; Auto vars:     Size  Location     Type
  8551 ;;  value_s         1   31[BANK0 ] unsigned char 
  8552 ;;  repeat_loop     1   32[BANK0 ] unsigned char 
  8553 ;; Return value:  Size  Location     Type
  8554 ;;		None               void
  8555 ;; Registers used:
  8556 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8557 ;; Tracked objects:
  8558 ;;		On entry : 0/0
  8559 ;;		On exit  : 0/0
  8560 ;;		Unchanged: 0/0
  8561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8563 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8565 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8566 ;;Total ram usage:        2 bytes
  8567 ;; Hardware stack levels used:    1
  8568 ;; Hardware stack levels required when called:    6
  8569 ;; This function calls:
  8570 ;;		_delay_ms
  8571 ;; This function is called by:
  8572 ;;		_park_routine
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576                           	psect	text23
  8577  005BDA                     __ptext23:
  8578                           	opt stack 0
  8579  005BDA                     _delay_s:
  8580                           	opt stack 23
  8581                           
  8582                           ; BSR set to: 0
  8583                           ;incstack = 0
  8584                           ;delay_s@value_s stored from wreg
  8585  005BDA  0100               	movlb	0	; () banked
  8586  005BDC  6F7F               	movwf	delay_s@value_s& (0+255),b
  8587                           
  8588                           ;src\delay.c: 104: unsigned char repeat_loop;
  8589                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
  8590  005BDE  0E00               	movlw	0
  8591  005BE0  0100               	movlb	0	; () banked
  8592  005BE2  6F80               	movwf	delay_s@repeat_loop& (0+255),b
  8593  005BE4  D009               	goto	l5382
  8594  005BE6                     l5378:
  8595                           
  8596                           ; BSR set to: 0
  8597                           ;src\delay.c: 107: delay_ms (1000);
  8598  005BE6  0E03               	movlw	3
  8599  005BE8  0100               	movlb	0	; () banked
  8600  005BEA  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  8601  005BEC  0EE8               	movlw	232
  8602  005BEE  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  8603  005BF0  EC83  F02D         	call	_delay_ms	;wreg free
  8604  005BF4  0100               	movlb	0	; () banked
  8605  005BF6  2B80               	incf	delay_s@repeat_loop& (0+255),f,b
  8606  005BF8                     l5382:
  8607                           
  8608                           ; BSR set to: 0
  8609  005BF8  0100               	movlb	0	; () banked
  8610  005BFA  517F               	movf	delay_s@value_s& (0+255),w,b
  8611  005BFC  0100               	movlb	0	; () banked
  8612  005BFE  5D80               	subwf	delay_s@repeat_loop& (0+255),w,b
  8613  005C00  B0D8               	btfsc	status,0,c
  8614  005C02  0012               	return	
  8615  005C04  D7F0               	goto	l5378
  8616  005C06                     __end_of_delay_s:
  8617                           	opt stack 0
  8618                           tblptru	equ	0xFF8
  8619                           tblptrh	equ	0xFF7
  8620                           tblptrl	equ	0xFF6
  8621                           tablat	equ	0xFF5
  8622                           prodh	equ	0xFF4
  8623                           prodl	equ	0xFF3
  8624                           postinc0	equ	0xFEE
  8625                           wreg	equ	0xFE8
  8626                           postdec1	equ	0xFE5
  8627                           fsr1l	equ	0xFE1
  8628                           postinc2	equ	0xFDE
  8629                           postdec2	equ	0xFDD
  8630                           fsr2h	equ	0xFDA
  8631                           fsr2l	equ	0xFD9
  8632                           status	equ	0xFD8
  8633                           
  8634 ;; *************** function _delay_ms *****************
  8635 ;; Defined at:
  8636 ;;		line 61 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/src\delay.c"
  8637 ;; Parameters:    Size  Location     Type
  8638 ;;  value_ms        2   29[BANK0 ] unsigned int 
  8639 ;; Auto vars:     Size  Location     Type
  8640 ;;		None
  8641 ;; Return value:  Size  Location     Type
  8642 ;;		None               void
  8643 ;; Registers used:
  8644 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8645 ;; Tracked objects:
  8646 ;;		On entry : 0/0
  8647 ;;		On exit  : 0/0
  8648 ;;		Unchanged: 0/0
  8649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8650 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8653 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8654 ;;Total ram usage:        2 bytes
  8655 ;; Hardware stack levels used:    1
  8656 ;; Hardware stack levels required when called:    5
  8657 ;; This function calls:
  8658 ;;		___wmul
  8659 ;; This function is called by:
  8660 ;;		_delay_s
  8661 ;; This function uses a non-reentrant model
  8662 ;;
  8663                           
  8664                           	psect	text24
  8665  005B06                     __ptext24:
  8666                           	opt stack 0
  8667  005B06                     _delay_ms:
  8668                           	opt stack 23
  8669                           
  8670                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
  8671                           
  8672                           ; BSR set to: 0
  8673                           ;incstack = 0
  8674  005B06  C0E7  F077         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
  8675  005B0A  0100               	movlb	0	; () banked
  8676  005B0C  6B78               	clrf	(___wmul@multiplier+1)& (0+255),b
  8677  005B0E  C07D  F079         	movff	delay_ms@value_ms,___wmul@multiplicand
  8678  005B12  C07E  F07A         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
  8679  005B16  ECBC  F02D         	call	___wmul	;wreg free
  8680  005B1A  C077  F0E1         	movff	?___wmul,_clock_counter_reference	;volatile
  8681  005B1E  C078  F0E2         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
  8682                           
  8683                           ;src\delay.c: 75: while (clock_counter_reference) {
  8684  005B22  D007               	goto	l569
  8685  005B24                     l5234:
  8686                           
  8687                           ;src\delay.c: 85: _delay(240);
  8688  005B24  0E50               	movlw	80
  8689  005B26                     u9007:
  8690  005B26  2EE8               	decfsz	wreg,f,c
  8691  005B28  D7FE               	goto	u9007
  8692                           
  8693                           ;src\delay.c: 88: clock_counter_reference--;
  8694  005B2A  0100               	movlb	0	; () banked
  8695  005B2C  07E1               	decf	_clock_counter_reference& (0+255),f,b	;volatile
  8696  005B2E  A0D8               	btfss	status,0,c
  8697  005B30  07E2               	decf	(_clock_counter_reference+1)& (0+255),f,b	;volatile
  8698  005B32                     l569:
  8699  005B32  0100               	movlb	0	; () banked
  8700  005B34  51E1               	movf	_clock_counter_reference& (0+255),w,b	;volatile
  8701  005B36  0100               	movlb	0	; () banked
  8702  005B38  11E2               	iorwf	(_clock_counter_reference+1)& (0+255),w,b	;volatile
  8703  005B3A  B4D8               	btfsc	status,2,c
  8704  005B3C  0012               	return	
  8705  005B3E  D7F2               	goto	l5234
  8706  005B40                     __end_of_delay_ms:
  8707                           	opt stack 0
  8708                           tblptru	equ	0xFF8
  8709                           tblptrh	equ	0xFF7
  8710                           tblptrl	equ	0xFF6
  8711                           tablat	equ	0xFF5
  8712                           prodh	equ	0xFF4
  8713                           prodl	equ	0xFF3
  8714                           postinc0	equ	0xFEE
  8715                           wreg	equ	0xFE8
  8716                           postdec1	equ	0xFE5
  8717                           fsr1l	equ	0xFE1
  8718                           postinc2	equ	0xFDE
  8719                           postdec2	equ	0xFDD
  8720                           fsr2h	equ	0xFDA
  8721                           fsr2l	equ	0xFD9
  8722                           status	equ	0xFD8
  8723                           
  8724 ;; *************** function ___wmul *****************
  8725 ;; Defined at:
  8726 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;  multiplier      2   23[BANK0 ] unsigned int 
  8729 ;;  multiplicand    2   25[BANK0 ] unsigned int 
  8730 ;; Auto vars:     Size  Location     Type
  8731 ;;  product         2   27[BANK0 ] unsigned int 
  8732 ;; Return value:  Size  Location     Type
  8733 ;;                  2   23[BANK0 ] unsigned int 
  8734 ;; Registers used:
  8735 ;;		wreg, status,2, status,0, prodl, prodh
  8736 ;; Tracked objects:
  8737 ;;		On entry : 0/0
  8738 ;;		On exit  : 0/0
  8739 ;;		Unchanged: 0/0
  8740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8741 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8742 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8744 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8745 ;;Total ram usage:        6 bytes
  8746 ;; Hardware stack levels used:    1
  8747 ;; Hardware stack levels required when called:    4
  8748 ;; This function calls:
  8749 ;;		Nothing
  8750 ;; This function is called by:
  8751 ;;		_delay_ms
  8752 ;; This function uses a non-reentrant model
  8753 ;;
  8754                           
  8755                           	psect	text25
  8756  005B78                     __ptext25:
  8757                           	opt stack 0
  8758  005B78                     ___wmul:
  8759                           	opt stack 23
  8760                           
  8761                           ; BSR set to: 0
  8762                           ;incstack = 0
  8763  005B78  0100               	movlb	0	; () banked
  8764  005B7A  5177               	movf	___wmul@multiplier& (0+255),w,b
  8765  005B7C  0100               	movlb	0	; () banked
  8766  005B7E  0379               	mulwf	___wmul@multiplicand& (0+255),b
  8767  005B80  CFF3 F07B          	movff	prodl,___wmul@product
  8768  005B84  CFF4 F07C          	movff	prodh,___wmul@product+1
  8769  005B88  0100               	movlb	0	; () banked
  8770  005B8A  5177               	movf	___wmul@multiplier& (0+255),w,b
  8771  005B8C  0100               	movlb	0	; () banked
  8772  005B8E  037A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  8773  005B90  50F3               	movf	prodl,w,c
  8774  005B92  0100               	movlb	0	; () banked
  8775  005B94  277C               	addwf	(___wmul@product+1)& (0+255),f,b
  8776  005B96  0100               	movlb	0	; () banked
  8777  005B98  5178               	movf	(___wmul@multiplier+1)& (0+255),w,b
  8778  005B9A  0100               	movlb	0	; () banked
  8779  005B9C  0379               	mulwf	___wmul@multiplicand& (0+255),b
  8780  005B9E  50F3               	movf	prodl,w,c
  8781  005BA0  0100               	movlb	0	; () banked
  8782  005BA2  277C               	addwf	(___wmul@product+1)& (0+255),f,b
  8783                           
  8784                           ; BSR set to: 0
  8785  005BA4  C07B  F077         	movff	___wmul@product,?___wmul
  8786  005BA8  C07C  F078         	movff	___wmul@product+1,?___wmul+1
  8787  005BAC  0012               	return	
  8788  005BAE                     __end_of___wmul:
  8789                           	opt stack 0
  8790                           tblptru	equ	0xFF8
  8791                           tblptrh	equ	0xFF7
  8792                           tblptrl	equ	0xFF6
  8793                           tablat	equ	0xFF5
  8794                           prodh	equ	0xFF4
  8795                           prodl	equ	0xFF3
  8796                           postinc0	equ	0xFEE
  8797                           wreg	equ	0xFE8
  8798                           postdec1	equ	0xFE5
  8799                           fsr1l	equ	0xFE1
  8800                           postinc2	equ	0xFDE
  8801                           postdec2	equ	0xFDD
  8802                           fsr2h	equ	0xFDA
  8803                           fsr2l	equ	0xFD9
  8804                           status	equ	0xFD8
  8805                           
  8806 ;; *************** function _can_send *****************
  8807 ;; Defined at:
  8808 ;;		line 304 in file "parcheggio.c"
  8809 ;; Parameters:    Size  Location     Type
  8810 ;;		None
  8811 ;; Auto vars:     Size  Location     Type
  8812 ;;  data_correct    0   39[BANK0 ] unsigned char [0]
  8813 ;; Return value:  Size  Location     Type
  8814 ;;		None               void
  8815 ;; Registers used:
  8816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8817 ;; Tracked objects:
  8818 ;;		On entry : 0/0
  8819 ;;		On exit  : 0/0
  8820 ;;		Unchanged: 0/0
  8821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8826 ;;Total ram usage:        0 bytes
  8827 ;; Hardware stack levels used:    1
  8828 ;; Hardware stack levels required when called:    5
  8829 ;; This function calls:
  8830 ;;		_CANisTxReady
  8831 ;;		_CANsendMessage
  8832 ;; This function is called by:
  8833 ;;		_park_routine
  8834 ;;		_parallelo
  8835 ;; This function uses a non-reentrant model
  8836 ;;
  8837                           
  8838                           	psect	text26
  8839  0051B0                     __ptext26:
  8840                           	opt stack 0
  8841  0051B0                     _can_send:
  8842                           	opt stack 23
  8843                           
  8844                           ;parcheggio.c: 305: if (PORTBbits.RB5 == 1) {
  8845                           
  8846                           ; BSR set to: 0
  8847                           ;incstack = 0
  8848  0051B0  AA81               	btfss	3969,5,c	;volatile
  8849  0051B2  D060               	goto	l5264
  8850  0051B4                     l5246:
  8851  0051B4  EC03  F02E         	call	_CANisTxReady	;wreg free
  8852  0051B8  06E8               	decf	wreg,f,c
  8853  0051BA  A4D8               	btfss	status,2,c
  8854  0051BC  D7FB               	goto	l5246
  8855                           
  8856                           ;parcheggio.c: 307: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  8857  0051BE  0E05               	movlw	5
  8858  0051C0  0100               	movlb	0	; () banked
  8859  0051C2  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  8860  0051C4  0E00               	movlw	0
  8861  0051C6  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  8862  0051C8  0E00               	movlw	0
  8863  0051CA  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  8864  0051CC  0E00               	movlw	0
  8865  0051CE  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  8866  0051D0  0E6F               	movlw	low _data_steering
  8867  0051D2  0100               	movlb	0	; () banked
  8868  0051D4  6F7B               	movwf	CANsendMessage@data& (0+255),b
  8869  0051D6  0E01               	movlw	high _data_steering
  8870  0051D8  0100               	movlb	0	; () banked
  8871  0051DA  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  8872  0051DC  0E08               	movlw	8
  8873  0051DE  0100               	movlb	0	; () banked
  8874  0051E0  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  8875  0051E2  0EBC               	movlw	188
  8876  0051E4  0100               	movlb	0	; () banked
  8877  0051E6  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  8878  0051E8  EC2C  F00C         	call	_CANsendMessage	;wreg free
  8879                           
  8880                           ;parcheggio.c: 308: data_speed[0] = set_speed;
  8881  0051EC  C0E5  F167         	movff	_set_speed,_data_speed
  8882                           
  8883                           ;parcheggio.c: 309: data_speed[1] = (set_speed >> 8);
  8884  0051F0  0100               	movlb	0	; () banked
  8885  0051F2  51E6               	movf	(_set_speed+1)& (0+255),w,b
  8886  0051F4  0101               	movlb	1	; () banked
  8887  0051F6  6F68               	movwf	(_data_speed+1)& (0+255),b
  8888                           
  8889                           ; BSR set to: 1
  8890                           ;parcheggio.c: 310: data_speed[2] = dir;
  8891  0051F8  0E00               	movlw	0
  8892  0051FA  B444               	btfsc	_dir/(0+8),_dir& (0+7),c
  8893  0051FC  0E01               	movlw	1
  8894  0051FE  0101               	movlb	1	; () banked
  8895  005200  6F69               	movwf	(_data_speed+2)& (0+255),b
  8896  005202                     l5256:
  8897  005202  EC03  F02E         	call	_CANisTxReady	;wreg free
  8898  005206  06E8               	decf	wreg,f,c
  8899  005208  A4D8               	btfss	status,2,c
  8900  00520A  D7FB               	goto	l5256
  8901                           
  8902                           ;parcheggio.c: 312: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  8903  00520C  0E03               	movlw	3
  8904  00520E  0100               	movlb	0	; () banked
  8905  005210  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  8906  005212  0E00               	movlw	0
  8907  005214  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  8908  005216  0E00               	movlw	0
  8909  005218  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  8910  00521A  0E00               	movlw	0
  8911  00521C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  8912  00521E  0E67               	movlw	low _data_speed
  8913  005220  0100               	movlb	0	; () banked
  8914  005222  6F7B               	movwf	CANsendMessage@data& (0+255),b
  8915  005224  0E01               	movlw	high _data_speed
  8916  005226  0100               	movlb	0	; () banked
  8917  005228  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  8918  00522A  0E08               	movlw	8
  8919  00522C  0100               	movlb	0	; () banked
  8920  00522E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  8921  005230  0EBC               	movlw	188
  8922  005232  0100               	movlb	0	; () banked
  8923  005234  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  8924  005236  EC2C  F00C         	call	_CANsendMessage	;wreg free
  8925  00523A                     l5260:
  8926  00523A  EC03  F02E         	call	_CANisTxReady	;wreg free
  8927  00523E  06E8               	decf	wreg,f,c
  8928  005240  A4D8               	btfss	status,2,c
  8929  005242  D7FB               	goto	l5260
  8930                           
  8931                           ;parcheggio.c: 314: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  8932  005244  0E04               	movlw	4
  8933  005246  0100               	movlb	0	; () banked
  8934  005248  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  8935  00524A  0E00               	movlw	0
  8936  00524C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  8937  00524E  0E00               	movlw	0
  8938  005250  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  8939  005252  0E00               	movlw	0
  8940  005254  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  8941  005256  0E57               	movlw	low _data_brake
  8942  005258  0100               	movlb	0	; () banked
  8943  00525A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  8944  00525C  0E01               	movlw	high _data_brake
  8945  00525E  0100               	movlb	0	; () banked
  8946  005260  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  8947  005262  0E08               	movlw	8
  8948  005264  0100               	movlb	0	; () banked
  8949  005266  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  8950  005268  0EBC               	movlw	188
  8951  00526A  0100               	movlb	0	; () banked
  8952  00526C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  8953  00526E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  8954                           
  8955                           ;parcheggio.c: 315: } else {
  8956  005272  0012               	return	
  8957  005274                     l5264:
  8958                           
  8959                           ;parcheggio.c: 316: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  8960  005274  0E0E               	movlw	14
  8961  005276  0100               	movlb	0	; () banked
  8962  005278  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  8963  00527A  0E00               	movlw	0
  8964  00527C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  8965  00527E  0E00               	movlw	0
  8966  005280  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  8967  005282  0E00               	movlw	0
  8968  005284  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  8969  005286  0E5F               	movlw	low _data_correction
  8970  005288  0100               	movlb	0	; () banked
  8971  00528A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  8972  00528C  0E01               	movlw	high _data_correction
  8973  00528E  0100               	movlb	0	; () banked
  8974  005290  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  8975  005292  0E08               	movlw	8
  8976  005294  0100               	movlb	0	; () banked
  8977  005296  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  8978  005298  0EBC               	movlw	188
  8979  00529A  0100               	movlb	0	; () banked
  8980  00529C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  8981  00529E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  8982                           
  8983                           ;parcheggio.c: 317: unsigned char data_correction1[];
  8984                           ;parcheggio.c: 318: data_correction1[0] = data_correction[0];
  8985  0052A2  EE20  F087         	lfsr	2,can_send@data_correction1
  8986  0052A6  C15F  FFDF         	movff	_data_correction,indf2
  8987                           
  8988                           ;parcheggio.c: 319: data_correction1[1] = 0;
  8989  0052AA  0E00               	movlw	0
  8990  0052AC  CFE8 F088          	movff	wreg,can_send@data_correction1+1
  8991                           
  8992                           ;parcheggio.c: 320: CANsendMessage(0xAA, data_correction1, 8, CAN_CONFIG_STD_MSG & CAN_N
      +                          ORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  8993  0052B0  0EAA               	movlw	170
  8994  0052B2  0100               	movlb	0	; () banked
  8995  0052B4  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  8996  0052B6  0E00               	movlw	0
  8997  0052B8  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  8998  0052BA  0E00               	movlw	0
  8999  0052BC  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  9000  0052BE  0E00               	movlw	0
  9001  0052C0  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  9002  0052C2  0E87               	movlw	low can_send@data_correction1
  9003  0052C4  0100               	movlb	0	; () banked
  9004  0052C6  6F7B               	movwf	CANsendMessage@data& (0+255),b
  9005  0052C8  0E00               	movlw	high can_send@data_correction1
  9006  0052CA  0100               	movlb	0	; () banked
  9007  0052CC  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  9008  0052CE  0E08               	movlw	8
  9009  0052D0  0100               	movlb	0	; () banked
  9010  0052D2  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  9011  0052D4  0EBC               	movlw	188
  9012  0052D6  0100               	movlb	0	; () banked
  9013  0052D8  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  9014  0052DA  EC2C  F00C         	call	_CANsendMessage	;wreg free
  9015  0052DE  0012               	return	
  9016  0052E0                     __end_of_can_send:
  9017                           	opt stack 0
  9018                           tblptru	equ	0xFF8
  9019                           tblptrh	equ	0xFF7
  9020                           tblptrl	equ	0xFF6
  9021                           tablat	equ	0xFF5
  9022                           prodh	equ	0xFF4
  9023                           prodl	equ	0xFF3
  9024                           postinc0	equ	0xFEE
  9025                           wreg	equ	0xFE8
  9026                           postdec1	equ	0xFE5
  9027                           fsr1l	equ	0xFE1
  9028                           indf2	equ	0xFDF
  9029                           postinc2	equ	0xFDE
  9030                           postdec2	equ	0xFDD
  9031                           fsr2h	equ	0xFDA
  9032                           fsr2l	equ	0xFD9
  9033                           status	equ	0xFD8
  9034                           
  9035 ;; *************** function _CANsendMessage *****************
  9036 ;; Defined at:
  9037 ;;		line 294 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
  9038 ;; Parameters:    Size  Location     Type
  9039 ;;  identifier      4   23[BANK0 ] unsigned long 
  9040 ;;  data            2   27[BANK0 ] PTR unsigned char 
  9041 ;;		 -> can_send@data_correction1(0), data_correction(8), data_speed(8), data_test(8), 
  9042 ;;		 -> data_steering(8), data_brake(8), data(8), 
  9043 ;;  dataLength      1   29[BANK0 ] unsigned char 
  9044 ;;  flags           1   30[BANK0 ] enum E16335
  9045 ;; Auto vars:     Size  Location     Type
  9046 ;;  tamp            4   35[BANK0 ] unsigned long 
  9047 ;; Return value:  Size  Location     Type
  9048 ;;		None               void
  9049 ;; Registers used:
  9050 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9051 ;; Tracked objects:
  9052 ;;		On entry : 0/0
  9053 ;;		On exit  : 0/0
  9054 ;;		Unchanged: 0/0
  9055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9056 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9057 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9058 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9059 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9060 ;;Total ram usage:       16 bytes
  9061 ;; Hardware stack levels used:    1
  9062 ;; Hardware stack levels required when called:    4
  9063 ;; This function calls:
  9064 ;;		Nothing
  9065 ;; This function is called by:
  9066 ;;		_park_search
  9067 ;;		_park_routine
  9068 ;;		_can_send
  9069 ;; This function uses a non-reentrant model
  9070 ;;
  9071                           
  9072                           	psect	text27
  9073  001858                     __ptext27:
  9074                           	opt stack 0
  9075  001858                     _CANsendMessage:
  9076                           	opt stack 23
  9077                           
  9078                           ;inc\CANlib.h: 296: unsigned long tamp;
  9079                           ;inc\CANlib.h: 298: if (TXB0CONbits.TXREQ == 0)
  9080                           
  9081                           ;incstack = 0
  9082  001858  010F               	movlb	15	; () banked
  9083  00185A  B740               	btfsc	64,3,b	;volatile
  9084  00185C  D13F               	goto	l363
  9085                           
  9086                           ; BSR set to: 15
  9087                           ;inc\CANlib.h: 299: { TXB0DLC = dataLength;
  9088  00185E  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  9089                           
  9090                           ;inc\CANlib.h: 300: if (0b01000000 & flags)
  9091  001862  0100               	movlb	0	; () banked
  9092  001864  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  9093  001866  D003               	goto	l364
  9094                           
  9095                           ; BSR set to: 0
  9096                           ;inc\CANlib.h: 301: TXB0DLCbits.TXRTR = 0x01;
  9097  001868  010F               	movlb	15	; () banked
  9098  00186A  8D45               	bsf	69,6,b	;volatile
  9099  00186C  D002               	goto	l365
  9100  00186E                     l364:
  9101                           
  9102                           ; BSR set to: 0
  9103                           ;inc\CANlib.h: 302: else
  9104                           ;inc\CANlib.h: 303: TXB0DLCbits.TXRTR = 0x00;
  9105  00186E  010F               	movlb	15	; () banked
  9106  001870  9D45               	bcf	69,6,b	;volatile
  9107  001872                     l365:
  9108                           
  9109                           ; BSR set to: 15
  9110                           ;inc\CANlib.h: 305: if (CAN_TX_FRAME_MASK & flags)
  9111  001872  0100               	movlb	0	; () banked
  9112  001874  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  9113  001876  D079               	goto	l366
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;inc\CANlib.h: 306: {
  9117                           ;inc\CANlib.h: 308: tamp = identifier & 0x000000FF;
  9118  001878  0100               	movlb	0	; () banked
  9119  00187A  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  9120  00187C  0100               	movlb	0	; () banked
  9121  00187E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9122  001880  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9123  001882  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9124  001884  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9125                           
  9126                           ; BSR set to: 0
  9127                           ;inc\CANlib.h: 309: TXB0EIDL = (unsigned char) tamp;
  9128  001886  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  9129                           
  9130                           ; BSR set to: 0
  9131                           ;inc\CANlib.h: 311: tamp = identifier & 0x0000FF00;
  9132  00188A  0E00               	movlw	0
  9133  00188C  0100               	movlb	0	; () banked
  9134  00188E  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  9135  001890  0100               	movlb	0	; () banked
  9136  001892  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9137  001894  0EFF               	movlw	255
  9138  001896  0100               	movlb	0	; () banked
  9139  001898  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  9140  00189A  0100               	movlb	0	; () banked
  9141  00189C  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  9142  00189E  0E00               	movlw	0
  9143  0018A0  0100               	movlb	0	; () banked
  9144  0018A2  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  9145  0018A4  0100               	movlb	0	; () banked
  9146  0018A6  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  9147  0018A8  0E00               	movlw	0
  9148  0018AA  0100               	movlb	0	; () banked
  9149  0018AC  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  9150  0018AE  0100               	movlb	0	; () banked
  9151  0018B0  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  9152                           
  9153                           ; BSR set to: 0
  9154                           ;inc\CANlib.h: 312: tamp = tamp >> 8;
  9155  0018B2  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  9156  0018B6  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  9157  0018BA  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  9158  0018BE  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  9159  0018C2  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  9160  0018C6  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  9161  0018CA  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  9162  0018CE  0100               	movlb	0	; () banked
  9163  0018D0  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  9164  0018D2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9165  0018D6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9166  0018DA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9167  0018DE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9168                           
  9169                           ; BSR set to: 0
  9170                           ;inc\CANlib.h: 313: TXB0EIDH = (unsigned char) tamp;
  9171  0018E2  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  9172                           
  9173                           ; BSR set to: 0
  9174                           ;inc\CANlib.h: 315: TXB0SIDL = 0x00;
  9175  0018E6  0E00               	movlw	0
  9176  0018E8  010F               	movlb	15	; () banked
  9177  0018EA  6F42               	movwf	66,b	;volatile
  9178                           
  9179                           ; BSR set to: 15
  9180                           ;inc\CANlib.h: 316: TXB0SIDLbits.EXIDE = 0x01;
  9181  0018EC  010F               	movlb	15	; () banked
  9182  0018EE  8742               	bsf	66,3,b	;volatile
  9183                           
  9184                           ; BSR set to: 15
  9185                           ;inc\CANlib.h: 318: if (identifier & 0x00010000)
  9186  0018F0  0100               	movlb	0	; () banked
  9187  0018F2  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  9188  0018F4  D002               	goto	l367
  9189                           
  9190                           ; BSR set to: 0
  9191                           ;inc\CANlib.h: 319: TXB0SIDLbits.EID16 = 0x01;
  9192  0018F6  010F               	movlb	15	; () banked
  9193  0018F8  8142               	bsf	66,0,b	;volatile
  9194  0018FA                     l367:
  9195                           
  9196                           ;inc\CANlib.h: 320: if (identifier & 0x00020000)
  9197  0018FA  0100               	movlb	0	; () banked
  9198  0018FC  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  9199  0018FE  D002               	goto	l368
  9200                           
  9201                           ; BSR set to: 0
  9202                           ;inc\CANlib.h: 321: TXB0SIDLbits.EID17 = 0x01;
  9203  001900  010F               	movlb	15	; () banked
  9204  001902  8342               	bsf	66,1,b	;volatile
  9205  001904                     l368:
  9206                           
  9207                           ;inc\CANlib.h: 322: if (identifier & 0x00040000)
  9208  001904  0100               	movlb	0	; () banked
  9209  001906  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  9210  001908  D002               	goto	l369
  9211                           
  9212                           ; BSR set to: 0
  9213                           ;inc\CANlib.h: 323: TXB0SIDLbits.SID0 = 0x01;
  9214  00190A  010F               	movlb	15	; () banked
  9215  00190C  8B42               	bsf	66,5,b	;volatile
  9216  00190E                     l369:
  9217                           
  9218                           ;inc\CANlib.h: 324: if (identifier & 0x00080000)
  9219  00190E  0100               	movlb	0	; () banked
  9220  001910  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  9221  001912  D002               	goto	l370
  9222                           
  9223                           ; BSR set to: 0
  9224                           ;inc\CANlib.h: 325: TXB0SIDLbits.SID1 = 0x01;
  9225  001914  010F               	movlb	15	; () banked
  9226  001916  8D42               	bsf	66,6,b	;volatile
  9227  001918                     l370:
  9228                           
  9229                           ;inc\CANlib.h: 326: if (identifier & 0x00100000)
  9230  001918  0100               	movlb	0	; () banked
  9231  00191A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  9232  00191C  D002               	goto	l4438
  9233                           
  9234                           ; BSR set to: 0
  9235                           ;inc\CANlib.h: 327: TXB0SIDLbits.SID2 = 0x01;
  9236  00191E  010F               	movlb	15	; () banked
  9237  001920  8F42               	bsf	66,7,b	;volatile
  9238  001922                     l4438:
  9239                           
  9240                           ;inc\CANlib.h: 329: tamp = (identifier >> 21);
  9241  001922  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  9242  001926  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  9243  00192A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  9244  00192E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  9245  001932  0E16               	movlw	22
  9246  001934  D006               	goto	u4850
  9247  001936                     u4855:
  9248  001936  0100               	movlb	0	; () banked
  9249  001938  90D8               	bcf	status,0,c
  9250  00193A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  9251  00193C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  9252  00193E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  9253  001940  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  9254  001942                     u4850:
  9255  001942  2EE8               	decfsz	wreg,f,c
  9256  001944  D7F8               	goto	u4855
  9257  001946  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9258  00194A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9259  00194E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9260  001952  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9261                           
  9262                           ; BSR set to: 0
  9263                           ;inc\CANlib.h: 330: tamp = tamp & 0x000000FF;
  9264  001956  0100               	movlb	0	; () banked
  9265  001958  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  9266  00195A  0100               	movlb	0	; () banked
  9267  00195C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9268  00195E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9269  001960  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9270  001962  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9271                           
  9272                           ; BSR set to: 0
  9273                           ;inc\CANlib.h: 331: TXB0SIDH = (unsigned char) tamp;
  9274  001964  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  9275                           
  9276                           ;inc\CANlib.h: 332: }
  9277  001968  D059               	goto	l4458
  9278  00196A                     l366:
  9279                           
  9280                           ; BSR set to: 0
  9281                           ;inc\CANlib.h: 334: else
  9282                           ;inc\CANlib.h: 336: {
  9283                           ;inc\CANlib.h: 337: TXB0SIDLbits.EXIDE = 0x00;
  9284  00196A  010F               	movlb	15	; () banked
  9285  00196C  9742               	bcf	66,3,b	;volatile
  9286                           
  9287                           ; BSR set to: 15
  9288                           ;inc\CANlib.h: 339: tamp = (identifier >> 3);
  9289  00196E  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  9290  001972  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  9291  001976  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  9292  00197A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  9293  00197E  0E04               	movlw	4
  9294  001980  D006               	goto	u4860
  9295  001982                     u4865:
  9296  001982  0100               	movlb	0	; () banked
  9297  001984  90D8               	bcf	status,0,c
  9298  001986  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  9299  001988  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  9300  00198A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  9301  00198C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  9302  00198E                     u4860:
  9303  00198E  2EE8               	decfsz	wreg,f,c
  9304  001990  D7F8               	goto	u4865
  9305  001992  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9306  001996  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9307  00199A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9308  00199E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9309                           
  9310                           ; BSR set to: 0
  9311                           ;inc\CANlib.h: 340: tamp = tamp & 0x000000FF;
  9312  0019A2  0100               	movlb	0	; () banked
  9313  0019A4  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  9314  0019A6  0100               	movlb	0	; () banked
  9315  0019A8  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9316  0019AA  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9317  0019AC  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9318  0019AE  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9319                           
  9320                           ; BSR set to: 0
  9321                           ;inc\CANlib.h: 341: TXB0SIDH = (unsigned char) tamp;
  9322  0019B0  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  9323                           
  9324                           ; BSR set to: 0
  9325                           ;inc\CANlib.h: 343: tamp = identifier & 0x00000007;
  9326  0019B4  0E07               	movlw	7
  9327  0019B6  0100               	movlb	0	; () banked
  9328  0019B8  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  9329  0019BA  0100               	movlb	0	; () banked
  9330  0019BC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9331  0019BE  0E00               	movlw	0
  9332  0019C0  0100               	movlb	0	; () banked
  9333  0019C2  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  9334  0019C4  0100               	movlb	0	; () banked
  9335  0019C6  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  9336  0019C8  0E00               	movlw	0
  9337  0019CA  0100               	movlb	0	; () banked
  9338  0019CC  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  9339  0019CE  0100               	movlb	0	; () banked
  9340  0019D0  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  9341  0019D2  0E00               	movlw	0
  9342  0019D4  0100               	movlb	0	; () banked
  9343  0019D6  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  9344  0019D8  0100               	movlb	0	; () banked
  9345  0019DA  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  9346                           
  9347                           ; BSR set to: 0
  9348                           ;inc\CANlib.h: 344: tamp = tamp << 5;
  9349  0019DC  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  9350  0019E0  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  9351  0019E4  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  9352  0019E8  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  9353  0019EC  0E05               	movlw	5
  9354  0019EE                     u4875:
  9355  0019EE  90D8               	bcf	status,0,c
  9356  0019F0  0100               	movlb	0	; () banked
  9357  0019F2  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  9358  0019F4  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  9359  0019F6  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  9360  0019F8  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  9361  0019FA  2EE8               	decfsz	wreg,f,c
  9362  0019FC  D7F8               	goto	u4875
  9363  0019FE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9364  001A02  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9365  001A06  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9366  001A0A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9367                           
  9368                           ; BSR set to: 0
  9369                           ;inc\CANlib.h: 345: TXB0SIDL = TXB0SIDL & 0b00011111;
  9370  001A0E  010F               	movlb	15	; () banked
  9371  001A10  5142               	movf	66,w,b	;volatile
  9372  001A12  0B1F               	andlw	31
  9373  001A14  010F               	movlb	15	; () banked
  9374  001A16  6F42               	movwf	66,b	;volatile
  9375                           
  9376                           ; BSR set to: 15
  9377                           ;inc\CANlib.h: 346: TXB0SIDL = (unsigned char) tamp;
  9378  001A18  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  9379  001A1C                     l4458:
  9380                           
  9381                           ;inc\CANlib.h: 347: }
  9382                           ;inc\CANlib.h: 349: if (0b00000001 & flags)
  9383  001A1C  0100               	movlb	0	; () banked
  9384  001A1E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  9385  001A20  D003               	goto	l373
  9386                           
  9387                           ; BSR set to: 0
  9388                           ;inc\CANlib.h: 350: TXB0CONbits.TXPRI0 = 0x01;
  9389  001A22  010F               	movlb	15	; () banked
  9390  001A24  8140               	bsf	64,0,b	;volatile
  9391  001A26  D002               	goto	l374
  9392  001A28                     l373:
  9393                           
  9394                           ; BSR set to: 0
  9395                           ;inc\CANlib.h: 351: else
  9396                           ;inc\CANlib.h: 352: TXB0CONbits.TXPRI0 = 0x00;
  9397  001A28  010F               	movlb	15	; () banked
  9398  001A2A  9140               	bcf	64,0,b	;volatile
  9399  001A2C                     l374:
  9400                           
  9401                           ; BSR set to: 15
  9402                           ;inc\CANlib.h: 353: if (0b00000010 & flags)
  9403  001A2C  0100               	movlb	0	; () banked
  9404  001A2E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  9405  001A30  D003               	goto	l375
  9406                           
  9407                           ; BSR set to: 0
  9408                           ;inc\CANlib.h: 354: TXB0CONbits.TXPRI1 = 0x01;
  9409  001A32  010F               	movlb	15	; () banked
  9410  001A34  8340               	bsf	64,1,b	;volatile
  9411  001A36  D002               	goto	l4464
  9412  001A38                     l375:
  9413                           
  9414                           ; BSR set to: 0
  9415                           ;inc\CANlib.h: 355: else
  9416                           ;inc\CANlib.h: 356: TXB0CONbits.TXPRI1 = 0x00;
  9417  001A38  010F               	movlb	15	; () banked
  9418  001A3A  9340               	bcf	64,1,b	;volatile
  9419  001A3C                     l4464:
  9420                           
  9421                           ; BSR set to: 15
  9422                           ;inc\CANlib.h: 358: TXB0D0 = data[0];
  9423  001A3C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  9424  001A40  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  9425  001A44  50DF               	movf	indf2,w,c
  9426  001A46  010F               	movlb	15	; () banked
  9427  001A48  6F46               	movwf	70,b	;volatile
  9428                           
  9429                           ; BSR set to: 15
  9430                           ;inc\CANlib.h: 359: TXB0D1 = data[1];
  9431  001A4A  0100               	movlb	0	; () banked
  9432  001A4C  EE20 F001          	lfsr	2,1
  9433  001A50  517B               	movf	CANsendMessage@data& (0+255),w,b
  9434  001A52  26D9               	addwf	fsr2l,f,c
  9435  001A54  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9436  001A56  22DA               	addwfc	fsr2h,f,c
  9437  001A58  50DF               	movf	indf2,w,c
  9438  001A5A  010F               	movlb	15	; () banked
  9439  001A5C  6F47               	movwf	71,b	;volatile
  9440                           
  9441                           ; BSR set to: 15
  9442                           ;inc\CANlib.h: 360: TXB0D2 = data[2];
  9443  001A5E  0100               	movlb	0	; () banked
  9444  001A60  EE20 F002          	lfsr	2,2
  9445  001A64  517B               	movf	CANsendMessage@data& (0+255),w,b
  9446  001A66  26D9               	addwf	fsr2l,f,c
  9447  001A68  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9448  001A6A  22DA               	addwfc	fsr2h,f,c
  9449  001A6C  50DF               	movf	indf2,w,c
  9450  001A6E  010F               	movlb	15	; () banked
  9451  001A70  6F48               	movwf	72,b	;volatile
  9452                           
  9453                           ; BSR set to: 15
  9454                           ;inc\CANlib.h: 361: TXB0D3 = data[3];
  9455  001A72  0100               	movlb	0	; () banked
  9456  001A74  EE20 F003          	lfsr	2,3
  9457  001A78  517B               	movf	CANsendMessage@data& (0+255),w,b
  9458  001A7A  26D9               	addwf	fsr2l,f,c
  9459  001A7C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9460  001A7E  22DA               	addwfc	fsr2h,f,c
  9461  001A80  50DF               	movf	indf2,w,c
  9462  001A82  010F               	movlb	15	; () banked
  9463  001A84  6F49               	movwf	73,b	;volatile
  9464                           
  9465                           ; BSR set to: 15
  9466                           ;inc\CANlib.h: 362: TXB0D4 = data[4];
  9467  001A86  0100               	movlb	0	; () banked
  9468  001A88  EE20 F004          	lfsr	2,4
  9469  001A8C  517B               	movf	CANsendMessage@data& (0+255),w,b
  9470  001A8E  26D9               	addwf	fsr2l,f,c
  9471  001A90  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9472  001A92  22DA               	addwfc	fsr2h,f,c
  9473  001A94  50DF               	movf	indf2,w,c
  9474  001A96  010F               	movlb	15	; () banked
  9475  001A98  6F4A               	movwf	74,b	;volatile
  9476                           
  9477                           ; BSR set to: 15
  9478                           ;inc\CANlib.h: 363: TXB0D5 = data[5];
  9479  001A9A  0100               	movlb	0	; () banked
  9480  001A9C  EE20 F005          	lfsr	2,5
  9481  001AA0  517B               	movf	CANsendMessage@data& (0+255),w,b
  9482  001AA2  26D9               	addwf	fsr2l,f,c
  9483  001AA4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9484  001AA6  22DA               	addwfc	fsr2h,f,c
  9485  001AA8  50DF               	movf	indf2,w,c
  9486  001AAA  010F               	movlb	15	; () banked
  9487  001AAC  6F4B               	movwf	75,b	;volatile
  9488                           
  9489                           ; BSR set to: 15
  9490                           ;inc\CANlib.h: 364: TXB0D6 = data[6];
  9491  001AAE  0100               	movlb	0	; () banked
  9492  001AB0  EE20 F006          	lfsr	2,6
  9493  001AB4  517B               	movf	CANsendMessage@data& (0+255),w,b
  9494  001AB6  26D9               	addwf	fsr2l,f,c
  9495  001AB8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9496  001ABA  22DA               	addwfc	fsr2h,f,c
  9497  001ABC  50DF               	movf	indf2,w,c
  9498  001ABE  010F               	movlb	15	; () banked
  9499  001AC0  6F4C               	movwf	76,b	;volatile
  9500                           
  9501                           ; BSR set to: 15
  9502                           ;inc\CANlib.h: 365: TXB0D7 = data[7];
  9503  001AC2  0100               	movlb	0	; () banked
  9504  001AC4  EE20 F007          	lfsr	2,7
  9505  001AC8  517B               	movf	CANsendMessage@data& (0+255),w,b
  9506  001ACA  26D9               	addwf	fsr2l,f,c
  9507  001ACC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9508  001ACE  22DA               	addwfc	fsr2h,f,c
  9509  001AD0  50DF               	movf	indf2,w,c
  9510  001AD2  010F               	movlb	15	; () banked
  9511  001AD4  6F4D               	movwf	77,b	;volatile
  9512                           
  9513                           ; BSR set to: 15
  9514                           ;inc\CANlib.h: 367: TXB0CONbits.TXREQ = 0x01;
  9515  001AD6  010F               	movlb	15	; () banked
  9516  001AD8  8740               	bsf	64,3,b	;volatile
  9517                           
  9518                           ; BSR set to: 15
  9519                           ;inc\CANlib.h: 368: return;
  9520  001ADA  0012               	return	
  9521  001ADC                     l363:
  9522                           
  9523                           ; BSR set to: 15
  9524                           ;inc\CANlib.h: 369: }
  9525                           ;inc\CANlib.h: 373: if (TXB1CONbits.TXREQ == 0)
  9526  001ADC  010F               	movlb	15	; () banked
  9527  001ADE  B730               	btfsc	48,3,b	;volatile
  9528  001AE0  D13F               	goto	l378
  9529                           
  9530                           ; BSR set to: 15
  9531                           ;inc\CANlib.h: 374: { TXB1DLC = dataLength;
  9532  001AE2  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  9533                           
  9534                           ;inc\CANlib.h: 376: if (0b01000000 & flags)
  9535  001AE6  0100               	movlb	0	; () banked
  9536  001AE8  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  9537  001AEA  D003               	goto	l379
  9538                           
  9539                           ; BSR set to: 0
  9540                           ;inc\CANlib.h: 377: TXB1DLCbits.TXRTR = 0x01;
  9541  001AEC  010F               	movlb	15	; () banked
  9542  001AEE  8D35               	bsf	53,6,b	;volatile
  9543  001AF0  D002               	goto	l380
  9544  001AF2                     l379:
  9545                           
  9546                           ; BSR set to: 0
  9547                           ;inc\CANlib.h: 378: else
  9548                           ;inc\CANlib.h: 379: TXB1DLCbits.TXRTR = 0x00;
  9549  001AF2  010F               	movlb	15	; () banked
  9550  001AF4  9D35               	bcf	53,6,b	;volatile
  9551  001AF6                     l380:
  9552                           
  9553                           ; BSR set to: 15
  9554                           ;inc\CANlib.h: 381: if (CAN_TX_FRAME_MASK & flags)
  9555  001AF6  0100               	movlb	0	; () banked
  9556  001AF8  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  9557  001AFA  D079               	goto	l381
  9558                           
  9559                           ; BSR set to: 0
  9560                           ;inc\CANlib.h: 382: {
  9561                           ;inc\CANlib.h: 383: tamp = identifier & 0x000000FF;
  9562  001AFC  0100               	movlb	0	; () banked
  9563  001AFE  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  9564  001B00  0100               	movlb	0	; () banked
  9565  001B02  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9566  001B04  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9567  001B06  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9568  001B08  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9569                           
  9570                           ; BSR set to: 0
  9571                           ;inc\CANlib.h: 384: TXB1EIDL = (unsigned char) tamp;
  9572  001B0A  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  9573                           
  9574                           ; BSR set to: 0
  9575                           ;inc\CANlib.h: 386: tamp = identifier & 0x0000FF00;
  9576  001B0E  0E00               	movlw	0
  9577  001B10  0100               	movlb	0	; () banked
  9578  001B12  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  9579  001B14  0100               	movlb	0	; () banked
  9580  001B16  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9581  001B18  0EFF               	movlw	255
  9582  001B1A  0100               	movlb	0	; () banked
  9583  001B1C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  9584  001B1E  0100               	movlb	0	; () banked
  9585  001B20  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  9586  001B22  0E00               	movlw	0
  9587  001B24  0100               	movlb	0	; () banked
  9588  001B26  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  9589  001B28  0100               	movlb	0	; () banked
  9590  001B2A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  9591  001B2C  0E00               	movlw	0
  9592  001B2E  0100               	movlb	0	; () banked
  9593  001B30  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  9594  001B32  0100               	movlb	0	; () banked
  9595  001B34  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  9596                           
  9597                           ; BSR set to: 0
  9598                           ;inc\CANlib.h: 387: tamp = tamp >> 8;
  9599  001B36  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  9600  001B3A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  9601  001B3E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  9602  001B42  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  9603  001B46  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  9604  001B4A  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  9605  001B4E  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  9606  001B52  0100               	movlb	0	; () banked
  9607  001B54  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  9608  001B56  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9609  001B5A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9610  001B5E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9611  001B62  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9612                           
  9613                           ; BSR set to: 0
  9614                           ;inc\CANlib.h: 388: TXB1EIDH = (unsigned char) tamp;
  9615  001B66  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  9616                           
  9617                           ; BSR set to: 0
  9618                           ;inc\CANlib.h: 390: TXB1SIDL = 0x00;
  9619  001B6A  0E00               	movlw	0
  9620  001B6C  010F               	movlb	15	; () banked
  9621  001B6E  6F32               	movwf	50,b	;volatile
  9622                           
  9623                           ; BSR set to: 15
  9624                           ;inc\CANlib.h: 391: TXB1SIDLbits.EXIDE = 0x01;
  9625  001B70  010F               	movlb	15	; () banked
  9626  001B72  8732               	bsf	50,3,b	;volatile
  9627                           
  9628                           ; BSR set to: 15
  9629                           ;inc\CANlib.h: 393: if (identifier & 0x00010000)
  9630  001B74  0100               	movlb	0	; () banked
  9631  001B76  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  9632  001B78  D002               	goto	l382
  9633                           
  9634                           ; BSR set to: 0
  9635                           ;inc\CANlib.h: 394: TXB1SIDLbits.EID16 = 0x01;
  9636  001B7A  010F               	movlb	15	; () banked
  9637  001B7C  8132               	bsf	50,0,b	;volatile
  9638  001B7E                     l382:
  9639                           
  9640                           ;inc\CANlib.h: 395: if (identifier & 0x00020000)
  9641  001B7E  0100               	movlb	0	; () banked
  9642  001B80  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  9643  001B82  D002               	goto	l383
  9644                           
  9645                           ; BSR set to: 0
  9646                           ;inc\CANlib.h: 396: TXB1SIDLbits.EID17 = 0x01;
  9647  001B84  010F               	movlb	15	; () banked
  9648  001B86  8332               	bsf	50,1,b	;volatile
  9649  001B88                     l383:
  9650                           
  9651                           ;inc\CANlib.h: 397: if (identifier & 0x00040000)
  9652  001B88  0100               	movlb	0	; () banked
  9653  001B8A  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  9654  001B8C  D002               	goto	l384
  9655                           
  9656                           ; BSR set to: 0
  9657                           ;inc\CANlib.h: 398: TXB1SIDLbits.SID0 = 0x01;
  9658  001B8E  010F               	movlb	15	; () banked
  9659  001B90  8B32               	bsf	50,5,b	;volatile
  9660  001B92                     l384:
  9661                           
  9662                           ;inc\CANlib.h: 399: if (identifier & 0x00080000)
  9663  001B92  0100               	movlb	0	; () banked
  9664  001B94  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  9665  001B96  D002               	goto	l385
  9666                           
  9667                           ; BSR set to: 0
  9668                           ;inc\CANlib.h: 400: TXB1SIDLbits.SID1 = 0x01;
  9669  001B98  010F               	movlb	15	; () banked
  9670  001B9A  8D32               	bsf	50,6,b	;volatile
  9671  001B9C                     l385:
  9672                           
  9673                           ;inc\CANlib.h: 401: if (identifier & 0x00100000)
  9674  001B9C  0100               	movlb	0	; () banked
  9675  001B9E  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  9676  001BA0  D002               	goto	l4514
  9677                           
  9678                           ; BSR set to: 0
  9679                           ;inc\CANlib.h: 402: TXB1SIDLbits.SID2 = 0x01;
  9680  001BA2  010F               	movlb	15	; () banked
  9681  001BA4  8F32               	bsf	50,7,b	;volatile
  9682  001BA6                     l4514:
  9683                           
  9684                           ;inc\CANlib.h: 404: tamp = (identifier >> 21);
  9685  001BA6  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  9686  001BAA  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  9687  001BAE  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  9688  001BB2  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  9689  001BB6  0E16               	movlw	22
  9690  001BB8  D006               	goto	u4980
  9691  001BBA                     u4985:
  9692  001BBA  0100               	movlb	0	; () banked
  9693  001BBC  90D8               	bcf	status,0,c
  9694  001BBE  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  9695  001BC0  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  9696  001BC2  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  9697  001BC4  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  9698  001BC6                     u4980:
  9699  001BC6  2EE8               	decfsz	wreg,f,c
  9700  001BC8  D7F8               	goto	u4985
  9701  001BCA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9702  001BCE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9703  001BD2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9704  001BD6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9705                           
  9706                           ; BSR set to: 0
  9707                           ;inc\CANlib.h: 405: tamp = tamp & 0x000000FF;
  9708  001BDA  0100               	movlb	0	; () banked
  9709  001BDC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  9710  001BDE  0100               	movlb	0	; () banked
  9711  001BE0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9712  001BE2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9713  001BE4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9714  001BE6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9715                           
  9716                           ; BSR set to: 0
  9717                           ;inc\CANlib.h: 406: TXB1SIDH = (unsigned char) tamp;
  9718  001BE8  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  9719                           
  9720                           ;inc\CANlib.h: 407: }
  9721  001BEC  D059               	goto	l4534
  9722  001BEE                     l381:
  9723                           
  9724                           ; BSR set to: 0
  9725                           ;inc\CANlib.h: 409: else
  9726                           ;inc\CANlib.h: 411: {
  9727                           ;inc\CANlib.h: 412: TXB1SIDLbits.EXIDE = 0x00;
  9728  001BEE  010F               	movlb	15	; () banked
  9729  001BF0  9732               	bcf	50,3,b	;volatile
  9730                           
  9731                           ; BSR set to: 15
  9732                           ;inc\CANlib.h: 414: tamp = (identifier >> 3);
  9733  001BF2  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  9734  001BF6  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  9735  001BFA  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  9736  001BFE  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  9737  001C02  0E04               	movlw	4
  9738  001C04  D006               	goto	u4990
  9739  001C06                     u4995:
  9740  001C06  0100               	movlb	0	; () banked
  9741  001C08  90D8               	bcf	status,0,c
  9742  001C0A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  9743  001C0C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  9744  001C0E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  9745  001C10  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  9746  001C12                     u4990:
  9747  001C12  2EE8               	decfsz	wreg,f,c
  9748  001C14  D7F8               	goto	u4995
  9749  001C16  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9750  001C1A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9751  001C1E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9752  001C22  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9753                           
  9754                           ; BSR set to: 0
  9755                           ;inc\CANlib.h: 415: tamp = tamp & 0x000000FF;
  9756  001C26  0100               	movlb	0	; () banked
  9757  001C28  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  9758  001C2A  0100               	movlb	0	; () banked
  9759  001C2C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9760  001C2E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  9761  001C30  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  9762  001C32  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  9763                           
  9764                           ; BSR set to: 0
  9765                           ;inc\CANlib.h: 416: TXB1SIDH = (unsigned char) tamp;
  9766  001C34  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  9767                           
  9768                           ; BSR set to: 0
  9769                           ;inc\CANlib.h: 418: tamp = identifier & 0x00000007;
  9770  001C38  0E07               	movlw	7
  9771  001C3A  0100               	movlb	0	; () banked
  9772  001C3C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  9773  001C3E  0100               	movlb	0	; () banked
  9774  001C40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  9775  001C42  0E00               	movlw	0
  9776  001C44  0100               	movlb	0	; () banked
  9777  001C46  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  9778  001C48  0100               	movlb	0	; () banked
  9779  001C4A  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  9780  001C4C  0E00               	movlw	0
  9781  001C4E  0100               	movlb	0	; () banked
  9782  001C50  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  9783  001C52  0100               	movlb	0	; () banked
  9784  001C54  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  9785  001C56  0E00               	movlw	0
  9786  001C58  0100               	movlb	0	; () banked
  9787  001C5A  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  9788  001C5C  0100               	movlb	0	; () banked
  9789  001C5E  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  9790                           
  9791                           ; BSR set to: 0
  9792                           ;inc\CANlib.h: 419: tamp = tamp << 5;
  9793  001C60  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  9794  001C64  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  9795  001C68  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  9796  001C6C  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  9797  001C70  0E05               	movlw	5
  9798  001C72                     u5005:
  9799  001C72  90D8               	bcf	status,0,c
  9800  001C74  0100               	movlb	0	; () banked
  9801  001C76  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  9802  001C78  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  9803  001C7A  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  9804  001C7C  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  9805  001C7E  2EE8               	decfsz	wreg,f,c
  9806  001C80  D7F8               	goto	u5005
  9807  001C82  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  9808  001C86  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  9809  001C8A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  9810  001C8E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  9811                           
  9812                           ; BSR set to: 0
  9813                           ;inc\CANlib.h: 420: TXB1SIDL = TXB1SIDL & 0b00011111;
  9814  001C92  010F               	movlb	15	; () banked
  9815  001C94  5132               	movf	50,w,b	;volatile
  9816  001C96  0B1F               	andlw	31
  9817  001C98  010F               	movlb	15	; () banked
  9818  001C9A  6F32               	movwf	50,b	;volatile
  9819                           
  9820                           ; BSR set to: 15
  9821                           ;inc\CANlib.h: 421: TXB1SIDL = (unsigned char) tamp;
  9822  001C9C  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  9823  001CA0                     l4534:
  9824                           
  9825                           ;inc\CANlib.h: 422: }
  9826                           ;inc\CANlib.h: 424: if (0b00000001 & flags)
  9827  001CA0  0100               	movlb	0	; () banked
  9828  001CA2  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  9829  001CA4  D003               	goto	l388
  9830                           
  9831                           ; BSR set to: 0
  9832                           ;inc\CANlib.h: 425: TXB1CONbits.TXPRI0 = 0x01;
  9833  001CA6  010F               	movlb	15	; () banked
  9834  001CA8  8130               	bsf	48,0,b	;volatile
  9835  001CAA  D002               	goto	l389
  9836  001CAC                     l388:
  9837                           
  9838                           ; BSR set to: 0
  9839                           ;inc\CANlib.h: 426: else
  9840                           ;inc\CANlib.h: 427: TXB1CONbits.TXPRI0 = 0x00;
  9841  001CAC  010F               	movlb	15	; () banked
  9842  001CAE  9130               	bcf	48,0,b	;volatile
  9843  001CB0                     l389:
  9844                           
  9845                           ; BSR set to: 15
  9846                           ;inc\CANlib.h: 428: if (0b00000010 & flags)
  9847  001CB0  0100               	movlb	0	; () banked
  9848  001CB2  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  9849  001CB4  D003               	goto	l390
  9850                           
  9851                           ; BSR set to: 0
  9852                           ;inc\CANlib.h: 429: TXB1CONbits.TXPRI1 = 0x01;
  9853  001CB6  010F               	movlb	15	; () banked
  9854  001CB8  8330               	bsf	48,1,b	;volatile
  9855  001CBA  D002               	goto	l4540
  9856  001CBC                     l390:
  9857                           
  9858                           ; BSR set to: 0
  9859                           ;inc\CANlib.h: 430: else
  9860                           ;inc\CANlib.h: 431: TXB1CONbits.TXPRI1 = 0x00;
  9861  001CBC  010F               	movlb	15	; () banked
  9862  001CBE  9330               	bcf	48,1,b	;volatile
  9863  001CC0                     l4540:
  9864                           
  9865                           ; BSR set to: 15
  9866                           ;inc\CANlib.h: 433: TXB1D0 = data[0];
  9867  001CC0  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  9868  001CC4  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  9869  001CC8  50DF               	movf	indf2,w,c
  9870  001CCA  010F               	movlb	15	; () banked
  9871  001CCC  6F36               	movwf	54,b	;volatile
  9872                           
  9873                           ; BSR set to: 15
  9874                           ;inc\CANlib.h: 434: TXB1D1 = data[1];
  9875  001CCE  0100               	movlb	0	; () banked
  9876  001CD0  EE20 F001          	lfsr	2,1
  9877  001CD4  517B               	movf	CANsendMessage@data& (0+255),w,b
  9878  001CD6  26D9               	addwf	fsr2l,f,c
  9879  001CD8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9880  001CDA  22DA               	addwfc	fsr2h,f,c
  9881  001CDC  50DF               	movf	indf2,w,c
  9882  001CDE  010F               	movlb	15	; () banked
  9883  001CE0  6F37               	movwf	55,b	;volatile
  9884                           
  9885                           ; BSR set to: 15
  9886                           ;inc\CANlib.h: 435: TXB1D2 = data[2];
  9887  001CE2  0100               	movlb	0	; () banked
  9888  001CE4  EE20 F002          	lfsr	2,2
  9889  001CE8  517B               	movf	CANsendMessage@data& (0+255),w,b
  9890  001CEA  26D9               	addwf	fsr2l,f,c
  9891  001CEC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9892  001CEE  22DA               	addwfc	fsr2h,f,c
  9893  001CF0  50DF               	movf	indf2,w,c
  9894  001CF2  010F               	movlb	15	; () banked
  9895  001CF4  6F38               	movwf	56,b	;volatile
  9896                           
  9897                           ; BSR set to: 15
  9898                           ;inc\CANlib.h: 436: TXB1D3 = data[3];
  9899  001CF6  0100               	movlb	0	; () banked
  9900  001CF8  EE20 F003          	lfsr	2,3
  9901  001CFC  517B               	movf	CANsendMessage@data& (0+255),w,b
  9902  001CFE  26D9               	addwf	fsr2l,f,c
  9903  001D00  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9904  001D02  22DA               	addwfc	fsr2h,f,c
  9905  001D04  50DF               	movf	indf2,w,c
  9906  001D06  010F               	movlb	15	; () banked
  9907  001D08  6F39               	movwf	57,b	;volatile
  9908                           
  9909                           ; BSR set to: 15
  9910                           ;inc\CANlib.h: 437: TXB1D4 = data[4];
  9911  001D0A  0100               	movlb	0	; () banked
  9912  001D0C  EE20 F004          	lfsr	2,4
  9913  001D10  517B               	movf	CANsendMessage@data& (0+255),w,b
  9914  001D12  26D9               	addwf	fsr2l,f,c
  9915  001D14  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9916  001D16  22DA               	addwfc	fsr2h,f,c
  9917  001D18  50DF               	movf	indf2,w,c
  9918  001D1A  010F               	movlb	15	; () banked
  9919  001D1C  6F3A               	movwf	58,b	;volatile
  9920                           
  9921                           ; BSR set to: 15
  9922                           ;inc\CANlib.h: 438: TXB1D5 = data[5];
  9923  001D1E  0100               	movlb	0	; () banked
  9924  001D20  EE20 F005          	lfsr	2,5
  9925  001D24  517B               	movf	CANsendMessage@data& (0+255),w,b
  9926  001D26  26D9               	addwf	fsr2l,f,c
  9927  001D28  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9928  001D2A  22DA               	addwfc	fsr2h,f,c
  9929  001D2C  50DF               	movf	indf2,w,c
  9930  001D2E  010F               	movlb	15	; () banked
  9931  001D30  6F3B               	movwf	59,b	;volatile
  9932                           
  9933                           ; BSR set to: 15
  9934                           ;inc\CANlib.h: 439: TXB1D6 = data[6];
  9935  001D32  0100               	movlb	0	; () banked
  9936  001D34  EE20 F006          	lfsr	2,6
  9937  001D38  517B               	movf	CANsendMessage@data& (0+255),w,b
  9938  001D3A  26D9               	addwf	fsr2l,f,c
  9939  001D3C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9940  001D3E  22DA               	addwfc	fsr2h,f,c
  9941  001D40  50DF               	movf	indf2,w,c
  9942  001D42  010F               	movlb	15	; () banked
  9943  001D44  6F3C               	movwf	60,b	;volatile
  9944                           
  9945                           ; BSR set to: 15
  9946                           ;inc\CANlib.h: 440: TXB1D7 = data[7];
  9947  001D46  0100               	movlb	0	; () banked
  9948  001D48  EE20 F007          	lfsr	2,7
  9949  001D4C  517B               	movf	CANsendMessage@data& (0+255),w,b
  9950  001D4E  26D9               	addwf	fsr2l,f,c
  9951  001D50  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  9952  001D52  22DA               	addwfc	fsr2h,f,c
  9953  001D54  50DF               	movf	indf2,w,c
  9954  001D56  010F               	movlb	15	; () banked
  9955  001D58  6F3D               	movwf	61,b	;volatile
  9956                           
  9957                           ; BSR set to: 15
  9958                           ;inc\CANlib.h: 442: TXB1CONbits.TXREQ = 0x01;
  9959  001D5A  010F               	movlb	15	; () banked
  9960  001D5C  8730               	bsf	48,3,b	;volatile
  9961                           
  9962                           ; BSR set to: 15
  9963                           ;inc\CANlib.h: 444: return;
  9964  001D5E  0012               	return	
  9965  001D60                     l378:
  9966                           
  9967                           ; BSR set to: 15
  9968                           ;inc\CANlib.h: 445: }
  9969                           ;inc\CANlib.h: 449: if (TXB2CONbits.TXREQ == 0)
  9970  001D60  010F               	movlb	15	; () banked
  9971  001D62  B720               	btfsc	32,3,b	;volatile
  9972  001D64  0012               	return	
  9973                           
  9974                           ; BSR set to: 15
  9975                           ;inc\CANlib.h: 450: { TXB2DLC = dataLength;
  9976  001D66  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  9977                           
  9978                           ;inc\CANlib.h: 452: if (0b01000000 & flags)
  9979  001D6A  0100               	movlb	0	; () banked
  9980  001D6C  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  9981  001D6E  D003               	goto	l393
  9982                           
  9983                           ; BSR set to: 0
  9984                           ;inc\CANlib.h: 453: TXB2DLCbits.TXRTR = 0x01;
  9985  001D70  010F               	movlb	15	; () banked
  9986  001D72  8D25               	bsf	37,6,b	;volatile
  9987  001D74  D002               	goto	l394
  9988  001D76                     l393:
  9989                           
  9990                           ; BSR set to: 0
  9991                           ;inc\CANlib.h: 454: else
  9992                           ;inc\CANlib.h: 455: TXB2DLCbits.TXRTR = 0x00;
  9993  001D76  010F               	movlb	15	; () banked
  9994  001D78  9D25               	bcf	37,6,b	;volatile
  9995  001D7A                     l394:
  9996                           
  9997                           ; BSR set to: 15
  9998                           ;inc\CANlib.h: 457: if (CAN_TX_FRAME_MASK & flags)
  9999  001D7A  0100               	movlb	0	; () banked
 10000  001D7C  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
 10001  001D7E  D079               	goto	l395
 10002                           
 10003                           ; BSR set to: 0
 10004                           ;inc\CANlib.h: 458: {
 10005                           ;inc\CANlib.h: 459: tamp = identifier & 0x000000FF;
 10006  001D80  0100               	movlb	0	; () banked
 10007  001D82  5177               	movf	CANsendMessage@identifier& (0+255),w,b
 10008  001D84  0100               	movlb	0	; () banked
 10009  001D86  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10010  001D88  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 10011  001D8A  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 10012  001D8C  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 10013                           
 10014                           ; BSR set to: 0
 10015                           ;inc\CANlib.h: 460: TXB2EIDL = (unsigned char) tamp;
 10016  001D8E  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
 10017                           
 10018                           ; BSR set to: 0
 10019                           ;inc\CANlib.h: 462: tamp = identifier & 0x0000FF00;
 10020  001D92  0E00               	movlw	0
 10021  001D94  0100               	movlb	0	; () banked
 10022  001D96  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
 10023  001D98  0100               	movlb	0	; () banked
 10024  001D9A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10025  001D9C  0EFF               	movlw	255
 10026  001D9E  0100               	movlb	0	; () banked
 10027  001DA0  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 10028  001DA2  0100               	movlb	0	; () banked
 10029  001DA4  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 10030  001DA6  0E00               	movlw	0
 10031  001DA8  0100               	movlb	0	; () banked
 10032  001DAA  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 10033  001DAC  0100               	movlb	0	; () banked
 10034  001DAE  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 10035  001DB0  0E00               	movlw	0
 10036  001DB2  0100               	movlb	0	; () banked
 10037  001DB4  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 10038  001DB6  0100               	movlb	0	; () banked
 10039  001DB8  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;inc\CANlib.h: 463: tamp = tamp >> 8;
 10043  001DBA  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
 10044  001DBE  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 10045  001DC2  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 10046  001DC6  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 10047  001DCA  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
 10048  001DCE  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
 10049  001DD2  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
 10050  001DD6  0100               	movlb	0	; () banked
 10051  001DD8  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
 10052  001DDA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10053  001DDE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10054  001DE2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10055  001DE6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10056                           
 10057                           ; BSR set to: 0
 10058                           ;inc\CANlib.h: 464: TXB2EIDH = (unsigned char) tamp;
 10059  001DEA  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
 10060                           
 10061                           ; BSR set to: 0
 10062                           ;inc\CANlib.h: 466: TXB2SIDL = 0x00;
 10063  001DEE  0E00               	movlw	0
 10064  001DF0  010F               	movlb	15	; () banked
 10065  001DF2  6F22               	movwf	34,b	;volatile
 10066                           
 10067                           ; BSR set to: 15
 10068                           ;inc\CANlib.h: 467: TXB2SIDLbits.EXIDE = 0x01;
 10069  001DF4  010F               	movlb	15	; () banked
 10070  001DF6  8722               	bsf	34,3,b	;volatile
 10071                           
 10072                           ; BSR set to: 15
 10073                           ;inc\CANlib.h: 469: if (identifier & 0x00010000)
 10074  001DF8  0100               	movlb	0	; () banked
 10075  001DFA  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
 10076  001DFC  D002               	goto	l396
 10077                           
 10078                           ; BSR set to: 0
 10079                           ;inc\CANlib.h: 470: TXB2SIDLbits.EID16 = 0x01;
 10080  001DFE  010F               	movlb	15	; () banked
 10081  001E00  8122               	bsf	34,0,b	;volatile
 10082  001E02                     l396:
 10083                           
 10084                           ;inc\CANlib.h: 471: if (identifier & 0x00020000)
 10085  001E02  0100               	movlb	0	; () banked
 10086  001E04  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
 10087  001E06  D002               	goto	l397
 10088                           
 10089                           ; BSR set to: 0
 10090                           ;inc\CANlib.h: 472: TXB2SIDLbits.EID17 = 0x01;
 10091  001E08  010F               	movlb	15	; () banked
 10092  001E0A  8322               	bsf	34,1,b	;volatile
 10093  001E0C                     l397:
 10094                           
 10095                           ;inc\CANlib.h: 473: if (identifier & 0x00040000)
 10096  001E0C  0100               	movlb	0	; () banked
 10097  001E0E  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
 10098  001E10  D002               	goto	l398
 10099                           
 10100                           ; BSR set to: 0
 10101                           ;inc\CANlib.h: 474: TXB2SIDLbits.SID0 = 0x01;
 10102  001E12  010F               	movlb	15	; () banked
 10103  001E14  8B22               	bsf	34,5,b	;volatile
 10104  001E16                     l398:
 10105                           
 10106                           ;inc\CANlib.h: 475: if (identifier & 0x00080000)
 10107  001E16  0100               	movlb	0	; () banked
 10108  001E18  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
 10109  001E1A  D002               	goto	l399
 10110                           
 10111                           ; BSR set to: 0
 10112                           ;inc\CANlib.h: 476: TXB2SIDLbits.SID1 = 0x01;
 10113  001E1C  010F               	movlb	15	; () banked
 10114  001E1E  8D22               	bsf	34,6,b	;volatile
 10115  001E20                     l399:
 10116                           
 10117                           ;inc\CANlib.h: 477: if (identifier & 0x00100000)
 10118  001E20  0100               	movlb	0	; () banked
 10119  001E22  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
 10120  001E24  D002               	goto	l4590
 10121                           
 10122                           ; BSR set to: 0
 10123                           ;inc\CANlib.h: 478: TXB2SIDLbits.SID2 = 0x01;
 10124  001E26  010F               	movlb	15	; () banked
 10125  001E28  8F22               	bsf	34,7,b	;volatile
 10126  001E2A                     l4590:
 10127                           
 10128                           ;inc\CANlib.h: 480: tamp = (identifier >> 21);
 10129  001E2A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
 10130  001E2E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 10131  001E32  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 10132  001E36  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 10133  001E3A  0E16               	movlw	22
 10134  001E3C  D006               	goto	u5110
 10135  001E3E                     u5115:
 10136  001E3E  0100               	movlb	0	; () banked
 10137  001E40  90D8               	bcf	status,0,c
 10138  001E42  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 10139  001E44  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 10140  001E46  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 10141  001E48  337F               	rrcf	??_CANsendMessage& (0+255),f,b
 10142  001E4A                     u5110:
 10143  001E4A  2EE8               	decfsz	wreg,f,c
 10144  001E4C  D7F8               	goto	u5115
 10145  001E4E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10146  001E52  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10147  001E56  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10148  001E5A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10149                           
 10150                           ; BSR set to: 0
 10151                           ;inc\CANlib.h: 481: tamp = tamp & 0x000000FF;
 10152  001E5E  0100               	movlb	0	; () banked
 10153  001E60  5183               	movf	CANsendMessage@tamp& (0+255),w,b
 10154  001E62  0100               	movlb	0	; () banked
 10155  001E64  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10156  001E66  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 10157  001E68  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 10158  001E6A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 10159                           
 10160                           ; BSR set to: 0
 10161                           ;inc\CANlib.h: 482: TXB2SIDH = (unsigned char) tamp;
 10162  001E6C  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 10163                           
 10164                           ;inc\CANlib.h: 483: }
 10165  001E70  D059               	goto	l4610
 10166  001E72                     l395:
 10167                           
 10168                           ; BSR set to: 0
 10169                           ;inc\CANlib.h: 485: else
 10170                           ;inc\CANlib.h: 487: {
 10171                           ;inc\CANlib.h: 488: TXB2SIDLbits.EXIDE = 0x00;
 10172  001E72  010F               	movlb	15	; () banked
 10173  001E74  9722               	bcf	34,3,b	;volatile
 10174                           
 10175                           ; BSR set to: 15
 10176                           ;inc\CANlib.h: 490: tamp = (identifier >> 3);
 10177  001E76  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
 10178  001E7A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
 10179  001E7E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
 10180  001E82  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
 10181  001E86  0E04               	movlw	4
 10182  001E88  D006               	goto	u5120
 10183  001E8A                     u5125:
 10184  001E8A  0100               	movlb	0	; () banked
 10185  001E8C  90D8               	bcf	status,0,c
 10186  001E8E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
 10187  001E90  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
 10188  001E92  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
 10189  001E94  337F               	rrcf	??_CANsendMessage& (0+255),f,b
 10190  001E96                     u5120:
 10191  001E96  2EE8               	decfsz	wreg,f,c
 10192  001E98  D7F8               	goto	u5125
 10193  001E9A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10194  001E9E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10195  001EA2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10196  001EA6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10197                           
 10198                           ; BSR set to: 0
 10199                           ;inc\CANlib.h: 491: tamp = tamp & 0x000000FF;
 10200  001EAA  0100               	movlb	0	; () banked
 10201  001EAC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
 10202  001EAE  0100               	movlb	0	; () banked
 10203  001EB0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10204  001EB2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
 10205  001EB4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
 10206  001EB6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
 10207                           
 10208                           ; BSR set to: 0
 10209                           ;inc\CANlib.h: 492: TXB2SIDH = (unsigned char) tamp;
 10210  001EB8  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
 10211                           
 10212                           ; BSR set to: 0
 10213                           ;inc\CANlib.h: 494: tamp = identifier & 0x00000007;
 10214  001EBC  0E07               	movlw	7
 10215  001EBE  0100               	movlb	0	; () banked
 10216  001EC0  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
 10217  001EC2  0100               	movlb	0	; () banked
 10218  001EC4  6F83               	movwf	CANsendMessage@tamp& (0+255),b
 10219  001EC6  0E00               	movlw	0
 10220  001EC8  0100               	movlb	0	; () banked
 10221  001ECA  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
 10222  001ECC  0100               	movlb	0	; () banked
 10223  001ECE  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
 10224  001ED0  0E00               	movlw	0
 10225  001ED2  0100               	movlb	0	; () banked
 10226  001ED4  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
 10227  001ED6  0100               	movlb	0	; () banked
 10228  001ED8  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
 10229  001EDA  0E00               	movlw	0
 10230  001EDC  0100               	movlb	0	; () banked
 10231  001EDE  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
 10232  001EE0  0100               	movlb	0	; () banked
 10233  001EE2  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
 10234                           
 10235                           ; BSR set to: 0
 10236                           ;inc\CANlib.h: 495: tamp = tamp << 5;
 10237  001EE4  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
 10238  001EE8  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
 10239  001EEC  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
 10240  001EF0  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
 10241  001EF4  0E05               	movlw	5
 10242  001EF6                     u5135:
 10243  001EF6  90D8               	bcf	status,0,c
 10244  001EF8  0100               	movlb	0	; () banked
 10245  001EFA  377F               	rlcf	??_CANsendMessage& (0+255),f,b
 10246  001EFC  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
 10247  001EFE  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
 10248  001F00  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
 10249  001F02  2EE8               	decfsz	wreg,f,c
 10250  001F04  D7F8               	goto	u5135
 10251  001F06  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
 10252  001F0A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
 10253  001F0E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
 10254  001F12  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
 10255                           
 10256                           ; BSR set to: 0
 10257                           ;inc\CANlib.h: 496: TXB2SIDL = TXB2SIDL & 0b00011111;
 10258  001F16  010F               	movlb	15	; () banked
 10259  001F18  5122               	movf	34,w,b	;volatile
 10260  001F1A  0B1F               	andlw	31
 10261  001F1C  010F               	movlb	15	; () banked
 10262  001F1E  6F22               	movwf	34,b	;volatile
 10263                           
 10264                           ; BSR set to: 15
 10265                           ;inc\CANlib.h: 497: TXB2SIDL = (unsigned char) tamp;
 10266  001F20  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
 10267  001F24                     l4610:
 10268                           
 10269                           ;inc\CANlib.h: 498: }
 10270                           ;inc\CANlib.h: 500: if (0b00000001 & flags)
 10271  001F24  0100               	movlb	0	; () banked
 10272  001F26  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
 10273  001F28  D003               	goto	l402
 10274                           
 10275                           ; BSR set to: 0
 10276                           ;inc\CANlib.h: 501: TXB2CONbits.TXPRI0 = 0x01;
 10277  001F2A  010F               	movlb	15	; () banked
 10278  001F2C  8120               	bsf	32,0,b	;volatile
 10279  001F2E  D002               	goto	l403
 10280  001F30                     l402:
 10281                           
 10282                           ; BSR set to: 0
 10283                           ;inc\CANlib.h: 502: else
 10284                           ;inc\CANlib.h: 503: TXB2CONbits.TXPRI0 = 0x00;
 10285  001F30  010F               	movlb	15	; () banked
 10286  001F32  9120               	bcf	32,0,b	;volatile
 10287  001F34                     l403:
 10288                           
 10289                           ; BSR set to: 15
 10290                           ;inc\CANlib.h: 504: if (0b00000010 & flags)
 10291  001F34  0100               	movlb	0	; () banked
 10292  001F36  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
 10293  001F38  D003               	goto	l404
 10294                           
 10295                           ; BSR set to: 0
 10296                           ;inc\CANlib.h: 505: TXB2CONbits.TXPRI1 = 0x01;
 10297  001F3A  010F               	movlb	15	; () banked
 10298  001F3C  8320               	bsf	32,1,b	;volatile
 10299  001F3E  D002               	goto	l4616
 10300  001F40                     l404:
 10301                           
 10302                           ; BSR set to: 0
 10303                           ;inc\CANlib.h: 506: else
 10304                           ;inc\CANlib.h: 507: TXB2CONbits.TXPRI1 = 0x00;
 10305  001F40  010F               	movlb	15	; () banked
 10306  001F42  9320               	bcf	32,1,b	;volatile
 10307  001F44                     l4616:
 10308                           
 10309                           ; BSR set to: 15
 10310                           ;inc\CANlib.h: 509: TXB2D0 = data[0];
 10311  001F44  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
 10312  001F48  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
 10313  001F4C  50DF               	movf	indf2,w,c
 10314  001F4E  010F               	movlb	15	; () banked
 10315  001F50  6F26               	movwf	38,b	;volatile
 10316                           
 10317                           ; BSR set to: 15
 10318                           ;inc\CANlib.h: 510: TXB2D1 = data[1];
 10319  001F52  0100               	movlb	0	; () banked
 10320  001F54  EE20 F001          	lfsr	2,1
 10321  001F58  517B               	movf	CANsendMessage@data& (0+255),w,b
 10322  001F5A  26D9               	addwf	fsr2l,f,c
 10323  001F5C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10324  001F5E  22DA               	addwfc	fsr2h,f,c
 10325  001F60  50DF               	movf	indf2,w,c
 10326  001F62  010F               	movlb	15	; () banked
 10327  001F64  6F27               	movwf	39,b	;volatile
 10328                           
 10329                           ; BSR set to: 15
 10330                           ;inc\CANlib.h: 511: TXB2D2 = data[2];
 10331  001F66  0100               	movlb	0	; () banked
 10332  001F68  EE20 F002          	lfsr	2,2
 10333  001F6C  517B               	movf	CANsendMessage@data& (0+255),w,b
 10334  001F6E  26D9               	addwf	fsr2l,f,c
 10335  001F70  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10336  001F72  22DA               	addwfc	fsr2h,f,c
 10337  001F74  50DF               	movf	indf2,w,c
 10338  001F76  010F               	movlb	15	; () banked
 10339  001F78  6F28               	movwf	40,b	;volatile
 10340                           
 10341                           ; BSR set to: 15
 10342                           ;inc\CANlib.h: 512: TXB2D3 = data[3];
 10343  001F7A  0100               	movlb	0	; () banked
 10344  001F7C  EE20 F003          	lfsr	2,3
 10345  001F80  517B               	movf	CANsendMessage@data& (0+255),w,b
 10346  001F82  26D9               	addwf	fsr2l,f,c
 10347  001F84  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10348  001F86  22DA               	addwfc	fsr2h,f,c
 10349  001F88  50DF               	movf	indf2,w,c
 10350  001F8A  010F               	movlb	15	; () banked
 10351  001F8C  6F29               	movwf	41,b	;volatile
 10352                           
 10353                           ; BSR set to: 15
 10354                           ;inc\CANlib.h: 513: TXB2D4 = data[4];
 10355  001F8E  0100               	movlb	0	; () banked
 10356  001F90  EE20 F004          	lfsr	2,4
 10357  001F94  517B               	movf	CANsendMessage@data& (0+255),w,b
 10358  001F96  26D9               	addwf	fsr2l,f,c
 10359  001F98  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10360  001F9A  22DA               	addwfc	fsr2h,f,c
 10361  001F9C  50DF               	movf	indf2,w,c
 10362  001F9E  010F               	movlb	15	; () banked
 10363  001FA0  6F2A               	movwf	42,b	;volatile
 10364                           
 10365                           ; BSR set to: 15
 10366                           ;inc\CANlib.h: 514: TXB2D5 = data[5];
 10367  001FA2  0100               	movlb	0	; () banked
 10368  001FA4  EE20 F005          	lfsr	2,5
 10369  001FA8  517B               	movf	CANsendMessage@data& (0+255),w,b
 10370  001FAA  26D9               	addwf	fsr2l,f,c
 10371  001FAC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10372  001FAE  22DA               	addwfc	fsr2h,f,c
 10373  001FB0  50DF               	movf	indf2,w,c
 10374  001FB2  010F               	movlb	15	; () banked
 10375  001FB4  6F2B               	movwf	43,b	;volatile
 10376                           
 10377                           ; BSR set to: 15
 10378                           ;inc\CANlib.h: 515: TXB2D6 = data[6];
 10379  001FB6  0100               	movlb	0	; () banked
 10380  001FB8  EE20 F006          	lfsr	2,6
 10381  001FBC  517B               	movf	CANsendMessage@data& (0+255),w,b
 10382  001FBE  26D9               	addwf	fsr2l,f,c
 10383  001FC0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10384  001FC2  22DA               	addwfc	fsr2h,f,c
 10385  001FC4  50DF               	movf	indf2,w,c
 10386  001FC6  010F               	movlb	15	; () banked
 10387  001FC8  6F2C               	movwf	44,b	;volatile
 10388                           
 10389                           ; BSR set to: 15
 10390                           ;inc\CANlib.h: 516: TXB2D7 = data[7];
 10391  001FCA  0100               	movlb	0	; () banked
 10392  001FCC  EE20 F007          	lfsr	2,7
 10393  001FD0  517B               	movf	CANsendMessage@data& (0+255),w,b
 10394  001FD2  26D9               	addwf	fsr2l,f,c
 10395  001FD4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
 10396  001FD6  22DA               	addwfc	fsr2h,f,c
 10397  001FD8  50DF               	movf	indf2,w,c
 10398  001FDA  010F               	movlb	15	; () banked
 10399  001FDC  6F2D               	movwf	45,b	;volatile
 10400                           
 10401                           ; BSR set to: 15
 10402                           ;inc\CANlib.h: 518: TXB2CONbits.TXREQ = 0x01;
 10403  001FDE  010F               	movlb	15	; () banked
 10404  001FE0  8720               	bsf	32,3,b	;volatile
 10405                           
 10406                           ; BSR set to: 15
 10407                           ;inc\CANlib.h: 520: return;
 10408  001FE2  0012               	return	
 10409  001FE4                     __end_of_CANsendMessage:
 10410                           	opt stack 0
 10411                           tblptru	equ	0xFF8
 10412                           tblptrh	equ	0xFF7
 10413                           tblptrl	equ	0xFF6
 10414                           tablat	equ	0xFF5
 10415                           prodh	equ	0xFF4
 10416                           prodl	equ	0xFF3
 10417                           postinc0	equ	0xFEE
 10418                           wreg	equ	0xFE8
 10419                           postdec1	equ	0xFE5
 10420                           fsr1l	equ	0xFE1
 10421                           indf2	equ	0xFDF
 10422                           postinc2	equ	0xFDE
 10423                           postdec2	equ	0xFDD
 10424                           fsr2h	equ	0xFDA
 10425                           fsr2l	equ	0xFD9
 10426                           status	equ	0xFD8
 10427                           
 10428 ;; *************** function _CANisTxReady *****************
 10429 ;; Defined at:
 10430 ;;		line 1154 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 10431 ;; Parameters:    Size  Location     Type
 10432 ;;		None
 10433 ;; Auto vars:     Size  Location     Type
 10434 ;;		None
 10435 ;; Return value:  Size  Location     Type
 10436 ;;                  1    wreg      unsigned char 
 10437 ;; Registers used:
 10438 ;;		wreg, status,2
 10439 ;; Tracked objects:
 10440 ;;		On entry : 0/0
 10441 ;;		On exit  : 0/0
 10442 ;;		Unchanged: 0/0
 10443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10445 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10447 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10448 ;;Total ram usage:        1 bytes
 10449 ;; Hardware stack levels used:    1
 10450 ;; Hardware stack levels required when called:    4
 10451 ;; This function calls:
 10452 ;;		Nothing
 10453 ;; This function is called by:
 10454 ;;		_park_search
 10455 ;;		_can_send
 10456 ;; This function uses a non-reentrant model
 10457 ;;
 10458                           
 10459                           	psect	text28
 10460  005C06                     __ptext28:
 10461                           	opt stack 0
 10462  005C06                     _CANisTxReady:
 10463                           	opt stack 23
 10464                           
 10465                           ;inc\CANlib.h: 1156: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
 10466                           
 10467                           ; BSR set to: 15
 10468                           ;incstack = 0
 10469  005C06  0E01               	movlw	1
 10470  005C08  0100               	movlb	0	; () banked
 10471  005C0A  6F77               	movwf	_CANisTxReady$2845& (0+255),b
 10472                           
 10473                           ; BSR set to: 0
 10474  005C0C  010F               	movlb	15	; () banked
 10475  005C0E  A740               	btfss	64,3,b	;volatile
 10476  005C10  D009               	goto	l556
 10477                           
 10478                           ; BSR set to: 15
 10479  005C12  010F               	movlb	15	; () banked
 10480  005C14  A730               	btfss	48,3,b	;volatile
 10481  005C16  D006               	goto	l556
 10482                           
 10483                           ; BSR set to: 15
 10484  005C18  010F               	movlb	15	; () banked
 10485  005C1A  A720               	btfss	32,3,b	;volatile
 10486  005C1C  D003               	goto	l556
 10487                           
 10488                           ; BSR set to: 15
 10489  005C1E  0E00               	movlw	0
 10490  005C20  0100               	movlb	0	; () banked
 10491  005C22  6F77               	movwf	_CANisTxReady$2845& (0+255),b
 10492  005C24                     l556:
 10493  005C24  0100               	movlb	0	; () banked
 10494  005C26  5177               	movf	_CANisTxReady$2845& (0+255),w,b
 10495  005C28  0012               	return	
 10496  005C2A                     __end_of_CANisTxReady:
 10497                           	opt stack 0
 10498                           tblptru	equ	0xFF8
 10499                           tblptrh	equ	0xFF7
 10500                           tblptrl	equ	0xFF6
 10501                           tablat	equ	0xFF5
 10502                           prodh	equ	0xFF4
 10503                           prodl	equ	0xFF3
 10504                           postinc0	equ	0xFEE
 10505                           wreg	equ	0xFE8
 10506                           postdec1	equ	0xFE5
 10507                           fsr1l	equ	0xFE1
 10508                           indf2	equ	0xFDF
 10509                           postinc2	equ	0xFDE
 10510                           postdec2	equ	0xFDD
 10511                           fsr2h	equ	0xFDA
 10512                           fsr2l	equ	0xFD9
 10513                           status	equ	0xFD8
 10514                           
 10515 ;; *************** function _configurazione *****************
 10516 ;; Defined at:
 10517 ;;		line 385 in file "parcheggio.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;		None
 10520 ;; Auto vars:     Size  Location     Type
 10521 ;;		None
 10522 ;; Return value:  Size  Location     Type
 10523 ;;		None               void
 10524 ;; Registers used:
 10525 ;;		wreg, status,2, status,0, cstack
 10526 ;; Tracked objects:
 10527 ;;		On entry : 0/0
 10528 ;;		On exit  : 0/0
 10529 ;;		Unchanged: 0/0
 10530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10535 ;;Total ram usage:        0 bytes
 10536 ;; Hardware stack levels used:    1
 10537 ;; Hardware stack levels required when called:    6
 10538 ;; This function calls:
 10539 ;;		_CANInitialize
 10540 ;; This function is called by:
 10541 ;;		_main
 10542 ;; This function uses a non-reentrant model
 10543 ;;
 10544                           
 10545                           	psect	text29
 10546  005974                     __ptext29:
 10547                           	opt stack 0
 10548  005974                     _configurazione:
 10549                           	opt stack 24
 10550                           
 10551                           ;parcheggio.c: 386: LATA = 0x00;
 10552                           
 10553                           ; BSR set to: 0
 10554                           ;incstack = 0
 10555  005974  0E00               	movlw	0
 10556  005976  6E89               	movwf	3977,c	;volatile
 10557                           
 10558                           ;parcheggio.c: 387: TRISA = 0b11110000;
 10559  005978  0EF0               	movlw	240
 10560  00597A  6E92               	movwf	3986,c	;volatile
 10561                           
 10562                           ;parcheggio.c: 389: LATB = 0x00;
 10563  00597C  0E00               	movlw	0
 10564  00597E  6E8A               	movwf	3978,c	;volatile
 10565                           
 10566                           ;parcheggio.c: 390: TRISB = 0b10001010;
 10567  005980  0E8A               	movlw	138
 10568  005982  6E93               	movwf	3987,c	;volatile
 10569                           
 10570                           ;parcheggio.c: 392: LATC = 0x00;
 10571  005984  0E00               	movlw	0
 10572  005986  6E8B               	movwf	3979,c	;volatile
 10573                           
 10574                           ;parcheggio.c: 393: TRISC = 0b11111111;
 10575  005988  6894               	setf	3988,c	;volatile
 10576                           
 10577                           ;parcheggio.c: 395: ADCON1 = 0xFF;
 10578  00598A  68C1               	setf	4033,c	;volatile
 10579                           
 10580                           ;parcheggio.c: 396: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
 10581  00598C  0E06               	movlw	6
 10582  00598E  0100               	movlb	0	; () banked
 10583  005990  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 10584  005992  0E05               	movlw	5
 10585  005994  0100               	movlb	0	; () banked
 10586  005996  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
 10587  005998  0E01               	movlw	1
 10588  00599A  0100               	movlb	0	; () banked
 10589  00599C  6F87               	movwf	CANInitialize@SJW& (0+255),b
 10590  00599E  0E03               	movlw	3
 10591  0059A0  0100               	movlb	0	; () banked
 10592  0059A2  6F88               	movwf	CANInitialize@BRP& (0+255),b
 10593  0059A4  0E9D               	movlw	157
 10594  0059A6  0100               	movlb	0	; () banked
 10595  0059A8  6F89               	movwf	CANInitialize@flags& (0+255),b
 10596  0059AA  0E04               	movlw	4
 10597  0059AC  EC88  F025         	call	_CANInitialize
 10598                           
 10599                           ;parcheggio.c: 398: RCONbits.IPEN = 1;
 10600  0059B0  8ED0               	bsf	4048,7,c	;volatile
 10601                           
 10602                           ;parcheggio.c: 399: PIR3bits.RXB1IF = 0;
 10603  0059B2  92A4               	bcf	4004,1,c	;volatile
 10604                           
 10605                           ;parcheggio.c: 400: PIR3bits.RXB0IF = 0;
 10606  0059B4  90A4               	bcf	4004,0,c	;volatile
 10607                           
 10608                           ;parcheggio.c: 401: IPR3bits.RXB1IP = 0;
 10609  0059B6  92A5               	bcf	4005,1,c	;volatile
 10610                           
 10611                           ;parcheggio.c: 402: IPR3bits.RXB0IP = 0;
 10612  0059B8  90A5               	bcf	4005,0,c	;volatile
 10613                           
 10614                           ;parcheggio.c: 403: PIE3bits.RXB1IE = 1;
 10615  0059BA  82A3               	bsf	4003,1,c	;volatile
 10616                           
 10617                           ;parcheggio.c: 404: PIE3bits.RXB0IE = 1;
 10618  0059BC  80A3               	bsf	4003,0,c	;volatile
 10619                           
 10620                           ;parcheggio.c: 405: INTCON2bits.TMR0IP = 0;
 10621  0059BE  94F1               	bcf	intcon2,2,c	;volatile
 10622                           
 10623                           ;parcheggio.c: 406: T0CON = 0x80;
 10624  0059C0  0E80               	movlw	128
 10625  0059C2  6ED5               	movwf	4053,c	;volatile
 10626                           
 10627                           ;parcheggio.c: 407: T3CON = 0x11;
 10628  0059C4  0E11               	movlw	17
 10629  0059C6  6EB1               	movwf	4017,c	;volatile
 10630                           
 10631                           ;parcheggio.c: 408: TMR0H = 0x34;
 10632  0059C8  0E34               	movlw	52
 10633  0059CA  6ED7               	movwf	4055,c	;volatile
 10634                           
 10635                           ;parcheggio.c: 409: TMR0L = 0xE0;
 10636  0059CC  0EE0               	movlw	224
 10637  0059CE  6ED6               	movwf	4054,c	;volatile
 10638                           
 10639                           ;parcheggio.c: 410: INTCONbits.TMR0IF = 0;
 10640  0059D0  94F2               	bcf	intcon,2,c	;volatile
 10641                           
 10642                           ;parcheggio.c: 411: INTCONbits.TMR0IE = 1;
 10643  0059D2  8AF2               	bsf	intcon,5,c	;volatile
 10644                           
 10645                           ;parcheggio.c: 412: INTCON2bits.INTEDG0 = 1;
 10646  0059D4  8CF1               	bsf	intcon2,6,c	;volatile
 10647                           
 10648                           ;parcheggio.c: 413: INTCONbits.INT0IF = 0;
 10649  0059D6  92F2               	bcf	intcon,1,c	;volatile
 10650                           
 10651                           ;parcheggio.c: 414: INTCONbits.INT0IE = 0;
 10652  0059D8  98F2               	bcf	intcon,4,c	;volatile
 10653                           
 10654                           ;parcheggio.c: 415: INTCONbits.GIEL = 1;
 10655  0059DA  8CF2               	bsf	intcon,6,c	;volatile
 10656                           
 10657                           ;parcheggio.c: 416: INTCONbits.GIEH = 1;
 10658  0059DC  8EF2               	bsf	intcon,7,c	;volatile
 10659  0059DE  0012               	return		;funcret
 10660  0059E0                     __end_of_configurazione:
 10661                           	opt stack 0
 10662                           tblptru	equ	0xFF8
 10663                           tblptrh	equ	0xFF7
 10664                           tblptrl	equ	0xFF6
 10665                           tablat	equ	0xFF5
 10666                           prodh	equ	0xFF4
 10667                           prodl	equ	0xFF3
 10668                           intcon	equ	0xFF2
 10669                           intcon2	equ	0xFF1
 10670                           postinc0	equ	0xFEE
 10671                           wreg	equ	0xFE8
 10672                           postdec1	equ	0xFE5
 10673                           fsr1l	equ	0xFE1
 10674                           indf2	equ	0xFDF
 10675                           postinc2	equ	0xFDE
 10676                           postdec2	equ	0xFDD
 10677                           fsr2h	equ	0xFDA
 10678                           fsr2l	equ	0xFD9
 10679                           status	equ	0xFD8
 10680                           
 10681 ;; *************** function _CANInitialize *****************
 10682 ;; Defined at:
 10683 ;;		line 218 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 10684 ;; Parameters:    Size  Location     Type
 10685 ;;  propSeg         1    wreg     unsigned char 
 10686 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
 10687 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
 10688 ;;  SJW             1   39[BANK0 ] unsigned char 
 10689 ;;  BRP             1   40[BANK0 ] unsigned char 
 10690 ;;  flags           1   41[BANK0 ] enum E16313
 10691 ;; Auto vars:     Size  Location     Type
 10692 ;;  propSeg         1   46[BANK0 ] unsigned char 
 10693 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
 10694 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
 10695 ;; Return value:  Size  Location     Type
 10696 ;;		None               void
 10697 ;; Registers used:
 10698 ;;		wreg, status,2, status,0, cstack
 10699 ;; Tracked objects:
 10700 ;;		On entry : 0/0
 10701 ;;		On exit  : 0/0
 10702 ;;		Unchanged: 0/0
 10703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10704 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10705 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10706 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10707 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10708 ;;Total ram usage:       12 bytes
 10709 ;; Hardware stack levels used:    1
 10710 ;; Hardware stack levels required when called:    5
 10711 ;; This function calls:
 10712 ;;		_CANOperationMode
 10713 ;;		_CANSetFilter
 10714 ;;		_CANSetMask
 10715 ;; This function is called by:
 10716 ;;		_configurazione
 10717 ;; This function uses a non-reentrant model
 10718 ;;
 10719                           
 10720                           	psect	text30
 10721  004B10                     __ptext30:
 10722                           	opt stack 0
 10723  004B10                     _CANInitialize:
 10724                           	opt stack 24
 10725                           
 10726                           ;incstack = 0
 10727                           ;CANInitialize@propSeg stored from wreg
 10728  004B10  0100               	movlb	0	; () banked
 10729  004B12  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
 10730                           
 10731                           ;inc\CANlib.h: 220: BYTE FilterConfig1;
 10732                           ;inc\CANlib.h: 221: BYTE FilterConfig2;
 10733                           ;inc\CANlib.h: 223: CANOperationMode(CAN_OP_MODE_CONFIG);
 10734  004B14  0E80               	movlw	128
 10735  004B16  EC15  F02E         	call	_CANOperationMode
 10736                           
 10737                           ;inc\CANlib.h: 225: BRGCON1 = 0x00;
 10738  004B1A  0E00               	movlw	0
 10739  004B1C  6E70               	movwf	3952,c	;volatile
 10740                           
 10741                           ;inc\CANlib.h: 226: BRGCON2 = 0x00;
 10742  004B1E  0E00               	movlw	0
 10743  004B20  6E71               	movwf	3953,c	;volatile
 10744                           
 10745                           ;inc\CANlib.h: 227: BRGCON3 = 0x00;
 10746  004B22  0E00               	movlw	0
 10747  004B24  6E72               	movwf	3954,c	;volatile
 10748                           
 10749                           ;inc\CANlib.h: 229: SJW= SJW << 6;
 10750  004B26  0100               	movlb	0	; () banked
 10751  004B28  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
 10752  004B2A  42E8               	rrncf	wreg,f,c
 10753  004B2C  0BC0               	andlw	192
 10754  004B2E  0100               	movlb	0	; () banked
 10755  004B30  6F87               	movwf	CANInitialize@SJW& (0+255),b
 10756                           
 10757                           ; BSR set to: 0
 10758                           ;inc\CANlib.h: 230: BRGCON1 |= SJW;
 10759  004B32  0100               	movlb	0	; () banked
 10760  004B34  5187               	movf	CANInitialize@SJW& (0+255),w,b
 10761  004B36  1270               	iorwf	3952,f,c	;volatile
 10762                           
 10763                           ; BSR set to: 0
 10764                           ;inc\CANlib.h: 231: BRGCON1 |= BRP;
 10765  004B38  0100               	movlb	0	; () banked
 10766  004B3A  5188               	movf	CANInitialize@BRP& (0+255),w,b
 10767  004B3C  1270               	iorwf	3952,f,c	;volatile
 10768                           
 10769                           ; BSR set to: 0
 10770                           ;inc\CANlib.h: 233: BRGCON2 |= propSeg;
 10771  004B3E  0100               	movlb	0	; () banked
 10772  004B40  518E               	movf	CANInitialize@propSeg& (0+255),w,b
 10773  004B42  1271               	iorwf	3953,f,c	;volatile
 10774                           
 10775                           ; BSR set to: 0
 10776                           ;inc\CANlib.h: 234: phaseSeg1 = phaseSeg1 <<3;
 10777  004B44  0100               	movlb	0	; () banked
 10778  004B46  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
 10779  004B48  42E8               	rrncf	wreg,f,c
 10780  004B4A  0BF8               	andlw	248
 10781  004B4C  0100               	movlb	0	; () banked
 10782  004B4E  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 10783                           
 10784                           ; BSR set to: 0
 10785                           ;inc\CANlib.h: 235: BRGCON2 |= phaseSeg1;
 10786  004B50  0100               	movlb	0	; () banked
 10787  004B52  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
 10788  004B54  1271               	iorwf	3953,f,c	;volatile
 10789                           
 10790                           ; BSR set to: 0
 10791                           ;inc\CANlib.h: 237: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
 10792  004B56  0100               	movlb	0	; () banked
 10793  004B58  A589               	btfss	CANInitialize@flags& (0+255),2,b
 10794                           
 10795                           ; BSR set to: 0
 10796                           ;inc\CANlib.h: 238: BRGCON2bits.SAM= 1;
 10797  004B5A  8C71               	bsf	3953,6,c	;volatile
 10798                           
 10799                           ; BSR set to: 0
 10800                           ;inc\CANlib.h: 240: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
 10801  004B5C  0100               	movlb	0	; () banked
 10802  004B5E  B189               	btfsc	CANInitialize@flags& (0+255),0,b
 10803                           
 10804                           ; BSR set to: 0
 10805                           ;inc\CANlib.h: 241: BRGCON2bits.SEG2PHTS = 1;
 10806  004B60  8E71               	bsf	3953,7,c	;volatile
 10807                           
 10808                           ; BSR set to: 0
 10809                           ;inc\CANlib.h: 243: BRGCON3 |= phaseSeg2;
 10810                           
 10811                           ; BSR set to: 0
 10812  004B62  0100               	movlb	0	; () banked
 10813  004B64  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
 10814  004B66  1272               	iorwf	3954,f,c	;volatile
 10815                           
 10816                           ; BSR set to: 0
 10817                           ;inc\CANlib.h: 245: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
 10818  004B68  0100               	movlb	0	; () banked
 10819  004B6A  B389               	btfsc	CANInitialize@flags& (0+255),1,b
 10820                           
 10821                           ; BSR set to: 0
 10822                           ;inc\CANlib.h: 246: BRGCON3bits.WAKFIL = 1;
 10823  004B6C  8C72               	bsf	3954,6,c	;volatile
 10824                           
 10825                           ; BSR set to: 0
 10826                           ;inc\CANlib.h: 251: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
 10827                           
 10828                           ; BSR set to: 0
 10829  004B6E  0100               	movlb	0	; () banked
 10830  004B70  5189               	movf	CANInitialize@flags& (0+255),w,b
 10831  004B72  0B60               	andlw	96
 10832  004B74  6E60               	movwf	3936,c	;volatile
 10833                           
 10834                           ;inc\CANlib.h: 252: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
 10835  004B76  0100               	movlb	0	; () banked
 10836  004B78  5189               	movf	CANInitialize@flags& (0+255),w,b
 10837  004B7A  0B10               	andlw	16
 10838  004B7C  0AFF               	xorlw	255
 10839  004B7E  B4D8               	btfsc	status,2,c
 10840                           
 10841                           ; BSR set to: 0
 10842                           ;inc\CANlib.h: 253: RXB0CONbits.RXB0DBEN = 1;
 10843  004B80  8460               	bsf	3936,2,c	;volatile
 10844                           
 10845                           ; BSR set to: 0
 10846                           ;inc\CANlib.h: 255: RXB1CON = RXB0CON;
 10847  004B82  CF60 FF50          	movff	3936,3920	;volatile
 10848                           
 10849                           ; BSR set to: 0
 10850                           ;inc\CANlib.h: 259: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
 10851  004B86  0E00               	movlw	0
 10852  004B88  0100               	movlb	0	; () banked
 10853  004B8A  6F77               	movwf	CANSetMask@mask& (0+255),b
 10854  004B8C  0E00               	movlw	0
 10855  004B8E  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 10856  004B90  0E00               	movlw	0
 10857  004B92  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 10858  004B94  0E00               	movlw	0
 10859  004B96  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 10860  004B98  0EF7               	movlw	247
 10861  004B9A  0100               	movlb	0	; () banked
 10862  004B9C  6F7B               	movwf	CANSetMask@type& (0+255),b
 10863  004B9E  0E01               	movlw	1
 10864  004BA0  EC4E  F01D         	call	_CANSetMask
 10865                           
 10866                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
 10867  004BA4  0E00               	movlw	0
 10868  004BA6  0100               	movlb	0	; () banked
 10869  004BA8  6F77               	movwf	CANSetMask@mask& (0+255),b
 10870  004BAA  0E00               	movlw	0
 10871  004BAC  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 10872  004BAE  0E00               	movlw	0
 10873  004BB0  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 10874  004BB2  0E00               	movlw	0
 10875  004BB4  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 10876  004BB6  0EF7               	movlw	247
 10877  004BB8  0100               	movlb	0	; () banked
 10878  004BBA  6F7B               	movwf	CANSetMask@type& (0+255),b
 10879  004BBC  0E02               	movlw	2
 10880  004BBE  EC4E  F01D         	call	_CANSetMask
 10881                           
 10882                           ;inc\CANlib.h: 263: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
 10883  004BC2  D00F               	goto	l5368
 10884  004BC4                     l5362:
 10885                           
 10886                           ;inc\CANlib.h: 266: FilterConfig1 = CAN_CONFIG_XTD_MSG;
 10887  004BC4  0EF7               	movlw	247
 10888  004BC6  0100               	movlb	0	; () banked
 10889  004BC8  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
 10890  004BCA  D007               	goto	l5364
 10891  004BCC                     l358:
 10892                           
 10893                           ; BSR set to: 0
 10894                           ;inc\CANlib.h: 271: FilterConfig1 = CAN_CONFIG_STD_MSG;
 10895  004BCC  0100               	movlb	0	; () banked
 10896  004BCE  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 10897                           
 10898                           ;inc\CANlib.h: 272: FilterConfig2 = CAN_CONFIG_STD_MSG;
 10899  004BD0  0100               	movlb	0	; () banked
 10900  004BD2  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
 10901                           
 10902                           ;inc\CANlib.h: 273: break;
 10903  004BD4  D028               	goto	l5370
 10904  004BD6                     l359:
 10905                           
 10906                           ; BSR set to: 0
 10907                           ;inc\CANlib.h: 275: FilterConfig1 = CAN_CONFIG_STD_MSG;
 10908  004BD6  0100               	movlb	0	; () banked
 10909  004BD8  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 10910  004BDA                     l5364:
 10911                           
 10912                           ; BSR set to: 0
 10913                           ;inc\CANlib.h: 276: FilterConfig2 = CAN_CONFIG_XTD_MSG;
 10914  004BDA  0EF7               	movlw	247
 10915  004BDC  0100               	movlb	0	; () banked
 10916  004BDE  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
 10917                           
 10918                           ; BSR set to: 0
 10919                           ;inc\CANlib.h: 278: }
 10920                           
 10921                           ;inc\CANlib.h: 277: break;
 10922  004BE0  D022               	goto	l5370
 10923  004BE2                     l5368:
 10924  004BE2  0E9F               	movlw	159
 10925  004BE4  0100               	movlb	0	; () banked
 10926  004BE6  6F8A               	movwf	??_CANInitialize& (0+255),b
 10927  004BE8  0EFF               	movlw	255
 10928  004BEA  0100               	movlb	0	; () banked
 10929  004BEC  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
 10930  004BEE  0100               	movlb	0	; () banked
 10931  004BF0  5189               	movf	CANInitialize@flags& (0+255),w,b
 10932  004BF2  0B60               	andlw	96
 10933  004BF4  0100               	movlb	0	; () banked
 10934  004BF6  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
 10935  004BF8  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
 10936  004BFA  0100               	movlb	0	; () banked
 10937  004BFC  518A               	movf	??_CANInitialize& (0+255),w,b
 10938  004BFE  0100               	movlb	0	; () banked
 10939  004C00  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
 10940  004C02  0100               	movlb	0	; () banked
 10941  004C04  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
 10942  004C06  0100               	movlb	0	; () banked
 10943  004C08  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
 10944                           
 10945                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10946                           ; Switch size 1, requested type "space"
 10947                           ; Number of cases is 1, Range of values is 0 to 0
 10948                           ; switch strategies available:
 10949                           ; Name         Instructions Cycles
 10950                           ; simple_byte            4     3 (average)
 10951                           ;	Chosen strategy is simple_byte
 10952  004C0A  0100               	movlb	0	; () banked
 10953  004C0C  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
 10954  004C0E  0A00               	xorlw	0	; case 0
 10955  004C10  A4D8               	btfss	status,2,c
 10956  004C12  D7E1               	goto	l359
 10957                           
 10958                           ; BSR set to: 0
 10959                           ; Switch size 1, requested type "space"
 10960                           ; Number of cases is 2, Range of values is 191 to 223
 10961                           ; switch strategies available:
 10962                           ; Name         Instructions Cycles
 10963                           ; simple_byte            7     4 (average)
 10964                           ;	Chosen strategy is simple_byte
 10965  004C14  0100               	movlb	0	; () banked
 10966  004C16  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
 10967  004C18  0ABF               	xorlw	191	; case 191
 10968  004C1A  B4D8               	btfsc	status,2,c
 10969  004C1C  D7D7               	goto	l358
 10970  004C1E  0A60               	xorlw	96	; case 223
 10971  004C20  B4D8               	btfsc	status,2,c
 10972  004C22  D7D0               	goto	l5362
 10973  004C24  D7D8               	goto	l359
 10974  004C26                     l5370:
 10975                           
 10976                           ; BSR set to: 0
 10977                           ;inc\CANlib.h: 280: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
 10978  004C26  0E00               	movlw	0
 10979  004C28  0100               	movlb	0	; () banked
 10980  004C2A  6F77               	movwf	CANSetFilter@filter& (0+255),b
 10981  004C2C  0E00               	movlw	0
 10982  004C2E  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 10983  004C30  0E00               	movlw	0
 10984  004C32  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 10985  004C34  0E00               	movlw	0
 10986  004C36  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 10987  004C38  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 10988  004C3C  0E00               	movlw	0
 10989  004C3E  ECA9  F006         	call	_CANSetFilter
 10990                           
 10991                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
 10992  004C42  0E00               	movlw	0
 10993  004C44  0100               	movlb	0	; () banked
 10994  004C46  6F77               	movwf	CANSetFilter@filter& (0+255),b
 10995  004C48  0E00               	movlw	0
 10996  004C4A  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 10997  004C4C  0E00               	movlw	0
 10998  004C4E  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 10999  004C50  0E00               	movlw	0
 11000  004C52  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11001  004C54  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11002  004C58  0E01               	movlw	1
 11003  004C5A  ECA9  F006         	call	_CANSetFilter
 11004                           
 11005                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
 11006  004C5E  0E00               	movlw	0
 11007  004C60  0100               	movlb	0	; () banked
 11008  004C62  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11009  004C64  0E00               	movlw	0
 11010  004C66  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11011  004C68  0E00               	movlw	0
 11012  004C6A  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11013  004C6C  0E00               	movlw	0
 11014  004C6E  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11015  004C70  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11016  004C74  0E02               	movlw	2
 11017  004C76  ECA9  F006         	call	_CANSetFilter
 11018                           
 11019                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
 11020  004C7A  0E00               	movlw	0
 11021  004C7C  0100               	movlb	0	; () banked
 11022  004C7E  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11023  004C80  0E00               	movlw	0
 11024  004C82  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11025  004C84  0E00               	movlw	0
 11026  004C86  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11027  004C88  0E00               	movlw	0
 11028  004C8A  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11029  004C8C  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11030  004C90  0E03               	movlw	3
 11031  004C92  ECA9  F006         	call	_CANSetFilter
 11032                           
 11033                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
 11034  004C96  0E00               	movlw	0
 11035  004C98  0100               	movlb	0	; () banked
 11036  004C9A  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11037  004C9C  0E00               	movlw	0
 11038  004C9E  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11039  004CA0  0E00               	movlw	0
 11040  004CA2  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11041  004CA4  0E00               	movlw	0
 11042  004CA6  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11043  004CA8  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11044  004CAC  0E04               	movlw	4
 11045  004CAE  ECA9  F006         	call	_CANSetFilter
 11046                           
 11047                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
 11048  004CB2  0E00               	movlw	0
 11049  004CB4  0100               	movlb	0	; () banked
 11050  004CB6  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11051  004CB8  0E00               	movlw	0
 11052  004CBA  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11053  004CBC  0E00               	movlw	0
 11054  004CBE  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11055  004CC0  0E00               	movlw	0
 11056  004CC2  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11057  004CC4  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11058  004CC8  0E05               	movlw	5
 11059  004CCA  ECA9  F006         	call	_CANSetFilter
 11060                           
 11061                           ;inc\CANlib.h: 287: CANOperationMode(CAN_OP_MODE_NORMAL);
 11062  004CCE  0E00               	movlw	0
 11063  004CD0  EC15  F02E         	call	_CANOperationMode
 11064  004CD4  0012               	return		;funcret
 11065  004CD6                     __end_of_CANInitialize:
 11066                           	opt stack 0
 11067                           tblptru	equ	0xFF8
 11068                           tblptrh	equ	0xFF7
 11069                           tblptrl	equ	0xFF6
 11070                           tablat	equ	0xFF5
 11071                           prodh	equ	0xFF4
 11072                           prodl	equ	0xFF3
 11073                           intcon	equ	0xFF2
 11074                           intcon2	equ	0xFF1
 11075                           postinc0	equ	0xFEE
 11076                           wreg	equ	0xFE8
 11077                           postdec1	equ	0xFE5
 11078                           fsr1l	equ	0xFE1
 11079                           indf2	equ	0xFDF
 11080                           postinc2	equ	0xFDE
 11081                           postdec2	equ	0xFDD
 11082                           fsr2h	equ	0xFDA
 11083                           fsr2l	equ	0xFD9
 11084                           status	equ	0xFD8
 11085                           
 11086 ;; *************** function _CANSetMask *****************
 11087 ;; Defined at:
 11088 ;;		line 640 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 11089 ;; Parameters:    Size  Location     Type
 11090 ;;  numBuffer       1    wreg     enum E16347
 11091 ;;  mask            4   23[BANK0 ] unsigned long 
 11092 ;;  type            1   27[BANK0 ] enum E16313
 11093 ;; Auto vars:     Size  Location     Type
 11094 ;;  numBuffer       1   32[BANK0 ] enum E16347
 11095 ;;  tamp            4   33[BANK0 ] unsigned long 
 11096 ;; Return value:  Size  Location     Type
 11097 ;;		None               void
 11098 ;; Registers used:
 11099 ;;		wreg, status,2, status,0
 11100 ;; Tracked objects:
 11101 ;;		On entry : 0/0
 11102 ;;		On exit  : 0/0
 11103 ;;		Unchanged: 0/0
 11104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11105 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11106 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11107 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11108 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11109 ;;Total ram usage:       14 bytes
 11110 ;; Hardware stack levels used:    1
 11111 ;; Hardware stack levels required when called:    4
 11112 ;; This function calls:
 11113 ;;		Nothing
 11114 ;; This function is called by:
 11115 ;;		_CANInitialize
 11116 ;; This function uses a non-reentrant model
 11117 ;;
 11118                           
 11119                           	psect	text31
 11120  003A9C                     __ptext31:
 11121                           	opt stack 0
 11122  003A9C                     _CANSetMask:
 11123                           	opt stack 24
 11124                           
 11125                           ;incstack = 0
 11126                           ;CANSetMask@numBuffer stored from wreg
 11127  003A9C  0100               	movlb	0	; () banked
 11128  003A9E  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
 11129                           
 11130                           ;inc\CANlib.h: 643: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
 11131  003AA0  0100               	movlb	0	; () banked
 11132  003AA2  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11133  003AA4  A4D8               	btfss	status,2,c
 11134  003AA6  D056               	goto	l4840
 11135                           
 11136                           ; BSR set to: 0
 11137  003AA8  0100               	movlb	0	; () banked
 11138  003AAA  297B               	incf	CANSetMask@type& (0+255),w,b
 11139  003AAC  A4D8               	btfss	status,2,c
 11140  003AAE  D052               	goto	l4840
 11141                           
 11142                           ; BSR set to: 0
 11143                           ;inc\CANlib.h: 644: {
 11144                           ;inc\CANlib.h: 645: tamp = (mask >> 3);
 11145  003AB0  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11146  003AB4  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11147  003AB8  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11148  003ABC  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11149  003AC0  0E04               	movlw	4
 11150  003AC2  D006               	goto	u5450
 11151  003AC4                     u5455:
 11152  003AC4  0100               	movlb	0	; () banked
 11153  003AC6  90D8               	bcf	status,0,c
 11154  003AC8  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11155  003ACA  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11156  003ACC  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11157  003ACE  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11158  003AD0                     u5450:
 11159  003AD0  2EE8               	decfsz	wreg,f,c
 11160  003AD2  D7F8               	goto	u5455
 11161  003AD4  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11162  003AD8  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11163  003ADC  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11164  003AE0  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11165                           
 11166                           ; BSR set to: 0
 11167                           ;inc\CANlib.h: 646: tamp = tamp & 0x000000FF;
 11168  003AE4  0100               	movlb	0	; () banked
 11169  003AE6  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11170  003AE8  0100               	movlb	0	; () banked
 11171  003AEA  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11172  003AEC  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11173  003AEE  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11174  003AF0  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11175                           
 11176                           ; BSR set to: 0
 11177                           ;inc\CANlib.h: 647: RXM0SIDH = (unsigned char) tamp;
 11178  003AF2  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11179                           
 11180                           ; BSR set to: 0
 11181                           ;inc\CANlib.h: 649: tamp = mask & 0x00000007;
 11182  003AF6  0E07               	movlw	7
 11183  003AF8  0100               	movlb	0	; () banked
 11184  003AFA  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11185  003AFC  0100               	movlb	0	; () banked
 11186  003AFE  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11187  003B00  0E00               	movlw	0
 11188  003B02  0100               	movlb	0	; () banked
 11189  003B04  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11190  003B06  0100               	movlb	0	; () banked
 11191  003B08  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11192  003B0A  0E00               	movlw	0
 11193  003B0C  0100               	movlb	0	; () banked
 11194  003B0E  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11195  003B10  0100               	movlb	0	; () banked
 11196  003B12  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11197  003B14  0E00               	movlw	0
 11198  003B16  0100               	movlb	0	; () banked
 11199  003B18  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11200  003B1A  0100               	movlb	0	; () banked
 11201  003B1C  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11202                           
 11203                           ; BSR set to: 0
 11204                           ;inc\CANlib.h: 650: tamp = tamp << 5;
 11205  003B1E  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11206  003B22  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11207  003B26  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11208  003B2A  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11209  003B2E  0E05               	movlw	5
 11210  003B30                     u5465:
 11211  003B30  90D8               	bcf	status,0,c
 11212  003B32  0100               	movlb	0	; () banked
 11213  003B34  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11214  003B36  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11215  003B38  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11216  003B3A  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11217  003B3C  2EE8               	decfsz	wreg,f,c
 11218  003B3E  D7F8               	goto	u5465
 11219  003B40  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11220  003B44  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11221  003B48  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11222  003B4C  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11223                           
 11224                           ; BSR set to: 0
 11225                           ;inc\CANlib.h: 651: RXM0SIDL = (unsigned char) tamp;
 11226  003B50  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
 11227  003B54                     l4840:
 11228                           
 11229                           ; BSR set to: 0
 11230                           ;inc\CANlib.h: 652: }
 11231                           ;inc\CANlib.h: 654: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
 11232  003B54  0E02               	movlw	2
 11233  003B56  0100               	movlb	0	; () banked
 11234  003B58  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11235  003B5A  A4D8               	btfss	status,2,c
 11236  003B5C  D056               	goto	l4856
 11237                           
 11238                           ; BSR set to: 0
 11239  003B5E  0100               	movlb	0	; () banked
 11240  003B60  297B               	incf	CANSetMask@type& (0+255),w,b
 11241  003B62  A4D8               	btfss	status,2,c
 11242  003B64  D052               	goto	l4856
 11243                           
 11244                           ; BSR set to: 0
 11245                           ;inc\CANlib.h: 655: {
 11246                           ;inc\CANlib.h: 656: tamp = (mask >> 3);
 11247  003B66  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11248  003B6A  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11249  003B6E  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11250  003B72  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11251  003B76  0E04               	movlw	4
 11252  003B78  D006               	goto	u5490
 11253  003B7A                     u5495:
 11254  003B7A  0100               	movlb	0	; () banked
 11255  003B7C  90D8               	bcf	status,0,c
 11256  003B7E  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11257  003B80  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11258  003B82  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11259  003B84  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11260  003B86                     u5490:
 11261  003B86  2EE8               	decfsz	wreg,f,c
 11262  003B88  D7F8               	goto	u5495
 11263  003B8A  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11264  003B8E  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11265  003B92  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11266  003B96  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11267                           
 11268                           ; BSR set to: 0
 11269                           ;inc\CANlib.h: 657: tamp = tamp & 0x000000FF;
 11270  003B9A  0100               	movlb	0	; () banked
 11271  003B9C  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11272  003B9E  0100               	movlb	0	; () banked
 11273  003BA0  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11274  003BA2  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11275  003BA4  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11276  003BA6  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11277                           
 11278                           ; BSR set to: 0
 11279                           ;inc\CANlib.h: 658: RXM1SIDH = (unsigned char) tamp;
 11280  003BA8  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11281                           
 11282                           ; BSR set to: 0
 11283                           ;inc\CANlib.h: 660: tamp = mask & 0x00000007;
 11284  003BAC  0E07               	movlw	7
 11285  003BAE  0100               	movlb	0	; () banked
 11286  003BB0  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11287  003BB2  0100               	movlb	0	; () banked
 11288  003BB4  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11289  003BB6  0E00               	movlw	0
 11290  003BB8  0100               	movlb	0	; () banked
 11291  003BBA  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11292  003BBC  0100               	movlb	0	; () banked
 11293  003BBE  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11294  003BC0  0E00               	movlw	0
 11295  003BC2  0100               	movlb	0	; () banked
 11296  003BC4  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11297  003BC6  0100               	movlb	0	; () banked
 11298  003BC8  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11299  003BCA  0E00               	movlw	0
 11300  003BCC  0100               	movlb	0	; () banked
 11301  003BCE  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11302  003BD0  0100               	movlb	0	; () banked
 11303  003BD2  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11304                           
 11305                           ; BSR set to: 0
 11306                           ;inc\CANlib.h: 661: tamp = tamp << 5;
 11307  003BD4  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11308  003BD8  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11309  003BDC  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11310  003BE0  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11311  003BE4  0E05               	movlw	5
 11312  003BE6                     u5505:
 11313  003BE6  90D8               	bcf	status,0,c
 11314  003BE8  0100               	movlb	0	; () banked
 11315  003BEA  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11316  003BEC  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11317  003BEE  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11318  003BF0  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11319  003BF2  2EE8               	decfsz	wreg,f,c
 11320  003BF4  D7F8               	goto	u5505
 11321  003BF6  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11322  003BFA  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11323  003BFE  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11324  003C02  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11325                           
 11326                           ; BSR set to: 0
 11327                           ;inc\CANlib.h: 662: RXM1SIDL = (unsigned char) tamp;
 11328  003C06  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
 11329  003C0A                     l4856:
 11330                           
 11331                           ; BSR set to: 0
 11332                           ;inc\CANlib.h: 663: }
 11333                           ;inc\CANlib.h: 665: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
 11334  003C0A  0100               	movlb	0	; () banked
 11335  003C0C  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11336  003C0E  A4D8               	btfss	status,2,c
 11337  003C10  D087               	goto	l4888
 11338                           
 11339                           ; BSR set to: 0
 11340  003C12  0EF7               	movlw	247
 11341  003C14  0100               	movlb	0	; () banked
 11342  003C16  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11343  003C18  A4D8               	btfss	status,2,c
 11344  003C1A  D082               	goto	l4888
 11345                           
 11346                           ; BSR set to: 0
 11347                           ;inc\CANlib.h: 666: {
 11348                           ;inc\CANlib.h: 667: tamp = mask & 0x000000FF;
 11349  003C1C  0100               	movlb	0	; () banked
 11350  003C1E  5177               	movf	CANSetMask@mask& (0+255),w,b
 11351  003C20  0100               	movlb	0	; () banked
 11352  003C22  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11353  003C24  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11354  003C26  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11355  003C28  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11356                           
 11357                           ; BSR set to: 0
 11358                           ;inc\CANlib.h: 668: RXM0EIDL = (unsigned char) tamp;
 11359  003C2A  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
 11360                           
 11361                           ; BSR set to: 0
 11362                           ;inc\CANlib.h: 670: tamp = mask & 0x0000FF00;
 11363  003C2E  0E00               	movlw	0
 11364  003C30  0100               	movlb	0	; () banked
 11365  003C32  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11366  003C34  0100               	movlb	0	; () banked
 11367  003C36  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11368  003C38  0EFF               	movlw	255
 11369  003C3A  0100               	movlb	0	; () banked
 11370  003C3C  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11371  003C3E  0100               	movlb	0	; () banked
 11372  003C40  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11373  003C42  0E00               	movlw	0
 11374  003C44  0100               	movlb	0	; () banked
 11375  003C46  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11376  003C48  0100               	movlb	0	; () banked
 11377  003C4A  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11378  003C4C  0E00               	movlw	0
 11379  003C4E  0100               	movlb	0	; () banked
 11380  003C50  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11381  003C52  0100               	movlb	0	; () banked
 11382  003C54  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11383                           
 11384                           ; BSR set to: 0
 11385                           ;inc\CANlib.h: 671: tamp = tamp >> 8;
 11386  003C56  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11387  003C5A  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11388  003C5E  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11389  003C62  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11390  003C66  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 11391  003C6A  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 11392  003C6E  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 11393  003C72  0100               	movlb	0	; () banked
 11394  003C74  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 11395  003C76  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11396  003C7A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11397  003C7E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11398  003C82  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11399                           
 11400                           ; BSR set to: 0
 11401                           ;inc\CANlib.h: 672: RXM0EIDH = (unsigned char) tamp;
 11402  003C86  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
 11403                           
 11404                           ; BSR set to: 0
 11405                           ;inc\CANlib.h: 674: if (mask & 0x00010000)
 11406  003C8A  0100               	movlb	0	; () banked
 11407  003C8C  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 11408  003C8E  D003               	goto	l432
 11409                           
 11410                           ; BSR set to: 0
 11411                           ;inc\CANlib.h: 675: RXM0SIDLbits.EID16 = 0x01;
 11412  003C90  010F               	movlb	15	; () banked
 11413  003C92  8119               	bsf	25,0,b	;volatile
 11414  003C94  D002               	goto	l433
 11415  003C96                     l432:
 11416                           
 11417                           ; BSR set to: 0
 11418                           ;inc\CANlib.h: 676: else
 11419                           ;inc\CANlib.h: 677: RXM0SIDLbits.EID16 = 0x00;
 11420  003C96  010F               	movlb	15	; () banked
 11421  003C98  9119               	bcf	25,0,b	;volatile
 11422  003C9A                     l433:
 11423                           
 11424                           ; BSR set to: 15
 11425                           ;inc\CANlib.h: 679: if (mask & 0x00020000)
 11426  003C9A  0100               	movlb	0	; () banked
 11427  003C9C  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 11428  003C9E  D003               	goto	l434
 11429                           
 11430                           ; BSR set to: 0
 11431                           ;inc\CANlib.h: 680: RXM0SIDLbits.EID17 = 0x01;
 11432  003CA0  010F               	movlb	15	; () banked
 11433  003CA2  8319               	bsf	25,1,b	;volatile
 11434  003CA4  D002               	goto	l435
 11435  003CA6                     l434:
 11436                           
 11437                           ; BSR set to: 0
 11438                           ;inc\CANlib.h: 681: else
 11439                           ;inc\CANlib.h: 682: RXM0SIDLbits.EID17 = 0x00;
 11440  003CA6  010F               	movlb	15	; () banked
 11441  003CA8  9319               	bcf	25,1,b	;volatile
 11442  003CAA                     l435:
 11443                           
 11444                           ; BSR set to: 15
 11445                           ;inc\CANlib.h: 684: if (mask & 0x00040000)
 11446  003CAA  0100               	movlb	0	; () banked
 11447  003CAC  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 11448  003CAE  D003               	goto	l436
 11449                           
 11450                           ; BSR set to: 0
 11451                           ;inc\CANlib.h: 685: RXM0SIDLbits.SID0 = 0x01;
 11452  003CB0  010F               	movlb	15	; () banked
 11453  003CB2  8B19               	bsf	25,5,b	;volatile
 11454  003CB4  D002               	goto	l437
 11455  003CB6                     l436:
 11456                           
 11457                           ; BSR set to: 0
 11458                           ;inc\CANlib.h: 686: else
 11459                           ;inc\CANlib.h: 687: RXM0SIDLbits.SID0 = 0x00;
 11460  003CB6  010F               	movlb	15	; () banked
 11461  003CB8  9B19               	bcf	25,5,b	;volatile
 11462  003CBA                     l437:
 11463                           
 11464                           ; BSR set to: 15
 11465                           ;inc\CANlib.h: 689: if (mask & 0x00080000)
 11466  003CBA  0100               	movlb	0	; () banked
 11467  003CBC  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 11468  003CBE  D003               	goto	l438
 11469                           
 11470                           ; BSR set to: 0
 11471                           ;inc\CANlib.h: 690: RXM0SIDLbits.SID1 = 0x01;
 11472  003CC0  010F               	movlb	15	; () banked
 11473  003CC2  8D19               	bsf	25,6,b	;volatile
 11474  003CC4  D002               	goto	l439
 11475  003CC6                     l438:
 11476                           
 11477                           ; BSR set to: 0
 11478                           ;inc\CANlib.h: 691: else
 11479                           ;inc\CANlib.h: 692: RXM0SIDLbits.SID1 = 0x00;
 11480  003CC6  010F               	movlb	15	; () banked
 11481  003CC8  9D19               	bcf	25,6,b	;volatile
 11482  003CCA                     l439:
 11483                           
 11484                           ; BSR set to: 15
 11485                           ;inc\CANlib.h: 694: if (mask & 0x00100000)
 11486  003CCA  0100               	movlb	0	; () banked
 11487  003CCC  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 11488  003CCE  D003               	goto	l440
 11489                           
 11490                           ; BSR set to: 0
 11491                           ;inc\CANlib.h: 695: RXM0SIDLbits.SID2 = 0x01 ;
 11492  003CD0  010F               	movlb	15	; () banked
 11493  003CD2  8F19               	bsf	25,7,b	;volatile
 11494  003CD4  D002               	goto	l4882
 11495  003CD6                     l440:
 11496                           
 11497                           ; BSR set to: 0
 11498                           ;inc\CANlib.h: 696: else
 11499                           ;inc\CANlib.h: 697: RXM0SIDLbits.SID2 = 0x00 ;
 11500  003CD6  010F               	movlb	15	; () banked
 11501  003CD8  9F19               	bcf	25,7,b	;volatile
 11502  003CDA                     l4882:
 11503                           
 11504                           ; BSR set to: 15
 11505                           ;inc\CANlib.h: 699: tamp = (mask >> 21);
 11506  003CDA  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11507  003CDE  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11508  003CE2  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11509  003CE6  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11510  003CEA  0E16               	movlw	22
 11511  003CEC  D006               	goto	u5580
 11512  003CEE                     u5585:
 11513  003CEE  0100               	movlb	0	; () banked
 11514  003CF0  90D8               	bcf	status,0,c
 11515  003CF2  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11516  003CF4  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11517  003CF6  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11518  003CF8  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11519  003CFA                     u5580:
 11520  003CFA  2EE8               	decfsz	wreg,f,c
 11521  003CFC  D7F8               	goto	u5585
 11522  003CFE  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11523  003D02  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11524  003D06  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11525  003D0A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11526                           
 11527                           ; BSR set to: 0
 11528                           ;inc\CANlib.h: 700: tamp = tamp & 0x000000FF;
 11529  003D0E  0100               	movlb	0	; () banked
 11530  003D10  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11531  003D12  0100               	movlb	0	; () banked
 11532  003D14  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11533  003D16  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11534  003D18  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11535  003D1A  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11536                           
 11537                           ; BSR set to: 0
 11538                           ;inc\CANlib.h: 701: RXM0SIDH = (unsigned char) tamp;
 11539  003D1C  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11540  003D20                     l4888:
 11541                           
 11542                           ; BSR set to: 0
 11543                           ;inc\CANlib.h: 702: }
 11544                           ;inc\CANlib.h: 704: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
 11545  003D20  0E02               	movlw	2
 11546  003D22  0100               	movlb	0	; () banked
 11547  003D24  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11548  003D26  A4D8               	btfss	status,2,c
 11549  003D28  0012               	return	
 11550                           
 11551                           ; BSR set to: 0
 11552  003D2A  0EF7               	movlw	247
 11553  003D2C  0100               	movlb	0	; () banked
 11554  003D2E  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11555  003D30  A4D8               	btfss	status,2,c
 11556  003D32  0012               	return	
 11557                           
 11558                           ; BSR set to: 0
 11559                           ;inc\CANlib.h: 705: {
 11560                           ;inc\CANlib.h: 706: tamp = mask & 0x000000FF;
 11561  003D34  0100               	movlb	0	; () banked
 11562  003D36  5177               	movf	CANSetMask@mask& (0+255),w,b
 11563  003D38  0100               	movlb	0	; () banked
 11564  003D3A  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11565  003D3C  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11566  003D3E  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11567  003D40  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11568                           
 11569                           ; BSR set to: 0
 11570                           ;inc\CANlib.h: 707: RXM1EIDL = (unsigned char) tamp;
 11571  003D42  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
 11572                           
 11573                           ; BSR set to: 0
 11574                           ;inc\CANlib.h: 709: tamp = mask & 0x0000FF00;
 11575  003D46  0E00               	movlw	0
 11576  003D48  0100               	movlb	0	; () banked
 11577  003D4A  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11578  003D4C  0100               	movlb	0	; () banked
 11579  003D4E  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11580  003D50  0EFF               	movlw	255
 11581  003D52  0100               	movlb	0	; () banked
 11582  003D54  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11583  003D56  0100               	movlb	0	; () banked
 11584  003D58  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11585  003D5A  0E00               	movlw	0
 11586  003D5C  0100               	movlb	0	; () banked
 11587  003D5E  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11588  003D60  0100               	movlb	0	; () banked
 11589  003D62  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11590  003D64  0E00               	movlw	0
 11591  003D66  0100               	movlb	0	; () banked
 11592  003D68  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11593  003D6A  0100               	movlb	0	; () banked
 11594  003D6C  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11595                           
 11596                           ; BSR set to: 0
 11597                           ;inc\CANlib.h: 710: tamp = tamp >> 8;
 11598  003D6E  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11599  003D72  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11600  003D76  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11601  003D7A  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11602  003D7E  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 11603  003D82  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 11604  003D86  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 11605  003D8A  0100               	movlb	0	; () banked
 11606  003D8C  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 11607  003D8E  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11608  003D92  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11609  003D96  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11610  003D9A  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11611                           
 11612                           ; BSR set to: 0
 11613                           ;inc\CANlib.h: 711: RXM1EIDH = (unsigned char) tamp;
 11614  003D9E  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
 11615                           
 11616                           ; BSR set to: 0
 11617                           ;inc\CANlib.h: 713: if (mask & 0x00010000)
 11618  003DA2  0100               	movlb	0	; () banked
 11619  003DA4  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 11620  003DA6  D003               	goto	l443
 11621                           
 11622                           ; BSR set to: 0
 11623                           ;inc\CANlib.h: 714: RXM1SIDLbits.EID16 = 0x01;
 11624  003DA8  010F               	movlb	15	; () banked
 11625  003DAA  811D               	bsf	29,0,b	;volatile
 11626  003DAC  D002               	goto	l444
 11627  003DAE                     l443:
 11628                           
 11629                           ; BSR set to: 0
 11630                           ;inc\CANlib.h: 715: else
 11631                           ;inc\CANlib.h: 716: RXM1SIDLbits.EID16 = 0x00;
 11632  003DAE  010F               	movlb	15	; () banked
 11633  003DB0  911D               	bcf	29,0,b	;volatile
 11634  003DB2                     l444:
 11635                           
 11636                           ; BSR set to: 15
 11637                           ;inc\CANlib.h: 718: if (mask & 0x00020000)
 11638  003DB2  0100               	movlb	0	; () banked
 11639  003DB4  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 11640  003DB6  D003               	goto	l445
 11641                           
 11642                           ; BSR set to: 0
 11643                           ;inc\CANlib.h: 719: RXM1SIDLbits.EID17 = 0x01;
 11644  003DB8  010F               	movlb	15	; () banked
 11645  003DBA  831D               	bsf	29,1,b	;volatile
 11646  003DBC  D002               	goto	l446
 11647  003DBE                     l445:
 11648                           
 11649                           ; BSR set to: 0
 11650                           ;inc\CANlib.h: 720: else
 11651                           ;inc\CANlib.h: 721: RXM1SIDLbits.EID17 = 0x00;
 11652  003DBE  010F               	movlb	15	; () banked
 11653  003DC0  931D               	bcf	29,1,b	;volatile
 11654  003DC2                     l446:
 11655                           
 11656                           ; BSR set to: 15
 11657                           ;inc\CANlib.h: 723: if (mask & 0x00040000)
 11658  003DC2  0100               	movlb	0	; () banked
 11659  003DC4  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 11660  003DC6  D003               	goto	l447
 11661                           
 11662                           ; BSR set to: 0
 11663                           ;inc\CANlib.h: 724: RXM1SIDLbits.SID0 = 0x01;
 11664  003DC8  010F               	movlb	15	; () banked
 11665  003DCA  8B1D               	bsf	29,5,b	;volatile
 11666  003DCC  D002               	goto	l448
 11667  003DCE                     l447:
 11668                           
 11669                           ; BSR set to: 0
 11670                           ;inc\CANlib.h: 725: else
 11671                           ;inc\CANlib.h: 726: RXM1SIDLbits.SID0 = 0x00;
 11672  003DCE  010F               	movlb	15	; () banked
 11673  003DD0  9B1D               	bcf	29,5,b	;volatile
 11674  003DD2                     l448:
 11675                           
 11676                           ; BSR set to: 15
 11677                           ;inc\CANlib.h: 728: if (mask & 0x00080000)
 11678  003DD2  0100               	movlb	0	; () banked
 11679  003DD4  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 11680  003DD6  D003               	goto	l449
 11681                           
 11682                           ; BSR set to: 0
 11683                           ;inc\CANlib.h: 729: RXM1SIDLbits.SID1 = 0x01;
 11684  003DD8  010F               	movlb	15	; () banked
 11685  003DDA  8D1D               	bsf	29,6,b	;volatile
 11686  003DDC  D002               	goto	l450
 11687  003DDE                     l449:
 11688                           
 11689                           ; BSR set to: 0
 11690                           ;inc\CANlib.h: 730: else
 11691                           ;inc\CANlib.h: 731: RXM1SIDLbits.SID1 = 0x00;
 11692  003DDE  010F               	movlb	15	; () banked
 11693  003DE0  9D1D               	bcf	29,6,b	;volatile
 11694  003DE2                     l450:
 11695                           
 11696                           ; BSR set to: 15
 11697                           ;inc\CANlib.h: 733: if (mask & 0x00100000)
 11698  003DE2  0100               	movlb	0	; () banked
 11699  003DE4  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 11700  003DE6  D003               	goto	l451
 11701                           
 11702                           ; BSR set to: 0
 11703                           ;inc\CANlib.h: 734: RXM1SIDLbits.SID2 = 0x01 ;
 11704  003DE8  010F               	movlb	15	; () banked
 11705  003DEA  8F1D               	bsf	29,7,b	;volatile
 11706  003DEC  D002               	goto	l4914
 11707  003DEE                     l451:
 11708                           
 11709                           ; BSR set to: 0
 11710                           ;inc\CANlib.h: 735: else
 11711                           ;inc\CANlib.h: 736: RXM1SIDLbits.SID2 = 0x00 ;
 11712  003DEE  010F               	movlb	15	; () banked
 11713  003DF0  9F1D               	bcf	29,7,b	;volatile
 11714  003DF2                     l4914:
 11715                           
 11716                           ; BSR set to: 15
 11717                           ;inc\CANlib.h: 738: tamp = (mask >> 21);
 11718  003DF2  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11719  003DF6  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11720  003DFA  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11721  003DFE  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11722  003E02  0E16               	movlw	22
 11723  003E04  D006               	goto	u5660
 11724  003E06                     u5665:
 11725  003E06  0100               	movlb	0	; () banked
 11726  003E08  90D8               	bcf	status,0,c
 11727  003E0A  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11728  003E0C  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11729  003E0E  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11730  003E10  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11731  003E12                     u5660:
 11732  003E12  2EE8               	decfsz	wreg,f,c
 11733  003E14  D7F8               	goto	u5665
 11734  003E16  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11735  003E1A  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11736  003E1E  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11737  003E22  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11738                           
 11739                           ; BSR set to: 0
 11740                           ;inc\CANlib.h: 739: tamp = tamp & 0x000000FF;
 11741  003E26  0100               	movlb	0	; () banked
 11742  003E28  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11743  003E2A  0100               	movlb	0	; () banked
 11744  003E2C  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11745  003E2E  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11746  003E30  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11747  003E32  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11748                           
 11749                           ; BSR set to: 0
 11750                           ;inc\CANlib.h: 740: RXM1SIDH = (unsigned char) tamp;
 11751  003E34  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11752  003E38  0012               	return	
 11753  003E3A                     __end_of_CANSetMask:
 11754                           	opt stack 0
 11755                           tblptru	equ	0xFF8
 11756                           tblptrh	equ	0xFF7
 11757                           tblptrl	equ	0xFF6
 11758                           tablat	equ	0xFF5
 11759                           prodh	equ	0xFF4
 11760                           prodl	equ	0xFF3
 11761                           intcon	equ	0xFF2
 11762                           intcon2	equ	0xFF1
 11763                           postinc0	equ	0xFEE
 11764                           wreg	equ	0xFE8
 11765                           postdec1	equ	0xFE5
 11766                           fsr1l	equ	0xFE1
 11767                           indf2	equ	0xFDF
 11768                           postinc2	equ	0xFDE
 11769                           postdec2	equ	0xFDD
 11770                           fsr2h	equ	0xFDA
 11771                           fsr2l	equ	0xFD9
 11772                           status	equ	0xFD8
 11773                           
 11774 ;; *************** function _CANSetFilter *****************
 11775 ;; Defined at:
 11776 ;;		line 748 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 11777 ;; Parameters:    Size  Location     Type
 11778 ;;  numBuffer       1    wreg     enum E16350
 11779 ;;  filter          4   23[BANK0 ] unsigned long 
 11780 ;;  type            1   27[BANK0 ] enum E16313
 11781 ;; Auto vars:     Size  Location     Type
 11782 ;;  numBuffer       1   32[BANK0 ] enum E16350
 11783 ;;  tamp            4   33[BANK0 ] unsigned long 
 11784 ;; Return value:  Size  Location     Type
 11785 ;;		None               void
 11786 ;; Registers used:
 11787 ;;		wreg, status,2, status,0
 11788 ;; Tracked objects:
 11789 ;;		On entry : 0/0
 11790 ;;		On exit  : 0/0
 11791 ;;		Unchanged: 0/0
 11792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11793 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11794 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11795 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11796 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11797 ;;Total ram usage:       14 bytes
 11798 ;; Hardware stack levels used:    1
 11799 ;; Hardware stack levels required when called:    4
 11800 ;; This function calls:
 11801 ;;		Nothing
 11802 ;; This function is called by:
 11803 ;;		_CANInitialize
 11804 ;; This function uses a non-reentrant model
 11805 ;;
 11806                           
 11807                           	psect	text32
 11808  000D52                     __ptext32:
 11809                           	opt stack 0
 11810  000D52                     _CANSetFilter:
 11811                           	opt stack 24
 11812                           
 11813                           ; BSR set to: 0
 11814                           ;incstack = 0
 11815                           ;CANSetFilter@numBuffer stored from wreg
 11816  000D52  0100               	movlb	0	; () banked
 11817  000D54  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
 11818                           
 11819                           ;inc\CANlib.h: 750: unsigned long tamp;
 11820                           ;inc\CANlib.h: 752: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
 11821  000D56  0100               	movlb	0	; () banked
 11822  000D58  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 11823  000D5A  0100               	movlb	0	; () banked
 11824  000D5C  A4D8               	btfss	status,2,c
 11825  000D5E  D058               	goto	l4938
 11826                           
 11827                           ; BSR set to: 0
 11828  000D60  0100               	movlb	0	; () banked
 11829  000D62  297B               	incf	CANSetFilter@type& (0+255),w,b
 11830  000D64  A4D8               	btfss	status,2,c
 11831  000D66  D054               	goto	l4938
 11832                           
 11833                           ; BSR set to: 0
 11834                           ;inc\CANlib.h: 753: {
 11835                           ;inc\CANlib.h: 754: RXF0SIDLbits.EXIDEN = 0x00;
 11836  000D68  010F               	movlb	15	; () banked
 11837  000D6A  9701               	bcf	1,3,b	;volatile
 11838                           
 11839                           ; BSR set to: 15
 11840                           ;inc\CANlib.h: 756: tamp = (filter >> 3);
 11841  000D6C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 11842  000D70  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 11843  000D74  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 11844  000D78  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 11845  000D7C  0E04               	movlw	4
 11846  000D7E  D006               	goto	u5690
 11847  000D80                     u5695:
 11848  000D80  0100               	movlb	0	; () banked
 11849  000D82  90D8               	bcf	status,0,c
 11850  000D84  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 11851  000D86  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 11852  000D88  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 11853  000D8A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 11854  000D8C                     u5690:
 11855  000D8C  2EE8               	decfsz	wreg,f,c
 11856  000D8E  D7F8               	goto	u5695
 11857  000D90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11858  000D94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11859  000D98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11860  000D9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11861                           
 11862                           ; BSR set to: 0
 11863                           ;inc\CANlib.h: 757: tamp = tamp & 0x000000FF;
 11864  000DA0  0100               	movlb	0	; () banked
 11865  000DA2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 11866  000DA4  0100               	movlb	0	; () banked
 11867  000DA6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11868  000DA8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11869  000DAA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11870  000DAC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11871                           
 11872                           ; BSR set to: 0
 11873                           ;inc\CANlib.h: 758: RXF0SIDH = (unsigned char) tamp;
 11874  000DAE  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 11875                           
 11876                           ; BSR set to: 0
 11877                           ;inc\CANlib.h: 760: tamp = filter & 0x00000007;
 11878  000DB2  0E07               	movlw	7
 11879  000DB4  0100               	movlb	0	; () banked
 11880  000DB6  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 11881  000DB8  0100               	movlb	0	; () banked
 11882  000DBA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11883  000DBC  0E00               	movlw	0
 11884  000DBE  0100               	movlb	0	; () banked
 11885  000DC0  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 11886  000DC2  0100               	movlb	0	; () banked
 11887  000DC4  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 11888  000DC6  0E00               	movlw	0
 11889  000DC8  0100               	movlb	0	; () banked
 11890  000DCA  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 11891  000DCC  0100               	movlb	0	; () banked
 11892  000DCE  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 11893  000DD0  0E00               	movlw	0
 11894  000DD2  0100               	movlb	0	; () banked
 11895  000DD4  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 11896  000DD6  0100               	movlb	0	; () banked
 11897  000DD8  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 11898                           
 11899                           ; BSR set to: 0
 11900                           ;inc\CANlib.h: 761: tamp = tamp << 5;
 11901  000DDA  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 11902  000DDE  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 11903  000DE2  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 11904  000DE6  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 11905  000DEA  0E05               	movlw	5
 11906  000DEC                     u5705:
 11907  000DEC  90D8               	bcf	status,0,c
 11908  000DEE  0100               	movlb	0	; () banked
 11909  000DF0  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 11910  000DF2  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 11911  000DF4  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 11912  000DF6  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 11913  000DF8  2EE8               	decfsz	wreg,f,c
 11914  000DFA  D7F8               	goto	u5705
 11915  000DFC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11916  000E00  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11917  000E04  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11918  000E08  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11919                           
 11920                           ; BSR set to: 0
 11921                           ;inc\CANlib.h: 762: RXF0SIDL = (unsigned char) tamp;
 11922  000E0C  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
 11923  000E10                     l4938:
 11924                           
 11925                           ; BSR set to: 0
 11926                           ;inc\CANlib.h: 763: }
 11927                           ;inc\CANlib.h: 765: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
 11928  000E10  0100               	movlb	0	; () banked
 11929  000E12  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 11930  000E14  A4D8               	btfss	status,2,c
 11931  000E16  D058               	goto	l4956
 11932                           
 11933                           ; BSR set to: 0
 11934  000E18  0100               	movlb	0	; () banked
 11935  000E1A  297B               	incf	CANSetFilter@type& (0+255),w,b
 11936  000E1C  A4D8               	btfss	status,2,c
 11937  000E1E  D054               	goto	l4956
 11938                           
 11939                           ; BSR set to: 0
 11940                           ;inc\CANlib.h: 766: {
 11941                           ;inc\CANlib.h: 767: RXF1SIDLbits.EXIDEN = 0x00;
 11942  000E20  010F               	movlb	15	; () banked
 11943  000E22  9705               	bcf	5,3,b	;volatile
 11944                           
 11945                           ; BSR set to: 15
 11946                           ;inc\CANlib.h: 769: tamp = (filter >> 3);
 11947  000E24  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 11948  000E28  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 11949  000E2C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 11950  000E30  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 11951  000E34  0E04               	movlw	4
 11952  000E36  D006               	goto	u5730
 11953  000E38                     u5735:
 11954  000E38  0100               	movlb	0	; () banked
 11955  000E3A  90D8               	bcf	status,0,c
 11956  000E3C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 11957  000E3E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 11958  000E40  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 11959  000E42  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 11960  000E44                     u5730:
 11961  000E44  2EE8               	decfsz	wreg,f,c
 11962  000E46  D7F8               	goto	u5735
 11963  000E48  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 11964  000E4C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 11965  000E50  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 11966  000E54  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 11967                           
 11968                           ; BSR set to: 0
 11969                           ;inc\CANlib.h: 770: tamp = tamp & 0x000000FF;
 11970  000E58  0100               	movlb	0	; () banked
 11971  000E5A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 11972  000E5C  0100               	movlb	0	; () banked
 11973  000E5E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11974  000E60  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 11975  000E62  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 11976  000E64  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 11977                           
 11978                           ; BSR set to: 0
 11979                           ;inc\CANlib.h: 771: RXF1SIDH = (unsigned char) tamp;
 11980  000E66  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 11981                           
 11982                           ; BSR set to: 0
 11983                           ;inc\CANlib.h: 773: tamp = filter & 0x00000007;
 11984  000E6A  0E07               	movlw	7
 11985  000E6C  0100               	movlb	0	; () banked
 11986  000E6E  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 11987  000E70  0100               	movlb	0	; () banked
 11988  000E72  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 11989  000E74  0E00               	movlw	0
 11990  000E76  0100               	movlb	0	; () banked
 11991  000E78  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 11992  000E7A  0100               	movlb	0	; () banked
 11993  000E7C  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 11994  000E7E  0E00               	movlw	0
 11995  000E80  0100               	movlb	0	; () banked
 11996  000E82  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 11997  000E84  0100               	movlb	0	; () banked
 11998  000E86  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 11999  000E88  0E00               	movlw	0
 12000  000E8A  0100               	movlb	0	; () banked
 12001  000E8C  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12002  000E8E  0100               	movlb	0	; () banked
 12003  000E90  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12004                           
 12005                           ; BSR set to: 0
 12006                           ;inc\CANlib.h: 774: tamp = tamp << 5;
 12007  000E92  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12008  000E96  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12009  000E9A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12010  000E9E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12011  000EA2  0E05               	movlw	5
 12012  000EA4                     u5745:
 12013  000EA4  90D8               	bcf	status,0,c
 12014  000EA6  0100               	movlb	0	; () banked
 12015  000EA8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12016  000EAA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12017  000EAC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12018  000EAE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12019  000EB0  2EE8               	decfsz	wreg,f,c
 12020  000EB2  D7F8               	goto	u5745
 12021  000EB4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12022  000EB8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12023  000EBC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12024  000EC0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12025                           
 12026                           ; BSR set to: 0
 12027                           ;inc\CANlib.h: 775: RXF1SIDL = (unsigned char) tamp;
 12028  000EC4  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
 12029  000EC8                     l4956:
 12030                           
 12031                           ; BSR set to: 0
 12032                           ;inc\CANlib.h: 776: }
 12033                           ;inc\CANlib.h: 778: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
 12034  000EC8  0E02               	movlw	2
 12035  000ECA  0100               	movlb	0	; () banked
 12036  000ECC  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12037  000ECE  A4D8               	btfss	status,2,c
 12038  000ED0  D058               	goto	l4974
 12039                           
 12040                           ; BSR set to: 0
 12041  000ED2  0100               	movlb	0	; () banked
 12042  000ED4  297B               	incf	CANSetFilter@type& (0+255),w,b
 12043  000ED6  A4D8               	btfss	status,2,c
 12044  000ED8  D054               	goto	l4974
 12045                           
 12046                           ; BSR set to: 0
 12047                           ;inc\CANlib.h: 779: {
 12048                           ;inc\CANlib.h: 780: RXF2SIDLbits.EXIDEN = 0x00;
 12049  000EDA  010F               	movlb	15	; () banked
 12050  000EDC  9709               	bcf	9,3,b	;volatile
 12051                           
 12052                           ; BSR set to: 15
 12053                           ;inc\CANlib.h: 782: tamp = (filter >> 3);
 12054  000EDE  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12055  000EE2  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12056  000EE6  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12057  000EEA  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12058  000EEE  0E04               	movlw	4
 12059  000EF0  D006               	goto	u5770
 12060  000EF2                     u5775:
 12061  000EF2  0100               	movlb	0	; () banked
 12062  000EF4  90D8               	bcf	status,0,c
 12063  000EF6  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12064  000EF8  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12065  000EFA  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12066  000EFC  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12067  000EFE                     u5770:
 12068  000EFE  2EE8               	decfsz	wreg,f,c
 12069  000F00  D7F8               	goto	u5775
 12070  000F02  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12071  000F06  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12072  000F0A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12073  000F0E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12074                           
 12075                           ; BSR set to: 0
 12076                           ;inc\CANlib.h: 783: tamp = tamp & 0x000000FF;
 12077  000F12  0100               	movlb	0	; () banked
 12078  000F14  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12079  000F16  0100               	movlb	0	; () banked
 12080  000F18  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12081  000F1A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12082  000F1C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12083  000F1E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12084                           
 12085                           ; BSR set to: 0
 12086                           ;inc\CANlib.h: 784: RXF2SIDH = (unsigned char) tamp;
 12087  000F20  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 12088                           
 12089                           ; BSR set to: 0
 12090                           ;inc\CANlib.h: 786: tamp = filter & 0x00000007;
 12091  000F24  0E07               	movlw	7
 12092  000F26  0100               	movlb	0	; () banked
 12093  000F28  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12094  000F2A  0100               	movlb	0	; () banked
 12095  000F2C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12096  000F2E  0E00               	movlw	0
 12097  000F30  0100               	movlb	0	; () banked
 12098  000F32  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12099  000F34  0100               	movlb	0	; () banked
 12100  000F36  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12101  000F38  0E00               	movlw	0
 12102  000F3A  0100               	movlb	0	; () banked
 12103  000F3C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12104  000F3E  0100               	movlb	0	; () banked
 12105  000F40  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12106  000F42  0E00               	movlw	0
 12107  000F44  0100               	movlb	0	; () banked
 12108  000F46  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12109  000F48  0100               	movlb	0	; () banked
 12110  000F4A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12111                           
 12112                           ; BSR set to: 0
 12113                           ;inc\CANlib.h: 787: tamp = tamp << 5;
 12114  000F4C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12115  000F50  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12116  000F54  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12117  000F58  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12118  000F5C  0E05               	movlw	5
 12119  000F5E                     u5785:
 12120  000F5E  90D8               	bcf	status,0,c
 12121  000F60  0100               	movlb	0	; () banked
 12122  000F62  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12123  000F64  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12124  000F66  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12125  000F68  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12126  000F6A  2EE8               	decfsz	wreg,f,c
 12127  000F6C  D7F8               	goto	u5785
 12128  000F6E  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12129  000F72  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12130  000F76  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12131  000F7A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12132                           
 12133                           ; BSR set to: 0
 12134                           ;inc\CANlib.h: 788: RXF2SIDL = (unsigned char) tamp;
 12135  000F7E  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
 12136  000F82                     l4974:
 12137                           
 12138                           ; BSR set to: 0
 12139                           ;inc\CANlib.h: 789: }
 12140                           ;inc\CANlib.h: 791: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
 12141  000F82  0E03               	movlw	3
 12142  000F84  0100               	movlb	0	; () banked
 12143  000F86  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12144  000F88  A4D8               	btfss	status,2,c
 12145  000F8A  D058               	goto	l4992
 12146                           
 12147                           ; BSR set to: 0
 12148  000F8C  0100               	movlb	0	; () banked
 12149  000F8E  297B               	incf	CANSetFilter@type& (0+255),w,b
 12150  000F90  A4D8               	btfss	status,2,c
 12151  000F92  D054               	goto	l4992
 12152                           
 12153                           ; BSR set to: 0
 12154                           ;inc\CANlib.h: 792: {
 12155                           ;inc\CANlib.h: 793: RXF3SIDLbits.EXIDEN = 0x00;
 12156  000F94  010F               	movlb	15	; () banked
 12157  000F96  970D               	bcf	13,3,b	;volatile
 12158                           
 12159                           ; BSR set to: 15
 12160                           ;inc\CANlib.h: 795: tamp = (filter >> 3);
 12161  000F98  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12162  000F9C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12163  000FA0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12164  000FA4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12165  000FA8  0E04               	movlw	4
 12166  000FAA  D006               	goto	u5810
 12167  000FAC                     u5815:
 12168  000FAC  0100               	movlb	0	; () banked
 12169  000FAE  90D8               	bcf	status,0,c
 12170  000FB0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12171  000FB2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12172  000FB4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12173  000FB6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12174  000FB8                     u5810:
 12175  000FB8  2EE8               	decfsz	wreg,f,c
 12176  000FBA  D7F8               	goto	u5815
 12177  000FBC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12178  000FC0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12179  000FC4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12180  000FC8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12181                           
 12182                           ; BSR set to: 0
 12183                           ;inc\CANlib.h: 796: tamp = tamp & 0x000000FF;
 12184  000FCC  0100               	movlb	0	; () banked
 12185  000FCE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12186  000FD0  0100               	movlb	0	; () banked
 12187  000FD2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12188  000FD4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12189  000FD6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12190  000FD8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12191                           
 12192                           ; BSR set to: 0
 12193                           ;inc\CANlib.h: 797: RXF3SIDH = (unsigned char) tamp;
 12194  000FDA  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 12195                           
 12196                           ; BSR set to: 0
 12197                           ;inc\CANlib.h: 799: tamp = filter & 0x00000007;
 12198  000FDE  0E07               	movlw	7
 12199  000FE0  0100               	movlb	0	; () banked
 12200  000FE2  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12201  000FE4  0100               	movlb	0	; () banked
 12202  000FE6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12203  000FE8  0E00               	movlw	0
 12204  000FEA  0100               	movlb	0	; () banked
 12205  000FEC  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12206  000FEE  0100               	movlb	0	; () banked
 12207  000FF0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12208  000FF2  0E00               	movlw	0
 12209  000FF4  0100               	movlb	0	; () banked
 12210  000FF6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12211  000FF8  0100               	movlb	0	; () banked
 12212  000FFA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12213  000FFC  0E00               	movlw	0
 12214  000FFE  0100               	movlb	0	; () banked
 12215  001000  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12216  001002  0100               	movlb	0	; () banked
 12217  001004  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12218                           
 12219                           ; BSR set to: 0
 12220                           ;inc\CANlib.h: 800: tamp = tamp << 5;
 12221  001006  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12222  00100A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12223  00100E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12224  001012  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12225  001016  0E05               	movlw	5
 12226  001018                     u5825:
 12227  001018  90D8               	bcf	status,0,c
 12228  00101A  0100               	movlb	0	; () banked
 12229  00101C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12230  00101E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12231  001020  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12232  001022  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12233  001024  2EE8               	decfsz	wreg,f,c
 12234  001026  D7F8               	goto	u5825
 12235  001028  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12236  00102C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12237  001030  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12238  001034  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12239                           
 12240                           ; BSR set to: 0
 12241                           ;inc\CANlib.h: 801: RXF3SIDL = (unsigned char) tamp;
 12242  001038  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
 12243  00103C                     l4992:
 12244                           
 12245                           ; BSR set to: 0
 12246                           ;inc\CANlib.h: 802: }
 12247                           ;inc\CANlib.h: 804: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
 12248  00103C  0E04               	movlw	4
 12249  00103E  0100               	movlb	0	; () banked
 12250  001040  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12251  001042  A4D8               	btfss	status,2,c
 12252  001044  D058               	goto	l5010
 12253                           
 12254                           ; BSR set to: 0
 12255  001046  0100               	movlb	0	; () banked
 12256  001048  297B               	incf	CANSetFilter@type& (0+255),w,b
 12257  00104A  A4D8               	btfss	status,2,c
 12258  00104C  D054               	goto	l5010
 12259                           
 12260                           ; BSR set to: 0
 12261                           ;inc\CANlib.h: 805: {
 12262                           ;inc\CANlib.h: 806: RXF4SIDLbits.EXIDEN = 0x00;
 12263  00104E  010F               	movlb	15	; () banked
 12264  001050  9711               	bcf	17,3,b	;volatile
 12265                           
 12266                           ; BSR set to: 15
 12267                           ;inc\CANlib.h: 808: tamp = (filter >> 3);
 12268  001052  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12269  001056  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12270  00105A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12271  00105E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12272  001062  0E04               	movlw	4
 12273  001064  D006               	goto	u5850
 12274  001066                     u5855:
 12275  001066  0100               	movlb	0	; () banked
 12276  001068  90D8               	bcf	status,0,c
 12277  00106A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12278  00106C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12279  00106E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12280  001070  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12281  001072                     u5850:
 12282  001072  2EE8               	decfsz	wreg,f,c
 12283  001074  D7F8               	goto	u5855
 12284  001076  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12285  00107A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12286  00107E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12287  001082  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12288                           
 12289                           ; BSR set to: 0
 12290                           ;inc\CANlib.h: 809: tamp = tamp & 0x000000FF;
 12291  001086  0100               	movlb	0	; () banked
 12292  001088  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12293  00108A  0100               	movlb	0	; () banked
 12294  00108C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12295  00108E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12296  001090  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12297  001092  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12298                           
 12299                           ; BSR set to: 0
 12300                           ;inc\CANlib.h: 810: RXF4SIDH = (unsigned char) tamp;
 12301  001094  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 12302                           
 12303                           ; BSR set to: 0
 12304                           ;inc\CANlib.h: 812: tamp = filter & 0x00000007;
 12305  001098  0E07               	movlw	7
 12306  00109A  0100               	movlb	0	; () banked
 12307  00109C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12308  00109E  0100               	movlb	0	; () banked
 12309  0010A0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12310  0010A2  0E00               	movlw	0
 12311  0010A4  0100               	movlb	0	; () banked
 12312  0010A6  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12313  0010A8  0100               	movlb	0	; () banked
 12314  0010AA  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12315  0010AC  0E00               	movlw	0
 12316  0010AE  0100               	movlb	0	; () banked
 12317  0010B0  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12318  0010B2  0100               	movlb	0	; () banked
 12319  0010B4  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12320  0010B6  0E00               	movlw	0
 12321  0010B8  0100               	movlb	0	; () banked
 12322  0010BA  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12323  0010BC  0100               	movlb	0	; () banked
 12324  0010BE  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12325                           
 12326                           ; BSR set to: 0
 12327                           ;inc\CANlib.h: 813: tamp = tamp << 5;
 12328  0010C0  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12329  0010C4  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12330  0010C8  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12331  0010CC  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12332  0010D0  0E05               	movlw	5
 12333  0010D2                     u5865:
 12334  0010D2  90D8               	bcf	status,0,c
 12335  0010D4  0100               	movlb	0	; () banked
 12336  0010D6  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12337  0010D8  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12338  0010DA  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12339  0010DC  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12340  0010DE  2EE8               	decfsz	wreg,f,c
 12341  0010E0  D7F8               	goto	u5865
 12342  0010E2  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12343  0010E6  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12344  0010EA  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12345  0010EE  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12346                           
 12347                           ; BSR set to: 0
 12348                           ;inc\CANlib.h: 814: RXF4SIDL = (unsigned char) tamp;
 12349  0010F2  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 12350  0010F6                     l5010:
 12351                           
 12352                           ; BSR set to: 0
 12353                           ;inc\CANlib.h: 815: }
 12354                           ;inc\CANlib.h: 817: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 12355  0010F6  0E05               	movlw	5
 12356  0010F8  0100               	movlb	0	; () banked
 12357  0010FA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12358  0010FC  A4D8               	btfss	status,2,c
 12359  0010FE  D058               	goto	l5028
 12360                           
 12361                           ; BSR set to: 0
 12362  001100  0100               	movlb	0	; () banked
 12363  001102  297B               	incf	CANSetFilter@type& (0+255),w,b
 12364  001104  A4D8               	btfss	status,2,c
 12365  001106  D054               	goto	l5028
 12366                           
 12367                           ; BSR set to: 0
 12368                           ;inc\CANlib.h: 818: {
 12369                           ;inc\CANlib.h: 819: RXF5SIDLbits.EXIDEN = 0x00;
 12370  001108  010F               	movlb	15	; () banked
 12371  00110A  9715               	bcf	21,3,b	;volatile
 12372                           
 12373                           ; BSR set to: 15
 12374                           ;inc\CANlib.h: 821: tamp = (filter >> 3);
 12375  00110C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12376  001110  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12377  001114  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12378  001118  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12379  00111C  0E04               	movlw	4
 12380  00111E  D006               	goto	u5890
 12381  001120                     u5895:
 12382  001120  0100               	movlb	0	; () banked
 12383  001122  90D8               	bcf	status,0,c
 12384  001124  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12385  001126  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12386  001128  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12387  00112A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12388  00112C                     u5890:
 12389  00112C  2EE8               	decfsz	wreg,f,c
 12390  00112E  D7F8               	goto	u5895
 12391  001130  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12392  001134  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12393  001138  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12394  00113C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12395                           
 12396                           ; BSR set to: 0
 12397                           ;inc\CANlib.h: 822: tamp = tamp & 0x000000FF;
 12398  001140  0100               	movlb	0	; () banked
 12399  001142  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12400  001144  0100               	movlb	0	; () banked
 12401  001146  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12402  001148  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12403  00114A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12404  00114C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12405                           
 12406                           ; BSR set to: 0
 12407                           ;inc\CANlib.h: 823: RXF5SIDH = (unsigned char) tamp;
 12408  00114E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 12409                           
 12410                           ; BSR set to: 0
 12411                           ;inc\CANlib.h: 825: tamp = filter & 0x00000007;
 12412  001152  0E07               	movlw	7
 12413  001154  0100               	movlb	0	; () banked
 12414  001156  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12415  001158  0100               	movlb	0	; () banked
 12416  00115A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12417  00115C  0E00               	movlw	0
 12418  00115E  0100               	movlb	0	; () banked
 12419  001160  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12420  001162  0100               	movlb	0	; () banked
 12421  001164  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12422  001166  0E00               	movlw	0
 12423  001168  0100               	movlb	0	; () banked
 12424  00116A  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12425  00116C  0100               	movlb	0	; () banked
 12426  00116E  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12427  001170  0E00               	movlw	0
 12428  001172  0100               	movlb	0	; () banked
 12429  001174  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12430  001176  0100               	movlb	0	; () banked
 12431  001178  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12432                           
 12433                           ; BSR set to: 0
 12434                           ;inc\CANlib.h: 826: tamp = tamp << 5;
 12435  00117A  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12436  00117E  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12437  001182  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12438  001186  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12439  00118A  0E05               	movlw	5
 12440  00118C                     u5905:
 12441  00118C  90D8               	bcf	status,0,c
 12442  00118E  0100               	movlb	0	; () banked
 12443  001190  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12444  001192  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12445  001194  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12446  001196  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12447  001198  2EE8               	decfsz	wreg,f,c
 12448  00119A  D7F8               	goto	u5905
 12449  00119C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12450  0011A0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12451  0011A4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12452  0011A8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12453                           
 12454                           ; BSR set to: 0
 12455                           ;inc\CANlib.h: 827: RXF5SIDL = (unsigned char) tamp;
 12456  0011AC  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 12457  0011B0                     l5028:
 12458                           
 12459                           ; BSR set to: 0
 12460                           ;inc\CANlib.h: 828: }
 12461                           ;inc\CANlib.h: 831: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 12462  0011B0  0100               	movlb	0	; () banked
 12463  0011B2  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12464  0011B4  0100               	movlb	0	; () banked
 12465  0011B6  A4D8               	btfss	status,2,c
 12466  0011B8  D089               	goto	l5062
 12467                           
 12468                           ; BSR set to: 0
 12469  0011BA  0EF7               	movlw	247
 12470  0011BC  0100               	movlb	0	; () banked
 12471  0011BE  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 12472  0011C0  A4D8               	btfss	status,2,c
 12473  0011C2  D084               	goto	l5062
 12474                           
 12475                           ; BSR set to: 0
 12476                           ;inc\CANlib.h: 832: {
 12477                           ;inc\CANlib.h: 833: RXF0SIDLbits.EXIDEN = 0x01;
 12478  0011C4  010F               	movlb	15	; () banked
 12479  0011C6  8701               	bsf	1,3,b	;volatile
 12480                           
 12481                           ; BSR set to: 15
 12482                           ;inc\CANlib.h: 835: tamp = filter & 0x000000FF;
 12483  0011C8  0100               	movlb	0	; () banked
 12484  0011CA  5177               	movf	CANSetFilter@filter& (0+255),w,b
 12485  0011CC  0100               	movlb	0	; () banked
 12486  0011CE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12487  0011D0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12488  0011D2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12489  0011D4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12490                           
 12491                           ; BSR set to: 0
 12492                           ;inc\CANlib.h: 836: RXF0EIDL = (unsigned char) tamp;
 12493  0011D6  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 12494                           
 12495                           ; BSR set to: 0
 12496                           ;inc\CANlib.h: 838: tamp = filter & 0x0000FF00;
 12497  0011DA  0E00               	movlw	0
 12498  0011DC  0100               	movlb	0	; () banked
 12499  0011DE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12500  0011E0  0100               	movlb	0	; () banked
 12501  0011E2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12502  0011E4  0EFF               	movlw	255
 12503  0011E6  0100               	movlb	0	; () banked
 12504  0011E8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12505  0011EA  0100               	movlb	0	; () banked
 12506  0011EC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12507  0011EE  0E00               	movlw	0
 12508  0011F0  0100               	movlb	0	; () banked
 12509  0011F2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12510  0011F4  0100               	movlb	0	; () banked
 12511  0011F6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12512  0011F8  0E00               	movlw	0
 12513  0011FA  0100               	movlb	0	; () banked
 12514  0011FC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12515  0011FE  0100               	movlb	0	; () banked
 12516  001200  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12517                           
 12518                           ; BSR set to: 0
 12519                           ;inc\CANlib.h: 839: tamp = tamp >> 8;
 12520  001202  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12521  001206  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12522  00120A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12523  00120E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12524  001212  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 12525  001216  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 12526  00121A  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 12527  00121E  0100               	movlb	0	; () banked
 12528  001220  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 12529  001222  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12530  001226  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12531  00122A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12532  00122E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12533                           
 12534                           ; BSR set to: 0
 12535                           ;inc\CANlib.h: 840: RXF0EIDH = (unsigned char) tamp;
 12536  001232  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 12537                           
 12538                           ; BSR set to: 0
 12539                           ;inc\CANlib.h: 842: if (filter & 0x00010000)
 12540  001236  0100               	movlb	0	; () banked
 12541  001238  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 12542  00123A  D003               	goto	l463
 12543                           
 12544                           ; BSR set to: 0
 12545                           ;inc\CANlib.h: 843: RXF0SIDLbits.EID16 = 0x01;
 12546  00123C  010F               	movlb	15	; () banked
 12547  00123E  8101               	bsf	1,0,b	;volatile
 12548  001240  D002               	goto	l464
 12549  001242                     l463:
 12550                           
 12551                           ; BSR set to: 0
 12552                           ;inc\CANlib.h: 844: else
 12553                           ;inc\CANlib.h: 845: RXF0SIDLbits.EID16 = 0x00;
 12554  001242  010F               	movlb	15	; () banked
 12555  001244  9101               	bcf	1,0,b	;volatile
 12556  001246                     l464:
 12557                           
 12558                           ; BSR set to: 15
 12559                           ;inc\CANlib.h: 847: if (filter & 0x00020000)
 12560  001246  0100               	movlb	0	; () banked
 12561  001248  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 12562  00124A  D003               	goto	l465
 12563                           
 12564                           ; BSR set to: 0
 12565                           ;inc\CANlib.h: 848: RXF0SIDLbits.EID17 = 0x01;
 12566  00124C  010F               	movlb	15	; () banked
 12567  00124E  8301               	bsf	1,1,b	;volatile
 12568  001250  D002               	goto	l466
 12569  001252                     l465:
 12570                           
 12571                           ; BSR set to: 0
 12572                           ;inc\CANlib.h: 849: else
 12573                           ;inc\CANlib.h: 850: RXF0SIDLbits.EID17 = 0x00;
 12574  001252  010F               	movlb	15	; () banked
 12575  001254  9301               	bcf	1,1,b	;volatile
 12576  001256                     l466:
 12577                           
 12578                           ; BSR set to: 15
 12579                           ;inc\CANlib.h: 852: if (filter & 0x00040000)
 12580  001256  0100               	movlb	0	; () banked
 12581  001258  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 12582  00125A  D003               	goto	l467
 12583                           
 12584                           ; BSR set to: 0
 12585                           ;inc\CANlib.h: 853: RXF0SIDLbits.SID0 = 0x01;
 12586  00125C  010F               	movlb	15	; () banked
 12587  00125E  8B01               	bsf	1,5,b	;volatile
 12588  001260  D002               	goto	l468
 12589  001262                     l467:
 12590                           
 12591                           ; BSR set to: 0
 12592                           ;inc\CANlib.h: 854: else
 12593                           ;inc\CANlib.h: 855: RXF0SIDLbits.SID0 = 0x00;
 12594  001262  010F               	movlb	15	; () banked
 12595  001264  9B01               	bcf	1,5,b	;volatile
 12596  001266                     l468:
 12597                           
 12598                           ; BSR set to: 15
 12599                           ;inc\CANlib.h: 857: if (filter & 0x00080000)
 12600  001266  0100               	movlb	0	; () banked
 12601  001268  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 12602  00126A  D003               	goto	l469
 12603                           
 12604                           ; BSR set to: 0
 12605                           ;inc\CANlib.h: 858: RXF0SIDLbits.SID1 = 0x01;
 12606  00126C  010F               	movlb	15	; () banked
 12607  00126E  8D01               	bsf	1,6,b	;volatile
 12608  001270  D002               	goto	l470
 12609  001272                     l469:
 12610                           
 12611                           ; BSR set to: 0
 12612                           ;inc\CANlib.h: 859: else
 12613                           ;inc\CANlib.h: 860: RXF0SIDLbits.SID1 = 0x00;
 12614  001272  010F               	movlb	15	; () banked
 12615  001274  9D01               	bcf	1,6,b	;volatile
 12616  001276                     l470:
 12617                           
 12618                           ; BSR set to: 15
 12619                           ;inc\CANlib.h: 862: if (filter & 0x00100000)
 12620  001276  0100               	movlb	0	; () banked
 12621  001278  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 12622  00127A  D003               	goto	l471
 12623                           
 12624                           ; BSR set to: 0
 12625                           ;inc\CANlib.h: 863: RXF0SIDLbits.SID2 = 0x01 ;
 12626  00127C  010F               	movlb	15	; () banked
 12627  00127E  8F01               	bsf	1,7,b	;volatile
 12628  001280  D002               	goto	l5056
 12629  001282                     l471:
 12630                           
 12631                           ; BSR set to: 0
 12632                           ;inc\CANlib.h: 864: else
 12633                           ;inc\CANlib.h: 865: RXF0SIDLbits.SID2 = 0x00 ;
 12634  001282  010F               	movlb	15	; () banked
 12635  001284  9F01               	bcf	1,7,b	;volatile
 12636  001286                     l5056:
 12637                           
 12638                           ; BSR set to: 15
 12639                           ;inc\CANlib.h: 867: tamp = (filter >> 21);
 12640  001286  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12641  00128A  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12642  00128E  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12643  001292  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12644  001296  0E16               	movlw	22
 12645  001298  D006               	goto	u5980
 12646  00129A                     u5985:
 12647  00129A  0100               	movlb	0	; () banked
 12648  00129C  90D8               	bcf	status,0,c
 12649  00129E  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12650  0012A0  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12651  0012A2  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12652  0012A4  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12653  0012A6                     u5980:
 12654  0012A6  2EE8               	decfsz	wreg,f,c
 12655  0012A8  D7F8               	goto	u5985
 12656  0012AA  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12657  0012AE  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12658  0012B2  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12659  0012B6  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12660                           
 12661                           ; BSR set to: 0
 12662                           ;inc\CANlib.h: 868: tamp = tamp & 0x000000FF;
 12663  0012BA  0100               	movlb	0	; () banked
 12664  0012BC  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12665  0012BE  0100               	movlb	0	; () banked
 12666  0012C0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12667  0012C2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12668  0012C4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12669  0012C6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12670                           
 12671                           ; BSR set to: 0
 12672                           ;inc\CANlib.h: 869: RXF0SIDH = (unsigned char) tamp;
 12673  0012C8  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12674  0012CC                     l5062:
 12675                           
 12676                           ; BSR set to: 0
 12677                           ;inc\CANlib.h: 870: }
 12678                           ;inc\CANlib.h: 872: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 12679  0012CC  0100               	movlb	0	; () banked
 12680  0012CE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12681  0012D0  A4D8               	btfss	status,2,c
 12682  0012D2  D089               	goto	l5096
 12683                           
 12684                           ; BSR set to: 0
 12685  0012D4  0EF7               	movlw	247
 12686  0012D6  0100               	movlb	0	; () banked
 12687  0012D8  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 12688  0012DA  A4D8               	btfss	status,2,c
 12689  0012DC  D084               	goto	l5096
 12690                           
 12691                           ; BSR set to: 0
 12692                           ;inc\CANlib.h: 873: {
 12693                           ;inc\CANlib.h: 874: RXF1SIDLbits.EXIDEN = 0x01;
 12694  0012DE  010F               	movlb	15	; () banked
 12695  0012E0  8705               	bsf	5,3,b	;volatile
 12696                           
 12697                           ; BSR set to: 15
 12698                           ;inc\CANlib.h: 876: tamp = filter & 0x000000FF;
 12699  0012E2  0100               	movlb	0	; () banked
 12700  0012E4  5177               	movf	CANSetFilter@filter& (0+255),w,b
 12701  0012E6  0100               	movlb	0	; () banked
 12702  0012E8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12703  0012EA  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12704  0012EC  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12705  0012EE  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12706                           
 12707                           ; BSR set to: 0
 12708                           ;inc\CANlib.h: 877: RXF1EIDL = (unsigned char) tamp;
 12709  0012F0  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 12710                           
 12711                           ; BSR set to: 0
 12712                           ;inc\CANlib.h: 879: tamp = filter & 0x0000FF00;
 12713  0012F4  0E00               	movlw	0
 12714  0012F6  0100               	movlb	0	; () banked
 12715  0012F8  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12716  0012FA  0100               	movlb	0	; () banked
 12717  0012FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12718  0012FE  0EFF               	movlw	255
 12719  001300  0100               	movlb	0	; () banked
 12720  001302  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12721  001304  0100               	movlb	0	; () banked
 12722  001306  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12723  001308  0E00               	movlw	0
 12724  00130A  0100               	movlb	0	; () banked
 12725  00130C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12726  00130E  0100               	movlb	0	; () banked
 12727  001310  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12728  001312  0E00               	movlw	0
 12729  001314  0100               	movlb	0	; () banked
 12730  001316  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12731  001318  0100               	movlb	0	; () banked
 12732  00131A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12733                           
 12734                           ; BSR set to: 0
 12735                           ;inc\CANlib.h: 880: tamp = tamp >> 8;
 12736  00131C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12737  001320  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12738  001324  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12739  001328  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12740  00132C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 12741  001330  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 12742  001334  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 12743  001338  0100               	movlb	0	; () banked
 12744  00133A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 12745  00133C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12746  001340  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12747  001344  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12748  001348  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12749                           
 12750                           ; BSR set to: 0
 12751                           ;inc\CANlib.h: 881: RXF1EIDH = (unsigned char) tamp;
 12752  00134C  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 12753                           
 12754                           ; BSR set to: 0
 12755                           ;inc\CANlib.h: 883: if (filter & 0x00010000)
 12756  001350  0100               	movlb	0	; () banked
 12757  001352  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 12758  001354  D003               	goto	l474
 12759                           
 12760                           ; BSR set to: 0
 12761                           ;inc\CANlib.h: 884: RXF1SIDLbits.EID16 = 0x01;
 12762  001356  010F               	movlb	15	; () banked
 12763  001358  8105               	bsf	5,0,b	;volatile
 12764  00135A  D002               	goto	l475
 12765  00135C                     l474:
 12766                           
 12767                           ; BSR set to: 0
 12768                           ;inc\CANlib.h: 885: else
 12769                           ;inc\CANlib.h: 886: RXF1SIDLbits.EID16 = 0x00;
 12770  00135C  010F               	movlb	15	; () banked
 12771  00135E  9105               	bcf	5,0,b	;volatile
 12772  001360                     l475:
 12773                           
 12774                           ; BSR set to: 15
 12775                           ;inc\CANlib.h: 888: if (filter & 0x00020000)
 12776  001360  0100               	movlb	0	; () banked
 12777  001362  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 12778  001364  D003               	goto	l476
 12779                           
 12780                           ; BSR set to: 0
 12781                           ;inc\CANlib.h: 889: RXF1SIDLbits.EID17 = 0x01;
 12782  001366  010F               	movlb	15	; () banked
 12783  001368  8305               	bsf	5,1,b	;volatile
 12784  00136A  D002               	goto	l477
 12785  00136C                     l476:
 12786                           
 12787                           ; BSR set to: 0
 12788                           ;inc\CANlib.h: 890: else
 12789                           ;inc\CANlib.h: 891: RXF1SIDLbits.EID17 = 0x00;
 12790  00136C  010F               	movlb	15	; () banked
 12791  00136E  9305               	bcf	5,1,b	;volatile
 12792  001370                     l477:
 12793                           
 12794                           ; BSR set to: 15
 12795                           ;inc\CANlib.h: 893: if (filter & 0x00040000)
 12796  001370  0100               	movlb	0	; () banked
 12797  001372  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 12798  001374  D003               	goto	l478
 12799                           
 12800                           ; BSR set to: 0
 12801                           ;inc\CANlib.h: 894: RXF1SIDLbits.SID0 = 0x01;
 12802  001376  010F               	movlb	15	; () banked
 12803  001378  8B05               	bsf	5,5,b	;volatile
 12804  00137A  D002               	goto	l479
 12805  00137C                     l478:
 12806                           
 12807                           ; BSR set to: 0
 12808                           ;inc\CANlib.h: 895: else
 12809                           ;inc\CANlib.h: 896: RXF1SIDLbits.SID0 = 0x00;
 12810  00137C  010F               	movlb	15	; () banked
 12811  00137E  9B05               	bcf	5,5,b	;volatile
 12812  001380                     l479:
 12813                           
 12814                           ; BSR set to: 15
 12815                           ;inc\CANlib.h: 898: if (filter & 0x00080000)
 12816  001380  0100               	movlb	0	; () banked
 12817  001382  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 12818  001384  D003               	goto	l480
 12819                           
 12820                           ; BSR set to: 0
 12821                           ;inc\CANlib.h: 899: RXF1SIDLbits.SID1 = 0x01;
 12822  001386  010F               	movlb	15	; () banked
 12823  001388  8D05               	bsf	5,6,b	;volatile
 12824  00138A  D002               	goto	l481
 12825  00138C                     l480:
 12826                           
 12827                           ; BSR set to: 0
 12828                           ;inc\CANlib.h: 900: else
 12829                           ;inc\CANlib.h: 901: RXF1SIDLbits.SID1 = 0x00;
 12830  00138C  010F               	movlb	15	; () banked
 12831  00138E  9D05               	bcf	5,6,b	;volatile
 12832  001390                     l481:
 12833                           
 12834                           ; BSR set to: 15
 12835                           ;inc\CANlib.h: 903: if (filter & 0x00100000)
 12836  001390  0100               	movlb	0	; () banked
 12837  001392  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 12838  001394  D003               	goto	l482
 12839                           
 12840                           ; BSR set to: 0
 12841                           ;inc\CANlib.h: 904: RXF1SIDLbits.SID2 = 0x01 ;
 12842  001396  010F               	movlb	15	; () banked
 12843  001398  8F05               	bsf	5,7,b	;volatile
 12844  00139A  D002               	goto	l5090
 12845  00139C                     l482:
 12846                           
 12847                           ; BSR set to: 0
 12848                           ;inc\CANlib.h: 905: else
 12849                           ;inc\CANlib.h: 906: RXF1SIDLbits.SID2 = 0x00 ;
 12850  00139C  010F               	movlb	15	; () banked
 12851  00139E  9F05               	bcf	5,7,b	;volatile
 12852  0013A0                     l5090:
 12853                           
 12854                           ; BSR set to: 15
 12855                           ;inc\CANlib.h: 908: tamp = (filter >> 21);
 12856  0013A0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12857  0013A4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12858  0013A8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12859  0013AC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12860  0013B0  0E16               	movlw	22
 12861  0013B2  D006               	goto	u6060
 12862  0013B4                     u6065:
 12863  0013B4  0100               	movlb	0	; () banked
 12864  0013B6  90D8               	bcf	status,0,c
 12865  0013B8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12866  0013BA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12867  0013BC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12868  0013BE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12869  0013C0                     u6060:
 12870  0013C0  2EE8               	decfsz	wreg,f,c
 12871  0013C2  D7F8               	goto	u6065
 12872  0013C4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12873  0013C8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12874  0013CC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12875  0013D0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12876                           
 12877                           ; BSR set to: 0
 12878                           ;inc\CANlib.h: 909: tamp = tamp & 0x000000FF;
 12879  0013D4  0100               	movlb	0	; () banked
 12880  0013D6  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12881  0013D8  0100               	movlb	0	; () banked
 12882  0013DA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12883  0013DC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12884  0013DE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12885  0013E0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12886                           
 12887                           ; BSR set to: 0
 12888                           ;inc\CANlib.h: 910: RXF1SIDH = (unsigned char) tamp;
 12889  0013E2  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 12890  0013E6                     l5096:
 12891                           
 12892                           ; BSR set to: 0
 12893                           ;inc\CANlib.h: 911: }
 12894                           ;inc\CANlib.h: 914: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 12895  0013E6  0E02               	movlw	2
 12896  0013E8  0100               	movlb	0	; () banked
 12897  0013EA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12898  0013EC  A4D8               	btfss	status,2,c
 12899  0013EE  D089               	goto	l5130
 12900                           
 12901                           ; BSR set to: 0
 12902  0013F0  0EF7               	movlw	247
 12903  0013F2  0100               	movlb	0	; () banked
 12904  0013F4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 12905  0013F6  A4D8               	btfss	status,2,c
 12906  0013F8  D084               	goto	l5130
 12907                           
 12908                           ; BSR set to: 0
 12909                           ;inc\CANlib.h: 915: {
 12910                           ;inc\CANlib.h: 916: RXF2SIDLbits.EXIDEN = 0x01;
 12911  0013FA  010F               	movlb	15	; () banked
 12912  0013FC  8709               	bsf	9,3,b	;volatile
 12913                           
 12914                           ; BSR set to: 15
 12915                           ;inc\CANlib.h: 918: tamp = filter & 0x000000FF;
 12916  0013FE  0100               	movlb	0	; () banked
 12917  001400  5177               	movf	CANSetFilter@filter& (0+255),w,b
 12918  001402  0100               	movlb	0	; () banked
 12919  001404  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12920  001406  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12921  001408  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12922  00140A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12923                           
 12924                           ; BSR set to: 0
 12925                           ;inc\CANlib.h: 919: RXF2EIDL = (unsigned char) tamp;
 12926  00140C  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 12927                           
 12928                           ; BSR set to: 0
 12929                           ;inc\CANlib.h: 921: tamp = filter & 0x0000FF00;
 12930  001410  0E00               	movlw	0
 12931  001412  0100               	movlb	0	; () banked
 12932  001414  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12933  001416  0100               	movlb	0	; () banked
 12934  001418  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12935  00141A  0EFF               	movlw	255
 12936  00141C  0100               	movlb	0	; () banked
 12937  00141E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12938  001420  0100               	movlb	0	; () banked
 12939  001422  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12940  001424  0E00               	movlw	0
 12941  001426  0100               	movlb	0	; () banked
 12942  001428  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12943  00142A  0100               	movlb	0	; () banked
 12944  00142C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12945  00142E  0E00               	movlw	0
 12946  001430  0100               	movlb	0	; () banked
 12947  001432  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12948  001434  0100               	movlb	0	; () banked
 12949  001436  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12950                           
 12951                           ; BSR set to: 0
 12952                           ;inc\CANlib.h: 922: tamp = tamp >> 8;
 12953  001438  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12954  00143C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12955  001440  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12956  001444  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12957  001448  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 12958  00144C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 12959  001450  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 12960  001454  0100               	movlb	0	; () banked
 12961  001456  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 12962  001458  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12963  00145C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12964  001460  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12965  001464  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12966                           
 12967                           ; BSR set to: 0
 12968                           ;inc\CANlib.h: 923: RXF2EIDH = (unsigned char) tamp;
 12969  001468  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 12970                           
 12971                           ; BSR set to: 0
 12972                           ;inc\CANlib.h: 925: if (filter & 0x00010000)
 12973  00146C  0100               	movlb	0	; () banked
 12974  00146E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 12975  001470  D003               	goto	l485
 12976                           
 12977                           ; BSR set to: 0
 12978                           ;inc\CANlib.h: 926: RXF2SIDLbits.EID16 = 0x01;
 12979  001472  010F               	movlb	15	; () banked
 12980  001474  8109               	bsf	9,0,b	;volatile
 12981  001476  D002               	goto	l486
 12982  001478                     l485:
 12983                           
 12984                           ; BSR set to: 0
 12985                           ;inc\CANlib.h: 927: else
 12986                           ;inc\CANlib.h: 928: RXF2SIDLbits.EID16 = 0x00;
 12987  001478  010F               	movlb	15	; () banked
 12988  00147A  9109               	bcf	9,0,b	;volatile
 12989  00147C                     l486:
 12990                           
 12991                           ; BSR set to: 15
 12992                           ;inc\CANlib.h: 930: if (filter & 0x00020000)
 12993  00147C  0100               	movlb	0	; () banked
 12994  00147E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 12995  001480  D003               	goto	l487
 12996                           
 12997                           ; BSR set to: 0
 12998                           ;inc\CANlib.h: 931: RXF2SIDLbits.EID17 = 0x01;
 12999  001482  010F               	movlb	15	; () banked
 13000  001484  8309               	bsf	9,1,b	;volatile
 13001  001486  D002               	goto	l488
 13002  001488                     l487:
 13003                           
 13004                           ; BSR set to: 0
 13005                           ;inc\CANlib.h: 932: else
 13006                           ;inc\CANlib.h: 933: RXF2SIDLbits.EID17 = 0x00;
 13007  001488  010F               	movlb	15	; () banked
 13008  00148A  9309               	bcf	9,1,b	;volatile
 13009  00148C                     l488:
 13010                           
 13011                           ; BSR set to: 15
 13012                           ;inc\CANlib.h: 935: if (filter & 0x00040000)
 13013  00148C  0100               	movlb	0	; () banked
 13014  00148E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13015  001490  D003               	goto	l489
 13016                           
 13017                           ; BSR set to: 0
 13018                           ;inc\CANlib.h: 936: RXF2SIDLbits.SID0 = 0x01;
 13019  001492  010F               	movlb	15	; () banked
 13020  001494  8B09               	bsf	9,5,b	;volatile
 13021  001496  D002               	goto	l490
 13022  001498                     l489:
 13023                           
 13024                           ; BSR set to: 0
 13025                           ;inc\CANlib.h: 937: else
 13026                           ;inc\CANlib.h: 938: RXF2SIDLbits.SID0 = 0x00;
 13027  001498  010F               	movlb	15	; () banked
 13028  00149A  9B09               	bcf	9,5,b	;volatile
 13029  00149C                     l490:
 13030                           
 13031                           ; BSR set to: 15
 13032                           ;inc\CANlib.h: 940: if (filter & 0x00080000)
 13033  00149C  0100               	movlb	0	; () banked
 13034  00149E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13035  0014A0  D003               	goto	l491
 13036                           
 13037                           ; BSR set to: 0
 13038                           ;inc\CANlib.h: 941: RXF2SIDLbits.SID1 = 0x01;
 13039  0014A2  010F               	movlb	15	; () banked
 13040  0014A4  8D09               	bsf	9,6,b	;volatile
 13041  0014A6  D002               	goto	l492
 13042  0014A8                     l491:
 13043                           
 13044                           ; BSR set to: 0
 13045                           ;inc\CANlib.h: 942: else
 13046                           ;inc\CANlib.h: 943: RXF2SIDLbits.SID1 = 0x00;
 13047  0014A8  010F               	movlb	15	; () banked
 13048  0014AA  9D09               	bcf	9,6,b	;volatile
 13049  0014AC                     l492:
 13050                           
 13051                           ; BSR set to: 15
 13052                           ;inc\CANlib.h: 945: if (filter & 0x00100000)
 13053  0014AC  0100               	movlb	0	; () banked
 13054  0014AE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13055  0014B0  D003               	goto	l493
 13056                           
 13057                           ; BSR set to: 0
 13058                           ;inc\CANlib.h: 946: RXF2SIDLbits.SID2 = 0x01 ;
 13059  0014B2  010F               	movlb	15	; () banked
 13060  0014B4  8F09               	bsf	9,7,b	;volatile
 13061  0014B6  D002               	goto	l5124
 13062  0014B8                     l493:
 13063                           
 13064                           ; BSR set to: 0
 13065                           ;inc\CANlib.h: 947: else
 13066                           ;inc\CANlib.h: 948: RXF2SIDLbits.SID2 = 0x00 ;
 13067  0014B8  010F               	movlb	15	; () banked
 13068  0014BA  9F09               	bcf	9,7,b	;volatile
 13069  0014BC                     l5124:
 13070                           
 13071                           ; BSR set to: 15
 13072                           ;inc\CANlib.h: 950: tamp = (filter >> 21);
 13073  0014BC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13074  0014C0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13075  0014C4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13076  0014C8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13077  0014CC  0E16               	movlw	22
 13078  0014CE  D006               	goto	u6140
 13079  0014D0                     u6145:
 13080  0014D0  0100               	movlb	0	; () banked
 13081  0014D2  90D8               	bcf	status,0,c
 13082  0014D4  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13083  0014D6  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13084  0014D8  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13085  0014DA  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13086  0014DC                     u6140:
 13087  0014DC  2EE8               	decfsz	wreg,f,c
 13088  0014DE  D7F8               	goto	u6145
 13089  0014E0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13090  0014E4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13091  0014E8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13092  0014EC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13093                           
 13094                           ; BSR set to: 0
 13095                           ;inc\CANlib.h: 951: tamp = tamp & 0x000000FF;
 13096  0014F0  0100               	movlb	0	; () banked
 13097  0014F2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13098  0014F4  0100               	movlb	0	; () banked
 13099  0014F6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13100  0014F8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13101  0014FA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13102  0014FC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13103                           
 13104                           ; BSR set to: 0
 13105                           ;inc\CANlib.h: 952: RXF2SIDH = (unsigned char) tamp;
 13106  0014FE  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 13107  001502                     l5130:
 13108                           
 13109                           ; BSR set to: 0
 13110                           ;inc\CANlib.h: 953: }
 13111                           ;inc\CANlib.h: 955: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 13112  001502  0E03               	movlw	3
 13113  001504  0100               	movlb	0	; () banked
 13114  001506  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13115  001508  A4D8               	btfss	status,2,c
 13116  00150A  D089               	goto	l5164
 13117                           
 13118                           ; BSR set to: 0
 13119  00150C  0EF7               	movlw	247
 13120  00150E  0100               	movlb	0	; () banked
 13121  001510  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13122  001512  A4D8               	btfss	status,2,c
 13123  001514  D084               	goto	l5164
 13124                           
 13125                           ; BSR set to: 0
 13126                           ;inc\CANlib.h: 956: {
 13127                           ;inc\CANlib.h: 957: RXF3SIDLbits.EXIDEN = 0x01;
 13128  001516  010F               	movlb	15	; () banked
 13129  001518  870D               	bsf	13,3,b	;volatile
 13130                           
 13131                           ; BSR set to: 15
 13132                           ;inc\CANlib.h: 959: tamp = filter & 0x000000FF;
 13133  00151A  0100               	movlb	0	; () banked
 13134  00151C  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13135  00151E  0100               	movlb	0	; () banked
 13136  001520  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13137  001522  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13138  001524  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13139  001526  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13140                           
 13141                           ; BSR set to: 0
 13142                           ;inc\CANlib.h: 960: RXF3EIDL = (unsigned char) tamp;
 13143  001528  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 13144                           
 13145                           ; BSR set to: 0
 13146                           ;inc\CANlib.h: 962: tamp = filter & 0x0000FF00;
 13147  00152C  0E00               	movlw	0
 13148  00152E  0100               	movlb	0	; () banked
 13149  001530  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13150  001532  0100               	movlb	0	; () banked
 13151  001534  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13152  001536  0EFF               	movlw	255
 13153  001538  0100               	movlb	0	; () banked
 13154  00153A  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13155  00153C  0100               	movlb	0	; () banked
 13156  00153E  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13157  001540  0E00               	movlw	0
 13158  001542  0100               	movlb	0	; () banked
 13159  001544  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13160  001546  0100               	movlb	0	; () banked
 13161  001548  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13162  00154A  0E00               	movlw	0
 13163  00154C  0100               	movlb	0	; () banked
 13164  00154E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13165  001550  0100               	movlb	0	; () banked
 13166  001552  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13167                           
 13168                           ; BSR set to: 0
 13169                           ;inc\CANlib.h: 963: tamp = tamp >> 8;
 13170  001554  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13171  001558  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13172  00155C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13173  001560  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13174  001564  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13175  001568  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13176  00156C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13177  001570  0100               	movlb	0	; () banked
 13178  001572  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13179  001574  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13180  001578  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13181  00157C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13182  001580  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13183                           
 13184                           ; BSR set to: 0
 13185                           ;inc\CANlib.h: 964: RXF3EIDH = (unsigned char) tamp;
 13186  001584  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 13187                           
 13188                           ; BSR set to: 0
 13189                           ;inc\CANlib.h: 966: if (filter & 0x00010000)
 13190  001588  0100               	movlb	0	; () banked
 13191  00158A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13192  00158C  D003               	goto	l496
 13193                           
 13194                           ; BSR set to: 0
 13195                           ;inc\CANlib.h: 967: RXF3SIDLbits.EID16 = 0x01;
 13196  00158E  010F               	movlb	15	; () banked
 13197  001590  810D               	bsf	13,0,b	;volatile
 13198  001592  D002               	goto	l497
 13199  001594                     l496:
 13200                           
 13201                           ; BSR set to: 0
 13202                           ;inc\CANlib.h: 968: else
 13203                           ;inc\CANlib.h: 969: RXF3SIDLbits.EID16 = 0x00;
 13204  001594  010F               	movlb	15	; () banked
 13205  001596  910D               	bcf	13,0,b	;volatile
 13206  001598                     l497:
 13207                           
 13208                           ; BSR set to: 15
 13209                           ;inc\CANlib.h: 971: if (filter & 0x00020000)
 13210  001598  0100               	movlb	0	; () banked
 13211  00159A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13212  00159C  D003               	goto	l498
 13213                           
 13214                           ; BSR set to: 0
 13215                           ;inc\CANlib.h: 972: RXF3SIDLbits.EID17 = 0x01;
 13216  00159E  010F               	movlb	15	; () banked
 13217  0015A0  830D               	bsf	13,1,b	;volatile
 13218  0015A2  D002               	goto	l499
 13219  0015A4                     l498:
 13220                           
 13221                           ; BSR set to: 0
 13222                           ;inc\CANlib.h: 973: else
 13223                           ;inc\CANlib.h: 974: RXF3SIDLbits.EID17 = 0x00;
 13224  0015A4  010F               	movlb	15	; () banked
 13225  0015A6  930D               	bcf	13,1,b	;volatile
 13226  0015A8                     l499:
 13227                           
 13228                           ; BSR set to: 15
 13229                           ;inc\CANlib.h: 976: if (filter & 0x00040000)
 13230  0015A8  0100               	movlb	0	; () banked
 13231  0015AA  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13232  0015AC  D003               	goto	l500
 13233                           
 13234                           ; BSR set to: 0
 13235                           ;inc\CANlib.h: 977: RXF3SIDLbits.SID0 = 0x01;
 13236  0015AE  010F               	movlb	15	; () banked
 13237  0015B0  8B0D               	bsf	13,5,b	;volatile
 13238  0015B2  D002               	goto	l501
 13239  0015B4                     l500:
 13240                           
 13241                           ; BSR set to: 0
 13242                           ;inc\CANlib.h: 978: else
 13243                           ;inc\CANlib.h: 979: RXF3SIDLbits.SID0 = 0x00;
 13244  0015B4  010F               	movlb	15	; () banked
 13245  0015B6  9B0D               	bcf	13,5,b	;volatile
 13246  0015B8                     l501:
 13247                           
 13248                           ; BSR set to: 15
 13249                           ;inc\CANlib.h: 981: if (filter & 0x00080000)
 13250  0015B8  0100               	movlb	0	; () banked
 13251  0015BA  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13252  0015BC  D003               	goto	l502
 13253                           
 13254                           ; BSR set to: 0
 13255                           ;inc\CANlib.h: 982: RXF3SIDLbits.SID1 = 0x01;
 13256  0015BE  010F               	movlb	15	; () banked
 13257  0015C0  8D0D               	bsf	13,6,b	;volatile
 13258  0015C2  D002               	goto	l503
 13259  0015C4                     l502:
 13260                           
 13261                           ; BSR set to: 0
 13262                           ;inc\CANlib.h: 983: else
 13263                           ;inc\CANlib.h: 984: RXF3SIDLbits.SID1 = 0x00;
 13264  0015C4  010F               	movlb	15	; () banked
 13265  0015C6  9D0D               	bcf	13,6,b	;volatile
 13266  0015C8                     l503:
 13267                           
 13268                           ; BSR set to: 15
 13269                           ;inc\CANlib.h: 986: if (filter & 0x00100000)
 13270  0015C8  0100               	movlb	0	; () banked
 13271  0015CA  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13272  0015CC  D003               	goto	l504
 13273                           
 13274                           ; BSR set to: 0
 13275                           ;inc\CANlib.h: 987: RXF3SIDLbits.SID2 = 0x01 ;
 13276  0015CE  010F               	movlb	15	; () banked
 13277  0015D0  8F0D               	bsf	13,7,b	;volatile
 13278  0015D2  D002               	goto	l5158
 13279  0015D4                     l504:
 13280                           
 13281                           ; BSR set to: 0
 13282                           ;inc\CANlib.h: 988: else
 13283                           ;inc\CANlib.h: 989: RXF3SIDLbits.SID2 = 0x00 ;
 13284  0015D4  010F               	movlb	15	; () banked
 13285  0015D6  9F0D               	bcf	13,7,b	;volatile
 13286  0015D8                     l5158:
 13287                           
 13288                           ; BSR set to: 15
 13289                           ;inc\CANlib.h: 991: tamp = (filter >> 21);
 13290  0015D8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13291  0015DC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13292  0015E0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13293  0015E4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13294  0015E8  0E16               	movlw	22
 13295  0015EA  D006               	goto	u6220
 13296  0015EC                     u6225:
 13297  0015EC  0100               	movlb	0	; () banked
 13298  0015EE  90D8               	bcf	status,0,c
 13299  0015F0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13300  0015F2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13301  0015F4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13302  0015F6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13303  0015F8                     u6220:
 13304  0015F8  2EE8               	decfsz	wreg,f,c
 13305  0015FA  D7F8               	goto	u6225
 13306  0015FC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13307  001600  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13308  001604  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13309  001608  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13310                           
 13311                           ; BSR set to: 0
 13312                           ;inc\CANlib.h: 992: tamp = tamp & 0x000000FF;
 13313  00160C  0100               	movlb	0	; () banked
 13314  00160E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13315  001610  0100               	movlb	0	; () banked
 13316  001612  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13317  001614  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13318  001616  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13319  001618  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13320                           
 13321                           ; BSR set to: 0
 13322                           ;inc\CANlib.h: 993: RXF3SIDH = (unsigned char) tamp;
 13323  00161A  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 13324  00161E                     l5164:
 13325                           
 13326                           ; BSR set to: 0
 13327                           ;inc\CANlib.h: 994: }
 13328                           ;inc\CANlib.h: 996: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 13329  00161E  0E04               	movlw	4
 13330  001620  0100               	movlb	0	; () banked
 13331  001622  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13332  001624  A4D8               	btfss	status,2,c
 13333  001626  D089               	goto	l5198
 13334                           
 13335                           ; BSR set to: 0
 13336  001628  0EF7               	movlw	247
 13337  00162A  0100               	movlb	0	; () banked
 13338  00162C  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13339  00162E  A4D8               	btfss	status,2,c
 13340  001630  D084               	goto	l5198
 13341                           
 13342                           ; BSR set to: 0
 13343                           ;inc\CANlib.h: 997: {
 13344                           ;inc\CANlib.h: 998: RXF4SIDLbits.EXIDEN = 0x01;
 13345  001632  010F               	movlb	15	; () banked
 13346  001634  8711               	bsf	17,3,b	;volatile
 13347                           
 13348                           ; BSR set to: 15
 13349                           ;inc\CANlib.h: 1000: tamp = filter & 0x000000FF;
 13350  001636  0100               	movlb	0	; () banked
 13351  001638  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13352  00163A  0100               	movlb	0	; () banked
 13353  00163C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13354  00163E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13355  001640  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13356  001642  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13357                           
 13358                           ; BSR set to: 0
 13359                           ;inc\CANlib.h: 1001: RXF4EIDL = (unsigned char) tamp;
 13360  001644  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 13361                           
 13362                           ; BSR set to: 0
 13363                           ;inc\CANlib.h: 1003: tamp = filter & 0x0000FF00;
 13364  001648  0E00               	movlw	0
 13365  00164A  0100               	movlb	0	; () banked
 13366  00164C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13367  00164E  0100               	movlb	0	; () banked
 13368  001650  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13369  001652  0EFF               	movlw	255
 13370  001654  0100               	movlb	0	; () banked
 13371  001656  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13372  001658  0100               	movlb	0	; () banked
 13373  00165A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13374  00165C  0E00               	movlw	0
 13375  00165E  0100               	movlb	0	; () banked
 13376  001660  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13377  001662  0100               	movlb	0	; () banked
 13378  001664  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13379  001666  0E00               	movlw	0
 13380  001668  0100               	movlb	0	; () banked
 13381  00166A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13382  00166C  0100               	movlb	0	; () banked
 13383  00166E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13384                           
 13385                           ; BSR set to: 0
 13386                           ;inc\CANlib.h: 1004: tamp = tamp >> 8;
 13387  001670  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13388  001674  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13389  001678  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13390  00167C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13391  001680  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13392  001684  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13393  001688  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13394  00168C  0100               	movlb	0	; () banked
 13395  00168E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13396  001690  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13397  001694  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13398  001698  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13399  00169C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13400                           
 13401                           ; BSR set to: 0
 13402                           ;inc\CANlib.h: 1005: RXF4EIDH = (unsigned char) tamp;
 13403  0016A0  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 13404                           
 13405                           ; BSR set to: 0
 13406                           ;inc\CANlib.h: 1007: if (filter & 0x00010000)
 13407  0016A4  0100               	movlb	0	; () banked
 13408  0016A6  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13409  0016A8  D003               	goto	l507
 13410                           
 13411                           ; BSR set to: 0
 13412                           ;inc\CANlib.h: 1008: RXF4SIDLbits.EID16 = 0x01;
 13413  0016AA  010F               	movlb	15	; () banked
 13414  0016AC  8111               	bsf	17,0,b	;volatile
 13415  0016AE  D002               	goto	l508
 13416  0016B0                     l507:
 13417                           
 13418                           ; BSR set to: 0
 13419                           ;inc\CANlib.h: 1009: else
 13420                           ;inc\CANlib.h: 1010: RXF4SIDLbits.EID16 = 0x00;
 13421  0016B0  010F               	movlb	15	; () banked
 13422  0016B2  9111               	bcf	17,0,b	;volatile
 13423  0016B4                     l508:
 13424                           
 13425                           ; BSR set to: 15
 13426                           ;inc\CANlib.h: 1012: if (filter & 0x00020000)
 13427  0016B4  0100               	movlb	0	; () banked
 13428  0016B6  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13429  0016B8  D003               	goto	l509
 13430                           
 13431                           ; BSR set to: 0
 13432                           ;inc\CANlib.h: 1013: RXF4SIDLbits.EID17 = 0x01;
 13433  0016BA  010F               	movlb	15	; () banked
 13434  0016BC  8311               	bsf	17,1,b	;volatile
 13435  0016BE  D002               	goto	l510
 13436  0016C0                     l509:
 13437                           
 13438                           ; BSR set to: 0
 13439                           ;inc\CANlib.h: 1014: else
 13440                           ;inc\CANlib.h: 1015: RXF4SIDLbits.EID17 = 0x00;
 13441  0016C0  010F               	movlb	15	; () banked
 13442  0016C2  9311               	bcf	17,1,b	;volatile
 13443  0016C4                     l510:
 13444                           
 13445                           ; BSR set to: 15
 13446                           ;inc\CANlib.h: 1017: if (filter & 0x00040000)
 13447  0016C4  0100               	movlb	0	; () banked
 13448  0016C6  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13449  0016C8  D003               	goto	l511
 13450                           
 13451                           ; BSR set to: 0
 13452                           ;inc\CANlib.h: 1018: RXF4SIDLbits.SID0 = 0x01;
 13453  0016CA  010F               	movlb	15	; () banked
 13454  0016CC  8B11               	bsf	17,5,b	;volatile
 13455  0016CE  D002               	goto	l512
 13456  0016D0                     l511:
 13457                           
 13458                           ; BSR set to: 0
 13459                           ;inc\CANlib.h: 1019: else
 13460                           ;inc\CANlib.h: 1020: RXF4SIDLbits.SID0 = 0x00;
 13461  0016D0  010F               	movlb	15	; () banked
 13462  0016D2  9B11               	bcf	17,5,b	;volatile
 13463  0016D4                     l512:
 13464                           
 13465                           ; BSR set to: 15
 13466                           ;inc\CANlib.h: 1022: if (filter & 0x00080000)
 13467  0016D4  0100               	movlb	0	; () banked
 13468  0016D6  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13469  0016D8  D003               	goto	l513
 13470                           
 13471                           ; BSR set to: 0
 13472                           ;inc\CANlib.h: 1023: RXF4SIDLbits.SID1 = 0x01;
 13473  0016DA  010F               	movlb	15	; () banked
 13474  0016DC  8D11               	bsf	17,6,b	;volatile
 13475  0016DE  D002               	goto	l514
 13476  0016E0                     l513:
 13477                           
 13478                           ; BSR set to: 0
 13479                           ;inc\CANlib.h: 1024: else
 13480                           ;inc\CANlib.h: 1025: RXF4SIDLbits.SID1 = 0x00;
 13481  0016E0  010F               	movlb	15	; () banked
 13482  0016E2  9D11               	bcf	17,6,b	;volatile
 13483  0016E4                     l514:
 13484                           
 13485                           ; BSR set to: 15
 13486                           ;inc\CANlib.h: 1027: if (filter & 0x00100000)
 13487  0016E4  0100               	movlb	0	; () banked
 13488  0016E6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13489  0016E8  D003               	goto	l515
 13490                           
 13491                           ; BSR set to: 0
 13492                           ;inc\CANlib.h: 1028: RXF4SIDLbits.SID2 = 0x01 ;
 13493  0016EA  010F               	movlb	15	; () banked
 13494  0016EC  8F11               	bsf	17,7,b	;volatile
 13495  0016EE  D002               	goto	l5192
 13496  0016F0                     l515:
 13497                           
 13498                           ; BSR set to: 0
 13499                           ;inc\CANlib.h: 1029: else
 13500                           ;inc\CANlib.h: 1030: RXF4SIDLbits.SID2 = 0x00 ;
 13501  0016F0  010F               	movlb	15	; () banked
 13502  0016F2  9F11               	bcf	17,7,b	;volatile
 13503  0016F4                     l5192:
 13504                           
 13505                           ; BSR set to: 15
 13506                           ;inc\CANlib.h: 1032: tamp = (filter >> 21);
 13507  0016F4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13508  0016F8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13509  0016FC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13510  001700  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13511  001704  0E16               	movlw	22
 13512  001706  D006               	goto	u6300
 13513  001708                     u6305:
 13514  001708  0100               	movlb	0	; () banked
 13515  00170A  90D8               	bcf	status,0,c
 13516  00170C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13517  00170E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13518  001710  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13519  001712  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13520  001714                     u6300:
 13521  001714  2EE8               	decfsz	wreg,f,c
 13522  001716  D7F8               	goto	u6305
 13523  001718  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13524  00171C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13525  001720  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13526  001724  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13527                           
 13528                           ; BSR set to: 0
 13529                           ;inc\CANlib.h: 1033: tamp = tamp & 0x000000FF;
 13530  001728  0100               	movlb	0	; () banked
 13531  00172A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13532  00172C  0100               	movlb	0	; () banked
 13533  00172E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13534  001730  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13535  001732  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13536  001734  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13537                           
 13538                           ; BSR set to: 0
 13539                           ;inc\CANlib.h: 1034: RXF4SIDH = (unsigned char) tamp;
 13540  001736  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 13541  00173A                     l5198:
 13542                           
 13543                           ; BSR set to: 0
 13544                           ;inc\CANlib.h: 1035: }
 13545                           ;inc\CANlib.h: 1037: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 13546  00173A  0E05               	movlw	5
 13547  00173C  0100               	movlb	0	; () banked
 13548  00173E  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13549  001740  A4D8               	btfss	status,2,c
 13550  001742  0012               	return	
 13551                           
 13552                           ; BSR set to: 0
 13553  001744  0EF7               	movlw	247
 13554  001746  0100               	movlb	0	; () banked
 13555  001748  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13556  00174A  A4D8               	btfss	status,2,c
 13557  00174C  0012               	return	
 13558                           
 13559                           ; BSR set to: 0
 13560                           ;inc\CANlib.h: 1038: {
 13561                           ;inc\CANlib.h: 1039: RXF5SIDLbits.EXIDEN = 0x01;
 13562  00174E  010F               	movlb	15	; () banked
 13563  001750  8715               	bsf	21,3,b	;volatile
 13564                           
 13565                           ; BSR set to: 15
 13566                           ;inc\CANlib.h: 1041: tamp = filter & 0x000000FF;
 13567  001752  0100               	movlb	0	; () banked
 13568  001754  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13569  001756  0100               	movlb	0	; () banked
 13570  001758  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13571  00175A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13572  00175C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13573  00175E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13574                           
 13575                           ; BSR set to: 0
 13576                           ;inc\CANlib.h: 1042: RXF5EIDL = (unsigned char) tamp;
 13577  001760  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 13578                           
 13579                           ; BSR set to: 0
 13580                           ;inc\CANlib.h: 1044: tamp = filter & 0x0000FF00;
 13581  001764  0E00               	movlw	0
 13582  001766  0100               	movlb	0	; () banked
 13583  001768  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13584  00176A  0100               	movlb	0	; () banked
 13585  00176C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13586  00176E  0EFF               	movlw	255
 13587  001770  0100               	movlb	0	; () banked
 13588  001772  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13589  001774  0100               	movlb	0	; () banked
 13590  001776  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13591  001778  0E00               	movlw	0
 13592  00177A  0100               	movlb	0	; () banked
 13593  00177C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13594  00177E  0100               	movlb	0	; () banked
 13595  001780  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13596  001782  0E00               	movlw	0
 13597  001784  0100               	movlb	0	; () banked
 13598  001786  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13599  001788  0100               	movlb	0	; () banked
 13600  00178A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13601                           
 13602                           ; BSR set to: 0
 13603                           ;inc\CANlib.h: 1045: tamp = tamp >> 8;
 13604  00178C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13605  001790  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13606  001794  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13607  001798  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13608  00179C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13609  0017A0  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13610  0017A4  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13611  0017A8  0100               	movlb	0	; () banked
 13612  0017AA  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13613  0017AC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13614  0017B0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13615  0017B4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13616  0017B8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13617                           
 13618                           ; BSR set to: 0
 13619                           ;inc\CANlib.h: 1046: RXF5EIDH = (unsigned char) tamp;
 13620  0017BC  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 13621                           
 13622                           ; BSR set to: 0
 13623                           ;inc\CANlib.h: 1048: if (filter & 0x00010000)
 13624  0017C0  0100               	movlb	0	; () banked
 13625  0017C2  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13626  0017C4  D003               	goto	l518
 13627                           
 13628                           ; BSR set to: 0
 13629                           ;inc\CANlib.h: 1049: RXF5SIDLbits.EID16 = 0x01;
 13630  0017C6  010F               	movlb	15	; () banked
 13631  0017C8  8115               	bsf	21,0,b	;volatile
 13632  0017CA  D002               	goto	l519
 13633  0017CC                     l518:
 13634                           
 13635                           ; BSR set to: 0
 13636                           ;inc\CANlib.h: 1050: else
 13637                           ;inc\CANlib.h: 1051: RXF5SIDLbits.EID16 = 0x00;
 13638  0017CC  010F               	movlb	15	; () banked
 13639  0017CE  9115               	bcf	21,0,b	;volatile
 13640  0017D0                     l519:
 13641                           
 13642                           ; BSR set to: 15
 13643                           ;inc\CANlib.h: 1053: if (filter & 0x00020000)
 13644  0017D0  0100               	movlb	0	; () banked
 13645  0017D2  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13646  0017D4  D003               	goto	l520
 13647                           
 13648                           ; BSR set to: 0
 13649                           ;inc\CANlib.h: 1054: RXF5SIDLbits.EID17 = 0x01;
 13650  0017D6  010F               	movlb	15	; () banked
 13651  0017D8  8315               	bsf	21,1,b	;volatile
 13652  0017DA  D002               	goto	l521
 13653  0017DC                     l520:
 13654                           
 13655                           ; BSR set to: 0
 13656                           ;inc\CANlib.h: 1055: else
 13657                           ;inc\CANlib.h: 1056: RXF5SIDLbits.EID17 = 0x00;
 13658  0017DC  010F               	movlb	15	; () banked
 13659  0017DE  9315               	bcf	21,1,b	;volatile
 13660  0017E0                     l521:
 13661                           
 13662                           ; BSR set to: 15
 13663                           ;inc\CANlib.h: 1058: if (filter & 0x00040000)
 13664  0017E0  0100               	movlb	0	; () banked
 13665  0017E2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13666  0017E4  D003               	goto	l522
 13667                           
 13668                           ; BSR set to: 0
 13669                           ;inc\CANlib.h: 1059: RXF5SIDLbits.SID0 = 0x01;
 13670  0017E6  010F               	movlb	15	; () banked
 13671  0017E8  8B15               	bsf	21,5,b	;volatile
 13672  0017EA  D002               	goto	l523
 13673  0017EC                     l522:
 13674                           
 13675                           ; BSR set to: 0
 13676                           ;inc\CANlib.h: 1060: else
 13677                           ;inc\CANlib.h: 1061: RXF5SIDLbits.SID0 = 0x00;
 13678  0017EC  010F               	movlb	15	; () banked
 13679  0017EE  9B15               	bcf	21,5,b	;volatile
 13680  0017F0                     l523:
 13681                           
 13682                           ; BSR set to: 15
 13683                           ;inc\CANlib.h: 1063: if (filter & 0x00080000)
 13684  0017F0  0100               	movlb	0	; () banked
 13685  0017F2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13686  0017F4  D003               	goto	l524
 13687                           
 13688                           ; BSR set to: 0
 13689                           ;inc\CANlib.h: 1064: RXF5SIDLbits.SID1 = 0x01;
 13690  0017F6  010F               	movlb	15	; () banked
 13691  0017F8  8D15               	bsf	21,6,b	;volatile
 13692  0017FA  D002               	goto	l525
 13693  0017FC                     l524:
 13694                           
 13695                           ; BSR set to: 0
 13696                           ;inc\CANlib.h: 1065: else
 13697                           ;inc\CANlib.h: 1066: RXF5SIDLbits.SID1 = 0x00;
 13698  0017FC  010F               	movlb	15	; () banked
 13699  0017FE  9D15               	bcf	21,6,b	;volatile
 13700  001800                     l525:
 13701                           
 13702                           ; BSR set to: 15
 13703                           ;inc\CANlib.h: 1068: if (filter & 0x00100000)
 13704  001800  0100               	movlb	0	; () banked
 13705  001802  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13706  001804  D003               	goto	l526
 13707                           
 13708                           ; BSR set to: 0
 13709                           ;inc\CANlib.h: 1069: RXF5SIDLbits.SID2 = 0x01 ;
 13710  001806  010F               	movlb	15	; () banked
 13711  001808  8F15               	bsf	21,7,b	;volatile
 13712  00180A  D002               	goto	l5226
 13713  00180C                     l526:
 13714                           
 13715                           ; BSR set to: 0
 13716                           ;inc\CANlib.h: 1070: else
 13717                           ;inc\CANlib.h: 1071: RXF5SIDLbits.SID2 = 0x00 ;
 13718  00180C  010F               	movlb	15	; () banked
 13719  00180E  9F15               	bcf	21,7,b	;volatile
 13720  001810                     l5226:
 13721                           
 13722                           ; BSR set to: 15
 13723                           ;inc\CANlib.h: 1073: tamp = (filter >> 21);
 13724  001810  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13725  001814  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13726  001818  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13727  00181C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13728  001820  0E16               	movlw	22
 13729  001822  D006               	goto	u6380
 13730  001824                     u6385:
 13731  001824  0100               	movlb	0	; () banked
 13732  001826  90D8               	bcf	status,0,c
 13733  001828  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13734  00182A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13735  00182C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13736  00182E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13737  001830                     u6380:
 13738  001830  2EE8               	decfsz	wreg,f,c
 13739  001832  D7F8               	goto	u6385
 13740  001834  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13741  001838  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13742  00183C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13743  001840  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13744                           
 13745                           ; BSR set to: 0
 13746                           ;inc\CANlib.h: 1074: tamp = tamp & 0x000000FF;
 13747  001844  0100               	movlb	0	; () banked
 13748  001846  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13749  001848  0100               	movlb	0	; () banked
 13750  00184A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13751  00184C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13752  00184E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13753  001850  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13754                           
 13755                           ; BSR set to: 0
 13756                           ;inc\CANlib.h: 1075: RXF5SIDH = (unsigned char) tamp;
 13757  001852  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 13758  001856  0012               	return	
 13759  001858                     __end_of_CANSetFilter:
 13760                           	opt stack 0
 13761                           tblptru	equ	0xFF8
 13762                           tblptrh	equ	0xFF7
 13763                           tblptrl	equ	0xFF6
 13764                           tablat	equ	0xFF5
 13765                           prodh	equ	0xFF4
 13766                           prodl	equ	0xFF3
 13767                           intcon	equ	0xFF2
 13768                           intcon2	equ	0xFF1
 13769                           postinc0	equ	0xFEE
 13770                           wreg	equ	0xFE8
 13771                           postdec1	equ	0xFE5
 13772                           fsr1l	equ	0xFE1
 13773                           indf2	equ	0xFDF
 13774                           postinc2	equ	0xFDE
 13775                           postdec2	equ	0xFDD
 13776                           fsr2h	equ	0xFDA
 13777                           fsr2l	equ	0xFD9
 13778                           status	equ	0xFD8
 13779                           
 13780 ;; *************** function _CANOperationMode *****************
 13781 ;; Defined at:
 13782 ;;		line 206 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 13783 ;; Parameters:    Size  Location     Type
 13784 ;;  mode            1    wreg     enum E16307
 13785 ;; Auto vars:     Size  Location     Type
 13786 ;;  mode            1   23[BANK0 ] enum E16307
 13787 ;; Return value:  Size  Location     Type
 13788 ;;		None               void
 13789 ;; Registers used:
 13790 ;;		wreg, status,2, status,0
 13791 ;; Tracked objects:
 13792 ;;		On entry : 0/0
 13793 ;;		On exit  : 0/0
 13794 ;;		Unchanged: 0/0
 13795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13797 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13799 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13800 ;;Total ram usage:        1 bytes
 13801 ;; Hardware stack levels used:    1
 13802 ;; Hardware stack levels required when called:    4
 13803 ;; This function calls:
 13804 ;;		Nothing
 13805 ;; This function is called by:
 13806 ;;		_CANInitialize
 13807 ;; This function uses a non-reentrant model
 13808 ;;
 13809                           
 13810                           	psect	text33
 13811  005C2A                     __ptext33:
 13812                           	opt stack 0
 13813  005C2A                     _CANOperationMode:
 13814                           	opt stack 24
 13815                           
 13816                           ; BSR set to: 0
 13817                           ;incstack = 0
 13818                           ;CANOperationMode@mode stored from wreg
 13819  005C2A  0100               	movlb	0	; () banked
 13820  005C2C  6F77               	movwf	CANOperationMode@mode& (0+255),b
 13821                           
 13822                           ;inc\CANlib.h: 208: CANCON = mode;
 13823  005C2E  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 13824  005C32                     l4822:
 13825  005C32  506E               	movf	3950,w,c	;volatile
 13826  005C34  0BE0               	andlw	224
 13827  005C36  0100               	movlb	0	; () banked
 13828  005C38  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 13829  005C3A  B4D8               	btfsc	status,2,c
 13830  005C3C  0012               	return	
 13831  005C3E  D7F9               	goto	l4822
 13832  005C40                     __end_of_CANOperationMode:
 13833                           	opt stack 0
 13834                           tblptru	equ	0xFF8
 13835                           tblptrh	equ	0xFF7
 13836                           tblptrl	equ	0xFF6
 13837                           tablat	equ	0xFF5
 13838                           prodh	equ	0xFF4
 13839                           prodl	equ	0xFF3
 13840                           intcon	equ	0xFF2
 13841                           intcon2	equ	0xFF1
 13842                           postinc0	equ	0xFEE
 13843                           wreg	equ	0xFE8
 13844                           postdec1	equ	0xFE5
 13845                           fsr1l	equ	0xFE1
 13846                           indf2	equ	0xFDF
 13847                           postinc2	equ	0xFDE
 13848                           postdec2	equ	0xFDD
 13849                           fsr2h	equ	0xFDA
 13850                           fsr2l	equ	0xFD9
 13851                           status	equ	0xFD8
 13852                           
 13853 ;; *************** function _can_interpreter *****************
 13854 ;; Defined at:
 13855 ;;		line 377 in file "parcheggio.c"
 13856 ;; Parameters:    Size  Location     Type
 13857 ;;		None
 13858 ;; Auto vars:     Size  Location     Type
 13859 ;;		None
 13860 ;; Return value:  Size  Location     Type
 13861 ;;		None               void
 13862 ;; Registers used:
 13863 ;;		wreg, status,2, status,0
 13864 ;; Tracked objects:
 13865 ;;		On entry : 0/0
 13866 ;;		On exit  : 0/0
 13867 ;;		Unchanged: 0/0
 13868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13871 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13872 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13873 ;;Total ram usage:        4 bytes
 13874 ;; Hardware stack levels used:    1
 13875 ;; Hardware stack levels required when called:    4
 13876 ;; This function calls:
 13877 ;;		Nothing
 13878 ;; This function is called by:
 13879 ;;		_main
 13880 ;; This function uses a non-reentrant model
 13881 ;;
 13882                           
 13883                           	psect	text34
 13884  0059E0                     __ptext34:
 13885                           	opt stack 0
 13886  0059E0                     _can_interpreter:
 13887                           	opt stack 26
 13888                           
 13889                           ;parcheggio.c: 378: left_speed = data_speed_rx[1];
 13890                           
 13891                           ; BSR set to: 0
 13892                           ;incstack = 0
 13893  0059E0  C109  F038         	movff	_data_speed_rx+1,_left_speed
 13894  0059E4  6A39               	clrf	_left_speed+1,c
 13895                           
 13896                           ;parcheggio.c: 379: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 13897  0059E6  5038               	movf	_left_speed,w,c
 13898  0059E8  0100               	movlb	0	; () banked
 13899  0059EA  6F77               	movwf	??_can_interpreter& (0+255),b
 13900  0059EC  0101               	movlb	1	; () banked
 13901  0059EE  5108               	movf	_data_speed_rx& (0+255),w,b
 13902  0059F0  6E38               	movwf	_left_speed,c
 13903  0059F2  C077  F039         	movff	??_can_interpreter,_left_speed+1
 13904                           
 13905                           ; BSR set to: 1
 13906                           ;parcheggio.c: 380: right_speed = data_speed_rx[3];
 13907  0059F6  C10B  F03C         	movff	_data_speed_rx+3,_right_speed
 13908  0059FA  6A3D               	clrf	_right_speed+1,c
 13909                           
 13910                           ;parcheggio.c: 381: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 13911  0059FC  503C               	movf	_right_speed,w,c
 13912  0059FE  0100               	movlb	0	; () banked
 13913  005A00  6F77               	movwf	??_can_interpreter& (0+255),b
 13914  005A02  0101               	movlb	1	; () banked
 13915  005A04  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 13916  005A06  6E3C               	movwf	_right_speed,c
 13917  005A08  C077  F03D         	movff	??_can_interpreter,_right_speed+1
 13918                           
 13919                           ; BSR set to: 1
 13920                           ;parcheggio.c: 382: actual_speed = (right_speed + left_speed) / 2;
 13921  005A0C  5038               	movf	_left_speed,w,c
 13922  005A0E  243C               	addwf	_right_speed,w,c
 13923  005A10  0100               	movlb	0	; () banked
 13924  005A12  6F77               	movwf	??_can_interpreter& (0+255),b
 13925  005A14  5039               	movf	_left_speed+1,w,c
 13926  005A16  203D               	addwfc	_right_speed+1,w,c
 13927  005A18  0100               	movlb	0	; () banked
 13928  005A1A  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 13929  005A1C  90D8               	bcf	status,0,c
 13930  005A1E  0100               	movlb	0	; () banked
 13931  005A20  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 13932  005A22  0100               	movlb	0	; () banked
 13933  005A24  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 13934  005A26  0100               	movlb	0	; () banked
 13935  005A28  3177               	rrcf	??_can_interpreter& (0+255),w,b
 13936  005A2A  0100               	movlb	0	; () banked
 13937  005A2C  6FDF               	movwf	_actual_speed& (0+255),b
 13938  005A2E  C079  F0E0         	movff	??_can_interpreter+2,_actual_speed+1
 13939                           
 13940                           ; BSR set to: 0
 13941  005A32  0012               	return		;funcret
 13942  005A34                     __end_of_can_interpreter:
 13943                           	opt stack 0
 13944                           tblptru	equ	0xFF8
 13945                           tblptrh	equ	0xFF7
 13946                           tblptrl	equ	0xFF6
 13947                           tablat	equ	0xFF5
 13948                           prodh	equ	0xFF4
 13949                           prodl	equ	0xFF3
 13950                           intcon	equ	0xFF2
 13951                           intcon2	equ	0xFF1
 13952                           postinc0	equ	0xFEE
 13953                           wreg	equ	0xFE8
 13954                           postdec1	equ	0xFE5
 13955                           fsr1l	equ	0xFE1
 13956                           indf2	equ	0xFDF
 13957                           postinc2	equ	0xFDE
 13958                           postdec2	equ	0xFDD
 13959                           fsr2h	equ	0xFDA
 13960                           fsr2l	equ	0xFD9
 13961                           status	equ	0xFD8
 13962                           
 13963 ;; *************** function _ISR_Bassa *****************
 13964 ;; Defined at:
 13965 ;;		line 109 in file "parcheggio.c"
 13966 ;; Parameters:    Size  Location     Type
 13967 ;;		None
 13968 ;; Auto vars:     Size  Location     Type
 13969 ;;  i               1   34[COMRAM] unsigned char 
 13970 ;;  gigi            1   33[COMRAM] unsigned char 
 13971 ;; Return value:  Size  Location     Type
 13972 ;;		None               void
 13973 ;; Registers used:
 13974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13975 ;; Tracked objects:
 13976 ;;		On entry : 0/0
 13977 ;;		On exit  : 0/0
 13978 ;;		Unchanged: 0/0
 13979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13981 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13982 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13983 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13984 ;;Total ram usage:       23 bytes
 13985 ;; Hardware stack levels used:    1
 13986 ;; Hardware stack levels required when called:    3
 13987 ;; This function calls:
 13988 ;;		_CANreceiveMessage
 13989 ;; This function is called by:
 13990 ;;		Interrupt level 1
 13991 ;; This function uses a non-reentrant model
 13992 ;;
 13993                           
 13994                           	psect	intcodelo
 13995  000018                     __pintcodelo:
 13996                           	opt stack 0
 13997  000018                     _ISR_Bassa:
 13998                           	opt stack 21
 13999                           
 14000                           ; BSR set to: 0
 14001                           ;incstack = 0
 14002  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14003  00001A  CFD8 F011          	movff	status,??_ISR_Bassa+4
 14004  00001E  CFE8 F012          	movff	wreg,??_ISR_Bassa+5
 14005  000022  CFE0 F013          	movff	bsr,??_ISR_Bassa+6
 14006  000026  CFFA F014          	movff	pclath,??_ISR_Bassa+7
 14007  00002A  CFFB F015          	movff	pclatu,??_ISR_Bassa+8
 14008  00002E  CFE9 F016          	movff	fsr0l,??_ISR_Bassa+9
 14009  000032  CFEA F017          	movff	fsr0h,??_ISR_Bassa+10
 14010  000036  CFE1 F018          	movff	fsr1l,??_ISR_Bassa+11
 14011  00003A  CFE2 F019          	movff	fsr1h,??_ISR_Bassa+12
 14012  00003E  CFD9 F01A          	movff	fsr2l,??_ISR_Bassa+13
 14013  000042  CFDA F01B          	movff	fsr2h,??_ISR_Bassa+14
 14014  000046  CFF3 F01C          	movff	prodl,??_ISR_Bassa+15
 14015  00004A  CFF4 F01D          	movff	prodh,??_ISR_Bassa+16
 14016  00004E  CFF6 F01E          	movff	tblptrl,??_ISR_Bassa+17
 14017  000052  CFF7 F01F          	movff	tblptrh,??_ISR_Bassa+18
 14018  000056  CFF8 F020          	movff	tblptru,??_ISR_Bassa+19
 14019  00005A  CFF5 F021          	movff	tablat,??_ISR_Bassa+20
 14020                           
 14021                           ;parcheggio.c: 111: if (INTCONbits.TMR0IF == 1) {
 14022  00005E  A4F2               	btfss	intcon,2,c	;volatile
 14023  000060  D036               	goto	i1l5856
 14024                           
 14025                           ;parcheggio.c: 112: INTCONbits.INT0IE = 0;
 14026  000062  98F2               	bcf	intcon,4,c	;volatile
 14027                           
 14028                           ;parcheggio.c: 113: T0CONbits.TMR0ON = 0;
 14029  000064  9ED5               	bcf	4053,7,c	;volatile
 14030                           
 14031                           ;parcheggio.c: 114: TMR0H = 0x34;
 14032  000066  0E34               	movlw	52
 14033  000068  6ED7               	movwf	4055,c	;volatile
 14034                           
 14035                           ;parcheggio.c: 115: TMR0L = 0xE0;
 14036  00006A  0EE0               	movlw	224
 14037  00006C  6ED6               	movwf	4054,c	;volatile
 14038                           
 14039                           ;parcheggio.c: 116: T0CONbits.TMR0ON = 1;
 14040  00006E  8ED5               	bsf	4053,7,c	;volatile
 14041                           
 14042                           ;parcheggio.c: 117: if (distance_error == 1) {
 14043  000070  A644               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14044  000072  D00C               	goto	i1l5826
 14045                           
 14046                           ;parcheggio.c: 118: sensor_distance[MUX_index] = 5000;
 14047  000074  5040               	movf	_MUX_index,w,c	;volatile
 14048  000076  0D02               	mullw	2
 14049  000078  0E24               	movlw	low _sensor_distance
 14050  00007A  24F3               	addwf	prodl,w,c
 14051  00007C  6ED9               	movwf	fsr2l,c
 14052  00007E  0E00               	movlw	high _sensor_distance
 14053  000080  20F4               	addwfc	prodh,w,c
 14054  000082  6EDA               	movwf	fsr2h,c
 14055  000084  0E88               	movlw	136
 14056  000086  6EDE               	movwf	postinc2,c
 14057  000088  0E13               	movlw	19
 14058  00008A  6EDD               	movwf	postdec2,c
 14059  00008C                     i1l5826:
 14060                           
 14061                           ;parcheggio.c: 119: }
 14062                           ;parcheggio.c: 120: MUX_index++;
 14063  00008C  2A40               	incf	_MUX_index,f,c	;volatile
 14064                           
 14065                           ;parcheggio.c: 121: if (MUX_index == 8) {
 14066  00008E  0E08               	movlw	8
 14067  000090  1840               	xorwf	_MUX_index,w,c	;volatile
 14068  000092  A4D8               	btfss	status,2,c
 14069  000094  D002               	goto	i1l695
 14070                           
 14071                           ;parcheggio.c: 122: MUX_index = 0;
 14072  000096  0E00               	movlw	0
 14073  000098  6E40               	movwf	_MUX_index,c	;volatile
 14074  00009A                     i1l695:
 14075                           
 14076                           ;parcheggio.c: 123: }
 14077                           ;parcheggio.c: 125: unsigned char gigi = 0;
 14078  00009A  0E00               	movlw	0
 14079  00009C  6E22               	movwf	ISR_Bassa@gigi,c
 14080                           
 14081                           ;parcheggio.c: 126: gigi = MUX_select[MUX_index];
 14082  00009E  5040               	movf	_MUX_index,w,c	;volatile
 14083  0000A0  0D01               	mullw	1
 14084  0000A2  0E00               	movlw	low _MUX_select
 14085  0000A4  24F3               	addwf	prodl,w,c
 14086  0000A6  6ED9               	movwf	fsr2l,c
 14087  0000A8  0E01               	movlw	high _MUX_select
 14088  0000AA  20F4               	addwfc	prodh,w,c
 14089  0000AC  6EDA               	movwf	fsr2h,c
 14090  0000AE  50DF               	movf	indf2,w,c
 14091  0000B0  6E22               	movwf	ISR_Bassa@gigi,c
 14092                           
 14093                           ;parcheggio.c: 127: PORTA = gigi;
 14094  0000B2  C022  FF80         	movff	ISR_Bassa@gigi,3968	;volatile
 14095                           
 14096                           ;parcheggio.c: 128: TRISBbits.RB0 = 0;
 14097  0000B6  9093               	bcf	3987,0,c	;volatile
 14098                           
 14099                           ;parcheggio.c: 129: LATBbits.LATB0 = 1;
 14100  0000B8  808A               	bsf	3978,0,c	;volatile
 14101                           
 14102                           ;parcheggio.c: 130: _delay((unsigned long)((15)*(16000000/4000000.0)));
 14103  0000BA  0E14               	movlw	20
 14104  0000BC                     i1u901_27:
 14105  0000BC  2EE8               	decfsz	wreg,f,c
 14106  0000BE  D7FE               	goto	i1u901_27
 14107                           
 14108                           ;parcheggio.c: 131: distance_error = 1;
 14109  0000C0  8644               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14110                           
 14111                           ;parcheggio.c: 132: LATBbits.LATB0 = 0;
 14112  0000C2  908A               	bcf	3978,0,c	;volatile
 14113                           
 14114                           ;parcheggio.c: 133: TRISBbits.RB0 = 1;
 14115  0000C4  8093               	bsf	3987,0,c	;volatile
 14116                           
 14117                           ;parcheggio.c: 134: INTCONbits.INT0IF = 0;
 14118  0000C6  92F2               	bcf	intcon,1,c	;volatile
 14119                           
 14120                           ;parcheggio.c: 135: INTCONbits.INT0IE = 1;
 14121  0000C8  88F2               	bsf	intcon,4,c	;volatile
 14122                           
 14123                           ;parcheggio.c: 136: INTCONbits.TMR0IF = 0;
 14124  0000CA  94F2               	bcf	intcon,2,c	;volatile
 14125                           
 14126                           ;parcheggio.c: 137: INTCON2bits.INTEDG0 = 1;
 14127  0000CC  8CF1               	bsf	intcon2,6,c	;volatile
 14128  0000CE                     i1l5856:
 14129                           
 14130                           ;parcheggio.c: 138: }
 14131                           ;parcheggio.c: 140: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 14132  0000CE  A0A4               	btfss	4004,0,c	;volatile
 14133  0000D0  B2A4               	btfsc	4004,1,c	;volatile
 14134  0000D2  D001               	goto	i1l5860
 14135  0000D4  D09D               	goto	i1l709
 14136  0000D6                     i1l5860:
 14137                           
 14138                           ;parcheggio.c: 141: CANreceiveMessage(&msg);
 14139  0000D6  0E40               	movlw	low _msg
 14140  0000D8  6E01               	movwf	CANreceiveMessage@msg,c
 14141  0000DA  0E01               	movlw	high _msg
 14142  0000DC  6E02               	movwf	CANreceiveMessage@msg+1,c
 14143  0000DE  ECF2  F00F         	call	_CANreceiveMessage	;wreg free
 14144                           
 14145                           ;parcheggio.c: 142: if (msg.identifier == 0b00000001101) {
 14146  0000E2  0E0D               	movlw	13
 14147  0000E4  0101               	movlb	1	; () banked
 14148  0000E6  1940               	xorwf	_msg& (0+255),w,b
 14149  0000E8  0101               	movlb	1	; () banked
 14150  0000EA  1141               	iorwf	(_msg+1)& (0+255),w,b
 14151  0000EC  0101               	movlb	1	; () banked
 14152  0000EE  1142               	iorwf	(_msg+2)& (0+255),w,b
 14153  0000F0  0101               	movlb	1	; () banked
 14154  0000F2  1143               	iorwf	(_msg+3)& (0+255),w,b
 14155  0000F4  B4D8               	btfsc	status,2,c
 14156                           
 14157                           ; BSR set to: 1
 14158                           ;parcheggio.c: 143: asd = 0;
 14159  0000F6  9244               	bcf	_asd/(0+8),_asd& (0+7),c	;volatile
 14160                           
 14161                           ; BSR set to: 1
 14162                           ;parcheggio.c: 144: }
 14163                           ;parcheggio.c: 145: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 14164                           
 14165                           ; BSR set to: 1
 14166  0000F8  0E07               	movlw	7
 14167  0000FA  0101               	movlb	1	; () banked
 14168  0000FC  1940               	xorwf	_msg& (0+255),w,b
 14169  0000FE  0101               	movlb	1	; () banked
 14170  000100  1141               	iorwf	(_msg+1)& (0+255),w,b
 14171  000102  0101               	movlb	1	; () banked
 14172  000104  1142               	iorwf	(_msg+2)& (0+255),w,b
 14173  000106  0101               	movlb	1	; () banked
 14174  000108  1143               	iorwf	(_msg+3)& (0+255),w,b
 14175  00010A  A4D8               	btfss	status,2,c
 14176  00010C  D02D               	goto	i1l5882
 14177                           
 14178                           ; BSR set to: 1
 14179  00010E  0101               	movlb	1	; () banked
 14180  000110  054E               	decf	(_msg+14)& (0+255),w,b
 14181  000112  B4D8               	btfsc	status,2,c
 14182  000114  D029               	goto	i1l5882
 14183                           
 14184                           ; BSR set to: 1
 14185                           ;parcheggio.c: 146: distance_average = 0;
 14186  000116  0E00               	movlw	0
 14187  000118  0100               	movlb	0	; () banked
 14188  00011A  6FE4               	movwf	(_distance_average+1)& (0+255),b	;volatile
 14189  00011C  0E00               	movlw	0
 14190  00011E  6FE3               	movwf	_distance_average& (0+255),b	;volatile
 14191                           
 14192                           ; BSR set to: 0
 14193                           ;parcheggio.c: 147: distance_dx = msg.data[1];
 14194  000120  C145  F034         	movff	_msg+5,_distance_dx	;volatile
 14195  000124  6A35               	clrf	_distance_dx+1,c	;volatile
 14196                           
 14197                           ;parcheggio.c: 148: distance_dx = ((distance_dx << 8) | msg.data[0]);
 14198  000126  5034               	movf	_distance_dx,w,c	;volatile
 14199  000128  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14200  00012A  0101               	movlb	1	; () banked
 14201  00012C  5144               	movf	(_msg+4)& (0+255),w,b
 14202  00012E  6E34               	movwf	_distance_dx,c	;volatile
 14203  000130  C00D  F035         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 14204                           
 14205                           ; BSR set to: 1
 14206                           ;parcheggio.c: 149: distance_sx = msg.data[3];
 14207  000134  C147  F036         	movff	_msg+7,_distance_sx	;volatile
 14208  000138  6A37               	clrf	_distance_sx+1,c	;volatile
 14209                           
 14210                           ;parcheggio.c: 150: distance_sx = ((distance_sx << 8) | msg.data[2]);
 14211  00013A  5036               	movf	_distance_sx,w,c	;volatile
 14212  00013C  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14213  00013E  0101               	movlb	1	; () banked
 14214  000140  5146               	movf	(_msg+6)& (0+255),w,b
 14215  000142  6E36               	movwf	_distance_sx,c	;volatile
 14216  000144  C00D  F037         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 14217                           
 14218                           ; BSR set to: 1
 14219                           ;parcheggio.c: 151: distance_average = (distance_sx + distance_dx) / 2;
 14220  000148  5034               	movf	_distance_dx,w,c	;volatile
 14221  00014A  2436               	addwf	_distance_sx,w,c	;volatile
 14222  00014C  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14223  00014E  5035               	movf	_distance_dx+1,w,c	;volatile
 14224  000150  2037               	addwfc	_distance_sx+1,w,c	;volatile
 14225  000152  6E0E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14226  000154  90D8               	bcf	status,0,c
 14227  000156  300E               	rrcf	??_ISR_Bassa+1,w,c
 14228  000158  6E0F               	movwf	(??_ISR_Bassa+2)& (0+255),c
 14229  00015A  300D               	rrcf	??_ISR_Bassa,w,c
 14230  00015C  0100               	movlb	0	; () banked
 14231  00015E  6FE3               	movwf	_distance_average& (0+255),b	;volatile
 14232  000160  C00F  F0E4         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 14233                           
 14234                           ; BSR set to: 0
 14235                           ;parcheggio.c: 152: distance_received = 1;
 14236  000164  8844               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 14237                           
 14238                           ; BSR set to: 0
 14239                           ;parcheggio.c: 153: distance_received1 = 1;
 14240  000166  8A44               	bsf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
 14241  000168                     i1l5882:
 14242                           
 14243                           ;parcheggio.c: 154: }
 14244                           ;parcheggio.c: 155: if (msg.identifier == 0b00000001010) {
 14245  000168  0E0A               	movlw	10
 14246  00016A  0101               	movlb	1	; () banked
 14247  00016C  1940               	xorwf	_msg& (0+255),w,b
 14248  00016E  0101               	movlb	1	; () banked
 14249  000170  1141               	iorwf	(_msg+1)& (0+255),w,b
 14250  000172  0101               	movlb	1	; () banked
 14251  000174  1142               	iorwf	(_msg+2)& (0+255),w,b
 14252  000176  0101               	movlb	1	; () banked
 14253  000178  1143               	iorwf	(_msg+3)& (0+255),w,b
 14254  00017A  A4D8               	btfss	status,2,c
 14255  00017C  D00C               	goto	i1l5888
 14256                           
 14257                           ; BSR set to: 1
 14258                           ;parcheggio.c: 156: if (msg.data[0] == 1) {
 14259  00017E  0101               	movlb	1	; () banked
 14260  000180  0544               	decf	(_msg+4)& (0+255),w,b
 14261  000182  A4D8               	btfss	status,2,c
 14262  000184  D003               	goto	i1l702
 14263                           
 14264                           ; BSR set to: 1
 14265                           ;parcheggio.c: 157: activation = 1;
 14266  000186  8044               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 14267                           
 14268                           ;parcheggio.c: 158: PORTBbits.RB6 = 1;
 14269  000188  8C81               	bsf	3969,6,c	;volatile
 14270                           
 14271                           ;parcheggio.c: 159: } else {
 14272  00018A  D005               	goto	i1l5888
 14273  00018C                     i1l702:
 14274                           
 14275                           ; BSR set to: 1
 14276                           ;parcheggio.c: 160: activation = 0;
 14277  00018C  9044               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 14278                           
 14279                           ;parcheggio.c: 161: PORTBbits.RB4 = 0;
 14280  00018E  9881               	bcf	3969,4,c	;volatile
 14281                           
 14282                           ;parcheggio.c: 162: PORTBbits.RB5 = 0;
 14283  000190  9A81               	bcf	3969,5,c	;volatile
 14284                           
 14285                           ;parcheggio.c: 163: PORTBbits.RB6 = 0;
 14286  000192  9C81               	bcf	3969,6,c	;volatile
 14287                           
 14288                           ;parcheggio.c: 164: request_sent = 0;
 14289  000194  9045               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
 14290  000196                     i1l5888:
 14291                           
 14292                           ; BSR set to: 1
 14293                           ;parcheggio.c: 165: }
 14294                           ;parcheggio.c: 166: }
 14295                           ;parcheggio.c: 167: if (msg.identifier == 0b00000001100) {
 14296  000196  0E0C               	movlw	12
 14297  000198  0101               	movlb	1	; () banked
 14298  00019A  1940               	xorwf	_msg& (0+255),w,b
 14299  00019C  0101               	movlb	1	; () banked
 14300  00019E  1141               	iorwf	(_msg+1)& (0+255),w,b
 14301  0001A0  0101               	movlb	1	; () banked
 14302  0001A2  1142               	iorwf	(_msg+2)& (0+255),w,b
 14303  0001A4  0101               	movlb	1	; () banked
 14304  0001A6  1143               	iorwf	(_msg+3)& (0+255),w,b
 14305  0001A8  B4D8               	btfsc	status,2,c
 14306                           
 14307                           ; BSR set to: 1
 14308                           ;parcheggio.c: 168: start_operation = 1;
 14309  0001AA  8445               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14310                           
 14311                           ; BSR set to: 1
 14312                           ;parcheggio.c: 169: }
 14313                           ;parcheggio.c: 170: if (msg.identifier == 0b00000000110) {
 14314                           
 14315                           ; BSR set to: 1
 14316  0001AC  0E06               	movlw	6
 14317  0001AE  0101               	movlb	1	; () banked
 14318  0001B0  1940               	xorwf	_msg& (0+255),w,b
 14319  0001B2  0101               	movlb	1	; () banked
 14320  0001B4  1141               	iorwf	(_msg+1)& (0+255),w,b
 14321  0001B6  0101               	movlb	1	; () banked
 14322  0001B8  1142               	iorwf	(_msg+2)& (0+255),w,b
 14323  0001BA  0101               	movlb	1	; () banked
 14324  0001BC  1143               	iorwf	(_msg+3)& (0+255),w,b
 14325  0001BE  A4D8               	btfss	status,2,c
 14326  0001C0  D025               	goto	i1l705
 14327                           
 14328                           ; BSR set to: 1
 14329                           ;parcheggio.c: 171: for (unsigned char i = 0; i < 8; i++) {
 14330  0001C2  0E00               	movlw	0
 14331  0001C4  6E23               	movwf	ISR_Bassa@i,c
 14332  0001C6                     i1l5896:
 14333                           
 14334                           ; BSR set to: 1
 14335  0001C6  0E07               	movlw	7
 14336  0001C8  6423               	cpfsgt	ISR_Bassa@i,c
 14337  0001CA  D001               	goto	i1l5900
 14338  0001CC  D014               	goto	i1l5906
 14339  0001CE                     i1l5900:
 14340                           
 14341                           ;parcheggio.c: 172: data_speed_rx[i] = msg.data[i];
 14342  0001CE  5023               	movf	ISR_Bassa@i,w,c
 14343  0001D0  0D01               	mullw	1
 14344  0001D2  0E44               	movlw	low (_msg+4)
 14345  0001D4  24F3               	addwf	prodl,w,c
 14346  0001D6  6ED9               	movwf	fsr2l,c
 14347  0001D8  0E01               	movlw	high (_msg+4)
 14348  0001DA  20F4               	addwfc	prodh,w,c
 14349  0001DC  6EDA               	movwf	fsr2h,c
 14350  0001DE  5023               	movf	ISR_Bassa@i,w,c
 14351  0001E0  0D01               	mullw	1
 14352  0001E2  0E08               	movlw	low _data_speed_rx
 14353  0001E4  24F3               	addwf	prodl,w,c
 14354  0001E6  6EE1               	movwf	fsr1l,c
 14355  0001E8  0E01               	movlw	high _data_speed_rx
 14356  0001EA  20F4               	addwfc	prodh,w,c
 14357  0001EC  6EE2               	movwf	fsr1h,c
 14358  0001EE  CFDF FFE7          	movff	indf2,indf1
 14359  0001F2  2A23               	incf	ISR_Bassa@i,f,c
 14360  0001F4  D7E8               	goto	i1l5896
 14361  0001F6                     i1l5906:
 14362                           
 14363                           ;parcheggio.c: 173: }
 14364                           ;parcheggio.c: 174: if (msg.identifier == 0b00000001101) {
 14365  0001F6  0E0D               	movlw	13
 14366  0001F8  0101               	movlb	1	; () banked
 14367  0001FA  1940               	xorwf	_msg& (0+255),w,b
 14368  0001FC  0101               	movlb	1	; () banked
 14369  0001FE  1141               	iorwf	(_msg+1)& (0+255),w,b
 14370  000200  0101               	movlb	1	; () banked
 14371  000202  1142               	iorwf	(_msg+2)& (0+255),w,b
 14372  000204  0101               	movlb	1	; () banked
 14373  000206  1143               	iorwf	(_msg+3)& (0+255),w,b
 14374  000208  B4D8               	btfsc	status,2,c
 14375                           
 14376                           ; BSR set to: 1
 14377                           ;parcheggio.c: 175: distance_wait = 0;
 14378  00020A  9C44               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 14379  00020C                     i1l705:
 14380                           
 14381                           ; BSR set to: 1
 14382                           ;parcheggio.c: 176: }
 14383                           ;parcheggio.c: 178: }
 14384                           ;parcheggio.c: 180: PIR3bits.RXB0IF = 0;
 14385  00020C  90A4               	bcf	4004,0,c	;volatile
 14386                           
 14387                           ;parcheggio.c: 181: PIR3bits.RXB1IF = 0;
 14388  00020E  92A4               	bcf	4004,1,c	;volatile
 14389  000210                     i1l709:
 14390  000210  C021  FFF5         	movff	??_ISR_Bassa+20,tablat
 14391  000214  C020  FFF8         	movff	??_ISR_Bassa+19,tblptru
 14392  000218  C01F  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 14393  00021C  C01E  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 14394  000220  C01D  FFF4         	movff	??_ISR_Bassa+16,prodh
 14395  000224  C01C  FFF3         	movff	??_ISR_Bassa+15,prodl
 14396  000228  C01B  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 14397  00022C  C01A  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 14398  000230  C019  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 14399  000234  C018  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 14400  000238  C017  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 14401  00023C  C016  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 14402  000240  C015  FFFB         	movff	??_ISR_Bassa+8,pclatu
 14403  000244  C014  FFFA         	movff	??_ISR_Bassa+7,pclath
 14404  000248  C013  FFE0         	movff	??_ISR_Bassa+6,bsr
 14405  00024C  C012  FFE8         	movff	??_ISR_Bassa+5,wreg
 14406  000250  C011  FFD8         	movff	??_ISR_Bassa+4,status
 14407  000254  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 14408  000256  0010               	retfie	
 14409  000258                     __end_of_ISR_Bassa:
 14410                           	opt stack 0
 14411                           pclatu	equ	0xFFB
 14412                           pclath	equ	0xFFA
 14413                           tblptru	equ	0xFF8
 14414                           tblptrh	equ	0xFF7
 14415                           tblptrl	equ	0xFF6
 14416                           tablat	equ	0xFF5
 14417                           prodh	equ	0xFF4
 14418                           prodl	equ	0xFF3
 14419                           intcon	equ	0xFF2
 14420                           intcon2	equ	0xFF1
 14421                           postinc0	equ	0xFEE
 14422                           fsr0h	equ	0xFEA
 14423                           fsr0l	equ	0xFE9
 14424                           wreg	equ	0xFE8
 14425                           indf1	equ	0xFE7
 14426                           postdec1	equ	0xFE5
 14427                           fsr1h	equ	0xFE2
 14428                           fsr1l	equ	0xFE1
 14429                           bsr	equ	0xFE0
 14430                           indf2	equ	0xFDF
 14431                           postinc2	equ	0xFDE
 14432                           postdec2	equ	0xFDD
 14433                           fsr2h	equ	0xFDA
 14434                           fsr2l	equ	0xFD9
 14435                           status	equ	0xFD8
 14436                           
 14437 ;; *************** function _CANreceiveMessage *****************
 14438 ;; Defined at:
 14439 ;;		line 528 in file "C:/Users/Simone/Desktop/LaurTec_PIC_libraries_v_3.3.1/inc\CANlib.h"
 14440 ;; Parameters:    Size  Location     Type
 14441 ;;  msg             2    0[COMRAM] PTR struct .
 14442 ;;		 -> msg(15), 
 14443 ;; Auto vars:     Size  Location     Type
 14444 ;;  tamp            1   11[COMRAM] unsigned char 
 14445 ;;  error           1   10[COMRAM] unsigned char 
 14446 ;; Return value:  Size  Location     Type
 14447 ;;                  1    wreg      unsigned char 
 14448 ;; Registers used:
 14449 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14450 ;; Tracked objects:
 14451 ;;		On entry : 0/0
 14452 ;;		On exit  : 0/0
 14453 ;;		Unchanged: 0/0
 14454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14455 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14456 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14457 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14458 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14459 ;;Total ram usage:       12 bytes
 14460 ;; Hardware stack levels used:    1
 14461 ;; Hardware stack levels required when called:    2
 14462 ;; This function calls:
 14463 ;;		Nothing
 14464 ;; This function is called by:
 14465 ;;		_ISR_Bassa
 14466 ;; This function uses a non-reentrant model
 14467 ;;
 14468                           
 14469                           	psect	text36
 14470  001FE4                     __ptext36:
 14471                           	opt stack 0
 14472  001FE4                     _CANreceiveMessage:
 14473                           	opt stack 21
 14474                           
 14475                           ;inc\CANlib.h: 530: BYTE tamp;
 14476                           ;inc\CANlib.h: 531: BYTE error = 0;
 14477                           
 14478                           ;incstack = 0
 14479  001FE4  0E00               	movlw	0
 14480  001FE6  6E0B               	movwf	CANreceiveMessage@error,c
 14481                           
 14482                           ;inc\CANlib.h: 533: if (COMSTATbits.RXB0OVFL == 0x01)
 14483  001FE8  BE74               	btfsc	3956,7,c	;volatile
 14484                           
 14485                           ;inc\CANlib.h: 534: error |= CAN_RX_BUFFER_1_OVFL;
 14486  001FEA  800B               	bsf	CANreceiveMessage@error,0,c
 14487                           
 14488                           ;inc\CANlib.h: 536: if (COMSTATbits.RXB1OVFL == 0x01)
 14489  001FEC  BC74               	btfsc	3956,6,c	;volatile
 14490                           
 14491                           ;inc\CANlib.h: 537: error |= CAN_RX_BUFFER_2_OVFL;
 14492  001FEE  820B               	bsf	CANreceiveMessage@error,1,c
 14493                           
 14494                           ;inc\CANlib.h: 540: if (RXB1CONbits.RXFUL ==0x01)
 14495  001FF0  010F               	movlb	15	; () banked
 14496  001FF2  AF50               	btfss	80,7,b	;volatile
 14497  001FF4  D143               	goto	i1l410
 14498                           
 14499                           ; BSR set to: 15
 14500                           ;inc\CANlib.h: 541: {
 14501                           ;inc\CANlib.h: 542: msg->identifier = 0;
 14502  001FF6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14503  001FFA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14504  001FFE  6ADE               	clrf	postinc2,c
 14505  002000  6ADE               	clrf	postinc2,c
 14506  002002  6ADE               	clrf	postinc2,c
 14507  002004  6ADD               	clrf	postdec2,c
 14508                           
 14509                           ; BSR set to: 15
 14510                           ;inc\CANlib.h: 543: msg->data[0] =RXB1D0;
 14511  002006  EE20 F004          	lfsr	2,4
 14512  00200A  5001               	movf	CANreceiveMessage@msg,w,c
 14513  00200C  26D9               	addwf	fsr2l,f,c
 14514  00200E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14515  002010  22DA               	addwfc	fsr2h,f,c
 14516  002012  CF56 FFDF          	movff	3926,indf2	;volatile
 14517                           
 14518                           ; BSR set to: 15
 14519                           ;inc\CANlib.h: 544: msg->data[1] =RXB1D1;
 14520  002016  EE20 F005          	lfsr	2,5
 14521  00201A  5001               	movf	CANreceiveMessage@msg,w,c
 14522  00201C  26D9               	addwf	fsr2l,f,c
 14523  00201E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14524  002020  22DA               	addwfc	fsr2h,f,c
 14525  002022  CF57 FFDF          	movff	3927,indf2	;volatile
 14526                           
 14527                           ; BSR set to: 15
 14528                           ;inc\CANlib.h: 545: msg->data[2] =RXB1D2;
 14529  002026  EE20 F006          	lfsr	2,6
 14530  00202A  5001               	movf	CANreceiveMessage@msg,w,c
 14531  00202C  26D9               	addwf	fsr2l,f,c
 14532  00202E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14533  002030  22DA               	addwfc	fsr2h,f,c
 14534  002032  CF58 FFDF          	movff	3928,indf2	;volatile
 14535                           
 14536                           ; BSR set to: 15
 14537                           ;inc\CANlib.h: 546: msg->data[3] =RXB1D3;
 14538  002036  EE20 F007          	lfsr	2,7
 14539  00203A  5001               	movf	CANreceiveMessage@msg,w,c
 14540  00203C  26D9               	addwf	fsr2l,f,c
 14541  00203E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14542  002040  22DA               	addwfc	fsr2h,f,c
 14543  002042  CF59 FFDF          	movff	3929,indf2	;volatile
 14544                           
 14545                           ; BSR set to: 15
 14546                           ;inc\CANlib.h: 547: msg->data[4] =RXB1D4;
 14547  002046  EE20 F008          	lfsr	2,8
 14548  00204A  5001               	movf	CANreceiveMessage@msg,w,c
 14549  00204C  26D9               	addwf	fsr2l,f,c
 14550  00204E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14551  002050  22DA               	addwfc	fsr2h,f,c
 14552  002052  CF5A FFDF          	movff	3930,indf2	;volatile
 14553                           
 14554                           ; BSR set to: 15
 14555                           ;inc\CANlib.h: 548: msg->data[5] =RXB1D5;
 14556  002056  EE20 F009          	lfsr	2,9
 14557  00205A  5001               	movf	CANreceiveMessage@msg,w,c
 14558  00205C  26D9               	addwf	fsr2l,f,c
 14559  00205E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14560  002060  22DA               	addwfc	fsr2h,f,c
 14561  002062  CF5B FFDF          	movff	3931,indf2	;volatile
 14562                           
 14563                           ; BSR set to: 15
 14564                           ;inc\CANlib.h: 549: msg->data[6] =RXB1D6;
 14565  002066  EE20 F00A          	lfsr	2,10
 14566  00206A  5001               	movf	CANreceiveMessage@msg,w,c
 14567  00206C  26D9               	addwf	fsr2l,f,c
 14568  00206E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14569  002070  22DA               	addwfc	fsr2h,f,c
 14570  002072  CF5C FFDF          	movff	3932,indf2	;volatile
 14571                           
 14572                           ; BSR set to: 15
 14573                           ;inc\CANlib.h: 550: msg->data[7] =RXB1D7;
 14574  002076  EE20 F00B          	lfsr	2,11
 14575  00207A  5001               	movf	CANreceiveMessage@msg,w,c
 14576  00207C  26D9               	addwf	fsr2l,f,c
 14577  00207E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14578  002080  22DA               	addwfc	fsr2h,f,c
 14579  002082  CF5D FFDF          	movff	3933,indf2	;volatile
 14580                           
 14581                           ; BSR set to: 15
 14582                           ;inc\CANlib.h: 552: msg->RTR = RXB1DLCbits.RXRTR;
 14583  002086  EE20 F00E          	lfsr	2,14
 14584  00208A  5001               	movf	CANreceiveMessage@msg,w,c
 14585  00208C  26D9               	addwf	fsr2l,f,c
 14586  00208E  5002               	movf	CANreceiveMessage@msg+1,w,c
 14587  002090  22DA               	addwfc	fsr2h,f,c
 14588  002092  010F               	movlb	15	; () banked
 14589  002094  AD55               	btfss	85,6,b	;volatile
 14590  002096  D002               	goto	i1u667_20
 14591  002098  0E01               	movlw	1
 14592  00209A  D001               	goto	i1u667_26
 14593  00209C                     i1u667_20:
 14594  00209C  0E00               	movlw	0
 14595  00209E                     i1u667_26:
 14596  00209E  6EDF               	movwf	indf2,c
 14597                           
 14598                           ; BSR set to: 15
 14599                           ;inc\CANlib.h: 554: msg->length = RXB1DLC & 0x0F;
 14600  0020A0  EE20 F00D          	lfsr	2,13
 14601  0020A4  5001               	movf	CANreceiveMessage@msg,w,c
 14602  0020A6  26D9               	addwf	fsr2l,f,c
 14603  0020A8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14604  0020AA  22DA               	addwfc	fsr2h,f,c
 14605  0020AC  010F               	movlb	15	; () banked
 14606  0020AE  5155               	movf	85,w,b	;volatile
 14607  0020B0  0B0F               	andlw	15
 14608  0020B2  6EDF               	movwf	indf2,c
 14609                           
 14610                           ; BSR set to: 15
 14611                           ;inc\CANlib.h: 556: msg->type = RXB1SIDLbits.EXID;
 14612  0020B4  EE20 F00C          	lfsr	2,12
 14613  0020B8  5001               	movf	CANreceiveMessage@msg,w,c
 14614  0020BA  26D9               	addwf	fsr2l,f,c
 14615  0020BC  5002               	movf	CANreceiveMessage@msg+1,w,c
 14616  0020BE  22DA               	addwfc	fsr2h,f,c
 14617  0020C0  010F               	movlb	15	; () banked
 14618  0020C2  A752               	btfss	82,3,b	;volatile
 14619  0020C4  D002               	goto	i1u668_20
 14620  0020C6  0E01               	movlw	1
 14621  0020C8  D001               	goto	i1u668_26
 14622  0020CA                     i1u668_20:
 14623  0020CA  0E00               	movlw	0
 14624  0020CC                     i1u668_26:
 14625  0020CC  6EDF               	movwf	indf2,c
 14626                           
 14627                           ; BSR set to: 15
 14628                           ;inc\CANlib.h: 558: if (RXB1SIDLbits.EXID == 0)
 14629  0020CE  010F               	movlb	15	; () banked
 14630  0020D0  B752               	btfsc	82,3,b	;volatile
 14631  0020D2  D044               	goto	i1l5506
 14632                           
 14633                           ; BSR set to: 15
 14634                           ;inc\CANlib.h: 559: {
 14635                           ;inc\CANlib.h: 560: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 14636  0020D4  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 14637  0020D8  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14638  0020DA  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14639  0020DC  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14640  0020DE  0E03               	movlw	3
 14641  0020E0                     i1u670_25:
 14642  0020E0  90D8               	bcf	status,0,c
 14643  0020E2  3603               	rlcf	??_CANreceiveMessage,f,c
 14644  0020E4  3604               	rlcf	??_CANreceiveMessage+1,f,c
 14645  0020E6  3605               	rlcf	??_CANreceiveMessage+2,f,c
 14646  0020E8  3606               	rlcf	??_CANreceiveMessage+3,f,c
 14647  0020EA  2EE8               	decfsz	wreg,f,c
 14648  0020EC  D7F9               	goto	i1u670_25
 14649  0020EE  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14650  0020F2  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14651  0020F6  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 14652  0020FA  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 14653  0020FE  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 14654  002102  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 14655                           
 14656                           ; BSR set to: 15
 14657                           ;inc\CANlib.h: 561: tamp = (RXB1SIDL >> 5 ) & 0x07;
 14658  002106  010F               	movlb	15	; () banked
 14659  002108  3952               	swapf	82,w,b	;volatile
 14660  00210A  42E8               	rrncf	wreg,f,c
 14661  00210C  0B07               	andlw	7
 14662  00210E  0B07               	andlw	7
 14663  002110  6E0C               	movwf	CANreceiveMessage@tamp,c
 14664                           
 14665                           ; BSR set to: 15
 14666                           ;inc\CANlib.h: 562: msg->identifier = msg->identifier + tamp;
 14667  002112  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14668  002116  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14669  00211A  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 14670  00211E  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 14671  002122  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 14672  002126  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 14673  00212A  500C               	movf	CANreceiveMessage@tamp,w,c
 14674  00212C  2403               	addwf	??_CANreceiveMessage,w,c
 14675  00212E  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 14676  002130  0E00               	movlw	0
 14677  002132  2004               	addwfc	??_CANreceiveMessage+1,w,c
 14678  002134  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 14679  002136  0E00               	movlw	0
 14680  002138  2005               	addwfc	??_CANreceiveMessage+2,w,c
 14681  00213A  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 14682  00213C  0E00               	movlw	0
 14683  00213E  2006               	addwfc	??_CANreceiveMessage+3,w,c
 14684  002140  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 14685  002142  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14686  002146  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14687  00214A  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 14688  00214E  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 14689  002152  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 14690  002156  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 14691                           
 14692                           ;inc\CANlib.h: 563: }
 14693  00215A  D08D               	goto	i1l5532
 14694  00215C                     i1l5506:
 14695                           
 14696                           ; BSR set to: 15
 14697                           ;inc\CANlib.h: 564: else
 14698                           ;inc\CANlib.h: 565: {
 14699                           ;inc\CANlib.h: 566: msg->identifier = (unsigned long) RXB1EIDL;
 14700  00215C  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
 14701  002160  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14702  002162  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14703  002164  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14704  002166  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14705  00216A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14706  00216E  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 14707  002172  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 14708  002176  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 14709  00217A  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 14710                           
 14711                           ; BSR set to: 15
 14712                           ;inc\CANlib.h: 567: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 14713  00217E  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
 14714  002182  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14715  002184  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14716  002186  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14717  002188  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 14718  00218C  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 14719  002190  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 14720  002194  6A03               	clrf	??_CANreceiveMessage,c
 14721  002196  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14722  00219A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14723  00219E  5003               	movf	??_CANreceiveMessage,w,c
 14724  0021A0  26DE               	addwf	postinc2,f,c
 14725  0021A2  5004               	movf	??_CANreceiveMessage+1,w,c
 14726  0021A4  22DE               	addwfc	postinc2,f,c
 14727  0021A6  5005               	movf	??_CANreceiveMessage+2,w,c
 14728  0021A8  22DE               	addwfc	postinc2,f,c
 14729  0021AA  5006               	movf	??_CANreceiveMessage+3,w,c
 14730  0021AC  22DE               	addwfc	postinc2,f,c
 14731                           
 14732                           ; BSR set to: 15
 14733                           ;inc\CANlib.h: 569: if (RXB1SIDLbits.EID16)
 14734  0021AE  010F               	movlb	15	; () banked
 14735  0021B0  A152               	btfss	82,0,b	;volatile
 14736  0021B2  D00C               	goto	i1l5514
 14737                           
 14738                           ; BSR set to: 15
 14739                           ;inc\CANlib.h: 570: msg->identifier |= 0x00010000;
 14740  0021B4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14741  0021B8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14742  0021BC  0E00               	movlw	0
 14743  0021BE  12DE               	iorwf	postinc2,f,c
 14744  0021C0  0E00               	movlw	0
 14745  0021C2  12DE               	iorwf	postinc2,f,c
 14746  0021C4  0E01               	movlw	1
 14747  0021C6  12DE               	iorwf	postinc2,f,c
 14748  0021C8  0E00               	movlw	0
 14749  0021CA  12DE               	iorwf	postinc2,f,c
 14750  0021CC                     i1l5514:
 14751                           
 14752                           ; BSR set to: 15
 14753                           ;inc\CANlib.h: 571: if (RXB1SIDLbits.EID17)
 14754  0021CC  010F               	movlb	15	; () banked
 14755  0021CE  A352               	btfss	82,1,b	;volatile
 14756  0021D0  D00C               	goto	i1l5518
 14757                           
 14758                           ; BSR set to: 15
 14759                           ;inc\CANlib.h: 572: msg->identifier |= 0x00020000;
 14760  0021D2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14761  0021D6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14762  0021DA  0E00               	movlw	0
 14763  0021DC  12DE               	iorwf	postinc2,f,c
 14764  0021DE  0E00               	movlw	0
 14765  0021E0  12DE               	iorwf	postinc2,f,c
 14766  0021E2  0E02               	movlw	2
 14767  0021E4  12DE               	iorwf	postinc2,f,c
 14768  0021E6  0E00               	movlw	0
 14769  0021E8  12DE               	iorwf	postinc2,f,c
 14770  0021EA                     i1l5518:
 14771                           
 14772                           ; BSR set to: 15
 14773                           ;inc\CANlib.h: 573: if (RXB1SIDLbits.SID0)
 14774  0021EA  010F               	movlb	15	; () banked
 14775  0021EC  AB52               	btfss	82,5,b	;volatile
 14776  0021EE  D00C               	goto	i1l5522
 14777                           
 14778                           ; BSR set to: 15
 14779                           ;inc\CANlib.h: 574: msg->identifier |= 0x00040000;
 14780  0021F0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14781  0021F4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14782  0021F8  0E00               	movlw	0
 14783  0021FA  12DE               	iorwf	postinc2,f,c
 14784  0021FC  0E00               	movlw	0
 14785  0021FE  12DE               	iorwf	postinc2,f,c
 14786  002200  0E04               	movlw	4
 14787  002202  12DE               	iorwf	postinc2,f,c
 14788  002204  0E00               	movlw	0
 14789  002206  12DE               	iorwf	postinc2,f,c
 14790  002208                     i1l5522:
 14791                           
 14792                           ; BSR set to: 15
 14793                           ;inc\CANlib.h: 575: if (RXB1SIDLbits.SID1)
 14794  002208  010F               	movlb	15	; () banked
 14795  00220A  AD52               	btfss	82,6,b	;volatile
 14796  00220C  D00C               	goto	i1l5526
 14797                           
 14798                           ; BSR set to: 15
 14799                           ;inc\CANlib.h: 576: msg->identifier |= 0x00080000;
 14800  00220E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14801  002212  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14802  002216  0E00               	movlw	0
 14803  002218  12DE               	iorwf	postinc2,f,c
 14804  00221A  0E00               	movlw	0
 14805  00221C  12DE               	iorwf	postinc2,f,c
 14806  00221E  0E08               	movlw	8
 14807  002220  12DE               	iorwf	postinc2,f,c
 14808  002222  0E00               	movlw	0
 14809  002224  12DE               	iorwf	postinc2,f,c
 14810  002226                     i1l5526:
 14811                           
 14812                           ; BSR set to: 15
 14813                           ;inc\CANlib.h: 577: if (RXB1SIDLbits.SID2)
 14814  002226  010F               	movlb	15	; () banked
 14815  002228  AF52               	btfss	82,7,b	;volatile
 14816  00222A  D00C               	goto	i1l5530
 14817                           
 14818                           ; BSR set to: 15
 14819                           ;inc\CANlib.h: 578: msg->identifier |= 0x00100000;
 14820  00222C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14821  002230  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14822  002234  0E00               	movlw	0
 14823  002236  12DE               	iorwf	postinc2,f,c
 14824  002238  0E00               	movlw	0
 14825  00223A  12DE               	iorwf	postinc2,f,c
 14826  00223C  0E10               	movlw	16
 14827  00223E  12DE               	iorwf	postinc2,f,c
 14828  002240  0E00               	movlw	0
 14829  002242  12DE               	iorwf	postinc2,f,c
 14830  002244                     i1l5530:
 14831                           
 14832                           ; BSR set to: 15
 14833                           ;inc\CANlib.h: 580: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 14834  002244  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 14835  002248  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 14836  00224A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 14837  00224C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 14838  00224E  0E15               	movlw	21
 14839  002250                     i1u676_25:
 14840  002250  90D8               	bcf	status,0,c
 14841  002252  3603               	rlcf	??_CANreceiveMessage,f,c
 14842  002254  3604               	rlcf	??_CANreceiveMessage+1,f,c
 14843  002256  3605               	rlcf	??_CANreceiveMessage+2,f,c
 14844  002258  3606               	rlcf	??_CANreceiveMessage+3,f,c
 14845  00225A  2EE8               	decfsz	wreg,f,c
 14846  00225C  D7F9               	goto	i1u676_25
 14847  00225E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14848  002262  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14849  002266  5003               	movf	??_CANreceiveMessage,w,c
 14850  002268  12DE               	iorwf	postinc2,f,c
 14851  00226A  5004               	movf	??_CANreceiveMessage+1,w,c
 14852  00226C  12DE               	iorwf	postinc2,f,c
 14853  00226E  5005               	movf	??_CANreceiveMessage+2,w,c
 14854  002270  12DE               	iorwf	postinc2,f,c
 14855  002272  5006               	movf	??_CANreceiveMessage+3,w,c
 14856  002274  12DE               	iorwf	postinc2,f,c
 14857  002276                     i1l5532:
 14858                           
 14859                           ; BSR set to: 15
 14860                           ;inc\CANlib.h: 581: }
 14861                           ;inc\CANlib.h: 583: RXB1CONbits.RXFUL = 0x00;
 14862  002276  010F               	movlb	15	; () banked
 14863  002278  9F50               	bcf	80,7,b	;volatile
 14864                           
 14865                           ; BSR set to: 15
 14866                           ;inc\CANlib.h: 584: return (error);
 14867                           ;	Return value of _CANreceiveMessage is never used
 14868  00227A  0012               	return	
 14869  00227C                     i1l410:
 14870                           
 14871                           ; BSR set to: 15
 14872                           ;inc\CANlib.h: 585: }
 14873                           ;inc\CANlib.h: 587: if (RXB0CONbits.RXFUL ==0x01)
 14874  00227C  AE60               	btfss	3936,7,c	;volatile
 14875  00227E  0012               	return	
 14876                           
 14877                           ; BSR set to: 15
 14878                           ;inc\CANlib.h: 588: {
 14879                           ;inc\CANlib.h: 589: msg->identifier = 0;
 14880  002280  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 14881  002284  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 14882  002288  6ADE               	clrf	postinc2,c
 14883  00228A  6ADE               	clrf	postinc2,c
 14884  00228C  6ADE               	clrf	postinc2,c
 14885  00228E  6ADD               	clrf	postdec2,c
 14886                           
 14887                           ; BSR set to: 15
 14888                           ;inc\CANlib.h: 590: msg->data[0] =RXB0D0;
 14889  002290  EE20 F004          	lfsr	2,4
 14890  002294  5001               	movf	CANreceiveMessage@msg,w,c
 14891  002296  26D9               	addwf	fsr2l,f,c
 14892  002298  5002               	movf	CANreceiveMessage@msg+1,w,c
 14893  00229A  22DA               	addwfc	fsr2h,f,c
 14894  00229C  CF66 FFDF          	movff	3942,indf2	;volatile
 14895                           
 14896                           ; BSR set to: 15
 14897                           ;inc\CANlib.h: 591: msg->data[1] =RXB0D1;
 14898  0022A0  EE20 F005          	lfsr	2,5
 14899  0022A4  5001               	movf	CANreceiveMessage@msg,w,c
 14900  0022A6  26D9               	addwf	fsr2l,f,c
 14901  0022A8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14902  0022AA  22DA               	addwfc	fsr2h,f,c
 14903  0022AC  CF67 FFDF          	movff	3943,indf2	;volatile
 14904                           
 14905                           ; BSR set to: 15
 14906                           ;inc\CANlib.h: 592: msg->data[2] =RXB0D2;
 14907  0022B0  EE20 F006          	lfsr	2,6
 14908  0022B4  5001               	movf	CANreceiveMessage@msg,w,c
 14909  0022B6  26D9               	addwf	fsr2l,f,c
 14910  0022B8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14911  0022BA  22DA               	addwfc	fsr2h,f,c
 14912  0022BC  CF68 FFDF          	movff	3944,indf2	;volatile
 14913                           
 14914                           ; BSR set to: 15
 14915                           ;inc\CANlib.h: 593: msg->data[3] =RXB0D3;
 14916  0022C0  EE20 F007          	lfsr	2,7
 14917  0022C4  5001               	movf	CANreceiveMessage@msg,w,c
 14918  0022C6  26D9               	addwf	fsr2l,f,c
 14919  0022C8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14920  0022CA  22DA               	addwfc	fsr2h,f,c
 14921  0022CC  CF69 FFDF          	movff	3945,indf2	;volatile
 14922                           
 14923                           ; BSR set to: 15
 14924                           ;inc\CANlib.h: 594: msg->data[4] =RXB0D4;
 14925  0022D0  EE20 F008          	lfsr	2,8
 14926  0022D4  5001               	movf	CANreceiveMessage@msg,w,c
 14927  0022D6  26D9               	addwf	fsr2l,f,c
 14928  0022D8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14929  0022DA  22DA               	addwfc	fsr2h,f,c
 14930  0022DC  CF6A FFDF          	movff	3946,indf2	;volatile
 14931                           
 14932                           ; BSR set to: 15
 14933                           ;inc\CANlib.h: 595: msg->data[5] =RXB0D5;
 14934  0022E0  EE20 F009          	lfsr	2,9
 14935  0022E4  5001               	movf	CANreceiveMessage@msg,w,c
 14936  0022E6  26D9               	addwf	fsr2l,f,c
 14937  0022E8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14938  0022EA  22DA               	addwfc	fsr2h,f,c
 14939  0022EC  CF6B FFDF          	movff	3947,indf2	;volatile
 14940                           
 14941                           ; BSR set to: 15
 14942                           ;inc\CANlib.h: 596: msg->data[6] =RXB0D6;
 14943  0022F0  EE20 F00A          	lfsr	2,10
 14944  0022F4  5001               	movf	CANreceiveMessage@msg,w,c
 14945  0022F6  26D9               	addwf	fsr2l,f,c
 14946  0022F8  5002               	movf	CANreceiveMessage@msg+1,w,c
 14947  0022FA  22DA               	addwfc	fsr2h,f,c
 14948  0022FC  CF6C FFDF          	movff	3948,indf2	;volatile
 14949                           
 14950                           ; BSR set to: 15
 14951                           ;inc\CANlib.h: 597: msg->data[7] =RXB0D7;
 14952  002300  EE20 F00B          	lfsr	2,11
 14953  002304  5001               	movf	CANreceiveMessage@msg,w,c
 14954  002306  26D9               	addwf	fsr2l,f,c
 14955  002308  5002               	movf	CANreceiveMessage@msg+1,w,c
 14956  00230A  22DA               	addwfc	fsr2h,f,c
 14957  00230C  CF6D FFDF          	movff	3949,indf2	;volatile
 14958                           
 14959                           ; BSR set to: 15
 14960                           ;inc\CANlib.h: 599: msg->RTR = RXB0DLCbits.RXRTR;
 14961  002310  EE20 F00E          	lfsr	2,14
 14962  002314  5001               	movf	CANreceiveMessage@msg,w,c
 14963  002316  26D9               	addwf	fsr2l,f,c
 14964  002318  5002               	movf	CANreceiveMessage@msg+1,w,c
 14965  00231A  22DA               	addwfc	fsr2h,f,c
 14966  00231C  AC65               	btfss	3941,6,c	;volatile
 14967  00231E  D002               	goto	i1u678_20
 14968  002320  0E01               	movlw	1
 14969  002322  D001               	goto	i1u678_26
 14970  002324                     i1u678_20:
 14971  002324  0E00               	movlw	0
 14972  002326                     i1u678_26:
 14973  002326  6EDF               	movwf	indf2,c
 14974                           
 14975                           ; BSR set to: 15
 14976                           ;inc\CANlib.h: 601: msg->length = RXB0DLC & 0x0F;
 14977  002328  EE20 F00D          	lfsr	2,13
 14978  00232C  5001               	movf	CANreceiveMessage@msg,w,c
 14979  00232E  26D9               	addwf	fsr2l,f,c
 14980  002330  5002               	movf	CANreceiveMessage@msg+1,w,c
 14981  002332  22DA               	addwfc	fsr2h,f,c
 14982  002334  5065               	movf	3941,w,c	;volatile
 14983  002336  0B0F               	andlw	15
 14984  002338  6EDF               	movwf	indf2,c
 14985                           
 14986                           ; BSR set to: 15
 14987                           ;inc\CANlib.h: 603: msg->type = RXB0SIDLbits.EXID;
 14988  00233A  EE20 F00C          	lfsr	2,12
 14989  00233E  5001               	movf	CANreceiveMessage@msg,w,c
 14990  002340  26D9               	addwf	fsr2l,f,c
 14991  002342  5002               	movf	CANreceiveMessage@msg+1,w,c
 14992  002344  22DA               	addwfc	fsr2h,f,c
 14993  002346  A662               	btfss	3938,3,c	;volatile
 14994  002348  D002               	goto	i1u679_20
 14995  00234A  0E01               	movlw	1
 14996  00234C  D001               	goto	i1u679_26
 14997  00234E                     i1u679_20:
 14998  00234E  0E00               	movlw	0
 14999  002350                     i1u679_26:
 15000  002350  6EDF               	movwf	indf2,c
 15001                           
 15002                           ; BSR set to: 15
 15003                           ;inc\CANlib.h: 605: if (RXB0SIDLbits.EXID == 0)
 15004  002352  B662               	btfsc	3938,3,c	;volatile
 15005  002354  D043               	goto	i1l5568
 15006                           
 15007                           ; BSR set to: 15
 15008                           ;inc\CANlib.h: 606: {
 15009                           ;inc\CANlib.h: 607: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 15010  002356  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15011  00235A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15012  00235C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15013  00235E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15014  002360  0E03               	movlw	3
 15015  002362                     i1u681_25:
 15016  002362  90D8               	bcf	status,0,c
 15017  002364  3603               	rlcf	??_CANreceiveMessage,f,c
 15018  002366  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15019  002368  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15020  00236A  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15021  00236C  2EE8               	decfsz	wreg,f,c
 15022  00236E  D7F9               	goto	i1u681_25
 15023  002370  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15024  002374  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15025  002378  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15026  00237C  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15027  002380  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15028  002384  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15029                           
 15030                           ; BSR set to: 15
 15031                           ;inc\CANlib.h: 608: tamp = (RXB0SIDL >> 5 ) & 0x07;
 15032  002388  3862               	swapf	3938,w,c	;volatile
 15033  00238A  42E8               	rrncf	wreg,f,c
 15034  00238C  0B07               	andlw	7
 15035  00238E  0B07               	andlw	7
 15036  002390  6E0C               	movwf	CANreceiveMessage@tamp,c
 15037                           
 15038                           ; BSR set to: 15
 15039                           ;inc\CANlib.h: 609: msg->identifier = msg->identifier + tamp;
 15040  002392  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15041  002396  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15042  00239A  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 15043  00239E  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 15044  0023A2  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 15045  0023A6  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 15046  0023AA  500C               	movf	CANreceiveMessage@tamp,w,c
 15047  0023AC  2403               	addwf	??_CANreceiveMessage,w,c
 15048  0023AE  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 15049  0023B0  0E00               	movlw	0
 15050  0023B2  2004               	addwfc	??_CANreceiveMessage+1,w,c
 15051  0023B4  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 15052  0023B6  0E00               	movlw	0
 15053  0023B8  2005               	addwfc	??_CANreceiveMessage+2,w,c
 15054  0023BA  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 15055  0023BC  0E00               	movlw	0
 15056  0023BE  2006               	addwfc	??_CANreceiveMessage+3,w,c
 15057  0023C0  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 15058  0023C2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15059  0023C6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15060  0023CA  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 15061  0023CE  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 15062  0023D2  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 15063  0023D6  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 15064                           
 15065                           ;inc\CANlib.h: 610: }
 15066  0023DA  D088               	goto	i1l5594
 15067  0023DC                     i1l5568:
 15068                           
 15069                           ; BSR set to: 15
 15070                           ;inc\CANlib.h: 611: else
 15071                           ;inc\CANlib.h: 612: {
 15072                           ;inc\CANlib.h: 613: msg->identifier = (unsigned long) RXB0EIDL;
 15073  0023DC  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
 15074  0023E0  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15075  0023E2  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15076  0023E4  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15077  0023E6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15078  0023EA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15079  0023EE  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15080  0023F2  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15081  0023F6  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15082  0023FA  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15083                           
 15084                           ; BSR set to: 15
 15085                           ;inc\CANlib.h: 614: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 15086  0023FE  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
 15087  002402  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15088  002404  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15089  002406  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15090  002408  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 15091  00240C  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 15092  002410  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 15093  002414  6A03               	clrf	??_CANreceiveMessage,c
 15094  002416  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15095  00241A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15096  00241E  5003               	movf	??_CANreceiveMessage,w,c
 15097  002420  26DE               	addwf	postinc2,f,c
 15098  002422  5004               	movf	??_CANreceiveMessage+1,w,c
 15099  002424  22DE               	addwfc	postinc2,f,c
 15100  002426  5005               	movf	??_CANreceiveMessage+2,w,c
 15101  002428  22DE               	addwfc	postinc2,f,c
 15102  00242A  5006               	movf	??_CANreceiveMessage+3,w,c
 15103  00242C  22DE               	addwfc	postinc2,f,c
 15104                           
 15105                           ; BSR set to: 15
 15106                           ;inc\CANlib.h: 616: if (RXB0SIDLbits.EID16)
 15107  00242E  A062               	btfss	3938,0,c	;volatile
 15108  002430  D00C               	goto	i1l5576
 15109                           
 15110                           ; BSR set to: 15
 15111                           ;inc\CANlib.h: 617: msg->identifier |= 0x00010000;
 15112  002432  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15113  002436  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15114  00243A  0E00               	movlw	0
 15115  00243C  12DE               	iorwf	postinc2,f,c
 15116  00243E  0E00               	movlw	0
 15117  002440  12DE               	iorwf	postinc2,f,c
 15118  002442  0E01               	movlw	1
 15119  002444  12DE               	iorwf	postinc2,f,c
 15120  002446  0E00               	movlw	0
 15121  002448  12DE               	iorwf	postinc2,f,c
 15122  00244A                     i1l5576:
 15123                           
 15124                           ; BSR set to: 15
 15125                           ;inc\CANlib.h: 618: if (RXB0SIDLbits.EID17)
 15126  00244A  A262               	btfss	3938,1,c	;volatile
 15127  00244C  D00C               	goto	i1l5580
 15128                           
 15129                           ; BSR set to: 15
 15130                           ;inc\CANlib.h: 619: msg->identifier |= 0x00020000;
 15131  00244E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15132  002452  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15133  002456  0E00               	movlw	0
 15134  002458  12DE               	iorwf	postinc2,f,c
 15135  00245A  0E00               	movlw	0
 15136  00245C  12DE               	iorwf	postinc2,f,c
 15137  00245E  0E02               	movlw	2
 15138  002460  12DE               	iorwf	postinc2,f,c
 15139  002462  0E00               	movlw	0
 15140  002464  12DE               	iorwf	postinc2,f,c
 15141  002466                     i1l5580:
 15142                           
 15143                           ; BSR set to: 15
 15144                           ;inc\CANlib.h: 620: if (RXB0SIDLbits.SID0)
 15145  002466  AA62               	btfss	3938,5,c	;volatile
 15146  002468  D00C               	goto	i1l5584
 15147                           
 15148                           ; BSR set to: 15
 15149                           ;inc\CANlib.h: 621: msg->identifier |= 0x00040000;
 15150  00246A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15151  00246E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15152  002472  0E00               	movlw	0
 15153  002474  12DE               	iorwf	postinc2,f,c
 15154  002476  0E00               	movlw	0
 15155  002478  12DE               	iorwf	postinc2,f,c
 15156  00247A  0E04               	movlw	4
 15157  00247C  12DE               	iorwf	postinc2,f,c
 15158  00247E  0E00               	movlw	0
 15159  002480  12DE               	iorwf	postinc2,f,c
 15160  002482                     i1l5584:
 15161                           
 15162                           ; BSR set to: 15
 15163                           ;inc\CANlib.h: 622: if (RXB0SIDLbits.SID1)
 15164  002482  AC62               	btfss	3938,6,c	;volatile
 15165  002484  D00C               	goto	i1l5588
 15166                           
 15167                           ; BSR set to: 15
 15168                           ;inc\CANlib.h: 623: msg->identifier |= 0x00080000;
 15169  002486  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15170  00248A  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15171  00248E  0E00               	movlw	0
 15172  002490  12DE               	iorwf	postinc2,f,c
 15173  002492  0E00               	movlw	0
 15174  002494  12DE               	iorwf	postinc2,f,c
 15175  002496  0E08               	movlw	8
 15176  002498  12DE               	iorwf	postinc2,f,c
 15177  00249A  0E00               	movlw	0
 15178  00249C  12DE               	iorwf	postinc2,f,c
 15179  00249E                     i1l5588:
 15180                           
 15181                           ; BSR set to: 15
 15182                           ;inc\CANlib.h: 624: if (RXB0SIDLbits.SID2)
 15183  00249E  AE62               	btfss	3938,7,c	;volatile
 15184  0024A0  D00C               	goto	i1l5592
 15185                           
 15186                           ; BSR set to: 15
 15187                           ;inc\CANlib.h: 625: msg->identifier |= 0x00100000;
 15188  0024A2  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15189  0024A6  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15190  0024AA  0E00               	movlw	0
 15191  0024AC  12DE               	iorwf	postinc2,f,c
 15192  0024AE  0E00               	movlw	0
 15193  0024B0  12DE               	iorwf	postinc2,f,c
 15194  0024B2  0E10               	movlw	16
 15195  0024B4  12DE               	iorwf	postinc2,f,c
 15196  0024B6  0E00               	movlw	0
 15197  0024B8  12DE               	iorwf	postinc2,f,c
 15198  0024BA                     i1l5592:
 15199                           
 15200                           ; BSR set to: 15
 15201                           ;inc\CANlib.h: 627: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 15202  0024BA  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15203  0024BE  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15204  0024C0  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15205  0024C2  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15206  0024C4  0E15               	movlw	21
 15207  0024C6                     i1u687_25:
 15208  0024C6  90D8               	bcf	status,0,c
 15209  0024C8  3603               	rlcf	??_CANreceiveMessage,f,c
 15210  0024CA  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15211  0024CC  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15212  0024CE  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15213  0024D0  2EE8               	decfsz	wreg,f,c
 15214  0024D2  D7F9               	goto	i1u687_25
 15215  0024D4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15216  0024D8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15217  0024DC  5003               	movf	??_CANreceiveMessage,w,c
 15218  0024DE  12DE               	iorwf	postinc2,f,c
 15219  0024E0  5004               	movf	??_CANreceiveMessage+1,w,c
 15220  0024E2  12DE               	iorwf	postinc2,f,c
 15221  0024E4  5005               	movf	??_CANreceiveMessage+2,w,c
 15222  0024E6  12DE               	iorwf	postinc2,f,c
 15223  0024E8  5006               	movf	??_CANreceiveMessage+3,w,c
 15224  0024EA  12DE               	iorwf	postinc2,f,c
 15225  0024EC                     i1l5594:
 15226                           
 15227                           ; BSR set to: 15
 15228                           ;inc\CANlib.h: 629: }
 15229                           ;inc\CANlib.h: 630: RXB0CONbits.RXFUL = 0x00;
 15230  0024EC  9E60               	bcf	3936,7,c	;volatile
 15231                           
 15232                           ; BSR set to: 15
 15233                           ;inc\CANlib.h: 632: return (error);
 15234                           ;	Return value of _CANreceiveMessage is never used
 15235  0024EE  0012               	return	
 15236  0024F0                     __end_of_CANreceiveMessage:
 15237                           	opt stack 0
 15238                           pclatu	equ	0xFFB
 15239                           pclath	equ	0xFFA
 15240                           tblptru	equ	0xFF8
 15241                           tblptrh	equ	0xFF7
 15242                           tblptrl	equ	0xFF6
 15243                           tablat	equ	0xFF5
 15244                           prodh	equ	0xFF4
 15245                           prodl	equ	0xFF3
 15246                           intcon	equ	0xFF2
 15247                           intcon2	equ	0xFF1
 15248                           postinc0	equ	0xFEE
 15249                           fsr0h	equ	0xFEA
 15250                           fsr0l	equ	0xFE9
 15251                           wreg	equ	0xFE8
 15252                           indf1	equ	0xFE7
 15253                           postdec1	equ	0xFE5
 15254                           fsr1h	equ	0xFE2
 15255                           fsr1l	equ	0xFE1
 15256                           bsr	equ	0xFE0
 15257                           indf2	equ	0xFDF
 15258                           postinc2	equ	0xFDE
 15259                           postdec2	equ	0xFDD
 15260                           fsr2h	equ	0xFDA
 15261                           fsr2l	equ	0xFD9
 15262                           status	equ	0xFD8
 15263                           
 15264 ;; *************** function _ISR_Alta *****************
 15265 ;; Defined at:
 15266 ;;		line 91 in file "parcheggio.c"
 15267 ;; Parameters:    Size  Location     Type
 15268 ;;		None
 15269 ;; Auto vars:     Size  Location     Type
 15270 ;;		None
 15271 ;; Return value:  Size  Location     Type
 15272 ;;		None               void
 15273 ;; Registers used:
 15274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15275 ;; Tracked objects:
 15276 ;;		On entry : 0/0
 15277 ;;		On exit  : 0/0
 15278 ;;		Unchanged: 0/0
 15279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15282 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15283 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15284 ;;Total ram usage:       16 bytes
 15285 ;; Hardware stack levels used:    1
 15286 ;; Hardware stack levels required when called:    1
 15287 ;; This function calls:
 15288 ;;		___lwdiv
 15289 ;; This function is called by:
 15290 ;;		Interrupt level 2
 15291 ;; This function uses a non-reentrant model
 15292 ;;
 15293                           
 15294                           	psect	intcode
 15295  000008                     __pintcode:
 15296                           	opt stack 0
 15297  000008                     _ISR_Alta:
 15298                           	opt stack 21
 15299                           
 15300                           ; BSR set to: 15
 15301                           ;incstack = 0
 15302  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15303  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 15304  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 15305  000012  EF86  F02B         	goto	int_func
 15306                           pclatu	equ	0xFFB
 15307                           pclath	equ	0xFFA
 15308                           tblptru	equ	0xFF8
 15309                           tblptrh	equ	0xFF7
 15310                           tblptrl	equ	0xFF6
 15311                           tablat	equ	0xFF5
 15312                           prodh	equ	0xFF4
 15313                           prodl	equ	0xFF3
 15314                           intcon	equ	0xFF2
 15315                           intcon2	equ	0xFF1
 15316                           postinc0	equ	0xFEE
 15317                           fsr0h	equ	0xFEA
 15318                           fsr0l	equ	0xFE9
 15319                           wreg	equ	0xFE8
 15320                           indf1	equ	0xFE7
 15321                           postdec1	equ	0xFE5
 15322                           fsr1h	equ	0xFE2
 15323                           fsr1l	equ	0xFE1
 15324                           bsr	equ	0xFE0
 15325                           indf2	equ	0xFDF
 15326                           postinc2	equ	0xFDE
 15327                           postdec2	equ	0xFDD
 15328                           fsr2h	equ	0xFDA
 15329                           fsr2l	equ	0xFD9
 15330                           status	equ	0xFD8
 15331                           
 15332                           	psect	intcode_body
 15333  00570C                     __pintcode_body:
 15334                           	opt stack 21
 15335  00570C                     int_func:
 15336                           	opt stack 21
 15337  00570C  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 15338  005710  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 15339  005714  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 15340  005718  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 15341  00571C  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 15342  005720  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 15343  005724  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 15344  005728  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 15345  00572C  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 15346  005730  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 15347  005734  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 15348  005738  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 15349                           
 15350                           ;parcheggio.c: 92: if (INTCON2bits.INTEDG0 == 1) {
 15351  00573C  ACF1               	btfss	intcon2,6,c	;volatile
 15352  00573E  D007               	goto	i2l688
 15353                           
 15354                           ;parcheggio.c: 93: INTCON2bits.INTEDG0 = 0;
 15355  005740  9CF1               	bcf	intcon2,6,c	;volatile
 15356                           
 15357                           ;parcheggio.c: 94: TMR3H = 0;
 15358  005742  0E00               	movlw	0
 15359  005744  6EB3               	movwf	4019,c	;volatile
 15360                           
 15361                           ;parcheggio.c: 95: TMR3L = 0;
 15362  005746  0E00               	movlw	0
 15363  005748  6EB2               	movwf	4018,c	;volatile
 15364                           
 15365                           ;parcheggio.c: 96: distance_error = 0;
 15366  00574A  9644               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 15367                           
 15368                           ;parcheggio.c: 97: } else {
 15369  00574C  D030               	goto	i2l7050
 15370  00574E                     i2l688:
 15371                           
 15372                           ;parcheggio.c: 98: gianni = TMR3H;
 15373  00574E  CFB3 F042          	movff	4019,_gianni	;volatile
 15374                           
 15375                           ;parcheggio.c: 99: asus = TMR3L;
 15376  005752  CFB2 F041          	movff	4018,_asus	;volatile
 15377                           
 15378                           ;parcheggio.c: 100: timerValue2 = gianni;
 15379  005756  C042  F03E         	movff	_gianni,_timerValue2	;volatile
 15380  00575A  6A3F               	clrf	_timerValue2+1,c	;volatile
 15381                           
 15382                           ;parcheggio.c: 101: timerValue2 = ((timerValue2 << 8) | (asus));
 15383  00575C  503E               	movf	_timerValue2,w,c	;volatile
 15384  00575E  0100               	movlb	0	; () banked
 15385  005760  6F67               	movwf	??_ISR_Alta& (0+255),b
 15386  005762  5041               	movf	_asus,w,c	;volatile
 15387  005764  6E3E               	movwf	_timerValue2,c	;volatile
 15388  005766  C067  F03F         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 15389                           
 15390                           ; BSR set to: 0
 15391                           ;parcheggio.c: 102: pulse_time = timerValue2 / 2;
 15392  00576A  90D8               	bcf	status,0,c
 15393  00576C  303F               	rrcf	_timerValue2+1,w,c	;volatile
 15394  00576E  0100               	movlb	0	; () banked
 15395  005770  6F67               	movwf	??_ISR_Alta& (0+255),b
 15396  005772  303E               	rrcf	_timerValue2,w,c	;volatile
 15397  005774  6E3A               	movwf	_pulse_time,c	;volatile
 15398  005776  C067  F03B         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 15399                           
 15400                           ; BSR set to: 0
 15401                           ;parcheggio.c: 103: sensor_distance[MUX_index] = pulse_time / 58;
 15402  00577A  C03A  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 15403  00577E  C03B  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 15404  005782  0E00               	movlw	0
 15405  005784  0100               	movlb	0	; () banked
 15406  005786  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 15407  005788  0E3A               	movlw	58
 15408  00578A  6F62               	movwf	___lwdiv@divisor& (0+255),b
 15409  00578C  EC7E  F02C         	call	___lwdiv	;wreg free
 15410  005790  5040               	movf	_MUX_index,w,c	;volatile
 15411  005792  0D02               	mullw	2
 15412  005794  0E24               	movlw	low _sensor_distance
 15413  005796  24F3               	addwf	prodl,w,c
 15414  005798  6ED9               	movwf	fsr2l,c
 15415  00579A  0E00               	movlw	high _sensor_distance
 15416  00579C  20F4               	addwfc	prodh,w,c
 15417  00579E  6EDA               	movwf	fsr2h,c
 15418  0057A0  0100               	movlb	0	; () banked
 15419  0057A2  C060  FFDE         	movff	?___lwdiv,postinc2
 15420  0057A6  0100               	movlb	0	; () banked
 15421  0057A8  C061  FFDD         	movff	?___lwdiv+1,postdec2
 15422                           
 15423                           ; BSR set to: 0
 15424                           ;parcheggio.c: 104: INTCON2bits.INTEDG0 = 1;
 15425  0057AC  8CF1               	bsf	intcon2,6,c	;volatile
 15426  0057AE                     i2l7050:
 15427                           
 15428                           ;parcheggio.c: 105: }
 15429                           ;parcheggio.c: 106: INTCONbits.INT0IF = 0;
 15430  0057AE  92F2               	bcf	intcon,1,c	;volatile
 15431  0057B0  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 15432  0057B4  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 15433  0057B8  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 15434  0057BC  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 15435  0057C0  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 15436  0057C4  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 15437  0057C8  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 15438  0057CC  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 15439  0057D0  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 15440  0057D4  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 15441  0057D8  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 15442  0057DC  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 15443  0057E0  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 15444  0057E4  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 15445  0057E8  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 15446  0057EA  0011               	retfie		f
 15447  0057EC                     __end_of_ISR_Alta:
 15448                           	opt stack 0
 15449                           pclatu	equ	0xFFB
 15450                           pclath	equ	0xFFA
 15451                           tblptru	equ	0xFF8
 15452                           tblptrh	equ	0xFF7
 15453                           tblptrl	equ	0xFF6
 15454                           tablat	equ	0xFF5
 15455                           prodh	equ	0xFF4
 15456                           prodl	equ	0xFF3
 15457                           intcon	equ	0xFF2
 15458                           intcon2	equ	0xFF1
 15459                           postinc0	equ	0xFEE
 15460                           fsr0h	equ	0xFEA
 15461                           fsr0l	equ	0xFE9
 15462                           wreg	equ	0xFE8
 15463                           indf1	equ	0xFE7
 15464                           postdec1	equ	0xFE5
 15465                           fsr1h	equ	0xFE2
 15466                           fsr1l	equ	0xFE1
 15467                           bsr	equ	0xFE0
 15468                           indf2	equ	0xFDF
 15469                           postinc2	equ	0xFDE
 15470                           postdec2	equ	0xFDD
 15471                           fsr2h	equ	0xFDA
 15472                           fsr2l	equ	0xFD9
 15473                           status	equ	0xFD8
 15474                           
 15475 ;; *************** function ___lwdiv *****************
 15476 ;; Defined at:
 15477 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 15478 ;; Parameters:    Size  Location     Type
 15479 ;;  dividend        2    0[BANK0 ] unsigned int 
 15480 ;;  divisor         2    2[BANK0 ] unsigned int 
 15481 ;; Auto vars:     Size  Location     Type
 15482 ;;  quotient        2    5[BANK0 ] unsigned int 
 15483 ;;  counter         1    4[BANK0 ] unsigned char 
 15484 ;; Return value:  Size  Location     Type
 15485 ;;                  2    0[BANK0 ] unsigned int 
 15486 ;; Registers used:
 15487 ;;		wreg, status,2, status,0
 15488 ;; Tracked objects:
 15489 ;;		On entry : 0/0
 15490 ;;		On exit  : 0/0
 15491 ;;		Unchanged: 0/0
 15492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15493 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15494 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15496 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15497 ;;Total ram usage:        7 bytes
 15498 ;; Hardware stack levels used:    1
 15499 ;; This function calls:
 15500 ;;		Nothing
 15501 ;; This function is called by:
 15502 ;;		_ISR_Alta
 15503 ;; This function uses a non-reentrant model
 15504 ;;
 15505                           
 15506                           	psect	text38
 15507  0058FC                     __ptext38:
 15508                           	opt stack 0
 15509  0058FC                     ___lwdiv:
 15510                           	opt stack 21
 15511                           
 15512                           ;incstack = 0
 15513  0058FC  0E00               	movlw	0
 15514  0058FE  0100               	movlb	0	; () banked
 15515  005900  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 15516  005902  0E00               	movlw	0
 15517  005904  6F65               	movwf	___lwdiv@quotient& (0+255),b
 15518                           
 15519                           ; BSR set to: 0
 15520  005906  0100               	movlb	0	; () banked
 15521  005908  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15522  00590A  0100               	movlb	0	; () banked
 15523  00590C  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 15524  00590E  B4D8               	btfsc	status,2,c
 15525  005910  D02C               	goto	i2l1255
 15526                           
 15527                           ; BSR set to: 0
 15528  005912  0E01               	movlw	1
 15529  005914  0100               	movlb	0	; () banked
 15530  005916  6F64               	movwf	___lwdiv@counter& (0+255),b
 15531  005918  D006               	goto	i2l7020
 15532  00591A                     i2l7018:
 15533                           
 15534                           ; BSR set to: 0
 15535  00591A  0100               	movlb	0	; () banked
 15536  00591C  90D8               	bcf	status,0,c
 15537  00591E  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 15538  005920  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 15539  005922  0100               	movlb	0	; () banked
 15540  005924  2B64               	incf	___lwdiv@counter& (0+255),f,b
 15541  005926                     i2l7020:
 15542                           
 15543                           ; BSR set to: 0
 15544  005926  0100               	movlb	0	; () banked
 15545  005928  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 15546  00592A  D7F7               	goto	i2l7018
 15547  00592C                     i2l7022:
 15548                           
 15549                           ; BSR set to: 0
 15550  00592C  0100               	movlb	0	; () banked
 15551  00592E  90D8               	bcf	status,0,c
 15552  005930  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 15553  005932  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 15554                           
 15555                           ; BSR set to: 0
 15556  005934  0100               	movlb	0	; () banked
 15557  005936  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15558  005938  0100               	movlb	0	; () banked
 15559  00593A  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 15560  00593C  0100               	movlb	0	; () banked
 15561  00593E  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15562  005940  0100               	movlb	0	; () banked
 15563  005942  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 15564  005944  A0D8               	btfss	status,0,c
 15565  005946  D00A               	goto	i2l7030
 15566                           
 15567                           ; BSR set to: 0
 15568  005948  0100               	movlb	0	; () banked
 15569  00594A  5162               	movf	___lwdiv@divisor& (0+255),w,b
 15570  00594C  0100               	movlb	0	; () banked
 15571  00594E  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 15572  005950  0100               	movlb	0	; () banked
 15573  005952  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 15574  005954  0100               	movlb	0	; () banked
 15575  005956  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 15576                           
 15577                           ; BSR set to: 0
 15578  005958  0100               	movlb	0	; () banked
 15579  00595A  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 15580  00595C                     i2l7030:
 15581                           
 15582                           ; BSR set to: 0
 15583  00595C  0100               	movlb	0	; () banked
 15584  00595E  90D8               	bcf	status,0,c
 15585  005960  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 15586  005962  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 15587                           
 15588                           ; BSR set to: 0
 15589  005964  0100               	movlb	0	; () banked
 15590  005966  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 15591  005968  D7E1               	goto	i2l7022
 15592  00596A                     i2l1255:
 15593                           
 15594                           ; BSR set to: 0
 15595  00596A  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 15596  00596E  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 15597                           
 15598                           ; BSR set to: 0
 15599  005972  0012               	return		;funcret
 15600  005974                     __end_of___lwdiv:
 15601                           	opt stack 0
 15602                           pclatu	equ	0xFFB
 15603                           pclath	equ	0xFFA
 15604                           tblptru	equ	0xFF8
 15605                           tblptrh	equ	0xFF7
 15606                           tblptrl	equ	0xFF6
 15607                           tablat	equ	0xFF5
 15608                           prodh	equ	0xFF4
 15609                           prodl	equ	0xFF3
 15610                           intcon	equ	0xFF2
 15611                           intcon2	equ	0xFF1
 15612                           postinc0	equ	0xFEE
 15613                           fsr0h	equ	0xFEA
 15614                           fsr0l	equ	0xFE9
 15615                           wreg	equ	0xFE8
 15616                           indf1	equ	0xFE7
 15617                           postdec1	equ	0xFE5
 15618                           fsr1h	equ	0xFE2
 15619                           fsr1l	equ	0xFE1
 15620                           bsr	equ	0xFE0
 15621                           indf2	equ	0xFDF
 15622                           postinc2	equ	0xFDE
 15623                           postdec2	equ	0xFDD
 15624                           fsr2h	equ	0xFDA
 15625                           fsr2l	equ	0xFD9
 15626                           status	equ	0xFD8
 15627                           pclatu	equ	0xFFB
 15628                           pclath	equ	0xFFA
 15629                           tblptru	equ	0xFF8
 15630                           tblptrh	equ	0xFF7
 15631                           tblptrl	equ	0xFF6
 15632                           tablat	equ	0xFF5
 15633                           prodh	equ	0xFF4
 15634                           prodl	equ	0xFF3
 15635                           intcon	equ	0xFF2
 15636                           intcon2	equ	0xFF1
 15637                           postinc0	equ	0xFEE
 15638                           fsr0h	equ	0xFEA
 15639                           fsr0l	equ	0xFE9
 15640                           wreg	equ	0xFE8
 15641                           indf1	equ	0xFE7
 15642                           postdec1	equ	0xFE5
 15643                           fsr1h	equ	0xFE2
 15644                           fsr1l	equ	0xFE1
 15645                           bsr	equ	0xFE0
 15646                           indf2	equ	0xFDF
 15647                           postinc2	equ	0xFDE
 15648                           postdec2	equ	0xFDD
 15649                           fsr2h	equ	0xFDA
 15650                           fsr2l	equ	0xFD9
 15651                           status	equ	0xFD8
 15652                           
 15653                           	psect	param0
 15654  0000                     pclatu	equ	0xFFB
 15655                           pclath	equ	0xFFA
 15656                           tblptru	equ	0xFF8
 15657                           tblptrh	equ	0xFF7
 15658                           tblptrl	equ	0xFF6
 15659                           tablat	equ	0xFF5
 15660                           prodh	equ	0xFF4
 15661                           prodl	equ	0xFF3
 15662                           intcon	equ	0xFF2
 15663                           intcon2	equ	0xFF1
 15664                           postinc0	equ	0xFEE
 15665                           fsr0h	equ	0xFEA
 15666                           fsr0l	equ	0xFE9
 15667                           wreg	equ	0xFE8
 15668                           indf1	equ	0xFE7
 15669                           postdec1	equ	0xFE5
 15670                           fsr1h	equ	0xFE2
 15671                           fsr1l	equ	0xFE1
 15672                           bsr	equ	0xFE0
 15673                           indf2	equ	0xFDF
 15674                           postinc2	equ	0xFDE
 15675                           postdec2	equ	0xFDD
 15676                           fsr2h	equ	0xFDA
 15677                           fsr2l	equ	0xFD9
 15678                           status	equ	0xFD8
 15679                           
 15680                           	psect	temp
 15681  000048                     btemp:
 15682                           	opt stack 0
 15683  000048                     	ds	1
 15684  0000                     int$flags	set	btemp
 15685                           pclatu	equ	0xFFB
 15686                           pclath	equ	0xFFA
 15687                           tblptru	equ	0xFF8
 15688                           tblptrh	equ	0xFF7
 15689                           tblptrl	equ	0xFF6
 15690                           tablat	equ	0xFF5
 15691                           prodh	equ	0xFF4
 15692                           prodl	equ	0xFF3
 15693                           intcon	equ	0xFF2
 15694                           intcon2	equ	0xFF1
 15695                           postinc0	equ	0xFEE
 15696                           fsr0h	equ	0xFEA
 15697                           fsr0l	equ	0xFE9
 15698                           wreg	equ	0xFE8
 15699                           indf1	equ	0xFE7
 15700                           postdec1	equ	0xFE5
 15701                           fsr1h	equ	0xFE2
 15702                           fsr1l	equ	0xFE1
 15703                           bsr	equ	0xFE0
 15704                           indf2	equ	0xFDF
 15705                           postinc2	equ	0xFDE
 15706                           postdec2	equ	0xFDD
 15707                           fsr2h	equ	0xFDA
 15708                           fsr2l	equ	0xFD9
 15709                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        15
    BSS         175
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      71
    BANK0           160    119     136
    BANK1           256     85     224
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> can_send@data_correction1(BANK0[0]), data_correction(BANK1[8]), data_speed(BANK1[8]), data_test(BANK1[8]), 
		 -> data_steering(BANK1[8]), data_brake(BANK1[8]), data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _park_search->_parallelo
    _cos->_sin
    _sin->___flsub
    _floor->___fladd
    ___xxtofl->___fltol
    ___flsub->_floor
    _asin->_atan
    _sqrt->___fladd
    _atan->_eval_poly
    _fabs->___flneg
    ___flneg->___flmul
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flneg
    ___flge->_fabs
    _delay_s->_delay_ms
    _delay_ms->___wmul
    _can_send->_CANsendMessage
    _configurazione->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _parallelo->_asin
    _park_routine->_matematica
    _matematica->_cos
    _cos->_asin
    _asin->_sqrt

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  226397
                    _can_interpreter
                     _configurazione
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   85076
                                             45 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   78684
                                            117 BANK0      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     194
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _park_routine                                         0     0      0  135387
                     _CANsendMessage
                            ___fltol
                           _can_send
                            _delay_s
                         _matematica
 ---------------------------------------------------------------------------------
 (2) _matematica                                          32    32      0  123371
                                             53 BANK1     32    32      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                               _asin
                                _cos
 ---------------------------------------------------------------------------------
 (3) _cos                                                 12     8      4   53191
                                             45 BANK1      8     4      4
                            ___fladd
                             ___flge
                               _asin (ARG)
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 17    13      4   45790
                                            115 BANK0      4     0      4
                                              0 BANK1     13    13      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4    9190
                                             97 BANK0     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                8     2      6     452
                                             23 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     707
                                             33 BANK0     14    10      4
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     568
                                             23 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6007
                                            107 BANK0      8     0      8
                            ___fladd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   53742
                                             21 BANK1     24    20      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0      8     4      4
                                              0 BANK1     21    21      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   32013
                                            113 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1544
                                             77 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1220
                                             73 BANK0      4     0      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   12085
                                             97 BANK0     16     8      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5387
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    5520
                                             77 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1498
                                             81 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4039
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0     419
                                             31 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     373
                                             29 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     287
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    5562
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    5467
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      24
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    5934
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    1251
                                             12 COMRAM    23    23      0
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_interpreter
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _park_routine
     _CANsendMessage
     ___fltol
     _can_send
       _CANisTxReady
       _CANsendMessage
     _delay_s
       _delay_ms
         ___wmul
     _matematica
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___fldiv
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _cos
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _asin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _atan
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___fldiv
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _fabs
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           _sqrt
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _sin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             _floor (ARG)
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___flge
                 _fabs (ARG)
                   ___flneg
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___fltol
               ___xxtofl
                 ___fltol (ARG)
                 _abs (ARG)
               _frexp
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _floor
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___fltol
             ___xxtofl
               ___fltol (ARG)
               _abs (ARG)
             _frexp
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       ___fltol (ARG)
       _abs (ARG)
     _abs
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
               ___flneg (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     55      E0       7       87.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     77      88       5       85.0%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     23      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1AF      20        0.0%
DATA                 0      0     1AF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Mon Apr 25 16:03:26 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _n 012C  
                           _x 0138                             _z 00DB          __end_of_CANSetFilter 1858  
                ___fldiv@sign 0083            delay_s@repeat_loop 0080                            bsr 000FE0  
         ___wmul@multiplicand 0079                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                    _MUX_select 0100                           l402 1F30  
                         l403 1F34                           l500 15B4                           l404 1F40  
                         l501 15B8                           l510 16C4                           l502 15C4  
                         l511 16D0                           l503 15C8                           l520 17DC  
                         l512 16D4                           l504 15D4                           l440 3CD6  
                         l432 3C96                           l521 17E0                           l513 16E0  
                         l433 3C9A                           l522 17EC                           l514 16E4  
                         l450 3DE2                           l434 3CA6                           l370 1918  
                         l523 17F0                           l515 16F0                           l507 16B0  
                         l451 3DEE                           l443 3DAE                           l435 3CAA  
                         l363 1ADC                           l524 17FC                           l508 16B4  
                         l444 3DB2                           l436 3CB6                           l380 1AF6  
                         l364 186E                           l525 1800                           l509 16C0  
                         l445 3DBE                           l437 3CBA                           l381 1BEE  
                         l373 1A28                           l365 1872                           l526 180C  
                         l518 17CC                           l470 1276                           l446 3DC2  
                         l438 3CC6                           l358 4BCC                           l390 1CBC  
                         l382 1B7E                           l374 1A2C                           l366 196A  
                         l519 17D0                           l471 1282                           l463 1242  
                         l447 3DCE                           l439 3CCA                           l359 4BD6  
                         l383 1B88                           l375 1A38                           l367 18FA  
                         l480 138C                           l464 1246                           l448 3DD2  
                         l384 1B92                           l368 1904                           l720 4D3C  
                         l481 1390                           l465 1252                           l449 3DDE  
                         l393 1D76                           l385 1B9C                           l369 190E  
                         l490 149C                           l482 139C                           l474 135C  
                         l466 1256                           l394 1D7A                           l378 1D60  
                         l491 14A8                           l475 1360                           l467 1262  
                         l395 1E72                           l379 1AF2                           l731 4E70  
                         l492 14AC                           l476 136C                           l468 1266  
                         l556 5C24                           l396 1E02                           l388 1CAC  
                         l740 5012                           l493 14B8                           l485 1478  
                         l477 1370                           l469 1272                           l397 1E0C  
                         l389 1CB0                           l486 147C                           l478 137C  
                         l398 1E16                           l742 4ED2                           l718 4E74  
                         l487 1488                           l479 1380                           l399 1E20  
                         l496 1594                           l488 148C                           l752 4FFE  
                         l497 1598                           l489 1498                           l569 5B32  
                         l498 15A4                           l746 4F36                           l499 15A8  
                         l756 5010                           l749 4FB6                           l848 5BD0  
                         l784 46A0                           l778 46DE                  __CFG_CPB$OFF 000000  
                __CFG_CPD$OFF 000000                           _abs 5BAE                           _asd 0221  
                         _dir 0222                           _cos 5628                           _jjj 0124  
                         _kkk 0128                           _msg 0140                           _sin 3E3A  
                         prod 000FF3                           wreg 000FE8                  ___flmul@aexp 009D  
                ___flmul@bexp 00A2               ?_configurazione 0001                  ___flmul@sign 009C  
                ___flmul@temp 00A7                  ___flmul@prod 00A3                  __CFG_LVP$OFF 000000  
                ___fltol@exp1 0080                  __CFG_WDT$OFF 000000                          ?_abs 0077  
                        l1055 5160                          l1400 31BC                          l1048 5AF4  
                        l1410 32CE                          l1402 322A                          l1307 2BA4  
                        l1324 2D18                          l1308 2B98                          l1333 2DAC  
                        l1309 2B64                          l1450 4AAC                          l1442 4A38  
                        l1363 390A                          l1435 498C                          l1291 4140  
                        l1372 3942                          l1460 53F2                          l1374 39B0  
                        l1366 38B2                          l1393 2F20                          l1449 4A94  
                        l5010 10F6                          l5130 1502                          l6002 2AA8  
                        l5124 14BC                          l5028 11B0                          ?_cos 01AC  
                        l5062 12CC                          l6102 2D60                          l5056 1286  
                        l6112 2D80                          l6032 2AE4                          l5226 1810  
                        l5090 13A0                          l4610 1F24                          l4514 1BA6  
                        l5234 5B24                          l6122 2DA6                          l6106 2D6C  
                        l6114 2D86                          l6050 2B88                          l5164 161E  
                        l4540 1CC0                          l5260 523A                          l6140 2E36  
                        l6132 2E02                          l6060 2BC8                          l6044 2B78  
                        l5158 15D8                          l4534 1CA0                          l4438 1922  
                        l5246 51B4                          l6070 2C0C                          l6046 2B7E  
                        l5192 16F4                          l5096 13E6                          l4616 1F44  
                        l4464 1A3C                          l5256 5202                          l5264 5274  
                        l6304 51AC                          l6152 2E5A                          l6144 2E42  
                        l6136 2E14                          l6312 5B66                          l5370 4C26  
                        l5362 4BC4                          l4458 1A1C                          l6146 2E46  
                        l6074 2C16                          l6170 2EB4                          l6162 2E8A  
                        l6322 5542                          l5364 4BDA                          l6068 2C06  
                        l6244 31D0                          l6180 2EE4                          l6172 2EC6  
                        l4822 5C32                          l5198 173A                          l4590 1E2A  
                        l5382 5BF8                          l6510 3956                          l6430 371E  
                        l6078 2C28                          l6270 32B4                          l6254 3224  
                        l6238 31A6                          l6350 55F0                          l6342 55C4  
                        l4840 3B54                          l5368 4BE2                          l6520 39AA  
                        l6504 392C                          l6424 36FA                          l6096 2D4A  
                        l6088 2CF8                          l6280 32F8                          l6264 327A  
                        l6192 2F34                          l6168 2EAE                          l6352 55FA  
                        l6408 5812                          l4914 3DF2                          l5378 5BE6  
                        l6530 3A00                          l6450 377C                          l6434 3728  
                        l6290 506E                          l6186 2F08                          l6602 3330  
                        l6338 55B0                          l7066 5A72                          l6444 3758  
                        l6268 32A0                          l6196 2F48                          l6188 2F0E  
                        l6700 473C                          l6356 5616                          l6348 55E0  
                        l6372 49C4                          l6534 3A2E                          l6454 3786  
                        l6294 50BC                          l6278 32EE                          l6622 33AE  
                        l6614 337C                          l6374 49CC                          l6366 499C  
                        l4856 3C0A                          l6544 3A74                          l6536 3A42  
                        l6720 491C                          l6704 47B0                          l6616 338E  
                        l6384 4A76                          l6376 49DC                          l4938 0E10  
                        l4882 3CDA                          l6546 3A78                          l6538 3A64  
                        l6474 3808                          l6466 37DA                          l6298 510E  
                        l6570 54FE                          l6642 3420                          l6634 33F0  
                        l6386 4A86                          l6378 4A1A                          l4956 0EC8  
                        l6492 38BE                          l6484 3886                          l6716 4904  
                        l6660 356A                          l6652 34A2                          l6732 3E70  
                        l4974 0F82                          l6654 34AA                          l6398 4AFE  
                        l6590 5356                          l6582 5320                          l6902 4CEC  
                        l4992 103C                          l4888 3D20                          l5960 29E2  
                        l6568 545A                          l6744 3F9A                          l6808 56B0  
                        l6920 4DAA                          l6498 3906                          l5970 2A10  
                        l6658 3530                          l6666 35A6                          l6586 5334  
                        l6914 4D9A                          l6780 42DE                          l6748 4010  
                        l6844 46BC                          l6924 4DE2                          l5990 2A74  
                        l5966 2A06                          l6686 36BC                          l6678 3686  
                        l6838 4662                          l6846 46C2                          l5984 2A50  
                        l6792 43C0                          l6768 41B0                          l5994 2A7E  
                        l5978 2A3C                          l6948 4E80                          ?_sin 00D3  
                        l6894 4CD8                          l6976 4F3A                          _LATA 000F89  
                        _LATB 000F8A                          _LATC 000F8B                          u5005 1C72  
                        u5110 1E4A                          u5120 1E96                          u5115 1E3E  
                        u5125 1E8A                          u5135 1EF6                          u6300 1714  
                        u6220 15F8                          u6140 14DC                          u6060 13C0  
                        u6305 1708                          u6225 15EC                          u6145 14D0  
                        u6065 13B4                          u5505 3BE6                          u5450 3AD0  
                        u5455 3AC4                          u5705 0DEC                          u5465 3B30  
                        u5810 0FB8                          u5730 0E44                          u5490 3B86  
                        u4850 1942                          u6380 1830                          u5660 3E12  
                        u5580 3CFA                          u4860 198E                          u8300 3A14  
                        u5815 0FAC                          u5735 0E38                          u5495 3B7A  
                        u4855 1936                          u9007 5B26                          u7360 2B2E  
                        u6385 1824                          u5905 118C                          u5825 1018  
                        u5745 0EA4                          u5665 3E06                          u5585 3CEE  
                        u4865 1982                          u5850 1072                          u5770 0EFE  
                        u5690 0D8C                          u7370 2B46                          u8090 5844  
                        u4875 19EE                          u4980 1BC6                          u7380 2B48  
                        u4990 1C12                          u8510 476C                          u5855 1066  
                        u5775 0EF2                          u5695 0D80                          u8520 476E  
                        u5865 10D2                          u5785 0F5E                          u4985 1BBA  
                        u5890 112C                          u8098 5848                          u8370 5344  
                        u4995 1C06                          u5980 12A6                          u7820 328E  
                        u7740 3148                          u5895 1120                          u7920 5562  
                        u8720 46BA                          u5985 129A                          u7745 313C  
                        u8580 3F94                          u7925 5556                          u8590 3F96  
                        u8830 4DF6                          u8671 44F6                          u8760 4CE8  
                        u8681 4502                          u8890 4EE6           __size_of_CANSetMask 039E  
                        abs@a 0077                          _alfa 011C                          _fabs 5AC8  
                        _data 014F                          _beta 0120                          _atan 46F0  
                        _asin 4152                          _main 5A34                          _asus 0041  
                        cos@f 01AC                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          indf1 000FE7  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        btemp 0048                          _sqrt 3312                          pclat 000FFA  
                        sin@f 00D3                          sin@y 017F                          prodh 000FF4  
                        prodl 000FF3                          start 0258                 __CFG_IESO$OFF 000000  
             ___fldiv@new_exp 0088                delay_s@value_s 007F                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000              _CANOperationMode 5C2A                         ??_abs 0079  
                       ??_cos 00D7                         ??_sin 00D7    __size_of_CANreceiveMessage 050C  
                       ?_fabs 00AD                 ___fltol@sign1 007F                         ?_atan 00D1  
                       ?_asin 0194               __end_of___fladd 2E6C                         ?_main 0001  
             __end_of___fldiv 3A9C               __end_of___flneg 5B78               __end_of___flmul 3312  
             __end_of___flsub 5AC8               __end_of___fltol 5628                         ?_sqrt 00C1  
                       _T0CON 000FD5                         _T3CON 000FB1            __size_of_ISR_Bassa 0240  
             __end_of___lwdiv 5974                         i1l410 227C                         i1l702 018C  
                       i1l705 020C                         i1l709 0210                         i1l695 009A  
                       i2l688 574E                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _TMR3H 000FB3                         _TMR3L 000FB2                         _PORTA 000F80  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
          __end_ofsin@coeff_a 0D41            __end_ofsin@coeff_b 0D51                 __CFG_PWRT$OFF 000000  
            __end_of_ISR_Alta 57EC               __end_of_delay_s 5C06                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
          CANInitialize@flags 0089                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         _bordo 01D4                         fabs@d 00AD  
                       _floor 52E0                         _frexp 57EC                         _errno 013E  
                       atan@f 00D1                         atan@x 0183                         atan@y 017F  
                       asin@x 0194                         asin@y 01A4      can_send@data_correction1 0087  
              __pbitbssCOMRAM 0220                         sin@x2 0187                         tablat 000FF5  
        __end_of_CANisTxReady 5C2A                         sqrt@a 00C1                         sqrt@i 0180  
                       sqrt@p 0185                         status 000FD8                  ?_park_search 0001  
             __initialization 5880                  __end_of_fabs 5B06                  __end_of_atan 4942  
                __end_of_asin 4464                  __end_of_main 5A80                  __end_of_sqrt 36DC  
                      ??_fabs 00B1                        ??_atan 00D5                        ??_asin 00D5  
                      ??_main 00D7                        ??_sqrt 00C5                 __activetblptr 000003  
           _CANisTxReady$2845 0077                        _ADCON1 000FC1                        ?_floor 00C1  
                      ?_frexp 0077                        _CANCON 000F6F            _distance_received1 0225  
             __CFG_BBSIZ$1024 000000             _spazio_parcheggio 0046                        i2l1255 596A  
                      i1l5530 2244                        i1l5522 2208                        i1l5514 21CC  
                      i1l5506 215C                        i1l5532 2276                        i1l5526 2226  
                      i1l5518 21EA                        i1l5580 2466                        i1l5900 01CE  
                      i1l5592 24BA                        i1l5584 2482                        i1l5576 244A  
                      i1l5568 23DC                        i1l5594 24EC                        i1l5906 01F6  
                      i1l5826 008C                        i1l5588 249E                        i1l5860 00D6  
                      i1l5856 00CE                        i1l5882 0168                        i2l7020 5926  
                      i2l7030 595C                        i2l7022 592C                        i1l5896 01C6  
                      i1l5888 0196                        i2l7018 591A                        i2l7050 57AE  
                      _RXB0D0 000F66                        _RXB0D1 000F67                        _RXB0D2 000F68  
                      _RXB0D3 000F69                        _RXB0D4 000F6A                        _RXB1D0 000F56  
                      _RXB0D5 000F6B                        _RXB1D1 000F57                        _RXB0D6 000F6C  
                      _RXB1D2 000F58                        _RXB0D7 000F6D                        _RXB1D3 000F59  
                      _RXB1D4 000F5A                        _RXB1D5 000F5B                        _RXB1D6 000F5C  
                      _RXB1D7 000F5D                        _TXB0D0 000F46                        _TXB0D1 000F47  
                      _TXB0D2 000F48                        _TXB0D3 000F49                        _TXB1D0 000F36  
                      _TXB0D4 000F4A                        _TXB1D1 000F37                        _TXB0D5 000F4B  
                      _TXB1D2 000F38                        _TXB0D6 000F4C                        _TXB1D3 000F39  
                      _TXB0D7 000F4D                        _TXB2D0 000F26                        _TXB1D4 000F3A  
                      _TXB2D1 000F27                        _TXB1D5 000F3B                        _TXB2D2 000F28  
                      _TXB1D6 000F3C                        _TXB2D3 000F29                        _TXB1D7 000F3D  
                      _TXB2D4 000F2A                        _TXB2D5 000F2B                        _TXB2D6 000F2C  
                      _TXB2D7 000F2D            CANsendMessage@data 007B              __end_of_can_send 52E0  
          CANsendMessage@tamp 0083              __end_of___xxtofl 4B10             __end_of_ISR_Bassa 0258  
            __end_of_delay_ms 5B40         __size_of_CANSetFilter 0B06                __CFG_XINST$OFF 000000  
                      ___flge 5020               _data_correction 015F                     ??___fladd 00B5  
                      ___wmul 5B78                     ??___fldiv 007F                     ??___flneg 00AD  
              __CFG_STVREN$ON 000000                     ??___flmul 0098                     ??___flsub 00D3  
                   ??___fltol 007B                     ??___lwdiv 0064                  ??_CANSetMask 007C  
                      _gianni 0042                        _raggio 01DC                        clear_0 5886  
                      clear_1 5892                        clear_2 58A2                     ??_delay_s 007F  
                      floor@i 00C5                        floor@x 00C1               __CFG_BOREN$BOHW 000000  
                __pdataCOMRAM 0046                        sin@sgn 018B                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                _CANSetFilter 0D52                    ___flge@ff1 00B1                    ___flge@ff2 00B5  
                ___xxtofl@arg 008B                  ___xxtofl@exp 008A                  ___xxtofl@val 0081  
                  __accesstop 0060       __end_of__initialization 58F2            __end_of_CANSetMask 3E3A  
             __CFG_PBADEN$OFF 000000                    ___flneg@f1 00A9                 ?_park_routine 0001  
                eval_poly@res 00CD                 ___rparam_used 000000                    ___fltol@f1 0077  
              __pcstackCOMRAM 0001                     ?_ISR_Alta 0001                  __pidataBANK0 5C4E  
                __pidataBANK1 5C40                 __end_of_floor 5404                 __end_of_frexp 5880  
            ??_configurazione 0091         CANSetFilter@numBuffer 0080                  _actual_speed 00DF  
       __size_of_CANisTxReady 0024                       ??_floor 00C5                       ??_frexp 007D  
    __end_of_CANOperationMode 5C40                    __pbssBANK0 00D7                    __pbssBANK1 0100  
             _sensor_distance 0024            __size_of_eval_poly 0118                    _data_brake 0157  
              ??_park_routine 00D7                 ISR_Bassa@gigi 0022       __size_of_CANsendMessage 078C  
                  _data_speed 0167                    _activation 0220      __size_of_can_interpreter 0054  
          __size_of_parallelo 028C          __size_of_park_search 01A8             _old_alignment_gap 0130  
                  ??_ISR_Alta 0067                       ?___flge 00B1                       ?___wmul 0077  
                     _CANSTAT 000F6E                  _CANisTxReady 5C06                       _BRGCON1 000F70  
                     _BRGCON2 000F71                       _BRGCON3 000F72                     ?_can_send 0001  
                   ?___xxtofl 0081        __size_of_CANInitialize 01C6                     ?_delay_ms 007D  
                     _RXB0DLC 000F65                       _RXB1DLC 000F55                       _RXB0CON 000F60  
                     _RXB1CON 000F50                       _TXB0DLC 000F45                       _TXB1DLC 000F35  
                     _TXB2DLC 000F25           CANsendMessage@flags 007E                       __Hparam 0000  
                  _left_speed 0038                       __Lparam 0000              delay_ms@value_ms 007D  
                     _Pminimo 0118               __size_of___flge 0190                    _matematica 24F0  
                     ___fladd 29C4                       ___fldiv 36DC                       ___flneg 5B40  
                     ___flmul 2E6C                       ___flsub 5A80                       ___fltol 551C  
             __size_of___wmul 0036                       ___lwdiv 58FC                  __psmallconst 0D00  
        CANInitialize@propSeg 008E                       __pcinit 5880             __end_of_eval_poly 551C  
                     _delay_s 5BDA                       __ramtop 0D00                       __ptext0 5A34  
                     __ptext1 4CD6                       __ptext2 4464                       __ptext3 5BAE  
                     __ptext4 4E7E                       __ptext5 24F0                       __ptext6 5628  
                     __ptext7 3E3A                       __ptext8 52E0                       __ptext9 57EC  
                   _T0CONbits 000FD5                    ??_can_send 0087                  __size_of_abs 002C  
                __size_of_cos 00E4               atan@val_squared 0188                  __size_of_sin 0318  
                  ??___xxtofl 0085                       atan@val 018C             __end_of_parallelo 46F0  
                  ??_delay_ms 007F                       asin@sgn 0198        CANreceiveMessage@error 000B  
             _start_operation 022A                __pintcode_body 570C          end_of_initialization 58F2  
                     int_func 570C                 _CANInitialize 4B10                     _ISR_Bassa 0018  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc2 000FDE                       sqrt@grs 0186                       sqrt@exp 018A  
           ??_can_interpreter 0077       _steering_correction_dir 022B                     _PORTBbits 000F81  
              CANSetMask@mask 0077                CANSetMask@tamp 0081                  _distance_set 0110  
              CANSetMask@type 007B          __end_of_park_routine 5020                   ___fladd@grs 00C0  
               ___xxtofl@sign 0089                     _TRISBbits 000F93                   ___fldiv@grs 008A  
                 ___fldiv@rem 0084                     _MUX_index 0040                    _pulse_time 003A  
     _clock_counter_reference 00E1                   ___flmul@grs 009E                _CANsendMessage 1858  
            CANInitialize@BRP 0088              CANInitialize@SJW 0087                ?_CANInitialize 0085  
                  ?_ISR_Bassa 0001                   ?_matematica 0001                __end_of___flge 51B0  
           __size_of_ISR_Alta 57E4                __end_of___wmul 5BAE                 __pidataCOMRAM 5C4C  
                  floor@expon 00C9           start_initialization 5880                    eval_poly@d 00C5  
                  eval_poly@n 00C7                    eval_poly@x 00C1                   __end_of_abs 5BDA  
                 __end_of_cos 570C                   __end_of_sin 4152           CANSetMask@numBuffer 0080  
               _data_speed_rx 0108        __end_of_CANsendMessage 1FE4             ?_CANOperationMode 0001  
               _data_steering 016F                    frexp@value 0077            ??_CANOperationMode 0077  
           _distance_received 0224    CANInitialize@FilterConfig1 008F    CANInitialize@FilterConfig2 0090  
         _steering_correction 0043                      ??___flge 00B9                      ??___wmul 007B  
                 __pdataBANK0 00E7                   __pdataBANK1 01D4              __CFG_LPT1OSC$OFF 000000  
                   ___fladd@a 00B1                     ___fladd@b 00AD        CANInitialize@phaseSeg1 0085  
      CANInitialize@phaseSeg2 0086                     ___fldiv@a 007B                     ___fldiv@b 0077  
                   ___flmul@a 0094                     ___flmul@b 0090                   __pbssCOMRAM 0024  
                   ___flsub@a 00CF                     ___flsub@b 00CB                 __pcstackBANK0 0060  
               __pcstackBANK1 017F                   _BRGCON2bits 000F71                   _BRGCON3bits 000F72  
           __size_of_can_send 0130             __size_of___xxtofl 01CE             __size_of_delay_ms 003A  
             ?_CANsendMessage 0077           __size_of_matematica 04D4               ??_CANInitialize 008A  
                   _asin$3746 01A8                     _asin$3747 01A0                     _asin$3748 019C  
                  sin@coeff_a 0D2D                    sin@coeff_b 0D41                 ??_park_search 01AC  
               _alignment_gap 00D7            CANSetFilter@filter 0077                     _data_test 0177  
            ___lwdiv@dividend 0060                    ISR_Bassa@i 0023                   ??_ISR_Bassa 000D  
                   __pintcode 0008                      ?___fladd 00AD                      ?___fldiv 0077  
                    ?___flneg 00A9                      ?___flmul 0090                      ?___flsub 00CB  
                    ?___fltol 0077         __size_of_park_routine 01A2                      ?___lwdiv 0060  
                 __pintcodelo 0018                      ?_delay_s 0001                   __smallconst 0D00  
                 _COMSTATbits 000F74                     _eval_poly 5404                     _larghezza 01D8  
            ___lwdiv@quotient 0065                __size_of_floor 0124                __size_of_frexp 0094  
     __size_of_configurazione 006C                     _parallelo 4464         CANreceiveMessage@tamp 000C  
              _prima_sterzata 0134                ___wmul@product 007B                      _LATBbits 000F8A  
             _can_interpreter 59E0                     atan@recip 0187                  _park_routine 4E7E  
_delay_quartz_frequency_value 00E7                      _IPR3bits 000FA5                      _PIE3bits 000FA3  
                    i1u901_27 00BC                      i1u670_25 20E0                      i1u681_25 2362  
                    i1u667_20 209C                      i1u667_26 209E                      i1u668_20 20CA  
                    i1u676_25 2250                      i1u668_26 20CC                      _PIR3bits 000FA4  
                    i1u678_20 2324                      i1u678_26 2326                      i1u679_20 234E  
                    i1u687_25 24C6                      i1u679_26 2350                      _RXB0EIDH 000F63  
                    _RXB0EIDL 000F64                      _RXB1EIDH 000F53                      _RXB1EIDL 000F54  
                    _ISR_Alta 0008                     _set_speed 00E5                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                      _RXB0SIDH 000F61                      _RXB0SIDL 000F62  
                    _RXF0EIDH 000F02                      _RXB1SIDH 000F51                      _RXF0EIDL 000F03  
                    _RXB1SIDL 000F52                      _RXF1EIDH 000F06                      _RXF1EIDL 000F07  
                    _RXF2EIDH 000F0A                      _RXF2EIDL 000F0B                      _RXF3EIDH 000F0E  
                    _RXF3EIDL 000F0F                      _RXF4EIDH 000F12                      _RXF4EIDL 000F13  
                    _RXF5EIDH 000F16                      _RXF5EIDL 000F17                      _RXF0SIDH 000F00  
                    _RXF0SIDL 000F01           __end_of_park_search 4E7E                      _TXB0EIDH 000F43  
                    _RXF1SIDH 000F04                      _TXB0EIDL 000F44                      _RXF1SIDL 000F05  
                    _TXB1EIDH 000F33                      _RXF2SIDH 000F08                      _TXB1EIDL 000F34  
                    _RXF2SIDL 000F09                      _TXB2EIDH 000F23                      _RXF3SIDH 000F0C  
                    _TXB2EIDL 000F24                      _RXF3SIDL 000F0D                      _RXF4SIDH 000F10  
                    _RXF4SIDL 000F11                      _RXF5SIDH 000F14                      _RXF5SIDL 000F15  
                    _RXM0EIDH 000F1A                      _RXM0EIDL 000F1B                      _TXB0SIDH 000F41  
                    _RXM1EIDH 000F1E                      _TXB0SIDL 000F42                      _RXM1EIDL 000F1F  
                    _TXB1SIDH 000F31                      _TXB1SIDL 000F32                      _TXB2SIDH 000F21  
                    _TXB2SIDL 000F22                      _RXM0SIDH 000F18                      _RXM0SIDL 000F19  
                    _RXM1SIDH 000F1C                      _RXM1SIDL 000F1D                   _distance_dx 0034  
                 _distance_sx 0036                      _RXERRCNT 000F75                      _TXERRCNT 000F76  
           ___wmul@multiplier 0077                    ?_eval_poly 00C1           __end_ofatan@coeff_a 0D19  
         __end_ofatan@coeff_b 0D2D                 ?_CANSetFilter 0077                   _INTCON2bits 000FF1  
                   copy_data0 58BC                    _CANCONbits 000F6F                    ?_parallelo 0001  
            _distance_average 00E3                     frexp@eptr 007B                      __Hparam0 0000  
                    __Lparam0 0000                  _RXB0SIDLbits 000F62                  _RXB1SIDLbits 000F52  
                ??_matematica 00D7                 _request_sent1 0229              __size_of___fladd 04A8  
                  _CANSetMask 3A9C              __size_of___fldiv 03C0              __size_of___flneg 0038  
            __size_of___flmul 04A6              __size_of___flsub 0048              __size_of___fltol 010C  
                    _cos$3749 01B0              __size_of___lwdiv 0078              __size_of_delay_s 002C  
                    _can_send 51B0                      ___xxtofl 4942                  _RXF0SIDLbits 000F01  
                    _delay_ms 5B06               ___lwdiv@divisor 0062                  _RXF1SIDLbits 000F05  
             ___lwdiv@counter 0064                ??_CANSetFilter 007C                      __ptext10 4942  
                    __ptext11 551C                      __ptext20 29C4                      __ptext12 5A80  
                    __ptext21 5020                      __ptext13 4152                      __ptext30 4B10  
                    __ptext22 36DC                      __ptext14 3312                      __ptext31 3A9C  
                    __ptext23 5BDA                      __ptext15 46F0                      __ptext32 0D52  
                    __ptext24 5B06                      __ptext16 5AC8                      __ptext33 5C2A  
                    __ptext25 5B78                      __ptext17 5B40                      __ptext34 59E0  
                    __ptext26 51B0                      __ptext18 5404                      __ptext27 1858  
                    __ptext19 2E6C                      __ptext36 1FE4                      __ptext28 5C06  
                    __ptext29 5974                      __ptext38 58FC                  _RXF2SIDLbits 000F09  
                    _sin$3750 0183       __end_of_can_interpreter 5A34                  _RXF3SIDLbits 000F0D  
                    _distance 013C            __end_of_matematica 29C4                  _RXF4SIDLbits 000F11  
                _RXF5SIDLbits 000F15      CANsendMessage@dataLength 007D                 __size_of_fabs 003E  
               __size_of_atan 0252                 __size_of_asin 0312                 __size_of_main 004C  
               __size_of_sqrt 03CA                   _park_search 4CD6          CANreceiveMessage@msg 0001  
                _TXB0SIDLbits 000F42                  _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22  
                    int$flags 0048     __size_of_CANOperationMode 0016                 ?_CANisTxReady 0001  
                 atan@coeff_a 0D01                   atan@coeff_b 0D19                   _RXB0DLCbits 000F65  
                 _RXB1DLCbits 000F55                  _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60  
                 _RXB1CONbits 000F50             _CANreceiveMessage 1FE4                  _RXM1SIDLbits 000F1D  
                  _INTCONbits 000FF2                   ??_eval_poly 00C9              ??_CANsendMessage 007F  
          ?_CANreceiveMessage 0001                  _request_sent 0228                     sqrt@tfrac 0181  
              _configurazione 5974      CANsendMessage@identifier 0077                   ??_parallelo 00D5  
                    intlevel1 0000                      intlevel2 0000              CANSetFilter@tamp 0081  
            CANSetFilter@type 007B           ??_CANreceiveMessage 0003           _old_data_correction 0227  
                 _TXB0DLCbits 000F45                   _right_speed 003C                   _TXB1DLCbits 000F35  
                 _TXB0CONbits 000F40                   _TXB2DLCbits 000F25                   _TXB1CONbits 000F30  
                 _TXB2CONbits 000F20          CANOperationMode@mode 0077                   ?_CANSetMask 0077  
              ??_CANisTxReady 0077                _distance_error 0223               _matematica$3740 01BC  
             _matematica$3741 01C0               _matematica$3742 01C4               _matematica$3743 01C8  
             _matematica$3744 01CC               _matematica$3745 01D0               _matematica$3738 01B4  
             _matematica$3739 01B8     __end_of_CANreceiveMessage 24F0                      sqrt@frac 0190  
                    sqrt@sign 017F                      sqrt@root 018C                   _timerValue2 003E  
      __end_of_configurazione 59E0                 ___fladd@signs 00BD                 _distance_wait 0226  
            ?_can_interpreter 0001                  ___fladd@aexp 00BE                  ___fladd@bexp 00BF  
       __end_of_CANInitialize 4CD6  
