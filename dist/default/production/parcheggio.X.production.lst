

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat May 07 15:48:40 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2685
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    59                           	psect	param0,global,class=BANK0,space=1,delta=1
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    61  0000                     
    62                           	psect	idataBANK0
    63  005FBC                     __pidataBANK0:
    64                           	opt stack 0
    65                           
    66                           ;initializer for _delay_quartz_frequency_value
    67  005FBC  10                 	db	16
    68                           
    69                           	psect	idataBANK1
    70  005FB2                     __pidataBANK1:
    71                           	opt stack 0
    72                           
    73                           ;initializer for _larghezza
    74  005FB2  0000               	dw	0
    75  005FB4  4200               	dw	16896
    76                           
    77                           ;initializer for _spazio_parcheggio
    78  005FB6  0064               	dw	100
    79                           
    80                           ;initializer for _raggio
    81  005FB8  0000               	dw	0
    82  005FBA  4254               	dw	16980
    83                           
    84                           	psect	smallconst
    85  000D00                     __psmallconst:
    86                           	opt stack 0
    87  000D00  00                 	db	0
    88  000D01                     atan@coeff_a:
    89                           	opt stack 0
    90  000D01  3C06               	dw	15366
    91  000D03  4204               	dw	16900
    92  000D05  9F7D               	dw	40829
    93  000D07  426A               	dw	17002
    94  000D09  905C               	dw	36956
    95  000D0B  4201               	dw	16897
    96  000D0D  4D60               	dw	19808
    97  000D0F  40BB               	dw	16571
    98  000D11  EC51               	dw	60497
    99  000D13  3E47               	dw	15943
   100  000D15  8DDE               	dw	36318
   101  000D17  BB1F               	dw	47903
   102  000D19                     __end_ofatan@coeff_a:
   103                           	opt stack 0
   104  000D19                     atan@coeff_b:
   105                           	opt stack 0
   106  000D19  3C06               	dw	15366
   107  000D1B  4204               	dw	16900
   108  000D1D  59C0               	dw	22976
   109  000D1F  428B               	dw	17035
   110  000D21  0474               	dw	1140
   111  000D23  4244               	dw	16964
   112  000D25  9BF9               	dw	39929
   113  000D27  414F               	dw	16719
   114  000D29  0000               	dw	0
   115  000D2B  3F80               	dw	16256
   116  000D2D                     __end_ofatan@coeff_b:
   117                           	opt stack 0
   118  000D2D                     sin@coeff_a:
   119                           	opt stack 0
   120  000D2D  F3EC               	dw	62444
   121  000D2F  484A               	dw	18506
   122  000D31  9535               	dw	38197
   123  000D33  C795               	dw	51093
   124  000D35  C117               	dw	49431
   125  000D37  45DC               	dw	17884
   126  000D39  DBFD               	dw	56317
   127  000D3B  C36D               	dw	50029
   128  000D3D  B372               	dw	45938
   129  000D3F  4033               	dw	16435
   130  000D41                     __end_ofsin@coeff_a:
   131                           	opt stack 0
   132  000D41                     sin@coeff_b:
   133                           	opt stack 0
   134  000D41  342B               	dw	13355
   135  000D43  4801               	dw	18433
   136  000D45  9D7F               	dw	40319
   137  000D47  45B0               	dw	17840
   138  000D49  FFE7               	dw	65511
   139  000D4B  42D9               	dw	17113
   140  000D4D  0000               	dw	0
   141  000D4F  3F80               	dw	16256
   142  000D51                     __end_ofsin@coeff_b:
   143                           	opt stack 0
   144  0000                     _RXB1CON	set	3920
   145  0000                     _RXB1CONbits	set	3920
   146  0000                     _RXB1D0	set	3926
   147  0000                     _RXB1D1	set	3927
   148  0000                     _RXB1D2	set	3928
   149  0000                     _RXB1D3	set	3929
   150  0000                     _RXB1D4	set	3930
   151  0000                     _RXB1D5	set	3931
   152  0000                     _RXB1D6	set	3932
   153  0000                     _RXB1D7	set	3933
   154  0000                     _RXB1DLC	set	3925
   155  0000                     _RXB1DLCbits	set	3925
   156  0000                     _RXB1EIDH	set	3923
   157  0000                     _RXB1EIDL	set	3924
   158  0000                     _RXB1SIDH	set	3921
   159  0000                     _RXB1SIDL	set	3922
   160  0000                     _RXB1SIDLbits	set	3922
   161  0000                     _RXF0EIDH	set	3842
   162  0000                     _RXF0EIDL	set	3843
   163  0000                     _RXF0SIDH	set	3840
   164  0000                     _RXF0SIDL	set	3841
   165  0000                     _RXF0SIDLbits	set	3841
   166  0000                     _RXF1EIDH	set	3846
   167  0000                     _RXF1EIDL	set	3847
   168  0000                     _RXF1SIDH	set	3844
   169  0000                     _RXF1SIDL	set	3845
   170  0000                     _RXF1SIDLbits	set	3845
   171  0000                     _RXF2EIDH	set	3850
   172  0000                     _RXF2EIDL	set	3851
   173  0000                     _RXF2SIDH	set	3848
   174  0000                     _RXF2SIDL	set	3849
   175  0000                     _RXF2SIDLbits	set	3849
   176  0000                     _RXF3EIDH	set	3854
   177  0000                     _RXF3EIDL	set	3855
   178  0000                     _RXF3SIDH	set	3852
   179  0000                     _RXF3SIDL	set	3853
   180  0000                     _RXF3SIDLbits	set	3853
   181  0000                     _RXF4EIDH	set	3858
   182  0000                     _RXF4EIDL	set	3859
   183  0000                     _RXF4SIDH	set	3856
   184  0000                     _RXF4SIDL	set	3857
   185  0000                     _RXF4SIDLbits	set	3857
   186  0000                     _RXF5EIDH	set	3862
   187  0000                     _RXF5EIDL	set	3863
   188  0000                     _RXF5SIDH	set	3860
   189  0000                     _RXF5SIDL	set	3861
   190  0000                     _RXF5SIDLbits	set	3861
   191  0000                     _RXM0EIDH	set	3866
   192  0000                     _RXM0EIDL	set	3867
   193  0000                     _RXM0SIDH	set	3864
   194  0000                     _RXM0SIDL	set	3865
   195  0000                     _RXM0SIDLbits	set	3865
   196  0000                     _RXM1EIDH	set	3870
   197  0000                     _RXM1EIDL	set	3871
   198  0000                     _RXM1SIDH	set	3868
   199  0000                     _RXM1SIDL	set	3869
   200  0000                     _RXM1SIDLbits	set	3869
   201  0000                     _TXB0CONbits	set	3904
   202  0000                     _TXB0D0	set	3910
   203  0000                     _TXB0D1	set	3911
   204  0000                     _TXB0D2	set	3912
   205  0000                     _TXB0D3	set	3913
   206  0000                     _TXB0D4	set	3914
   207  0000                     _TXB0D5	set	3915
   208  0000                     _TXB0D6	set	3916
   209  0000                     _TXB0D7	set	3917
   210  0000                     _TXB0DLC	set	3909
   211  0000                     _TXB0DLCbits	set	3909
   212  0000                     _TXB0EIDH	set	3907
   213  0000                     _TXB0EIDL	set	3908
   214  0000                     _TXB0SIDH	set	3905
   215  0000                     _TXB0SIDL	set	3906
   216  0000                     _TXB0SIDLbits	set	3906
   217  0000                     _TXB1CONbits	set	3888
   218  0000                     _TXB1D0	set	3894
   219  0000                     _TXB1D1	set	3895
   220  0000                     _TXB1D2	set	3896
   221  0000                     _TXB1D3	set	3897
   222  0000                     _TXB1D4	set	3898
   223  0000                     _TXB1D5	set	3899
   224  0000                     _TXB1D6	set	3900
   225  0000                     _TXB1D7	set	3901
   226  0000                     _TXB1DLC	set	3893
   227  0000                     _TXB1DLCbits	set	3893
   228  0000                     _TXB1EIDH	set	3891
   229  0000                     _TXB1EIDL	set	3892
   230  0000                     _TXB1SIDH	set	3889
   231  0000                     _TXB1SIDL	set	3890
   232  0000                     _TXB1SIDLbits	set	3890
   233  0000                     _TXB2CONbits	set	3872
   234  0000                     _TXB2D0	set	3878
   235  0000                     _TXB2D1	set	3879
   236  0000                     _TXB2D2	set	3880
   237  0000                     _TXB2D3	set	3881
   238  0000                     _TXB2D4	set	3882
   239  0000                     _TXB2D5	set	3883
   240  0000                     _TXB2D6	set	3884
   241  0000                     _TXB2D7	set	3885
   242  0000                     _TXB2DLC	set	3877
   243  0000                     _TXB2DLCbits	set	3877
   244  0000                     _TXB2EIDH	set	3875
   245  0000                     _TXB2EIDL	set	3876
   246  0000                     _TXB2SIDH	set	3873
   247  0000                     _TXB2SIDL	set	3874
   248  0000                     _TXB2SIDLbits	set	3874
   249  0000                     _ADCON1	set	4033
   250  0000                     _BRGCON1	set	3952
   251  0000                     _BRGCON2	set	3953
   252  0000                     _BRGCON2bits	set	3953
   253  0000                     _BRGCON3	set	3954
   254  0000                     _BRGCON3bits	set	3954
   255  0000                     _CANCON	set	3951
   256  0000                     _CANCONbits	set	3951
   257  0000                     _CANSTAT	set	3950
   258  0000                     _COMSTATbits	set	3956
   259  0000                     _INTCON2bits	set	4081
   260  0000                     _INTCONbits	set	4082
   261  0000                     _IPR3bits	set	4005
   262  0000                     _LATA	set	3977
   263  0000                     _LATB	set	3978
   264  0000                     _LATBbits	set	3978
   265  0000                     _LATC	set	3979
   266  0000                     _PIE3bits	set	4003
   267  0000                     _PIR3bits	set	4004
   268  0000                     _PORTA	set	3968
   269  0000                     _PORTBbits	set	3969
   270  0000                     _RCONbits	set	4048
   271  0000                     _RXB0CON	set	3936
   272  0000                     _RXB0CONbits	set	3936
   273  0000                     _RXB0D0	set	3942
   274  0000                     _RXB0D1	set	3943
   275  0000                     _RXB0D2	set	3944
   276  0000                     _RXB0D3	set	3945
   277  0000                     _RXB0D4	set	3946
   278  0000                     _RXB0D5	set	3947
   279  0000                     _RXB0D6	set	3948
   280  0000                     _RXB0D7	set	3949
   281  0000                     _RXB0DLC	set	3941
   282  0000                     _RXB0DLCbits	set	3941
   283  0000                     _RXB0EIDH	set	3939
   284  0000                     _RXB0EIDL	set	3940
   285  0000                     _RXB0SIDH	set	3937
   286  0000                     _RXB0SIDL	set	3938
   287  0000                     _RXB0SIDLbits	set	3938
   288  0000                     _RXERRCNT	set	3957
   289  0000                     _T0CON	set	4053
   290  0000                     _T0CONbits	set	4053
   291  0000                     _T3CON	set	4017
   292  0000                     _TMR0H	set	4055
   293  0000                     _TMR0L	set	4054
   294  0000                     _TMR3H	set	4019
   295  0000                     _TMR3L	set	4018
   296  0000                     _TRISA	set	3986
   297  0000                     _TRISB	set	3987
   298  0000                     _TRISBbits	set	3987
   299  0000                     _TRISC	set	3988
   300  0000                     _TXERRCNT	set	3958
   301                           
   302                           ; #config settings
   303  000D51  00                 	db	0	; dummy byte at the end
   304  0000                     
   305                           	psect	cinit
   306  005CF2                     __pcinit:
   307                           	opt stack 0
   308  005CF2                     start_initialization:
   309                           	opt stack 0
   310  005CF2                     __initialization:
   311                           	opt stack 0
   312                           
   313                           ; Clear objects allocated to BANK1 (141 bytes)
   314  005CF2  EE01  F000         	lfsr	0,__pbssBANK1
   315  005CF6  0E8D               	movlw	141
   316  005CF8                     clear_0:
   317  005CF8  6AEE               	clrf	postinc0,c
   318  005CFA  06E8               	decf	wreg,f,c
   319  005CFC  E1FD               	bnz	clear_0
   320                           
   321                           ; Clear objects allocated to BANK0 (4 bytes)
   322  005CFE  0100               	movlb	0
   323  005D00  6BE7               	clrf	(__pbssBANK0+3)& (0+255),b
   324  005D02  6BE6               	clrf	(__pbssBANK0+2)& (0+255),b
   325  005D04  6BE5               	clrf	(__pbssBANK0+1)& (0+255),b
   326  005D06  6BE4               	clrf	__pbssBANK0& (0+255),b
   327                           
   328                           ; Clear objects allocated to BITCOMRAM (2 bytes)
   329  005D08  6A47               	clrf	((__pbitbssCOMRAM/(0+8)+1))& (0+255),c
   330  005D0A  6A46               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
   331                           
   332                           ; Clear objects allocated to COMRAM (34 bytes)
   333  005D0C  EE00  F024         	lfsr	0,__pbssCOMRAM
   334  005D10  0E22               	movlw	34
   335  005D12                     clear_1:
   336  005D12  6AEE               	clrf	postinc0,c
   337  005D14  06E8               	decf	wreg,f,c
   338  005D16  E1FD               	bnz	clear_1
   339                           
   340                           ; Initialize objects allocated to BANK1 (10 bytes)
   341                           ; load TBLPTR registers with __pidataBANK1
   342  005D18  0EB2               	movlw	low __pidataBANK1
   343  005D1A  6EF6               	movwf	tblptrl,c
   344  005D1C  0E5F               	movlw	high __pidataBANK1
   345  005D1E  6EF7               	movwf	tblptrh,c
   346  005D20  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   347  005D22  6EF8               	movwf	tblptru,c
   348  005D24  EE01  F0E2         	lfsr	0,__pdataBANK1
   349  005D28  EE10 F00A          	lfsr	1,10
   350  005D2C                     copy_data0:
   351  005D2C  0009               	tblrd		*+
   352  005D2E  CFF5 FFEE          	movff	tablat,postinc0
   353  005D32  50E5               	movf	postdec1,w,c
   354  005D34  50E1               	movf	fsr1l,w,c
   355  005D36  E1FA               	bnz	copy_data0
   356                           
   357                           ; Initialize objects allocated to BANK0 (1 bytes)
   358                           ; load TBLPTR registers with __pidataBANK0
   359  005D38  0EBC               	movlw	low __pidataBANK0
   360  005D3A  6EF6               	movwf	tblptrl,c
   361  005D3C  0E5F               	movlw	high __pidataBANK0
   362  005D3E  6EF7               	movwf	tblptrh,c
   363  005D40  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   364  005D42  6EF8               	movwf	tblptru,c
   365  005D44  0009               	tblrd		*+	;fetch initializer
   366  005D46  CFF5 F0E8          	movff	tablat,__pdataBANK0
   367  005D4A                     end_of_initialization:
   368                           	opt stack 0
   369  005D4A                     __end_of__initialization:
   370                           	opt stack 0
   371  005D4A  9048               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   372  005D4C  9248               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   373  005D4E  0100               	movlb	0
   374  005D50  EFD4  F02E         	goto	_main	;jump to C main() function
   375                           tblptru	equ	0xFF8
   376                           tblptrh	equ	0xFF7
   377                           tblptrl	equ	0xFF6
   378                           tablat	equ	0xFF5
   379                           postinc0	equ	0xFEE
   380                           wreg	equ	0xFE8
   381                           postdec1	equ	0xFE5
   382                           fsr1l	equ	0xFE1
   383                           
   384                           	psect	bitbssCOMRAM
   385  000230                     __pbitbssCOMRAM:
   386                           	opt stack 0
   387  000230                     _activation:
   388                           	opt stack 0
   389  000230                     	ds	1
   390  000231                     _asd:
   391                           	opt stack 0
   392  000231                     	ds	1
   393  000232                     _dir:
   394                           	opt stack 0
   395  000232                     	ds	1
   396  000233                     _distance_error:
   397                           	opt stack 0
   398  000233                     	ds	1
   399  000234                     _distance_received:
   400                           	opt stack 0
   401  000234                     	ds	1
   402  000235                     _distance_received1:
   403                           	opt stack 0
   404  000235                     	ds	1
   405  000236                     _distance_wait:
   406                           	opt stack 0
   407  000236                     	ds	1
   408  000237                     _first:
   409                           	opt stack 0
   410  000237                     	ds	1
   411  000238                     _old_data_correction:
   412                           	opt stack 0
   413  000238                     	ds	1
   414  000239                     _request_sent:
   415                           	opt stack 0
   416  000239                     	ds	1
   417  00023A                     _request_sent1:
   418                           	opt stack 0
   419  00023A                     	ds	1
   420  00023B                     _start_operation:
   421                           	opt stack 0
   422  00023B                     	ds	1
   423  00023C                     _steering_correction_dir:
   424                           	opt stack 0
   425  00023C                     	ds	1
   426                           tblptru	equ	0xFF8
   427                           tblptrh	equ	0xFF7
   428                           tblptrl	equ	0xFF6
   429                           tablat	equ	0xFF5
   430                           postinc0	equ	0xFEE
   431                           wreg	equ	0xFE8
   432                           postdec1	equ	0xFE5
   433                           fsr1l	equ	0xFE1
   434                           
   435                           	psect	bssCOMRAM
   436  000024                     __pbssCOMRAM:
   437                           	opt stack 0
   438  000024                     _sensor_distance:
   439                           	opt stack 0
   440  000024                     	ds	16
   441  000034                     _clock_counter_reference:
   442                           	opt stack 0
   443  000034                     	ds	2
   444  000036                     _distance_average:
   445                           	opt stack 0
   446  000036                     	ds	2
   447  000038                     _distance_dx:
   448                           	opt stack 0
   449  000038                     	ds	2
   450  00003A                     _distance_sx:
   451                           	opt stack 0
   452  00003A                     	ds	2
   453  00003C                     _left_speed:
   454                           	opt stack 0
   455  00003C                     	ds	2
   456  00003E                     _right_speed:
   457                           	opt stack 0
   458  00003E                     	ds	2
   459  000040                     _timerValue2:
   460                           	opt stack 0
   461  000040                     	ds	2
   462  000042                     _MUX_index:
   463                           	opt stack 0
   464  000042                     	ds	1
   465  000043                     _asus:
   466                           	opt stack 0
   467  000043                     	ds	1
   468  000044                     _gianni:
   469                           	opt stack 0
   470  000044                     	ds	1
   471  000045                     _steering_correction:
   472                           	opt stack 0
   473  000045                     	ds	1
   474                           tblptru	equ	0xFF8
   475                           tblptrh	equ	0xFF7
   476                           tblptrl	equ	0xFF6
   477                           tablat	equ	0xFF5
   478                           postinc0	equ	0xFEE
   479                           wreg	equ	0xFE8
   480                           postdec1	equ	0xFE5
   481                           fsr1l	equ	0xFE1
   482                           
   483                           	psect	bssBANK0
   484  0000E4                     __pbssBANK0:
   485                           	opt stack 0
   486  0000E4                     _alignment_gap:
   487                           	opt stack 0
   488  0000E4                     	ds	4
   489                           tblptru	equ	0xFF8
   490                           tblptrh	equ	0xFF7
   491                           tblptrl	equ	0xFF6
   492                           tablat	equ	0xFF5
   493                           postinc0	equ	0xFEE
   494                           wreg	equ	0xFE8
   495                           postdec1	equ	0xFE5
   496                           fsr1l	equ	0xFE1
   497                           
   498                           	psect	dataBANK0
   499  0000E8                     __pdataBANK0:
   500                           	opt stack 0
   501  0000E8                     _delay_quartz_frequency_value:
   502                           	opt stack 0
   503  0000E8                     	ds	1
   504                           tblptru	equ	0xFF8
   505                           tblptrh	equ	0xFF7
   506                           tblptrl	equ	0xFF6
   507                           tablat	equ	0xFF5
   508                           postinc0	equ	0xFEE
   509                           wreg	equ	0xFE8
   510                           postdec1	equ	0xFE5
   511                           fsr1l	equ	0xFE1
   512                           
   513                           	psect	bssBANK1
   514  000100                     __pbssBANK1:
   515                           	opt stack 0
   516  000100                     _MUX_select:
   517                           	opt stack 0
   518  000100                     	ds	8
   519  000108                     _data_speed_rx:
   520                           	opt stack 0
   521  000108                     	ds	8
   522  000110                     _distance_set:
   523                           	opt stack 0
   524  000110                     	ds	8
   525  000118                     _Pminimo:
   526                           	opt stack 0
   527  000118                     	ds	4
   528  00011C                     _alfa:
   529                           	opt stack 0
   530  00011C                     	ds	4
   531  000120                     _beta:
   532                           	opt stack 0
   533  000120                     	ds	4
   534  000124                     _bordo:
   535                           	opt stack 0
   536  000124                     	ds	4
   537  000128                     _jjj:
   538                           	opt stack 0
   539  000128                     	ds	4
   540  00012C                     _kkk:
   541                           	opt stack 0
   542  00012C                     	ds	4
   543  000130                     _n:
   544                           	opt stack 0
   545  000130                     	ds	4
   546  000134                     _old_alignment_gap:
   547                           	opt stack 0
   548  000134                     	ds	4
   549  000138                     _prima_sterzata:
   550                           	opt stack 0
   551  000138                     	ds	4
   552  00013C                     _x:
   553                           	opt stack 0
   554  00013C                     	ds	4
   555  000140                     _z:
   556                           	opt stack 0
   557  000140                     	ds	4
   558  000144                     _actual_speed:
   559                           	opt stack 0
   560  000144                     	ds	2
   561  000146                     _distance:
   562                           	opt stack 0
   563  000146                     	ds	2
   564  000148                     _errno:
   565                           	opt stack 0
   566  000148                     	ds	2
   567  00014A                     _pulse_time:
   568                           	opt stack 0
   569  00014A                     	ds	2
   570  00014C                     _set_speed:
   571                           	opt stack 0
   572  00014C                     	ds	2
   573  00014E                     _msg:
   574                           	opt stack 0
   575  00014E                     	ds	15
   576  00015D                     _data:
   577                           	opt stack 0
   578  00015D                     	ds	8
   579  000165                     _data_brake:
   580                           	opt stack 0
   581  000165                     	ds	8
   582  00016D                     _data_correction:
   583                           	opt stack 0
   584  00016D                     	ds	8
   585  000175                     _data_speed:
   586                           	opt stack 0
   587  000175                     	ds	8
   588  00017D                     _data_steering:
   589                           	opt stack 0
   590  00017D                     	ds	8
   591  000185                     _data_test:
   592                           	opt stack 0
   593  000185                     	ds	8
   594                           tblptru	equ	0xFF8
   595                           tblptrh	equ	0xFF7
   596                           tblptrl	equ	0xFF6
   597                           tablat	equ	0xFF5
   598                           postinc0	equ	0xFEE
   599                           wreg	equ	0xFE8
   600                           postdec1	equ	0xFE5
   601                           fsr1l	equ	0xFE1
   602                           
   603                           	psect	dataBANK1
   604  0001E2                     __pdataBANK1:
   605                           	opt stack 0
   606  0001E2                     _larghezza:
   607                           	opt stack 0
   608  0001E2                     	ds	4
   609  0001E6                     _spazio_parcheggio:
   610                           	opt stack 0
   611  0001E6                     	ds	2
   612  0001E8                     _raggio:
   613                           	opt stack 0
   614  0001E8                     	ds	4
   615                           tblptru	equ	0xFF8
   616                           tblptrh	equ	0xFF7
   617                           tblptrl	equ	0xFF6
   618                           tablat	equ	0xFF5
   619                           postinc0	equ	0xFEE
   620                           wreg	equ	0xFE8
   621                           postdec1	equ	0xFE5
   622                           fsr1l	equ	0xFE1
   623                           
   624                           	psect	cstackBANK1
   625  00018D                     __pcstackBANK1:
   626                           	opt stack 0
   627  00018D                     ?___flsub:
   628                           	opt stack 0
   629  00018D                     atan@y:
   630                           	opt stack 0
   631  00018D                     ___flsub@b:
   632                           	opt stack 0
   633                           
   634                           ; 4 bytes @ 0x0
   635  00018D                     	ds	4
   636  000191                     atan@x:
   637                           	opt stack 0
   638  000191                     ___flsub@a:
   639                           	opt stack 0
   640                           
   641                           ; 4 bytes @ 0x4
   642  000191                     	ds	4
   643  000195                     ?_sin:
   644                           	opt stack 0
   645  000195                     atan@recip:
   646                           	opt stack 0
   647  000195                     sin@f:
   648                           	opt stack 0
   649                           
   650                           ; 4 bytes @ 0x8
   651  000195                     	ds	1
   652  000196                     atan@val_squared:
   653                           	opt stack 0
   654                           
   655                           ; 4 bytes @ 0x9
   656  000196                     	ds	3
   657  000199                     sin@y:
   658                           	opt stack 0
   659                           
   660                           ; 4 bytes @ 0xC
   661  000199                     	ds	1
   662  00019A                     atan@val:
   663                           	opt stack 0
   664                           
   665                           ; 4 bytes @ 0xD
   666  00019A                     	ds	3
   667  00019D                     _sin$3752:
   668                           	opt stack 0
   669                           
   670                           ; 4 bytes @ 0x10
   671  00019D                     	ds	1
   672  00019E                     asin@sgn:
   673                           	opt stack 0
   674                           
   675                           ; 4 bytes @ 0x11
   676  00019E                     	ds	3
   677  0001A1                     sin@x2:
   678                           	opt stack 0
   679                           
   680                           ; 4 bytes @ 0x14
   681  0001A1                     	ds	1
   682  0001A2                     _asin$3750:
   683                           	opt stack 0
   684                           
   685                           ; 4 bytes @ 0x15
   686  0001A2                     	ds	3
   687  0001A5                     sin@sgn:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x18
   691  0001A5                     	ds	1
   692  0001A6                     _asin$3749:
   693                           	opt stack 0
   694                           
   695                           ; 4 bytes @ 0x19
   696  0001A6                     	ds	4
   697  0001AA                     asin@y:
   698                           	opt stack 0
   699                           
   700                           ; 4 bytes @ 0x1D
   701  0001AA                     	ds	4
   702  0001AE                     _asin$3748:
   703                           	opt stack 0
   704                           
   705                           ; 4 bytes @ 0x21
   706  0001AE                     	ds	4
   707  0001B2                     ??_park_search:
   708  0001B2                     ?_cos:
   709                           	opt stack 0
   710  0001B2                     cos@f:
   711                           	opt stack 0
   712                           
   713                           ; 4 bytes @ 0x25
   714  0001B2                     	ds	4
   715  0001B6                     _cos$3751:
   716                           	opt stack 0
   717                           
   718                           ; 4 bytes @ 0x29
   719  0001B6                     	ds	4
   720  0001BA                     _matematica$3741:
   721                           	opt stack 0
   722                           
   723                           ; 4 bytes @ 0x2D
   724  0001BA                     	ds	4
   725  0001BE                     _matematica$3742:
   726                           	opt stack 0
   727                           
   728                           ; 4 bytes @ 0x31
   729  0001BE                     	ds	4
   730  0001C2                     _matematica$3743:
   731                           	opt stack 0
   732                           
   733                           ; 4 bytes @ 0x35
   734  0001C2                     	ds	4
   735  0001C6                     _matematica$3744:
   736                           	opt stack 0
   737                           
   738                           ; 4 bytes @ 0x39
   739  0001C6                     	ds	4
   740  0001CA                     _matematica$3746:
   741                           	opt stack 0
   742                           
   743                           ; 4 bytes @ 0x3D
   744  0001CA                     	ds	4
   745  0001CE                     _matematica$3747:
   746                           	opt stack 0
   747                           
   748                           ; 4 bytes @ 0x41
   749  0001CE                     	ds	4
   750  0001D2                     _matematica$3745:
   751                           	opt stack 0
   752                           
   753                           ; 4 bytes @ 0x45
   754  0001D2                     	ds	4
   755  0001D6                     ??_park_routine:
   756                           
   757                           ; 0 bytes @ 0x49
   758  0001D6                     	ds	4
   759  0001DA                     _park_routine$3739:
   760                           	opt stack 0
   761                           
   762                           ; 4 bytes @ 0x4D
   763  0001DA                     	ds	4
   764  0001DE                     _park_routine$3740:
   765                           	opt stack 0
   766                           
   767                           ; 4 bytes @ 0x51
   768  0001DE                     	ds	4
   769                           tblptru	equ	0xFF8
   770                           tblptrh	equ	0xFF7
   771                           tblptrl	equ	0xFF6
   772                           tablat	equ	0xFF5
   773                           postinc0	equ	0xFEE
   774                           wreg	equ	0xFE8
   775                           postdec1	equ	0xFE5
   776                           fsr1l	equ	0xFE1
   777                           
   778                           	psect	cstackBANK0
   779  000060                     __pcstackBANK0:
   780                           	opt stack 0
   781  000060                     ?___lwdiv:
   782                           	opt stack 0
   783  000060                     ___lwdiv@dividend:
   784                           	opt stack 0
   785                           
   786                           ; 2 bytes @ 0x0
   787  000060                     	ds	2
   788  000062                     ___lwdiv@divisor:
   789                           	opt stack 0
   790                           
   791                           ; 2 bytes @ 0x2
   792  000062                     	ds	2
   793  000064                     ___lwdiv@counter:
   794                           	opt stack 0
   795                           
   796                           ; 1 bytes @ 0x4
   797  000064                     	ds	1
   798  000065                     ___lwdiv@quotient:
   799                           	opt stack 0
   800                           
   801                           ; 2 bytes @ 0x5
   802  000065                     	ds	2
   803  000067                     ??_ISR_Alta:
   804                           
   805                           ; 0 bytes @ 0x7
   806  000067                     	ds	16
   807  000077                     ??_can_interpreter:
   808  000077                     ?_abs:
   809                           	opt stack 0
   810  000077                     ?___wmul:
   811                           	opt stack 0
   812  000077                     ?___fldiv:
   813                           	opt stack 0
   814  000077                     CANOperationMode@mode:
   815                           	opt stack 0
   816  000077                     _CANisTxReady$2845:
   817                           	opt stack 0
   818  000077                     ___wmul@multiplier:
   819                           	opt stack 0
   820  000077                     abs@a:
   821                           	opt stack 0
   822  000077                     CANsendMessage@identifier:
   823                           	opt stack 0
   824  000077                     CANSetMask@mask:
   825                           	opt stack 0
   826  000077                     CANSetFilter@filter:
   827                           	opt stack 0
   828  000077                     ___fldiv@b:
   829                           	opt stack 0
   830  000077                     frexp@value:
   831                           	opt stack 0
   832                           
   833                           ; 4 bytes @ 0x17
   834  000077                     	ds	2
   835  000079                     ??_abs:
   836  000079                     ___wmul@multiplicand:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x19
   840  000079                     	ds	2
   841  00007B                     CANSetMask@type:
   842                           	opt stack 0
   843  00007B                     CANSetFilter@type:
   844                           	opt stack 0
   845  00007B                     CANsendMessage@data:
   846                           	opt stack 0
   847  00007B                     ___wmul@product:
   848                           	opt stack 0
   849  00007B                     frexp@eptr:
   850                           	opt stack 0
   851  00007B                     ___fldiv@a:
   852                           	opt stack 0
   853                           
   854                           ; 4 bytes @ 0x1B
   855  00007B                     	ds	1
   856  00007C                     ??_CANSetMask:
   857  00007C                     ??_CANSetFilter:
   858                           
   859                           ; 0 bytes @ 0x1C
   860  00007C                     	ds	1
   861  00007D                     ??_frexp:
   862  00007D                     CANsendMessage@dataLength:
   863                           	opt stack 0
   864  00007D                     delay_ms@value_ms:
   865                           	opt stack 0
   866                           
   867                           ; 2 bytes @ 0x1D
   868  00007D                     	ds	1
   869  00007E                     CANsendMessage@flags:
   870                           	opt stack 0
   871                           
   872                           ; 1 bytes @ 0x1E
   873  00007E                     	ds	1
   874  00007F                     ??___fldiv:
   875  00007F                     ??_CANsendMessage:
   876  00007F                     delay_s@value_s:
   877                           	opt stack 0
   878                           
   879                           ; 1 bytes @ 0x1F
   880  00007F                     	ds	1
   881  000080                     CANSetMask@numBuffer:
   882                           	opt stack 0
   883  000080                     CANSetFilter@numBuffer:
   884                           	opt stack 0
   885  000080                     delay_s@repeat_loop:
   886                           	opt stack 0
   887                           
   888                           ; 1 bytes @ 0x20
   889  000080                     	ds	1
   890  000081                     CANSetMask@tamp:
   891                           	opt stack 0
   892  000081                     CANSetFilter@tamp:
   893                           	opt stack 0
   894                           
   895                           ; 4 bytes @ 0x21
   896  000081                     	ds	2
   897  000083                     ___fldiv@sign:
   898                           	opt stack 0
   899  000083                     CANsendMessage@tamp:
   900                           	opt stack 0
   901                           
   902                           ; 4 bytes @ 0x23
   903  000083                     	ds	1
   904  000084                     ___fldiv@rem:
   905                           	opt stack 0
   906                           
   907                           ; 4 bytes @ 0x24
   908  000084                     	ds	1
   909  000085                     CANInitialize@phaseSeg1:
   910                           	opt stack 0
   911                           
   912                           ; 1 bytes @ 0x25
   913  000085                     	ds	1
   914  000086                     CANInitialize@phaseSeg2:
   915                           	opt stack 0
   916                           
   917                           ; 1 bytes @ 0x26
   918  000086                     	ds	1
   919  000087                     can_send@data_correction1:
   920                           	opt stack 0
   921  000087                     CANInitialize@SJW:
   922                           	opt stack 0
   923                           
   924                           ; 1 bytes @ 0x27
   925  000087                     	ds	1
   926  000088                     CANInitialize@BRP:
   927                           	opt stack 0
   928  000088                     ___fldiv@new_exp:
   929                           	opt stack 0
   930                           
   931                           ; 2 bytes @ 0x28
   932  000088                     	ds	1
   933  000089                     CANInitialize@flags:
   934                           	opt stack 0
   935                           
   936                           ; 1 bytes @ 0x29
   937  000089                     	ds	1
   938  00008A                     ??_CANInitialize:
   939  00008A                     ___fldiv@grs:
   940                           	opt stack 0
   941                           
   942                           ; 4 bytes @ 0x2A
   943  00008A                     	ds	4
   944  00008E                     CANInitialize@propSeg:
   945                           	opt stack 0
   946  00008E                     ___fldiv@bexp:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x2E
   950  00008E                     	ds	1
   951  00008F                     CANInitialize@FilterConfig1:
   952                           	opt stack 0
   953  00008F                     ___fldiv@aexp:
   954                           	opt stack 0
   955                           
   956                           ; 1 bytes @ 0x2F
   957  00008F                     	ds	1
   958  000090                     ?___flmul:
   959                           	opt stack 0
   960  000090                     CANInitialize@FilterConfig2:
   961                           	opt stack 0
   962  000090                     ___flmul@b:
   963                           	opt stack 0
   964                           
   965                           ; 4 bytes @ 0x30
   966  000090                     	ds	1
   967  000091                     
   968                           ; 0 bytes @ 0x31
   969  000091                     	ds	3
   970  000094                     ___flmul@a:
   971                           	opt stack 0
   972                           
   973                           ; 4 bytes @ 0x34
   974  000094                     	ds	4
   975  000098                     ??___flmul:
   976                           
   977                           ; 0 bytes @ 0x38
   978  000098                     	ds	4
   979  00009C                     ___flmul@sign:
   980                           	opt stack 0
   981                           
   982                           ; 1 bytes @ 0x3C
   983  00009C                     	ds	1
   984  00009D                     ___flmul@aexp:
   985                           	opt stack 0
   986                           
   987                           ; 1 bytes @ 0x3D
   988  00009D                     	ds	1
   989  00009E                     ___flmul@grs:
   990                           	opt stack 0
   991                           
   992                           ; 4 bytes @ 0x3E
   993  00009E                     	ds	4
   994  0000A2                     ___flmul@bexp:
   995                           	opt stack 0
   996                           
   997                           ; 1 bytes @ 0x42
   998  0000A2                     	ds	1
   999  0000A3                     ___flmul@prod:
  1000                           	opt stack 0
  1001                           
  1002                           ; 4 bytes @ 0x43
  1003  0000A3                     	ds	4
  1004  0000A7                     ___flmul@temp:
  1005                           	opt stack 0
  1006                           
  1007                           ; 2 bytes @ 0x47
  1008  0000A7                     	ds	2
  1009  0000A9                     ?___fladd:
  1010                           	opt stack 0
  1011  0000A9                     ___fladd@b:
  1012                           	opt stack 0
  1013                           
  1014                           ; 4 bytes @ 0x49
  1015  0000A9                     	ds	4
  1016  0000AD                     ___fladd@a:
  1017                           	opt stack 0
  1018                           
  1019                           ; 4 bytes @ 0x4D
  1020  0000AD                     	ds	4
  1021  0000B1                     ??___fladd:
  1022                           
  1023                           ; 0 bytes @ 0x51
  1024  0000B1                     	ds	8
  1025  0000B9                     ___fladd@signs:
  1026                           	opt stack 0
  1027                           
  1028                           ; 1 bytes @ 0x59
  1029  0000B9                     	ds	1
  1030  0000BA                     ___fladd@aexp:
  1031                           	opt stack 0
  1032                           
  1033                           ; 1 bytes @ 0x5A
  1034  0000BA                     	ds	1
  1035  0000BB                     ___fladd@bexp:
  1036                           	opt stack 0
  1037                           
  1038                           ; 1 bytes @ 0x5B
  1039  0000BB                     	ds	1
  1040  0000BC                     ___fladd@grs:
  1041                           	opt stack 0
  1042                           
  1043                           ; 1 bytes @ 0x5C
  1044  0000BC                     	ds	1
  1045  0000BD                     ?_eval_poly:
  1046                           	opt stack 0
  1047  0000BD                     ?___flneg:
  1048                           	opt stack 0
  1049  0000BD                     eval_poly@x:
  1050                           	opt stack 0
  1051  0000BD                     ___flneg@f1:
  1052                           	opt stack 0
  1053                           
  1054                           ; 4 bytes @ 0x5D
  1055  0000BD                     	ds	4
  1056  0000C1                     ?_sqrt:
  1057                           	opt stack 0
  1058  0000C1                     ?_fabs:
  1059                           	opt stack 0
  1060  0000C1                     ?___fltol:
  1061                           	opt stack 0
  1062  0000C1                     eval_poly@d:
  1063                           	opt stack 0
  1064  0000C1                     fabs@d:
  1065                           	opt stack 0
  1066  0000C1                     ___fltol@f1:
  1067                           	opt stack 0
  1068  0000C1                     sqrt@a:
  1069                           	opt stack 0
  1070                           
  1071                           ; 4 bytes @ 0x61
  1072  0000C1                     	ds	2
  1073  0000C3                     eval_poly@n:
  1074                           	opt stack 0
  1075                           
  1076                           ; 2 bytes @ 0x63
  1077  0000C3                     	ds	2
  1078  0000C5                     ??_sqrt:
  1079  0000C5                     ??_eval_poly:
  1080  0000C5                     ??___fltol:
  1081  0000C5                     ___flge@ff1:
  1082                           	opt stack 0
  1083                           
  1084                           ; 4 bytes @ 0x65
  1085  0000C5                     	ds	4
  1086  0000C9                     ___fltol@sign1:
  1087                           	opt stack 0
  1088  0000C9                     sqrt@sign:
  1089                           	opt stack 0
  1090  0000C9                     eval_poly@res:
  1091                           	opt stack 0
  1092  0000C9                     ___flge@ff2:
  1093                           	opt stack 0
  1094                           
  1095                           ; 4 bytes @ 0x69
  1096  0000C9                     	ds	1
  1097  0000CA                     ___fltol@exp1:
  1098                           	opt stack 0
  1099  0000CA                     sqrt@i:
  1100                           	opt stack 0
  1101                           
  1102                           ; 1 bytes @ 0x6A
  1103  0000CA                     	ds	1
  1104  0000CB                     ?___xxtofl:
  1105                           	opt stack 0
  1106  0000CB                     sqrt@tfrac:
  1107                           	opt stack 0
  1108  0000CB                     ___xxtofl@val:
  1109                           	opt stack 0
  1110                           
  1111                           ; 4 bytes @ 0x6B
  1112  0000CB                     	ds	2
  1113  0000CD                     ??___flge:
  1114                           
  1115                           ; 0 bytes @ 0x6D
  1116  0000CD                     	ds	2
  1117  0000CF                     ??___xxtofl:
  1118  0000CF                     sqrt@p:
  1119                           	opt stack 0
  1120                           
  1121                           ; 1 bytes @ 0x6F
  1122  0000CF                     	ds	1
  1123  0000D0                     sqrt@grs:
  1124                           	opt stack 0
  1125                           
  1126                           ; 4 bytes @ 0x70
  1127  0000D0                     	ds	1
  1128  0000D1                     ?_atan:
  1129                           	opt stack 0
  1130  0000D1                     atan@f:
  1131                           	opt stack 0
  1132                           
  1133                           ; 4 bytes @ 0x71
  1134  0000D1                     	ds	2
  1135  0000D3                     ___xxtofl@sign:
  1136                           	opt stack 0
  1137                           
  1138                           ; 1 bytes @ 0x73
  1139  0000D3                     	ds	1
  1140  0000D4                     ___xxtofl@exp:
  1141                           	opt stack 0
  1142  0000D4                     sqrt@exp:
  1143                           	opt stack 0
  1144                           
  1145                           ; 2 bytes @ 0x74
  1146  0000D4                     	ds	1
  1147  0000D5                     ___xxtofl@arg:
  1148                           	opt stack 0
  1149                           
  1150                           ; 4 bytes @ 0x75
  1151  0000D5                     	ds	1
  1152  0000D6                     sqrt@root:
  1153                           	opt stack 0
  1154                           
  1155                           ; 4 bytes @ 0x76
  1156  0000D6                     	ds	3
  1157  0000D9                     ?_floor:
  1158                           	opt stack 0
  1159  0000D9                     floor@x:
  1160                           	opt stack 0
  1161                           
  1162                           ; 4 bytes @ 0x79
  1163  0000D9                     	ds	1
  1164  0000DA                     sqrt@frac:
  1165                           	opt stack 0
  1166                           
  1167                           ; 4 bytes @ 0x7A
  1168  0000DA                     	ds	3
  1169  0000DD                     floor@i:
  1170                           	opt stack 0
  1171                           
  1172                           ; 4 bytes @ 0x7D
  1173  0000DD                     	ds	1
  1174  0000DE                     ?_asin:
  1175                           	opt stack 0
  1176  0000DE                     asin@x:
  1177                           	opt stack 0
  1178                           
  1179                           ; 4 bytes @ 0x7E
  1180  0000DE                     	ds	3
  1181  0000E1                     floor@expon:
  1182                           	opt stack 0
  1183                           
  1184                           ; 2 bytes @ 0x81
  1185  0000E1                     	ds	1
  1186  0000E2                     ??_parallelo:
  1187  0000E2                     
  1188                           ; 0 bytes @ 0x82
  1189  0000E2                     	ds	1
  1190  0000E3                     
  1191                           ; 0 bytes @ 0x83
  1192  0000E3                     	ds	1
  1193  0000E4                     tblptru	equ	0xFF8
  1194                           tblptrh	equ	0xFF7
  1195                           tblptrl	equ	0xFF6
  1196                           tablat	equ	0xFF5
  1197                           postinc0	equ	0xFEE
  1198                           wreg	equ	0xFE8
  1199                           postdec1	equ	0xFE5
  1200                           fsr1l	equ	0xFE1
  1201                           
  1202                           ; 0 bytes @ 0x84
  1203                           
  1204                           	psect	cstackCOMRAM
  1205  000001                     __pcstackCOMRAM:
  1206                           	opt stack 0
  1207  000001                     CANreceiveMessage@msg:
  1208                           	opt stack 0
  1209                           
  1210                           ; 2 bytes @ 0x0
  1211  000001                     	ds	2
  1212  000003                     ??_CANreceiveMessage:
  1213                           
  1214                           ; 0 bytes @ 0x2
  1215  000003                     	ds	8
  1216  00000B                     CANreceiveMessage@error:
  1217                           	opt stack 0
  1218                           
  1219                           ; 1 bytes @ 0xA
  1220  00000B                     	ds	1
  1221  00000C                     CANreceiveMessage@tamp:
  1222                           	opt stack 0
  1223                           
  1224                           ; 1 bytes @ 0xB
  1225  00000C                     	ds	1
  1226  00000D                     ??_ISR_Bassa:
  1227                           
  1228                           ; 0 bytes @ 0xC
  1229  00000D                     	ds	21
  1230  000022                     ISR_Bassa@gigi:
  1231                           	opt stack 0
  1232                           
  1233                           ; 1 bytes @ 0x21
  1234  000022                     	ds	1
  1235  000023                     ISR_Bassa@i:
  1236                           	opt stack 0
  1237                           
  1238                           ; 1 bytes @ 0x22
  1239  000023                     	ds	1
  1240                           tblptru	equ	0xFF8
  1241                           tblptrh	equ	0xFF7
  1242                           tblptrl	equ	0xFF6
  1243                           tablat	equ	0xFF5
  1244                           postinc0	equ	0xFEE
  1245                           wreg	equ	0xFE8
  1246                           postdec1	equ	0xFE5
  1247                           fsr1l	equ	0xFE1
  1248                           
  1249 ;;
  1250 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1251 ;;
  1252 ;; *************** function _main *****************
  1253 ;; Defined at:
  1254 ;;		line 188 in file "parcheggio.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;		None
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;		None
  1259 ;; Return value:  Size  Location     Type
  1260 ;;		None               void
  1261 ;; Registers used:
  1262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1272 ;;Total ram usage:        0 bytes
  1273 ;; Hardware stack levels required when called:   10
  1274 ;; This function calls:
  1275 ;;		_can_interpreter
  1276 ;;		_configurazione
  1277 ;;		_park_routine
  1278 ;;		_park_search
  1279 ;; This function is called by:
  1280 ;;		Startup code after reset
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text0
  1285  005DA8                     __ptext0:
  1286                           	opt stack 0
  1287  005DA8                     _main:
  1288                           	opt stack 21
  1289                           
  1290                           ;parcheggio.c: 189: MUX_select[0] = 0b00000000;
  1291                           
  1292                           ; BSR set to: 15
  1293                           ;incstack = 0
  1294  005DA8  0E00               	movlw	0
  1295  005DAA  0101               	movlb	1	; () banked
  1296  005DAC  6F00               	movwf	_MUX_select& (0+255),b
  1297                           
  1298                           ;parcheggio.c: 190: MUX_select[1] = 0b00000001;
  1299  005DAE  0E01               	movlw	1
  1300  005DB0  0101               	movlb	1	; () banked
  1301  005DB2  6F01               	movwf	(_MUX_select+1)& (0+255),b
  1302                           
  1303                           ;parcheggio.c: 191: MUX_select[2] = 0b00000010;
  1304  005DB4  0E02               	movlw	2
  1305  005DB6  0101               	movlb	1	; () banked
  1306  005DB8  6F02               	movwf	(_MUX_select+2)& (0+255),b
  1307                           
  1308                           ;parcheggio.c: 192: MUX_select[3] = 0b00000011;
  1309  005DBA  0E03               	movlw	3
  1310  005DBC  0101               	movlb	1	; () banked
  1311  005DBE  6F03               	movwf	(_MUX_select+3)& (0+255),b
  1312                           
  1313                           ;parcheggio.c: 193: MUX_select[4] = 0b00000100;
  1314  005DC0  0E04               	movlw	4
  1315  005DC2  0101               	movlb	1	; () banked
  1316  005DC4  6F04               	movwf	(_MUX_select+4)& (0+255),b
  1317                           
  1318                           ;parcheggio.c: 194: MUX_select[5] = 0b00000101;
  1319  005DC6  0E05               	movlw	5
  1320  005DC8  0101               	movlb	1	; () banked
  1321  005DCA  6F05               	movwf	(_MUX_select+5)& (0+255),b
  1322                           
  1323                           ;parcheggio.c: 195: MUX_select[6] = 0b00000110;
  1324  005DCC  0E06               	movlw	6
  1325  005DCE  0101               	movlb	1	; () banked
  1326  005DD0  6F06               	movwf	(_MUX_select+6)& (0+255),b
  1327                           
  1328                           ;parcheggio.c: 196: MUX_select[7] = 0b00000111;
  1329  005DD2  0E07               	movlw	7
  1330  005DD4  0101               	movlb	1	; () banked
  1331  005DD6  6F07               	movwf	(_MUX_select+7)& (0+255),b
  1332                           
  1333                           ; BSR set to: 1
  1334                           ;parcheggio.c: 197: configurazione();
  1335  005DD8  EC43  F02E         	call	_configurazione	;wreg free
  1336                           
  1337                           ;parcheggio.c: 198: PORTBbits.RB4 = 0;
  1338  005DDC  9881               	bcf	3969,4,c	;volatile
  1339                           
  1340                           ;parcheggio.c: 199: PORTBbits.RB5 = 0;
  1341  005DDE  9A81               	bcf	3969,5,c	;volatile
  1342                           
  1343                           ;parcheggio.c: 200: PORTBbits.RB6 = 0;
  1344  005DE0  9C81               	bcf	3969,6,c	;volatile
  1345                           
  1346                           ;parcheggio.c: 201: request_sent = 0;
  1347  005DE2  9247               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1348                           
  1349                           ;parcheggio.c: 202: start_operation = 0;
  1350  005DE4  9647               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1351  005DE6                     l715:
  1352  005DE6  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1353  005DE8  D7FE               	goto	l715
  1354                           
  1355                           ;parcheggio.c: 219: park_search();
  1356  005DEA  ECF8  F028         	call	_park_search	;wreg free
  1357                           
  1358                           ;parcheggio.c: 220: can_interpreter();
  1359  005DEE  ECAA  F02E         	call	_can_interpreter	;wreg free
  1360                           
  1361                           ;parcheggio.c: 221: park_routine();
  1362  005DF2  ECE4  F019         	call	_park_routine	;wreg free
  1363  005DF6  D7F7               	goto	l715
  1364  005DF8                     __end_of_main:
  1365                           	opt stack 0
  1366                           tblptru	equ	0xFF8
  1367                           tblptrh	equ	0xFF7
  1368                           tblptrl	equ	0xFF6
  1369                           tablat	equ	0xFF5
  1370                           postinc0	equ	0xFEE
  1371                           wreg	equ	0xFE8
  1372                           postdec1	equ	0xFE5
  1373                           fsr1l	equ	0xFE1
  1374                           
  1375 ;; *************** function _park_search *****************
  1376 ;; Defined at:
  1377 ;;		line 225 in file "parcheggio.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;		None               void
  1384 ;; Registers used:
  1385 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1393 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1394 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  1395 ;;Total ram usage:        2 bytes
  1396 ;; Hardware stack levels used:    1
  1397 ;; Hardware stack levels required when called:    9
  1398 ;; This function calls:
  1399 ;;		_CANisTxReady
  1400 ;;		_CANsendMessage
  1401 ;;		___xxtofl
  1402 ;;		_abs
  1403 ;;		_parallelo
  1404 ;; This function is called by:
  1405 ;;		_main
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text1
  1410  0051F0                     __ptext1:
  1411                           	opt stack 0
  1412  0051F0                     _park_search:
  1413                           	opt stack 21
  1414                           
  1415                           ;parcheggio.c: 226: while ((activation == 1) && (PORTBbits.RB5 == 0)) {
  1416                           
  1417                           ;incstack = 0
  1418  0051F0  D0D5               	goto	l723
  1419  0051F2                     l7401:
  1420                           
  1421                           ;parcheggio.c: 227: parallelo();
  1422  0051F2  ECBF  F024         	call	_parallelo	;wreg free
  1423                           
  1424                           ;parcheggio.c: 228: if (sensor_distance[0] > 50) {
  1425  0051F6  5025               	movf	_sensor_distance+1,w,c	;volatile
  1426  0051F8  E104               	bnz	u9510
  1427  0051FA  0E33               	movlw	51
  1428  0051FC  5C24               	subwf	_sensor_distance,w,c	;volatile
  1429  0051FE  A0D8               	btfss	status,0,c
  1430  005200  D02A               	goto	l725
  1431  005202                     u9510:
  1432                           
  1433                           ;parcheggio.c: 229: if (request_sent == 0) {
  1434  005202  B247               	btfsc	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1435  005204  D057               	goto	l7421
  1436  005206                     l7409:
  1437  005206  ECBC  F02F         	call	_CANisTxReady	;wreg free
  1438  00520A  0900               	iorlw	0
  1439  00520C  B4D8               	btfsc	status,2,c
  1440  00520E  D7FB               	goto	l7409
  1441                           
  1442                           ;parcheggio.c: 231: CANsendMessage(0b00000001000, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1443  005210  0E08               	movlw	8
  1444  005212  0100               	movlb	0	; () banked
  1445  005214  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1446  005216  0E00               	movlw	0
  1447  005218  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1448  00521A  0E00               	movlw	0
  1449  00521C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1450  00521E  0E00               	movlw	0
  1451  005220  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1452  005222  0E5D               	movlw	low _data
  1453  005224  0100               	movlb	0	; () banked
  1454  005226  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1455  005228  0E01               	movlw	high _data
  1456  00522A  0100               	movlb	0	; () banked
  1457  00522C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1458  00522E  0E08               	movlw	8
  1459  005230  0100               	movlb	0	; () banked
  1460  005232  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1461  005234  0EFC               	movlw	252
  1462  005236  0100               	movlb	0	; () banked
  1463  005238  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1464  00523A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1465                           
  1466                           ;parcheggio.c: 232: request_sent = 1;
  1467  00523E  8247               	bsf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1468                           
  1469                           ;parcheggio.c: 233: alignment_gap = 0;
  1470  005240  0E00               	movlw	0
  1471  005242  0100               	movlb	0	; () banked
  1472  005244  6FE4               	movwf	_alignment_gap& (0+255),b
  1473  005246  0E00               	movlw	0
  1474  005248  6FE5               	movwf	(_alignment_gap+1)& (0+255),b
  1475  00524A  0E00               	movlw	0
  1476  00524C  6FE6               	movwf	(_alignment_gap+2)& (0+255),b
  1477  00524E  0E00               	movlw	0
  1478  005250  6FE7               	movwf	(_alignment_gap+3)& (0+255),b
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;parcheggio.c: 234: LATBbits.LATB4 = 1;
  1482  005252  888A               	bsf	3978,4,c	;volatile
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;parcheggio.c: 235: }
  1486                           ;parcheggio.c: 236: } else {
  1487  005254  D02F               	goto	l7421
  1488  005256                     l725:
  1489                           
  1490                           ;parcheggio.c: 237: LATBbits.LATB4 = 0;
  1491  005256  988A               	bcf	3978,4,c	;volatile
  1492                           
  1493                           ;parcheggio.c: 238: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  1494  005258  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  1495  00525C  CFDE F1B2          	movff	postinc2,??_park_search
  1496  005260  CFDD F1B3          	movff	postdec2,??_park_search+1
  1497  005264  0101               	movlb	1	; () banked
  1498  005266  1FB2               	comf	??_park_search& (0+255),f,b
  1499  005268  1FB3               	comf	(??_park_search+1)& (0+255),f,b
  1500  00526A  4BB2               	infsnz	??_park_search& (0+255),f,b
  1501  00526C  2BB3               	incf	(??_park_search+1)& (0+255),f,b
  1502  00526E  5024               	movf	_sensor_distance,w,c	;volatile
  1503  005270  0101               	movlb	1	; () banked
  1504  005272  25B2               	addwf	??_park_search& (0+255),w,b
  1505  005274  0100               	movlb	0	; () banked
  1506  005276  6F77               	movwf	abs@a& (0+255),b
  1507  005278  5025               	movf	_sensor_distance+1,w,c	;volatile
  1508  00527A  0101               	movlb	1	; () banked
  1509  00527C  21B3               	addwfc	(??_park_search+1)& (0+255),w,b
  1510  00527E  0100               	movlb	0	; () banked
  1511  005280  6F78               	movwf	(abs@a+1)& (0+255),b
  1512  005282  EC90  F02F         	call	_abs	;wreg free
  1513  005286  0100               	movlb	0	; () banked
  1514  005288  C077  F0CB         	movff	?_abs,___xxtofl@val
  1515  00528C  0100               	movlb	0	; () banked
  1516  00528E  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  1517  005292  0100               	movlb	0	; () banked
  1518  005294  0E00               	movlw	0
  1519  005296  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  1520  005298  0EFF               	movlw	-1
  1521  00529A  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  1522  00529C  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  1523  00529E  0E01               	movlw	1
  1524  0052A0  EC2E  F027         	call	___xxtofl
  1525  0052A4  C0CB  F0E4         	movff	?___xxtofl,_alignment_gap
  1526  0052A8  C0CC  F0E5         	movff	?___xxtofl+1,_alignment_gap+1
  1527  0052AC  C0CD  F0E6         	movff	?___xxtofl+2,_alignment_gap+2
  1528  0052B0  C0CE  F0E7         	movff	?___xxtofl+3,_alignment_gap+3
  1529  0052B4                     l7421:
  1530                           
  1531                           ;parcheggio.c: 239: }
  1532                           ;parcheggio.c: 240: if ((sensor_distance[0] < 50) && (request_sent == 1)) {
  1533  0052B4  5025               	movf	_sensor_distance+1,w,c	;volatile
  1534  0052B6  E122               	bnz	l7431
  1535  0052B8  0E32               	movlw	50
  1536  0052BA  5C24               	subwf	_sensor_distance,w,c	;volatile
  1537  0052BC  A0D8               	btfss	status,0,c
  1538  0052BE  A247               	btfss	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1539  0052C0  D01D               	goto	l7431
  1540                           
  1541                           ;parcheggio.c: 241: request_sent = 0;
  1542  0052C2  9247               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
  1543  0052C4                     l7427:
  1544  0052C4  ECBC  F02F         	call	_CANisTxReady	;wreg free
  1545  0052C8  0900               	iorlw	0
  1546  0052CA  B4D8               	btfsc	status,2,c
  1547  0052CC  D7FB               	goto	l7427
  1548                           
  1549                           ;parcheggio.c: 243: CANsendMessage(0b00000000111, data, 8, CAN_CONFIG_STD_MSG & CAN_REMO
      +                          TE_TX_FRAME & CAN_TX_PRIORITY_0);
  1550  0052CE  0E07               	movlw	7
  1551  0052D0  0100               	movlb	0	; () banked
  1552  0052D2  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1553  0052D4  0E00               	movlw	0
  1554  0052D6  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1555  0052D8  0E00               	movlw	0
  1556  0052DA  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1557  0052DC  0E00               	movlw	0
  1558  0052DE  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1559  0052E0  0E5D               	movlw	low _data
  1560  0052E2  0100               	movlb	0	; () banked
  1561  0052E4  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1562  0052E6  0E01               	movlw	high _data
  1563  0052E8  0100               	movlb	0	; () banked
  1564  0052EA  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1565  0052EC  0E08               	movlw	8
  1566  0052EE  0100               	movlb	0	; () banked
  1567  0052F0  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1568  0052F2  0EFC               	movlw	252
  1569  0052F4  0100               	movlb	0	; () banked
  1570  0052F6  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1571  0052F8  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1572  0052FC                     l7431:
  1573                           
  1574                           ;parcheggio.c: 244: }
  1575                           ;parcheggio.c: 245: if (distance_received == 1) {
  1576  0052FC  A846               	btfss	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1577  0052FE  D04E               	goto	l723
  1578                           
  1579                           ;parcheggio.c: 246: if (distance_average > 55) {
  1580  005300  5037               	movf	_distance_average+1,w,c	;volatile
  1581  005302  E104               	bnz	u9580
  1582  005304  0E38               	movlw	56
  1583  005306  5C36               	subwf	_distance_average,w,c	;volatile
  1584  005308  A0D8               	btfss	status,0,c
  1585  00530A  D046               	goto	l736
  1586  00530C                     u9580:
  1587                           
  1588                           ;parcheggio.c: 247: PORTBbits.RB5 = 1;
  1589  00530C  8A81               	bsf	3969,5,c	;volatile
  1590                           
  1591                           ;parcheggio.c: 248: data[0] = 1;
  1592  00530E  0E01               	movlw	1
  1593  005310  0101               	movlb	1	; () banked
  1594  005312  6F5D               	movwf	_data& (0+255),b
  1595                           
  1596                           ; BSR set to: 1
  1597                           ;parcheggio.c: 249: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1598  005314  0E0B               	movlw	11
  1599  005316  0100               	movlb	0	; () banked
  1600  005318  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1601  00531A  0E00               	movlw	0
  1602  00531C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1603  00531E  0E00               	movlw	0
  1604  005320  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1605  005322  0E00               	movlw	0
  1606  005324  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1607  005326  0E5D               	movlw	low _data
  1608  005328  0100               	movlb	0	; () banked
  1609  00532A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1610  00532C  0E01               	movlw	high _data
  1611  00532E  0100               	movlb	0	; () banked
  1612  005330  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1613  005332  0E01               	movlw	1
  1614  005334  0100               	movlb	0	; () banked
  1615  005336  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1616  005338  0EBC               	movlw	188
  1617  00533A  0100               	movlb	0	; () banked
  1618  00533C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1619  00533E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1620                           
  1621                           ;parcheggio.c: 250: if ((request_sent1 == 0)&&(sensor_distance[0] < 40)) {
  1622  005342  B447               	btfsc	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1623  005344  D02B               	goto	l723
  1624  005346  5025               	movf	_sensor_distance+1,w,c	;volatile
  1625  005348  E129               	bnz	l723
  1626  00534A  0E28               	movlw	40
  1627  00534C  5C24               	subwf	_sensor_distance,w,c	;volatile
  1628  00534E  B0D8               	btfsc	status,0,c
  1629  005350  D025               	goto	l723
  1630                           
  1631                           ;parcheggio.c: 251: data_test[0] = 100;
  1632  005352  0E64               	movlw	100
  1633  005354  0101               	movlb	1	; () banked
  1634  005356  6F85               	movwf	_data_test& (0+255),b
  1635                           
  1636                           ; BSR set to: 1
  1637                           ;parcheggio.c: 252: asd = 1;
  1638  005358  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  1639  00535A                     l7449:
  1640  00535A  ECBC  F02F         	call	_CANisTxReady	;wreg free
  1641  00535E  0900               	iorlw	0
  1642  005360  B4D8               	btfsc	status,2,c
  1643  005362  D7FB               	goto	l7449
  1644                           
  1645                           ;parcheggio.c: 254: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1646  005364  0E0D               	movlw	13
  1647  005366  0100               	movlb	0	; () banked
  1648  005368  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1649  00536A  0E00               	movlw	0
  1650  00536C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1651  00536E  0E00               	movlw	0
  1652  005370  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1653  005372  0E00               	movlw	0
  1654  005374  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1655  005376  0E85               	movlw	low _data_test
  1656  005378  0100               	movlb	0	; () banked
  1657  00537A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1658  00537C  0E01               	movlw	high _data_test
  1659  00537E  0100               	movlb	0	; () banked
  1660  005380  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1661  005382  0E08               	movlw	8
  1662  005384  0100               	movlb	0	; () banked
  1663  005386  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1664  005388  0EBC               	movlw	188
  1665  00538A  0100               	movlb	0	; () banked
  1666  00538C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1667  00538E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1668                           
  1669                           ;parcheggio.c: 256: distance_received1 = 0;
  1670  005392  9A46               	bcf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
  1671                           
  1672                           ;parcheggio.c: 257: request_sent1 = 1;
  1673  005394  8447               	bsf	_request_sent1/(0+8),_request_sent1& (0+7),c	;volatile
  1674                           
  1675                           ;parcheggio.c: 258: }
  1676                           ;parcheggio.c: 259: } else {
  1677  005396  D002               	goto	l723
  1678  005398                     l736:
  1679                           
  1680                           ;parcheggio.c: 260: distance_received = 0;
  1681  005398  9846               	bcf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
  1682                           
  1683                           ;parcheggio.c: 261: PORTBbits.RB5 = 0;
  1684  00539A  9A81               	bcf	3969,5,c	;volatile
  1685  00539C                     l723:
  1686  00539C  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1687  00539E  0012               	return	
  1688  0053A0  BA81               	btfsc	3969,5,c	;volatile
  1689  0053A2  0012               	return	
  1690  0053A4  D726               	goto	l7401
  1691  0053A6                     __end_of_park_search:
  1692                           	opt stack 0
  1693                           tblptru	equ	0xFF8
  1694                           tblptrh	equ	0xFF7
  1695                           tblptrl	equ	0xFF6
  1696                           tablat	equ	0xFF5
  1697                           postinc0	equ	0xFEE
  1698                           wreg	equ	0xFE8
  1699                           postdec1	equ	0xFE5
  1700                           fsr1l	equ	0xFE1
  1701                           postinc2	equ	0xFDE
  1702                           postdec2	equ	0xFDD
  1703                           status	equ	0xFD8
  1704                           
  1705 ;; *************** function _park_routine *****************
  1706 ;; Defined at:
  1707 ;;		line 267 in file "parcheggio.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;		None
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;		None
  1712 ;; Return value:  Size  Location     Type
  1713 ;;		None               void
  1714 ;; Registers used:
  1715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1722 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  1723 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  1724 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  1725 ;;Total ram usage:       12 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    9
  1728 ;; This function calls:
  1729 ;;		_CANisTxReady
  1730 ;;		_CANsendMessage
  1731 ;;		___fladd
  1732 ;;		___flneg
  1733 ;;		___fltol
  1734 ;;		___xxtofl
  1735 ;;		_can_send
  1736 ;;		_delay_ms
  1737 ;;		_delay_s
  1738 ;;		_matematica
  1739 ;;		_parallelo
  1740 ;; This function is called by:
  1741 ;;		_main
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text2
  1746  0033C8                     __ptext2:
  1747                           	opt stack 0
  1748  0033C8                     _park_routine:
  1749                           	opt stack 21
  1750                           
  1751                           ;parcheggio.c: 268: while ((asd == 1)&&(PORTBbits.RB5 == 1) && (activation == 1)) {
  1752                           
  1753                           ;incstack = 0
  1754  0033C8  D037               	goto	l7471
  1755  0033CA                     l7461:
  1756                           
  1757                           ;parcheggio.c: 269: PORTBbits.RB6 = ~PORTBbits.RB6;
  1758  0033CA  AC81               	btfss	3969,6,c	;volatile
  1759  0033CC  D002               	goto	u9640
  1760  0033CE  0E01               	movlw	1
  1761  0033D0  D001               	goto	u9646
  1762  0033D2                     u9640:
  1763  0033D2  0E00               	movlw	0
  1764  0033D4                     u9646:
  1765  0033D4  0AFF               	xorlw	255
  1766  0033D6  0101               	movlb	1	; () banked
  1767  0033D8  6FD6               	movwf	??_park_routine& (0+255),b
  1768  0033DA  0101               	movlb	1	; () banked
  1769  0033DC  3BD6               	swapf	??_park_routine& (0+255),f,b
  1770  0033DE  47D6               	rlncf	??_park_routine& (0+255),f,b
  1771  0033E0  47D6               	rlncf	??_park_routine& (0+255),f,b
  1772  0033E2  5081               	movf	3969,w,c	;volatile
  1773  0033E4  0101               	movlb	1	; () banked
  1774  0033E6  19D6               	xorwf	??_park_routine& (0+255),w,b
  1775  0033E8  0BBF               	andlw	-65
  1776  0033EA  19D6               	xorwf	??_park_routine& (0+255),w,b
  1777  0033EC  6E81               	movwf	3969,c	;volatile
  1778                           
  1779                           ; BSR set to: 1
  1780                           ;parcheggio.c: 270: parallelo();
  1781  0033EE  ECBF  F024         	call	_parallelo	;wreg free
  1782  0033F2                     l7465:
  1783  0033F2  ECBC  F02F         	call	_CANisTxReady	;wreg free
  1784  0033F6  0900               	iorlw	0
  1785  0033F8  B4D8               	btfsc	status,2,c
  1786  0033FA  D7FB               	goto	l7465
  1787                           
  1788                           ;parcheggio.c: 272: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  1789  0033FC  0E0E               	movlw	14
  1790  0033FE  0100               	movlb	0	; () banked
  1791  003400  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1792  003402  0E00               	movlw	0
  1793  003404  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1794  003406  0E00               	movlw	0
  1795  003408  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1796  00340A  0E00               	movlw	0
  1797  00340C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1798  00340E  0E6D               	movlw	low _data_correction
  1799  003410  0100               	movlb	0	; () banked
  1800  003412  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1801  003414  0E01               	movlw	high _data_correction
  1802  003416  0100               	movlb	0	; () banked
  1803  003418  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1804  00341A  0E08               	movlw	8
  1805  00341C  0100               	movlb	0	; () banked
  1806  00341E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1807  003420  0EBC               	movlw	188
  1808  003422  0100               	movlb	0	; () banked
  1809  003424  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1810  003426  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1811                           
  1812                           ;parcheggio.c: 273: delay_ms(100);
  1813  00342A  0E00               	movlw	0
  1814  00342C  0100               	movlb	0	; () banked
  1815  00342E  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
  1816  003430  0E64               	movlw	100
  1817  003432  6F7D               	movwf	delay_ms@value_ms& (0+255),b
  1818  003434  EC76  F02F         	call	_delay_ms	;wreg free
  1819  003438                     l7471:
  1820  003438  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  1821  00343A  AA81               	btfss	3969,5,c	;volatile
  1822  00343C  D002               	goto	l755
  1823  00343E  B046               	btfsc	_activation/(0+8),_activation& (0+7),c	;volatile
  1824  003440  D7C4               	goto	l7461
  1825  003442                     l755:
  1826                           
  1827                           ;parcheggio.c: 274: }
  1828                           ;parcheggio.c: 275: if ((PORTBbits.RB5 == 1) && (activation == 1)) {
  1829  003442  BA81               	btfsc	3969,5,c	;volatile
  1830  003444  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1831  003446  D02F               	goto	l7491
  1832                           
  1833                           ;parcheggio.c: 276: PORTBbits.RB6 = 0;
  1834  003448  9C81               	bcf	3969,6,c	;volatile
  1835                           
  1836                           ;parcheggio.c: 277: data[0] = 2;
  1837  00344A  0E02               	movlw	2
  1838  00344C  0101               	movlb	1	; () banked
  1839  00344E  6F5D               	movwf	_data& (0+255),b
  1840                           
  1841                           ; BSR set to: 1
  1842                           ;parcheggio.c: 278: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  1843  003450  0E0B               	movlw	11
  1844  003452  0100               	movlb	0	; () banked
  1845  003454  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  1846  003456  0E00               	movlw	0
  1847  003458  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  1848  00345A  0E00               	movlw	0
  1849  00345C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  1850  00345E  0E00               	movlw	0
  1851  003460  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  1852  003462  0E5D               	movlw	low _data
  1853  003464  0100               	movlb	0	; () banked
  1854  003466  6F7B               	movwf	CANsendMessage@data& (0+255),b
  1855  003468  0E01               	movlw	high _data
  1856  00346A  0100               	movlb	0	; () banked
  1857  00346C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  1858  00346E  0E01               	movlw	1
  1859  003470  0100               	movlb	0	; () banked
  1860  003472  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  1861  003474  0EBC               	movlw	188
  1862  003476  0100               	movlb	0	; () banked
  1863  003478  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  1864  00347A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  1865                           
  1866                           ;parcheggio.c: 279: }
  1867                           ;parcheggio.c: 280: while ((start_operation != 1)&&(activation == 1)){
  1868  00347E  D013               	goto	l7491
  1869  003480                     l758:
  1870                           
  1871                           ;parcheggio.c: 282: if (first == 0){
  1872  003480  BE46               	btfsc	_first/(0+8),_first& (0+7),c	;volatile
  1873  003482  D011               	goto	l7491
  1874                           
  1875                           ;parcheggio.c: 283: set_speed = 0;
  1876  003484  0E00               	movlw	0
  1877  003486  0101               	movlb	1	; () banked
  1878  003488  6F4D               	movwf	(_set_speed+1)& (0+255),b
  1879  00348A  0E00               	movlw	0
  1880  00348C  6F4C               	movwf	_set_speed& (0+255),b
  1881                           
  1882                           ;parcheggio.c: 284: data_steering[0] = 90;
  1883  00348E  0E5A               	movlw	90
  1884  003490  0101               	movlb	1	; () banked
  1885  003492  6F7D               	movwf	_data_steering& (0+255),b
  1886                           
  1887                           ;parcheggio.c: 285: data_brake [0] = 0;
  1888  003494  0E00               	movlw	0
  1889  003496  0101               	movlb	1	; () banked
  1890  003498  6F65               	movwf	_data_brake& (0+255),b
  1891                           
  1892                           ;parcheggio.c: 286: data_brake [1] = 1;
  1893  00349A  0E01               	movlw	1
  1894  00349C  0101               	movlb	1	; () banked
  1895  00349E  6F66               	movwf	(_data_brake+1)& (0+255),b
  1896                           
  1897                           ; BSR set to: 1
  1898                           ;parcheggio.c: 287: can_send();
  1899  0034A0  EC9B  F02A         	call	_can_send	;wreg free
  1900                           
  1901                           ;parcheggio.c: 288: first = 1;
  1902  0034A4  8E46               	bsf	_first/(0+8),_first& (0+7),c	;volatile
  1903  0034A6                     l7491:
  1904  0034A6  A647               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  1905  0034A8  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  1906  0034AA  D1B9               	goto	l7601
  1907  0034AC  D7E9               	goto	l758
  1908  0034AE                     l764:
  1909                           
  1910                           ;parcheggio.c: 292: LATBbits.LATB4 = 1;
  1911  0034AE  888A               	bsf	3978,4,c	;volatile
  1912                           
  1913                           ;parcheggio.c: 294: bordo = (sensor_distance[0] + sensor_distance[1]) / 2;
  1914  0034B0  5024               	movf	_sensor_distance,w,c	;volatile
  1915  0034B2  2426               	addwf	_sensor_distance+2,w,c	;volatile
  1916  0034B4  0101               	movlb	1	; () banked
  1917  0034B6  6FD6               	movwf	??_park_routine& (0+255),b
  1918  0034B8  5025               	movf	_sensor_distance+1,w,c	;volatile
  1919  0034BA  2027               	addwfc	_sensor_distance+3,w,c	;volatile
  1920  0034BC  0101               	movlb	1	; () banked
  1921  0034BE  6FD7               	movwf	(??_park_routine+1)& (0+255),b
  1922  0034C0  90D8               	bcf	status,0,c
  1923  0034C2  0101               	movlb	1	; () banked
  1924  0034C4  31D7               	rrcf	(??_park_routine+1)& (0+255),w,b
  1925  0034C6  0101               	movlb	1	; () banked
  1926  0034C8  6FD9               	movwf	(??_park_routine+3)& (0+255),b
  1927  0034CA  0101               	movlb	1	; () banked
  1928  0034CC  31D6               	rrcf	??_park_routine& (0+255),w,b
  1929  0034CE  0101               	movlb	1	; () banked
  1930  0034D0  6FD8               	movwf	(??_park_routine+2)& (0+255),b
  1931  0034D2  C1D8  F0CB         	movff	??_park_routine+2,___xxtofl@val
  1932  0034D6  C1D9  F0CC         	movff	??_park_routine+3,___xxtofl@val+1
  1933  0034DA  0100               	movlb	0	; () banked
  1934  0034DC  6BCD               	clrf	(___xxtofl@val+2)& (0+255),b
  1935  0034DE  6BCE               	clrf	(___xxtofl@val+3)& (0+255),b
  1936  0034E0  0E00               	movlw	0
  1937  0034E2  EC2E  F027         	call	___xxtofl
  1938  0034E6  C0CB  F124         	movff	?___xxtofl,_bordo	;volatile
  1939  0034EA  C0CC  F125         	movff	?___xxtofl+1,_bordo+1	;volatile
  1940  0034EE  C0CD  F126         	movff	?___xxtofl+2,_bordo+2	;volatile
  1941  0034F2  C0CE  F127         	movff	?___xxtofl+3,_bordo+3	;volatile
  1942                           
  1943                           ;parcheggio.c: 295: matematica();
  1944  0034F6  ECF2  F00F         	call	_matematica	;wreg free
  1945                           
  1946                           ;parcheggio.c: 296: set_speed = 0;
  1947  0034FA  0E00               	movlw	0
  1948  0034FC  0101               	movlb	1	; () banked
  1949  0034FE  6F4D               	movwf	(_set_speed+1)& (0+255),b
  1950  003500  0E00               	movlw	0
  1951  003502  6F4C               	movwf	_set_speed& (0+255),b
  1952                           
  1953                           ; BSR set to: 1
  1954                           ;parcheggio.c: 297: data_steering[0] = 89;
  1955  003504  0E59               	movlw	89
  1956  003506  0101               	movlb	1	; () banked
  1957  003508  6F7D               	movwf	_data_steering& (0+255),b
  1958                           
  1959                           ; BSR set to: 1
  1960                           ;parcheggio.c: 298: data_brake [0] = 0;
  1961  00350A  0E00               	movlw	0
  1962  00350C  0101               	movlb	1	; () banked
  1963  00350E  6F65               	movwf	_data_brake& (0+255),b
  1964                           
  1965                           ; BSR set to: 1
  1966                           ;parcheggio.c: 299: data_brake [1] = 1;
  1967  003510  0E01               	movlw	1
  1968  003512  0101               	movlb	1	; () banked
  1969  003514  6F66               	movwf	(_data_brake+1)& (0+255),b
  1970                           
  1971                           ; BSR set to: 1
  1972                           ;parcheggio.c: 300: can_send();
  1973  003516  EC9B  F02A         	call	_can_send	;wreg free
  1974                           
  1975                           ;parcheggio.c: 301: delay_s(1);
  1976  00351A  0E01               	movlw	1
  1977  00351C  ECA6  F02F         	call	_delay_s
  1978                           
  1979                           ;parcheggio.c: 303: data_brake [0] = 3;
  1980  003520  0E03               	movlw	3
  1981  003522  0101               	movlb	1	; () banked
  1982  003524  6F65               	movwf	_data_brake& (0+255),b
  1983                           
  1984                           ; BSR set to: 1
  1985                           ;parcheggio.c: 304: data_brake [1] = 1;
  1986  003526  0E01               	movlw	1
  1987  003528  0101               	movlb	1	; () banked
  1988  00352A  6F66               	movwf	(_data_brake+1)& (0+255),b
  1989                           
  1990                           ; BSR set to: 1
  1991                           ;parcheggio.c: 306: set_speed = 1000;
  1992  00352C  0E03               	movlw	3
  1993  00352E  0101               	movlb	1	; () banked
  1994  003530  6F4D               	movwf	(_set_speed+1)& (0+255),b
  1995  003532  0EE8               	movlw	232
  1996  003534  6F4C               	movwf	_set_speed& (0+255),b
  1997                           
  1998                           ; BSR set to: 1
  1999                           ;parcheggio.c: 307: dir = 0;
  2000  003536  9446               	bcf	_dir/(0+8),_dir& (0+7),c
  2001                           
  2002                           ; BSR set to: 1
  2003                           ;parcheggio.c: 308: data_steering[0] = 89;
  2004  003538  0E59               	movlw	89
  2005  00353A  0101               	movlb	1	; () banked
  2006  00353C  6F7D               	movwf	_data_steering& (0+255),b
  2007                           
  2008                           ; BSR set to: 1
  2009                           ;parcheggio.c: 309: data_test[0] = ((100 + Pminimo)-(n + 0 + 43));
  2010  00353E  0E00               	movlw	0
  2011  003540  0100               	movlb	0	; () banked
  2012  003542  6FAD               	movwf	___fladd@a& (0+255),b
  2013  003544  0E00               	movlw	0
  2014  003546  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2015  003548  0E2C               	movlw	44
  2016  00354A  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2017  00354C  0E42               	movlw	66
  2018  00354E  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2019  003550  C130  F0A9         	movff	_n,___fladd@b
  2020  003554  C131  F0AA         	movff	_n+1,___fladd@b+1
  2021  003558  C132  F0AB         	movff	_n+2,___fladd@b+2
  2022  00355C  C133  F0AC         	movff	_n+3,___fladd@b+3
  2023  003560  EC3D  F015         	call	___fladd	;wreg free
  2024  003564  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  2025  003568  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  2026  00356C  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  2027  003570  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  2028  003574  EC3F  F02F         	call	___flneg	;wreg free
  2029  003578  C0BD  F1DA         	movff	?___flneg,_park_routine$3739
  2030  00357C  C0BE  F1DB         	movff	?___flneg+1,_park_routine$3739+1
  2031  003580  C0BF  F1DC         	movff	?___flneg+2,_park_routine$3739+2
  2032  003584  C0C0  F1DD         	movff	?___flneg+3,_park_routine$3739+3
  2033                           
  2034                           ;parcheggio.c: 309: data_test[0] = ((100 + Pminimo)-(n + 0 + 43));
  2035  003588  C118  F0AD         	movff	_Pminimo,___fladd@a
  2036  00358C  C119  F0AE         	movff	_Pminimo+1,___fladd@a+1
  2037  003590  C11A  F0AF         	movff	_Pminimo+2,___fladd@a+2
  2038  003594  C11B  F0B0         	movff	_Pminimo+3,___fladd@a+3
  2039  003598  C1DA  F0A9         	movff	_park_routine$3739,___fladd@b
  2040  00359C  C1DB  F0AA         	movff	_park_routine$3739+1,___fladd@b+1
  2041  0035A0  C1DC  F0AB         	movff	_park_routine$3739+2,___fladd@b+2
  2042  0035A4  C1DD  F0AC         	movff	_park_routine$3739+3,___fladd@b+3
  2043  0035A8  EC3D  F015         	call	___fladd	;wreg free
  2044  0035AC  C0A9  F1DE         	movff	?___fladd,_park_routine$3740
  2045  0035B0  C0AA  F1DF         	movff	?___fladd+1,_park_routine$3740+1
  2046  0035B4  C0AB  F1E0         	movff	?___fladd+2,_park_routine$3740+2
  2047  0035B8  C0AC  F1E1         	movff	?___fladd+3,_park_routine$3740+3
  2048                           
  2049                           ;parcheggio.c: 309: data_test[0] = ((100 + Pminimo)-(n + 0 + 43));
  2050  0035BC  0E00               	movlw	0
  2051  0035BE  0100               	movlb	0	; () banked
  2052  0035C0  6FAD               	movwf	___fladd@a& (0+255),b
  2053  0035C2  0E00               	movlw	0
  2054  0035C4  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2055  0035C6  0EC8               	movlw	200
  2056  0035C8  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2057  0035CA  0E42               	movlw	66
  2058  0035CC  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2059  0035CE  C1DE  F0A9         	movff	_park_routine$3740,___fladd@b
  2060  0035D2  C1DF  F0AA         	movff	_park_routine$3740+1,___fladd@b+1
  2061  0035D6  C1E0  F0AB         	movff	_park_routine$3740+2,___fladd@b+2
  2062  0035DA  C1E1  F0AC         	movff	_park_routine$3740+3,___fladd@b+3
  2063  0035DE  EC3D  F015         	call	___fladd	;wreg free
  2064  0035E2  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2065  0035E6  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2066  0035EA  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2067  0035EE  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2068  0035F2  EC54  F02C         	call	___fltol	;wreg free
  2069  0035F6  0100               	movlb	0	; () banked
  2070  0035F8  51C1               	movf	?___fltol& (0+255),w,b
  2071  0035FA  0101               	movlb	1	; () banked
  2072  0035FC  6F85               	movwf	_data_test& (0+255),b
  2073                           
  2074                           ; BSR set to: 1
  2075                           ;parcheggio.c: 310: asd = 1;
  2076  0035FE  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2077                           
  2078                           ; BSR set to: 1
  2079                           ;parcheggio.c: 311: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2080  003600  0E0D               	movlw	13
  2081  003602  0100               	movlb	0	; () banked
  2082  003604  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2083  003606  0E00               	movlw	0
  2084  003608  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2085  00360A  0E00               	movlw	0
  2086  00360C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2087  00360E  0E00               	movlw	0
  2088  003610  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2089  003612  0E85               	movlw	low _data_test
  2090  003614  0100               	movlb	0	; () banked
  2091  003616  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2092  003618  0E01               	movlw	high _data_test
  2093  00361A  0100               	movlb	0	; () banked
  2094  00361C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2095  00361E  0E08               	movlw	8
  2096  003620  0100               	movlb	0	; () banked
  2097  003622  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2098  003624  0EBC               	movlw	188
  2099  003626  0100               	movlb	0	; () banked
  2100  003628  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2101  00362A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2102                           
  2103                           ;parcheggio.c: 312: can_send();
  2104  00362E  EC9B  F02A         	call	_can_send	;wreg free
  2105  003632                     l765:
  2106  003632  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2107  003634  D7FE               	goto	l765
  2108                           
  2109                           ;parcheggio.c: 315: set_speed = 0;
  2110  003636  0E00               	movlw	0
  2111  003638  0101               	movlb	1	; () banked
  2112  00363A  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2113  00363C  0E00               	movlw	0
  2114  00363E  6F4C               	movwf	_set_speed& (0+255),b
  2115                           
  2116                           ;parcheggio.c: 316: data_steering[0] = 89;
  2117  003640  0E59               	movlw	89
  2118  003642  0101               	movlb	1	; () banked
  2119  003644  6F7D               	movwf	_data_steering& (0+255),b
  2120                           
  2121                           ;parcheggio.c: 317: data_brake [0] = 0;
  2122  003646  0E00               	movlw	0
  2123  003648  0101               	movlb	1	; () banked
  2124  00364A  6F65               	movwf	_data_brake& (0+255),b
  2125                           
  2126                           ;parcheggio.c: 318: data_brake [1] = 1;
  2127  00364C  0E01               	movlw	1
  2128  00364E  0101               	movlb	1	; () banked
  2129  003650  6F66               	movwf	(_data_brake+1)& (0+255),b
  2130                           
  2131                           ; BSR set to: 1
  2132                           ;parcheggio.c: 319: can_send();
  2133  003652  EC9B  F02A         	call	_can_send	;wreg free
  2134                           
  2135                           ;parcheggio.c: 320: delay_s(1);
  2136  003656  0E01               	movlw	1
  2137  003658  ECA6  F02F         	call	_delay_s
  2138                           
  2139                           ;parcheggio.c: 322: data_brake [0] = 3;
  2140  00365C  0E03               	movlw	3
  2141  00365E  0101               	movlb	1	; () banked
  2142  003660  6F65               	movwf	_data_brake& (0+255),b
  2143                           
  2144                           ; BSR set to: 1
  2145                           ;parcheggio.c: 323: data_brake [1] = 1;
  2146  003662  0E01               	movlw	1
  2147  003664  0101               	movlb	1	; () banked
  2148  003666  6F66               	movwf	(_data_brake+1)& (0+255),b
  2149                           
  2150                           ; BSR set to: 1
  2151                           ;parcheggio.c: 324: set_speed = 1000;
  2152  003668  0E03               	movlw	3
  2153  00366A  0101               	movlb	1	; () banked
  2154  00366C  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2155  00366E  0EE8               	movlw	232
  2156  003670  6F4C               	movwf	_set_speed& (0+255),b
  2157                           
  2158                           ; BSR set to: 1
  2159                           ;parcheggio.c: 325: dir = 0;
  2160  003672  9446               	bcf	_dir/(0+8),_dir& (0+7),c
  2161                           
  2162                           ; BSR set to: 1
  2163                           ;parcheggio.c: 326: data_steering[0] = 180;
  2164  003674  0EB4               	movlw	180
  2165  003676  0101               	movlb	1	; () banked
  2166  003678  6F7D               	movwf	_data_steering& (0+255),b
  2167                           
  2168                           ; BSR set to: 1
  2169                           ;parcheggio.c: 327: data_test[0] = prima_sterzata;
  2170  00367A  C138  F0C1         	movff	_prima_sterzata,___fltol@f1
  2171  00367E  C139  F0C2         	movff	_prima_sterzata+1,___fltol@f1+1
  2172  003682  C13A  F0C3         	movff	_prima_sterzata+2,___fltol@f1+2
  2173  003686  C13B  F0C4         	movff	_prima_sterzata+3,___fltol@f1+3
  2174  00368A  EC54  F02C         	call	___fltol	;wreg free
  2175  00368E  0100               	movlb	0	; () banked
  2176  003690  51C1               	movf	?___fltol& (0+255),w,b
  2177  003692  0101               	movlb	1	; () banked
  2178  003694  6F85               	movwf	_data_test& (0+255),b
  2179                           
  2180                           ; BSR set to: 1
  2181                           ;parcheggio.c: 328: asd = 1;
  2182  003696  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2183                           
  2184                           ; BSR set to: 1
  2185                           ;parcheggio.c: 329: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2186  003698  0E0D               	movlw	13
  2187  00369A  0100               	movlb	0	; () banked
  2188  00369C  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2189  00369E  0E00               	movlw	0
  2190  0036A0  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2191  0036A2  0E00               	movlw	0
  2192  0036A4  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2193  0036A6  0E00               	movlw	0
  2194  0036A8  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2195  0036AA  0E85               	movlw	low _data_test
  2196  0036AC  0100               	movlb	0	; () banked
  2197  0036AE  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2198  0036B0  0E01               	movlw	high _data_test
  2199  0036B2  0100               	movlb	0	; () banked
  2200  0036B4  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2201  0036B6  0E08               	movlw	8
  2202  0036B8  0100               	movlb	0	; () banked
  2203  0036BA  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2204  0036BC  0EBC               	movlw	188
  2205  0036BE  0100               	movlb	0	; () banked
  2206  0036C0  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2207  0036C2  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2208                           
  2209                           ;parcheggio.c: 330: can_send();
  2210  0036C6  EC9B  F02A         	call	_can_send	;wreg free
  2211  0036CA                     l768:
  2212  0036CA  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2213  0036CC  D7FE               	goto	l768
  2214                           
  2215                           ;parcheggio.c: 332: set_speed = 1000;
  2216  0036CE  0E03               	movlw	3
  2217  0036D0  0101               	movlb	1	; () banked
  2218  0036D2  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2219  0036D4  0EE8               	movlw	232
  2220  0036D6  6F4C               	movwf	_set_speed& (0+255),b
  2221                           
  2222                           ;parcheggio.c: 333: data_steering[0] = 0;
  2223  0036D8  0E00               	movlw	0
  2224  0036DA  0101               	movlb	1	; () banked
  2225  0036DC  6F7D               	movwf	_data_steering& (0+255),b
  2226                           
  2227                           ; BSR set to: 1
  2228                           ;parcheggio.c: 334: asd = 1;
  2229  0036DE  8246               	bsf	_asd/(0+8),_asd& (0+7),c	;volatile
  2230                           
  2231                           ; BSR set to: 1
  2232                           ;parcheggio.c: 335: data_test[0] = prima_sterzata+10;
  2233  0036E0  0E00               	movlw	0
  2234  0036E2  0100               	movlb	0	; () banked
  2235  0036E4  6FAD               	movwf	___fladd@a& (0+255),b
  2236  0036E6  0E00               	movlw	0
  2237  0036E8  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2238  0036EA  0E20               	movlw	32
  2239  0036EC  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2240  0036EE  0E41               	movlw	65
  2241  0036F0  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2242  0036F2  C138  F0A9         	movff	_prima_sterzata,___fladd@b
  2243  0036F6  C139  F0AA         	movff	_prima_sterzata+1,___fladd@b+1
  2244  0036FA  C13A  F0AB         	movff	_prima_sterzata+2,___fladd@b+2
  2245  0036FE  C13B  F0AC         	movff	_prima_sterzata+3,___fladd@b+3
  2246  003702  EC3D  F015         	call	___fladd	;wreg free
  2247  003706  C0A9  F0C1         	movff	?___fladd,___fltol@f1
  2248  00370A  C0AA  F0C2         	movff	?___fladd+1,___fltol@f1+1
  2249  00370E  C0AB  F0C3         	movff	?___fladd+2,___fltol@f1+2
  2250  003712  C0AC  F0C4         	movff	?___fladd+3,___fltol@f1+3
  2251  003716  EC54  F02C         	call	___fltol	;wreg free
  2252  00371A  0100               	movlb	0	; () banked
  2253  00371C  51C1               	movf	?___fltol& (0+255),w,b
  2254  00371E  0101               	movlb	1	; () banked
  2255  003720  6F85               	movwf	_data_test& (0+255),b
  2256                           
  2257                           ; BSR set to: 1
  2258                           ;parcheggio.c: 336: CANsendMessage(0b00000001101, data_test, 8, CAN_CONFIG_STD_MSG & CAN
      +                          _NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2259  003722  0E0D               	movlw	13
  2260  003724  0100               	movlb	0	; () banked
  2261  003726  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2262  003728  0E00               	movlw	0
  2263  00372A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2264  00372C  0E00               	movlw	0
  2265  00372E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2266  003730  0E00               	movlw	0
  2267  003732  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2268  003734  0E85               	movlw	low _data_test
  2269  003736  0100               	movlb	0	; () banked
  2270  003738  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2271  00373A  0E01               	movlw	high _data_test
  2272  00373C  0100               	movlb	0	; () banked
  2273  00373E  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2274  003740  0E08               	movlw	8
  2275  003742  0100               	movlb	0	; () banked
  2276  003744  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2277  003746  0EBC               	movlw	188
  2278  003748  0100               	movlb	0	; () banked
  2279  00374A  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2280  00374C  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2281                           
  2282                           ;parcheggio.c: 337: can_send();
  2283  003750  EC9B  F02A         	call	_can_send	;wreg free
  2284  003754                     l771:
  2285  003754  B246               	btfsc	_asd/(0+8),_asd& (0+7),c	;volatile
  2286  003756  D7FE               	goto	l771
  2287                           
  2288                           ;parcheggio.c: 339: data_brake [0] = 0;
  2289  003758  0E00               	movlw	0
  2290  00375A  0101               	movlb	1	; () banked
  2291  00375C  6F65               	movwf	_data_brake& (0+255),b
  2292                           
  2293                           ;parcheggio.c: 340: data_brake [1] = 1;
  2294  00375E  0E01               	movlw	1
  2295  003760  0101               	movlb	1	; () banked
  2296  003762  6F66               	movwf	(_data_brake+1)& (0+255),b
  2297                           
  2298                           ;parcheggio.c: 341: set_speed = 0;
  2299  003764  0E00               	movlw	0
  2300  003766  0101               	movlb	1	; () banked
  2301  003768  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2302  00376A  0E00               	movlw	0
  2303  00376C  6F4C               	movwf	_set_speed& (0+255),b
  2304                           
  2305                           ;parcheggio.c: 342: data_steering[0] = 89;
  2306  00376E  0E59               	movlw	89
  2307  003770  0101               	movlb	1	; () banked
  2308  003772  6F7D               	movwf	_data_steering& (0+255),b
  2309                           
  2310                           ; BSR set to: 1
  2311                           ;parcheggio.c: 343: can_send();
  2312  003774  EC9B  F02A         	call	_can_send	;wreg free
  2313                           
  2314                           ;parcheggio.c: 344: delay_s(1);
  2315  003778  0E01               	movlw	1
  2316  00377A  ECA6  F02F         	call	_delay_s
  2317                           
  2318                           ;parcheggio.c: 345: if (sensor_distance [2] > 20) {
  2319  00377E  5029               	movf	_sensor_distance+5,w,c	;volatile
  2320  003780  E104               	bnz	u9770
  2321  003782  0E15               	movlw	21
  2322  003784  5C28               	subwf	_sensor_distance+4,w,c	;volatile
  2323  003786  A0D8               	btfss	status,0,c
  2324  003788  D017               	goto	l7583
  2325  00378A                     u9770:
  2326                           
  2327                           ;parcheggio.c: 346: data_brake [0] = 3;
  2328  00378A  0E03               	movlw	3
  2329  00378C  0101               	movlb	1	; () banked
  2330  00378E  6F65               	movwf	_data_brake& (0+255),b
  2331                           
  2332                           ;parcheggio.c: 347: data_brake [1] = 1;
  2333  003790  0E01               	movlw	1
  2334  003792  0101               	movlb	1	; () banked
  2335  003794  6F66               	movwf	(_data_brake+1)& (0+255),b
  2336                           
  2337                           ;parcheggio.c: 348: set_speed = 1000;
  2338  003796  0E03               	movlw	3
  2339  003798  0101               	movlb	1	; () banked
  2340  00379A  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2341  00379C  0EE8               	movlw	232
  2342  00379E  6F4C               	movwf	_set_speed& (0+255),b
  2343                           
  2344                           ;parcheggio.c: 349: data_steering[0] = 89;
  2345  0037A0  0E59               	movlw	89
  2346  0037A2  0101               	movlb	1	; () banked
  2347  0037A4  6F7D               	movwf	_data_steering& (0+255),b
  2348                           
  2349                           ; BSR set to: 1
  2350                           ;parcheggio.c: 350: dir = 1;
  2351  0037A6  8446               	bsf	_dir/(0+8),_dir& (0+7),c
  2352                           
  2353                           ; BSR set to: 1
  2354                           ;parcheggio.c: 351: can_send();
  2355  0037A8  EC9B  F02A         	call	_can_send	;wreg free
  2356  0037AC                     l7581:
  2357  0037AC  5029               	movf	_sensor_distance+5,w,c	;volatile
  2358  0037AE  E1FE               	bnz	l7581
  2359  0037B0  0E15               	movlw	21
  2360  0037B2  5C28               	subwf	_sensor_distance+4,w,c	;volatile
  2361  0037B4  B0D8               	btfsc	status,0,c
  2362  0037B6  D7FA               	goto	l7581
  2363  0037B8                     l7583:
  2364                           
  2365                           ;parcheggio.c: 353: }
  2366                           ;parcheggio.c: 354: data_brake [0] = 0;
  2367  0037B8  0E00               	movlw	0
  2368  0037BA  0101               	movlb	1	; () banked
  2369  0037BC  6F65               	movwf	_data_brake& (0+255),b
  2370                           
  2371                           ;parcheggio.c: 355: data_brake [1] = 1;
  2372  0037BE  0E01               	movlw	1
  2373  0037C0  0101               	movlb	1	; () banked
  2374  0037C2  6F66               	movwf	(_data_brake+1)& (0+255),b
  2375                           
  2376                           ;parcheggio.c: 356: set_speed = 0;
  2377  0037C4  0E00               	movlw	0
  2378  0037C6  0101               	movlb	1	; () banked
  2379  0037C8  6F4D               	movwf	(_set_speed+1)& (0+255),b
  2380  0037CA  0E00               	movlw	0
  2381  0037CC  6F4C               	movwf	_set_speed& (0+255),b
  2382                           
  2383                           ;parcheggio.c: 357: data_steering[0] = 89;
  2384  0037CE  0E59               	movlw	89
  2385  0037D0  0101               	movlb	1	; () banked
  2386  0037D2  6F7D               	movwf	_data_steering& (0+255),b
  2387                           
  2388                           ; BSR set to: 1
  2389                           ;parcheggio.c: 358: dir = 0;
  2390  0037D4  9446               	bcf	_dir/(0+8),_dir& (0+7),c
  2391                           
  2392                           ; BSR set to: 1
  2393                           ;parcheggio.c: 360: can_send();
  2394  0037D6  EC9B  F02A         	call	_can_send	;wreg free
  2395                           
  2396                           ;parcheggio.c: 361: activation = 0;
  2397  0037DA  9046               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
  2398                           
  2399                           ;parcheggio.c: 362: PORTBbits.RB5 = 0;
  2400  0037DC  9A81               	bcf	3969,5,c	;volatile
  2401                           
  2402                           ;parcheggio.c: 363: start_operation = 0;
  2403  0037DE  9647               	bcf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2404                           
  2405                           ;parcheggio.c: 364: data[0] = 3;
  2406  0037E0  0E03               	movlw	3
  2407  0037E2  0101               	movlb	1	; () banked
  2408  0037E4  6F5D               	movwf	_data& (0+255),b
  2409  0037E6                     l7597:
  2410  0037E6  ECBC  F02F         	call	_CANisTxReady	;wreg free
  2411  0037EA  0900               	iorlw	0
  2412  0037EC  B4D8               	btfsc	status,2,c
  2413  0037EE  D7FB               	goto	l7597
  2414                           
  2415                           ;parcheggio.c: 366: CANsendMessage(0b00000001011, data, 1, CAN_CONFIG_STD_MSG & CAN_NORM
      +                          AL_TX_FRAME & CAN_TX_PRIORITY_0);
  2416  0037F0  0E0B               	movlw	11
  2417  0037F2  0100               	movlb	0	; () banked
  2418  0037F4  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2419  0037F6  0E00               	movlw	0
  2420  0037F8  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2421  0037FA  0E00               	movlw	0
  2422  0037FC  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2423  0037FE  0E00               	movlw	0
  2424  003800  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2425  003802  0E5D               	movlw	low _data
  2426  003804  0100               	movlb	0	; () banked
  2427  003806  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2428  003808  0E01               	movlw	high _data
  2429  00380A  0100               	movlb	0	; () banked
  2430  00380C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2431  00380E  0E01               	movlw	1
  2432  003810  0100               	movlb	0	; () banked
  2433  003812  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2434  003814  0EBC               	movlw	188
  2435  003816  0100               	movlb	0	; () banked
  2436  003818  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2437  00381A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2438  00381E                     l7601:
  2439  00381E  AA81               	btfss	3969,5,c	;volatile
  2440  003820  0012               	return	
  2441  003822  A046               	btfss	_activation/(0+8),_activation& (0+7),c	;volatile
  2442  003824  0012               	return	
  2443  003826  A647               	btfss	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
  2444  003828  0012               	return	
  2445  00382A  D641               	goto	l764
  2446  00382C                     __end_of_park_routine:
  2447                           	opt stack 0
  2448                           tblptru	equ	0xFF8
  2449                           tblptrh	equ	0xFF7
  2450                           tblptrl	equ	0xFF6
  2451                           tablat	equ	0xFF5
  2452                           postinc0	equ	0xFEE
  2453                           wreg	equ	0xFE8
  2454                           postdec1	equ	0xFE5
  2455                           fsr1l	equ	0xFE1
  2456                           postinc2	equ	0xFDE
  2457                           postdec2	equ	0xFDD
  2458                           status	equ	0xFD8
  2459                           
  2460 ;; *************** function _parallelo *****************
  2461 ;; Defined at:
  2462 ;;		line 392 in file "parcheggio.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;		None
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;		None               void
  2469 ;; Registers used:
  2470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2478 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2479 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2480 ;;Total ram usage:        2 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; Hardware stack levels required when called:    8
  2483 ;; This function calls:
  2484 ;;		___fladd
  2485 ;;		___fldiv
  2486 ;;		___flge
  2487 ;;		___flmul
  2488 ;;		___fltol
  2489 ;;		___xxtofl
  2490 ;;		_abs
  2491 ;;		_asin
  2492 ;;		_can_send
  2493 ;;		_sqrt
  2494 ;; This function is called by:
  2495 ;;		_park_search
  2496 ;;		_park_routine
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text3
  2501  00497E                     __ptext3:
  2502                           	opt stack 0
  2503  00497E                     _parallelo:
  2504                           	opt stack 21
  2505                           
  2506                           ;parcheggio.c: 393: alignment_gap = abs(sensor_distance[0] - sensor_distance[1]);
  2507                           
  2508                           ;incstack = 0
  2509  00497E  EE20  F026         	lfsr	2,_sensor_distance+2	;volatile
  2510  004982  CFDE F0E2          	movff	postinc2,??_parallelo
  2511  004986  CFDD F0E3          	movff	postdec2,??_parallelo+1
  2512  00498A  0100               	movlb	0	; () banked
  2513  00498C  1FE2               	comf	??_parallelo& (0+255),f,b
  2514  00498E  1FE3               	comf	(??_parallelo+1)& (0+255),f,b
  2515  004990  4BE2               	infsnz	??_parallelo& (0+255),f,b
  2516  004992  2BE3               	incf	(??_parallelo+1)& (0+255),f,b
  2517  004994  5024               	movf	_sensor_distance,w,c	;volatile
  2518  004996  0100               	movlb	0	; () banked
  2519  004998  25E2               	addwf	??_parallelo& (0+255),w,b
  2520  00499A  0100               	movlb	0	; () banked
  2521  00499C  6F77               	movwf	abs@a& (0+255),b
  2522  00499E  5025               	movf	_sensor_distance+1,w,c	;volatile
  2523  0049A0  0100               	movlb	0	; () banked
  2524  0049A2  21E3               	addwfc	(??_parallelo+1)& (0+255),w,b
  2525  0049A4  0100               	movlb	0	; () banked
  2526  0049A6  6F78               	movwf	(abs@a+1)& (0+255),b
  2527  0049A8  EC90  F02F         	call	_abs	;wreg free
  2528  0049AC  0100               	movlb	0	; () banked
  2529  0049AE  C077  F0CB         	movff	?_abs,___xxtofl@val
  2530  0049B2  0100               	movlb	0	; () banked
  2531  0049B4  C078  F0CC         	movff	?_abs+1,___xxtofl@val+1
  2532  0049B8  0100               	movlb	0	; () banked
  2533  0049BA  0E00               	movlw	0
  2534  0049BC  BFCC               	btfsc	(___xxtofl@val+1)& (0+255),7,b
  2535  0049BE  0EFF               	movlw	-1
  2536  0049C0  6FCD               	movwf	(___xxtofl@val+2)& (0+255),b
  2537  0049C2  6FCE               	movwf	(___xxtofl@val+3)& (0+255),b
  2538  0049C4  0E01               	movlw	1
  2539  0049C6  EC2E  F027         	call	___xxtofl
  2540  0049CA  C0CB  F0E4         	movff	?___xxtofl,_alignment_gap
  2541  0049CE  C0CC  F0E5         	movff	?___xxtofl+1,_alignment_gap+1
  2542  0049D2  C0CD  F0E6         	movff	?___xxtofl+2,_alignment_gap+2
  2543  0049D6  C0CE  F0E7         	movff	?___xxtofl+3,_alignment_gap+3
  2544                           
  2545                           ;parcheggio.c: 394: if (alignment_gap < 30) {
  2546  0049DA  C0E4  F0C5         	movff	_alignment_gap,___flge@ff1
  2547  0049DE  C0E5  F0C6         	movff	_alignment_gap+1,___flge@ff1+1
  2548  0049E2  C0E6  F0C7         	movff	_alignment_gap+2,___flge@ff1+2
  2549  0049E6  C0E7  F0C8         	movff	_alignment_gap+3,___flge@ff1+3
  2550  0049EA  0E00               	movlw	0
  2551  0049EC  0100               	movlb	0	; () banked
  2552  0049EE  6FC9               	movwf	___flge@ff2& (0+255),b
  2553  0049F0  0E00               	movlw	0
  2554  0049F2  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  2555  0049F4  0EF0               	movlw	240
  2556  0049F6  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  2557  0049F8  0E41               	movlw	65
  2558  0049FA  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  2559  0049FC  ECD3  F029         	call	___flge	;wreg free
  2560  004A00  0100               	movlb	0	; () banked
  2561  004A02  B0D8               	btfsc	status,0,c
  2562  004A04  D0F9               	goto	l801
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;parcheggio.c: 395: if ((sensor_distance[0] < 40) && (sensor_distance[1] < 40)) {
  2566  004A06  5025               	movf	_sensor_distance+1,w,c	;volatile
  2567  004A08  E103               	bnz	u9421
  2568  004A0A  0E28               	movlw	40
  2569  004A0C  5C24               	subwf	_sensor_distance,w,c	;volatile
  2570  004A0E  B0D8               	btfsc	status,0,c
  2571  004A10                     u9421:
  2572  004A10  D0E5               	goto	l7351
  2573                           
  2574                           ; BSR set to: 0
  2575  004A12  5027               	movf	_sensor_distance+3,w,c	;volatile
  2576  004A14  E103               	bnz	u9431
  2577  004A16  0E28               	movlw	40
  2578  004A18  5C26               	subwf	_sensor_distance+2,w,c	;volatile
  2579  004A1A  B0D8               	btfsc	status,0,c
  2580  004A1C                     u9431:
  2581  004A1C  D0DF               	goto	l7351
  2582                           
  2583                           ; BSR set to: 0
  2584                           ;parcheggio.c: 399: x = ((100) + (alignment_gap * alignment_gap));
  2585  004A1E  C0E4  F094         	movff	_alignment_gap,___flmul@a
  2586  004A22  C0E5  F095         	movff	_alignment_gap+1,___flmul@a+1
  2587  004A26  C0E6  F096         	movff	_alignment_gap+2,___flmul@a+2
  2588  004A2A  C0E7  F097         	movff	_alignment_gap+3,___flmul@a+3
  2589  004A2E  C0E4  F090         	movff	_alignment_gap,___flmul@b
  2590  004A32  C0E5  F091         	movff	_alignment_gap+1,___flmul@b+1
  2591  004A36  C0E6  F092         	movff	_alignment_gap+2,___flmul@b+2
  2592  004A3A  C0E7  F093         	movff	_alignment_gap+3,___flmul@b+3
  2593  004A3E  EC91  F017         	call	___flmul	;wreg free
  2594  004A42  C090  F0A9         	movff	?___flmul,___fladd@b
  2595  004A46  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  2596  004A4A  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  2597  004A4E  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  2598  004A52  0E00               	movlw	0
  2599  004A54  0100               	movlb	0	; () banked
  2600  004A56  6FAD               	movwf	___fladd@a& (0+255),b
  2601  004A58  0E00               	movlw	0
  2602  004A5A  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  2603  004A5C  0EC8               	movlw	200
  2604  004A5E  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  2605  004A60  0E42               	movlw	66
  2606  004A62  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  2607  004A64  EC3D  F015         	call	___fladd	;wreg free
  2608  004A68  C0A9  F13C         	movff	?___fladd,_x
  2609  004A6C  C0AA  F13D         	movff	?___fladd+1,_x+1
  2610  004A70  C0AB  F13E         	movff	?___fladd+2,_x+2
  2611  004A74  C0AC  F13F         	movff	?___fladd+3,_x+3
  2612                           
  2613                           ;parcheggio.c: 400: x = sqrt(x);
  2614  004A78  C13C  F0C1         	movff	_x,sqrt@a
  2615  004A7C  C13D  F0C2         	movff	_x+1,sqrt@a+1
  2616  004A80  C13E  F0C3         	movff	_x+2,sqrt@a+2
  2617  004A84  C13F  F0C4         	movff	_x+3,sqrt@a+3
  2618  004A88  EC16  F01C         	call	_sqrt	;wreg free
  2619  004A8C  C0C1  F13C         	movff	?_sqrt,_x
  2620  004A90  C0C2  F13D         	movff	?_sqrt+1,_x+1
  2621  004A94  C0C3  F13E         	movff	?_sqrt+2,_x+2
  2622  004A98  C0C4  F13F         	movff	?_sqrt+3,_x+3
  2623                           
  2624                           ;parcheggio.c: 401: z = alignment_gap / x;
  2625  004A9C  C0E4  F077         	movff	_alignment_gap,___fldiv@b
  2626  004AA0  C0E5  F078         	movff	_alignment_gap+1,___fldiv@b+1
  2627  004AA4  C0E6  F079         	movff	_alignment_gap+2,___fldiv@b+2
  2628  004AA8  C0E7  F07A         	movff	_alignment_gap+3,___fldiv@b+3
  2629  004AAC  C13C  F07B         	movff	_x,___fldiv@a
  2630  004AB0  C13D  F07C         	movff	_x+1,___fldiv@a+1
  2631  004AB4  C13E  F07D         	movff	_x+2,___fldiv@a+2
  2632  004AB8  C13F  F07E         	movff	_x+3,___fldiv@a+3
  2633  004ABC  ECFB  F01D         	call	___fldiv	;wreg free
  2634  004AC0  C077  F140         	movff	?___fldiv,_z
  2635  004AC4  C078  F141         	movff	?___fldiv+1,_z+1
  2636  004AC8  C079  F142         	movff	?___fldiv+2,_z+2
  2637  004ACC  C07A  F143         	movff	?___fldiv+3,_z+3
  2638                           
  2639                           ;parcheggio.c: 402: z = asin(z);
  2640  004AD0  C140  F0DE         	movff	_z,asin@x
  2641  004AD4  C141  F0DF         	movff	_z+1,asin@x+1
  2642  004AD8  C142  F0E0         	movff	_z+2,asin@x+2
  2643  004ADC  C143  F0E1         	movff	_z+3,asin@x+3
  2644  004AE0  EC36  F023         	call	_asin	;wreg free
  2645  004AE4  C0DE  F140         	movff	?_asin,_z
  2646  004AE8  C0DF  F141         	movff	?_asin+1,_z+1
  2647  004AEC  C0E0  F142         	movff	?_asin+2,_z+2
  2648  004AF0  C0E1  F143         	movff	?_asin+3,_z+3
  2649                           
  2650                           ;parcheggio.c: 403: z = z / 3.14159265358979323846 * 180;
  2651  004AF4  0EDB               	movlw	219
  2652  004AF6  0100               	movlb	0	; () banked
  2653  004AF8  6F7B               	movwf	___fldiv@a& (0+255),b
  2654  004AFA  0E0F               	movlw	15
  2655  004AFC  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  2656  004AFE  0E49               	movlw	73
  2657  004B00  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  2658  004B02  0E40               	movlw	64
  2659  004B04  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  2660  004B06  C140  F077         	movff	_z,___fldiv@b
  2661  004B0A  C141  F078         	movff	_z+1,___fldiv@b+1
  2662  004B0E  C142  F079         	movff	_z+2,___fldiv@b+2
  2663  004B12  C143  F07A         	movff	_z+3,___fldiv@b+3
  2664  004B16  ECFB  F01D         	call	___fldiv	;wreg free
  2665  004B1A  C077  F090         	movff	?___fldiv,___flmul@b
  2666  004B1E  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  2667  004B22  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  2668  004B26  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  2669  004B2A  0E00               	movlw	0
  2670  004B2C  0100               	movlb	0	; () banked
  2671  004B2E  6F94               	movwf	___flmul@a& (0+255),b
  2672  004B30  0E00               	movlw	0
  2673  004B32  6F95               	movwf	(___flmul@a+1)& (0+255),b
  2674  004B34  0E34               	movlw	52
  2675  004B36  6F96               	movwf	(___flmul@a+2)& (0+255),b
  2676  004B38  0E43               	movlw	67
  2677  004B3A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  2678  004B3C  EC91  F017         	call	___flmul	;wreg free
  2679  004B40  C090  F140         	movff	?___flmul,_z
  2680  004B44  C091  F141         	movff	?___flmul+1,_z+1
  2681  004B48  C092  F142         	movff	?___flmul+2,_z+2
  2682  004B4C  C093  F143         	movff	?___flmul+3,_z+3
  2683                           
  2684                           ;parcheggio.c: 404: data_correction[0] = z;
  2685  004B50  C140  F0C1         	movff	_z,___fltol@f1
  2686  004B54  C141  F0C2         	movff	_z+1,___fltol@f1+1
  2687  004B58  C142  F0C3         	movff	_z+2,___fltol@f1+2
  2688  004B5C  C143  F0C4         	movff	_z+3,___fltol@f1+3
  2689  004B60  EC54  F02C         	call	___fltol	;wreg free
  2690  004B64  0100               	movlb	0	; () banked
  2691  004B66  51C1               	movf	?___fltol& (0+255),w,b
  2692  004B68  0101               	movlb	1	; () banked
  2693  004B6A  6F6D               	movwf	_data_correction& (0+255),b
  2694                           
  2695                           ; BSR set to: 1
  2696                           ;parcheggio.c: 406: if (sensor_distance[0] < sensor_distance[1]) {
  2697  004B6C  5026               	movf	_sensor_distance+2,w,c	;volatile
  2698  004B6E  5C24               	subwf	_sensor_distance,w,c	;volatile
  2699  004B70  5027               	movf	_sensor_distance+3,w,c	;volatile
  2700  004B72  5825               	subwfb	_sensor_distance+1,w,c	;volatile
  2701  004B74  B0D8               	btfsc	status,0,c
  2702  004B76  D002               	goto	l7343
  2703                           
  2704                           ; BSR set to: 1
  2705                           ;parcheggio.c: 407: data_correction[1] = 0;
  2706  004B78  0E00               	movlw	0
  2707  004B7A  D001               	goto	L1
  2708  004B7C                     l7343:
  2709                           
  2710                           ; BSR set to: 1
  2711                           ;parcheggio.c: 409: data_correction[1] = 1;
  2712  004B7C  0E01               	movlw	1
  2713  004B7E                     L1:
  2714  004B7E  0101               	movlb	1	; () banked
  2715  004B80  6F6E               	movwf	(_data_correction+1)& (0+255),b
  2716                           
  2717                           ; BSR set to: 1
  2718                           ;parcheggio.c: 410: }
  2719                           ;parcheggio.c: 411: if ((old_alignment_gap != alignment_gap) || (old_data_correction != 
      +                          data_correction[1])) {
  2720                           
  2721                           ; BSR set to: 1
  2722  004B82  0100               	movlb	0	; () banked
  2723  004B84  51E4               	movf	_alignment_gap& (0+255),w,b
  2724  004B86  0101               	movlb	1	; () banked
  2725  004B88  1934               	xorwf	_old_alignment_gap& (0+255),w,b
  2726  004B8A  E117               	bnz	l807
  2727  004B8C  0100               	movlb	0	; () banked
  2728  004B8E  51E5               	movf	(_alignment_gap+1)& (0+255),w,b
  2729  004B90  0101               	movlb	1	; () banked
  2730  004B92  1935               	xorwf	(_old_alignment_gap+1)& (0+255),w,b
  2731  004B94  E112               	bnz	l807
  2732  004B96  0100               	movlb	0	; () banked
  2733  004B98  51E6               	movf	(_alignment_gap+2)& (0+255),w,b
  2734  004B9A  0101               	movlb	1	; () banked
  2735  004B9C  1936               	xorwf	(_old_alignment_gap+2)& (0+255),w,b
  2736  004B9E  E10D               	bnz	l807
  2737  004BA0  0100               	movlb	0	; () banked
  2738  004BA2  51E7               	movf	(_alignment_gap+3)& (0+255),w,b
  2739  004BA4  0101               	movlb	1	; () banked
  2740  004BA6  1937               	xorwf	(_old_alignment_gap+3)& (0+255),w,b
  2741  004BA8  A4D8               	btfss	status,2,c
  2742  004BAA  D007               	goto	l807
  2743                           
  2744                           ; BSR set to: 1
  2745  004BAC  0E00               	movlw	0
  2746  004BAE  B047               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2747  004BB0  0E01               	movlw	1
  2748  004BB2  0101               	movlb	1	; () banked
  2749  004BB4  196E               	xorwf	(_data_correction+1)& (0+255),w,b
  2750  004BB6  B4D8               	btfsc	status,2,c
  2751  004BB8  0012               	return	
  2752  004BBA                     l807:
  2753                           
  2754                           ; BSR set to: 1
  2755                           ;parcheggio.c: 412: old_alignment_gap = alignment_gap;
  2756  004BBA  C0E4  F134         	movff	_alignment_gap,_old_alignment_gap
  2757  004BBE  C0E5  F135         	movff	_alignment_gap+1,_old_alignment_gap+1
  2758  004BC2  C0E6  F136         	movff	_alignment_gap+2,_old_alignment_gap+2
  2759  004BC6  C0E7  F137         	movff	_alignment_gap+3,_old_alignment_gap+3
  2760                           
  2761                           ;parcheggio.c: 413: old_data_correction = data_correction[1];
  2762  004BCA  0101               	movlb	1	; () banked
  2763  004BCC  A16E               	btfss	(_data_correction+1)& (0+255),0,b
  2764  004BCE  D002               	goto	u9470
  2765  004BD0  8047               	bsf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2766  004BD2  D001               	goto	l7349
  2767  004BD4                     u9470:
  2768  004BD4  9047               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2769  004BD6                     l7349:
  2770                           
  2771                           ;parcheggio.c: 414: can_send();
  2772  004BD6  EC9B  F02A         	call	_can_send	;wreg free
  2773                           
  2774                           ;parcheggio.c: 415: }
  2775                           ;parcheggio.c: 416: } else if (data_correction[0] != old_data_correction) {
  2776  004BDA  0012               	return	
  2777  004BDC                     l7351:
  2778  004BDC  0E00               	movlw	0
  2779  004BDE  B047               	btfsc	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2780  004BE0  0E01               	movlw	1
  2781  004BE2  0101               	movlb	1	; () banked
  2782  004BE4  196D               	xorwf	_data_correction& (0+255),w,b
  2783  004BE6  B4D8               	btfsc	status,2,c
  2784  004BE8  0012               	return	
  2785                           
  2786                           ; BSR set to: 1
  2787                           ;parcheggio.c: 417: data_correction[0] = 0;
  2788  004BEA  0E00               	movlw	0
  2789  004BEC  0101               	movlb	1	; () banked
  2790  004BEE  6F6D               	movwf	_data_correction& (0+255),b
  2791                           
  2792                           ; BSR set to: 1
  2793                           ;parcheggio.c: 418: old_data_correction = 0;
  2794  004BF0  9047               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2795                           
  2796                           ; BSR set to: 1
  2797                           ;parcheggio.c: 419: can_send();
  2798  004BF2  EC9B  F02A         	call	_can_send	;wreg free
  2799                           
  2800                           ;parcheggio.c: 420: }
  2801                           ;parcheggio.c: 421: } else {
  2802  004BF6  0012               	return	
  2803  004BF8                     l801:
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;parcheggio.c: 422: if (old_data_correction != 0) {
  2807  004BF8  A047               	btfss	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2808  004BFA  0012               	return	
  2809                           
  2810                           ; BSR set to: 0
  2811                           ;parcheggio.c: 423: data_correction[0] = 0;
  2812  004BFC  0E00               	movlw	0
  2813  004BFE  0101               	movlb	1	; () banked
  2814  004C00  6F6D               	movwf	_data_correction& (0+255),b
  2815                           
  2816                           ; BSR set to: 1
  2817                           ;parcheggio.c: 424: old_data_correction = 0;
  2818  004C02  9047               	bcf	_old_data_correction/(0+8),_old_data_correction& (0+7),c	;volatile
  2819                           
  2820                           ; BSR set to: 1
  2821                           ;parcheggio.c: 425: can_send();
  2822  004C04  EC9B  F02A         	call	_can_send	;wreg free
  2823  004C08  0012               	return	
  2824  004C0A                     __end_of_parallelo:
  2825                           	opt stack 0
  2826                           tblptru	equ	0xFF8
  2827                           tblptrh	equ	0xFF7
  2828                           tblptrl	equ	0xFF6
  2829                           tablat	equ	0xFF5
  2830                           postinc0	equ	0xFEE
  2831                           wreg	equ	0xFE8
  2832                           postdec1	equ	0xFE5
  2833                           fsr1l	equ	0xFE1
  2834                           postinc2	equ	0xFDE
  2835                           postdec2	equ	0xFDD
  2836                           status	equ	0xFD8
  2837                           
  2838 ;; *************** function _can_send *****************
  2839 ;; Defined at:
  2840 ;;		line 371 in file "parcheggio.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;		None
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  data_correct    0   39[BANK0 ] unsigned char [0]
  2845 ;; Return value:  Size  Location     Type
  2846 ;;		None               void
  2847 ;; Registers used:
  2848 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2858 ;;Total ram usage:        0 bytes
  2859 ;; Hardware stack levels used:    1
  2860 ;; Hardware stack levels required when called:    5
  2861 ;; This function calls:
  2862 ;;		_CANisTxReady
  2863 ;;		_CANsendMessage
  2864 ;; This function is called by:
  2865 ;;		_park_routine
  2866 ;;		_parallelo
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           
  2870                           	psect	text4
  2871  005536                     __ptext4:
  2872                           	opt stack 0
  2873  005536                     _can_send:
  2874                           	opt stack 23
  2875                           
  2876                           ;parcheggio.c: 372: if (PORTBbits.RB5 == 1) {
  2877                           
  2878                           ;incstack = 0
  2879  005536  AA81               	btfss	3969,5,c	;volatile
  2880  005538  D063               	goto	l7251
  2881  00553A                     l7231:
  2882  00553A  ECBC  F02F         	call	_CANisTxReady	;wreg free
  2883  00553E  06E8               	decf	wreg,f,c
  2884  005540  A4D8               	btfss	status,2,c
  2885  005542  D7FB               	goto	l7231
  2886                           
  2887                           ;parcheggio.c: 374: CANsendMessage(0b00000000101, data_steering, 8, CAN_CONFIG_STD_MSG &
      +                           CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2888  005544  0E05               	movlw	5
  2889  005546  0100               	movlb	0	; () banked
  2890  005548  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2891  00554A  0E00               	movlw	0
  2892  00554C  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2893  00554E  0E00               	movlw	0
  2894  005550  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2895  005552  0E00               	movlw	0
  2896  005554  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2897  005556  0E7D               	movlw	low _data_steering
  2898  005558  0100               	movlb	0	; () banked
  2899  00555A  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2900  00555C  0E01               	movlw	high _data_steering
  2901  00555E  0100               	movlb	0	; () banked
  2902  005560  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2903  005562  0E08               	movlw	8
  2904  005564  0100               	movlb	0	; () banked
  2905  005566  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2906  005568  0EBC               	movlw	188
  2907  00556A  0100               	movlb	0	; () banked
  2908  00556C  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2909  00556E  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2910                           
  2911                           ;parcheggio.c: 375: data_speed[0] = set_speed;
  2912  005572  C14C  F175         	movff	_set_speed,_data_speed
  2913                           
  2914                           ;parcheggio.c: 376: data_speed[1] = (set_speed >> 8);
  2915  005576  0101               	movlb	1	; () banked
  2916  005578  514D               	movf	(_set_speed+1)& (0+255),w,b
  2917  00557A  0101               	movlb	1	; () banked
  2918  00557C  6F76               	movwf	(_data_speed+1)& (0+255),b
  2919                           
  2920                           ; BSR set to: 1
  2921                           ;parcheggio.c: 377: data_speed[2] = dir;
  2922  00557E  0E00               	movlw	0
  2923  005580  B446               	btfsc	_dir/(0+8),_dir& (0+7),c
  2924  005582  0E01               	movlw	1
  2925  005584  0101               	movlb	1	; () banked
  2926  005586  6F77               	movwf	(_data_speed+2)& (0+255),b
  2927  005588                     l7241:
  2928  005588  ECBC  F02F         	call	_CANisTxReady	;wreg free
  2929  00558C  06E8               	decf	wreg,f,c
  2930  00558E  A4D8               	btfss	status,2,c
  2931  005590  D7FB               	goto	l7241
  2932                           
  2933                           ;parcheggio.c: 379: CANsendMessage(0b00000000011, data_speed, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2934  005592  0E03               	movlw	3
  2935  005594  0100               	movlb	0	; () banked
  2936  005596  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2937  005598  0E00               	movlw	0
  2938  00559A  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2939  00559C  0E00               	movlw	0
  2940  00559E  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2941  0055A0  0E00               	movlw	0
  2942  0055A2  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2943  0055A4  0E75               	movlw	low _data_speed
  2944  0055A6  0100               	movlb	0	; () banked
  2945  0055A8  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2946  0055AA  0E01               	movlw	high _data_speed
  2947  0055AC  0100               	movlb	0	; () banked
  2948  0055AE  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2949  0055B0  0E08               	movlw	8
  2950  0055B2  0100               	movlb	0	; () banked
  2951  0055B4  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2952  0055B6  0EBC               	movlw	188
  2953  0055B8  0100               	movlb	0	; () banked
  2954  0055BA  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2955  0055BC  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2956  0055C0                     l7245:
  2957  0055C0  ECBC  F02F         	call	_CANisTxReady	;wreg free
  2958  0055C4  06E8               	decf	wreg,f,c
  2959  0055C6  A4D8               	btfss	status,2,c
  2960  0055C8  D7FB               	goto	l7245
  2961                           
  2962                           ;parcheggio.c: 381: data_brake[1] = 0;
  2963  0055CA  0E00               	movlw	0
  2964  0055CC  0101               	movlb	1	; () banked
  2965  0055CE  6F66               	movwf	(_data_brake+1)& (0+255),b
  2966                           
  2967                           ; BSR set to: 1
  2968                           ;parcheggio.c: 382: CANsendMessage(0b00000000100, data_brake, 8, CAN_CONFIG_STD_MSG & CA
      +                          N_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2969  0055D0  0E04               	movlw	4
  2970  0055D2  0100               	movlb	0	; () banked
  2971  0055D4  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  2972  0055D6  0E00               	movlw	0
  2973  0055D8  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  2974  0055DA  0E00               	movlw	0
  2975  0055DC  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  2976  0055DE  0E00               	movlw	0
  2977  0055E0  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  2978  0055E2  0E65               	movlw	low _data_brake
  2979  0055E4  0100               	movlb	0	; () banked
  2980  0055E6  6F7B               	movwf	CANsendMessage@data& (0+255),b
  2981  0055E8  0E01               	movlw	high _data_brake
  2982  0055EA  0100               	movlb	0	; () banked
  2983  0055EC  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  2984  0055EE  0E08               	movlw	8
  2985  0055F0  0100               	movlb	0	; () banked
  2986  0055F2  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  2987  0055F4  0EBC               	movlw	188
  2988  0055F6  0100               	movlb	0	; () banked
  2989  0055F8  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  2990  0055FA  EC2C  F00C         	call	_CANsendMessage	;wreg free
  2991                           
  2992                           ;parcheggio.c: 383: } else {
  2993  0055FE  0012               	return	
  2994  005600                     l7251:
  2995                           
  2996                           ;parcheggio.c: 384: CANsendMessage(0b00000001110, data_correction, 8, CAN_CONFIG_STD_MSG
      +                           & CAN_NORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  2997  005600  0E0E               	movlw	14
  2998  005602  0100               	movlb	0	; () banked
  2999  005604  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3000  005606  0E00               	movlw	0
  3001  005608  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3002  00560A  0E00               	movlw	0
  3003  00560C  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3004  00560E  0E00               	movlw	0
  3005  005610  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3006  005612  0E6D               	movlw	low _data_correction
  3007  005614  0100               	movlb	0	; () banked
  3008  005616  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3009  005618  0E01               	movlw	high _data_correction
  3010  00561A  0100               	movlb	0	; () banked
  3011  00561C  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3012  00561E  0E08               	movlw	8
  3013  005620  0100               	movlb	0	; () banked
  3014  005622  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3015  005624  0EBC               	movlw	188
  3016  005626  0100               	movlb	0	; () banked
  3017  005628  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3018  00562A  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3019                           
  3020                           ;parcheggio.c: 385: unsigned char data_correction1[];
  3021                           ;parcheggio.c: 386: data_correction1[0] = data_correction[0];
  3022  00562E  EE20  F087         	lfsr	2,can_send@data_correction1
  3023  005632  C16D  FFDF         	movff	_data_correction,indf2
  3024                           
  3025                           ;parcheggio.c: 387: data_correction1[1] = 0;
  3026  005636  0E00               	movlw	0
  3027  005638  CFE8 F088          	movff	wreg,can_send@data_correction1+1
  3028                           
  3029                           ;parcheggio.c: 388: CANsendMessage(0xAA, data_correction1, 8, CAN_CONFIG_STD_MSG & CAN_N
      +                          ORMAL_TX_FRAME & CAN_TX_PRIORITY_0);
  3030  00563C  0EAA               	movlw	170
  3031  00563E  0100               	movlb	0	; () banked
  3032  005640  6F77               	movwf	CANsendMessage@identifier& (0+255),b
  3033  005642  0E00               	movlw	0
  3034  005644  6F78               	movwf	(CANsendMessage@identifier+1)& (0+255),b
  3035  005646  0E00               	movlw	0
  3036  005648  6F79               	movwf	(CANsendMessage@identifier+2)& (0+255),b
  3037  00564A  0E00               	movlw	0
  3038  00564C  6F7A               	movwf	(CANsendMessage@identifier+3)& (0+255),b
  3039  00564E  0E87               	movlw	low can_send@data_correction1
  3040  005650  0100               	movlb	0	; () banked
  3041  005652  6F7B               	movwf	CANsendMessage@data& (0+255),b
  3042  005654  0E00               	movlw	high can_send@data_correction1
  3043  005656  0100               	movlb	0	; () banked
  3044  005658  6F7C               	movwf	(CANsendMessage@data+1)& (0+255),b
  3045  00565A  0E08               	movlw	8
  3046  00565C  0100               	movlb	0	; () banked
  3047  00565E  6F7D               	movwf	CANsendMessage@dataLength& (0+255),b
  3048  005660  0EBC               	movlw	188
  3049  005662  0100               	movlb	0	; () banked
  3050  005664  6F7E               	movwf	CANsendMessage@flags& (0+255),b
  3051  005666  EC2C  F00C         	call	_CANsendMessage	;wreg free
  3052  00566A  0012               	return	
  3053  00566C                     __end_of_can_send:
  3054                           	opt stack 0
  3055                           tblptru	equ	0xFF8
  3056                           tblptrh	equ	0xFF7
  3057                           tblptrl	equ	0xFF6
  3058                           tablat	equ	0xFF5
  3059                           postinc0	equ	0xFEE
  3060                           wreg	equ	0xFE8
  3061                           postdec1	equ	0xFE5
  3062                           fsr1l	equ	0xFE1
  3063                           indf2	equ	0xFDF
  3064                           postinc2	equ	0xFDE
  3065                           postdec2	equ	0xFDD
  3066                           status	equ	0xFD8
  3067                           
  3068 ;; *************** function _CANsendMessage *****************
  3069 ;; Defined at:
  3070 ;;		line 295 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  identifier      4   23[BANK0 ] unsigned long 
  3073 ;;  data            2   27[BANK0 ] PTR unsigned char 
  3074 ;;		 -> can_send@data_correction1(0), data_speed(8), data_brake(8), data_steering(8), 
  3075 ;;		 -> data_correction(8), data_test(8), data(8), 
  3076 ;;  dataLength      1   29[BANK0 ] unsigned char 
  3077 ;;  flags           1   30[BANK0 ] enum E16335
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;  tamp            4   35[BANK0 ] unsigned long 
  3080 ;; Return value:  Size  Location     Type
  3081 ;;		None               void
  3082 ;; Registers used:
  3083 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3089 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3090 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3091 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3092 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3093 ;;Total ram usage:       16 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; Hardware stack levels required when called:    4
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		_park_search
  3100 ;;		_park_routine
  3101 ;;		_can_send
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text5
  3106  001858                     __ptext5:
  3107                           	opt stack 0
  3108  001858                     _CANsendMessage:
  3109                           	opt stack 23
  3110                           
  3111                           ;inc\CANlib.h: 297: unsigned long tamp;
  3112                           ;inc\CANlib.h: 299: if (TXB0CONbits.TXREQ == 0)
  3113                           
  3114                           ;incstack = 0
  3115  001858  010F               	movlb	15	; () banked
  3116  00185A  B740               	btfsc	64,3,b	;volatile
  3117  00185C  D13F               	goto	l363
  3118                           
  3119                           ; BSR set to: 15
  3120                           ;inc\CANlib.h: 300: { TXB0DLC = dataLength;
  3121  00185E  C07D  FF45         	movff	CANsendMessage@dataLength,3909	;volatile
  3122                           
  3123                           ;inc\CANlib.h: 301: if (0b01000000 & flags)
  3124  001862  0100               	movlb	0	; () banked
  3125  001864  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3126  001866  D003               	goto	l364
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;inc\CANlib.h: 302: TXB0DLCbits.TXRTR = 0x01;
  3130  001868  010F               	movlb	15	; () banked
  3131  00186A  8D45               	bsf	69,6,b	;volatile
  3132  00186C  D002               	goto	l365
  3133  00186E                     l364:
  3134                           
  3135                           ; BSR set to: 0
  3136                           ;inc\CANlib.h: 303: else
  3137                           ;inc\CANlib.h: 304: TXB0DLCbits.TXRTR = 0x00;
  3138  00186E  010F               	movlb	15	; () banked
  3139  001870  9D45               	bcf	69,6,b	;volatile
  3140  001872                     l365:
  3141                           
  3142                           ; BSR set to: 15
  3143                           ;inc\CANlib.h: 306: if (CAN_TX_FRAME_MASK & flags)
  3144  001872  0100               	movlb	0	; () banked
  3145  001874  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3146  001876  D079               	goto	l366
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;inc\CANlib.h: 307: {
  3150                           ;inc\CANlib.h: 309: tamp = identifier & 0x000000FF;
  3151  001878  0100               	movlb	0	; () banked
  3152  00187A  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3153  00187C  0100               	movlb	0	; () banked
  3154  00187E  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3155  001880  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3156  001882  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3157  001884  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3158                           
  3159                           ; BSR set to: 0
  3160                           ;inc\CANlib.h: 310: TXB0EIDL = (unsigned char) tamp;
  3161  001886  C083  FF44         	movff	CANsendMessage@tamp,3908	;volatile
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;inc\CANlib.h: 312: tamp = identifier & 0x0000FF00;
  3165  00188A  0E00               	movlw	0
  3166  00188C  0100               	movlb	0	; () banked
  3167  00188E  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3168  001890  0100               	movlb	0	; () banked
  3169  001892  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3170  001894  0EFF               	movlw	255
  3171  001896  0100               	movlb	0	; () banked
  3172  001898  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3173  00189A  0100               	movlb	0	; () banked
  3174  00189C  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3175  00189E  0E00               	movlw	0
  3176  0018A0  0100               	movlb	0	; () banked
  3177  0018A2  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3178  0018A4  0100               	movlb	0	; () banked
  3179  0018A6  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3180  0018A8  0E00               	movlw	0
  3181  0018AA  0100               	movlb	0	; () banked
  3182  0018AC  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3183  0018AE  0100               	movlb	0	; () banked
  3184  0018B0  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;inc\CANlib.h: 313: tamp = tamp >> 8;
  3188  0018B2  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3189  0018B6  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3190  0018BA  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3191  0018BE  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3192  0018C2  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3193  0018C6  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3194  0018CA  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3195  0018CE  0100               	movlb	0	; () banked
  3196  0018D0  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3197  0018D2  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3198  0018D6  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3199  0018DA  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3200  0018DE  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3201                           
  3202                           ; BSR set to: 0
  3203                           ;inc\CANlib.h: 314: TXB0EIDH = (unsigned char) tamp;
  3204  0018E2  C083  FF43         	movff	CANsendMessage@tamp,3907	;volatile
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;inc\CANlib.h: 316: TXB0SIDL = 0x00;
  3208  0018E6  0E00               	movlw	0
  3209  0018E8  010F               	movlb	15	; () banked
  3210  0018EA  6F42               	movwf	66,b	;volatile
  3211                           
  3212                           ; BSR set to: 15
  3213                           ;inc\CANlib.h: 317: TXB0SIDLbits.EXIDE = 0x01;
  3214  0018EC  010F               	movlb	15	; () banked
  3215  0018EE  8742               	bsf	66,3,b	;volatile
  3216                           
  3217                           ; BSR set to: 15
  3218                           ;inc\CANlib.h: 319: if (identifier & 0x00010000)
  3219  0018F0  0100               	movlb	0	; () banked
  3220  0018F2  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3221  0018F4  D002               	goto	l367
  3222                           
  3223                           ; BSR set to: 0
  3224                           ;inc\CANlib.h: 320: TXB0SIDLbits.EID16 = 0x01;
  3225  0018F6  010F               	movlb	15	; () banked
  3226  0018F8  8142               	bsf	66,0,b	;volatile
  3227  0018FA                     l367:
  3228                           
  3229                           ;inc\CANlib.h: 321: if (identifier & 0x00020000)
  3230  0018FA  0100               	movlb	0	; () banked
  3231  0018FC  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3232  0018FE  D002               	goto	l368
  3233                           
  3234                           ; BSR set to: 0
  3235                           ;inc\CANlib.h: 322: TXB0SIDLbits.EID17 = 0x01;
  3236  001900  010F               	movlb	15	; () banked
  3237  001902  8342               	bsf	66,1,b	;volatile
  3238  001904                     l368:
  3239                           
  3240                           ;inc\CANlib.h: 323: if (identifier & 0x00040000)
  3241  001904  0100               	movlb	0	; () banked
  3242  001906  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3243  001908  D002               	goto	l369
  3244                           
  3245                           ; BSR set to: 0
  3246                           ;inc\CANlib.h: 324: TXB0SIDLbits.SID0 = 0x01;
  3247  00190A  010F               	movlb	15	; () banked
  3248  00190C  8B42               	bsf	66,5,b	;volatile
  3249  00190E                     l369:
  3250                           
  3251                           ;inc\CANlib.h: 325: if (identifier & 0x00080000)
  3252  00190E  0100               	movlb	0	; () banked
  3253  001910  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3254  001912  D002               	goto	l370
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;inc\CANlib.h: 326: TXB0SIDLbits.SID1 = 0x01;
  3258  001914  010F               	movlb	15	; () banked
  3259  001916  8D42               	bsf	66,6,b	;volatile
  3260  001918                     l370:
  3261                           
  3262                           ;inc\CANlib.h: 327: if (identifier & 0x00100000)
  3263  001918  0100               	movlb	0	; () banked
  3264  00191A  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3265  00191C  D002               	goto	l6835
  3266                           
  3267                           ; BSR set to: 0
  3268                           ;inc\CANlib.h: 328: TXB0SIDLbits.SID2 = 0x01;
  3269  00191E  010F               	movlb	15	; () banked
  3270  001920  8F42               	bsf	66,7,b	;volatile
  3271  001922                     l6835:
  3272                           
  3273                           ;inc\CANlib.h: 330: tamp = (identifier >> 21);
  3274  001922  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3275  001926  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3276  00192A  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3277  00192E  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3278  001932  0E16               	movlw	22
  3279  001934  D006               	goto	u8730
  3280  001936                     u8735:
  3281  001936  0100               	movlb	0	; () banked
  3282  001938  90D8               	bcf	status,0,c
  3283  00193A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3284  00193C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3285  00193E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3286  001940  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3287  001942                     u8730:
  3288  001942  2EE8               	decfsz	wreg,f,c
  3289  001944  D7F8               	goto	u8735
  3290  001946  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3291  00194A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3292  00194E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3293  001952  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;inc\CANlib.h: 331: tamp = tamp & 0x000000FF;
  3297  001956  0100               	movlb	0	; () banked
  3298  001958  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3299  00195A  0100               	movlb	0	; () banked
  3300  00195C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3301  00195E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3302  001960  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3303  001962  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3304                           
  3305                           ; BSR set to: 0
  3306                           ;inc\CANlib.h: 332: TXB0SIDH = (unsigned char) tamp;
  3307  001964  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3308                           
  3309                           ;inc\CANlib.h: 333: }
  3310  001968  D059               	goto	l6855
  3311  00196A                     l366:
  3312                           
  3313                           ; BSR set to: 0
  3314                           ;inc\CANlib.h: 335: else
  3315                           ;inc\CANlib.h: 337: {
  3316                           ;inc\CANlib.h: 338: TXB0SIDLbits.EXIDE = 0x00;
  3317  00196A  010F               	movlb	15	; () banked
  3318  00196C  9742               	bcf	66,3,b	;volatile
  3319                           
  3320                           ; BSR set to: 15
  3321                           ;inc\CANlib.h: 340: tamp = (identifier >> 3);
  3322  00196E  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3323  001972  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3324  001976  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3325  00197A  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3326  00197E  0E04               	movlw	4
  3327  001980  D006               	goto	u8740
  3328  001982                     u8745:
  3329  001982  0100               	movlb	0	; () banked
  3330  001984  90D8               	bcf	status,0,c
  3331  001986  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3332  001988  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3333  00198A  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3334  00198C  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3335  00198E                     u8740:
  3336  00198E  2EE8               	decfsz	wreg,f,c
  3337  001990  D7F8               	goto	u8745
  3338  001992  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3339  001996  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3340  00199A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3341  00199E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3342                           
  3343                           ; BSR set to: 0
  3344                           ;inc\CANlib.h: 341: tamp = tamp & 0x000000FF;
  3345  0019A2  0100               	movlb	0	; () banked
  3346  0019A4  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3347  0019A6  0100               	movlb	0	; () banked
  3348  0019A8  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3349  0019AA  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3350  0019AC  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3351  0019AE  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3352                           
  3353                           ; BSR set to: 0
  3354                           ;inc\CANlib.h: 342: TXB0SIDH = (unsigned char) tamp;
  3355  0019B0  C083  FF41         	movff	CANsendMessage@tamp,3905	;volatile
  3356                           
  3357                           ; BSR set to: 0
  3358                           ;inc\CANlib.h: 344: tamp = identifier & 0x00000007;
  3359  0019B4  0E07               	movlw	7
  3360  0019B6  0100               	movlb	0	; () banked
  3361  0019B8  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3362  0019BA  0100               	movlb	0	; () banked
  3363  0019BC  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3364  0019BE  0E00               	movlw	0
  3365  0019C0  0100               	movlb	0	; () banked
  3366  0019C2  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3367  0019C4  0100               	movlb	0	; () banked
  3368  0019C6  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3369  0019C8  0E00               	movlw	0
  3370  0019CA  0100               	movlb	0	; () banked
  3371  0019CC  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3372  0019CE  0100               	movlb	0	; () banked
  3373  0019D0  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3374  0019D2  0E00               	movlw	0
  3375  0019D4  0100               	movlb	0	; () banked
  3376  0019D6  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3377  0019D8  0100               	movlb	0	; () banked
  3378  0019DA  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;inc\CANlib.h: 345: tamp = tamp << 5;
  3382  0019DC  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3383  0019E0  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3384  0019E4  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3385  0019E8  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3386  0019EC  0E05               	movlw	5
  3387  0019EE                     u8755:
  3388  0019EE  90D8               	bcf	status,0,c
  3389  0019F0  0100               	movlb	0	; () banked
  3390  0019F2  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3391  0019F4  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3392  0019F6  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3393  0019F8  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3394  0019FA  2EE8               	decfsz	wreg,f,c
  3395  0019FC  D7F8               	goto	u8755
  3396  0019FE  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3397  001A02  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3398  001A06  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3399  001A0A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3400                           
  3401                           ; BSR set to: 0
  3402                           ;inc\CANlib.h: 346: TXB0SIDL = TXB0SIDL & 0b00011111;
  3403  001A0E  010F               	movlb	15	; () banked
  3404  001A10  5142               	movf	66,w,b	;volatile
  3405  001A12  0B1F               	andlw	31
  3406  001A14  010F               	movlb	15	; () banked
  3407  001A16  6F42               	movwf	66,b	;volatile
  3408                           
  3409                           ; BSR set to: 15
  3410                           ;inc\CANlib.h: 347: TXB0SIDL = (unsigned char) tamp;
  3411  001A18  C083  FF42         	movff	CANsendMessage@tamp,3906	;volatile
  3412  001A1C                     l6855:
  3413                           
  3414                           ;inc\CANlib.h: 348: }
  3415                           ;inc\CANlib.h: 350: if (0b00000001 & flags)
  3416  001A1C  0100               	movlb	0	; () banked
  3417  001A1E  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3418  001A20  D003               	goto	l373
  3419                           
  3420                           ; BSR set to: 0
  3421                           ;inc\CANlib.h: 351: TXB0CONbits.TXPRI0 = 0x01;
  3422  001A22  010F               	movlb	15	; () banked
  3423  001A24  8140               	bsf	64,0,b	;volatile
  3424  001A26  D002               	goto	l374
  3425  001A28                     l373:
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;inc\CANlib.h: 352: else
  3429                           ;inc\CANlib.h: 353: TXB0CONbits.TXPRI0 = 0x00;
  3430  001A28  010F               	movlb	15	; () banked
  3431  001A2A  9140               	bcf	64,0,b	;volatile
  3432  001A2C                     l374:
  3433                           
  3434                           ; BSR set to: 15
  3435                           ;inc\CANlib.h: 354: if (0b00000010 & flags)
  3436  001A2C  0100               	movlb	0	; () banked
  3437  001A2E  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  3438  001A30  D003               	goto	l375
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;inc\CANlib.h: 355: TXB0CONbits.TXPRI1 = 0x01;
  3442  001A32  010F               	movlb	15	; () banked
  3443  001A34  8340               	bsf	64,1,b	;volatile
  3444  001A36  D002               	goto	l6861
  3445  001A38                     l375:
  3446                           
  3447                           ; BSR set to: 0
  3448                           ;inc\CANlib.h: 356: else
  3449                           ;inc\CANlib.h: 357: TXB0CONbits.TXPRI1 = 0x00;
  3450  001A38  010F               	movlb	15	; () banked
  3451  001A3A  9340               	bcf	64,1,b	;volatile
  3452  001A3C                     l6861:
  3453                           
  3454                           ; BSR set to: 15
  3455                           ;inc\CANlib.h: 359: TXB0D0 = data[0];
  3456  001A3C  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  3457  001A40  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3458  001A44  50DF               	movf	indf2,w,c
  3459  001A46  010F               	movlb	15	; () banked
  3460  001A48  6F46               	movwf	70,b	;volatile
  3461                           
  3462                           ; BSR set to: 15
  3463                           ;inc\CANlib.h: 360: TXB0D1 = data[1];
  3464  001A4A  0100               	movlb	0	; () banked
  3465  001A4C  EE20 F001          	lfsr	2,1
  3466  001A50  517B               	movf	CANsendMessage@data& (0+255),w,b
  3467  001A52  26D9               	addwf	fsr2l,f,c
  3468  001A54  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3469  001A56  22DA               	addwfc	fsr2h,f,c
  3470  001A58  50DF               	movf	indf2,w,c
  3471  001A5A  010F               	movlb	15	; () banked
  3472  001A5C  6F47               	movwf	71,b	;volatile
  3473                           
  3474                           ; BSR set to: 15
  3475                           ;inc\CANlib.h: 361: TXB0D2 = data[2];
  3476  001A5E  0100               	movlb	0	; () banked
  3477  001A60  EE20 F002          	lfsr	2,2
  3478  001A64  517B               	movf	CANsendMessage@data& (0+255),w,b
  3479  001A66  26D9               	addwf	fsr2l,f,c
  3480  001A68  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3481  001A6A  22DA               	addwfc	fsr2h,f,c
  3482  001A6C  50DF               	movf	indf2,w,c
  3483  001A6E  010F               	movlb	15	; () banked
  3484  001A70  6F48               	movwf	72,b	;volatile
  3485                           
  3486                           ; BSR set to: 15
  3487                           ;inc\CANlib.h: 362: TXB0D3 = data[3];
  3488  001A72  0100               	movlb	0	; () banked
  3489  001A74  EE20 F003          	lfsr	2,3
  3490  001A78  517B               	movf	CANsendMessage@data& (0+255),w,b
  3491  001A7A  26D9               	addwf	fsr2l,f,c
  3492  001A7C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3493  001A7E  22DA               	addwfc	fsr2h,f,c
  3494  001A80  50DF               	movf	indf2,w,c
  3495  001A82  010F               	movlb	15	; () banked
  3496  001A84  6F49               	movwf	73,b	;volatile
  3497                           
  3498                           ; BSR set to: 15
  3499                           ;inc\CANlib.h: 363: TXB0D4 = data[4];
  3500  001A86  0100               	movlb	0	; () banked
  3501  001A88  EE20 F004          	lfsr	2,4
  3502  001A8C  517B               	movf	CANsendMessage@data& (0+255),w,b
  3503  001A8E  26D9               	addwf	fsr2l,f,c
  3504  001A90  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3505  001A92  22DA               	addwfc	fsr2h,f,c
  3506  001A94  50DF               	movf	indf2,w,c
  3507  001A96  010F               	movlb	15	; () banked
  3508  001A98  6F4A               	movwf	74,b	;volatile
  3509                           
  3510                           ; BSR set to: 15
  3511                           ;inc\CANlib.h: 364: TXB0D5 = data[5];
  3512  001A9A  0100               	movlb	0	; () banked
  3513  001A9C  EE20 F005          	lfsr	2,5
  3514  001AA0  517B               	movf	CANsendMessage@data& (0+255),w,b
  3515  001AA2  26D9               	addwf	fsr2l,f,c
  3516  001AA4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3517  001AA6  22DA               	addwfc	fsr2h,f,c
  3518  001AA8  50DF               	movf	indf2,w,c
  3519  001AAA  010F               	movlb	15	; () banked
  3520  001AAC  6F4B               	movwf	75,b	;volatile
  3521                           
  3522                           ; BSR set to: 15
  3523                           ;inc\CANlib.h: 365: TXB0D6 = data[6];
  3524  001AAE  0100               	movlb	0	; () banked
  3525  001AB0  EE20 F006          	lfsr	2,6
  3526  001AB4  517B               	movf	CANsendMessage@data& (0+255),w,b
  3527  001AB6  26D9               	addwf	fsr2l,f,c
  3528  001AB8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3529  001ABA  22DA               	addwfc	fsr2h,f,c
  3530  001ABC  50DF               	movf	indf2,w,c
  3531  001ABE  010F               	movlb	15	; () banked
  3532  001AC0  6F4C               	movwf	76,b	;volatile
  3533                           
  3534                           ; BSR set to: 15
  3535                           ;inc\CANlib.h: 366: TXB0D7 = data[7];
  3536  001AC2  0100               	movlb	0	; () banked
  3537  001AC4  EE20 F007          	lfsr	2,7
  3538  001AC8  517B               	movf	CANsendMessage@data& (0+255),w,b
  3539  001ACA  26D9               	addwf	fsr2l,f,c
  3540  001ACC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3541  001ACE  22DA               	addwfc	fsr2h,f,c
  3542  001AD0  50DF               	movf	indf2,w,c
  3543  001AD2  010F               	movlb	15	; () banked
  3544  001AD4  6F4D               	movwf	77,b	;volatile
  3545                           
  3546                           ; BSR set to: 15
  3547                           ;inc\CANlib.h: 368: TXB0CONbits.TXREQ = 0x01;
  3548  001AD6  010F               	movlb	15	; () banked
  3549  001AD8  8740               	bsf	64,3,b	;volatile
  3550                           
  3551                           ; BSR set to: 15
  3552                           ;inc\CANlib.h: 369: return;
  3553  001ADA  0012               	return	
  3554  001ADC                     l363:
  3555                           
  3556                           ; BSR set to: 15
  3557                           ;inc\CANlib.h: 370: }
  3558                           ;inc\CANlib.h: 374: if (TXB1CONbits.TXREQ == 0)
  3559  001ADC  010F               	movlb	15	; () banked
  3560  001ADE  B730               	btfsc	48,3,b	;volatile
  3561  001AE0  D13F               	goto	l378
  3562                           
  3563                           ; BSR set to: 15
  3564                           ;inc\CANlib.h: 375: { TXB1DLC = dataLength;
  3565  001AE2  C07D  FF35         	movff	CANsendMessage@dataLength,3893	;volatile
  3566                           
  3567                           ;inc\CANlib.h: 377: if (0b01000000 & flags)
  3568  001AE6  0100               	movlb	0	; () banked
  3569  001AE8  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  3570  001AEA  D003               	goto	l379
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;inc\CANlib.h: 378: TXB1DLCbits.TXRTR = 0x01;
  3574  001AEC  010F               	movlb	15	; () banked
  3575  001AEE  8D35               	bsf	53,6,b	;volatile
  3576  001AF0  D002               	goto	l380
  3577  001AF2                     l379:
  3578                           
  3579                           ; BSR set to: 0
  3580                           ;inc\CANlib.h: 379: else
  3581                           ;inc\CANlib.h: 380: TXB1DLCbits.TXRTR = 0x00;
  3582  001AF2  010F               	movlb	15	; () banked
  3583  001AF4  9D35               	bcf	53,6,b	;volatile
  3584  001AF6                     l380:
  3585                           
  3586                           ; BSR set to: 15
  3587                           ;inc\CANlib.h: 382: if (CAN_TX_FRAME_MASK & flags)
  3588  001AF6  0100               	movlb	0	; () banked
  3589  001AF8  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  3590  001AFA  D079               	goto	l381
  3591                           
  3592                           ; BSR set to: 0
  3593                           ;inc\CANlib.h: 383: {
  3594                           ;inc\CANlib.h: 384: tamp = identifier & 0x000000FF;
  3595  001AFC  0100               	movlb	0	; () banked
  3596  001AFE  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  3597  001B00  0100               	movlb	0	; () banked
  3598  001B02  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3599  001B04  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3600  001B06  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3601  001B08  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3602                           
  3603                           ; BSR set to: 0
  3604                           ;inc\CANlib.h: 385: TXB1EIDL = (unsigned char) tamp;
  3605  001B0A  C083  FF34         	movff	CANsendMessage@tamp,3892	;volatile
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;inc\CANlib.h: 387: tamp = identifier & 0x0000FF00;
  3609  001B0E  0E00               	movlw	0
  3610  001B10  0100               	movlb	0	; () banked
  3611  001B12  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3612  001B14  0100               	movlb	0	; () banked
  3613  001B16  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3614  001B18  0EFF               	movlw	255
  3615  001B1A  0100               	movlb	0	; () banked
  3616  001B1C  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3617  001B1E  0100               	movlb	0	; () banked
  3618  001B20  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3619  001B22  0E00               	movlw	0
  3620  001B24  0100               	movlb	0	; () banked
  3621  001B26  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3622  001B28  0100               	movlb	0	; () banked
  3623  001B2A  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3624  001B2C  0E00               	movlw	0
  3625  001B2E  0100               	movlb	0	; () banked
  3626  001B30  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3627  001B32  0100               	movlb	0	; () banked
  3628  001B34  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;inc\CANlib.h: 388: tamp = tamp >> 8;
  3632  001B36  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3633  001B3A  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3634  001B3E  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3635  001B42  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3636  001B46  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  3637  001B4A  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  3638  001B4E  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  3639  001B52  0100               	movlb	0	; () banked
  3640  001B54  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  3641  001B56  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3642  001B5A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3643  001B5E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3644  001B62  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3645                           
  3646                           ; BSR set to: 0
  3647                           ;inc\CANlib.h: 389: TXB1EIDH = (unsigned char) tamp;
  3648  001B66  C083  FF33         	movff	CANsendMessage@tamp,3891	;volatile
  3649                           
  3650                           ; BSR set to: 0
  3651                           ;inc\CANlib.h: 391: TXB1SIDL = 0x00;
  3652  001B6A  0E00               	movlw	0
  3653  001B6C  010F               	movlb	15	; () banked
  3654  001B6E  6F32               	movwf	50,b	;volatile
  3655                           
  3656                           ; BSR set to: 15
  3657                           ;inc\CANlib.h: 392: TXB1SIDLbits.EXIDE = 0x01;
  3658  001B70  010F               	movlb	15	; () banked
  3659  001B72  8732               	bsf	50,3,b	;volatile
  3660                           
  3661                           ; BSR set to: 15
  3662                           ;inc\CANlib.h: 394: if (identifier & 0x00010000)
  3663  001B74  0100               	movlb	0	; () banked
  3664  001B76  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  3665  001B78  D002               	goto	l382
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;inc\CANlib.h: 395: TXB1SIDLbits.EID16 = 0x01;
  3669  001B7A  010F               	movlb	15	; () banked
  3670  001B7C  8132               	bsf	50,0,b	;volatile
  3671  001B7E                     l382:
  3672                           
  3673                           ;inc\CANlib.h: 396: if (identifier & 0x00020000)
  3674  001B7E  0100               	movlb	0	; () banked
  3675  001B80  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  3676  001B82  D002               	goto	l383
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;inc\CANlib.h: 397: TXB1SIDLbits.EID17 = 0x01;
  3680  001B84  010F               	movlb	15	; () banked
  3681  001B86  8332               	bsf	50,1,b	;volatile
  3682  001B88                     l383:
  3683                           
  3684                           ;inc\CANlib.h: 398: if (identifier & 0x00040000)
  3685  001B88  0100               	movlb	0	; () banked
  3686  001B8A  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  3687  001B8C  D002               	goto	l384
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;inc\CANlib.h: 399: TXB1SIDLbits.SID0 = 0x01;
  3691  001B8E  010F               	movlb	15	; () banked
  3692  001B90  8B32               	bsf	50,5,b	;volatile
  3693  001B92                     l384:
  3694                           
  3695                           ;inc\CANlib.h: 400: if (identifier & 0x00080000)
  3696  001B92  0100               	movlb	0	; () banked
  3697  001B94  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  3698  001B96  D002               	goto	l385
  3699                           
  3700                           ; BSR set to: 0
  3701                           ;inc\CANlib.h: 401: TXB1SIDLbits.SID1 = 0x01;
  3702  001B98  010F               	movlb	15	; () banked
  3703  001B9A  8D32               	bsf	50,6,b	;volatile
  3704  001B9C                     l385:
  3705                           
  3706                           ;inc\CANlib.h: 402: if (identifier & 0x00100000)
  3707  001B9C  0100               	movlb	0	; () banked
  3708  001B9E  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  3709  001BA0  D002               	goto	l6911
  3710                           
  3711                           ; BSR set to: 0
  3712                           ;inc\CANlib.h: 403: TXB1SIDLbits.SID2 = 0x01;
  3713  001BA2  010F               	movlb	15	; () banked
  3714  001BA4  8F32               	bsf	50,7,b	;volatile
  3715  001BA6                     l6911:
  3716                           
  3717                           ;inc\CANlib.h: 405: tamp = (identifier >> 21);
  3718  001BA6  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3719  001BAA  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3720  001BAE  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3721  001BB2  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3722  001BB6  0E16               	movlw	22
  3723  001BB8  D006               	goto	u8860
  3724  001BBA                     u8865:
  3725  001BBA  0100               	movlb	0	; () banked
  3726  001BBC  90D8               	bcf	status,0,c
  3727  001BBE  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3728  001BC0  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3729  001BC2  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3730  001BC4  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3731  001BC6                     u8860:
  3732  001BC6  2EE8               	decfsz	wreg,f,c
  3733  001BC8  D7F8               	goto	u8865
  3734  001BCA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3735  001BCE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3736  001BD2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3737  001BD6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3738                           
  3739                           ; BSR set to: 0
  3740                           ;inc\CANlib.h: 406: tamp = tamp & 0x000000FF;
  3741  001BDA  0100               	movlb	0	; () banked
  3742  001BDC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3743  001BDE  0100               	movlb	0	; () banked
  3744  001BE0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3745  001BE2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3746  001BE4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3747  001BE6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;inc\CANlib.h: 407: TXB1SIDH = (unsigned char) tamp;
  3751  001BE8  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3752                           
  3753                           ;inc\CANlib.h: 408: }
  3754  001BEC  D059               	goto	l6931
  3755  001BEE                     l381:
  3756                           
  3757                           ; BSR set to: 0
  3758                           ;inc\CANlib.h: 410: else
  3759                           ;inc\CANlib.h: 412: {
  3760                           ;inc\CANlib.h: 413: TXB1SIDLbits.EXIDE = 0x00;
  3761  001BEE  010F               	movlb	15	; () banked
  3762  001BF0  9732               	bcf	50,3,b	;volatile
  3763                           
  3764                           ; BSR set to: 15
  3765                           ;inc\CANlib.h: 415: tamp = (identifier >> 3);
  3766  001BF2  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  3767  001BF6  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  3768  001BFA  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  3769  001BFE  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  3770  001C02  0E04               	movlw	4
  3771  001C04  D006               	goto	u8870
  3772  001C06                     u8875:
  3773  001C06  0100               	movlb	0	; () banked
  3774  001C08  90D8               	bcf	status,0,c
  3775  001C0A  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  3776  001C0C  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  3777  001C0E  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  3778  001C10  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  3779  001C12                     u8870:
  3780  001C12  2EE8               	decfsz	wreg,f,c
  3781  001C14  D7F8               	goto	u8875
  3782  001C16  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3783  001C1A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3784  001C1E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3785  001C22  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;inc\CANlib.h: 416: tamp = tamp & 0x000000FF;
  3789  001C26  0100               	movlb	0	; () banked
  3790  001C28  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  3791  001C2A  0100               	movlb	0	; () banked
  3792  001C2C  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3793  001C2E  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  3794  001C30  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  3795  001C32  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;inc\CANlib.h: 417: TXB1SIDH = (unsigned char) tamp;
  3799  001C34  C083  FF31         	movff	CANsendMessage@tamp,3889	;volatile
  3800                           
  3801                           ; BSR set to: 0
  3802                           ;inc\CANlib.h: 419: tamp = identifier & 0x00000007;
  3803  001C38  0E07               	movlw	7
  3804  001C3A  0100               	movlb	0	; () banked
  3805  001C3C  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  3806  001C3E  0100               	movlb	0	; () banked
  3807  001C40  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  3808  001C42  0E00               	movlw	0
  3809  001C44  0100               	movlb	0	; () banked
  3810  001C46  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  3811  001C48  0100               	movlb	0	; () banked
  3812  001C4A  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  3813  001C4C  0E00               	movlw	0
  3814  001C4E  0100               	movlb	0	; () banked
  3815  001C50  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  3816  001C52  0100               	movlb	0	; () banked
  3817  001C54  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  3818  001C56  0E00               	movlw	0
  3819  001C58  0100               	movlb	0	; () banked
  3820  001C5A  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  3821  001C5C  0100               	movlb	0	; () banked
  3822  001C5E  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;inc\CANlib.h: 420: tamp = tamp << 5;
  3826  001C60  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  3827  001C64  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  3828  001C68  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  3829  001C6C  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  3830  001C70  0E05               	movlw	5
  3831  001C72                     u8885:
  3832  001C72  90D8               	bcf	status,0,c
  3833  001C74  0100               	movlb	0	; () banked
  3834  001C76  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  3835  001C78  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  3836  001C7A  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  3837  001C7C  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  3838  001C7E  2EE8               	decfsz	wreg,f,c
  3839  001C80  D7F8               	goto	u8885
  3840  001C82  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  3841  001C86  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  3842  001C8A  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  3843  001C8E  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;inc\CANlib.h: 421: TXB1SIDL = TXB1SIDL & 0b00011111;
  3847  001C92  010F               	movlb	15	; () banked
  3848  001C94  5132               	movf	50,w,b	;volatile
  3849  001C96  0B1F               	andlw	31
  3850  001C98  010F               	movlb	15	; () banked
  3851  001C9A  6F32               	movwf	50,b	;volatile
  3852                           
  3853                           ; BSR set to: 15
  3854                           ;inc\CANlib.h: 422: TXB1SIDL = (unsigned char) tamp;
  3855  001C9C  C083  FF32         	movff	CANsendMessage@tamp,3890	;volatile
  3856  001CA0                     l6931:
  3857                           
  3858                           ;inc\CANlib.h: 423: }
  3859                           ;inc\CANlib.h: 425: if (0b00000001 & flags)
  3860  001CA0  0100               	movlb	0	; () banked
  3861  001CA2  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  3862  001CA4  D003               	goto	l388
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;inc\CANlib.h: 426: TXB1CONbits.TXPRI0 = 0x01;
  3866  001CA6  010F               	movlb	15	; () banked
  3867  001CA8  8130               	bsf	48,0,b	;volatile
  3868  001CAA  D002               	goto	l389
  3869  001CAC                     l388:
  3870                           
  3871                           ; BSR set to: 0
  3872                           ;inc\CANlib.h: 427: else
  3873                           ;inc\CANlib.h: 428: TXB1CONbits.TXPRI0 = 0x00;
  3874  001CAC  010F               	movlb	15	; () banked
  3875  001CAE  9130               	bcf	48,0,b	;volatile
  3876  001CB0                     l389:
  3877                           
  3878                           ; BSR set to: 15
  3879                           ;inc\CANlib.h: 429: if (0b00000010 & flags)
  3880  001CB0  0100               	movlb	0	; () banked
  3881  001CB2  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  3882  001CB4  D003               	goto	l390
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;inc\CANlib.h: 430: TXB1CONbits.TXPRI1 = 0x01;
  3886  001CB6  010F               	movlb	15	; () banked
  3887  001CB8  8330               	bsf	48,1,b	;volatile
  3888  001CBA  D002               	goto	l6937
  3889  001CBC                     l390:
  3890                           
  3891                           ; BSR set to: 0
  3892                           ;inc\CANlib.h: 431: else
  3893                           ;inc\CANlib.h: 432: TXB1CONbits.TXPRI1 = 0x00;
  3894  001CBC  010F               	movlb	15	; () banked
  3895  001CBE  9330               	bcf	48,1,b	;volatile
  3896  001CC0                     l6937:
  3897                           
  3898                           ; BSR set to: 15
  3899                           ;inc\CANlib.h: 434: TXB1D0 = data[0];
  3900  001CC0  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  3901  001CC4  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  3902  001CC8  50DF               	movf	indf2,w,c
  3903  001CCA  010F               	movlb	15	; () banked
  3904  001CCC  6F36               	movwf	54,b	;volatile
  3905                           
  3906                           ; BSR set to: 15
  3907                           ;inc\CANlib.h: 435: TXB1D1 = data[1];
  3908  001CCE  0100               	movlb	0	; () banked
  3909  001CD0  EE20 F001          	lfsr	2,1
  3910  001CD4  517B               	movf	CANsendMessage@data& (0+255),w,b
  3911  001CD6  26D9               	addwf	fsr2l,f,c
  3912  001CD8  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3913  001CDA  22DA               	addwfc	fsr2h,f,c
  3914  001CDC  50DF               	movf	indf2,w,c
  3915  001CDE  010F               	movlb	15	; () banked
  3916  001CE0  6F37               	movwf	55,b	;volatile
  3917                           
  3918                           ; BSR set to: 15
  3919                           ;inc\CANlib.h: 436: TXB1D2 = data[2];
  3920  001CE2  0100               	movlb	0	; () banked
  3921  001CE4  EE20 F002          	lfsr	2,2
  3922  001CE8  517B               	movf	CANsendMessage@data& (0+255),w,b
  3923  001CEA  26D9               	addwf	fsr2l,f,c
  3924  001CEC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3925  001CEE  22DA               	addwfc	fsr2h,f,c
  3926  001CF0  50DF               	movf	indf2,w,c
  3927  001CF2  010F               	movlb	15	; () banked
  3928  001CF4  6F38               	movwf	56,b	;volatile
  3929                           
  3930                           ; BSR set to: 15
  3931                           ;inc\CANlib.h: 437: TXB1D3 = data[3];
  3932  001CF6  0100               	movlb	0	; () banked
  3933  001CF8  EE20 F003          	lfsr	2,3
  3934  001CFC  517B               	movf	CANsendMessage@data& (0+255),w,b
  3935  001CFE  26D9               	addwf	fsr2l,f,c
  3936  001D00  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3937  001D02  22DA               	addwfc	fsr2h,f,c
  3938  001D04  50DF               	movf	indf2,w,c
  3939  001D06  010F               	movlb	15	; () banked
  3940  001D08  6F39               	movwf	57,b	;volatile
  3941                           
  3942                           ; BSR set to: 15
  3943                           ;inc\CANlib.h: 438: TXB1D4 = data[4];
  3944  001D0A  0100               	movlb	0	; () banked
  3945  001D0C  EE20 F004          	lfsr	2,4
  3946  001D10  517B               	movf	CANsendMessage@data& (0+255),w,b
  3947  001D12  26D9               	addwf	fsr2l,f,c
  3948  001D14  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3949  001D16  22DA               	addwfc	fsr2h,f,c
  3950  001D18  50DF               	movf	indf2,w,c
  3951  001D1A  010F               	movlb	15	; () banked
  3952  001D1C  6F3A               	movwf	58,b	;volatile
  3953                           
  3954                           ; BSR set to: 15
  3955                           ;inc\CANlib.h: 439: TXB1D5 = data[5];
  3956  001D1E  0100               	movlb	0	; () banked
  3957  001D20  EE20 F005          	lfsr	2,5
  3958  001D24  517B               	movf	CANsendMessage@data& (0+255),w,b
  3959  001D26  26D9               	addwf	fsr2l,f,c
  3960  001D28  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3961  001D2A  22DA               	addwfc	fsr2h,f,c
  3962  001D2C  50DF               	movf	indf2,w,c
  3963  001D2E  010F               	movlb	15	; () banked
  3964  001D30  6F3B               	movwf	59,b	;volatile
  3965                           
  3966                           ; BSR set to: 15
  3967                           ;inc\CANlib.h: 440: TXB1D6 = data[6];
  3968  001D32  0100               	movlb	0	; () banked
  3969  001D34  EE20 F006          	lfsr	2,6
  3970  001D38  517B               	movf	CANsendMessage@data& (0+255),w,b
  3971  001D3A  26D9               	addwf	fsr2l,f,c
  3972  001D3C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3973  001D3E  22DA               	addwfc	fsr2h,f,c
  3974  001D40  50DF               	movf	indf2,w,c
  3975  001D42  010F               	movlb	15	; () banked
  3976  001D44  6F3C               	movwf	60,b	;volatile
  3977                           
  3978                           ; BSR set to: 15
  3979                           ;inc\CANlib.h: 441: TXB1D7 = data[7];
  3980  001D46  0100               	movlb	0	; () banked
  3981  001D48  EE20 F007          	lfsr	2,7
  3982  001D4C  517B               	movf	CANsendMessage@data& (0+255),w,b
  3983  001D4E  26D9               	addwf	fsr2l,f,c
  3984  001D50  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  3985  001D52  22DA               	addwfc	fsr2h,f,c
  3986  001D54  50DF               	movf	indf2,w,c
  3987  001D56  010F               	movlb	15	; () banked
  3988  001D58  6F3D               	movwf	61,b	;volatile
  3989                           
  3990                           ; BSR set to: 15
  3991                           ;inc\CANlib.h: 443: TXB1CONbits.TXREQ = 0x01;
  3992  001D5A  010F               	movlb	15	; () banked
  3993  001D5C  8730               	bsf	48,3,b	;volatile
  3994                           
  3995                           ; BSR set to: 15
  3996                           ;inc\CANlib.h: 445: return;
  3997  001D5E  0012               	return	
  3998  001D60                     l378:
  3999                           
  4000                           ; BSR set to: 15
  4001                           ;inc\CANlib.h: 446: }
  4002                           ;inc\CANlib.h: 450: if (TXB2CONbits.TXREQ == 0)
  4003  001D60  010F               	movlb	15	; () banked
  4004  001D62  B720               	btfsc	32,3,b	;volatile
  4005  001D64  0012               	return	
  4006                           
  4007                           ; BSR set to: 15
  4008                           ;inc\CANlib.h: 451: { TXB2DLC = dataLength;
  4009  001D66  C07D  FF25         	movff	CANsendMessage@dataLength,3877	;volatile
  4010                           
  4011                           ;inc\CANlib.h: 453: if (0b01000000 & flags)
  4012  001D6A  0100               	movlb	0	; () banked
  4013  001D6C  AD7E               	btfss	CANsendMessage@flags& (0+255),6,b
  4014  001D6E  D003               	goto	l393
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;inc\CANlib.h: 454: TXB2DLCbits.TXRTR = 0x01;
  4018  001D70  010F               	movlb	15	; () banked
  4019  001D72  8D25               	bsf	37,6,b	;volatile
  4020  001D74  D002               	goto	l394
  4021  001D76                     l393:
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;inc\CANlib.h: 455: else
  4025                           ;inc\CANlib.h: 456: TXB2DLCbits.TXRTR = 0x00;
  4026  001D76  010F               	movlb	15	; () banked
  4027  001D78  9D25               	bcf	37,6,b	;volatile
  4028  001D7A                     l394:
  4029                           
  4030                           ; BSR set to: 15
  4031                           ;inc\CANlib.h: 458: if (CAN_TX_FRAME_MASK & flags)
  4032  001D7A  0100               	movlb	0	; () banked
  4033  001D7C  A77E               	btfss	CANsendMessage@flags& (0+255),3,b
  4034  001D7E  D079               	goto	l395
  4035                           
  4036                           ; BSR set to: 0
  4037                           ;inc\CANlib.h: 459: {
  4038                           ;inc\CANlib.h: 460: tamp = identifier & 0x000000FF;
  4039  001D80  0100               	movlb	0	; () banked
  4040  001D82  5177               	movf	CANsendMessage@identifier& (0+255),w,b
  4041  001D84  0100               	movlb	0	; () banked
  4042  001D86  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4043  001D88  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4044  001D8A  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4045  001D8C  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4046                           
  4047                           ; BSR set to: 0
  4048                           ;inc\CANlib.h: 461: TXB2EIDL = (unsigned char) tamp;
  4049  001D8E  C083  FF24         	movff	CANsendMessage@tamp,3876	;volatile
  4050                           
  4051                           ; BSR set to: 0
  4052                           ;inc\CANlib.h: 463: tamp = identifier & 0x0000FF00;
  4053  001D92  0E00               	movlw	0
  4054  001D94  0100               	movlb	0	; () banked
  4055  001D96  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4056  001D98  0100               	movlb	0	; () banked
  4057  001D9A  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4058  001D9C  0EFF               	movlw	255
  4059  001D9E  0100               	movlb	0	; () banked
  4060  001DA0  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4061  001DA2  0100               	movlb	0	; () banked
  4062  001DA4  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4063  001DA6  0E00               	movlw	0
  4064  001DA8  0100               	movlb	0	; () banked
  4065  001DAA  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4066  001DAC  0100               	movlb	0	; () banked
  4067  001DAE  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4068  001DB0  0E00               	movlw	0
  4069  001DB2  0100               	movlb	0	; () banked
  4070  001DB4  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4071  001DB6  0100               	movlb	0	; () banked
  4072  001DB8  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4073                           
  4074                           ; BSR set to: 0
  4075                           ;inc\CANlib.h: 464: tamp = tamp >> 8;
  4076  001DBA  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4077  001DBE  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4078  001DC2  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4079  001DC6  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4080  001DCA  C080  F07F         	movff	??_CANsendMessage+1,??_CANsendMessage
  4081  001DCE  C081  F080         	movff	??_CANsendMessage+2,??_CANsendMessage+1
  4082  001DD2  C082  F081         	movff	??_CANsendMessage+3,??_CANsendMessage+2
  4083  001DD6  0100               	movlb	0	; () banked
  4084  001DD8  6B82               	clrf	(??_CANsendMessage+3)& (0+255),b
  4085  001DDA  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4086  001DDE  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4087  001DE2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4088  001DE6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4089                           
  4090                           ; BSR set to: 0
  4091                           ;inc\CANlib.h: 465: TXB2EIDH = (unsigned char) tamp;
  4092  001DEA  C083  FF23         	movff	CANsendMessage@tamp,3875	;volatile
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;inc\CANlib.h: 467: TXB2SIDL = 0x00;
  4096  001DEE  0E00               	movlw	0
  4097  001DF0  010F               	movlb	15	; () banked
  4098  001DF2  6F22               	movwf	34,b	;volatile
  4099                           
  4100                           ; BSR set to: 15
  4101                           ;inc\CANlib.h: 468: TXB2SIDLbits.EXIDE = 0x01;
  4102  001DF4  010F               	movlb	15	; () banked
  4103  001DF6  8722               	bsf	34,3,b	;volatile
  4104                           
  4105                           ; BSR set to: 15
  4106                           ;inc\CANlib.h: 470: if (identifier & 0x00010000)
  4107  001DF8  0100               	movlb	0	; () banked
  4108  001DFA  A179               	btfss	(CANsendMessage@identifier+2)& (0+255),0,b
  4109  001DFC  D002               	goto	l396
  4110                           
  4111                           ; BSR set to: 0
  4112                           ;inc\CANlib.h: 471: TXB2SIDLbits.EID16 = 0x01;
  4113  001DFE  010F               	movlb	15	; () banked
  4114  001E00  8122               	bsf	34,0,b	;volatile
  4115  001E02                     l396:
  4116                           
  4117                           ;inc\CANlib.h: 472: if (identifier & 0x00020000)
  4118  001E02  0100               	movlb	0	; () banked
  4119  001E04  A379               	btfss	(CANsendMessage@identifier+2)& (0+255),1,b
  4120  001E06  D002               	goto	l397
  4121                           
  4122                           ; BSR set to: 0
  4123                           ;inc\CANlib.h: 473: TXB2SIDLbits.EID17 = 0x01;
  4124  001E08  010F               	movlb	15	; () banked
  4125  001E0A  8322               	bsf	34,1,b	;volatile
  4126  001E0C                     l397:
  4127                           
  4128                           ;inc\CANlib.h: 474: if (identifier & 0x00040000)
  4129  001E0C  0100               	movlb	0	; () banked
  4130  001E0E  A579               	btfss	(CANsendMessage@identifier+2)& (0+255),2,b
  4131  001E10  D002               	goto	l398
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;inc\CANlib.h: 475: TXB2SIDLbits.SID0 = 0x01;
  4135  001E12  010F               	movlb	15	; () banked
  4136  001E14  8B22               	bsf	34,5,b	;volatile
  4137  001E16                     l398:
  4138                           
  4139                           ;inc\CANlib.h: 476: if (identifier & 0x00080000)
  4140  001E16  0100               	movlb	0	; () banked
  4141  001E18  A779               	btfss	(CANsendMessage@identifier+2)& (0+255),3,b
  4142  001E1A  D002               	goto	l399
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;inc\CANlib.h: 477: TXB2SIDLbits.SID1 = 0x01;
  4146  001E1C  010F               	movlb	15	; () banked
  4147  001E1E  8D22               	bsf	34,6,b	;volatile
  4148  001E20                     l399:
  4149                           
  4150                           ;inc\CANlib.h: 478: if (identifier & 0x00100000)
  4151  001E20  0100               	movlb	0	; () banked
  4152  001E22  A979               	btfss	(CANsendMessage@identifier+2)& (0+255),4,b
  4153  001E24  D002               	goto	l6987
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;inc\CANlib.h: 479: TXB2SIDLbits.SID2 = 0x01;
  4157  001E26  010F               	movlb	15	; () banked
  4158  001E28  8F22               	bsf	34,7,b	;volatile
  4159  001E2A                     l6987:
  4160                           
  4161                           ;inc\CANlib.h: 481: tamp = (identifier >> 21);
  4162  001E2A  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4163  001E2E  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4164  001E32  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4165  001E36  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4166  001E3A  0E16               	movlw	22
  4167  001E3C  D006               	goto	u8990
  4168  001E3E                     u8995:
  4169  001E3E  0100               	movlb	0	; () banked
  4170  001E40  90D8               	bcf	status,0,c
  4171  001E42  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4172  001E44  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4173  001E46  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4174  001E48  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4175  001E4A                     u8990:
  4176  001E4A  2EE8               	decfsz	wreg,f,c
  4177  001E4C  D7F8               	goto	u8995
  4178  001E4E  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4179  001E52  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4180  001E56  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4181  001E5A  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4182                           
  4183                           ; BSR set to: 0
  4184                           ;inc\CANlib.h: 482: tamp = tamp & 0x000000FF;
  4185  001E5E  0100               	movlb	0	; () banked
  4186  001E60  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4187  001E62  0100               	movlb	0	; () banked
  4188  001E64  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4189  001E66  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4190  001E68  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4191  001E6A  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;inc\CANlib.h: 483: TXB2SIDH = (unsigned char) tamp;
  4195  001E6C  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4196                           
  4197                           ;inc\CANlib.h: 484: }
  4198  001E70  D059               	goto	l7007
  4199  001E72                     l395:
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;inc\CANlib.h: 486: else
  4203                           ;inc\CANlib.h: 488: {
  4204                           ;inc\CANlib.h: 489: TXB2SIDLbits.EXIDE = 0x00;
  4205  001E72  010F               	movlb	15	; () banked
  4206  001E74  9722               	bcf	34,3,b	;volatile
  4207                           
  4208                           ; BSR set to: 15
  4209                           ;inc\CANlib.h: 491: tamp = (identifier >> 3);
  4210  001E76  C077  F07F         	movff	CANsendMessage@identifier,??_CANsendMessage
  4211  001E7A  C078  F080         	movff	CANsendMessage@identifier+1,??_CANsendMessage+1
  4212  001E7E  C079  F081         	movff	CANsendMessage@identifier+2,??_CANsendMessage+2
  4213  001E82  C07A  F082         	movff	CANsendMessage@identifier+3,??_CANsendMessage+3
  4214  001E86  0E04               	movlw	4
  4215  001E88  D006               	goto	u9000
  4216  001E8A                     u9005:
  4217  001E8A  0100               	movlb	0	; () banked
  4218  001E8C  90D8               	bcf	status,0,c
  4219  001E8E  3382               	rrcf	(??_CANsendMessage+3)& (0+255),f,b
  4220  001E90  3381               	rrcf	(??_CANsendMessage+2)& (0+255),f,b
  4221  001E92  3380               	rrcf	(??_CANsendMessage+1)& (0+255),f,b
  4222  001E94  337F               	rrcf	??_CANsendMessage& (0+255),f,b
  4223  001E96                     u9000:
  4224  001E96  2EE8               	decfsz	wreg,f,c
  4225  001E98  D7F8               	goto	u9005
  4226  001E9A  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4227  001E9E  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4228  001EA2  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4229  001EA6  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4230                           
  4231                           ; BSR set to: 0
  4232                           ;inc\CANlib.h: 492: tamp = tamp & 0x000000FF;
  4233  001EAA  0100               	movlb	0	; () banked
  4234  001EAC  5183               	movf	CANsendMessage@tamp& (0+255),w,b
  4235  001EAE  0100               	movlb	0	; () banked
  4236  001EB0  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4237  001EB2  6B84               	clrf	(CANsendMessage@tamp+1)& (0+255),b
  4238  001EB4  6B85               	clrf	(CANsendMessage@tamp+2)& (0+255),b
  4239  001EB6  6B86               	clrf	(CANsendMessage@tamp+3)& (0+255),b
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;inc\CANlib.h: 493: TXB2SIDH = (unsigned char) tamp;
  4243  001EB8  C083  FF21         	movff	CANsendMessage@tamp,3873	;volatile
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;inc\CANlib.h: 495: tamp = identifier & 0x00000007;
  4247  001EBC  0E07               	movlw	7
  4248  001EBE  0100               	movlb	0	; () banked
  4249  001EC0  1577               	andwf	CANsendMessage@identifier& (0+255),w,b
  4250  001EC2  0100               	movlb	0	; () banked
  4251  001EC4  6F83               	movwf	CANsendMessage@tamp& (0+255),b
  4252  001EC6  0E00               	movlw	0
  4253  001EC8  0100               	movlb	0	; () banked
  4254  001ECA  1578               	andwf	(CANsendMessage@identifier+1)& (0+255),w,b
  4255  001ECC  0100               	movlb	0	; () banked
  4256  001ECE  6F84               	movwf	(CANsendMessage@tamp+1)& (0+255),b
  4257  001ED0  0E00               	movlw	0
  4258  001ED2  0100               	movlb	0	; () banked
  4259  001ED4  1579               	andwf	(CANsendMessage@identifier+2)& (0+255),w,b
  4260  001ED6  0100               	movlb	0	; () banked
  4261  001ED8  6F85               	movwf	(CANsendMessage@tamp+2)& (0+255),b
  4262  001EDA  0E00               	movlw	0
  4263  001EDC  0100               	movlb	0	; () banked
  4264  001EDE  157A               	andwf	(CANsendMessage@identifier+3)& (0+255),w,b
  4265  001EE0  0100               	movlb	0	; () banked
  4266  001EE2  6F86               	movwf	(CANsendMessage@tamp+3)& (0+255),b
  4267                           
  4268                           ; BSR set to: 0
  4269                           ;inc\CANlib.h: 496: tamp = tamp << 5;
  4270  001EE4  C083  F07F         	movff	CANsendMessage@tamp,??_CANsendMessage
  4271  001EE8  C084  F080         	movff	CANsendMessage@tamp+1,??_CANsendMessage+1
  4272  001EEC  C085  F081         	movff	CANsendMessage@tamp+2,??_CANsendMessage+2
  4273  001EF0  C086  F082         	movff	CANsendMessage@tamp+3,??_CANsendMessage+3
  4274  001EF4  0E05               	movlw	5
  4275  001EF6                     u9015:
  4276  001EF6  90D8               	bcf	status,0,c
  4277  001EF8  0100               	movlb	0	; () banked
  4278  001EFA  377F               	rlcf	??_CANsendMessage& (0+255),f,b
  4279  001EFC  3780               	rlcf	(??_CANsendMessage+1)& (0+255),f,b
  4280  001EFE  3781               	rlcf	(??_CANsendMessage+2)& (0+255),f,b
  4281  001F00  3782               	rlcf	(??_CANsendMessage+3)& (0+255),f,b
  4282  001F02  2EE8               	decfsz	wreg,f,c
  4283  001F04  D7F8               	goto	u9015
  4284  001F06  C07F  F083         	movff	??_CANsendMessage,CANsendMessage@tamp
  4285  001F0A  C080  F084         	movff	??_CANsendMessage+1,CANsendMessage@tamp+1
  4286  001F0E  C081  F085         	movff	??_CANsendMessage+2,CANsendMessage@tamp+2
  4287  001F12  C082  F086         	movff	??_CANsendMessage+3,CANsendMessage@tamp+3
  4288                           
  4289                           ; BSR set to: 0
  4290                           ;inc\CANlib.h: 497: TXB2SIDL = TXB2SIDL & 0b00011111;
  4291  001F16  010F               	movlb	15	; () banked
  4292  001F18  5122               	movf	34,w,b	;volatile
  4293  001F1A  0B1F               	andlw	31
  4294  001F1C  010F               	movlb	15	; () banked
  4295  001F1E  6F22               	movwf	34,b	;volatile
  4296                           
  4297                           ; BSR set to: 15
  4298                           ;inc\CANlib.h: 498: TXB2SIDL = (unsigned char) tamp;
  4299  001F20  C083  FF22         	movff	CANsendMessage@tamp,3874	;volatile
  4300  001F24                     l7007:
  4301                           
  4302                           ;inc\CANlib.h: 499: }
  4303                           ;inc\CANlib.h: 501: if (0b00000001 & flags)
  4304  001F24  0100               	movlb	0	; () banked
  4305  001F26  A17E               	btfss	CANsendMessage@flags& (0+255),0,b
  4306  001F28  D003               	goto	l402
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;inc\CANlib.h: 502: TXB2CONbits.TXPRI0 = 0x01;
  4310  001F2A  010F               	movlb	15	; () banked
  4311  001F2C  8120               	bsf	32,0,b	;volatile
  4312  001F2E  D002               	goto	l403
  4313  001F30                     l402:
  4314                           
  4315                           ; BSR set to: 0
  4316                           ;inc\CANlib.h: 503: else
  4317                           ;inc\CANlib.h: 504: TXB2CONbits.TXPRI0 = 0x00;
  4318  001F30  010F               	movlb	15	; () banked
  4319  001F32  9120               	bcf	32,0,b	;volatile
  4320  001F34                     l403:
  4321                           
  4322                           ; BSR set to: 15
  4323                           ;inc\CANlib.h: 505: if (0b00000010 & flags)
  4324  001F34  0100               	movlb	0	; () banked
  4325  001F36  A37E               	btfss	CANsendMessage@flags& (0+255),1,b
  4326  001F38  D003               	goto	l404
  4327                           
  4328                           ; BSR set to: 0
  4329                           ;inc\CANlib.h: 506: TXB2CONbits.TXPRI1 = 0x01;
  4330  001F3A  010F               	movlb	15	; () banked
  4331  001F3C  8320               	bsf	32,1,b	;volatile
  4332  001F3E  D002               	goto	l7013
  4333  001F40                     l404:
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;inc\CANlib.h: 507: else
  4337                           ;inc\CANlib.h: 508: TXB2CONbits.TXPRI1 = 0x00;
  4338  001F40  010F               	movlb	15	; () banked
  4339  001F42  9320               	bcf	32,1,b	;volatile
  4340  001F44                     l7013:
  4341                           
  4342                           ; BSR set to: 15
  4343                           ;inc\CANlib.h: 510: TXB2D0 = data[0];
  4344  001F44  C07B  FFD9         	movff	CANsendMessage@data,fsr2l
  4345  001F48  C07C  FFDA         	movff	CANsendMessage@data+1,fsr2h
  4346  001F4C  50DF               	movf	indf2,w,c
  4347  001F4E  010F               	movlb	15	; () banked
  4348  001F50  6F26               	movwf	38,b	;volatile
  4349                           
  4350                           ; BSR set to: 15
  4351                           ;inc\CANlib.h: 511: TXB2D1 = data[1];
  4352  001F52  0100               	movlb	0	; () banked
  4353  001F54  EE20 F001          	lfsr	2,1
  4354  001F58  517B               	movf	CANsendMessage@data& (0+255),w,b
  4355  001F5A  26D9               	addwf	fsr2l,f,c
  4356  001F5C  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4357  001F5E  22DA               	addwfc	fsr2h,f,c
  4358  001F60  50DF               	movf	indf2,w,c
  4359  001F62  010F               	movlb	15	; () banked
  4360  001F64  6F27               	movwf	39,b	;volatile
  4361                           
  4362                           ; BSR set to: 15
  4363                           ;inc\CANlib.h: 512: TXB2D2 = data[2];
  4364  001F66  0100               	movlb	0	; () banked
  4365  001F68  EE20 F002          	lfsr	2,2
  4366  001F6C  517B               	movf	CANsendMessage@data& (0+255),w,b
  4367  001F6E  26D9               	addwf	fsr2l,f,c
  4368  001F70  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4369  001F72  22DA               	addwfc	fsr2h,f,c
  4370  001F74  50DF               	movf	indf2,w,c
  4371  001F76  010F               	movlb	15	; () banked
  4372  001F78  6F28               	movwf	40,b	;volatile
  4373                           
  4374                           ; BSR set to: 15
  4375                           ;inc\CANlib.h: 513: TXB2D3 = data[3];
  4376  001F7A  0100               	movlb	0	; () banked
  4377  001F7C  EE20 F003          	lfsr	2,3
  4378  001F80  517B               	movf	CANsendMessage@data& (0+255),w,b
  4379  001F82  26D9               	addwf	fsr2l,f,c
  4380  001F84  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4381  001F86  22DA               	addwfc	fsr2h,f,c
  4382  001F88  50DF               	movf	indf2,w,c
  4383  001F8A  010F               	movlb	15	; () banked
  4384  001F8C  6F29               	movwf	41,b	;volatile
  4385                           
  4386                           ; BSR set to: 15
  4387                           ;inc\CANlib.h: 514: TXB2D4 = data[4];
  4388  001F8E  0100               	movlb	0	; () banked
  4389  001F90  EE20 F004          	lfsr	2,4
  4390  001F94  517B               	movf	CANsendMessage@data& (0+255),w,b
  4391  001F96  26D9               	addwf	fsr2l,f,c
  4392  001F98  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4393  001F9A  22DA               	addwfc	fsr2h,f,c
  4394  001F9C  50DF               	movf	indf2,w,c
  4395  001F9E  010F               	movlb	15	; () banked
  4396  001FA0  6F2A               	movwf	42,b	;volatile
  4397                           
  4398                           ; BSR set to: 15
  4399                           ;inc\CANlib.h: 515: TXB2D5 = data[5];
  4400  001FA2  0100               	movlb	0	; () banked
  4401  001FA4  EE20 F005          	lfsr	2,5
  4402  001FA8  517B               	movf	CANsendMessage@data& (0+255),w,b
  4403  001FAA  26D9               	addwf	fsr2l,f,c
  4404  001FAC  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4405  001FAE  22DA               	addwfc	fsr2h,f,c
  4406  001FB0  50DF               	movf	indf2,w,c
  4407  001FB2  010F               	movlb	15	; () banked
  4408  001FB4  6F2B               	movwf	43,b	;volatile
  4409                           
  4410                           ; BSR set to: 15
  4411                           ;inc\CANlib.h: 516: TXB2D6 = data[6];
  4412  001FB6  0100               	movlb	0	; () banked
  4413  001FB8  EE20 F006          	lfsr	2,6
  4414  001FBC  517B               	movf	CANsendMessage@data& (0+255),w,b
  4415  001FBE  26D9               	addwf	fsr2l,f,c
  4416  001FC0  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4417  001FC2  22DA               	addwfc	fsr2h,f,c
  4418  001FC4  50DF               	movf	indf2,w,c
  4419  001FC6  010F               	movlb	15	; () banked
  4420  001FC8  6F2C               	movwf	44,b	;volatile
  4421                           
  4422                           ; BSR set to: 15
  4423                           ;inc\CANlib.h: 517: TXB2D7 = data[7];
  4424  001FCA  0100               	movlb	0	; () banked
  4425  001FCC  EE20 F007          	lfsr	2,7
  4426  001FD0  517B               	movf	CANsendMessage@data& (0+255),w,b
  4427  001FD2  26D9               	addwf	fsr2l,f,c
  4428  001FD4  517C               	movf	(CANsendMessage@data+1)& (0+255),w,b
  4429  001FD6  22DA               	addwfc	fsr2h,f,c
  4430  001FD8  50DF               	movf	indf2,w,c
  4431  001FDA  010F               	movlb	15	; () banked
  4432  001FDC  6F2D               	movwf	45,b	;volatile
  4433                           
  4434                           ; BSR set to: 15
  4435                           ;inc\CANlib.h: 519: TXB2CONbits.TXREQ = 0x01;
  4436  001FDE  010F               	movlb	15	; () banked
  4437  001FE0  8720               	bsf	32,3,b	;volatile
  4438                           
  4439                           ; BSR set to: 15
  4440                           ;inc\CANlib.h: 521: return;
  4441  001FE2  0012               	return	
  4442  001FE4                     __end_of_CANsendMessage:
  4443                           	opt stack 0
  4444                           tblptru	equ	0xFF8
  4445                           tblptrh	equ	0xFF7
  4446                           tblptrl	equ	0xFF6
  4447                           tablat	equ	0xFF5
  4448                           postinc0	equ	0xFEE
  4449                           wreg	equ	0xFE8
  4450                           postdec1	equ	0xFE5
  4451                           fsr1l	equ	0xFE1
  4452                           indf2	equ	0xFDF
  4453                           postinc2	equ	0xFDE
  4454                           postdec2	equ	0xFDD
  4455                           fsr2h	equ	0xFDA
  4456                           fsr2l	equ	0xFD9
  4457                           status	equ	0xFD8
  4458                           
  4459 ;; *************** function _CANisTxReady *****************
  4460 ;; Defined at:
  4461 ;;		line 1155 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;		None
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;		None
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  1    wreg      unsigned char 
  4468 ;; Registers used:
  4469 ;;		wreg, status,2
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4476 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4478 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4479 ;;Total ram usage:        1 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:    4
  4482 ;; This function calls:
  4483 ;;		Nothing
  4484 ;; This function is called by:
  4485 ;;		_park_search
  4486 ;;		_park_routine
  4487 ;;		_can_send
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           	psect	text6
  4492  005F78                     __ptext6:
  4493                           	opt stack 0
  4494  005F78                     _CANisTxReady:
  4495                           	opt stack 23
  4496                           
  4497                           ;inc\CANlib.h: 1157: return (!TXB0CONbits.TXREQ || !TXB1CONbits.TXREQ || !TXB2CONbits.TX
      +                          REQ);
  4498                           
  4499                           ; BSR set to: 15
  4500                           ;incstack = 0
  4501  005F78  0E01               	movlw	1
  4502  005F7A  0100               	movlb	0	; () banked
  4503  005F7C  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4504                           
  4505                           ; BSR set to: 0
  4506  005F7E  010F               	movlb	15	; () banked
  4507  005F80  A740               	btfss	64,3,b	;volatile
  4508  005F82  D009               	goto	l556
  4509                           
  4510                           ; BSR set to: 15
  4511  005F84  010F               	movlb	15	; () banked
  4512  005F86  A730               	btfss	48,3,b	;volatile
  4513  005F88  D006               	goto	l556
  4514                           
  4515                           ; BSR set to: 15
  4516  005F8A  010F               	movlb	15	; () banked
  4517  005F8C  A720               	btfss	32,3,b	;volatile
  4518  005F8E  D003               	goto	l556
  4519                           
  4520                           ; BSR set to: 15
  4521  005F90  0E00               	movlw	0
  4522  005F92  0100               	movlb	0	; () banked
  4523  005F94  6F77               	movwf	_CANisTxReady$2845& (0+255),b
  4524  005F96                     l556:
  4525  005F96  0100               	movlb	0	; () banked
  4526  005F98  5177               	movf	_CANisTxReady$2845& (0+255),w,b
  4527  005F9A  0012               	return	
  4528  005F9C                     __end_of_CANisTxReady:
  4529                           	opt stack 0
  4530                           tblptru	equ	0xFF8
  4531                           tblptrh	equ	0xFF7
  4532                           tblptrl	equ	0xFF6
  4533                           tablat	equ	0xFF5
  4534                           postinc0	equ	0xFEE
  4535                           wreg	equ	0xFE8
  4536                           postdec1	equ	0xFE5
  4537                           fsr1l	equ	0xFE1
  4538                           indf2	equ	0xFDF
  4539                           postinc2	equ	0xFDE
  4540                           postdec2	equ	0xFDD
  4541                           fsr2h	equ	0xFDA
  4542                           fsr2l	equ	0xFD9
  4543                           status	equ	0xFD8
  4544                           
  4545 ;; *************** function _abs *****************
  4546 ;; Defined at:
  4547 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\abs.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;  a               2   23[BANK0 ] int 
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;		None
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  2   23[BANK0 ] int 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2, status,0
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4561 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4563 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4564 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4565 ;;Total ram usage:        4 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:    4
  4568 ;; This function calls:
  4569 ;;		Nothing
  4570 ;; This function is called by:
  4571 ;;		_park_search
  4572 ;;		_parallelo
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text7
  4577  005F20                     __ptext7:
  4578                           	opt stack 0
  4579  005F20                     _abs:
  4580                           	opt stack 24
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;incstack = 0
  4584  005F20  0100               	movlb	0	; () banked
  4585  005F22  AF78               	btfss	(abs@a+1)& (0+255),7,b
  4586  005F24  D00E               	goto	l871
  4587                           
  4588                           ; BSR set to: 0
  4589  005F26  C077  F079         	movff	abs@a,??_abs
  4590  005F2A  C078  F07A         	movff	abs@a+1,??_abs+1
  4591  005F2E  0100               	movlb	0	; () banked
  4592  005F30  1F79               	comf	??_abs& (0+255),f,b
  4593  005F32  1F7A               	comf	(??_abs+1)& (0+255),f,b
  4594  005F34  4B79               	infsnz	??_abs& (0+255),f,b
  4595  005F36  2B7A               	incf	(??_abs+1)& (0+255),f,b
  4596  005F38  C079  F077         	movff	??_abs,?_abs
  4597  005F3C  C07A  F078         	movff	??_abs+1,?_abs+1
  4598  005F40  0012               	return	
  4599  005F42                     l871:
  4600                           
  4601                           ; BSR set to: 0
  4602  005F42  C077  F077         	movff	abs@a,?_abs
  4603  005F46  C078  F078         	movff	abs@a+1,?_abs+1
  4604                           
  4605                           ; BSR set to: 0
  4606  005F4A  0012               	return		;funcret
  4607  005F4C                     __end_of_abs:
  4608                           	opt stack 0
  4609                           tblptru	equ	0xFF8
  4610                           tblptrh	equ	0xFF7
  4611                           tblptrl	equ	0xFF6
  4612                           tablat	equ	0xFF5
  4613                           postinc0	equ	0xFEE
  4614                           wreg	equ	0xFE8
  4615                           postdec1	equ	0xFE5
  4616                           fsr1l	equ	0xFE1
  4617                           indf2	equ	0xFDF
  4618                           postinc2	equ	0xFDE
  4619                           postdec2	equ	0xFDD
  4620                           fsr2h	equ	0xFDA
  4621                           fsr2l	equ	0xFD9
  4622                           status	equ	0xFD8
  4623                           
  4624 ;; *************** function _matematica *****************
  4625 ;; Defined at:
  4626 ;;		line 431 in file "parcheggio.c"
  4627 ;; Parameters:    Size  Location     Type
  4628 ;;		None
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;		None
  4631 ;; Return value:  Size  Location     Type
  4632 ;;		None               void
  4633 ;; Registers used:
  4634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4641 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4643 ;;      Totals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0
  4644 ;;Total ram usage:       28 bytes
  4645 ;; Hardware stack levels used:    1
  4646 ;; Hardware stack levels required when called:    8
  4647 ;; This function calls:
  4648 ;;		___fladd
  4649 ;;		___fldiv
  4650 ;;		___flmul
  4651 ;;		___flneg
  4652 ;;		_asin
  4653 ;;		_cos
  4654 ;; This function is called by:
  4655 ;;		_park_routine
  4656 ;; This function uses a non-reentrant model
  4657 ;;
  4658                           
  4659                           	psect	text8
  4660  001FE4                     __ptext8:
  4661                           	opt stack 0
  4662  001FE4                     _matematica:
  4663                           	opt stack 21
  4664                           
  4665                           ;parcheggio.c: 432: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;incstack = 0
  4669  001FE4  C124  F0AD         	movff	_bordo,___fladd@a	;volatile
  4670  001FE8  C125  F0AE         	movff	_bordo+1,___fladd@a+1	;volatile
  4671  001FEC  C126  F0AF         	movff	_bordo+2,___fladd@a+2	;volatile
  4672  001FF0  C127  F0B0         	movff	_bordo+3,___fladd@a+3	;volatile
  4673  001FF4  0E00               	movlw	0
  4674  001FF6  0100               	movlb	0	; () banked
  4675  001FF8  6F7B               	movwf	___fldiv@a& (0+255),b
  4676  001FFA  0E00               	movlw	0
  4677  001FFC  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4678  001FFE  0E00               	movlw	0
  4679  002000  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4680  002002  0E40               	movlw	64
  4681  002004  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4682  002006  C1E2  F077         	movff	_larghezza,___fldiv@b
  4683  00200A  C1E3  F078         	movff	_larghezza+1,___fldiv@b+1
  4684  00200E  C1E4  F079         	movff	_larghezza+2,___fldiv@b+2
  4685  002012  C1E5  F07A         	movff	_larghezza+3,___fldiv@b+3
  4686  002016  ECFB  F01D         	call	___fldiv	;wreg free
  4687  00201A  C077  F0A9         	movff	?___fldiv,___fladd@b
  4688  00201E  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  4689  002022  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  4690  002026  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  4691  00202A  EC3D  F015         	call	___fladd	;wreg free
  4692  00202E  C0A9  F0BD         	movff	?___fladd,___flneg@f1
  4693  002032  C0AA  F0BE         	movff	?___fladd+1,___flneg@f1+1
  4694  002036  C0AB  F0BF         	movff	?___fladd+2,___flneg@f1+2
  4695  00203A  C0AC  F0C0         	movff	?___fladd+3,___flneg@f1+3
  4696  00203E  EC3F  F02F         	call	___flneg	;wreg free
  4697  002042  C0BD  F1BA         	movff	?___flneg,_matematica$3741
  4698  002046  C0BE  F1BB         	movff	?___flneg+1,_matematica$3741+1
  4699  00204A  C0BF  F1BC         	movff	?___flneg+2,_matematica$3741+2
  4700  00204E  C0C0  F1BD         	movff	?___flneg+3,_matematica$3741+3
  4701                           
  4702                           ;parcheggio.c: 432: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4703  002052  C1BA  F0AD         	movff	_matematica$3741,___fladd@a
  4704  002056  C1BB  F0AE         	movff	_matematica$3741+1,___fladd@a+1
  4705  00205A  C1BC  F0AF         	movff	_matematica$3741+2,___fladd@a+2
  4706  00205E  C1BD  F0B0         	movff	_matematica$3741+3,___fladd@a+3
  4707  002062  0E00               	movlw	0
  4708  002064  0100               	movlb	0	; () banked
  4709  002066  6F94               	movwf	___flmul@a& (0+255),b
  4710  002068  0E00               	movlw	0
  4711  00206A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4712  00206C  0E00               	movlw	0
  4713  00206E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4714  002070  0E40               	movlw	64
  4715  002072  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4716  002074  C1E8  F090         	movff	_raggio,___flmul@b
  4717  002078  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4718  00207C  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4719  002080  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4720  002084  EC91  F017         	call	___flmul	;wreg free
  4721  002088  C090  F0A9         	movff	?___flmul,___fladd@b
  4722  00208C  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  4723  002090  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  4724  002094  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  4725  002098  EC3D  F015         	call	___fladd	;wreg free
  4726  00209C  C0A9  F1BE         	movff	?___fladd,_matematica$3742
  4727  0020A0  C0AA  F1BF         	movff	?___fladd+1,_matematica$3742+1
  4728  0020A4  C0AB  F1C0         	movff	?___fladd+2,_matematica$3742+2
  4729  0020A8  C0AC  F1C1         	movff	?___fladd+3,_matematica$3742+3
  4730                           
  4731                           ;parcheggio.c: 432: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4732  0020AC  0E00               	movlw	0
  4733  0020AE  0100               	movlb	0	; () banked
  4734  0020B0  6F7B               	movwf	___fldiv@a& (0+255),b
  4735  0020B2  0E00               	movlw	0
  4736  0020B4  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4737  0020B6  0E00               	movlw	0
  4738  0020B8  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4739  0020BA  0E40               	movlw	64
  4740  0020BC  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4741  0020BE  C1E2  F077         	movff	_larghezza,___fldiv@b
  4742  0020C2  C1E3  F078         	movff	_larghezza+1,___fldiv@b+1
  4743  0020C6  C1E4  F079         	movff	_larghezza+2,___fldiv@b+2
  4744  0020CA  C1E5  F07A         	movff	_larghezza+3,___fldiv@b+3
  4745  0020CE  ECFB  F01D         	call	___fldiv	;wreg free
  4746  0020D2  C077  F0BD         	movff	?___fldiv,___flneg@f1
  4747  0020D6  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  4748  0020DA  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  4749  0020DE  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  4750  0020E2  EC3F  F02F         	call	___flneg	;wreg free
  4751  0020E6  C0BD  F0AD         	movff	?___flneg,___fladd@a
  4752  0020EA  C0BE  F0AE         	movff	?___flneg+1,___fladd@a+1
  4753  0020EE  C0BF  F0AF         	movff	?___flneg+2,___fladd@a+2
  4754  0020F2  C0C0  F0B0         	movff	?___flneg+3,___fladd@a+3
  4755  0020F6  C1BE  F0A9         	movff	_matematica$3742,___fladd@b
  4756  0020FA  C1BF  F0AA         	movff	_matematica$3742+1,___fladd@b+1
  4757  0020FE  C1C0  F0AB         	movff	_matematica$3742+2,___fladd@b+2
  4758  002102  C1C1  F0AC         	movff	_matematica$3742+3,___fladd@b+3
  4759  002106  EC3D  F015         	call	___fladd	;wreg free
  4760  00210A  C0A9  F1C2         	movff	?___fladd,_matematica$3743
  4761  00210E  C0AA  F1C3         	movff	?___fladd+1,_matematica$3743+1
  4762  002112  C0AB  F1C4         	movff	?___fladd+2,_matematica$3743+2
  4763  002116  C0AC  F1C5         	movff	?___fladd+3,_matematica$3743+3
  4764                           
  4765                           ;parcheggio.c: 432: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4766  00211A  C1C2  F077         	movff	_matematica$3743,___fldiv@b
  4767  00211E  C1C3  F078         	movff	_matematica$3743+1,___fldiv@b+1
  4768  002122  C1C4  F079         	movff	_matematica$3743+2,___fldiv@b+2
  4769  002126  C1C5  F07A         	movff	_matematica$3743+3,___fldiv@b+3
  4770  00212A  0E00               	movlw	0
  4771  00212C  0100               	movlb	0	; () banked
  4772  00212E  6F94               	movwf	___flmul@a& (0+255),b
  4773  002130  0E00               	movlw	0
  4774  002132  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4775  002134  0E00               	movlw	0
  4776  002136  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4777  002138  0E40               	movlw	64
  4778  00213A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4779  00213C  C1E8  F090         	movff	_raggio,___flmul@b
  4780  002140  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4781  002144  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4782  002148  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4783  00214C  EC91  F017         	call	___flmul	;wreg free
  4784  002150  C090  F07B         	movff	?___flmul,___fldiv@a
  4785  002154  C091  F07C         	movff	?___flmul+1,___fldiv@a+1
  4786  002158  C092  F07D         	movff	?___flmul+2,___fldiv@a+2
  4787  00215C  C093  F07E         	movff	?___flmul+3,___fldiv@a+3
  4788  002160  ECFB  F01D         	call	___fldiv	;wreg free
  4789  002164  C077  F1C6         	movff	?___fldiv,_matematica$3744
  4790  002168  C078  F1C7         	movff	?___fldiv+1,_matematica$3744+1
  4791  00216C  C079  F1C8         	movff	?___fldiv+2,_matematica$3744+2
  4792  002170  C07A  F1C9         	movff	?___fldiv+3,_matematica$3744+3
  4793                           
  4794                           ;parcheggio.c: 432: alfa = asin(((2 * raggio)-(larghezza / 2) - (bordo + (larghezza / 2)
      +                          )) / (2 * raggio));
  4795  002174  C1C6  F0DE         	movff	_matematica$3744,asin@x
  4796  002178  C1C7  F0DF         	movff	_matematica$3744+1,asin@x+1
  4797  00217C  C1C8  F0E0         	movff	_matematica$3744+2,asin@x+2
  4798  002180  C1C9  F0E1         	movff	_matematica$3744+3,asin@x+3
  4799  002184  EC36  F023         	call	_asin	;wreg free
  4800  002188  C0DE  F11C         	movff	?_asin,_alfa
  4801  00218C  C0DF  F11D         	movff	?_asin+1,_alfa+1
  4802  002190  C0E0  F11E         	movff	?_asin+2,_alfa+2
  4803  002194  C0E1  F11F         	movff	?_asin+3,_alfa+3
  4804                           
  4805                           ;parcheggio.c: 433: alfa = alfa / 3.14159265358979323846 * 180;
  4806  002198  0EDB               	movlw	219
  4807  00219A  0100               	movlb	0	; () banked
  4808  00219C  6F7B               	movwf	___fldiv@a& (0+255),b
  4809  00219E  0E0F               	movlw	15
  4810  0021A0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4811  0021A2  0E49               	movlw	73
  4812  0021A4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4813  0021A6  0E40               	movlw	64
  4814  0021A8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4815  0021AA  C11C  F077         	movff	_alfa,___fldiv@b
  4816  0021AE  C11D  F078         	movff	_alfa+1,___fldiv@b+1
  4817  0021B2  C11E  F079         	movff	_alfa+2,___fldiv@b+2
  4818  0021B6  C11F  F07A         	movff	_alfa+3,___fldiv@b+3
  4819  0021BA  ECFB  F01D         	call	___fldiv	;wreg free
  4820  0021BE  C077  F090         	movff	?___fldiv,___flmul@b
  4821  0021C2  C078  F091         	movff	?___fldiv+1,___flmul@b+1
  4822  0021C6  C079  F092         	movff	?___fldiv+2,___flmul@b+2
  4823  0021CA  C07A  F093         	movff	?___fldiv+3,___flmul@b+3
  4824  0021CE  0E00               	movlw	0
  4825  0021D0  0100               	movlb	0	; () banked
  4826  0021D2  6F94               	movwf	___flmul@a& (0+255),b
  4827  0021D4  0E00               	movlw	0
  4828  0021D6  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4829  0021D8  0E34               	movlw	52
  4830  0021DA  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4831  0021DC  0E43               	movlw	67
  4832  0021DE  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4833  0021E0  EC91  F017         	call	___flmul	;wreg free
  4834  0021E4  C090  F11C         	movff	?___flmul,_alfa
  4835  0021E8  C091  F11D         	movff	?___flmul+1,_alfa+1
  4836  0021EC  C092  F11E         	movff	?___flmul+2,_alfa+2
  4837  0021F0  C093  F11F         	movff	?___flmul+3,_alfa+3
  4838                           
  4839                           ;parcheggio.c: 434: beta = 90 - alfa;
  4840  0021F4  C11C  F0BD         	movff	_alfa,___flneg@f1
  4841  0021F8  C11D  F0BE         	movff	_alfa+1,___flneg@f1+1
  4842  0021FC  C11E  F0BF         	movff	_alfa+2,___flneg@f1+2
  4843  002200  C11F  F0C0         	movff	_alfa+3,___flneg@f1+3
  4844  002204  EC3F  F02F         	call	___flneg	;wreg free
  4845  002208  C0BD  F0A9         	movff	?___flneg,___fladd@b
  4846  00220C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  4847  002210  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  4848  002214  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  4849  002218  0E00               	movlw	0
  4850  00221A  0100               	movlb	0	; () banked
  4851  00221C  6FAD               	movwf	___fladd@a& (0+255),b
  4852  00221E  0E00               	movlw	0
  4853  002220  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  4854  002222  0EB4               	movlw	180
  4855  002224  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  4856  002226  0E42               	movlw	66
  4857  002228  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  4858  00222A  EC3D  F015         	call	___fladd	;wreg free
  4859  00222E  C0A9  F120         	movff	?___fladd,_beta
  4860  002232  C0AA  F121         	movff	?___fladd+1,_beta+1
  4861  002236  C0AB  F122         	movff	?___fladd+2,_beta+2
  4862  00223A  C0AC  F123         	movff	?___fladd+3,_beta+3
  4863                           
  4864                           ;parcheggio.c: 435: alfa = (alfa * 3.14159265358979323846) / 180;
  4865  00223E  0EDB               	movlw	219
  4866  002240  0100               	movlb	0	; () banked
  4867  002242  6F94               	movwf	___flmul@a& (0+255),b
  4868  002244  0E0F               	movlw	15
  4869  002246  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4870  002248  0E49               	movlw	73
  4871  00224A  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4872  00224C  0E40               	movlw	64
  4873  00224E  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4874  002250  C11C  F090         	movff	_alfa,___flmul@b
  4875  002254  C11D  F091         	movff	_alfa+1,___flmul@b+1
  4876  002258  C11E  F092         	movff	_alfa+2,___flmul@b+2
  4877  00225C  C11F  F093         	movff	_alfa+3,___flmul@b+3
  4878  002260  EC91  F017         	call	___flmul	;wreg free
  4879  002264  C090  F077         	movff	?___flmul,___fldiv@b
  4880  002268  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  4881  00226C  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  4882  002270  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  4883  002274  0E00               	movlw	0
  4884  002276  0100               	movlb	0	; () banked
  4885  002278  6F7B               	movwf	___fldiv@a& (0+255),b
  4886  00227A  0E00               	movlw	0
  4887  00227C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4888  00227E  0E34               	movlw	52
  4889  002280  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4890  002282  0E43               	movlw	67
  4891  002284  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4892  002286  ECFB  F01D         	call	___fldiv	;wreg free
  4893  00228A  C077  F11C         	movff	?___fldiv,_alfa
  4894  00228E  C078  F11D         	movff	?___fldiv+1,_alfa+1
  4895  002292  C079  F11E         	movff	?___fldiv+2,_alfa+2
  4896  002296  C07A  F11F         	movff	?___fldiv+3,_alfa+3
  4897                           
  4898                           ;parcheggio.c: 436: n = cos(alfa);
  4899  00229A  C11C  F1B2         	movff	_alfa,cos@f
  4900  00229E  C11D  F1B3         	movff	_alfa+1,cos@f+1
  4901  0022A2  C11E  F1B4         	movff	_alfa+2,cos@f+2
  4902  0022A6  C11F  F1B5         	movff	_alfa+3,cos@f+3
  4903  0022AA  ECDA  F02C         	call	_cos	;wreg free
  4904  0022AE  C1B2  F130         	movff	?_cos,_n
  4905  0022B2  C1B3  F131         	movff	?_cos+1,_n+1
  4906  0022B6  C1B4  F132         	movff	?_cos+2,_n+2
  4907  0022BA  C1B5  F133         	movff	?_cos+3,_n+3
  4908                           
  4909                           ;parcheggio.c: 437: n = 2 * raggio *n;
  4910  0022BE  C130  F094         	movff	_n,___flmul@a
  4911  0022C2  C131  F095         	movff	_n+1,___flmul@a+1
  4912  0022C6  C132  F096         	movff	_n+2,___flmul@a+2
  4913  0022CA  C133  F097         	movff	_n+3,___flmul@a+3
  4914  0022CE  C1E8  F090         	movff	_raggio,___flmul@b
  4915  0022D2  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4916  0022D6  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4917  0022DA  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4918  0022DE  EC91  F017         	call	___flmul	;wreg free
  4919  0022E2  C090  F1D2         	movff	?___flmul,_matematica$3745
  4920  0022E6  C091  F1D3         	movff	?___flmul+1,_matematica$3745+1
  4921  0022EA  C092  F1D4         	movff	?___flmul+2,_matematica$3745+2
  4922  0022EE  C093  F1D5         	movff	?___flmul+3,_matematica$3745+3
  4923                           
  4924                           ;parcheggio.c: 437: n = 2 * raggio *n;
  4925  0022F2  C1D2  F090         	movff	_matematica$3745,___flmul@b
  4926  0022F6  C1D3  F091         	movff	_matematica$3745+1,___flmul@b+1
  4927  0022FA  C1D4  F092         	movff	_matematica$3745+2,___flmul@b+2
  4928  0022FE  C1D5  F093         	movff	_matematica$3745+3,___flmul@b+3
  4929  002302  0E00               	movlw	0
  4930  002304  0100               	movlb	0	; () banked
  4931  002306  6F94               	movwf	___flmul@a& (0+255),b
  4932  002308  0E00               	movlw	0
  4933  00230A  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4934  00230C  0E00               	movlw	0
  4935  00230E  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4936  002310  0E40               	movlw	64
  4937  002312  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4938  002314  EC91  F017         	call	___flmul	;wreg free
  4939  002318  C090  F130         	movff	?___flmul,_n
  4940  00231C  C091  F131         	movff	?___flmul+1,_n+1
  4941  002320  C092  F132         	movff	?___flmul+2,_n+2
  4942  002324  C093  F133         	movff	?___flmul+3,_n+3
  4943                           
  4944                           ;parcheggio.c: 438: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  4945  002328  C120  F094         	movff	_beta,___flmul@a
  4946  00232C  C121  F095         	movff	_beta+1,___flmul@a+1
  4947  002330  C122  F096         	movff	_beta+2,___flmul@a+2
  4948  002334  C123  F097         	movff	_beta+3,___flmul@a+3
  4949  002338  C1E8  F090         	movff	_raggio,___flmul@b
  4950  00233C  C1E9  F091         	movff	_raggio+1,___flmul@b+1
  4951  002340  C1EA  F092         	movff	_raggio+2,___flmul@b+2
  4952  002344  C1EB  F093         	movff	_raggio+3,___flmul@b+3
  4953  002348  EC91  F017         	call	___flmul	;wreg free
  4954  00234C  C090  F1D2         	movff	?___flmul,_matematica$3745
  4955  002350  C091  F1D3         	movff	?___flmul+1,_matematica$3745+1
  4956  002354  C092  F1D4         	movff	?___flmul+2,_matematica$3745+2
  4957  002358  C093  F1D5         	movff	?___flmul+3,_matematica$3745+3
  4958                           
  4959                           ;parcheggio.c: 438: prima_sterzata = 2 * 3.14159265358979323846 * raggio * beta / 360;
  4960  00235C  0EDB               	movlw	219
  4961  00235E  0100               	movlb	0	; () banked
  4962  002360  6F94               	movwf	___flmul@a& (0+255),b
  4963  002362  0E0F               	movlw	15
  4964  002364  6F95               	movwf	(___flmul@a+1)& (0+255),b
  4965  002366  0EC9               	movlw	201
  4966  002368  6F96               	movwf	(___flmul@a+2)& (0+255),b
  4967  00236A  0E40               	movlw	64
  4968  00236C  6F97               	movwf	(___flmul@a+3)& (0+255),b
  4969  00236E  C1D2  F090         	movff	_matematica$3745,___flmul@b
  4970  002372  C1D3  F091         	movff	_matematica$3745+1,___flmul@b+1
  4971  002376  C1D4  F092         	movff	_matematica$3745+2,___flmul@b+2
  4972  00237A  C1D5  F093         	movff	_matematica$3745+3,___flmul@b+3
  4973  00237E  EC91  F017         	call	___flmul	;wreg free
  4974  002382  C090  F077         	movff	?___flmul,___fldiv@b
  4975  002386  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  4976  00238A  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  4977  00238E  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  4978  002392  0E00               	movlw	0
  4979  002394  0100               	movlb	0	; () banked
  4980  002396  6F7B               	movwf	___fldiv@a& (0+255),b
  4981  002398  0E00               	movlw	0
  4982  00239A  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4983  00239C  0EB4               	movlw	180
  4984  00239E  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  4985  0023A0  0E43               	movlw	67
  4986  0023A2  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  4987  0023A4  ECFB  F01D         	call	___fldiv	;wreg free
  4988  0023A8  C077  F138         	movff	?___fldiv,_prima_sterzata
  4989  0023AC  C078  F139         	movff	?___fldiv+1,_prima_sterzata+1
  4990  0023B0  C079  F13A         	movff	?___fldiv+2,_prima_sterzata+2
  4991  0023B4  C07A  F13B         	movff	?___fldiv+3,_prima_sterzata+3
  4992                           
  4993                           ;parcheggio.c: 439: kkk = raggio + (2 * larghezza / 3);
  4994  0023B8  0E00               	movlw	0
  4995  0023BA  0100               	movlb	0	; () banked
  4996  0023BC  6F7B               	movwf	___fldiv@a& (0+255),b
  4997  0023BE  0E00               	movlw	0
  4998  0023C0  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  4999  0023C2  0E40               	movlw	64
  5000  0023C4  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5001  0023C6  0E40               	movlw	64
  5002  0023C8  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5003  0023CA  0E00               	movlw	0
  5004  0023CC  0100               	movlb	0	; () banked
  5005  0023CE  6F94               	movwf	___flmul@a& (0+255),b
  5006  0023D0  0E00               	movlw	0
  5007  0023D2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5008  0023D4  0E00               	movlw	0
  5009  0023D6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5010  0023D8  0E40               	movlw	64
  5011  0023DA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5012  0023DC  C1E2  F090         	movff	_larghezza,___flmul@b
  5013  0023E0  C1E3  F091         	movff	_larghezza+1,___flmul@b+1
  5014  0023E4  C1E4  F092         	movff	_larghezza+2,___flmul@b+2
  5015  0023E8  C1E5  F093         	movff	_larghezza+3,___flmul@b+3
  5016  0023EC  EC91  F017         	call	___flmul	;wreg free
  5017  0023F0  C090  F077         	movff	?___flmul,___fldiv@b
  5018  0023F4  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5019  0023F8  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5020  0023FC  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5021  002400  ECFB  F01D         	call	___fldiv	;wreg free
  5022  002404  C077  F0A9         	movff	?___fldiv,___fladd@b
  5023  002408  C078  F0AA         	movff	?___fldiv+1,___fladd@b+1
  5024  00240C  C079  F0AB         	movff	?___fldiv+2,___fladd@b+2
  5025  002410  C07A  F0AC         	movff	?___fldiv+3,___fladd@b+3
  5026  002414  C1E8  F0AD         	movff	_raggio,___fladd@a
  5027  002418  C1E9  F0AE         	movff	_raggio+1,___fladd@a+1
  5028  00241C  C1EA  F0AF         	movff	_raggio+2,___fladd@a+2
  5029  002420  C1EB  F0B0         	movff	_raggio+3,___fladd@a+3
  5030  002424  EC3D  F015         	call	___fladd	;wreg free
  5031  002428  C0A9  F12C         	movff	?___fladd,_kkk
  5032  00242C  C0AA  F12D         	movff	?___fladd+1,_kkk+1
  5033  002430  C0AB  F12E         	movff	?___fladd+2,_kkk+2
  5034  002434  C0AC  F12F         	movff	?___fladd+3,_kkk+3
  5035                           
  5036                           ;parcheggio.c: 440: jjj = raggio - (2 * larghezza / 3);
  5037  002438  0E00               	movlw	0
  5038  00243A  0100               	movlb	0	; () banked
  5039  00243C  6F7B               	movwf	___fldiv@a& (0+255),b
  5040  00243E  0E00               	movlw	0
  5041  002440  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
  5042  002442  0E40               	movlw	64
  5043  002444  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
  5044  002446  0E40               	movlw	64
  5045  002448  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
  5046  00244A  0E00               	movlw	0
  5047  00244C  0100               	movlb	0	; () banked
  5048  00244E  6F94               	movwf	___flmul@a& (0+255),b
  5049  002450  0E00               	movlw	0
  5050  002452  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5051  002454  0E00               	movlw	0
  5052  002456  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5053  002458  0E40               	movlw	64
  5054  00245A  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5055  00245C  C1E2  F090         	movff	_larghezza,___flmul@b
  5056  002460  C1E3  F091         	movff	_larghezza+1,___flmul@b+1
  5057  002464  C1E4  F092         	movff	_larghezza+2,___flmul@b+2
  5058  002468  C1E5  F093         	movff	_larghezza+3,___flmul@b+3
  5059  00246C  EC91  F017         	call	___flmul	;wreg free
  5060  002470  C090  F077         	movff	?___flmul,___fldiv@b
  5061  002474  C091  F078         	movff	?___flmul+1,___fldiv@b+1
  5062  002478  C092  F079         	movff	?___flmul+2,___fldiv@b+2
  5063  00247C  C093  F07A         	movff	?___flmul+3,___fldiv@b+3
  5064  002480  ECFB  F01D         	call	___fldiv	;wreg free
  5065  002484  C077  F0BD         	movff	?___fldiv,___flneg@f1
  5066  002488  C078  F0BE         	movff	?___fldiv+1,___flneg@f1+1
  5067  00248C  C079  F0BF         	movff	?___fldiv+2,___flneg@f1+2
  5068  002490  C07A  F0C0         	movff	?___fldiv+3,___flneg@f1+3
  5069  002494  EC3F  F02F         	call	___flneg	;wreg free
  5070  002498  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5071  00249C  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5072  0024A0  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5073  0024A4  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5074  0024A8  C1E8  F0AD         	movff	_raggio,___fladd@a
  5075  0024AC  C1E9  F0AE         	movff	_raggio+1,___fladd@a+1
  5076  0024B0  C1EA  F0AF         	movff	_raggio+2,___fladd@a+2
  5077  0024B4  C1EB  F0B0         	movff	_raggio+3,___fladd@a+3
  5078  0024B8  EC3D  F015         	call	___fladd	;wreg free
  5079  0024BC  C0A9  F128         	movff	?___fladd,_jjj
  5080  0024C0  C0AA  F129         	movff	?___fladd+1,_jjj+1
  5081  0024C4  C0AB  F12A         	movff	?___fladd+2,_jjj+2
  5082  0024C8  C0AC  F12B         	movff	?___fladd+3,_jjj+3
  5083                           
  5084                           ;parcheggio.c: 441: Pminimo = kkk * cos(asin((jjj / kkk)));
  5085  0024CC  C12C  F07B         	movff	_kkk,___fldiv@a
  5086  0024D0  C12D  F07C         	movff	_kkk+1,___fldiv@a+1
  5087  0024D4  C12E  F07D         	movff	_kkk+2,___fldiv@a+2
  5088  0024D8  C12F  F07E         	movff	_kkk+3,___fldiv@a+3
  5089  0024DC  C128  F077         	movff	_jjj,___fldiv@b
  5090  0024E0  C129  F078         	movff	_jjj+1,___fldiv@b+1
  5091  0024E4  C12A  F079         	movff	_jjj+2,___fldiv@b+2
  5092  0024E8  C12B  F07A         	movff	_jjj+3,___fldiv@b+3
  5093  0024EC  ECFB  F01D         	call	___fldiv	;wreg free
  5094  0024F0  C077  F1CA         	movff	?___fldiv,_matematica$3746
  5095  0024F4  C078  F1CB         	movff	?___fldiv+1,_matematica$3746+1
  5096  0024F8  C079  F1CC         	movff	?___fldiv+2,_matematica$3746+2
  5097  0024FC  C07A  F1CD         	movff	?___fldiv+3,_matematica$3746+3
  5098                           
  5099                           ;parcheggio.c: 441: Pminimo = kkk * cos(asin((jjj / kkk)));
  5100  002500  C1CA  F0DE         	movff	_matematica$3746,asin@x
  5101  002504  C1CB  F0DF         	movff	_matematica$3746+1,asin@x+1
  5102  002508  C1CC  F0E0         	movff	_matematica$3746+2,asin@x+2
  5103  00250C  C1CD  F0E1         	movff	_matematica$3746+3,asin@x+3
  5104  002510  EC36  F023         	call	_asin	;wreg free
  5105  002514  C0DE  F1B2         	movff	?_asin,cos@f
  5106  002518  C0DF  F1B3         	movff	?_asin+1,cos@f+1
  5107  00251C  C0E0  F1B4         	movff	?_asin+2,cos@f+2
  5108  002520  C0E1  F1B5         	movff	?_asin+3,cos@f+3
  5109  002524  ECDA  F02C         	call	_cos	;wreg free
  5110  002528  C1B2  F1CE         	movff	?_cos,_matematica$3747
  5111  00252C  C1B3  F1CF         	movff	?_cos+1,_matematica$3747+1
  5112  002530  C1B4  F1D0         	movff	?_cos+2,_matematica$3747+2
  5113  002534  C1B5  F1D1         	movff	?_cos+3,_matematica$3747+3
  5114                           
  5115                           ;parcheggio.c: 441: Pminimo = kkk * cos(asin((jjj / kkk)));
  5116  002538  C1CE  F090         	movff	_matematica$3747,___flmul@b
  5117  00253C  C1CF  F091         	movff	_matematica$3747+1,___flmul@b+1
  5118  002540  C1D0  F092         	movff	_matematica$3747+2,___flmul@b+2
  5119  002544  C1D1  F093         	movff	_matematica$3747+3,___flmul@b+3
  5120  002548  C12C  F094         	movff	_kkk,___flmul@a
  5121  00254C  C12D  F095         	movff	_kkk+1,___flmul@a+1
  5122  002550  C12E  F096         	movff	_kkk+2,___flmul@a+2
  5123  002554  C12F  F097         	movff	_kkk+3,___flmul@a+3
  5124  002558  EC91  F017         	call	___flmul	;wreg free
  5125  00255C  C090  F118         	movff	?___flmul,_Pminimo
  5126  002560  C091  F119         	movff	?___flmul+1,_Pminimo+1
  5127  002564  C092  F11A         	movff	?___flmul+2,_Pminimo+2
  5128  002568  C093  F11B         	movff	?___flmul+3,_Pminimo+3
  5129  00256C  0012               	return		;funcret
  5130  00256E                     __end_of_matematica:
  5131                           	opt stack 0
  5132                           tblptru	equ	0xFF8
  5133                           tblptrh	equ	0xFF7
  5134                           tblptrl	equ	0xFF6
  5135                           tablat	equ	0xFF5
  5136                           postinc0	equ	0xFEE
  5137                           wreg	equ	0xFE8
  5138                           postdec1	equ	0xFE5
  5139                           fsr1l	equ	0xFE1
  5140                           indf2	equ	0xFDF
  5141                           postinc2	equ	0xFDE
  5142                           postdec2	equ	0xFDD
  5143                           fsr2h	equ	0xFDA
  5144                           fsr2l	equ	0xFD9
  5145                           status	equ	0xFD8
  5146                           
  5147 ;; *************** function _cos *****************
  5148 ;; Defined at:
  5149 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\cos.c"
  5150 ;; Parameters:    Size  Location     Type
  5151 ;;  f               4   37[BANK1 ] int 
  5152 ;; Auto vars:     Size  Location     Type
  5153 ;;		None
  5154 ;; Return value:  Size  Location     Type
  5155 ;;                  4   37[BANK1 ] int 
  5156 ;; Registers used:
  5157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5158 ;; Tracked objects:
  5159 ;;		On entry : 0/0
  5160 ;;		On exit  : 0/0
  5161 ;;		Unchanged: 0/0
  5162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5163 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5164 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5166 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  5167 ;;Total ram usage:        8 bytes
  5168 ;; Hardware stack levels used:    1
  5169 ;; Hardware stack levels required when called:    7
  5170 ;; This function calls:
  5171 ;;		___fladd
  5172 ;;		___flge
  5173 ;;		_sin
  5174 ;; This function is called by:
  5175 ;;		_matematica
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text9
  5180  0059B4                     __ptext9:
  5181                           	opt stack 0
  5182  0059B4                     _cos:
  5183                           	opt stack 21
  5184                           
  5185                           ;incstack = 0
  5186  0059B4  0EDB               	movlw	219
  5187  0059B6  0100               	movlb	0	; () banked
  5188  0059B8  6FC5               	movwf	___flge@ff1& (0+255),b
  5189  0059BA  0E0F               	movlw	15
  5190  0059BC  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5191  0059BE  0E49               	movlw	73
  5192  0059C0  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5193  0059C2  0E40               	movlw	64
  5194  0059C4  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5195  0059C6  C1B2  F0C9         	movff	cos@f,___flge@ff2
  5196  0059CA  C1B3  F0CA         	movff	cos@f+1,___flge@ff2+1
  5197  0059CE  C1B4  F0CB         	movff	cos@f+2,___flge@ff2+2
  5198  0059D2  C1B5  F0CC         	movff	cos@f+3,___flge@ff2+3
  5199  0059D6  ECD3  F029         	call	___flge	;wreg free
  5200  0059DA  0100               	movlb	0	; () banked
  5201  0059DC  B0D8               	btfsc	status,0,c
  5202  0059DE  D02E               	goto	l7305
  5203                           
  5204                           ; BSR set to: 0
  5205  0059E0  C1B2  F0A9         	movff	cos@f,___fladd@b
  5206  0059E4  C1B3  F0AA         	movff	cos@f+1,___fladd@b+1
  5207  0059E8  C1B4  F0AB         	movff	cos@f+2,___fladd@b+2
  5208  0059EC  C1B5  F0AC         	movff	cos@f+3,___fladd@b+3
  5209  0059F0  0EE4               	movlw	228
  5210  0059F2  0100               	movlb	0	; () banked
  5211  0059F4  6FAD               	movwf	___fladd@a& (0+255),b
  5212  0059F6  0ECB               	movlw	203
  5213  0059F8  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5214  0059FA  0E96               	movlw	150
  5215  0059FC  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5216  0059FE  0EC0               	movlw	192
  5217  005A00  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5218  005A02  EC3D  F015         	call	___fladd	;wreg free
  5219  005A06  C0A9  F1B6         	movff	?___fladd,_cos$3751
  5220  005A0A  C0AA  F1B7         	movff	?___fladd+1,_cos$3751+1
  5221  005A0E  C0AB  F1B8         	movff	?___fladd+2,_cos$3751+2
  5222  005A12  C0AC  F1B9         	movff	?___fladd+3,_cos$3751+3
  5223  005A16  C1B6  F195         	movff	_cos$3751,sin@f
  5224  005A1A  C1B7  F196         	movff	_cos$3751+1,sin@f+1
  5225  005A1E  C1B8  F197         	movff	_cos$3751+2,sin@f+2
  5226  005A22  C1B9  F198         	movff	_cos$3751+3,sin@f+3
  5227  005A26  ECAA  F021         	call	_sin	;wreg free
  5228  005A2A  C195  F1B2         	movff	?_sin,?_cos
  5229  005A2E  C196  F1B3         	movff	?_sin+1,?_cos+1
  5230  005A32  C197  F1B4         	movff	?_sin+2,?_cos+2
  5231  005A36  C198  F1B5         	movff	?_sin+3,?_cos+3
  5232  005A3A  0012               	return	
  5233  005A3C                     l7305:
  5234  005A3C  C1B2  F0A9         	movff	cos@f,___fladd@b
  5235  005A40  C1B3  F0AA         	movff	cos@f+1,___fladd@b+1
  5236  005A44  C1B4  F0AB         	movff	cos@f+2,___fladd@b+2
  5237  005A48  C1B5  F0AC         	movff	cos@f+3,___fladd@b+3
  5238  005A4C  0EDB               	movlw	219
  5239  005A4E  0100               	movlb	0	; () banked
  5240  005A50  6FAD               	movwf	___fladd@a& (0+255),b
  5241  005A52  0E0F               	movlw	15
  5242  005A54  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5243  005A56  0EC9               	movlw	201
  5244  005A58  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5245  005A5A  0E3F               	movlw	63
  5246  005A5C  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5247  005A5E  EC3D  F015         	call	___fladd	;wreg free
  5248  005A62  C0A9  F1B6         	movff	?___fladd,_cos$3751
  5249  005A66  C0AA  F1B7         	movff	?___fladd+1,_cos$3751+1
  5250  005A6A  C0AB  F1B8         	movff	?___fladd+2,_cos$3751+2
  5251  005A6E  C0AC  F1B9         	movff	?___fladd+3,_cos$3751+3
  5252  005A72  C1B6  F195         	movff	_cos$3751,sin@f
  5253  005A76  C1B7  F196         	movff	_cos$3751+1,sin@f+1
  5254  005A7A  C1B8  F197         	movff	_cos$3751+2,sin@f+2
  5255  005A7E  C1B9  F198         	movff	_cos$3751+3,sin@f+3
  5256  005A82  ECAA  F021         	call	_sin	;wreg free
  5257  005A86  C195  F1B2         	movff	?_sin,?_cos
  5258  005A8A  C196  F1B3         	movff	?_sin+1,?_cos+1
  5259  005A8E  C197  F1B4         	movff	?_sin+2,?_cos+2
  5260  005A92  C198  F1B5         	movff	?_sin+3,?_cos+3
  5261  005A96  0012               	return	
  5262  005A98                     __end_of_cos:
  5263                           	opt stack 0
  5264                           tblptru	equ	0xFF8
  5265                           tblptrh	equ	0xFF7
  5266                           tblptrl	equ	0xFF6
  5267                           tablat	equ	0xFF5
  5268                           postinc0	equ	0xFEE
  5269                           wreg	equ	0xFE8
  5270                           postdec1	equ	0xFE5
  5271                           fsr1l	equ	0xFE1
  5272                           indf2	equ	0xFDF
  5273                           postinc2	equ	0xFDE
  5274                           postdec2	equ	0xFDD
  5275                           fsr2h	equ	0xFDA
  5276                           fsr2l	equ	0xFD9
  5277                           status	equ	0xFD8
  5278                           
  5279 ;; *************** function _sin *****************
  5280 ;; Defined at:
  5281 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sin.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;  f               4    8[BANK1 ] int 
  5284 ;; Auto vars:     Size  Location     Type
  5285 ;;  x2              4   20[BANK1 ] int 
  5286 ;;  y               4   12[BANK1 ] int 
  5287 ;;  sgn             1   24[BANK1 ] unsigned char 
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  4    8[BANK1 ] unsigned char 
  5290 ;; Registers used:
  5291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5297 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5298 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  5299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5300 ;;      Totals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  5301 ;;Total ram usage:       17 bytes
  5302 ;; Hardware stack levels used:    1
  5303 ;; Hardware stack levels required when called:    6
  5304 ;; This function calls:
  5305 ;;		___fladd
  5306 ;;		___fldiv
  5307 ;;		___flge
  5308 ;;		___flmul
  5309 ;;		___flneg
  5310 ;;		___flsub
  5311 ;;		_eval_poly
  5312 ;;		_floor
  5313 ;; This function is called by:
  5314 ;;		_cos
  5315 ;; This function uses a non-reentrant model
  5316 ;;
  5317                           
  5318                           	psect	text10
  5319  004354                     __ptext10:
  5320                           	opt stack 0
  5321  004354                     _sin:
  5322                           	opt stack 21
  5323                           
  5324                           ;incstack = 0
  5325  004354  0E00               	movlw	0
  5326  004356  0101               	movlb	1	; () banked
  5327  004358  6FA5               	movwf	sin@sgn& (0+255),b
  5328                           
  5329                           ; BSR set to: 1
  5330  00435A  0101               	movlb	1	; () banked
  5331  00435C  AF98               	btfss	(sin@f+3)& (0+255),7,b
  5332  00435E  D015               	goto	l7187
  5333                           
  5334                           ; BSR set to: 1
  5335  004360  C195  F0BD         	movff	sin@f,___flneg@f1
  5336  004364  C196  F0BE         	movff	sin@f+1,___flneg@f1+1
  5337  004368  C197  F0BF         	movff	sin@f+2,___flneg@f1+2
  5338  00436C  C198  F0C0         	movff	sin@f+3,___flneg@f1+3
  5339  004370  EC3F  F02F         	call	___flneg	;wreg free
  5340  004374  C0BD  F195         	movff	?___flneg,sin@f
  5341  004378  C0BE  F196         	movff	?___flneg+1,sin@f+1
  5342  00437C  C0BF  F197         	movff	?___flneg+2,sin@f+2
  5343  004380  C0C0  F198         	movff	?___flneg+3,sin@f+3
  5344  004384  0E01               	movlw	1
  5345  004386  0101               	movlb	1	; () banked
  5346  004388  6FA5               	movwf	sin@sgn& (0+255),b
  5347  00438A                     l7187:
  5348                           
  5349                           ; BSR set to: 1
  5350  00438A  C195  F090         	movff	sin@f,___flmul@b
  5351  00438E  C196  F091         	movff	sin@f+1,___flmul@b+1
  5352  004392  C197  F092         	movff	sin@f+2,___flmul@b+2
  5353  004396  C198  F093         	movff	sin@f+3,___flmul@b+3
  5354  00439A  0E83               	movlw	131
  5355  00439C  0100               	movlb	0	; () banked
  5356  00439E  6F94               	movwf	___flmul@a& (0+255),b
  5357  0043A0  0EF9               	movlw	249
  5358  0043A2  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5359  0043A4  0E22               	movlw	34
  5360  0043A6  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5361  0043A8  0E3E               	movlw	62
  5362  0043AA  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5363  0043AC  EC91  F017         	call	___flmul	;wreg free
  5364  0043B0  C090  F195         	movff	?___flmul,sin@f
  5365  0043B4  C091  F196         	movff	?___flmul+1,sin@f+1
  5366  0043B8  C092  F197         	movff	?___flmul+2,sin@f+2
  5367  0043BC  C093  F198         	movff	?___flmul+3,sin@f+3
  5368  0043C0  C195  F18D         	movff	sin@f,___flsub@b
  5369  0043C4  C196  F18E         	movff	sin@f+1,___flsub@b+1
  5370  0043C8  C197  F18F         	movff	sin@f+2,___flsub@b+2
  5371  0043CC  C198  F190         	movff	sin@f+3,___flsub@b+3
  5372  0043D0  C195  F0D9         	movff	sin@f,floor@x
  5373  0043D4  C196  F0DA         	movff	sin@f+1,floor@x+1
  5374  0043D8  C197  F0DB         	movff	sin@f+2,floor@x+2
  5375  0043DC  C198  F0DC         	movff	sin@f+3,floor@x+3
  5376  0043E0  EC36  F02B         	call	_floor	;wreg free
  5377  0043E4  C0D9  F191         	movff	?_floor,___flsub@a
  5378  0043E8  C0DA  F192         	movff	?_floor+1,___flsub@a+1
  5379  0043EC  C0DB  F193         	movff	?_floor+2,___flsub@a+2
  5380  0043F0  C0DC  F194         	movff	?_floor+3,___flsub@a+3
  5381  0043F4  ECFC  F02E         	call	___flsub	;wreg free
  5382  0043F8  C18D  F195         	movff	?___flsub,sin@f
  5383  0043FC  C18E  F196         	movff	?___flsub+1,sin@f+1
  5384  004400  C18F  F197         	movff	?___flsub+2,sin@f+2
  5385  004404  C190  F198         	movff	?___flsub+3,sin@f+3
  5386  004408  C195  F090         	movff	sin@f,___flmul@b
  5387  00440C  C196  F091         	movff	sin@f+1,___flmul@b+1
  5388  004410  C197  F092         	movff	sin@f+2,___flmul@b+2
  5389  004414  C198  F093         	movff	sin@f+3,___flmul@b+3
  5390  004418  0E00               	movlw	0
  5391  00441A  0100               	movlb	0	; () banked
  5392  00441C  6F94               	movwf	___flmul@a& (0+255),b
  5393  00441E  0E00               	movlw	0
  5394  004420  6F95               	movwf	(___flmul@a+1)& (0+255),b
  5395  004422  0E80               	movlw	128
  5396  004424  6F96               	movwf	(___flmul@a+2)& (0+255),b
  5397  004426  0E40               	movlw	64
  5398  004428  6F97               	movwf	(___flmul@a+3)& (0+255),b
  5399  00442A  EC91  F017         	call	___flmul	;wreg free
  5400  00442E  C090  F195         	movff	?___flmul,sin@f
  5401  004432  C091  F196         	movff	?___flmul+1,sin@f+1
  5402  004436  C092  F197         	movff	?___flmul+2,sin@f+2
  5403  00443A  C093  F198         	movff	?___flmul+3,sin@f+3
  5404  00443E  0E00               	movlw	0
  5405  004440  0100               	movlb	0	; () banked
  5406  004442  6FC5               	movwf	___flge@ff1& (0+255),b
  5407  004444  0E00               	movlw	0
  5408  004446  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5409  004448  0E00               	movlw	0
  5410  00444A  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5411  00444C  0E40               	movlw	64
  5412  00444E  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5413  004450  C195  F0C9         	movff	sin@f,___flge@ff2
  5414  004454  C196  F0CA         	movff	sin@f+1,___flge@ff2+1
  5415  004458  C197  F0CB         	movff	sin@f+2,___flge@ff2+2
  5416  00445C  C198  F0CC         	movff	sin@f+3,___flge@ff2+3
  5417  004460  ECD3  F029         	call	___flge	;wreg free
  5418  004464  0100               	movlb	0	; () banked
  5419  004466  B0D8               	btfsc	status,0,c
  5420  004468  D025               	goto	l7199
  5421                           
  5422                           ; BSR set to: 0
  5423  00446A  C195  F18D         	movff	sin@f,___flsub@b
  5424  00446E  C196  F18E         	movff	sin@f+1,___flsub@b+1
  5425  004472  C197  F18F         	movff	sin@f+2,___flsub@b+2
  5426  004476  C198  F190         	movff	sin@f+3,___flsub@b+3
  5427  00447A  0E00               	movlw	0
  5428  00447C  0101               	movlb	1	; () banked
  5429  00447E  6F91               	movwf	___flsub@a& (0+255),b
  5430  004480  0E00               	movlw	0
  5431  004482  6F92               	movwf	(___flsub@a+1)& (0+255),b
  5432  004484  0E00               	movlw	0
  5433  004486  6F93               	movwf	(___flsub@a+2)& (0+255),b
  5434  004488  0E40               	movlw	64
  5435  00448A  6F94               	movwf	(___flsub@a+3)& (0+255),b
  5436  00448C  ECFC  F02E         	call	___flsub	;wreg free
  5437  004490  C18D  F195         	movff	?___flsub,sin@f
  5438  004494  C18E  F196         	movff	?___flsub+1,sin@f+1
  5439  004498  C18F  F197         	movff	?___flsub+2,sin@f+2
  5440  00449C  C190  F198         	movff	?___flsub+3,sin@f+3
  5441  0044A0  0101               	movlb	1	; () banked
  5442  0044A2  51A5               	movf	sin@sgn& (0+255),w,b
  5443  0044A4  0101               	movlb	1	; () banked
  5444  0044A6  A4D8               	btfss	status,2,c
  5445  0044A8  D002               	goto	u9260
  5446  0044AA  0E01               	movlw	1
  5447  0044AC  D001               	goto	u9270
  5448  0044AE                     u9260:
  5449  0044AE  0E00               	movlw	0
  5450  0044B0                     u9270:
  5451  0044B0  0101               	movlb	1	; () banked
  5452  0044B2  6FA5               	movwf	sin@sgn& (0+255),b
  5453  0044B4                     l7199:
  5454  0044B4  0E00               	movlw	0
  5455  0044B6  0100               	movlb	0	; () banked
  5456  0044B8  6FC5               	movwf	___flge@ff1& (0+255),b
  5457  0044BA  0E00               	movlw	0
  5458  0044BC  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  5459  0044BE  0E80               	movlw	128
  5460  0044C0  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  5461  0044C2  0E3F               	movlw	63
  5462  0044C4  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  5463  0044C6  C195  F0C9         	movff	sin@f,___flge@ff2
  5464  0044CA  C196  F0CA         	movff	sin@f+1,___flge@ff2+1
  5465  0044CE  C197  F0CB         	movff	sin@f+2,___flge@ff2+2
  5466  0044D2  C198  F0CC         	movff	sin@f+3,___flge@ff2+3
  5467  0044D6  ECD3  F029         	call	___flge	;wreg free
  5468  0044DA  0100               	movlb	0	; () banked
  5469  0044DC  B0D8               	btfsc	status,0,c
  5470  0044DE  D025               	goto	l7203
  5471                           
  5472                           ; BSR set to: 0
  5473  0044E0  C195  F0BD         	movff	sin@f,___flneg@f1
  5474  0044E4  C196  F0BE         	movff	sin@f+1,___flneg@f1+1
  5475  0044E8  C197  F0BF         	movff	sin@f+2,___flneg@f1+2
  5476  0044EC  C198  F0C0         	movff	sin@f+3,___flneg@f1+3
  5477  0044F0  EC3F  F02F         	call	___flneg	;wreg free
  5478  0044F4  C0BD  F0A9         	movff	?___flneg,___fladd@b
  5479  0044F8  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  5480  0044FC  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  5481  004500  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  5482  004504  0E00               	movlw	0
  5483  004506  0100               	movlb	0	; () banked
  5484  004508  6FAD               	movwf	___fladd@a& (0+255),b
  5485  00450A  0E00               	movlw	0
  5486  00450C  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5487  00450E  0E00               	movlw	0
  5488  004510  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5489  004512  0E40               	movlw	64
  5490  004514  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5491  004516  EC3D  F015         	call	___fladd	;wreg free
  5492  00451A  C0A9  F195         	movff	?___fladd,sin@f
  5493  00451E  C0AA  F196         	movff	?___fladd+1,sin@f+1
  5494  004522  C0AB  F197         	movff	?___fladd+2,sin@f+2
  5495  004526  C0AC  F198         	movff	?___fladd+3,sin@f+3
  5496  00452A                     l7203:
  5497  00452A  C195  F090         	movff	sin@f,___flmul@b
  5498  00452E  C196  F091         	movff	sin@f+1,___flmul@b+1
  5499  004532  C197  F092         	movff	sin@f+2,___flmul@b+2
  5500  004536  C198  F093         	movff	sin@f+3,___flmul@b+3
  5501  00453A  C195  F094         	movff	sin@f,___flmul@a
  5502  00453E  C196  F095         	movff	sin@f+1,___flmul@a+1
  5503  004542  C197  F096         	movff	sin@f+2,___flmul@a+2
  5504  004546  C198  F097         	movff	sin@f+3,___flmul@a+3
  5505  00454A  EC91  F017         	call	___flmul	;wreg free
  5506  00454E  C090  F1A1         	movff	?___flmul,sin@x2
  5507  004552  C091  F1A2         	movff	?___flmul+1,sin@x2+1
  5508  004556  C092  F1A3         	movff	?___flmul+2,sin@x2+2
  5509  00455A  C093  F1A4         	movff	?___flmul+3,sin@x2+3
  5510  00455E  C1A1  F0BD         	movff	sin@x2,eval_poly@x
  5511  004562  C1A2  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5512  004566  C1A3  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5513  00456A  C1A4  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5514  00456E  0E41               	movlw	low sin@coeff_b
  5515  004570  0100               	movlb	0	; () banked
  5516  004572  6FC1               	movwf	eval_poly@d& (0+255),b
  5517  004574  0E0D               	movlw	high sin@coeff_b
  5518  004576  0100               	movlb	0	; () banked
  5519  004578  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5520  00457A  0E00               	movlw	0
  5521  00457C  0100               	movlb	0	; () banked
  5522  00457E  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5523  004580  0E03               	movlw	3
  5524  004582  6FC3               	movwf	eval_poly@n& (0+255),b
  5525  004584  ECC8  F02B         	call	_eval_poly	;wreg free
  5526  004588  C0BD  F199         	movff	?_eval_poly,sin@y
  5527  00458C  C0BE  F19A         	movff	?_eval_poly+1,sin@y+1
  5528  004590  C0BF  F19B         	movff	?_eval_poly+2,sin@y+2
  5529  004594  C0C0  F19C         	movff	?_eval_poly+3,sin@y+3
  5530  004598  C199  F07B         	movff	sin@y,___fldiv@a
  5531  00459C  C19A  F07C         	movff	sin@y+1,___fldiv@a+1
  5532  0045A0  C19B  F07D         	movff	sin@y+2,___fldiv@a+2
  5533  0045A4  C19C  F07E         	movff	sin@y+3,___fldiv@a+3
  5534  0045A8  0E00               	movlw	0
  5535  0045AA  0100               	movlb	0	; () banked
  5536  0045AC  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  5537  0045AE  0E04               	movlw	4
  5538  0045B0  6FC3               	movwf	eval_poly@n& (0+255),b
  5539  0045B2  0E2D               	movlw	low sin@coeff_a
  5540  0045B4  0100               	movlb	0	; () banked
  5541  0045B6  6FC1               	movwf	eval_poly@d& (0+255),b
  5542  0045B8  0E0D               	movlw	high sin@coeff_a
  5543  0045BA  0100               	movlb	0	; () banked
  5544  0045BC  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  5545  0045BE  C1A1  F0BD         	movff	sin@x2,eval_poly@x
  5546  0045C2  C1A2  F0BE         	movff	sin@x2+1,eval_poly@x+1
  5547  0045C6  C1A3  F0BF         	movff	sin@x2+2,eval_poly@x+2
  5548  0045CA  C1A4  F0C0         	movff	sin@x2+3,eval_poly@x+3
  5549  0045CE  ECC8  F02B         	call	_eval_poly	;wreg free
  5550  0045D2  C0BD  F077         	movff	?_eval_poly,___fldiv@b
  5551  0045D6  C0BE  F078         	movff	?_eval_poly+1,___fldiv@b+1
  5552  0045DA  C0BF  F079         	movff	?_eval_poly+2,___fldiv@b+2
  5553  0045DE  C0C0  F07A         	movff	?_eval_poly+3,___fldiv@b+3
  5554  0045E2  ECFB  F01D         	call	___fldiv	;wreg free
  5555  0045E6  C077  F19D         	movff	?___fldiv,_sin$3752
  5556  0045EA  C078  F19E         	movff	?___fldiv+1,_sin$3752+1
  5557  0045EE  C079  F19F         	movff	?___fldiv+2,_sin$3752+2
  5558  0045F2  C07A  F1A0         	movff	?___fldiv+3,_sin$3752+3
  5559  0045F6  C195  F090         	movff	sin@f,___flmul@b
  5560  0045FA  C196  F091         	movff	sin@f+1,___flmul@b+1
  5561  0045FE  C197  F092         	movff	sin@f+2,___flmul@b+2
  5562  004602  C198  F093         	movff	sin@f+3,___flmul@b+3
  5563  004606  C19D  F094         	movff	_sin$3752,___flmul@a
  5564  00460A  C19E  F095         	movff	_sin$3752+1,___flmul@a+1
  5565  00460E  C19F  F096         	movff	_sin$3752+2,___flmul@a+2
  5566  004612  C1A0  F097         	movff	_sin$3752+3,___flmul@a+3
  5567  004616  EC91  F017         	call	___flmul	;wreg free
  5568  00461A  C090  F195         	movff	?___flmul,sin@f
  5569  00461E  C091  F196         	movff	?___flmul+1,sin@f+1
  5570  004622  C092  F197         	movff	?___flmul+2,sin@f+2
  5571  004626  C093  F198         	movff	?___flmul+3,sin@f+3
  5572  00462A  0101               	movlb	1	; () banked
  5573  00462C  51A5               	movf	sin@sgn& (0+255),w,b
  5574  00462E  0101               	movlb	1	; () banked
  5575  004630  B4D8               	btfsc	status,2,c
  5576  004632  D013               	goto	l1314
  5577                           
  5578                           ; BSR set to: 1
  5579  004634  C195  F0BD         	movff	sin@f,___flneg@f1
  5580  004638  C196  F0BE         	movff	sin@f+1,___flneg@f1+1
  5581  00463C  C197  F0BF         	movff	sin@f+2,___flneg@f1+2
  5582  004640  C198  F0C0         	movff	sin@f+3,___flneg@f1+3
  5583  004644  EC3F  F02F         	call	___flneg	;wreg free
  5584  004648  C0BD  F195         	movff	?___flneg,?_sin
  5585  00464C  C0BE  F196         	movff	?___flneg+1,?_sin+1
  5586  004650  C0BF  F197         	movff	?___flneg+2,?_sin+2
  5587  004654  C0C0  F198         	movff	?___flneg+3,?_sin+3
  5588  004658  0012               	return	
  5589  00465A                     l1314:
  5590                           
  5591                           ; BSR set to: 1
  5592  00465A  C195  F195         	movff	sin@f,?_sin
  5593  00465E  C196  F196         	movff	sin@f+1,?_sin+1
  5594  004662  C197  F197         	movff	sin@f+2,?_sin+2
  5595  004666  C198  F198         	movff	sin@f+3,?_sin+3
  5596  00466A  0012               	return		;funcret
  5597  00466C                     __end_of_sin:
  5598                           	opt stack 0
  5599                           tblptru	equ	0xFF8
  5600                           tblptrh	equ	0xFF7
  5601                           tblptrl	equ	0xFF6
  5602                           tablat	equ	0xFF5
  5603                           postinc0	equ	0xFEE
  5604                           wreg	equ	0xFE8
  5605                           postdec1	equ	0xFE5
  5606                           fsr1l	equ	0xFE1
  5607                           indf2	equ	0xFDF
  5608                           postinc2	equ	0xFDE
  5609                           postdec2	equ	0xFDD
  5610                           fsr2h	equ	0xFDA
  5611                           fsr2l	equ	0xFD9
  5612                           status	equ	0xFD8
  5613                           
  5614 ;; *************** function _floor *****************
  5615 ;; Defined at:
  5616 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\floor.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;  x               4  121[BANK0 ] unsigned char 
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;  i               4  125[BANK0 ] unsigned char 
  5621 ;;  expon           2  129[BANK0 ] int 
  5622 ;; Return value:  Size  Location     Type
  5623 ;;                  4  121[BANK0 ] int 
  5624 ;; Registers used:
  5625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5626 ;; Tracked objects:
  5627 ;;		On entry : 0/0
  5628 ;;		On exit  : 0/0
  5629 ;;		Unchanged: 0/0
  5630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5631 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5632 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5634 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5635 ;;Total ram usage:       10 bytes
  5636 ;; Hardware stack levels used:    1
  5637 ;; Hardware stack levels required when called:    5
  5638 ;; This function calls:
  5639 ;;		___fladd
  5640 ;;		___flge
  5641 ;;		___fltol
  5642 ;;		___xxtofl
  5643 ;;		_frexp
  5644 ;; This function is called by:
  5645 ;;		_sin
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text11
  5650  00566C                     __ptext11:
  5651                           	opt stack 0
  5652  00566C                     _floor:
  5653                           	opt stack 21
  5654                           
  5655                           ;incstack = 0
  5656  00566C  C0D9  F077         	movff	floor@x,frexp@value
  5657  005670  C0DA  F078         	movff	floor@x+1,frexp@value+1
  5658  005674  C0DB  F079         	movff	floor@x+2,frexp@value+2
  5659  005678  C0DC  F07A         	movff	floor@x+3,frexp@value+3
  5660  00567C  0EE1               	movlw	low floor@expon
  5661  00567E  0100               	movlb	0	; () banked
  5662  005680  6F7B               	movwf	frexp@eptr& (0+255),b
  5663  005682  0E00               	movlw	high floor@expon
  5664  005684  0100               	movlb	0	; () banked
  5665  005686  6F7C               	movwf	(frexp@eptr+1)& (0+255),b
  5666  005688  ECBD  F02D         	call	_frexp	;wreg free
  5667  00568C  0100               	movlb	0	; () banked
  5668  00568E  AFE2               	btfss	(floor@expon+1)& (0+255),7,b
  5669  005690  D017               	goto	l6793
  5670                           
  5671                           ; BSR set to: 0
  5672  005692  0100               	movlb	0	; () banked
  5673  005694  AFDC               	btfss	(floor@x+3)& (0+255),7,b
  5674  005696  D00A               	goto	l6789
  5675                           
  5676                           ; BSR set to: 0
  5677  005698  0E00               	movlw	0
  5678  00569A  0100               	movlb	0	; () banked
  5679  00569C  6FD9               	movwf	?_floor& (0+255),b
  5680  00569E  0E00               	movlw	0
  5681  0056A0  6FDA               	movwf	(?_floor+1)& (0+255),b
  5682  0056A2  0E80               	movlw	128
  5683  0056A4  6FDB               	movwf	(?_floor+2)& (0+255),b
  5684  0056A6  0EBF               	movlw	191
  5685  0056A8  6FDC               	movwf	(?_floor+3)& (0+255),b
  5686                           
  5687                           ; BSR set to: 0
  5688  0056AA  0012               	return	
  5689  0056AC                     l6789:
  5690                           
  5691                           ; BSR set to: 0
  5692  0056AC  0E00               	movlw	0
  5693  0056AE  0100               	movlb	0	; () banked
  5694  0056B0  6FD9               	movwf	?_floor& (0+255),b
  5695  0056B2  0E00               	movlw	0
  5696  0056B4  6FDA               	movwf	(?_floor+1)& (0+255),b
  5697  0056B6  0E00               	movlw	0
  5698  0056B8  6FDB               	movwf	(?_floor+2)& (0+255),b
  5699  0056BA  0E00               	movlw	0
  5700  0056BC  6FDC               	movwf	(?_floor+3)& (0+255),b
  5701                           
  5702                           ; BSR set to: 0
  5703  0056BE  0012               	return	
  5704  0056C0                     l6793:
  5705                           
  5706                           ; BSR set to: 0
  5707  0056C0  0100               	movlb	0	; () banked
  5708  0056C2  51E2               	movf	(floor@expon+1)& (0+255),w,b
  5709  0056C4  E105               	bnz	u8630
  5710  0056C6  0E1D               	movlw	29
  5711  0056C8  0100               	movlb	0	; () banked
  5712  0056CA  5DE1               	subwf	floor@expon& (0+255),w,b
  5713  0056CC  A0D8               	btfss	status,0,c
  5714  0056CE  D009               	goto	l6797
  5715  0056D0                     u8630:
  5716                           
  5717                           ; BSR set to: 0
  5718  0056D0  C0D9  F0D9         	movff	floor@x,?_floor
  5719  0056D4  C0DA  F0DA         	movff	floor@x+1,?_floor+1
  5720  0056D8  C0DB  F0DB         	movff	floor@x+2,?_floor+2
  5721  0056DC  C0DC  F0DC         	movff	floor@x+3,?_floor+3
  5722  0056E0  0012               	return	
  5723  0056E2                     l6797:
  5724                           
  5725                           ; BSR set to: 0
  5726  0056E2  C0D9  F0C1         	movff	floor@x,___fltol@f1
  5727  0056E6  C0DA  F0C2         	movff	floor@x+1,___fltol@f1+1
  5728  0056EA  C0DB  F0C3         	movff	floor@x+2,___fltol@f1+2
  5729  0056EE  C0DC  F0C4         	movff	floor@x+3,___fltol@f1+3
  5730  0056F2  EC54  F02C         	call	___fltol	;wreg free
  5731  0056F6  C0C1  F0CB         	movff	?___fltol,___xxtofl@val
  5732  0056FA  C0C2  F0CC         	movff	?___fltol+1,___xxtofl@val+1
  5733  0056FE  C0C3  F0CD         	movff	?___fltol+2,___xxtofl@val+2
  5734  005702  C0C4  F0CE         	movff	?___fltol+3,___xxtofl@val+3
  5735  005706  0E01               	movlw	1
  5736  005708  EC2E  F027         	call	___xxtofl
  5737  00570C  C0CB  F0DD         	movff	?___xxtofl,floor@i
  5738  005710  C0CC  F0DE         	movff	?___xxtofl+1,floor@i+1
  5739  005714  C0CD  F0DF         	movff	?___xxtofl+2,floor@i+2
  5740  005718  C0CE  F0E0         	movff	?___xxtofl+3,floor@i+3
  5741  00571C  C0D9  F0C5         	movff	floor@x,___flge@ff1
  5742  005720  C0DA  F0C6         	movff	floor@x+1,___flge@ff1+1
  5743  005724  C0DB  F0C7         	movff	floor@x+2,___flge@ff1+2
  5744  005728  C0DC  F0C8         	movff	floor@x+3,___flge@ff1+3
  5745  00572C  C0DD  F0C9         	movff	floor@i,___flge@ff2
  5746  005730  C0DE  F0CA         	movff	floor@i+1,___flge@ff2+1
  5747  005734  C0DF  F0CB         	movff	floor@i+2,___flge@ff2+2
  5748  005738  C0E0  F0CC         	movff	floor@i+3,___flge@ff2+3
  5749  00573C  ECD3  F029         	call	___flge	;wreg free
  5750  005740  0100               	movlb	0	; () banked
  5751  005742  B0D8               	btfsc	status,0,c
  5752  005744  D01C               	goto	l1483
  5753                           
  5754                           ; BSR set to: 0
  5755  005746  C0DD  F0A9         	movff	floor@i,___fladd@b
  5756  00574A  C0DE  F0AA         	movff	floor@i+1,___fladd@b+1
  5757  00574E  C0DF  F0AB         	movff	floor@i+2,___fladd@b+2
  5758  005752  C0E0  F0AC         	movff	floor@i+3,___fladd@b+3
  5759  005756  0E00               	movlw	0
  5760  005758  0100               	movlb	0	; () banked
  5761  00575A  6FAD               	movwf	___fladd@a& (0+255),b
  5762  00575C  0E00               	movlw	0
  5763  00575E  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  5764  005760  0E80               	movlw	128
  5765  005762  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  5766  005764  0EBF               	movlw	191
  5767  005766  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  5768  005768  EC3D  F015         	call	___fladd	;wreg free
  5769  00576C  C0A9  F0D9         	movff	?___fladd,?_floor
  5770  005770  C0AA  F0DA         	movff	?___fladd+1,?_floor+1
  5771  005774  C0AB  F0DB         	movff	?___fladd+2,?_floor+2
  5772  005778  C0AC  F0DC         	movff	?___fladd+3,?_floor+3
  5773  00577C  0012               	return	
  5774  00577E                     l1483:
  5775                           
  5776                           ; BSR set to: 0
  5777  00577E  C0DD  F0D9         	movff	floor@i,?_floor
  5778  005782  C0DE  F0DA         	movff	floor@i+1,?_floor+1
  5779  005786  C0DF  F0DB         	movff	floor@i+2,?_floor+2
  5780  00578A  C0E0  F0DC         	movff	floor@i+3,?_floor+3
  5781  00578E  0012               	return		;funcret
  5782  005790                     __end_of_floor:
  5783                           	opt stack 0
  5784                           tblptru	equ	0xFF8
  5785                           tblptrh	equ	0xFF7
  5786                           tblptrl	equ	0xFF6
  5787                           tablat	equ	0xFF5
  5788                           postinc0	equ	0xFEE
  5789                           wreg	equ	0xFE8
  5790                           postdec1	equ	0xFE5
  5791                           fsr1l	equ	0xFE1
  5792                           indf2	equ	0xFDF
  5793                           postinc2	equ	0xFDE
  5794                           postdec2	equ	0xFDD
  5795                           fsr2h	equ	0xFDA
  5796                           fsr2l	equ	0xFD9
  5797                           status	equ	0xFD8
  5798                           
  5799 ;; *************** function _frexp *****************
  5800 ;; Defined at:
  5801 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\frexp.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;  value           4   23[BANK0 ] int 
  5804 ;;  eptr            2   27[BANK0 ] PTR int 
  5805 ;;		 -> floor@expon(2), 
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;		None
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  4   23[BANK0 ] PTR int 
  5810 ;; Registers used:
  5811 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5817 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5819 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5820 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5821 ;;Total ram usage:        8 bytes
  5822 ;; Hardware stack levels used:    1
  5823 ;; Hardware stack levels required when called:    4
  5824 ;; This function calls:
  5825 ;;		Nothing
  5826 ;; This function is called by:
  5827 ;;		_floor
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831                           	psect	text12
  5832  005B7A                     __ptext12:
  5833                           	opt stack 0
  5834  005B7A                     _frexp:
  5835                           	opt stack 21
  5836                           
  5837                           ;incstack = 0
  5838  005B7A  0100               	movlb	0	; () banked
  5839  005B7C  5177               	movf	frexp@value& (0+255),w,b
  5840  005B7E  0100               	movlb	0	; () banked
  5841  005B80  1178               	iorwf	(frexp@value+1)& (0+255),w,b
  5842  005B82  0100               	movlb	0	; () banked
  5843  005B84  1179               	iorwf	(frexp@value+2)& (0+255),w,b
  5844  005B86  0100               	movlb	0	; () banked
  5845  005B88  117A               	iorwf	(frexp@value+3)& (0+255),w,b
  5846  005B8A  A4D8               	btfss	status,2,c
  5847  005B8C  D009               	goto	l6615
  5848                           
  5849                           ; BSR set to: 0
  5850  005B8E  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5851  005B92  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5852  005B96  0E00               	movlw	0
  5853  005B98  6EDE               	movwf	postinc2,c
  5854  005B9A  0E00               	movlw	0
  5855  005B9C  6EDD               	movwf	postdec2,c
  5856                           
  5857                           ; BSR set to: 0
  5858                           ;	Return value of _frexp is never used
  5859  005B9E  0012               	return	
  5860  005BA0                     l6615:
  5861                           
  5862                           ; BSR set to: 0
  5863  005BA0  0100               	movlb	0	; () banked
  5864  005BA2  517A               	movf	(frexp@value+3)& (0+255),w,b
  5865  005BA4  0B7F               	andlw	127
  5866  005BA6  0100               	movlb	0	; () banked
  5867  005BA8  6F7D               	movwf	??_frexp& (0+255),b
  5868  005BAA  6B7E               	clrf	(??_frexp+1)& (0+255),b
  5869  005BAC  90D8               	bcf	status,0,c
  5870  005BAE  0100               	movlb	0	; () banked
  5871  005BB0  377D               	rlcf	??_frexp& (0+255),f,b
  5872  005BB2  377E               	rlcf	(??_frexp+1)& (0+255),f,b
  5873  005BB4  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5874  005BB8  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5875  005BBC  C07D  FFDE         	movff	??_frexp,postinc2
  5876  005BC0  C07E  FFDD         	movff	??_frexp+1,postdec2
  5877  005BC4  0100               	movlb	0	; () banked
  5878  005BC6  AF79               	btfss	(frexp@value+2)& (0+255),7,b
  5879  005BC8  D004               	goto	u8350
  5880  005BCA  0100               	movlb	0	; () banked
  5881  005BCC  6B7D               	clrf	??_frexp& (0+255),b
  5882  005BCE  2B7D               	incf	??_frexp& (0+255),f,b
  5883  005BD0  D002               	goto	u8358
  5884  005BD2                     u8350:
  5885  005BD2  0100               	movlb	0	; () banked
  5886  005BD4  6B7D               	clrf	??_frexp& (0+255),b
  5887  005BD6                     u8358:
  5888  005BD6  0100               	movlb	0	; () banked
  5889  005BD8  517D               	movf	??_frexp& (0+255),w,b
  5890  005BDA  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5891  005BDE  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5892  005BE2  12DE               	iorwf	postinc2,f,c
  5893  005BE4  0E00               	movlw	0
  5894  005BE6  12DD               	iorwf	postdec2,f,c
  5895                           
  5896                           ; BSR set to: 0
  5897  005BE8  C07B  FFD9         	movff	frexp@eptr,fsr2l
  5898  005BEC  C07C  FFDA         	movff	frexp@eptr+1,fsr2h
  5899  005BF0  0E82               	movlw	130
  5900  005BF2  26DE               	addwf	postinc2,f,c
  5901  005BF4  0EFF               	movlw	255
  5902  005BF6  22DD               	addwfc	postdec2,f,c
  5903                           
  5904                           ; BSR set to: 0
  5905  005BF8  0100               	movlb	0	; () banked
  5906  005BFA  817A               	bsf	(frexp@value+3)& (0+255),0,b
  5907  005BFC  837A               	bsf	(frexp@value+3)& (0+255),1,b
  5908  005BFE  857A               	bsf	(frexp@value+3)& (0+255),2,b
  5909  005C00  877A               	bsf	(frexp@value+3)& (0+255),3,b
  5910  005C02  897A               	bsf	(frexp@value+3)& (0+255),4,b
  5911  005C04  8B7A               	bsf	(frexp@value+3)& (0+255),5,b
  5912  005C06  9D7A               	bcf	(frexp@value+3)& (0+255),6,b
  5913                           
  5914                           ; BSR set to: 0
  5915  005C08  0100               	movlb	0	; () banked
  5916  005C0A  9F79               	bcf	(frexp@value+2)& (0+255),7,b
  5917  005C0C  0012               	return	
  5918  005C0E                     __end_of_frexp:
  5919                           	opt stack 0
  5920                           tblptru	equ	0xFF8
  5921                           tblptrh	equ	0xFF7
  5922                           tblptrl	equ	0xFF6
  5923                           tablat	equ	0xFF5
  5924                           postinc0	equ	0xFEE
  5925                           wreg	equ	0xFE8
  5926                           postdec1	equ	0xFE5
  5927                           fsr1l	equ	0xFE1
  5928                           indf2	equ	0xFDF
  5929                           postinc2	equ	0xFDE
  5930                           postdec2	equ	0xFDD
  5931                           fsr2h	equ	0xFDA
  5932                           fsr2l	equ	0xFD9
  5933                           status	equ	0xFD8
  5934                           
  5935 ;; *************** function ___xxtofl *****************
  5936 ;; Defined at:
  5937 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\xxtofl.c"
  5938 ;; Parameters:    Size  Location     Type
  5939 ;;  sign            1    wreg     unsigned char 
  5940 ;;  val             4  107[BANK0 ] long 
  5941 ;; Auto vars:     Size  Location     Type
  5942 ;;  sign            1  115[BANK0 ] unsigned char 
  5943 ;;  arg             4  117[BANK0 ] unsigned long 
  5944 ;;  exp             1  116[BANK0 ] unsigned char 
  5945 ;; Return value:  Size  Location     Type
  5946 ;;                  4  107[BANK0 ] unsigned char 
  5947 ;; Registers used:
  5948 ;;		wreg, status,2, status,0
  5949 ;; Tracked objects:
  5950 ;;		On entry : 0/0
  5951 ;;		On exit  : 0/0
  5952 ;;		Unchanged: 0/0
  5953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5954 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5955 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5956 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5957 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5958 ;;Total ram usage:       14 bytes
  5959 ;; Hardware stack levels used:    1
  5960 ;; Hardware stack levels required when called:    4
  5961 ;; This function calls:
  5962 ;;		Nothing
  5963 ;; This function is called by:
  5964 ;;		_park_search
  5965 ;;		_park_routine
  5966 ;;		_parallelo
  5967 ;;		_floor
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text13
  5972  004E5C                     __ptext13:
  5973                           	opt stack 0
  5974  004E5C                     ___xxtofl:
  5975                           	opt stack 24
  5976                           
  5977                           ; BSR set to: 0
  5978                           ;incstack = 0
  5979                           ;___xxtofl@sign stored from wreg
  5980  004E5C  0100               	movlb	0	; () banked
  5981  004E5E  6FD3               	movwf	___xxtofl@sign& (0+255),b
  5982  004E60  0100               	movlb	0	; () banked
  5983  004E62  51D3               	movf	___xxtofl@sign& (0+255),w,b
  5984  004E64  0100               	movlb	0	; () banked
  5985  004E66  B4D8               	btfsc	status,2,c
  5986  004E68  D01E               	goto	l1458
  5987                           
  5988                           ; BSR set to: 0
  5989  004E6A  0100               	movlb	0	; () banked
  5990  004E6C  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  5991  004E6E  D01B               	goto	l1458
  5992                           
  5993                           ; BSR set to: 0
  5994  004E70  C0CB  F0CF         	movff	___xxtofl@val,??___xxtofl
  5995  004E74  C0CC  F0D0         	movff	___xxtofl@val+1,??___xxtofl+1
  5996  004E78  C0CD  F0D1         	movff	___xxtofl@val+2,??___xxtofl+2
  5997  004E7C  C0CE  F0D2         	movff	___xxtofl@val+3,??___xxtofl+3
  5998  004E80  0100               	movlb	0	; () banked
  5999  004E82  1FCF               	comf	??___xxtofl& (0+255),f,b
  6000  004E84  1FD0               	comf	(??___xxtofl+1)& (0+255),f,b
  6001  004E86  1FD1               	comf	(??___xxtofl+2)& (0+255),f,b
  6002  004E88  1FD2               	comf	(??___xxtofl+3)& (0+255),f,b
  6003  004E8A  2BCF               	incf	??___xxtofl& (0+255),f,b
  6004  004E8C  0E00               	movlw	0
  6005  004E8E  23D0               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6006  004E90  23D1               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6007  004E92  23D2               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6008  004E94  C0CF  F0D5         	movff	??___xxtofl,___xxtofl@arg
  6009  004E98  C0D0  F0D6         	movff	??___xxtofl+1,___xxtofl@arg+1
  6010  004E9C  C0D1  F0D7         	movff	??___xxtofl+2,___xxtofl@arg+2
  6011  004EA0  C0D2  F0D8         	movff	??___xxtofl+3,___xxtofl@arg+3
  6012  004EA4  D008               	goto	l6573
  6013  004EA6                     l1458:
  6014                           
  6015                           ; BSR set to: 0
  6016  004EA6  C0CB  F0D5         	movff	___xxtofl@val,___xxtofl@arg
  6017  004EAA  C0CC  F0D6         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6018  004EAE  C0CD  F0D7         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6019  004EB2  C0CE  F0D8         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6020  004EB6                     l6573:
  6021                           
  6022                           ; BSR set to: 0
  6023  004EB6  0100               	movlb	0	; () banked
  6024  004EB8  51CB               	movf	___xxtofl@val& (0+255),w,b
  6025  004EBA  0100               	movlb	0	; () banked
  6026  004EBC  11CC               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6027  004EBE  0100               	movlb	0	; () banked
  6028  004EC0  11CD               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6029  004EC2  0100               	movlb	0	; () banked
  6030  004EC4  11CE               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6031  004EC6  A4D8               	btfss	status,2,c
  6032  004EC8  D00A               	goto	l6579
  6033                           
  6034                           ; BSR set to: 0
  6035  004ECA  0E00               	movlw	0
  6036  004ECC  0100               	movlb	0	; () banked
  6037  004ECE  6FCB               	movwf	?___xxtofl& (0+255),b
  6038  004ED0  0E00               	movlw	0
  6039  004ED2  6FCC               	movwf	(?___xxtofl+1)& (0+255),b
  6040  004ED4  0E00               	movlw	0
  6041  004ED6  6FCD               	movwf	(?___xxtofl+2)& (0+255),b
  6042  004ED8  0E00               	movlw	0
  6043  004EDA  6FCE               	movwf	(?___xxtofl+3)& (0+255),b
  6044                           
  6045                           ; BSR set to: 0
  6046  004EDC  0012               	return	
  6047  004EDE                     l6579:
  6048                           
  6049                           ; BSR set to: 0
  6050  004EDE  0E96               	movlw	150
  6051  004EE0  0100               	movlb	0	; () banked
  6052  004EE2  6FD4               	movwf	___xxtofl@exp& (0+255),b
  6053  004EE4  D008               	goto	l6583
  6054  004EE6                     l6581:
  6055                           
  6056                           ; BSR set to: 0
  6057  004EE6  0100               	movlb	0	; () banked
  6058  004EE8  2BD4               	incf	___xxtofl@exp& (0+255),f,b
  6059  004EEA  0100               	movlb	0	; () banked
  6060  004EEC  90D8               	bcf	status,0,c
  6061  004EEE  33D8               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6062  004EF0  33D7               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6063  004EF2  33D6               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6064  004EF4  33D5               	rrcf	___xxtofl@arg& (0+255),f,b
  6065  004EF6                     l6583:
  6066                           
  6067                           ; BSR set to: 0
  6068  004EF6  0E00               	movlw	0
  6069  004EF8  0100               	movlb	0	; () banked
  6070  004EFA  15D5               	andwf	___xxtofl@arg& (0+255),w,b
  6071  004EFC  0100               	movlb	0	; () banked
  6072  004EFE  6FCF               	movwf	??___xxtofl& (0+255),b
  6073  004F00  0E00               	movlw	0
  6074  004F02  0100               	movlb	0	; () banked
  6075  004F04  15D6               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6076  004F06  0100               	movlb	0	; () banked
  6077  004F08  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6078  004F0A  0E00               	movlw	0
  6079  004F0C  0100               	movlb	0	; () banked
  6080  004F0E  15D7               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6081  004F10  0100               	movlb	0	; () banked
  6082  004F12  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6083  004F14  0EFE               	movlw	254
  6084  004F16  0100               	movlb	0	; () banked
  6085  004F18  15D8               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6086  004F1A  0100               	movlb	0	; () banked
  6087  004F1C  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6088  004F1E  0100               	movlb	0	; () banked
  6089  004F20  51CF               	movf	??___xxtofl& (0+255),w,b
  6090  004F22  0100               	movlb	0	; () banked
  6091  004F24  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6092  004F26  0100               	movlb	0	; () banked
  6093  004F28  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6094  004F2A  0100               	movlb	0	; () banked
  6095  004F2C  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6096  004F2E  B4D8               	btfsc	status,2,c
  6097  004F30  D010               	goto	l1465
  6098  004F32  D7D9               	goto	l6581
  6099  004F34                     l6585:
  6100                           
  6101                           ; BSR set to: 0
  6102  004F34  0100               	movlb	0	; () banked
  6103  004F36  2BD4               	incf	___xxtofl@exp& (0+255),f,b
  6104                           
  6105                           ; BSR set to: 0
  6106  004F38  0E01               	movlw	1
  6107  004F3A  0100               	movlb	0	; () banked
  6108  004F3C  27D5               	addwf	___xxtofl@arg& (0+255),f,b
  6109  004F3E  0E00               	movlw	0
  6110  004F40  23D6               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6111  004F42  23D7               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6112  004F44  23D8               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6113                           
  6114                           ; BSR set to: 0
  6115  004F46  0100               	movlb	0	; () banked
  6116  004F48  90D8               	bcf	status,0,c
  6117  004F4A  33D8               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6118  004F4C  33D7               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6119  004F4E  33D6               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6120  004F50  33D5               	rrcf	___xxtofl@arg& (0+255),f,b
  6121  004F52                     l1465:
  6122                           
  6123                           ; BSR set to: 0
  6124  004F52  0E00               	movlw	0
  6125  004F54  0100               	movlb	0	; () banked
  6126  004F56  15D5               	andwf	___xxtofl@arg& (0+255),w,b
  6127  004F58  0100               	movlb	0	; () banked
  6128  004F5A  6FCF               	movwf	??___xxtofl& (0+255),b
  6129  004F5C  0E00               	movlw	0
  6130  004F5E  0100               	movlb	0	; () banked
  6131  004F60  15D6               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6132  004F62  0100               	movlb	0	; () banked
  6133  004F64  6FD0               	movwf	(??___xxtofl+1)& (0+255),b
  6134  004F66  0E00               	movlw	0
  6135  004F68  0100               	movlb	0	; () banked
  6136  004F6A  15D7               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6137  004F6C  0100               	movlb	0	; () banked
  6138  004F6E  6FD1               	movwf	(??___xxtofl+2)& (0+255),b
  6139  004F70  0EFF               	movlw	255
  6140  004F72  0100               	movlb	0	; () banked
  6141  004F74  15D8               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6142  004F76  0100               	movlb	0	; () banked
  6143  004F78  6FD2               	movwf	(??___xxtofl+3)& (0+255),b
  6144  004F7A  0100               	movlb	0	; () banked
  6145  004F7C  51CF               	movf	??___xxtofl& (0+255),w,b
  6146  004F7E  0100               	movlb	0	; () banked
  6147  004F80  11D0               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6148  004F82  0100               	movlb	0	; () banked
  6149  004F84  11D1               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6150  004F86  0100               	movlb	0	; () banked
  6151  004F88  11D2               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6152  004F8A  B4D8               	btfsc	status,2,c
  6153  004F8C  D009               	goto	l6593
  6154  004F8E  D7D2               	goto	l6585
  6155  004F90                     l6591:
  6156                           
  6157                           ; BSR set to: 0
  6158  004F90  0100               	movlb	0	; () banked
  6159  004F92  07D4               	decf	___xxtofl@exp& (0+255),f,b
  6160  004F94  0100               	movlb	0	; () banked
  6161  004F96  90D8               	bcf	status,0,c
  6162  004F98  37D5               	rlcf	___xxtofl@arg& (0+255),f,b
  6163  004F9A  37D6               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6164  004F9C  37D7               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6165  004F9E  37D8               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6166  004FA0                     l6593:
  6167                           
  6168                           ; BSR set to: 0
  6169  004FA0  0100               	movlb	0	; () banked
  6170  004FA2  BFD7               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6171  004FA4  D004               	goto	l1472
  6172                           
  6173                           ; BSR set to: 0
  6174  004FA6  0E02               	movlw	2
  6175  004FA8  0100               	movlb	0	; () banked
  6176  004FAA  61D4               	cpfslt	___xxtofl@exp& (0+255),b
  6177  004FAC  D7F1               	goto	l6591
  6178  004FAE                     l1472:
  6179                           
  6180                           ; BSR set to: 0
  6181  004FAE  0100               	movlb	0	; () banked
  6182  004FB0  B1D4               	btfsc	___xxtofl@exp& (0+255),0,b
  6183  004FB2  D009               	goto	l1473
  6184                           
  6185                           ; BSR set to: 0
  6186  004FB4  0EFF               	movlw	255
  6187  004FB6  0100               	movlb	0	; () banked
  6188  004FB8  17D5               	andwf	___xxtofl@arg& (0+255),f,b
  6189  004FBA  0EFF               	movlw	255
  6190  004FBC  17D6               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  6191  004FBE  0E7F               	movlw	127
  6192  004FC0  17D7               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  6193  004FC2  0EFF               	movlw	255
  6194  004FC4  17D8               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  6195  004FC6                     l1473:
  6196                           
  6197                           ; BSR set to: 0
  6198  004FC6  0100               	movlb	0	; () banked
  6199  004FC8  90D8               	bcf	status,0,c
  6200  004FCA  33D4               	rrcf	___xxtofl@exp& (0+255),f,b
  6201  004FCC  C0D4  F0CF         	movff	___xxtofl@exp,??___xxtofl
  6202  004FD0  0100               	movlb	0	; () banked
  6203  004FD2  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6204  004FD4  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6205  004FD6  6BD2               	clrf	(??___xxtofl+3)& (0+255),b
  6206  004FD8  C0CF  F0D2         	movff	??___xxtofl,??___xxtofl+3
  6207  004FDC  0100               	movlb	0	; () banked
  6208  004FDE  6BD1               	clrf	(??___xxtofl+2)& (0+255),b
  6209  004FE0  6BD0               	clrf	(??___xxtofl+1)& (0+255),b
  6210  004FE2  6BCF               	clrf	??___xxtofl& (0+255),b
  6211  004FE4  0100               	movlb	0	; () banked
  6212  004FE6  51CF               	movf	??___xxtofl& (0+255),w,b
  6213  004FE8  0100               	movlb	0	; () banked
  6214  004FEA  13D5               	iorwf	___xxtofl@arg& (0+255),f,b
  6215  004FEC  0100               	movlb	0	; () banked
  6216  004FEE  51D0               	movf	(??___xxtofl+1)& (0+255),w,b
  6217  004FF0  0100               	movlb	0	; () banked
  6218  004FF2  13D6               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6219  004FF4  0100               	movlb	0	; () banked
  6220  004FF6  51D1               	movf	(??___xxtofl+2)& (0+255),w,b
  6221  004FF8  0100               	movlb	0	; () banked
  6222  004FFA  13D7               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6223  004FFC  0100               	movlb	0	; () banked
  6224  004FFE  51D2               	movf	(??___xxtofl+3)& (0+255),w,b
  6225  005000  0100               	movlb	0	; () banked
  6226  005002  13D8               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6227                           
  6228                           ; BSR set to: 0
  6229  005004  0100               	movlb	0	; () banked
  6230  005006  51D3               	movf	___xxtofl@sign& (0+255),w,b
  6231  005008  0100               	movlb	0	; () banked
  6232  00500A  B4D8               	btfsc	status,2,c
  6233  00500C  D005               	goto	l6605
  6234                           
  6235                           ; BSR set to: 0
  6236  00500E  0100               	movlb	0	; () banked
  6237  005010  AFCE               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6238  005012  D002               	goto	l6605
  6239                           
  6240                           ; BSR set to: 0
  6241  005014  0100               	movlb	0	; () banked
  6242  005016  8FD8               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6243  005018                     l6605:
  6244                           
  6245                           ; BSR set to: 0
  6246  005018  C0D5  F0CB         	movff	___xxtofl@arg,?___xxtofl
  6247  00501C  C0D6  F0CC         	movff	___xxtofl@arg+1,?___xxtofl+1
  6248  005020  C0D7  F0CD         	movff	___xxtofl@arg+2,?___xxtofl+2
  6249  005024  C0D8  F0CE         	movff	___xxtofl@arg+3,?___xxtofl+3
  6250  005028  0012               	return	
  6251  00502A                     __end_of___xxtofl:
  6252                           	opt stack 0
  6253                           tblptru	equ	0xFF8
  6254                           tblptrh	equ	0xFF7
  6255                           tblptrl	equ	0xFF6
  6256                           tablat	equ	0xFF5
  6257                           postinc0	equ	0xFEE
  6258                           wreg	equ	0xFE8
  6259                           postdec1	equ	0xFE5
  6260                           fsr1l	equ	0xFE1
  6261                           indf2	equ	0xFDF
  6262                           postinc2	equ	0xFDE
  6263                           postdec2	equ	0xFDD
  6264                           fsr2h	equ	0xFDA
  6265                           fsr2l	equ	0xFD9
  6266                           status	equ	0xFD8
  6267                           
  6268 ;; *************** function ___fltol *****************
  6269 ;; Defined at:
  6270 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fltol.c"
  6271 ;; Parameters:    Size  Location     Type
  6272 ;;  f1              4   97[BANK0 ] unsigned char 
  6273 ;; Auto vars:     Size  Location     Type
  6274 ;;  exp1            1  106[BANK0 ] unsigned char 
  6275 ;;  sign1           1  105[BANK0 ] unsigned char 
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  4   97[BANK0 ] long 
  6278 ;; Registers used:
  6279 ;;		wreg, status,2, status,0
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6285 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6286 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6287 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6288 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6289 ;;Total ram usage:       10 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; Hardware stack levels required when called:    4
  6292 ;; This function calls:
  6293 ;;		Nothing
  6294 ;; This function is called by:
  6295 ;;		_park_routine
  6296 ;;		_parallelo
  6297 ;;		_floor
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           	psect	text14
  6302  0058A8                     __ptext14:
  6303                           	opt stack 0
  6304  0058A8                     ___fltol:
  6305                           	opt stack 24
  6306                           
  6307                           ; BSR set to: 0
  6308                           ;incstack = 0
  6309  0058A8  0100               	movlb	0	; () banked
  6310  0058AA  35C3               	rlcf	(___fltol@f1+2)& (0+255),w,b
  6311  0058AC  35C4               	rlcf	(___fltol@f1+3)& (0+255),w,b
  6312  0058AE  0100               	movlb	0	; () banked
  6313  0058B0  6FCA               	movwf	___fltol@exp1& (0+255),b
  6314  0058B2  0100               	movlb	0	; () banked
  6315  0058B4  51CA               	movf	___fltol@exp1& (0+255),w,b
  6316  0058B6  A4D8               	btfss	status,2,c
  6317  0058B8  D00A               	goto	l6529
  6318                           
  6319                           ; BSR set to: 0
  6320  0058BA  0E00               	movlw	0
  6321  0058BC  0100               	movlb	0	; () banked
  6322  0058BE  6FC1               	movwf	?___fltol& (0+255),b
  6323  0058C0  0E00               	movlw	0
  6324  0058C2  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6325  0058C4  0E00               	movlw	0
  6326  0058C6  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6327  0058C8  0E00               	movlw	0
  6328  0058CA  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6329                           
  6330                           ; BSR set to: 0
  6331  0058CC  0012               	return	
  6332  0058CE                     l6529:
  6333                           
  6334                           ; BSR set to: 0
  6335  0058CE  C0C1  F0C5         	movff	___fltol@f1,??___fltol
  6336  0058D2  C0C2  F0C6         	movff	___fltol@f1+1,??___fltol+1
  6337  0058D6  C0C3  F0C7         	movff	___fltol@f1+2,??___fltol+2
  6338  0058DA  C0C4  F0C8         	movff	___fltol@f1+3,??___fltol+3
  6339  0058DE  0E20               	movlw	32
  6340  0058E0  D006               	goto	u8180
  6341  0058E2                     u8185:
  6342  0058E2  0100               	movlb	0	; () banked
  6343  0058E4  90D8               	bcf	status,0,c
  6344  0058E6  33C8               	rrcf	(??___fltol+3)& (0+255),f,b
  6345  0058E8  33C7               	rrcf	(??___fltol+2)& (0+255),f,b
  6346  0058EA  33C6               	rrcf	(??___fltol+1)& (0+255),f,b
  6347  0058EC  33C5               	rrcf	??___fltol& (0+255),f,b
  6348  0058EE                     u8180:
  6349  0058EE  2EE8               	decfsz	wreg,f,c
  6350  0058F0  D7F8               	goto	u8185
  6351  0058F2  0100               	movlb	0	; () banked
  6352  0058F4  51C5               	movf	??___fltol& (0+255),w,b
  6353  0058F6  0100               	movlb	0	; () banked
  6354  0058F8  6FC9               	movwf	___fltol@sign1& (0+255),b
  6355                           
  6356                           ; BSR set to: 0
  6357  0058FA  0100               	movlb	0	; () banked
  6358  0058FC  8FC3               	bsf	(___fltol@f1+2)& (0+255),7,b
  6359                           
  6360                           ; BSR set to: 0
  6361  0058FE  0EFF               	movlw	255
  6362  005900  0100               	movlb	0	; () banked
  6363  005902  17C1               	andwf	___fltol@f1& (0+255),f,b
  6364  005904  0EFF               	movlw	255
  6365  005906  17C2               	andwf	(___fltol@f1+1)& (0+255),f,b
  6366  005908  0EFF               	movlw	255
  6367  00590A  17C3               	andwf	(___fltol@f1+2)& (0+255),f,b
  6368  00590C  0E00               	movlw	0
  6369  00590E  17C4               	andwf	(___fltol@f1+3)& (0+255),f,b
  6370                           
  6371                           ; BSR set to: 0
  6372  005910  0E96               	movlw	150
  6373  005912  0100               	movlb	0	; () banked
  6374  005914  5FCA               	subwf	___fltol@exp1& (0+255),f,b
  6375                           
  6376                           ; BSR set to: 0
  6377  005916  0100               	movlb	0	; () banked
  6378  005918  AFCA               	btfss	___fltol@exp1& (0+255),7,b
  6379  00591A  D01A               	goto	l6549
  6380                           
  6381                           ; BSR set to: 0
  6382  00591C  0100               	movlb	0	; () banked
  6383  00591E  51CA               	movf	___fltol@exp1& (0+255),w,b
  6384  005920  0A80               	xorlw	128
  6385  005922  0F97               	addlw	151
  6386  005924  B0D8               	btfsc	status,0,c
  6387  005926  D00A               	goto	l6545
  6388                           
  6389                           ; BSR set to: 0
  6390  005928  0E00               	movlw	0
  6391  00592A  0100               	movlb	0	; () banked
  6392  00592C  6FC1               	movwf	?___fltol& (0+255),b
  6393  00592E  0E00               	movlw	0
  6394  005930  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6395  005932  0E00               	movlw	0
  6396  005934  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6397  005936  0E00               	movlw	0
  6398  005938  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6399                           
  6400                           ; BSR set to: 0
  6401  00593A  0012               	return	
  6402  00593C                     l6545:
  6403                           
  6404                           ; BSR set to: 0
  6405  00593C  0100               	movlb	0	; () banked
  6406  00593E  90D8               	bcf	status,0,c
  6407  005940  33C4               	rrcf	(___fltol@f1+3)& (0+255),f,b
  6408  005942  33C3               	rrcf	(___fltol@f1+2)& (0+255),f,b
  6409  005944  33C2               	rrcf	(___fltol@f1+1)& (0+255),f,b
  6410  005946  33C1               	rrcf	___fltol@f1& (0+255),f,b
  6411                           
  6412                           ; BSR set to: 0
  6413  005948  0100               	movlb	0	; () banked
  6414  00594A  3FCA               	incfsz	___fltol@exp1& (0+255),f,b
  6415  00594C  D7F7               	goto	l6545
  6416                           
  6417                           ; BSR set to: 0
  6418  00594E  D01B               	goto	l6559
  6419  005950                     l6549:
  6420                           
  6421                           ; BSR set to: 0
  6422  005950  0E1F               	movlw	31
  6423  005952  0100               	movlb	0	; () banked
  6424  005954  65CA               	cpfsgt	___fltol@exp1& (0+255),b
  6425  005956  D012               	goto	l6557
  6426                           
  6427                           ; BSR set to: 0
  6428  005958  0E00               	movlw	0
  6429  00595A  0100               	movlb	0	; () banked
  6430  00595C  6FC1               	movwf	?___fltol& (0+255),b
  6431  00595E  0E00               	movlw	0
  6432  005960  6FC2               	movwf	(?___fltol+1)& (0+255),b
  6433  005962  0E00               	movlw	0
  6434  005964  6FC3               	movwf	(?___fltol+2)& (0+255),b
  6435  005966  0E00               	movlw	0
  6436  005968  6FC4               	movwf	(?___fltol+3)& (0+255),b
  6437                           
  6438                           ; BSR set to: 0
  6439  00596A  0012               	return	
  6440  00596C                     l6555:
  6441                           
  6442                           ; BSR set to: 0
  6443  00596C  0100               	movlb	0	; () banked
  6444  00596E  90D8               	bcf	status,0,c
  6445  005970  37C1               	rlcf	___fltol@f1& (0+255),f,b
  6446  005972  37C2               	rlcf	(___fltol@f1+1)& (0+255),f,b
  6447  005974  37C3               	rlcf	(___fltol@f1+2)& (0+255),f,b
  6448  005976  37C4               	rlcf	(___fltol@f1+3)& (0+255),f,b
  6449  005978  0100               	movlb	0	; () banked
  6450  00597A  07CA               	decf	___fltol@exp1& (0+255),f,b
  6451  00597C                     l6557:
  6452                           
  6453                           ; BSR set to: 0
  6454  00597C  0100               	movlb	0	; () banked
  6455  00597E  51CA               	movf	___fltol@exp1& (0+255),w,b
  6456  005980  0100               	movlb	0	; () banked
  6457  005982  A4D8               	btfss	status,2,c
  6458  005984  D7F3               	goto	l6555
  6459  005986                     l6559:
  6460                           
  6461                           ; BSR set to: 0
  6462  005986  0100               	movlb	0	; () banked
  6463  005988  51C9               	movf	___fltol@sign1& (0+255),w,b
  6464  00598A  0100               	movlb	0	; () banked
  6465  00598C  B4D8               	btfsc	status,2,c
  6466  00598E  D009               	goto	l6563
  6467                           
  6468                           ; BSR set to: 0
  6469  005990  0100               	movlb	0	; () banked
  6470  005992  1FC4               	comf	(___fltol@f1+3)& (0+255),f,b
  6471  005994  1FC3               	comf	(___fltol@f1+2)& (0+255),f,b
  6472  005996  1FC2               	comf	(___fltol@f1+1)& (0+255),f,b
  6473  005998  6DC1               	negf	___fltol@f1& (0+255),b
  6474  00599A  0E00               	movlw	0
  6475  00599C  23C2               	addwfc	(___fltol@f1+1)& (0+255),f,b
  6476  00599E  23C3               	addwfc	(___fltol@f1+2)& (0+255),f,b
  6477  0059A0  23C4               	addwfc	(___fltol@f1+3)& (0+255),f,b
  6478  0059A2                     l6563:
  6479                           
  6480                           ; BSR set to: 0
  6481  0059A2  C0C1  F0C1         	movff	___fltol@f1,?___fltol
  6482  0059A6  C0C2  F0C2         	movff	___fltol@f1+1,?___fltol+1
  6483  0059AA  C0C3  F0C3         	movff	___fltol@f1+2,?___fltol+2
  6484  0059AE  C0C4  F0C4         	movff	___fltol@f1+3,?___fltol+3
  6485  0059B2  0012               	return	
  6486  0059B4                     __end_of___fltol:
  6487                           	opt stack 0
  6488                           tblptru	equ	0xFF8
  6489                           tblptrh	equ	0xFF7
  6490                           tblptrl	equ	0xFF6
  6491                           tablat	equ	0xFF5
  6492                           postinc0	equ	0xFEE
  6493                           wreg	equ	0xFE8
  6494                           postdec1	equ	0xFE5
  6495                           fsr1l	equ	0xFE1
  6496                           indf2	equ	0xFDF
  6497                           postinc2	equ	0xFDE
  6498                           postdec2	equ	0xFDD
  6499                           fsr2h	equ	0xFDA
  6500                           fsr2l	equ	0xFD9
  6501                           status	equ	0xFD8
  6502                           
  6503 ;; *************** function ___flsub *****************
  6504 ;; Defined at:
  6505 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  6506 ;; Parameters:    Size  Location     Type
  6507 ;;  b               4    0[BANK1 ] long 
  6508 ;;  a               4    4[BANK1 ] long 
  6509 ;; Auto vars:     Size  Location     Type
  6510 ;;		None
  6511 ;; Return value:  Size  Location     Type
  6512 ;;                  4    0[BANK1 ] long 
  6513 ;; Registers used:
  6514 ;;		wreg, status,2, status,0, cstack
  6515 ;; Tracked objects:
  6516 ;;		On entry : 0/0
  6517 ;;		On exit  : 0/0
  6518 ;;		Unchanged: 0/0
  6519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6520 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6523 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
  6524 ;;Total ram usage:        8 bytes
  6525 ;; Hardware stack levels used:    1
  6526 ;; Hardware stack levels required when called:    5
  6527 ;; This function calls:
  6528 ;;		___fladd
  6529 ;; This function is called by:
  6530 ;;		_sin
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           	psect	text15
  6535  005DF8                     __ptext15:
  6536                           	opt stack 0
  6537  005DF8                     ___flsub:
  6538                           	opt stack 21
  6539                           
  6540                           ; BSR set to: 0
  6541                           ;incstack = 0
  6542  005DF8  0E00               	movlw	0
  6543  005DFA  0101               	movlb	1	; () banked
  6544  005DFC  1B91               	xorwf	___flsub@a& (0+255),f,b
  6545  005DFE  0E00               	movlw	0
  6546  005E00  1B92               	xorwf	(___flsub@a+1)& (0+255),f,b
  6547  005E02  0E00               	movlw	0
  6548  005E04  1B93               	xorwf	(___flsub@a+2)& (0+255),f,b
  6549  005E06  0E80               	movlw	128
  6550  005E08  1B94               	xorwf	(___flsub@a+3)& (0+255),f,b
  6551                           
  6552                           ; BSR set to: 1
  6553  005E0A  C18D  F0A9         	movff	___flsub@b,___fladd@b
  6554  005E0E  C18E  F0AA         	movff	___flsub@b+1,___fladd@b+1
  6555  005E12  C18F  F0AB         	movff	___flsub@b+2,___fladd@b+2
  6556  005E16  C190  F0AC         	movff	___flsub@b+3,___fladd@b+3
  6557  005E1A  C191  F0AD         	movff	___flsub@a,___fladd@a
  6558  005E1E  C192  F0AE         	movff	___flsub@a+1,___fladd@a+1
  6559  005E22  C193  F0AF         	movff	___flsub@a+2,___fladd@a+2
  6560  005E26  C194  F0B0         	movff	___flsub@a+3,___fladd@a+3
  6561  005E2A  EC3D  F015         	call	___fladd	;wreg free
  6562  005E2E  C0A9  F18D         	movff	?___fladd,?___flsub
  6563  005E32  C0AA  F18E         	movff	?___fladd+1,?___flsub+1
  6564  005E36  C0AB  F18F         	movff	?___fladd+2,?___flsub+2
  6565  005E3A  C0AC  F190         	movff	?___fladd+3,?___flsub+3
  6566  005E3E  0012               	return	
  6567  005E40                     __end_of___flsub:
  6568                           	opt stack 0
  6569                           tblptru	equ	0xFF8
  6570                           tblptrh	equ	0xFF7
  6571                           tblptrl	equ	0xFF6
  6572                           tablat	equ	0xFF5
  6573                           postinc0	equ	0xFEE
  6574                           wreg	equ	0xFE8
  6575                           postdec1	equ	0xFE5
  6576                           fsr1l	equ	0xFE1
  6577                           indf2	equ	0xFDF
  6578                           postinc2	equ	0xFDE
  6579                           postdec2	equ	0xFDD
  6580                           fsr2h	equ	0xFDA
  6581                           fsr2l	equ	0xFD9
  6582                           status	equ	0xFD8
  6583                           
  6584 ;; *************** function _asin *****************
  6585 ;; Defined at:
  6586 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\asin.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;  x               4  126[BANK0 ] long 
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;  y               4   29[BANK1 ] long 
  6591 ;;  sgn             4   17[BANK1 ] long 
  6592 ;; Return value:  Size  Location     Type
  6593 ;;                  4  126[BANK0 ] long 
  6594 ;; Registers used:
  6595 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/0
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6601 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6602 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6604 ;;      Totals:         0       4      20       0       0       0       0       0       0       0       0       0       
      +0       0
  6605 ;;Total ram usage:       24 bytes
  6606 ;; Hardware stack levels used:    1
  6607 ;; Hardware stack levels required when called:    7
  6608 ;; This function calls:
  6609 ;;		___fladd
  6610 ;;		___fldiv
  6611 ;;		___flge
  6612 ;;		___flmul
  6613 ;;		___flneg
  6614 ;;		_atan
  6615 ;;		_fabs
  6616 ;;		_sqrt
  6617 ;; This function is called by:
  6618 ;;		_parallelo
  6619 ;;		_matematica
  6620 ;; This function uses a non-reentrant model
  6621 ;;
  6622                           
  6623                           	psect	text16
  6624  00466C                     __ptext16:
  6625                           	opt stack 0
  6626  00466C                     _asin:
  6627                           	opt stack 21
  6628                           
  6629                           ;incstack = 0
  6630  00466C  0E00               	movlw	0
  6631  00466E  0100               	movlb	0	; () banked
  6632  004670  6FC5               	movwf	___flge@ff1& (0+255),b
  6633  004672  0E00               	movlw	0
  6634  004674  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  6635  004676  0E80               	movlw	128
  6636  004678  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  6637  00467A  0E3F               	movlw	63
  6638  00467C  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  6639  00467E  C0DE  F0C1         	movff	asin@x,fabs@d
  6640  004682  C0DF  F0C2         	movff	asin@x+1,fabs@d+1
  6641  004686  C0E0  F0C3         	movff	asin@x+2,fabs@d+2
  6642  00468A  C0E1  F0C4         	movff	asin@x+3,fabs@d+3
  6643  00468E  EC20  F02F         	call	_fabs	;wreg free
  6644  004692  C0C1  F0C9         	movff	?_fabs,___flge@ff2
  6645  004696  C0C2  F0CA         	movff	?_fabs+1,___flge@ff2+1
  6646  00469A  C0C3  F0CB         	movff	?_fabs+2,___flge@ff2+2
  6647  00469E  C0C4  F0CC         	movff	?_fabs+3,___flge@ff2+3
  6648  0046A2  ECD3  F029         	call	___flge	;wreg free
  6649  0046A6  0100               	movlb	0	; () banked
  6650  0046A8  B0D8               	btfsc	status,0,c
  6651  0046AA  D00F               	goto	l7265
  6652                           
  6653                           ; BSR set to: 0
  6654  0046AC  0E00               	movlw	0
  6655  0046AE  0101               	movlb	1	; () banked
  6656  0046B0  6F49               	movwf	(_errno+1)& (0+255),b
  6657  0046B2  0E21               	movlw	33
  6658  0046B4  6F48               	movwf	_errno& (0+255),b
  6659  0046B6  0E00               	movlw	0
  6660  0046B8  0100               	movlb	0	; () banked
  6661  0046BA  6FDE               	movwf	?_asin& (0+255),b
  6662  0046BC  0E00               	movlw	0
  6663  0046BE  6FDF               	movwf	(?_asin+1)& (0+255),b
  6664  0046C0  0E00               	movlw	0
  6665  0046C2  6FE0               	movwf	(?_asin+2)& (0+255),b
  6666  0046C4  0E00               	movlw	0
  6667  0046C6  6FE1               	movwf	(?_asin+3)& (0+255),b
  6668                           
  6669                           ; BSR set to: 0
  6670  0046C8  0012               	return	
  6671  0046CA                     l7265:
  6672                           
  6673                           ; BSR set to: 0
  6674  0046CA  0E00               	movlw	0
  6675  0046CC  0101               	movlb	1	; () banked
  6676  0046CE  6F9E               	movwf	asin@sgn& (0+255),b
  6677  0046D0  0E00               	movlw	0
  6678  0046D2  6F9F               	movwf	(asin@sgn+1)& (0+255),b
  6679  0046D4  0E80               	movlw	128
  6680  0046D6  6FA0               	movwf	(asin@sgn+2)& (0+255),b
  6681  0046D8  0E3F               	movlw	63
  6682  0046DA  6FA1               	movwf	(asin@sgn+3)& (0+255),b
  6683                           
  6684                           ; BSR set to: 1
  6685  0046DC  C0DE  F094         	movff	asin@x,___flmul@a
  6686  0046E0  C0DF  F095         	movff	asin@x+1,___flmul@a+1
  6687  0046E4  C0E0  F096         	movff	asin@x+2,___flmul@a+2
  6688  0046E8  C0E1  F097         	movff	asin@x+3,___flmul@a+3
  6689  0046EC  C0DE  F090         	movff	asin@x,___flmul@b
  6690  0046F0  C0DF  F091         	movff	asin@x+1,___flmul@b+1
  6691  0046F4  C0E0  F092         	movff	asin@x+2,___flmul@b+2
  6692  0046F8  C0E1  F093         	movff	asin@x+3,___flmul@b+3
  6693  0046FC  EC91  F017         	call	___flmul	;wreg free
  6694  004700  C090  F0BD         	movff	?___flmul,___flneg@f1
  6695  004704  C091  F0BE         	movff	?___flmul+1,___flneg@f1+1
  6696  004708  C092  F0BF         	movff	?___flmul+2,___flneg@f1+2
  6697  00470C  C093  F0C0         	movff	?___flmul+3,___flneg@f1+3
  6698  004710  EC3F  F02F         	call	___flneg	;wreg free
  6699  004714  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6700  004718  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6701  00471C  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6702  004720  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6703  004724  0E00               	movlw	0
  6704  004726  0100               	movlb	0	; () banked
  6705  004728  6FAD               	movwf	___fladd@a& (0+255),b
  6706  00472A  0E00               	movlw	0
  6707  00472C  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6708  00472E  0E80               	movlw	128
  6709  004730  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6710  004732  0E3F               	movlw	63
  6711  004734  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6712  004736  EC3D  F015         	call	___fladd	;wreg free
  6713  00473A  C0A9  F0C1         	movff	?___fladd,sqrt@a
  6714  00473E  C0AA  F0C2         	movff	?___fladd+1,sqrt@a+1
  6715  004742  C0AB  F0C3         	movff	?___fladd+2,sqrt@a+2
  6716  004746  C0AC  F0C4         	movff	?___fladd+3,sqrt@a+3
  6717  00474A  EC16  F01C         	call	_sqrt	;wreg free
  6718  00474E  C0C1  F1AA         	movff	?_sqrt,asin@y
  6719  004752  C0C2  F1AB         	movff	?_sqrt+1,asin@y+1
  6720  004756  C0C3  F1AC         	movff	?_sqrt+2,asin@y+2
  6721  00475A  C0C4  F1AD         	movff	?_sqrt+3,asin@y+3
  6722  00475E  C0DE  F0C1         	movff	asin@x,fabs@d
  6723  004762  C0DF  F0C2         	movff	asin@x+1,fabs@d+1
  6724  004766  C0E0  F0C3         	movff	asin@x+2,fabs@d+2
  6725  00476A  C0E1  F0C4         	movff	asin@x+3,fabs@d+3
  6726  00476E  EC20  F02F         	call	_fabs	;wreg free
  6727  004772  C0C1  F0C5         	movff	?_fabs,___flge@ff1
  6728  004776  C0C2  F0C6         	movff	?_fabs+1,___flge@ff1+1
  6729  00477A  C0C3  F0C7         	movff	?_fabs+2,___flge@ff1+2
  6730  00477E  C0C4  F0C8         	movff	?_fabs+3,___flge@ff1+3
  6731  004782  0E8F               	movlw	143
  6732  004784  0100               	movlb	0	; () banked
  6733  004786  6FC9               	movwf	___flge@ff2& (0+255),b
  6734  004788  0EC2               	movlw	194
  6735  00478A  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  6736  00478C  0E35               	movlw	53
  6737  00478E  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  6738  004790  0E3F               	movlw	63
  6739  004792  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  6740  004794  ECD3  F029         	call	___flge	;wreg free
  6741  004798  0100               	movlb	0	; () banked
  6742  00479A  B0D8               	btfsc	status,0,c
  6743  00479C  D02D               	goto	l7277
  6744                           
  6745                           ; BSR set to: 0
  6746  00479E  C0DE  F077         	movff	asin@x,___fldiv@b
  6747  0047A2  C0DF  F078         	movff	asin@x+1,___fldiv@b+1
  6748  0047A6  C0E0  F079         	movff	asin@x+2,___fldiv@b+2
  6749  0047AA  C0E1  F07A         	movff	asin@x+3,___fldiv@b+3
  6750  0047AE  C1AA  F07B         	movff	asin@y,___fldiv@a
  6751  0047B2  C1AB  F07C         	movff	asin@y+1,___fldiv@a+1
  6752  0047B6  C1AC  F07D         	movff	asin@y+2,___fldiv@a+2
  6753  0047BA  C1AD  F07E         	movff	asin@y+3,___fldiv@a+3
  6754  0047BE  ECFB  F01D         	call	___fldiv	;wreg free
  6755  0047C2  C077  F1AE         	movff	?___fldiv,_asin$3748
  6756  0047C6  C078  F1AF         	movff	?___fldiv+1,_asin$3748+1
  6757  0047CA  C079  F1B0         	movff	?___fldiv+2,_asin$3748+2
  6758  0047CE  C07A  F1B1         	movff	?___fldiv+3,_asin$3748+3
  6759  0047D2  C1AE  F0D1         	movff	_asin$3748,atan@f
  6760  0047D6  C1AF  F0D2         	movff	_asin$3748+1,atan@f+1
  6761  0047DA  C1B0  F0D3         	movff	_asin$3748+2,atan@f+2
  6762  0047DE  C1B1  F0D4         	movff	_asin$3748+3,atan@f+3
  6763  0047E2  EC05  F026         	call	_atan	;wreg free
  6764  0047E6  C0D1  F0DE         	movff	?_atan,?_asin
  6765  0047EA  C0D2  F0DF         	movff	?_atan+1,?_asin+1
  6766  0047EE  C0D3  F0E0         	movff	?_atan+2,?_asin+2
  6767  0047F2  C0D4  F0E1         	movff	?_atan+3,?_asin+3
  6768  0047F6  0012               	return	
  6769  0047F8                     l7277:
  6770  0047F8  0100               	movlb	0	; () banked
  6771  0047FA  AFE1               	btfss	(asin@x+3)& (0+255),7,b
  6772  0047FC  D06E               	goto	l7289
  6773                           
  6774                           ; BSR set to: 0
  6775  0047FE  C0DE  F07B         	movff	asin@x,___fldiv@a
  6776  004802  C0DF  F07C         	movff	asin@x+1,___fldiv@a+1
  6777  004806  C0E0  F07D         	movff	asin@x+2,___fldiv@a+2
  6778  00480A  C0E1  F07E         	movff	asin@x+3,___fldiv@a+3
  6779  00480E  C1AA  F0BD         	movff	asin@y,___flneg@f1
  6780  004812  C1AB  F0BE         	movff	asin@y+1,___flneg@f1+1
  6781  004816  C1AC  F0BF         	movff	asin@y+2,___flneg@f1+2
  6782  00481A  C1AD  F0C0         	movff	asin@y+3,___flneg@f1+3
  6783  00481E  EC3F  F02F         	call	___flneg	;wreg free
  6784  004822  C0BD  F077         	movff	?___flneg,___fldiv@b
  6785  004826  C0BE  F078         	movff	?___flneg+1,___fldiv@b+1
  6786  00482A  C0BF  F079         	movff	?___flneg+2,___fldiv@b+2
  6787  00482E  C0C0  F07A         	movff	?___flneg+3,___fldiv@b+3
  6788  004832  ECFB  F01D         	call	___fldiv	;wreg free
  6789  004836  C077  F1AE         	movff	?___fldiv,_asin$3748
  6790  00483A  C078  F1AF         	movff	?___fldiv+1,_asin$3748+1
  6791  00483E  C079  F1B0         	movff	?___fldiv+2,_asin$3748+2
  6792  004842  C07A  F1B1         	movff	?___fldiv+3,_asin$3748+3
  6793  004846  C1AE  F0D1         	movff	_asin$3748,atan@f
  6794  00484A  C1AF  F0D2         	movff	_asin$3748+1,atan@f+1
  6795  00484E  C1B0  F0D3         	movff	_asin$3748+2,atan@f+2
  6796  004852  C1B1  F0D4         	movff	_asin$3748+3,atan@f+3
  6797  004856  EC05  F026         	call	_atan	;wreg free
  6798  00485A  C0D1  F1A6         	movff	?_atan,_asin$3749
  6799  00485E  C0D2  F1A7         	movff	?_atan+1,_asin$3749+1
  6800  004862  C0D3  F1A8         	movff	?_atan+2,_asin$3749+2
  6801  004866  C0D4  F1A9         	movff	?_atan+3,_asin$3749+3
  6802  00486A  0EDB               	movlw	219
  6803  00486C  0100               	movlb	0	; () banked
  6804  00486E  6FAD               	movwf	___fladd@a& (0+255),b
  6805  004870  0E0F               	movlw	15
  6806  004872  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6807  004874  0EC9               	movlw	201
  6808  004876  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6809  004878  0E3F               	movlw	63
  6810  00487A  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6811  00487C  C1A6  F0BD         	movff	_asin$3749,___flneg@f1
  6812  004880  C1A7  F0BE         	movff	_asin$3749+1,___flneg@f1+1
  6813  004884  C1A8  F0BF         	movff	_asin$3749+2,___flneg@f1+2
  6814  004888  C1A9  F0C0         	movff	_asin$3749+3,___flneg@f1+3
  6815  00488C  EC3F  F02F         	call	___flneg	;wreg free
  6816  004890  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6817  004894  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6818  004898  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6819  00489C  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6820  0048A0  EC3D  F015         	call	___fladd	;wreg free
  6821  0048A4  C0A9  F1A2         	movff	?___fladd,_asin$3750
  6822  0048A8  C0AA  F1A3         	movff	?___fladd+1,_asin$3750+1
  6823  0048AC  C0AB  F1A4         	movff	?___fladd+2,_asin$3750+2
  6824  0048B0  C0AC  F1A5         	movff	?___fladd+3,_asin$3750+3
  6825  0048B4  C1A2  F0BD         	movff	_asin$3750,___flneg@f1
  6826  0048B8  C1A3  F0BE         	movff	_asin$3750+1,___flneg@f1+1
  6827  0048BC  C1A4  F0BF         	movff	_asin$3750+2,___flneg@f1+2
  6828  0048C0  C1A5  F0C0         	movff	_asin$3750+3,___flneg@f1+3
  6829  0048C4  EC3F  F02F         	call	___flneg	;wreg free
  6830  0048C8  C0BD  F0DE         	movff	?___flneg,?_asin
  6831  0048CC  C0BE  F0DF         	movff	?___flneg+1,?_asin+1
  6832  0048D0  C0BF  F0E0         	movff	?___flneg+2,?_asin+2
  6833  0048D4  C0C0  F0E1         	movff	?___flneg+3,?_asin+3
  6834  0048D8  0012               	return	
  6835  0048DA                     l7289:
  6836  0048DA  C0DE  F07B         	movff	asin@x,___fldiv@a
  6837  0048DE  C0DF  F07C         	movff	asin@x+1,___fldiv@a+1
  6838  0048E2  C0E0  F07D         	movff	asin@x+2,___fldiv@a+2
  6839  0048E6  C0E1  F07E         	movff	asin@x+3,___fldiv@a+3
  6840  0048EA  C1AA  F077         	movff	asin@y,___fldiv@b
  6841  0048EE  C1AB  F078         	movff	asin@y+1,___fldiv@b+1
  6842  0048F2  C1AC  F079         	movff	asin@y+2,___fldiv@b+2
  6843  0048F6  C1AD  F07A         	movff	asin@y+3,___fldiv@b+3
  6844  0048FA  ECFB  F01D         	call	___fldiv	;wreg free
  6845  0048FE  C077  F1AE         	movff	?___fldiv,_asin$3748
  6846  004902  C078  F1AF         	movff	?___fldiv+1,_asin$3748+1
  6847  004906  C079  F1B0         	movff	?___fldiv+2,_asin$3748+2
  6848  00490A  C07A  F1B1         	movff	?___fldiv+3,_asin$3748+3
  6849  00490E  C1AE  F0D1         	movff	_asin$3748,atan@f
  6850  004912  C1AF  F0D2         	movff	_asin$3748+1,atan@f+1
  6851  004916  C1B0  F0D3         	movff	_asin$3748+2,atan@f+2
  6852  00491A  C1B1  F0D4         	movff	_asin$3748+3,atan@f+3
  6853  00491E  EC05  F026         	call	_atan	;wreg free
  6854  004922  C0D1  F1A6         	movff	?_atan,_asin$3749
  6855  004926  C0D2  F1A7         	movff	?_atan+1,_asin$3749+1
  6856  00492A  C0D3  F1A8         	movff	?_atan+2,_asin$3749+2
  6857  00492E  C0D4  F1A9         	movff	?_atan+3,_asin$3749+3
  6858  004932  C1A6  F0BD         	movff	_asin$3749,___flneg@f1
  6859  004936  C1A7  F0BE         	movff	_asin$3749+1,___flneg@f1+1
  6860  00493A  C1A8  F0BF         	movff	_asin$3749+2,___flneg@f1+2
  6861  00493E  C1A9  F0C0         	movff	_asin$3749+3,___flneg@f1+3
  6862  004942  EC3F  F02F         	call	___flneg	;wreg free
  6863  004946  C0BD  F0A9         	movff	?___flneg,___fladd@b
  6864  00494A  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  6865  00494E  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  6866  004952  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  6867  004956  0EDB               	movlw	219
  6868  004958  0100               	movlb	0	; () banked
  6869  00495A  6FAD               	movwf	___fladd@a& (0+255),b
  6870  00495C  0E0F               	movlw	15
  6871  00495E  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  6872  004960  0EC9               	movlw	201
  6873  004962  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  6874  004964  0E3F               	movlw	63
  6875  004966  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  6876  004968  EC3D  F015         	call	___fladd	;wreg free
  6877  00496C  C0A9  F0DE         	movff	?___fladd,?_asin
  6878  004970  C0AA  F0DF         	movff	?___fladd+1,?_asin+1
  6879  004974  C0AB  F0E0         	movff	?___fladd+2,?_asin+2
  6880  004978  C0AC  F0E1         	movff	?___fladd+3,?_asin+3
  6881  00497C  0012               	return	
  6882  00497E                     __end_of_asin:
  6883                           	opt stack 0
  6884                           tblptru	equ	0xFF8
  6885                           tblptrh	equ	0xFF7
  6886                           tblptrl	equ	0xFF6
  6887                           tablat	equ	0xFF5
  6888                           postinc0	equ	0xFEE
  6889                           wreg	equ	0xFE8
  6890                           postdec1	equ	0xFE5
  6891                           fsr1l	equ	0xFE1
  6892                           indf2	equ	0xFDF
  6893                           postinc2	equ	0xFDE
  6894                           postdec2	equ	0xFDD
  6895                           fsr2h	equ	0xFDA
  6896                           fsr2l	equ	0xFD9
  6897                           status	equ	0xFD8
  6898                           
  6899 ;; *************** function _sqrt *****************
  6900 ;; Defined at:
  6901 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcsqrt.c"
  6902 ;; Parameters:    Size  Location     Type
  6903 ;;  a               4   97[BANK0 ] long 
  6904 ;; Auto vars:     Size  Location     Type
  6905 ;;  frac            4  122[BANK0 ] unsigned long 
  6906 ;;  root            4  118[BANK0 ] struct .
  6907 ;;  grs             4  112[BANK0 ] unsigned long 
  6908 ;;  tfrac           4  107[BANK0 ] unsigned long 
  6909 ;;  exp             2  116[BANK0 ] int 
  6910 ;;  p               1  111[BANK0 ] unsigned char 
  6911 ;;  i               1  106[BANK0 ] unsigned char 
  6912 ;;  sign            1  105[BANK0 ] unsigned char 
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  4   97[BANK0 ] unsigned char 
  6915 ;; Registers used:
  6916 ;;		wreg, status,2, status,0
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6922 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6923 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6924 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6925 ;;      Totals:         0      29       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6926 ;;Total ram usage:       29 bytes
  6927 ;; Hardware stack levels used:    1
  6928 ;; Hardware stack levels required when called:    4
  6929 ;; This function calls:
  6930 ;;		Nothing
  6931 ;; This function is called by:
  6932 ;;		_parallelo
  6933 ;;		_asin
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           	psect	text17
  6938  00382C                     __ptext17:
  6939                           	opt stack 0
  6940  00382C                     _sqrt:
  6941                           	opt stack 24
  6942                           
  6943                           ;incstack = 0
  6944  00382C  0100               	movlb	0	; () banked
  6945  00382E  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  6946  003830  0B80               	andlw	128
  6947  003832  0100               	movlb	0	; () banked
  6948  003834  6FC9               	movwf	sqrt@sign& (0+255),b
  6949  003836  0100               	movlb	0	; () banked
  6950  003838  51C4               	movf	(sqrt@a+3)& (0+255),w,b
  6951  00383A  25C4               	addwf	(sqrt@a+3)& (0+255),w,b
  6952  00383C  0100               	movlb	0	; () banked
  6953  00383E  6FCF               	movwf	sqrt@p& (0+255),b
  6954                           
  6955                           ; BSR set to: 0
  6956  003840  0100               	movlb	0	; () banked
  6957  003842  AFC3               	btfss	(sqrt@a+2)& (0+255),7,b
  6958  003844  D002               	goto	l7051
  6959                           
  6960                           ; BSR set to: 0
  6961  003846  0100               	movlb	0	; () banked
  6962  003848  81CF               	bsf	sqrt@p& (0+255),0,b
  6963  00384A                     l7051:
  6964                           
  6965                           ; BSR set to: 0
  6966  00384A  C0CF  F0D4         	movff	sqrt@p,sqrt@exp
  6967  00384E  0100               	movlb	0	; () banked
  6968  003850  6BD5               	clrf	(sqrt@exp+1)& (0+255),b
  6969                           
  6970                           ; BSR set to: 0
  6971  003852  0EFF               	movlw	255
  6972  003854  0100               	movlb	0	; () banked
  6973  003856  15C1               	andwf	sqrt@a& (0+255),w,b
  6974  003858  0100               	movlb	0	; () banked
  6975  00385A  6FDA               	movwf	sqrt@frac& (0+255),b
  6976  00385C  0EFF               	movlw	255
  6977  00385E  0100               	movlb	0	; () banked
  6978  003860  15C2               	andwf	(sqrt@a+1)& (0+255),w,b
  6979  003862  0100               	movlb	0	; () banked
  6980  003864  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  6981  003866  0E7F               	movlw	127
  6982  003868  0100               	movlb	0	; () banked
  6983  00386A  15C3               	andwf	(sqrt@a+2)& (0+255),w,b
  6984  00386C  0100               	movlb	0	; () banked
  6985  00386E  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  6986  003870  0E00               	movlw	0
  6987  003872  0100               	movlb	0	; () banked
  6988  003874  15C4               	andwf	(sqrt@a+3)& (0+255),w,b
  6989  003876  0100               	movlb	0	; () banked
  6990  003878  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  6991                           
  6992                           ; BSR set to: 0
  6993  00387A  0100               	movlb	0	; () banked
  6994  00387C  51D4               	movf	sqrt@exp& (0+255),w,b
  6995  00387E  0100               	movlb	0	; () banked
  6996  003880  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  6997  003882  B4D8               	btfsc	status,2,c
  6998  003884  D008               	goto	l7063
  6999                           
  7000                           ; BSR set to: 0
  7001  003886  0100               	movlb	0	; () banked
  7002  003888  8FDC               	bsf	(sqrt@frac+2)& (0+255),7,b
  7003                           
  7004                           ; BSR set to: 0
  7005  00388A  0100               	movlb	0	; () banked
  7006  00388C  29D4               	incf	sqrt@exp& (0+255),w,b
  7007  00388E  0100               	movlb	0	; () banked
  7008  003890  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7009  003892  A4D8               	btfss	status,2,c
  7010  003894  D009               	goto	l7065
  7011  003896                     l7063:
  7012                           
  7013                           ; BSR set to: 0
  7014  003896  0E00               	movlw	0
  7015  003898  0100               	movlb	0	; () banked
  7016  00389A  6FDA               	movwf	sqrt@frac& (0+255),b
  7017  00389C  0E00               	movlw	0
  7018  00389E  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  7019  0038A0  0E00               	movlw	0
  7020  0038A2  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  7021  0038A4  0E00               	movlw	0
  7022  0038A6  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  7023  0038A8                     l7065:
  7024                           
  7025                           ; BSR set to: 0
  7026  0038A8  0100               	movlb	0	; () banked
  7027  0038AA  51D4               	movf	sqrt@exp& (0+255),w,b
  7028  0038AC  0100               	movlb	0	; () banked
  7029  0038AE  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7030  0038B0  A4D8               	btfss	status,2,c
  7031  0038B2  D00A               	goto	l7071
  7032                           
  7033                           ; BSR set to: 0
  7034  0038B4  0E00               	movlw	0
  7035  0038B6  0100               	movlb	0	; () banked
  7036  0038B8  6FC1               	movwf	?_sqrt& (0+255),b
  7037  0038BA  0E00               	movlw	0
  7038  0038BC  6FC2               	movwf	(?_sqrt+1)& (0+255),b
  7039  0038BE  0E00               	movlw	0
  7040  0038C0  6FC3               	movwf	(?_sqrt+2)& (0+255),b
  7041  0038C2  0E00               	movlw	0
  7042  0038C4  6FC4               	movwf	(?_sqrt+3)& (0+255),b
  7043                           
  7044                           ; BSR set to: 0
  7045  0038C6  0012               	return	
  7046  0038C8                     l7071:
  7047                           
  7048                           ; BSR set to: 0
  7049  0038C8  0100               	movlb	0	; () banked
  7050  0038CA  51C9               	movf	sqrt@sign& (0+255),w,b
  7051  0038CC  0100               	movlb	0	; () banked
  7052  0038CE  B4D8               	btfsc	status,2,c
  7053  0038D0  D01C               	goto	l7083
  7054                           
  7055                           ; BSR set to: 0
  7056  0038D2  0E00               	movlw	0
  7057  0038D4  0100               	movlb	0	; () banked
  7058  0038D6  6FD6               	movwf	sqrt@root& (0+255),b
  7059  0038D8  0E00               	movlw	0
  7060  0038DA  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  7061  0038DC  0E40               	movlw	64
  7062  0038DE  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  7063  0038E0  0E00               	movlw	0
  7064  0038E2  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7065                           
  7066                           ; BSR set to: 0
  7067  0038E4  0100               	movlb	0	; () banked
  7068  0038E6  0E80               	movlw	128
  7069  0038E8  13D8               	iorwf	(sqrt@root+2)& (0+255),f,b
  7070  0038EA  0EFF               	movlw	255
  7071  0038EC  13D9               	iorwf	(sqrt@root+3)& (0+255),f,b
  7072                           
  7073                           ; BSR set to: 0
  7074  0038EE  0E00               	movlw	0
  7075  0038F0  0101               	movlb	1	; () banked
  7076  0038F2  6F49               	movwf	(_errno+1)& (0+255),b
  7077  0038F4  0E21               	movlw	33
  7078  0038F6  6F48               	movwf	_errno& (0+255),b
  7079                           
  7080                           ; BSR set to: 1
  7081  0038F8  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  7082  0038FC  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7083  003900  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7084  003904  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7085                           
  7086                           ; BSR set to: 1
  7087  003908  0012               	return	
  7088  00390A                     l7083:
  7089  00390A  0100               	movlb	0	; () banked
  7090  00390C  29D4               	incf	sqrt@exp& (0+255),w,b
  7091  00390E  0100               	movlb	0	; () banked
  7092  003910  11D5               	iorwf	(sqrt@exp+1)& (0+255),w,b
  7093  003912  A4D8               	btfss	status,2,c
  7094  003914  D012               	goto	l7091
  7095                           
  7096                           ; BSR set to: 0
  7097  003916  0E00               	movlw	0
  7098  003918  0100               	movlb	0	; () banked
  7099  00391A  6FD6               	movwf	sqrt@root& (0+255),b
  7100  00391C  0E00               	movlw	0
  7101  00391E  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  7102  003920  0E80               	movlw	128
  7103  003922  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  7104  003924  0E7F               	movlw	127
  7105  003926  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7106                           
  7107                           ; BSR set to: 0
  7108  003928  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  7109  00392C  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7110  003930  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7111  003934  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7112                           
  7113                           ; BSR set to: 0
  7114  003938  0012               	return	
  7115  00393A                     l7091:
  7116                           
  7117                           ; BSR set to: 0
  7118  00393A  0100               	movlb	0	; () banked
  7119  00393C  0E81               	movlw	129
  7120  00393E  27D4               	addwf	sqrt@exp& (0+255),f,b
  7121  003940  0EFF               	movlw	255
  7122  003942  23D5               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7123  003944  0100               	movlb	0	; () banked
  7124  003946  51D4               	movf	sqrt@exp& (0+255),w,b
  7125  003948  0B01               	andlw	1
  7126  00394A  0100               	movlb	0	; () banked
  7127  00394C  6FCF               	movwf	sqrt@p& (0+255),b
  7128  00394E  0100               	movlb	0	; () banked
  7129  003950  35D5               	rlcf	(sqrt@exp+1)& (0+255),w,b
  7130  003952  33D5               	rrcf	(sqrt@exp+1)& (0+255),f,b
  7131  003954  33D4               	rrcf	sqrt@exp& (0+255),f,b
  7132  003956  0E7F               	movlw	127
  7133  003958  0100               	movlb	0	; () banked
  7134  00395A  27D4               	addwf	sqrt@exp& (0+255),f,b
  7135  00395C  0E00               	movlw	0
  7136  00395E  23D5               	addwfc	(sqrt@exp+1)& (0+255),f,b
  7137  003960  90D8               	bcf	status,0,c
  7138  003962  0100               	movlb	0	; () banked
  7139  003964  35DA               	rlcf	sqrt@frac& (0+255),w,b
  7140  003966  0100               	movlb	0	; () banked
  7141  003968  6FCB               	movwf	sqrt@tfrac& (0+255),b
  7142  00396A  0100               	movlb	0	; () banked
  7143  00396C  35DB               	rlcf	(sqrt@frac+1)& (0+255),w,b
  7144  00396E  0100               	movlb	0	; () banked
  7145  003970  6FCC               	movwf	(sqrt@tfrac+1)& (0+255),b
  7146  003972  0100               	movlb	0	; () banked
  7147  003974  35DC               	rlcf	(sqrt@frac+2)& (0+255),w,b
  7148  003976  0100               	movlb	0	; () banked
  7149  003978  6FCD               	movwf	(sqrt@tfrac+2)& (0+255),b
  7150  00397A  0100               	movlb	0	; () banked
  7151  00397C  35DD               	rlcf	(sqrt@frac+3)& (0+255),w,b
  7152  00397E  0100               	movlb	0	; () banked
  7153  003980  6FCE               	movwf	(sqrt@tfrac+3)& (0+255),b
  7154                           
  7155                           ; BSR set to: 0
  7156  003982  0E00               	movlw	0
  7157  003984  0100               	movlb	0	; () banked
  7158  003986  6FDA               	movwf	sqrt@frac& (0+255),b
  7159  003988  0E00               	movlw	0
  7160  00398A  6FDB               	movwf	(sqrt@frac+1)& (0+255),b
  7161  00398C  0E00               	movlw	0
  7162  00398E  6FDC               	movwf	(sqrt@frac+2)& (0+255),b
  7163  003990  0E00               	movlw	0
  7164  003992  6FDD               	movwf	(sqrt@frac+3)& (0+255),b
  7165                           
  7166                           ; BSR set to: 0
  7167  003994  0E00               	movlw	0
  7168  003996  0100               	movlb	0	; () banked
  7169  003998  6FD0               	movwf	sqrt@grs& (0+255),b
  7170  00399A  0E00               	movlw	0
  7171  00399C  6FD1               	movwf	(sqrt@grs+1)& (0+255),b
  7172  00399E  0E00               	movlw	0
  7173  0039A0  6FD2               	movwf	(sqrt@grs+2)& (0+255),b
  7174  0039A2  0E01               	movlw	1
  7175  0039A4  6FD3               	movwf	(sqrt@grs+3)& (0+255),b
  7176                           
  7177                           ; BSR set to: 0
  7178  0039A6  0100               	movlb	0	; () banked
  7179  0039A8  51CF               	movf	sqrt@p& (0+255),w,b
  7180  0039AA  0100               	movlb	0	; () banked
  7181  0039AC  B4D8               	btfsc	status,2,c
  7182  0039AE  D006               	goto	l7101
  7183                           
  7184                           ; BSR set to: 0
  7185  0039B0  0100               	movlb	0	; () banked
  7186  0039B2  90D8               	bcf	status,0,c
  7187  0039B4  37CB               	rlcf	sqrt@tfrac& (0+255),f,b
  7188  0039B6  37CC               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7189  0039B8  37CD               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7190  0039BA  37CE               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7191  0039BC                     l7101:
  7192                           
  7193                           ; BSR set to: 0
  7194  0039BC  0E00               	movlw	0
  7195  0039BE  0100               	movlb	0	; () banked
  7196  0039C0  6FCA               	movwf	sqrt@i& (0+255),b
  7197  0039C2  D07E               	goto	l7115
  7198  0039C4                     l7103:
  7199                           
  7200                           ; BSR set to: 0
  7201  0039C4  0100               	movlb	0	; () banked
  7202  0039C6  51D0               	movf	sqrt@grs& (0+255),w,b
  7203  0039C8  0100               	movlb	0	; () banked
  7204  0039CA  13DA               	iorwf	sqrt@frac& (0+255),f,b
  7205  0039CC  0100               	movlb	0	; () banked
  7206  0039CE  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7207  0039D0  0100               	movlb	0	; () banked
  7208  0039D2  13DB               	iorwf	(sqrt@frac+1)& (0+255),f,b
  7209  0039D4  0100               	movlb	0	; () banked
  7210  0039D6  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7211  0039D8  0100               	movlb	0	; () banked
  7212  0039DA  13DC               	iorwf	(sqrt@frac+2)& (0+255),f,b
  7213  0039DC  0100               	movlb	0	; () banked
  7214  0039DE  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7215  0039E0  0100               	movlb	0	; () banked
  7216  0039E2  13DD               	iorwf	(sqrt@frac+3)& (0+255),f,b
  7217  0039E4  0100               	movlb	0	; () banked
  7218  0039E6  51DA               	movf	sqrt@frac& (0+255),w,b
  7219  0039E8  0100               	movlb	0	; () banked
  7220  0039EA  5DCB               	subwf	sqrt@tfrac& (0+255),w,b
  7221  0039EC  0100               	movlb	0	; () banked
  7222  0039EE  51DB               	movf	(sqrt@frac+1)& (0+255),w,b
  7223  0039F0  0100               	movlb	0	; () banked
  7224  0039F2  59CC               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  7225  0039F4  0100               	movlb	0	; () banked
  7226  0039F6  51DC               	movf	(sqrt@frac+2)& (0+255),w,b
  7227  0039F8  0100               	movlb	0	; () banked
  7228  0039FA  59CD               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  7229  0039FC  0100               	movlb	0	; () banked
  7230  0039FE  51DD               	movf	(sqrt@frac+3)& (0+255),w,b
  7231  003A00  0100               	movlb	0	; () banked
  7232  003A02  59CE               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  7233  003A04  A0D8               	btfss	status,0,c
  7234  003A06  D021               	goto	l7107
  7235                           
  7236                           ; BSR set to: 0
  7237  003A08  0100               	movlb	0	; () banked
  7238  003A0A  51DA               	movf	sqrt@frac& (0+255),w,b
  7239  003A0C  0100               	movlb	0	; () banked
  7240  003A0E  5FCB               	subwf	sqrt@tfrac& (0+255),f,b
  7241  003A10  0100               	movlb	0	; () banked
  7242  003A12  51DB               	movf	(sqrt@frac+1)& (0+255),w,b
  7243  003A14  0100               	movlb	0	; () banked
  7244  003A16  5BCC               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  7245  003A18  0100               	movlb	0	; () banked
  7246  003A1A  51DC               	movf	(sqrt@frac+2)& (0+255),w,b
  7247  003A1C  0100               	movlb	0	; () banked
  7248  003A1E  5BCD               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  7249  003A20  0100               	movlb	0	; () banked
  7250  003A22  51DD               	movf	(sqrt@frac+3)& (0+255),w,b
  7251  003A24  0100               	movlb	0	; () banked
  7252  003A26  5BCE               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  7253  003A28  0100               	movlb	0	; () banked
  7254  003A2A  51D0               	movf	sqrt@grs& (0+255),w,b
  7255  003A2C  0100               	movlb	0	; () banked
  7256  003A2E  27DA               	addwf	sqrt@frac& (0+255),f,b
  7257  003A30  0100               	movlb	0	; () banked
  7258  003A32  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7259  003A34  0100               	movlb	0	; () banked
  7260  003A36  23DB               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7261  003A38  0100               	movlb	0	; () banked
  7262  003A3A  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7263  003A3C  0100               	movlb	0	; () banked
  7264  003A3E  23DC               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7265  003A40  0100               	movlb	0	; () banked
  7266  003A42  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7267  003A44  0100               	movlb	0	; () banked
  7268  003A46  23DD               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7269  003A48  D01D               	goto	l7109
  7270  003A4A                     l7107:
  7271                           
  7272                           ; BSR set to: 0
  7273  003A4A  C0D0  F0C5         	movff	sqrt@grs,??_sqrt
  7274  003A4E  C0D1  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7275  003A52  C0D2  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7276  003A56  C0D3  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7277  003A5A  0100               	movlb	0	; () banked
  7278  003A5C  1FC5               	comf	??_sqrt& (0+255),f,b
  7279  003A5E  1FC6               	comf	(??_sqrt+1)& (0+255),f,b
  7280  003A60  1FC7               	comf	(??_sqrt+2)& (0+255),f,b
  7281  003A62  1FC8               	comf	(??_sqrt+3)& (0+255),f,b
  7282  003A64  0100               	movlb	0	; () banked
  7283  003A66  51C5               	movf	??_sqrt& (0+255),w,b
  7284  003A68  0100               	movlb	0	; () banked
  7285  003A6A  17DA               	andwf	sqrt@frac& (0+255),f,b
  7286  003A6C  0100               	movlb	0	; () banked
  7287  003A6E  51C6               	movf	(??_sqrt+1)& (0+255),w,b
  7288  003A70  0100               	movlb	0	; () banked
  7289  003A72  17DB               	andwf	(sqrt@frac+1)& (0+255),f,b
  7290  003A74  0100               	movlb	0	; () banked
  7291  003A76  51C7               	movf	(??_sqrt+2)& (0+255),w,b
  7292  003A78  0100               	movlb	0	; () banked
  7293  003A7A  17DC               	andwf	(sqrt@frac+2)& (0+255),f,b
  7294  003A7C  0100               	movlb	0	; () banked
  7295  003A7E  51C8               	movf	(??_sqrt+3)& (0+255),w,b
  7296  003A80  0100               	movlb	0	; () banked
  7297  003A82  17DD               	andwf	(sqrt@frac+3)& (0+255),f,b
  7298  003A84                     l7109:
  7299                           
  7300                           ; BSR set to: 0
  7301  003A84  C0D0  F0C5         	movff	sqrt@grs,??_sqrt
  7302  003A88  C0D1  F0C6         	movff	sqrt@grs+1,??_sqrt+1
  7303  003A8C  C0D2  F0C7         	movff	sqrt@grs+2,??_sqrt+2
  7304  003A90  C0D3  F0C8         	movff	sqrt@grs+3,??_sqrt+3
  7305  003A94  0100               	movlb	0	; () banked
  7306  003A96  90D8               	bcf	status,0,c
  7307  003A98  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7308  003A9A  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7309  003A9C  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7310  003A9E  33C5               	rrcf	??_sqrt& (0+255),f,b
  7311  003AA0  C0C5  F0D0         	movff	??_sqrt,sqrt@grs
  7312  003AA4  C0C6  F0D1         	movff	??_sqrt+1,sqrt@grs+1
  7313  003AA8  C0C7  F0D2         	movff	??_sqrt+2,sqrt@grs+2
  7314  003AAC  C0C8  F0D3         	movff	??_sqrt+3,sqrt@grs+3
  7315                           
  7316                           ; BSR set to: 0
  7317  003AB0  0100               	movlb	0	; () banked
  7318  003AB2  90D8               	bcf	status,0,c
  7319  003AB4  37CB               	rlcf	sqrt@tfrac& (0+255),f,b
  7320  003AB6  37CC               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  7321  003AB8  37CD               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  7322  003ABA  37CE               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  7323                           
  7324                           ; BSR set to: 0
  7325  003ABC  0100               	movlb	0	; () banked
  7326  003ABE  2BCA               	incf	sqrt@i& (0+255),f,b
  7327  003AC0                     l7115:
  7328                           
  7329                           ; BSR set to: 0
  7330  003AC0  0E18               	movlw	24
  7331  003AC2  0100               	movlb	0	; () banked
  7332  003AC4  65CA               	cpfsgt	sqrt@i& (0+255),b
  7333  003AC6  D77E               	goto	l7103
  7334                           
  7335                           ; BSR set to: 0
  7336                           
  7337                           ; BSR set to: 0
  7338  003AC8  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7339  003ACC  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7340  003AD0  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7341  003AD4  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7342  003AD8  0100               	movlb	0	; () banked
  7343  003ADA  90D8               	bcf	status,0,c
  7344  003ADC  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7345  003ADE  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7346  003AE0  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7347  003AE2  33C5               	rrcf	??_sqrt& (0+255),f,b
  7348  003AE4  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7349  003AE8  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7350  003AEC  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7351  003AF0  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7352                           
  7353                           ; BSR set to: 0
  7354  003AF4  0E01               	movlw	1
  7355  003AF6  0100               	movlb	0	; () banked
  7356  003AF8  15DA               	andwf	sqrt@frac& (0+255),w,b
  7357  003AFA  0100               	movlb	0	; () banked
  7358  003AFC  6FD0               	movwf	sqrt@grs& (0+255),b
  7359  003AFE  0E00               	movlw	0
  7360  003B00  0100               	movlb	0	; () banked
  7361  003B02  15DB               	andwf	(sqrt@frac+1)& (0+255),w,b
  7362  003B04  0100               	movlb	0	; () banked
  7363  003B06  6FD1               	movwf	(sqrt@grs+1)& (0+255),b
  7364  003B08  0E00               	movlw	0
  7365  003B0A  0100               	movlb	0	; () banked
  7366  003B0C  15DC               	andwf	(sqrt@frac+2)& (0+255),w,b
  7367  003B0E  0100               	movlb	0	; () banked
  7368  003B10  6FD2               	movwf	(sqrt@grs+2)& (0+255),b
  7369  003B12  0E00               	movlw	0
  7370  003B14  0100               	movlb	0	; () banked
  7371  003B16  15DD               	andwf	(sqrt@frac+3)& (0+255),w,b
  7372  003B18  0100               	movlb	0	; () banked
  7373  003B1A  6FD3               	movwf	(sqrt@grs+3)& (0+255),b
  7374                           
  7375                           ; BSR set to: 0
  7376  003B1C  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7377  003B20  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7378  003B24  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7379  003B28  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7380  003B2C  0100               	movlb	0	; () banked
  7381  003B2E  90D8               	bcf	status,0,c
  7382  003B30  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7383  003B32  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7384  003B34  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7385  003B36  33C5               	rrcf	??_sqrt& (0+255),f,b
  7386  003B38  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7387  003B3C  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7388  003B40  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7389  003B44  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7390  003B48  0100               	movlb	0	; () banked
  7391  003B4A  51D0               	movf	sqrt@grs& (0+255),w,b
  7392  003B4C  0100               	movlb	0	; () banked
  7393  003B4E  27DA               	addwf	sqrt@frac& (0+255),f,b
  7394  003B50  0100               	movlb	0	; () banked
  7395  003B52  51D1               	movf	(sqrt@grs+1)& (0+255),w,b
  7396  003B54  0100               	movlb	0	; () banked
  7397  003B56  23DB               	addwfc	(sqrt@frac+1)& (0+255),f,b
  7398  003B58  0100               	movlb	0	; () banked
  7399  003B5A  51D2               	movf	(sqrt@grs+2)& (0+255),w,b
  7400  003B5C  0100               	movlb	0	; () banked
  7401  003B5E  23DC               	addwfc	(sqrt@frac+2)& (0+255),f,b
  7402  003B60  0100               	movlb	0	; () banked
  7403  003B62  51D3               	movf	(sqrt@grs+3)& (0+255),w,b
  7404  003B64  0100               	movlb	0	; () banked
  7405  003B66  23DD               	addwfc	(sqrt@frac+3)& (0+255),f,b
  7406                           
  7407                           ; BSR set to: 0
  7408  003B68  0100               	movlb	0	; () banked
  7409  003B6A  A1DD               	btfss	(sqrt@frac+3)& (0+255),0,b
  7410  003B6C  D019               	goto	l7127
  7411                           
  7412                           ; BSR set to: 0
  7413  003B6E  C0DA  F0C5         	movff	sqrt@frac,??_sqrt
  7414  003B72  C0DB  F0C6         	movff	sqrt@frac+1,??_sqrt+1
  7415  003B76  C0DC  F0C7         	movff	sqrt@frac+2,??_sqrt+2
  7416  003B7A  C0DD  F0C8         	movff	sqrt@frac+3,??_sqrt+3
  7417  003B7E  0100               	movlb	0	; () banked
  7418  003B80  90D8               	bcf	status,0,c
  7419  003B82  33C8               	rrcf	(??_sqrt+3)& (0+255),f,b
  7420  003B84  33C7               	rrcf	(??_sqrt+2)& (0+255),f,b
  7421  003B86  33C6               	rrcf	(??_sqrt+1)& (0+255),f,b
  7422  003B88  33C5               	rrcf	??_sqrt& (0+255),f,b
  7423  003B8A  C0C5  F0DA         	movff	??_sqrt,sqrt@frac
  7424  003B8E  C0C6  F0DB         	movff	??_sqrt+1,sqrt@frac+1
  7425  003B92  C0C7  F0DC         	movff	??_sqrt+2,sqrt@frac+2
  7426  003B96  C0C8  F0DD         	movff	??_sqrt+3,sqrt@frac+3
  7427  003B9A  0100               	movlb	0	; () banked
  7428  003B9C  4BD4               	infsnz	sqrt@exp& (0+255),f,b
  7429  003B9E  2BD5               	incf	(sqrt@exp+1)& (0+255),f,b
  7430  003BA0                     l7127:
  7431                           
  7432                           ; BSR set to: 0
  7433  003BA0  0EFF               	movlw	255
  7434  003BA2  0100               	movlb	0	; () banked
  7435  003BA4  15DA               	andwf	sqrt@frac& (0+255),w,b
  7436  003BA6  0100               	movlb	0	; () banked
  7437  003BA8  6FD6               	movwf	sqrt@root& (0+255),b
  7438  003BAA  0EFF               	movlw	255
  7439  003BAC  0100               	movlb	0	; () banked
  7440  003BAE  15DB               	andwf	(sqrt@frac+1)& (0+255),w,b
  7441  003BB0  0100               	movlb	0	; () banked
  7442  003BB2  6FD7               	movwf	(sqrt@root+1)& (0+255),b
  7443  003BB4  0E7F               	movlw	127
  7444  003BB6  0100               	movlb	0	; () banked
  7445  003BB8  15DC               	andwf	(sqrt@frac+2)& (0+255),w,b
  7446  003BBA  0100               	movlb	0	; () banked
  7447  003BBC  6FD8               	movwf	(sqrt@root+2)& (0+255),b
  7448  003BBE  0E00               	movlw	0
  7449  003BC0  0100               	movlb	0	; () banked
  7450  003BC2  15DD               	andwf	(sqrt@frac+3)& (0+255),w,b
  7451  003BC4  0100               	movlb	0	; () banked
  7452  003BC6  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7453                           
  7454                           ; BSR set to: 0
  7455  003BC8  C0D4  F0CF         	movff	sqrt@exp,sqrt@p
  7456                           
  7457                           ; BSR set to: 0
  7458  003BCC  0100               	movlb	0	; () banked
  7459  003BCE  A1CF               	btfss	sqrt@p& (0+255),0,b
  7460  003BD0  D002               	goto	l7135
  7461                           
  7462                           ; BSR set to: 0
  7463  003BD2  0100               	movlb	0	; () banked
  7464  003BD4  8FD8               	bsf	(sqrt@root+2)& (0+255),7,b
  7465  003BD6                     l7135:
  7466                           
  7467                           ; BSR set to: 0
  7468  003BD6  0100               	movlb	0	; () banked
  7469  003BD8  90D8               	bcf	status,0,c
  7470  003BDA  31CF               	rrcf	sqrt@p& (0+255),w,b
  7471  003BDC  0100               	movlb	0	; () banked
  7472  003BDE  6FD9               	movwf	(sqrt@root+3)& (0+255),b
  7473                           
  7474                           ; BSR set to: 0
  7475  003BE0  0100               	movlb	0	; () banked
  7476  003BE2  9FD9               	bcf	(sqrt@root+3)& (0+255),7,b
  7477                           
  7478                           ; BSR set to: 0
  7479  003BE4  C0D6  F0C1         	movff	sqrt@root,?_sqrt
  7480  003BE8  C0D7  F0C2         	movff	sqrt@root+1,?_sqrt+1
  7481  003BEC  C0D8  F0C3         	movff	sqrt@root+2,?_sqrt+2
  7482  003BF0  C0D9  F0C4         	movff	sqrt@root+3,?_sqrt+3
  7483  003BF4  0012               	return	
  7484  003BF6                     __end_of_sqrt:
  7485                           	opt stack 0
  7486                           tblptru	equ	0xFF8
  7487                           tblptrh	equ	0xFF7
  7488                           tblptrl	equ	0xFF6
  7489                           tablat	equ	0xFF5
  7490                           postinc0	equ	0xFEE
  7491                           wreg	equ	0xFE8
  7492                           postdec1	equ	0xFE5
  7493                           fsr1l	equ	0xFE1
  7494                           indf2	equ	0xFDF
  7495                           postinc2	equ	0xFDE
  7496                           postdec2	equ	0xFDD
  7497                           fsr2h	equ	0xFDA
  7498                           fsr2l	equ	0xFD9
  7499                           status	equ	0xFD8
  7500                           
  7501 ;; *************** function _atan *****************
  7502 ;; Defined at:
  7503 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\atan.c"
  7504 ;; Parameters:    Size  Location     Type
  7505 ;;  f               4  113[BANK0 ] unsigned char 
  7506 ;; Auto vars:     Size  Location     Type
  7507 ;;  val             4   13[BANK1 ] unsigned char 
  7508 ;;  val_squared     4    9[BANK1 ] unsigned char 
  7509 ;;  x               4    4[BANK1 ] unsigned char 
  7510 ;;  y               4    0[BANK1 ] unsigned char 
  7511 ;;  recip           1    8[BANK1 ] unsigned char 
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  4  113[BANK0 ] unsigned char 
  7514 ;; Registers used:
  7515 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7521 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7522 ;;      Locals:         0       0      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7524 ;;      Totals:         0       4      17       0       0       0       0       0       0       0       0       0       
      +0       0
  7525 ;;Total ram usage:       21 bytes
  7526 ;; Hardware stack levels used:    1
  7527 ;; Hardware stack levels required when called:    6
  7528 ;; This function calls:
  7529 ;;		___fladd
  7530 ;;		___fldiv
  7531 ;;		___flge
  7532 ;;		___flmul
  7533 ;;		___flneg
  7534 ;;		_eval_poly
  7535 ;;		_fabs
  7536 ;; This function is called by:
  7537 ;;		_asin
  7538 ;; This function uses a non-reentrant model
  7539 ;;
  7540                           
  7541                           	psect	text18
  7542  004C0A                     __ptext18:
  7543                           	opt stack 0
  7544  004C0A                     _atan:
  7545                           	opt stack 21
  7546                           
  7547                           ;incstack = 0
  7548  004C0A  C0D1  F0C1         	movff	atan@f,fabs@d
  7549  004C0E  C0D2  F0C2         	movff	atan@f+1,fabs@d+1
  7550  004C12  C0D3  F0C3         	movff	atan@f+2,fabs@d+2
  7551  004C16  C0D4  F0C4         	movff	atan@f+3,fabs@d+3
  7552  004C1A  EC20  F02F         	call	_fabs	;wreg free
  7553  004C1E  C0C1  F19A         	movff	?_fabs,atan@val
  7554  004C22  C0C2  F19B         	movff	?_fabs+1,atan@val+1
  7555  004C26  C0C3  F19C         	movff	?_fabs+2,atan@val+2
  7556  004C2A  C0C4  F19D         	movff	?_fabs+3,atan@val+3
  7557  004C2E  0101               	movlb	1	; () banked
  7558  004C30  519A               	movf	atan@val& (0+255),w,b
  7559  004C32  0101               	movlb	1	; () banked
  7560  004C34  119B               	iorwf	(atan@val+1)& (0+255),w,b
  7561  004C36  0101               	movlb	1	; () banked
  7562  004C38  119C               	iorwf	(atan@val+2)& (0+255),w,b
  7563  004C3A  0101               	movlb	1	; () banked
  7564  004C3C  119D               	iorwf	(atan@val+3)& (0+255),w,b
  7565  004C3E  A4D8               	btfss	status,2,c
  7566  004C40  D00A               	goto	l7155
  7567                           
  7568                           ; BSR set to: 1
  7569  004C42  0E00               	movlw	0
  7570  004C44  0100               	movlb	0	; () banked
  7571  004C46  6FD1               	movwf	?_atan& (0+255),b
  7572  004C48  0E00               	movlw	0
  7573  004C4A  6FD2               	movwf	(?_atan+1)& (0+255),b
  7574  004C4C  0E00               	movlw	0
  7575  004C4E  6FD3               	movwf	(?_atan+2)& (0+255),b
  7576  004C50  0E00               	movlw	0
  7577  004C52  6FD4               	movwf	(?_atan+3)& (0+255),b
  7578                           
  7579                           ; BSR set to: 0
  7580  004C54  0012               	return	
  7581  004C56                     l7155:
  7582  004C56  0E00               	movlw	0
  7583  004C58  0100               	movlb	0	; () banked
  7584  004C5A  6FC5               	movwf	___flge@ff1& (0+255),b
  7585  004C5C  0E00               	movlw	0
  7586  004C5E  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  7587  004C60  0E80               	movlw	128
  7588  004C62  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  7589  004C64  0E3F               	movlw	63
  7590  004C66  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  7591  004C68  C19A  F0C9         	movff	atan@val,___flge@ff2
  7592  004C6C  C19B  F0CA         	movff	atan@val+1,___flge@ff2+1
  7593  004C70  C19C  F0CB         	movff	atan@val+2,___flge@ff2+2
  7594  004C74  C19D  F0CC         	movff	atan@val+3,___flge@ff2+3
  7595  004C78  ECD3  F029         	call	___flge	;wreg free
  7596  004C7C  0100               	movlb	0	; () banked
  7597  004C7E  B0D8               	btfsc	status,0,c
  7598  004C80  D002               	goto	u9190
  7599  004C82  0E01               	movlw	1
  7600  004C84  D001               	goto	u9200
  7601  004C86                     u9190:
  7602  004C86  0E00               	movlw	0
  7603  004C88                     u9200:
  7604  004C88  0101               	movlb	1	; () banked
  7605  004C8A  6F95               	movwf	atan@recip& (0+255),b
  7606  004C8C  0101               	movlb	1	; () banked
  7607  004C8E  5195               	movf	atan@recip& (0+255),w,b
  7608  004C90  B4D8               	btfsc	status,2,c
  7609  004C92  D01B               	goto	l7159
  7610                           
  7611                           ; BSR set to: 1
  7612  004C94  0E00               	movlw	0
  7613  004C96  0100               	movlb	0	; () banked
  7614  004C98  6F77               	movwf	___fldiv@b& (0+255),b
  7615  004C9A  0E00               	movlw	0
  7616  004C9C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
  7617  004C9E  0E80               	movlw	128
  7618  004CA0  6F79               	movwf	(___fldiv@b+2)& (0+255),b
  7619  004CA2  0E3F               	movlw	63
  7620  004CA4  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
  7621  004CA6  C19A  F07B         	movff	atan@val,___fldiv@a
  7622  004CAA  C19B  F07C         	movff	atan@val+1,___fldiv@a+1
  7623  004CAE  C19C  F07D         	movff	atan@val+2,___fldiv@a+2
  7624  004CB2  C19D  F07E         	movff	atan@val+3,___fldiv@a+3
  7625  004CB6  ECFB  F01D         	call	___fldiv	;wreg free
  7626  004CBA  C077  F19A         	movff	?___fldiv,atan@val
  7627  004CBE  C078  F19B         	movff	?___fldiv+1,atan@val+1
  7628  004CC2  C079  F19C         	movff	?___fldiv+2,atan@val+2
  7629  004CC6  C07A  F19D         	movff	?___fldiv+3,atan@val+3
  7630  004CCA                     l7159:
  7631  004CCA  C19A  F090         	movff	atan@val,___flmul@b
  7632  004CCE  C19B  F091         	movff	atan@val+1,___flmul@b+1
  7633  004CD2  C19C  F092         	movff	atan@val+2,___flmul@b+2
  7634  004CD6  C19D  F093         	movff	atan@val+3,___flmul@b+3
  7635  004CDA  C19A  F094         	movff	atan@val,___flmul@a
  7636  004CDE  C19B  F095         	movff	atan@val+1,___flmul@a+1
  7637  004CE2  C19C  F096         	movff	atan@val+2,___flmul@a+2
  7638  004CE6  C19D  F097         	movff	atan@val+3,___flmul@a+3
  7639  004CEA  EC91  F017         	call	___flmul	;wreg free
  7640  004CEE  C090  F196         	movff	?___flmul,atan@val_squared
  7641  004CF2  C091  F197         	movff	?___flmul+1,atan@val_squared+1
  7642  004CF6  C092  F198         	movff	?___flmul+2,atan@val_squared+2
  7643  004CFA  C093  F199         	movff	?___flmul+3,atan@val_squared+3
  7644  004CFE  C196  F0BD         	movff	atan@val_squared,eval_poly@x
  7645  004D02  C197  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7646  004D06  C198  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7647  004D0A  C199  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7648  004D0E  0E19               	movlw	low atan@coeff_b
  7649  004D10  0100               	movlb	0	; () banked
  7650  004D12  6FC1               	movwf	eval_poly@d& (0+255),b
  7651  004D14  0E0D               	movlw	high atan@coeff_b
  7652  004D16  0100               	movlb	0	; () banked
  7653  004D18  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7654  004D1A  0E00               	movlw	0
  7655  004D1C  0100               	movlb	0	; () banked
  7656  004D1E  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7657  004D20  0E04               	movlw	4
  7658  004D22  6FC3               	movwf	eval_poly@n& (0+255),b
  7659  004D24  ECC8  F02B         	call	_eval_poly	;wreg free
  7660  004D28  C0BD  F18D         	movff	?_eval_poly,atan@y
  7661  004D2C  C0BE  F18E         	movff	?_eval_poly+1,atan@y+1
  7662  004D30  C0BF  F18F         	movff	?_eval_poly+2,atan@y+2
  7663  004D34  C0C0  F190         	movff	?_eval_poly+3,atan@y+3
  7664  004D38  C196  F0BD         	movff	atan@val_squared,eval_poly@x
  7665  004D3C  C197  F0BE         	movff	atan@val_squared+1,eval_poly@x+1
  7666  004D40  C198  F0BF         	movff	atan@val_squared+2,eval_poly@x+2
  7667  004D44  C199  F0C0         	movff	atan@val_squared+3,eval_poly@x+3
  7668  004D48  0E01               	movlw	low atan@coeff_a
  7669  004D4A  0100               	movlb	0	; () banked
  7670  004D4C  6FC1               	movwf	eval_poly@d& (0+255),b
  7671  004D4E  0E0D               	movlw	high atan@coeff_a
  7672  004D50  0100               	movlb	0	; () banked
  7673  004D52  6FC2               	movwf	(eval_poly@d+1)& (0+255),b
  7674  004D54  0E00               	movlw	0
  7675  004D56  0100               	movlb	0	; () banked
  7676  004D58  6FC4               	movwf	(eval_poly@n+1)& (0+255),b
  7677  004D5A  0E05               	movlw	5
  7678  004D5C  6FC3               	movwf	eval_poly@n& (0+255),b
  7679  004D5E  ECC8  F02B         	call	_eval_poly	;wreg free
  7680  004D62  C0BD  F191         	movff	?_eval_poly,atan@x
  7681  004D66  C0BE  F192         	movff	?_eval_poly+1,atan@x+1
  7682  004D6A  C0BF  F193         	movff	?_eval_poly+2,atan@x+2
  7683  004D6E  C0C0  F194         	movff	?_eval_poly+3,atan@x+3
  7684  004D72  C19A  F090         	movff	atan@val,___flmul@b
  7685  004D76  C19B  F091         	movff	atan@val+1,___flmul@b+1
  7686  004D7A  C19C  F092         	movff	atan@val+2,___flmul@b+2
  7687  004D7E  C19D  F093         	movff	atan@val+3,___flmul@b+3
  7688  004D82  C18D  F07B         	movff	atan@y,___fldiv@a
  7689  004D86  C18E  F07C         	movff	atan@y+1,___fldiv@a+1
  7690  004D8A  C18F  F07D         	movff	atan@y+2,___fldiv@a+2
  7691  004D8E  C190  F07E         	movff	atan@y+3,___fldiv@a+3
  7692  004D92  C191  F077         	movff	atan@x,___fldiv@b
  7693  004D96  C192  F078         	movff	atan@x+1,___fldiv@b+1
  7694  004D9A  C193  F079         	movff	atan@x+2,___fldiv@b+2
  7695  004D9E  C194  F07A         	movff	atan@x+3,___fldiv@b+3
  7696  004DA2  ECFB  F01D         	call	___fldiv	;wreg free
  7697  004DA6  C077  F094         	movff	?___fldiv,___flmul@a
  7698  004DAA  C078  F095         	movff	?___fldiv+1,___flmul@a+1
  7699  004DAE  C079  F096         	movff	?___fldiv+2,___flmul@a+2
  7700  004DB2  C07A  F097         	movff	?___fldiv+3,___flmul@a+3
  7701  004DB6  EC91  F017         	call	___flmul	;wreg free
  7702  004DBA  C090  F19A         	movff	?___flmul,atan@val
  7703  004DBE  C091  F19B         	movff	?___flmul+1,atan@val+1
  7704  004DC2  C092  F19C         	movff	?___flmul+2,atan@val+2
  7705  004DC6  C093  F19D         	movff	?___flmul+3,atan@val+3
  7706  004DCA  0101               	movlb	1	; () banked
  7707  004DCC  5195               	movf	atan@recip& (0+255),w,b
  7708  004DCE  0101               	movlb	1	; () banked
  7709  004DD0  B4D8               	btfsc	status,2,c
  7710  004DD2  D025               	goto	l7171
  7711                           
  7712                           ; BSR set to: 1
  7713  004DD4  C19A  F0BD         	movff	atan@val,___flneg@f1
  7714  004DD8  C19B  F0BE         	movff	atan@val+1,___flneg@f1+1
  7715  004DDC  C19C  F0BF         	movff	atan@val+2,___flneg@f1+2
  7716  004DE0  C19D  F0C0         	movff	atan@val+3,___flneg@f1+3
  7717  004DE4  EC3F  F02F         	call	___flneg	;wreg free
  7718  004DE8  C0BD  F0A9         	movff	?___flneg,___fladd@b
  7719  004DEC  C0BE  F0AA         	movff	?___flneg+1,___fladd@b+1
  7720  004DF0  C0BF  F0AB         	movff	?___flneg+2,___fladd@b+2
  7721  004DF4  C0C0  F0AC         	movff	?___flneg+3,___fladd@b+3
  7722  004DF8  0EDB               	movlw	219
  7723  004DFA  0100               	movlb	0	; () banked
  7724  004DFC  6FAD               	movwf	___fladd@a& (0+255),b
  7725  004DFE  0E0F               	movlw	15
  7726  004E00  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  7727  004E02  0EC9               	movlw	201
  7728  004E04  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  7729  004E06  0E3F               	movlw	63
  7730  004E08  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  7731  004E0A  EC3D  F015         	call	___fladd	;wreg free
  7732  004E0E  C0A9  F19A         	movff	?___fladd,atan@val
  7733  004E12  C0AA  F19B         	movff	?___fladd+1,atan@val+1
  7734  004E16  C0AB  F19C         	movff	?___fladd+2,atan@val+2
  7735  004E1A  C0AC  F19D         	movff	?___fladd+3,atan@val+3
  7736  004E1E                     l7171:
  7737  004E1E  0100               	movlb	0	; () banked
  7738  004E20  BFD4               	btfsc	(atan@f+3)& (0+255),7,b
  7739  004E22  D009               	goto	l7175
  7740                           
  7741                           ; BSR set to: 0
  7742  004E24  C19A  F0D1         	movff	atan@val,?_atan
  7743  004E28  C19B  F0D2         	movff	atan@val+1,?_atan+1
  7744  004E2C  C19C  F0D3         	movff	atan@val+2,?_atan+2
  7745  004E30  C19D  F0D4         	movff	atan@val+3,?_atan+3
  7746  004E34  0012               	return	
  7747  004E36                     l7175:
  7748                           
  7749                           ; BSR set to: 0
  7750  004E36  C19A  F0BD         	movff	atan@val,___flneg@f1
  7751  004E3A  C19B  F0BE         	movff	atan@val+1,___flneg@f1+1
  7752  004E3E  C19C  F0BF         	movff	atan@val+2,___flneg@f1+2
  7753  004E42  C19D  F0C0         	movff	atan@val+3,___flneg@f1+3
  7754  004E46  EC3F  F02F         	call	___flneg	;wreg free
  7755  004E4A  C0BD  F0D1         	movff	?___flneg,?_atan
  7756  004E4E  C0BE  F0D2         	movff	?___flneg+1,?_atan+1
  7757  004E52  C0BF  F0D3         	movff	?___flneg+2,?_atan+2
  7758  004E56  C0C0  F0D4         	movff	?___flneg+3,?_atan+3
  7759  004E5A  0012               	return	
  7760  004E5C                     __end_of_atan:
  7761                           	opt stack 0
  7762                           tblptru	equ	0xFF8
  7763                           tblptrh	equ	0xFF7
  7764                           tblptrl	equ	0xFF6
  7765                           tablat	equ	0xFF5
  7766                           postinc0	equ	0xFEE
  7767                           wreg	equ	0xFE8
  7768                           postdec1	equ	0xFE5
  7769                           fsr1l	equ	0xFE1
  7770                           indf2	equ	0xFDF
  7771                           postinc2	equ	0xFDE
  7772                           postdec2	equ	0xFDD
  7773                           fsr2h	equ	0xFDA
  7774                           fsr2l	equ	0xFD9
  7775                           status	equ	0xFD8
  7776                           
  7777 ;; *************** function _fabs *****************
  7778 ;; Defined at:
  7779 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\fabs.c"
  7780 ;; Parameters:    Size  Location     Type
  7781 ;;  d               4   97[BANK0 ] unsigned char 
  7782 ;; Auto vars:     Size  Location     Type
  7783 ;;		None
  7784 ;; Return value:  Size  Location     Type
  7785 ;;                  4   97[BANK0 ] unsigned char 
  7786 ;; Registers used:
  7787 ;;		wreg, status,2, status,0, cstack
  7788 ;; Tracked objects:
  7789 ;;		On entry : 0/0
  7790 ;;		On exit  : 0/0
  7791 ;;		Unchanged: 0/0
  7792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7793 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7796 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7797 ;;Total ram usage:        4 bytes
  7798 ;; Hardware stack levels used:    1
  7799 ;; Hardware stack levels required when called:    5
  7800 ;; This function calls:
  7801 ;;		___flneg
  7802 ;; This function is called by:
  7803 ;;		_asin
  7804 ;;		_atan
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           	psect	text19
  7809  005E40                     __ptext19:
  7810                           	opt stack 0
  7811  005E40                     _fabs:
  7812                           	opt stack 22
  7813                           
  7814                           ;incstack = 0
  7815  005E40  0100               	movlb	0	; () banked
  7816  005E42  AFC4               	btfss	(fabs@d+3)& (0+255),7,b
  7817  005E44  D013               	goto	l1071
  7818                           
  7819                           ; BSR set to: 0
  7820  005E46  C0C1  F0BD         	movff	fabs@d,___flneg@f1
  7821  005E4A  C0C2  F0BE         	movff	fabs@d+1,___flneg@f1+1
  7822  005E4E  C0C3  F0BF         	movff	fabs@d+2,___flneg@f1+2
  7823  005E52  C0C4  F0C0         	movff	fabs@d+3,___flneg@f1+3
  7824  005E56  EC3F  F02F         	call	___flneg	;wreg free
  7825  005E5A  C0BD  F0C1         	movff	?___flneg,?_fabs
  7826  005E5E  C0BE  F0C2         	movff	?___flneg+1,?_fabs+1
  7827  005E62  C0BF  F0C3         	movff	?___flneg+2,?_fabs+2
  7828  005E66  C0C0  F0C4         	movff	?___flneg+3,?_fabs+3
  7829  005E6A  0012               	return	
  7830  005E6C                     l1071:
  7831                           
  7832                           ; BSR set to: 0
  7833  005E6C  C0C1  F0C1         	movff	fabs@d,?_fabs
  7834  005E70  C0C2  F0C2         	movff	fabs@d+1,?_fabs+1
  7835  005E74  C0C3  F0C3         	movff	fabs@d+2,?_fabs+2
  7836  005E78  C0C4  F0C4         	movff	fabs@d+3,?_fabs+3
  7837  005E7C  0012               	return		;funcret
  7838  005E7E                     __end_of_fabs:
  7839                           	opt stack 0
  7840                           tblptru	equ	0xFF8
  7841                           tblptrh	equ	0xFF7
  7842                           tblptrl	equ	0xFF6
  7843                           tablat	equ	0xFF5
  7844                           postinc0	equ	0xFEE
  7845                           wreg	equ	0xFE8
  7846                           postdec1	equ	0xFE5
  7847                           fsr1l	equ	0xFE1
  7848                           indf2	equ	0xFDF
  7849                           postinc2	equ	0xFDE
  7850                           postdec2	equ	0xFDD
  7851                           fsr2h	equ	0xFDA
  7852                           fsr2l	equ	0xFD9
  7853                           status	equ	0xFD8
  7854                           
  7855 ;; *************** function ___flneg *****************
  7856 ;; Defined at:
  7857 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flneg.c"
  7858 ;; Parameters:    Size  Location     Type
  7859 ;;  f1              4   93[BANK0 ] unsigned char 
  7860 ;; Auto vars:     Size  Location     Type
  7861 ;;		None
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  4   93[BANK0 ] unsigned char 
  7864 ;; Registers used:
  7865 ;;		wreg, status,2, status,0
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7871 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7874 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7875 ;;Total ram usage:        4 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; Hardware stack levels required when called:    4
  7878 ;; This function calls:
  7879 ;;		Nothing
  7880 ;; This function is called by:
  7881 ;;		_park_routine
  7882 ;;		_matematica
  7883 ;;		_asin
  7884 ;;		_atan
  7885 ;;		_fabs
  7886 ;;		_sin
  7887 ;; This function uses a non-reentrant model
  7888 ;;
  7889                           
  7890                           	psect	text20
  7891  005E7E                     __ptext20:
  7892                           	opt stack 0
  7893  005E7E                     ___flneg:
  7894                           	opt stack 22
  7895                           
  7896                           ;incstack = 0
  7897  005E7E  0100               	movlb	0	; () banked
  7898  005E80  51BD               	movf	___flneg@f1& (0+255),w,b
  7899  005E82  0100               	movlb	0	; () banked
  7900  005E84  11BE               	iorwf	(___flneg@f1+1)& (0+255),w,b
  7901  005E86  0100               	movlb	0	; () banked
  7902  005E88  11BF               	iorwf	(___flneg@f1+2)& (0+255),w,b
  7903  005E8A  0100               	movlb	0	; () banked
  7904  005E8C  11C0               	iorwf	(___flneg@f1+3)& (0+255),w,b
  7905  005E8E  B4D8               	btfsc	status,2,c
  7906  005E90  D009               	goto	l6519
  7907                           
  7908                           ; BSR set to: 0
  7909  005E92  0E00               	movlw	0
  7910  005E94  0100               	movlb	0	; () banked
  7911  005E96  1BBD               	xorwf	___flneg@f1& (0+255),f,b
  7912  005E98  0E00               	movlw	0
  7913  005E9A  1BBE               	xorwf	(___flneg@f1+1)& (0+255),f,b
  7914  005E9C  0E00               	movlw	0
  7915  005E9E  1BBF               	xorwf	(___flneg@f1+2)& (0+255),f,b
  7916  005EA0  0E80               	movlw	128
  7917  005EA2  1BC0               	xorwf	(___flneg@f1+3)& (0+255),f,b
  7918  005EA4                     l6519:
  7919                           
  7920                           ; BSR set to: 0
  7921  005EA4  C0BD  F0BD         	movff	___flneg@f1,?___flneg
  7922  005EA8  C0BE  F0BE         	movff	___flneg@f1+1,?___flneg+1
  7923  005EAC  C0BF  F0BF         	movff	___flneg@f1+2,?___flneg+2
  7924  005EB0  C0C0  F0C0         	movff	___flneg@f1+3,?___flneg+3
  7925  005EB4  0012               	return	
  7926  005EB6                     __end_of___flneg:
  7927                           	opt stack 0
  7928                           tblptru	equ	0xFF8
  7929                           tblptrh	equ	0xFF7
  7930                           tblptrl	equ	0xFF6
  7931                           tablat	equ	0xFF5
  7932                           postinc0	equ	0xFEE
  7933                           wreg	equ	0xFE8
  7934                           postdec1	equ	0xFE5
  7935                           fsr1l	equ	0xFE1
  7936                           indf2	equ	0xFDF
  7937                           postinc2	equ	0xFDE
  7938                           postdec2	equ	0xFDD
  7939                           fsr2h	equ	0xFDA
  7940                           fsr2l	equ	0xFD9
  7941                           status	equ	0xFD8
  7942                           
  7943 ;; *************** function _eval_poly *****************
  7944 ;; Defined at:
  7945 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\evalpoly.c"
  7946 ;; Parameters:    Size  Location     Type
  7947 ;;  x               4   93[BANK0 ] unsigned char 
  7948 ;;  d               2   97[BANK0 ] PTR const 
  7949 ;;		 -> sin@coeff_a(20), sin@coeff_b(16), atan@coeff_a(24), atan@coeff_b(20), 
  7950 ;;  n               2   99[BANK0 ] int 
  7951 ;; Auto vars:     Size  Location     Type
  7952 ;;  res             4  105[BANK0 ] int 
  7953 ;; Return value:  Size  Location     Type
  7954 ;;                  4   93[BANK0 ] int 
  7955 ;; Registers used:
  7956 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7957 ;; Tracked objects:
  7958 ;;		On entry : 0/0
  7959 ;;		On exit  : 0/0
  7960 ;;		Unchanged: 0/0
  7961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7962 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7963 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7964 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7965 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7966 ;;Total ram usage:       16 bytes
  7967 ;; Hardware stack levels used:    1
  7968 ;; Hardware stack levels required when called:    5
  7969 ;; This function calls:
  7970 ;;		___fladd
  7971 ;;		___flmul
  7972 ;; This function is called by:
  7973 ;;		_atan
  7974 ;;		_sin
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text21
  7979  005790                     __ptext21:
  7980                           	opt stack 0
  7981  005790                     _eval_poly:
  7982                           	opt stack 21
  7983                           
  7984                           ; BSR set to: 0
  7985                           ;incstack = 0
  7986  005790  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  7987  005794  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  7988  005798  0100               	movlb	0	; () banked
  7989  00579A  90D8               	bcf	status,0,c
  7990  00579C  37C5               	rlcf	??_eval_poly& (0+255),f,b
  7991  00579E  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  7992  0057A0  0100               	movlb	0	; () banked
  7993  0057A2  90D8               	bcf	status,0,c
  7994  0057A4  37C5               	rlcf	??_eval_poly& (0+255),f,b
  7995  0057A6  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  7996  0057A8  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  7997  0057AC  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  7998  0057B0  0100               	movlb	0	; () banked
  7999  0057B2  51C5               	movf	??_eval_poly& (0+255),w,b
  8000  0057B4  0100               	movlb	0	; () banked
  8001  0057B6  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  8002  0057B8  0100               	movlb	0	; () banked
  8003  0057BA  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  8004  0057BC  0100               	movlb	0	; () banked
  8005  0057BE  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8006  0057C0  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  8007  0057C4  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  8008  0057C8                     	if	0	;tblptru may be non-zero
  8009  0057C8                     	endif
  8010  0057C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8011  0057C8  0E00               	movlw	low (__mediumconst shr (0+16))
  8012  0057CA  6EF8               	movwf	tblptru,c
  8013  0057CC                     	endif
  8014  0057CC  0009               	tblrd		*+
  8015  0057CE  CFF5 F0C9          	movff	tablat,eval_poly@res
  8016  0057D2  0009               	tblrd		*+
  8017  0057D4  CFF5 F0CA          	movff	tablat,eval_poly@res+1
  8018  0057D8  0009               	tblrd		*+
  8019  0057DA  CFF5 F0CB          	movff	tablat,eval_poly@res+2
  8020  0057DE  000A               	tblrd		*-
  8021  0057E0  CFF5 F0CC          	movff	tablat,eval_poly@res+3
  8022  0057E4  D052               	goto	l6777
  8023  0057E6                     l6775:
  8024                           
  8025                           ; BSR set to: 0
  8026  0057E6  C0C9  F094         	movff	eval_poly@res,___flmul@a
  8027  0057EA  C0CA  F095         	movff	eval_poly@res+1,___flmul@a+1
  8028  0057EE  C0CB  F096         	movff	eval_poly@res+2,___flmul@a+2
  8029  0057F2  C0CC  F097         	movff	eval_poly@res+3,___flmul@a+3
  8030  0057F6  C0BD  F090         	movff	eval_poly@x,___flmul@b
  8031  0057FA  C0BE  F091         	movff	eval_poly@x+1,___flmul@b+1
  8032  0057FE  C0BF  F092         	movff	eval_poly@x+2,___flmul@b+2
  8033  005802  C0C0  F093         	movff	eval_poly@x+3,___flmul@b+3
  8034  005806  EC91  F017         	call	___flmul	;wreg free
  8035  00580A  C090  F0A9         	movff	?___flmul,___fladd@b
  8036  00580E  C091  F0AA         	movff	?___flmul+1,___fladd@b+1
  8037  005812  C092  F0AB         	movff	?___flmul+2,___fladd@b+2
  8038  005816  C093  F0AC         	movff	?___flmul+3,___fladd@b+3
  8039  00581A  0100               	movlb	0	; () banked
  8040  00581C  07C3               	decf	eval_poly@n& (0+255),f,b
  8041  00581E  A0D8               	btfss	status,0,c
  8042  005820  07C4               	decf	(eval_poly@n+1)& (0+255),f,b
  8043  005822  C0C3  F0C5         	movff	eval_poly@n,??_eval_poly
  8044  005826  C0C4  F0C6         	movff	eval_poly@n+1,??_eval_poly+1
  8045  00582A  0100               	movlb	0	; () banked
  8046  00582C  90D8               	bcf	status,0,c
  8047  00582E  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8048  005830  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8049  005832  0100               	movlb	0	; () banked
  8050  005834  90D8               	bcf	status,0,c
  8051  005836  37C5               	rlcf	??_eval_poly& (0+255),f,b
  8052  005838  37C6               	rlcf	(??_eval_poly+1)& (0+255),f,b
  8053  00583A  C0C1  F0C7         	movff	eval_poly@d,??_eval_poly+2
  8054  00583E  C0C2  F0C8         	movff	eval_poly@d+1,??_eval_poly+3
  8055  005842  0100               	movlb	0	; () banked
  8056  005844  51C5               	movf	??_eval_poly& (0+255),w,b
  8057  005846  0100               	movlb	0	; () banked
  8058  005848  27C7               	addwf	(??_eval_poly+2)& (0+255),f,b
  8059  00584A  0100               	movlb	0	; () banked
  8060  00584C  51C6               	movf	(??_eval_poly+1)& (0+255),w,b
  8061  00584E  0100               	movlb	0	; () banked
  8062  005850  23C8               	addwfc	(??_eval_poly+3)& (0+255),f,b
  8063  005852  C0C7  FFF6         	movff	??_eval_poly+2,tblptrl
  8064  005856  C0C8  FFF7         	movff	??_eval_poly+3,tblptrh
  8065  00585A                     	if	0	;tblptru may be non-zero
  8066  00585A                     	endif
  8067  00585A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8068  00585A  0E00               	movlw	low (__mediumconst shr (0+16))
  8069  00585C  6EF8               	movwf	tblptru,c
  8070  00585E                     	endif
  8071  00585E  0009               	tblrd		*+
  8072  005860  CFF5 F0AD          	movff	tablat,___fladd@a
  8073  005864  0009               	tblrd		*+
  8074  005866  CFF5 F0AE          	movff	tablat,___fladd@a+1
  8075  00586A  0009               	tblrd		*+
  8076  00586C  CFF5 F0AF          	movff	tablat,___fladd@a+2
  8077  005870  000A               	tblrd		*-
  8078  005872  CFF5 F0B0          	movff	tablat,___fladd@a+3
  8079  005876  EC3D  F015         	call	___fladd	;wreg free
  8080  00587A  C0A9  F0C9         	movff	?___fladd,eval_poly@res
  8081  00587E  C0AA  F0CA         	movff	?___fladd+1,eval_poly@res+1
  8082  005882  C0AB  F0CB         	movff	?___fladd+2,eval_poly@res+2
  8083  005886  C0AC  F0CC         	movff	?___fladd+3,eval_poly@res+3
  8084  00588A                     l6777:
  8085  00588A  0100               	movlb	0	; () banked
  8086  00588C  51C3               	movf	eval_poly@n& (0+255),w,b
  8087  00588E  0100               	movlb	0	; () banked
  8088  005890  11C4               	iorwf	(eval_poly@n+1)& (0+255),w,b
  8089  005892  A4D8               	btfss	status,2,c
  8090  005894  D7A8               	goto	l6775
  8091                           
  8092                           ; BSR set to: 0
  8093  005896  C0C9  F0BD         	movff	eval_poly@res,?_eval_poly
  8094  00589A  C0CA  F0BE         	movff	eval_poly@res+1,?_eval_poly+1
  8095  00589E  C0CB  F0BF         	movff	eval_poly@res+2,?_eval_poly+2
  8096  0058A2  C0CC  F0C0         	movff	eval_poly@res+3,?_eval_poly+3
  8097                           
  8098                           ; BSR set to: 0
  8099  0058A6  0012               	return		;funcret
  8100  0058A8                     __end_of_eval_poly:
  8101                           	opt stack 0
  8102                           tblptru	equ	0xFF8
  8103                           tblptrh	equ	0xFF7
  8104                           tblptrl	equ	0xFF6
  8105                           tablat	equ	0xFF5
  8106                           postinc0	equ	0xFEE
  8107                           wreg	equ	0xFE8
  8108                           postdec1	equ	0xFE5
  8109                           fsr1l	equ	0xFE1
  8110                           indf2	equ	0xFDF
  8111                           postinc2	equ	0xFDE
  8112                           postdec2	equ	0xFDD
  8113                           fsr2h	equ	0xFDA
  8114                           fsr2l	equ	0xFD9
  8115                           status	equ	0xFD8
  8116                           
  8117 ;; *************** function ___flmul *****************
  8118 ;; Defined at:
  8119 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcmul.c"
  8120 ;; Parameters:    Size  Location     Type
  8121 ;;  b               4   48[BANK0 ] int 
  8122 ;;  a               4   52[BANK0 ] int 
  8123 ;; Auto vars:     Size  Location     Type
  8124 ;;  prod            4   67[BANK0 ] struct .
  8125 ;;  grs             4   62[BANK0 ] unsigned long 
  8126 ;;  temp            2   71[BANK0 ] struct .
  8127 ;;  bexp            1   66[BANK0 ] unsigned char 
  8128 ;;  aexp            1   61[BANK0 ] unsigned char 
  8129 ;;  sign            1   60[BANK0 ] unsigned char 
  8130 ;; Return value:  Size  Location     Type
  8131 ;;                  4   48[BANK0 ] unsigned char 
  8132 ;; Registers used:
  8133 ;;		wreg, status,2, status,0, prodl, prodh
  8134 ;; Tracked objects:
  8135 ;;		On entry : 0/0
  8136 ;;		On exit  : 0/0
  8137 ;;		Unchanged: 0/0
  8138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8139 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8140 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8141 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8142 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8143 ;;Total ram usage:       25 bytes
  8144 ;; Hardware stack levels used:    1
  8145 ;; Hardware stack levels required when called:    4
  8146 ;; This function calls:
  8147 ;;		Nothing
  8148 ;; This function is called by:
  8149 ;;		_parallelo
  8150 ;;		_matematica
  8151 ;;		_asin
  8152 ;;		_atan
  8153 ;;		_eval_poly
  8154 ;;		_sin
  8155 ;; This function uses a non-reentrant model
  8156 ;;
  8157                           
  8158                           	psect	text22
  8159  002F22                     __ptext22:
  8160                           	opt stack 0
  8161  002F22                     ___flmul:
  8162                           	opt stack 21
  8163                           
  8164                           ; BSR set to: 0
  8165                           ;incstack = 0
  8166  002F22  0100               	movlb	0	; () banked
  8167  002F24  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8168  002F26  0B80               	andlw	128
  8169  002F28  0100               	movlb	0	; () banked
  8170  002F2A  6F9C               	movwf	___flmul@sign& (0+255),b
  8171  002F2C  0100               	movlb	0	; () banked
  8172  002F2E  5193               	movf	(___flmul@b+3)& (0+255),w,b
  8173  002F30  2593               	addwf	(___flmul@b+3)& (0+255),w,b
  8174  002F32  0100               	movlb	0	; () banked
  8175  002F34  6FA2               	movwf	___flmul@bexp& (0+255),b
  8176                           
  8177                           ; BSR set to: 0
  8178  002F36  0100               	movlb	0	; () banked
  8179  002F38  AF92               	btfss	(___flmul@b+2)& (0+255),7,b
  8180  002F3A  D002               	goto	l6369
  8181                           
  8182                           ; BSR set to: 0
  8183  002F3C  0100               	movlb	0	; () banked
  8184  002F3E  81A2               	bsf	___flmul@bexp& (0+255),0,b
  8185  002F40                     l6369:
  8186                           
  8187                           ; BSR set to: 0
  8188  002F40  0100               	movlb	0	; () banked
  8189  002F42  51A2               	movf	___flmul@bexp& (0+255),w,b
  8190  002F44  0100               	movlb	0	; () banked
  8191  002F46  B4D8               	btfsc	status,2,c
  8192  002F48  D010               	goto	l6377
  8193                           
  8194                           ; BSR set to: 0
  8195  002F4A  0100               	movlb	0	; () banked
  8196  002F4C  29A2               	incf	___flmul@bexp& (0+255),w,b
  8197  002F4E  A4D8               	btfss	status,2,c
  8198  002F50  D009               	goto	l6375
  8199                           
  8200                           ; BSR set to: 0
  8201  002F52  0E00               	movlw	0
  8202  002F54  0100               	movlb	0	; () banked
  8203  002F56  6F90               	movwf	___flmul@b& (0+255),b
  8204  002F58  0E00               	movlw	0
  8205  002F5A  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8206  002F5C  0E00               	movlw	0
  8207  002F5E  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8208  002F60  0E00               	movlw	0
  8209  002F62  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8210  002F64                     l6375:
  8211                           
  8212                           ; BSR set to: 0
  8213  002F64  0100               	movlb	0	; () banked
  8214  002F66  8F92               	bsf	(___flmul@b+2)& (0+255),7,b
  8215  002F68  D009               	goto	l6379
  8216  002F6A                     l6377:
  8217                           
  8218                           ; BSR set to: 0
  8219  002F6A  0E00               	movlw	0
  8220  002F6C  0100               	movlb	0	; () banked
  8221  002F6E  6F90               	movwf	___flmul@b& (0+255),b
  8222  002F70  0E00               	movlw	0
  8223  002F72  6F91               	movwf	(___flmul@b+1)& (0+255),b
  8224  002F74  0E00               	movlw	0
  8225  002F76  6F92               	movwf	(___flmul@b+2)& (0+255),b
  8226  002F78  0E00               	movlw	0
  8227  002F7A  6F93               	movwf	(___flmul@b+3)& (0+255),b
  8228  002F7C                     l6379:
  8229                           
  8230                           ; BSR set to: 0
  8231  002F7C  0100               	movlb	0	; () banked
  8232  002F7E  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8233  002F80  0B80               	andlw	128
  8234  002F82  0100               	movlb	0	; () banked
  8235  002F84  1B9C               	xorwf	___flmul@sign& (0+255),f,b
  8236                           
  8237                           ; BSR set to: 0
  8238  002F86  0100               	movlb	0	; () banked
  8239  002F88  5197               	movf	(___flmul@a+3)& (0+255),w,b
  8240  002F8A  2597               	addwf	(___flmul@a+3)& (0+255),w,b
  8241  002F8C  0100               	movlb	0	; () banked
  8242  002F8E  6F9D               	movwf	___flmul@aexp& (0+255),b
  8243                           
  8244                           ; BSR set to: 0
  8245  002F90  0100               	movlb	0	; () banked
  8246  002F92  AF96               	btfss	(___flmul@a+2)& (0+255),7,b
  8247  002F94  D002               	goto	l6387
  8248                           
  8249                           ; BSR set to: 0
  8250  002F96  0100               	movlb	0	; () banked
  8251  002F98  819D               	bsf	___flmul@aexp& (0+255),0,b
  8252  002F9A                     l6387:
  8253                           
  8254                           ; BSR set to: 0
  8255  002F9A  0100               	movlb	0	; () banked
  8256  002F9C  519D               	movf	___flmul@aexp& (0+255),w,b
  8257  002F9E  0100               	movlb	0	; () banked
  8258  002FA0  B4D8               	btfsc	status,2,c
  8259  002FA2  D010               	goto	l6395
  8260                           
  8261                           ; BSR set to: 0
  8262  002FA4  0100               	movlb	0	; () banked
  8263  002FA6  299D               	incf	___flmul@aexp& (0+255),w,b
  8264  002FA8  A4D8               	btfss	status,2,c
  8265  002FAA  D009               	goto	l6393
  8266                           
  8267                           ; BSR set to: 0
  8268  002FAC  0E00               	movlw	0
  8269  002FAE  0100               	movlb	0	; () banked
  8270  002FB0  6F94               	movwf	___flmul@a& (0+255),b
  8271  002FB2  0E00               	movlw	0
  8272  002FB4  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8273  002FB6  0E00               	movlw	0
  8274  002FB8  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8275  002FBA  0E00               	movlw	0
  8276  002FBC  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8277  002FBE                     l6393:
  8278                           
  8279                           ; BSR set to: 0
  8280  002FBE  0100               	movlb	0	; () banked
  8281  002FC0  8F96               	bsf	(___flmul@a+2)& (0+255),7,b
  8282  002FC2  D009               	goto	l1416
  8283  002FC4                     l6395:
  8284                           
  8285                           ; BSR set to: 0
  8286  002FC4  0E00               	movlw	0
  8287  002FC6  0100               	movlb	0	; () banked
  8288  002FC8  6F94               	movwf	___flmul@a& (0+255),b
  8289  002FCA  0E00               	movlw	0
  8290  002FCC  6F95               	movwf	(___flmul@a+1)& (0+255),b
  8291  002FCE  0E00               	movlw	0
  8292  002FD0  6F96               	movwf	(___flmul@a+2)& (0+255),b
  8293  002FD2  0E00               	movlw	0
  8294  002FD4  6F97               	movwf	(___flmul@a+3)& (0+255),b
  8295  002FD6                     l1416:
  8296                           
  8297                           ; BSR set to: 0
  8298  002FD6  0100               	movlb	0	; () banked
  8299  002FD8  519D               	movf	___flmul@aexp& (0+255),w,b
  8300  002FDA  0100               	movlb	0	; () banked
  8301  002FDC  B4D8               	btfsc	status,2,c
  8302  002FDE  D005               	goto	l6399
  8303                           
  8304                           ; BSR set to: 0
  8305  002FE0  0100               	movlb	0	; () banked
  8306  002FE2  51A2               	movf	___flmul@bexp& (0+255),w,b
  8307  002FE4  0100               	movlb	0	; () banked
  8308  002FE6  A4D8               	btfss	status,2,c
  8309  002FE8  D00A               	goto	l6403
  8310  002FEA                     l6399:
  8311                           
  8312                           ; BSR set to: 0
  8313  002FEA  0E00               	movlw	0
  8314  002FEC  0100               	movlb	0	; () banked
  8315  002FEE  6F90               	movwf	?___flmul& (0+255),b
  8316  002FF0  0E00               	movlw	0
  8317  002FF2  6F91               	movwf	(?___flmul+1)& (0+255),b
  8318  002FF4  0E00               	movlw	0
  8319  002FF6  6F92               	movwf	(?___flmul+2)& (0+255),b
  8320  002FF8  0E00               	movlw	0
  8321  002FFA  6F93               	movwf	(?___flmul+3)& (0+255),b
  8322                           
  8323                           ; BSR set to: 0
  8324  002FFC  0012               	return	
  8325  002FFE                     l6403:
  8326                           
  8327                           ; BSR set to: 0
  8328  002FFE  0100               	movlb	0	; () banked
  8329  003000  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8330  003002  0100               	movlb	0	; () banked
  8331  003004  0390               	mulwf	___flmul@b& (0+255),b
  8332  003006  CFF3 F0A7          	movff	prodl,___flmul@temp
  8333  00300A  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8334                           
  8335                           ; BSR set to: 0
  8336  00300E  0100               	movlb	0	; () banked
  8337  003010  51A7               	movf	___flmul@temp& (0+255),w,b
  8338  003012  0100               	movlb	0	; () banked
  8339  003014  6F9E               	movwf	___flmul@grs& (0+255),b
  8340  003016  6B9F               	clrf	(___flmul@grs+1)& (0+255),b
  8341  003018  6BA0               	clrf	(___flmul@grs+2)& (0+255),b
  8342  00301A  6BA1               	clrf	(___flmul@grs+3)& (0+255),b
  8343                           
  8344                           ; BSR set to: 0
  8345  00301C  0100               	movlb	0	; () banked
  8346  00301E  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8347  003020  0100               	movlb	0	; () banked
  8348  003022  6FA3               	movwf	___flmul@prod& (0+255),b
  8349  003024  6BA4               	clrf	(___flmul@prod+1)& (0+255),b
  8350  003026  6BA5               	clrf	(___flmul@prod+2)& (0+255),b
  8351  003028  6BA6               	clrf	(___flmul@prod+3)& (0+255),b
  8352  00302A  0100               	movlb	0	; () banked
  8353  00302C  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8354  00302E  0100               	movlb	0	; () banked
  8355  003030  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8356  003032  CFF3 F0A7          	movff	prodl,___flmul@temp
  8357  003036  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8358                           
  8359                           ; BSR set to: 0
  8360  00303A  0100               	movlb	0	; () banked
  8361  00303C  51A7               	movf	___flmul@temp& (0+255),w,b
  8362  00303E  0100               	movlb	0	; () banked
  8363  003040  279E               	addwf	___flmul@grs& (0+255),f,b
  8364  003042  0E00               	movlw	0
  8365  003044  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8366  003046  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8367  003048  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8368                           
  8369                           ; BSR set to: 0
  8370  00304A  0100               	movlb	0	; () banked
  8371  00304C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8372  00304E  0100               	movlb	0	; () banked
  8373  003050  27A3               	addwf	___flmul@prod& (0+255),f,b
  8374  003052  0E00               	movlw	0
  8375  003054  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8376  003056  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8377  003058  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8378  00305A  0100               	movlb	0	; () banked
  8379  00305C  5194               	movf	___flmul@a& (0+255),w,b
  8380  00305E  0100               	movlb	0	; () banked
  8381  003060  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8382  003062  CFF3 F0A7          	movff	prodl,___flmul@temp
  8383  003066  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8384                           
  8385                           ; BSR set to: 0
  8386  00306A  0100               	movlb	0	; () banked
  8387  00306C  51A7               	movf	___flmul@temp& (0+255),w,b
  8388  00306E  0100               	movlb	0	; () banked
  8389  003070  279E               	addwf	___flmul@grs& (0+255),f,b
  8390  003072  0E00               	movlw	0
  8391  003074  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8392  003076  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8393  003078  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8394                           
  8395                           ; BSR set to: 0
  8396  00307A  0100               	movlb	0	; () banked
  8397  00307C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8398  00307E  0100               	movlb	0	; () banked
  8399  003080  27A3               	addwf	___flmul@prod& (0+255),f,b
  8400  003082  0E00               	movlw	0
  8401  003084  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8402  003086  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8403  003088  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8404                           
  8405                           ; BSR set to: 0
  8406  00308A  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8407  00308E  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8408  003092  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8409  003096  0100               	movlb	0	; () banked
  8410  003098  6B9E               	clrf	___flmul@grs& (0+255),b
  8411                           
  8412                           ; BSR set to: 0
  8413  00309A  0100               	movlb	0	; () banked
  8414  00309C  5194               	movf	___flmul@a& (0+255),w,b
  8415  00309E  0100               	movlb	0	; () banked
  8416  0030A0  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8417  0030A2  CFF3 F0A7          	movff	prodl,___flmul@temp
  8418  0030A6  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8419                           
  8420                           ; BSR set to: 0
  8421  0030AA  0100               	movlb	0	; () banked
  8422  0030AC  51A7               	movf	___flmul@temp& (0+255),w,b
  8423  0030AE  0100               	movlb	0	; () banked
  8424  0030B0  279E               	addwf	___flmul@grs& (0+255),f,b
  8425  0030B2  0100               	movlb	0	; () banked
  8426  0030B4  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8427  0030B6  0100               	movlb	0	; () banked
  8428  0030B8  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8429  0030BA  0E00               	movlw	0
  8430  0030BC  0100               	movlb	0	; () banked
  8431  0030BE  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8432  0030C0  0E00               	movlw	0
  8433  0030C2  0100               	movlb	0	; () banked
  8434  0030C4  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8435                           
  8436                           ; BSR set to: 0
  8437  0030C6  0100               	movlb	0	; () banked
  8438  0030C8  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8439  0030CA  0100               	movlb	0	; () banked
  8440  0030CC  0390               	mulwf	___flmul@b& (0+255),b
  8441  0030CE  CFF3 F0A7          	movff	prodl,___flmul@temp
  8442  0030D2  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8443                           
  8444                           ; BSR set to: 0
  8445  0030D6  0100               	movlb	0	; () banked
  8446  0030D8  51A7               	movf	___flmul@temp& (0+255),w,b
  8447  0030DA  0100               	movlb	0	; () banked
  8448  0030DC  279E               	addwf	___flmul@grs& (0+255),f,b
  8449  0030DE  0100               	movlb	0	; () banked
  8450  0030E0  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8451  0030E2  0100               	movlb	0	; () banked
  8452  0030E4  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8453  0030E6  0E00               	movlw	0
  8454  0030E8  0100               	movlb	0	; () banked
  8455  0030EA  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8456  0030EC  0E00               	movlw	0
  8457  0030EE  0100               	movlb	0	; () banked
  8458  0030F0  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8459                           
  8460                           ; BSR set to: 0
  8461  0030F2  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8462  0030F6  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8463  0030FA  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8464  0030FE  0100               	movlb	0	; () banked
  8465  003100  6B9E               	clrf	___flmul@grs& (0+255),b
  8466  003102  0100               	movlb	0	; () banked
  8467  003104  5194               	movf	___flmul@a& (0+255),w,b
  8468  003106  0100               	movlb	0	; () banked
  8469  003108  0390               	mulwf	___flmul@b& (0+255),b
  8470  00310A  CFF3 F0A7          	movff	prodl,___flmul@temp
  8471  00310E  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8472                           
  8473                           ; BSR set to: 0
  8474  003112  0100               	movlb	0	; () banked
  8475  003114  51A7               	movf	___flmul@temp& (0+255),w,b
  8476  003116  0100               	movlb	0	; () banked
  8477  003118  279E               	addwf	___flmul@grs& (0+255),f,b
  8478  00311A  0100               	movlb	0	; () banked
  8479  00311C  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8480  00311E  0100               	movlb	0	; () banked
  8481  003120  239F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8482  003122  0E00               	movlw	0
  8483  003124  0100               	movlb	0	; () banked
  8484  003126  23A0               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8485  003128  0E00               	movlw	0
  8486  00312A  0100               	movlb	0	; () banked
  8487  00312C  23A1               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8488                           
  8489                           ; BSR set to: 0
  8490  00312E  0100               	movlb	0	; () banked
  8491  003130  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8492  003132  0100               	movlb	0	; () banked
  8493  003134  0391               	mulwf	(___flmul@b+1)& (0+255),b
  8494  003136  CFF3 F0A7          	movff	prodl,___flmul@temp
  8495  00313A  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8496  00313E  0100               	movlb	0	; () banked
  8497  003140  51A7               	movf	___flmul@temp& (0+255),w,b
  8498  003142  0100               	movlb	0	; () banked
  8499  003144  27A3               	addwf	___flmul@prod& (0+255),f,b
  8500  003146  0100               	movlb	0	; () banked
  8501  003148  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8502  00314A  0100               	movlb	0	; () banked
  8503  00314C  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8504  00314E  0E00               	movlw	0
  8505  003150  0100               	movlb	0	; () banked
  8506  003152  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8507  003154  0E00               	movlw	0
  8508  003156  0100               	movlb	0	; () banked
  8509  003158  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8510                           
  8511                           ; BSR set to: 0
  8512  00315A  0100               	movlb	0	; () banked
  8513  00315C  5195               	movf	(___flmul@a+1)& (0+255),w,b
  8514  00315E  0100               	movlb	0	; () banked
  8515  003160  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8516  003162  CFF3 F0A7          	movff	prodl,___flmul@temp
  8517  003166  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8518                           
  8519                           ; BSR set to: 0
  8520  00316A  0100               	movlb	0	; () banked
  8521  00316C  51A7               	movf	___flmul@temp& (0+255),w,b
  8522  00316E  0100               	movlb	0	; () banked
  8523  003170  27A3               	addwf	___flmul@prod& (0+255),f,b
  8524  003172  0100               	movlb	0	; () banked
  8525  003174  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8526  003176  0100               	movlb	0	; () banked
  8527  003178  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8528  00317A  0E00               	movlw	0
  8529  00317C  0100               	movlb	0	; () banked
  8530  00317E  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8531  003180  0E00               	movlw	0
  8532  003182  0100               	movlb	0	; () banked
  8533  003184  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8534  003186  0100               	movlb	0	; () banked
  8535  003188  5196               	movf	(___flmul@a+2)& (0+255),w,b
  8536  00318A  0100               	movlb	0	; () banked
  8537  00318C  0392               	mulwf	(___flmul@b+2)& (0+255),b
  8538  00318E  CFF3 F0A7          	movff	prodl,___flmul@temp
  8539  003192  CFF4 F0A8          	movff	prodh,___flmul@temp+1
  8540                           
  8541                           ; BSR set to: 0
  8542  003196  0100               	movlb	0	; () banked
  8543  003198  51A7               	movf	___flmul@temp& (0+255),w,b
  8544  00319A  0100               	movlb	0	; () banked
  8545  00319C  6F98               	movwf	??___flmul& (0+255),b
  8546  00319E  0100               	movlb	0	; () banked
  8547  0031A0  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8548  0031A2  0100               	movlb	0	; () banked
  8549  0031A4  6F99               	movwf	(??___flmul+1)& (0+255),b
  8550  0031A6  0100               	movlb	0	; () banked
  8551  0031A8  6B9A               	clrf	(??___flmul+2)& (0+255),b
  8552  0031AA  0100               	movlb	0	; () banked
  8553  0031AC  6B9B               	clrf	(??___flmul+3)& (0+255),b
  8554  0031AE  C09A  F09B         	movff	??___flmul+2,??___flmul+3
  8555  0031B2  C099  F09A         	movff	??___flmul+1,??___flmul+2
  8556  0031B6  C098  F099         	movff	??___flmul,??___flmul+1
  8557  0031BA  0100               	movlb	0	; () banked
  8558  0031BC  6B98               	clrf	??___flmul& (0+255),b
  8559  0031BE  0100               	movlb	0	; () banked
  8560  0031C0  5198               	movf	??___flmul& (0+255),w,b
  8561  0031C2  0100               	movlb	0	; () banked
  8562  0031C4  27A3               	addwf	___flmul@prod& (0+255),f,b
  8563  0031C6  0100               	movlb	0	; () banked
  8564  0031C8  5199               	movf	(??___flmul+1)& (0+255),w,b
  8565  0031CA  0100               	movlb	0	; () banked
  8566  0031CC  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8567  0031CE  0100               	movlb	0	; () banked
  8568  0031D0  519A               	movf	(??___flmul+2)& (0+255),w,b
  8569  0031D2  0100               	movlb	0	; () banked
  8570  0031D4  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8571  0031D6  0100               	movlb	0	; () banked
  8572  0031D8  519B               	movf	(??___flmul+3)& (0+255),w,b
  8573  0031DA  0100               	movlb	0	; () banked
  8574  0031DC  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8575                           
  8576                           ; BSR set to: 0
  8577  0031DE  C09E  F098         	movff	___flmul@grs,??___flmul
  8578  0031E2  C09F  F099         	movff	___flmul@grs+1,??___flmul+1
  8579  0031E6  C0A0  F09A         	movff	___flmul@grs+2,??___flmul+2
  8580  0031EA  C0A1  F09B         	movff	___flmul@grs+3,??___flmul+3
  8581  0031EE  0E19               	movlw	25
  8582  0031F0  D006               	goto	u8000
  8583  0031F2                     u8005:
  8584  0031F2  0100               	movlb	0	; () banked
  8585  0031F4  90D8               	bcf	status,0,c
  8586  0031F6  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8587  0031F8  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8588  0031FA  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8589  0031FC  3398               	rrcf	??___flmul& (0+255),f,b
  8590  0031FE                     u8000:
  8591  0031FE  2EE8               	decfsz	wreg,f,c
  8592  003200  D7F8               	goto	u8005
  8593  003202  0100               	movlb	0	; () banked
  8594  003204  5198               	movf	??___flmul& (0+255),w,b
  8595  003206  0100               	movlb	0	; () banked
  8596  003208  27A3               	addwf	___flmul@prod& (0+255),f,b
  8597  00320A  0100               	movlb	0	; () banked
  8598  00320C  5199               	movf	(??___flmul+1)& (0+255),w,b
  8599  00320E  0100               	movlb	0	; () banked
  8600  003210  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8601  003212  0100               	movlb	0	; () banked
  8602  003214  519A               	movf	(??___flmul+2)& (0+255),w,b
  8603  003216  0100               	movlb	0	; () banked
  8604  003218  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8605  00321A  0100               	movlb	0	; () banked
  8606  00321C  519B               	movf	(??___flmul+3)& (0+255),w,b
  8607  00321E  0100               	movlb	0	; () banked
  8608  003220  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8609                           
  8610                           ; BSR set to: 0
  8611  003222  C0A0  F0A1         	movff	___flmul@grs+2,___flmul@grs+3
  8612  003226  C09F  F0A0         	movff	___flmul@grs+1,___flmul@grs+2
  8613  00322A  C09E  F09F         	movff	___flmul@grs,___flmul@grs+1
  8614  00322E  0100               	movlb	0	; () banked
  8615  003230  6B9E               	clrf	___flmul@grs& (0+255),b
  8616                           
  8617                           ; BSR set to: 0
  8618  003232  0100               	movlb	0	; () banked
  8619  003234  519D               	movf	___flmul@aexp& (0+255),w,b
  8620  003236  C0A2  F098         	movff	___flmul@bexp,??___flmul
  8621  00323A  0100               	movlb	0	; () banked
  8622  00323C  6B99               	clrf	(??___flmul+1)& (0+255),b
  8623  00323E  0100               	movlb	0	; () banked
  8624  003240  2798               	addwf	??___flmul& (0+255),f,b
  8625  003242  0E00               	movlw	0
  8626  003244  2399               	addwfc	(??___flmul+1)& (0+255),f,b
  8627  003246  0E82               	movlw	130
  8628  003248  0100               	movlb	0	; () banked
  8629  00324A  2598               	addwf	??___flmul& (0+255),w,b
  8630  00324C  0100               	movlb	0	; () banked
  8631  00324E  6FA7               	movwf	___flmul@temp& (0+255),b
  8632  003250  0EFF               	movlw	255
  8633  003252  0100               	movlb	0	; () banked
  8634  003254  2199               	addwfc	(??___flmul+1)& (0+255),w,b
  8635  003256  0100               	movlb	0	; () banked
  8636  003258  6FA8               	movwf	(___flmul@temp+1)& (0+255),b
  8637  00325A  D015               	goto	l6451
  8638  00325C                     l6445:
  8639                           
  8640                           ; BSR set to: 0
  8641  00325C  0100               	movlb	0	; () banked
  8642  00325E  90D8               	bcf	status,0,c
  8643  003260  37A3               	rlcf	___flmul@prod& (0+255),f,b
  8644  003262  37A4               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8645  003264  37A5               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8646  003266  37A6               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8647                           
  8648                           ; BSR set to: 0
  8649  003268  0100               	movlb	0	; () banked
  8650  00326A  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8651  00326C  D002               	goto	l1423
  8652                           
  8653                           ; BSR set to: 0
  8654  00326E  0100               	movlb	0	; () banked
  8655  003270  81A3               	bsf	___flmul@prod& (0+255),0,b
  8656  003272                     l1423:
  8657                           
  8658                           ; BSR set to: 0
  8659  003272  0100               	movlb	0	; () banked
  8660  003274  90D8               	bcf	status,0,c
  8661  003276  379E               	rlcf	___flmul@grs& (0+255),f,b
  8662  003278  379F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8663  00327A  37A0               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8664  00327C  37A1               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8665  00327E  0100               	movlb	0	; () banked
  8666  003280  07A7               	decf	___flmul@temp& (0+255),f,b
  8667  003282  A0D8               	btfss	status,0,c
  8668  003284  07A8               	decf	(___flmul@temp+1)& (0+255),f,b
  8669  003286                     l6451:
  8670                           
  8671                           ; BSR set to: 0
  8672  003286  0100               	movlb	0	; () banked
  8673  003288  AFA5               	btfss	(___flmul@prod+2)& (0+255),7,b
  8674  00328A  D7E8               	goto	l6445
  8675                           
  8676                           ; BSR set to: 0
  8677                           
  8678                           ; BSR set to: 0
  8679  00328C  0E00               	movlw	0
  8680  00328E  0100               	movlb	0	; () banked
  8681  003290  6F9D               	movwf	___flmul@aexp& (0+255),b
  8682                           
  8683                           ; BSR set to: 0
  8684  003292  0100               	movlb	0	; () banked
  8685  003294  AFA1               	btfss	(___flmul@grs+3)& (0+255),7,b
  8686  003296  D024               	goto	l1425
  8687                           
  8688                           ; BSR set to: 0
  8689  003298  0EFF               	movlw	255
  8690  00329A  0100               	movlb	0	; () banked
  8691  00329C  159E               	andwf	___flmul@grs& (0+255),w,b
  8692  00329E  0100               	movlb	0	; () banked
  8693  0032A0  6F98               	movwf	??___flmul& (0+255),b
  8694  0032A2  0EFF               	movlw	255
  8695  0032A4  0100               	movlb	0	; () banked
  8696  0032A6  159F               	andwf	(___flmul@grs+1)& (0+255),w,b
  8697  0032A8  0100               	movlb	0	; () banked
  8698  0032AA  6F99               	movwf	(??___flmul+1)& (0+255),b
  8699  0032AC  0EFF               	movlw	255
  8700  0032AE  0100               	movlb	0	; () banked
  8701  0032B0  15A0               	andwf	(___flmul@grs+2)& (0+255),w,b
  8702  0032B2  0100               	movlb	0	; () banked
  8703  0032B4  6F9A               	movwf	(??___flmul+2)& (0+255),b
  8704  0032B6  0E7F               	movlw	127
  8705  0032B8  0100               	movlb	0	; () banked
  8706  0032BA  15A1               	andwf	(___flmul@grs+3)& (0+255),w,b
  8707  0032BC  0100               	movlb	0	; () banked
  8708  0032BE  6F9B               	movwf	(??___flmul+3)& (0+255),b
  8709  0032C0  0100               	movlb	0	; () banked
  8710  0032C2  5198               	movf	??___flmul& (0+255),w,b
  8711  0032C4  0100               	movlb	0	; () banked
  8712  0032C6  1199               	iorwf	(??___flmul+1)& (0+255),w,b
  8713  0032C8  0100               	movlb	0	; () banked
  8714  0032CA  119A               	iorwf	(??___flmul+2)& (0+255),w,b
  8715  0032CC  0100               	movlb	0	; () banked
  8716  0032CE  119B               	iorwf	(??___flmul+3)& (0+255),w,b
  8717  0032D0  A4D8               	btfss	status,2,c
  8718  0032D2  D003               	goto	l6461
  8719                           
  8720                           ; BSR set to: 0
  8721                           
  8722                           ; BSR set to: 0
  8723  0032D4  0100               	movlb	0	; () banked
  8724  0032D6  A1A3               	btfss	___flmul@prod& (0+255),0,b
  8725  0032D8  D003               	goto	l1425
  8726  0032DA                     l6461:
  8727                           
  8728                           ; BSR set to: 0
  8729  0032DA  0E01               	movlw	1
  8730  0032DC  0100               	movlb	0	; () banked
  8731  0032DE  6F9D               	movwf	___flmul@aexp& (0+255),b
  8732  0032E0                     l1425:
  8733                           
  8734                           ; BSR set to: 0
  8735  0032E0  0100               	movlb	0	; () banked
  8736  0032E2  519D               	movf	___flmul@aexp& (0+255),w,b
  8737  0032E4  0100               	movlb	0	; () banked
  8738  0032E6  B4D8               	btfsc	status,2,c
  8739  0032E8  D023               	goto	l6471
  8740                           
  8741                           ; BSR set to: 0
  8742  0032EA  0E01               	movlw	1
  8743  0032EC  0100               	movlb	0	; () banked
  8744  0032EE  27A3               	addwf	___flmul@prod& (0+255),f,b
  8745  0032F0  0E00               	movlw	0
  8746  0032F2  23A4               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8747  0032F4  23A5               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8748  0032F6  23A6               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8749                           
  8750                           ; BSR set to: 0
  8751  0032F8  0100               	movlb	0	; () banked
  8752  0032FA  A1A6               	btfss	(___flmul@prod+3)& (0+255),0,b
  8753  0032FC  D019               	goto	l6471
  8754                           
  8755                           ; BSR set to: 0
  8756  0032FE  C0A3  F098         	movff	___flmul@prod,??___flmul
  8757  003302  C0A4  F099         	movff	___flmul@prod+1,??___flmul+1
  8758  003306  C0A5  F09A         	movff	___flmul@prod+2,??___flmul+2
  8759  00330A  C0A6  F09B         	movff	___flmul@prod+3,??___flmul+3
  8760  00330E  0100               	movlb	0	; () banked
  8761  003310  359B               	rlcf	(??___flmul+3)& (0+255),w,b
  8762  003312  339B               	rrcf	(??___flmul+3)& (0+255),f,b
  8763  003314  339A               	rrcf	(??___flmul+2)& (0+255),f,b
  8764  003316  3399               	rrcf	(??___flmul+1)& (0+255),f,b
  8765  003318  3398               	rrcf	??___flmul& (0+255),f,b
  8766  00331A  C098  F0A3         	movff	??___flmul,___flmul@prod
  8767  00331E  C099  F0A4         	movff	??___flmul+1,___flmul@prod+1
  8768  003322  C09A  F0A5         	movff	??___flmul+2,___flmul@prod+2
  8769  003326  C09B  F0A6         	movff	??___flmul+3,___flmul@prod+3
  8770                           
  8771                           ; BSR set to: 0
  8772  00332A  0100               	movlb	0	; () banked
  8773  00332C  4BA7               	infsnz	___flmul@temp& (0+255),f,b
  8774  00332E  2BA8               	incf	(___flmul@temp+1)& (0+255),f,b
  8775  003330                     l6471:
  8776                           
  8777                           ; BSR set to: 0
  8778  003330  0100               	movlb	0	; () banked
  8779  003332  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8780  003334  D010               	goto	l6475
  8781  003336  0100               	movlb	0	; () banked
  8782  003338  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8783  00333A  E104               	bnz	u8080
  8784  00333C  0100               	movlb	0	; () banked
  8785  00333E  29A7               	incf	___flmul@temp& (0+255),w,b
  8786  003340  A0D8               	btfss	status,0,c
  8787  003342  D009               	goto	l6475
  8788  003344                     u8080:
  8789                           
  8790                           ; BSR set to: 0
  8791  003344  0E00               	movlw	0
  8792  003346  0100               	movlb	0	; () banked
  8793  003348  6FA3               	movwf	___flmul@prod& (0+255),b
  8794  00334A  0E00               	movlw	0
  8795  00334C  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8796  00334E  0E80               	movlw	128
  8797  003350  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8798  003352  0E7F               	movlw	127
  8799  003354  D02B               	goto	L2
  8800  003356                     l6475:
  8801                           
  8802                           ; BSR set to: 0
  8803  003356  0100               	movlb	0	; () banked
  8804  003358  BFA8               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8805  00335A  D007               	goto	l6477
  8806  00335C  0100               	movlb	0	; () banked
  8807  00335E  51A8               	movf	(___flmul@temp+1)& (0+255),w,b
  8808  003360  E111               	bnz	l1433
  8809  003362  0100               	movlb	0	; () banked
  8810  003364  05A7               	decf	___flmul@temp& (0+255),w,b
  8811  003366  B0D8               	btfsc	status,0,c
  8812  003368  D00D               	goto	l1433
  8813  00336A                     l6477:
  8814                           
  8815                           ; BSR set to: 0
  8816  00336A  0E00               	movlw	0
  8817  00336C  0100               	movlb	0	; () banked
  8818  00336E  6FA3               	movwf	___flmul@prod& (0+255),b
  8819  003370  0E00               	movlw	0
  8820  003372  6FA4               	movwf	(___flmul@prod+1)& (0+255),b
  8821  003374  0E00               	movlw	0
  8822  003376  6FA5               	movwf	(___flmul@prod+2)& (0+255),b
  8823  003378  0E00               	movlw	0
  8824  00337A  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8825  00337C  0E00               	movlw	0
  8826  00337E  0100               	movlb	0	; () banked
  8827  003380  6F9C               	movwf	___flmul@sign& (0+255),b
  8828  003382  D015               	goto	l6487
  8829  003384                     l1433:
  8830                           
  8831                           ; BSR set to: 0
  8832  003384  C0A7  F0A2         	movff	___flmul@temp,___flmul@bexp
  8833                           
  8834                           ; BSR set to: 0
  8835  003388  0EFF               	movlw	255
  8836  00338A  0100               	movlb	0	; () banked
  8837  00338C  17A3               	andwf	___flmul@prod& (0+255),f,b
  8838  00338E  0EFF               	movlw	255
  8839  003390  17A4               	andwf	(___flmul@prod+1)& (0+255),f,b
  8840  003392  0E7F               	movlw	127
  8841  003394  17A5               	andwf	(___flmul@prod+2)& (0+255),f,b
  8842  003396  0E00               	movlw	0
  8843  003398  17A6               	andwf	(___flmul@prod+3)& (0+255),f,b
  8844                           
  8845                           ; BSR set to: 0
  8846  00339A  0100               	movlb	0	; () banked
  8847  00339C  A1A2               	btfss	___flmul@bexp& (0+255),0,b
  8848  00339E  D002               	goto	l6485
  8849                           
  8850                           ; BSR set to: 0
  8851  0033A0  0100               	movlb	0	; () banked
  8852  0033A2  8FA5               	bsf	(___flmul@prod+2)& (0+255),7,b
  8853  0033A4                     l6485:
  8854                           
  8855                           ; BSR set to: 0
  8856  0033A4  0100               	movlb	0	; () banked
  8857  0033A6  90D8               	bcf	status,0,c
  8858  0033A8  31A2               	rrcf	___flmul@bexp& (0+255),w,b
  8859  0033AA  0100               	movlb	0	; () banked
  8860  0033AC                     L2:
  8861  0033AC  6FA6               	movwf	(___flmul@prod+3)& (0+255),b
  8862  0033AE                     l6487:
  8863                           
  8864                           ; BSR set to: 0
  8865  0033AE  0100               	movlb	0	; () banked
  8866  0033B0  519C               	movf	___flmul@sign& (0+255),w,b
  8867  0033B2  0100               	movlb	0	; () banked
  8868  0033B4  13A6               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8869                           
  8870                           ; BSR set to: 0
  8871  0033B6  C0A3  F090         	movff	___flmul@prod,?___flmul
  8872  0033BA  C0A4  F091         	movff	___flmul@prod+1,?___flmul+1
  8873  0033BE  C0A5  F092         	movff	___flmul@prod+2,?___flmul+2
  8874  0033C2  C0A6  F093         	movff	___flmul@prod+3,?___flmul+3
  8875  0033C6  0012               	return	
  8876  0033C8                     __end_of___flmul:
  8877                           	opt stack 0
  8878                           tblptru	equ	0xFF8
  8879                           tblptrh	equ	0xFF7
  8880                           tblptrl	equ	0xFF6
  8881                           tablat	equ	0xFF5
  8882                           prodh	equ	0xFF4
  8883                           prodl	equ	0xFF3
  8884                           postinc0	equ	0xFEE
  8885                           wreg	equ	0xFE8
  8886                           postdec1	equ	0xFE5
  8887                           fsr1l	equ	0xFE1
  8888                           indf2	equ	0xFDF
  8889                           postinc2	equ	0xFDE
  8890                           postdec2	equ	0xFDD
  8891                           fsr2h	equ	0xFDA
  8892                           fsr2l	equ	0xFD9
  8893                           status	equ	0xFD8
  8894                           
  8895 ;; *************** function ___fladd *****************
  8896 ;; Defined at:
  8897 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcadd.c"
  8898 ;; Parameters:    Size  Location     Type
  8899 ;;  b               4   73[BANK0 ] unsigned char 
  8900 ;;  a               4   77[BANK0 ] unsigned char 
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;  grs             1   92[BANK0 ] unsigned char 
  8903 ;;  bexp            1   91[BANK0 ] unsigned char 
  8904 ;;  aexp            1   90[BANK0 ] unsigned char 
  8905 ;;  signs           1   89[BANK0 ] unsigned char 
  8906 ;; Return value:  Size  Location     Type
  8907 ;;                  4   73[BANK0 ] unsigned char 
  8908 ;; Registers used:
  8909 ;;		wreg, status,2, status,0
  8910 ;; Tracked objects:
  8911 ;;		On entry : 0/0
  8912 ;;		On exit  : 0/0
  8913 ;;		Unchanged: 0/0
  8914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8915 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8916 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8917 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8918 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8919 ;;Total ram usage:       20 bytes
  8920 ;; Hardware stack levels used:    1
  8921 ;; Hardware stack levels required when called:    4
  8922 ;; This function calls:
  8923 ;;		Nothing
  8924 ;; This function is called by:
  8925 ;;		_park_routine
  8926 ;;		_parallelo
  8927 ;;		_matematica
  8928 ;;		_asin
  8929 ;;		_atan
  8930 ;;		_cos
  8931 ;;		_eval_poly
  8932 ;;		_sin
  8933 ;;		___flsub
  8934 ;;		_floor
  8935 ;; This function uses a non-reentrant model
  8936 ;;
  8937                           
  8938                           	psect	text23
  8939  002A7A                     __ptext23:
  8940                           	opt stack 0
  8941  002A7A                     ___fladd:
  8942                           	opt stack 21
  8943                           
  8944                           ; BSR set to: 0
  8945                           ;incstack = 0
  8946  002A7A  0100               	movlb	0	; () banked
  8947  002A7C  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  8948  002A7E  0B80               	andlw	128
  8949  002A80  0100               	movlb	0	; () banked
  8950  002A82  6FB9               	movwf	___fladd@signs& (0+255),b
  8951  002A84  0100               	movlb	0	; () banked
  8952  002A86  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  8953  002A88  25AC               	addwf	(___fladd@b+3)& (0+255),w,b
  8954  002A8A  0100               	movlb	0	; () banked
  8955  002A8C  6FBB               	movwf	___fladd@bexp& (0+255),b
  8956                           
  8957                           ; BSR set to: 0
  8958  002A8E  0100               	movlb	0	; () banked
  8959  002A90  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  8960  002A92  D002               	goto	l6167
  8961                           
  8962                           ; BSR set to: 0
  8963  002A94  0100               	movlb	0	; () banked
  8964  002A96  81BB               	bsf	___fladd@bexp& (0+255),0,b
  8965  002A98                     l6167:
  8966                           
  8967                           ; BSR set to: 0
  8968  002A98  0100               	movlb	0	; () banked
  8969  002A9A  51BB               	movf	___fladd@bexp& (0+255),w,b
  8970  002A9C  0100               	movlb	0	; () banked
  8971  002A9E  B4D8               	btfsc	status,2,c
  8972  002AA0  D012               	goto	l6177
  8973                           
  8974                           ; BSR set to: 0
  8975  002AA2  0100               	movlb	0	; () banked
  8976  002AA4  29BB               	incf	___fladd@bexp& (0+255),w,b
  8977  002AA6  A4D8               	btfss	status,2,c
  8978  002AA8  D009               	goto	l6173
  8979                           
  8980                           ; BSR set to: 0
  8981  002AAA  0E00               	movlw	0
  8982  002AAC  0100               	movlb	0	; () banked
  8983  002AAE  6FA9               	movwf	___fladd@b& (0+255),b
  8984  002AB0  0E00               	movlw	0
  8985  002AB2  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  8986  002AB4  0E00               	movlw	0
  8987  002AB6  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  8988  002AB8  0E00               	movlw	0
  8989  002ABA  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  8990  002ABC                     l6173:
  8991                           
  8992                           ; BSR set to: 0
  8993  002ABC  0100               	movlb	0	; () banked
  8994  002ABE  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  8995                           
  8996                           ; BSR set to: 0
  8997  002AC0  0E00               	movlw	0
  8998  002AC2  0100               	movlb	0	; () banked
  8999  002AC4  D008               	goto	L3
  9000  002AC6                     l6177:
  9001                           
  9002                           ; BSR set to: 0
  9003  002AC6  0E00               	movlw	0
  9004  002AC8  0100               	movlb	0	; () banked
  9005  002ACA  6FA9               	movwf	___fladd@b& (0+255),b
  9006  002ACC  0E00               	movlw	0
  9007  002ACE  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9008  002AD0  0E00               	movlw	0
  9009  002AD2  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9010  002AD4  0E00               	movlw	0
  9011  002AD6                     L3:
  9012  002AD6  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9013                           
  9014                           ; BSR set to: 0
  9015                           
  9016                           ; BSR set to: 0
  9017  002AD8  0100               	movlb	0	; () banked
  9018  002ADA  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9019  002ADC  0B80               	andlw	128
  9020  002ADE  0100               	movlb	0	; () banked
  9021  002AE0  6FBA               	movwf	___fladd@aexp& (0+255),b
  9022                           
  9023                           ; BSR set to: 0
  9024  002AE2  0100               	movlb	0	; () banked
  9025  002AE4  51B9               	movf	___fladd@signs& (0+255),w,b
  9026  002AE6  0100               	movlb	0	; () banked
  9027  002AE8  19BA               	xorwf	___fladd@aexp& (0+255),w,b
  9028  002AEA  B4D8               	btfsc	status,2,c
  9029  002AEC  D002               	goto	l6185
  9030                           
  9031                           ; BSR set to: 0
  9032  002AEE  0100               	movlb	0	; () banked
  9033  002AF0  8DB9               	bsf	___fladd@signs& (0+255),6,b
  9034  002AF2                     l6185:
  9035                           
  9036                           ; BSR set to: 0
  9037  002AF2  0100               	movlb	0	; () banked
  9038  002AF4  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9039  002AF6  25B0               	addwf	(___fladd@a+3)& (0+255),w,b
  9040  002AF8  0100               	movlb	0	; () banked
  9041  002AFA  6FBA               	movwf	___fladd@aexp& (0+255),b
  9042                           
  9043                           ; BSR set to: 0
  9044  002AFC  0100               	movlb	0	; () banked
  9045  002AFE  AFAF               	btfss	(___fladd@a+2)& (0+255),7,b
  9046  002B00  D002               	goto	l6191
  9047                           
  9048                           ; BSR set to: 0
  9049  002B02  0100               	movlb	0	; () banked
  9050  002B04  81BA               	bsf	___fladd@aexp& (0+255),0,b
  9051  002B06                     l6191:
  9052                           
  9053                           ; BSR set to: 0
  9054  002B06  0100               	movlb	0	; () banked
  9055  002B08  51BA               	movf	___fladd@aexp& (0+255),w,b
  9056  002B0A  0100               	movlb	0	; () banked
  9057  002B0C  B4D8               	btfsc	status,2,c
  9058  002B0E  D012               	goto	l6201
  9059                           
  9060                           ; BSR set to: 0
  9061  002B10  0100               	movlb	0	; () banked
  9062  002B12  29BA               	incf	___fladd@aexp& (0+255),w,b
  9063  002B14  A4D8               	btfss	status,2,c
  9064  002B16  D009               	goto	l6197
  9065                           
  9066                           ; BSR set to: 0
  9067  002B18  0E00               	movlw	0
  9068  002B1A  0100               	movlb	0	; () banked
  9069  002B1C  6FAD               	movwf	___fladd@a& (0+255),b
  9070  002B1E  0E00               	movlw	0
  9071  002B20  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9072  002B22  0E00               	movlw	0
  9073  002B24  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9074  002B26  0E00               	movlw	0
  9075  002B28  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9076  002B2A                     l6197:
  9077                           
  9078                           ; BSR set to: 0
  9079  002B2A  0100               	movlb	0	; () banked
  9080  002B2C  8FAF               	bsf	(___fladd@a+2)& (0+255),7,b
  9081                           
  9082                           ; BSR set to: 0
  9083  002B2E  0E00               	movlw	0
  9084  002B30  0100               	movlb	0	; () banked
  9085  002B32  D008               	goto	L4
  9086  002B34                     l6201:
  9087                           
  9088                           ; BSR set to: 0
  9089  002B34  0E00               	movlw	0
  9090  002B36  0100               	movlb	0	; () banked
  9091  002B38  6FAD               	movwf	___fladd@a& (0+255),b
  9092  002B3A  0E00               	movlw	0
  9093  002B3C  6FAE               	movwf	(___fladd@a+1)& (0+255),b
  9094  002B3E  0E00               	movlw	0
  9095  002B40  6FAF               	movwf	(___fladd@a+2)& (0+255),b
  9096  002B42  0E00               	movlw	0
  9097  002B44                     L4:
  9098  002B44  6FB0               	movwf	(___fladd@a+3)& (0+255),b
  9099                           
  9100                           ; BSR set to: 0
  9101                           
  9102                           ; BSR set to: 0
  9103  002B46  0100               	movlb	0	; () banked
  9104  002B48  51BB               	movf	___fladd@bexp& (0+255),w,b
  9105  002B4A  0100               	movlb	0	; () banked
  9106  002B4C  5DBA               	subwf	___fladd@aexp& (0+255),w,b
  9107  002B4E  B0D8               	btfsc	status,0,c
  9108  002B50  D024               	goto	l6239
  9109                           
  9110                           ; BSR set to: 0
  9111  002B52  0100               	movlb	0	; () banked
  9112  002B54  ADB9               	btfss	___fladd@signs& (0+255),6,b
  9113  002B56  D003               	goto	l6209
  9114                           
  9115                           ; BSR set to: 0
  9116  002B58  0E80               	movlw	128
  9117  002B5A  0100               	movlb	0	; () banked
  9118  002B5C  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9119  002B5E                     l6209:
  9120                           
  9121                           ; BSR set to: 0
  9122  002B5E  C0BB  F0BC         	movff	___fladd@bexp,___fladd@grs
  9123                           
  9124                           ; BSR set to: 0
  9125  002B62  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9126                           
  9127                           ; BSR set to: 0
  9128  002B66  C0BC  F0BA         	movff	___fladd@grs,___fladd@aexp
  9129                           
  9130                           ; BSR set to: 0
  9131  002B6A  C0A9  F0BC         	movff	___fladd@b,___fladd@grs
  9132                           
  9133                           ; BSR set to: 0
  9134  002B6E  C0AD  F0A9         	movff	___fladd@a,___fladd@b
  9135                           
  9136                           ; BSR set to: 0
  9137  002B72  C0BC  F0AD         	movff	___fladd@grs,___fladd@a
  9138                           
  9139                           ; BSR set to: 0
  9140  002B76  C0AA  F0BC         	movff	___fladd@b+1,___fladd@grs
  9141                           
  9142                           ; BSR set to: 0
  9143  002B7A  C0AE  F0AA         	movff	___fladd@a+1,___fladd@b+1
  9144                           
  9145                           ; BSR set to: 0
  9146  002B7E  C0BC  F0AE         	movff	___fladd@grs,___fladd@a+1
  9147                           
  9148                           ; BSR set to: 0
  9149  002B82  C0AB  F0BC         	movff	___fladd@b+2,___fladd@grs
  9150                           
  9151                           ; BSR set to: 0
  9152  002B86  C0AF  F0AB         	movff	___fladd@a+2,___fladd@b+2
  9153                           
  9154                           ; BSR set to: 0
  9155  002B8A  C0BC  F0AF         	movff	___fladd@grs,___fladd@a+2
  9156                           
  9157                           ; BSR set to: 0
  9158  002B8E  C0AC  F0BC         	movff	___fladd@b+3,___fladd@grs
  9159                           
  9160                           ; BSR set to: 0
  9161  002B92  C0B0  F0AC         	movff	___fladd@a+3,___fladd@b+3
  9162                           
  9163                           ; BSR set to: 0
  9164  002B96  C0BC  F0B0         	movff	___fladd@grs,___fladd@a+3
  9165  002B9A                     l6239:
  9166                           
  9167                           ; BSR set to: 0
  9168  002B9A  0E00               	movlw	0
  9169  002B9C  0100               	movlb	0	; () banked
  9170  002B9E  6FBC               	movwf	___fladd@grs& (0+255),b
  9171                           
  9172                           ; BSR set to: 0
  9173  002BA0  0100               	movlb	0	; () banked
  9174  002BA2  51BB               	movf	___fladd@bexp& (0+255),w,b
  9175  002BA4  0100               	movlb	0	; () banked
  9176  002BA6  6FB1               	movwf	??___fladd& (0+255),b
  9177  002BA8  6BB2               	clrf	(??___fladd+1)& (0+255),b
  9178  002BAA  0100               	movlb	0	; () banked
  9179  002BAC  1FB1               	comf	??___fladd& (0+255),f,b
  9180  002BAE  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9181  002BB0  4BB1               	infsnz	??___fladd& (0+255),f,b
  9182  002BB2  2BB2               	incf	(??___fladd+1)& (0+255),f,b
  9183  002BB4  0100               	movlb	0	; () banked
  9184  002BB6  51BA               	movf	___fladd@aexp& (0+255),w,b
  9185  002BB8  0100               	movlb	0	; () banked
  9186  002BBA  6FB3               	movwf	(??___fladd+2)& (0+255),b
  9187  002BBC  6BB4               	clrf	(??___fladd+3)& (0+255),b
  9188  002BBE  0100               	movlb	0	; () banked
  9189  002BC0  51B1               	movf	??___fladd& (0+255),w,b
  9190  002BC2  0100               	movlb	0	; () banked
  9191  002BC4  27B3               	addwf	(??___fladd+2)& (0+255),f,b
  9192  002BC6  0100               	movlb	0	; () banked
  9193  002BC8  51B2               	movf	(??___fladd+1)& (0+255),w,b
  9194  002BCA  0100               	movlb	0	; () banked
  9195  002BCC  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9196  002BCE  0100               	movlb	0	; () banked
  9197  002BD0  BFB4               	btfsc	(??___fladd+3)& (0+255),7,b
  9198  002BD2  D03D               	goto	l1331
  9199  002BD4  0100               	movlb	0	; () banked
  9200  002BD6  51B4               	movf	(??___fladd+3)& (0+255),w,b
  9201  002BD8  E105               	bnz	u7620
  9202  002BDA  0E1A               	movlw	26
  9203  002BDC  0100               	movlb	0	; () banked
  9204  002BDE  5DB3               	subwf	(??___fladd+2)& (0+255),w,b
  9205  002BE0  A0D8               	btfss	status,0,c
  9206  002BE2  D035               	goto	l1331
  9207  002BE4                     u7620:
  9208                           
  9209                           ; BSR set to: 0
  9210  002BE4  0100               	movlb	0	; () banked
  9211  002BE6  51A9               	movf	___fladd@b& (0+255),w,b
  9212  002BE8  0100               	movlb	0	; () banked
  9213  002BEA  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9214  002BEC  0100               	movlb	0	; () banked
  9215  002BEE  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9216  002BF0  0100               	movlb	0	; () banked
  9217  002BF2  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9218  002BF4  B4D8               	btfsc	status,2,c
  9219  002BF6  D002               	goto	u7630
  9220  002BF8  0E01               	movlw	1
  9221  002BFA  D001               	goto	u7640
  9222  002BFC                     u7630:
  9223  002BFC  0E00               	movlw	0
  9224  002BFE                     u7640:
  9225  002BFE  0100               	movlb	0	; () banked
  9226  002C00  6FBC               	movwf	___fladd@grs& (0+255),b
  9227                           
  9228                           ; BSR set to: 0
  9229  002C02  0E00               	movlw	0
  9230  002C04  0100               	movlb	0	; () banked
  9231  002C06  6FA9               	movwf	___fladd@b& (0+255),b
  9232  002C08  0E00               	movlw	0
  9233  002C0A  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9234  002C0C  0E00               	movlw	0
  9235  002C0E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9236  002C10  0E00               	movlw	0
  9237  002C12  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9238                           
  9239                           ; BSR set to: 0
  9240  002C14  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
  9241  002C18  D020               	goto	l1330
  9242  002C1A                     l1332:
  9243                           
  9244                           ; BSR set to: 0
  9245  002C1A  0100               	movlb	0	; () banked
  9246  002C1C  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9247  002C1E  D007               	goto	l6251
  9248                           
  9249                           ; BSR set to: 0
  9250  002C20  0100               	movlb	0	; () banked
  9251  002C22  90D8               	bcf	status,0,c
  9252  002C24  31BC               	rrcf	___fladd@grs& (0+255),w,b
  9253  002C26  0901               	iorlw	1
  9254  002C28  0100               	movlb	0	; () banked
  9255  002C2A  6FBC               	movwf	___fladd@grs& (0+255),b
  9256  002C2C  D003               	goto	l6253
  9257  002C2E                     l6251:
  9258                           
  9259                           ; BSR set to: 0
  9260  002C2E  0100               	movlb	0	; () banked
  9261  002C30  90D8               	bcf	status,0,c
  9262  002C32  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9263  002C34                     l6253:
  9264                           
  9265                           ; BSR set to: 0
  9266  002C34  0100               	movlb	0	; () banked
  9267  002C36  A1A9               	btfss	___fladd@b& (0+255),0,b
  9268  002C38  D002               	goto	l6257
  9269                           
  9270                           ; BSR set to: 0
  9271  002C3A  0100               	movlb	0	; () banked
  9272  002C3C  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9273  002C3E                     l6257:
  9274                           
  9275                           ; BSR set to: 0
  9276  002C3E  0100               	movlb	0	; () banked
  9277  002C40  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9278  002C42  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9279  002C44  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9280  002C46  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9281  002C48  33A9               	rrcf	___fladd@b& (0+255),f,b
  9282                           
  9283                           ; BSR set to: 0
  9284  002C4A  0100               	movlb	0	; () banked
  9285  002C4C  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9286  002C4E                     l1331:
  9287                           
  9288                           ; BSR set to: 0
  9289  002C4E  0100               	movlb	0	; () banked
  9290  002C50  51BA               	movf	___fladd@aexp& (0+255),w,b
  9291  002C52  0100               	movlb	0	; () banked
  9292  002C54  5DBB               	subwf	___fladd@bexp& (0+255),w,b
  9293  002C56  A0D8               	btfss	status,0,c
  9294  002C58  D7E0               	goto	l1332
  9295  002C5A                     l1330:
  9296                           
  9297                           ; BSR set to: 0
  9298  002C5A  0100               	movlb	0	; () banked
  9299  002C5C  BDB9               	btfsc	___fladd@signs& (0+255),6,b
  9300  002C5E  D03F               	goto	l6285
  9301                           
  9302                           ; BSR set to: 0
  9303  002C60  0100               	movlb	0	; () banked
  9304  002C62  51BB               	movf	___fladd@bexp& (0+255),w,b
  9305  002C64  0100               	movlb	0	; () banked
  9306  002C66  A4D8               	btfss	status,2,c
  9307  002C68  D00A               	goto	l6267
  9308                           
  9309                           ; BSR set to: 0
  9310  002C6A  0E00               	movlw	0
  9311  002C6C  0100               	movlb	0	; () banked
  9312  002C6E  6FA9               	movwf	?___fladd& (0+255),b
  9313  002C70  0E00               	movlw	0
  9314  002C72  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9315  002C74  0E00               	movlw	0
  9316  002C76  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9317  002C78  0E00               	movlw	0
  9318  002C7A  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9319                           
  9320                           ; BSR set to: 0
  9321  002C7C  0012               	return	
  9322  002C7E                     l6267:
  9323                           
  9324                           ; BSR set to: 0
  9325  002C7E  0100               	movlb	0	; () banked
  9326  002C80  51AD               	movf	___fladd@a& (0+255),w,b
  9327  002C82  0100               	movlb	0	; () banked
  9328  002C84  27A9               	addwf	___fladd@b& (0+255),f,b
  9329  002C86  0100               	movlb	0	; () banked
  9330  002C88  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9331  002C8A  0100               	movlb	0	; () banked
  9332  002C8C  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9333  002C8E  0100               	movlb	0	; () banked
  9334  002C90  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9335  002C92  0100               	movlb	0	; () banked
  9336  002C94  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9337  002C96  0100               	movlb	0	; () banked
  9338  002C98  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9339  002C9A  0100               	movlb	0	; () banked
  9340  002C9C  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9341                           
  9342                           ; BSR set to: 0
  9343  002C9E  0100               	movlb	0	; () banked
  9344  002CA0  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9345  002CA2  D0CC               	goto	l6321
  9346                           
  9347                           ; BSR set to: 0
  9348  002CA4  0100               	movlb	0	; () banked
  9349  002CA6  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9350  002CA8  D009               	goto	l6275
  9351                           
  9352                           ; BSR set to: 0
  9353  002CAA  0100               	movlb	0	; () banked
  9354  002CAC  90D8               	bcf	status,0,c
  9355  002CAE  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9356  002CB0  0100               	movlb	0	; () banked
  9357  002CB2  51BC               	movf	___fladd@grs& (0+255),w,b
  9358  002CB4  0901               	iorlw	1
  9359  002CB6  0100               	movlb	0	; () banked
  9360  002CB8  6FBC               	movwf	___fladd@grs& (0+255),b
  9361  002CBA  D003               	goto	l6277
  9362  002CBC                     l6275:
  9363                           
  9364                           ; BSR set to: 0
  9365  002CBC  0100               	movlb	0	; () banked
  9366  002CBE  90D8               	bcf	status,0,c
  9367  002CC0  33BC               	rrcf	___fladd@grs& (0+255),f,b
  9368  002CC2                     l6277:
  9369                           
  9370                           ; BSR set to: 0
  9371  002CC2  0100               	movlb	0	; () banked
  9372  002CC4  A1A9               	btfss	___fladd@b& (0+255),0,b
  9373  002CC6  D002               	goto	l6281
  9374                           
  9375                           ; BSR set to: 0
  9376  002CC8  0100               	movlb	0	; () banked
  9377  002CCA  8FBC               	bsf	___fladd@grs& (0+255),7,b
  9378  002CCC                     l6281:
  9379                           
  9380                           ; BSR set to: 0
  9381  002CCC  0100               	movlb	0	; () banked
  9382  002CCE  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
  9383  002CD0  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
  9384  002CD2  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
  9385  002CD4  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
  9386  002CD6  33A9               	rrcf	___fladd@b& (0+255),f,b
  9387                           
  9388                           ; BSR set to: 0
  9389  002CD8  0100               	movlb	0	; () banked
  9390  002CDA  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9391                           
  9392                           ; BSR set to: 0
  9393  002CDC  D0AF               	goto	l6321
  9394  002CDE                     l6285:
  9395                           
  9396                           ; BSR set to: 0
  9397  002CDE  0100               	movlb	0	; () banked
  9398  002CE0  51AD               	movf	___fladd@a& (0+255),w,b
  9399  002CE2  0100               	movlb	0	; () banked
  9400  002CE4  5DA9               	subwf	___fladd@b& (0+255),w,b
  9401  002CE6  0100               	movlb	0	; () banked
  9402  002CE8  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9403  002CEA  0100               	movlb	0	; () banked
  9404  002CEC  59AA               	subwfb	(___fladd@b+1)& (0+255),w,b
  9405  002CEE  0100               	movlb	0	; () banked
  9406  002CF0  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9407  002CF2  0100               	movlb	0	; () banked
  9408  002CF4  59AB               	subwfb	(___fladd@b+2)& (0+255),w,b
  9409  002CF6  0100               	movlb	0	; () banked
  9410  002CF8  51AC               	movf	(___fladd@b+3)& (0+255),w,b
  9411  002CFA  0A80               	xorlw	128
  9412  002CFC  0100               	movlb	0	; () banked
  9413  002CFE  6FB1               	movwf	??___fladd& (0+255),b
  9414  002D00  0100               	movlb	0	; () banked
  9415  002D02  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9416  002D04  0A80               	xorlw	128
  9417  002D06  0100               	movlb	0	; () banked
  9418  002D08  59B1               	subwfb	??___fladd& (0+255),w,b
  9419  002D0A  B0D8               	btfsc	status,0,c
  9420  002D0C  D050               	goto	l6295
  9421                           
  9422                           ; BSR set to: 0
  9423  002D0E  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9424  002D12  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9425  002D16  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9426  002D1A  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9427  002D1E  0100               	movlb	0	; () banked
  9428  002D20  1FB1               	comf	??___fladd& (0+255),f,b
  9429  002D22  1FB2               	comf	(??___fladd+1)& (0+255),f,b
  9430  002D24  1FB3               	comf	(??___fladd+2)& (0+255),f,b
  9431  002D26  1FB4               	comf	(??___fladd+3)& (0+255),f,b
  9432  002D28  2BB1               	incf	??___fladd& (0+255),f,b
  9433  002D2A  0E00               	movlw	0
  9434  002D2C  23B2               	addwfc	(??___fladd+1)& (0+255),f,b
  9435  002D2E  23B3               	addwfc	(??___fladd+2)& (0+255),f,b
  9436  002D30  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
  9437  002D32  0100               	movlb	0	; () banked
  9438  002D34  51AD               	movf	___fladd@a& (0+255),w,b
  9439  002D36  0100               	movlb	0	; () banked
  9440  002D38  25B1               	addwf	??___fladd& (0+255),w,b
  9441  002D3A  0100               	movlb	0	; () banked
  9442  002D3C  6FB5               	movwf	(??___fladd+4)& (0+255),b
  9443  002D3E  0100               	movlb	0	; () banked
  9444  002D40  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9445  002D42  0100               	movlb	0	; () banked
  9446  002D44  21B2               	addwfc	(??___fladd+1)& (0+255),w,b
  9447  002D46  0100               	movlb	0	; () banked
  9448  002D48  6FB6               	movwf	(??___fladd+5)& (0+255),b
  9449  002D4A  0100               	movlb	0	; () banked
  9450  002D4C  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9451  002D4E  0100               	movlb	0	; () banked
  9452  002D50  21B3               	addwfc	(??___fladd+2)& (0+255),w,b
  9453  002D52  0100               	movlb	0	; () banked
  9454  002D54  6FB7               	movwf	(??___fladd+6)& (0+255),b
  9455  002D56  0100               	movlb	0	; () banked
  9456  002D58  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9457  002D5A  0100               	movlb	0	; () banked
  9458  002D5C  21B4               	addwfc	(??___fladd+3)& (0+255),w,b
  9459  002D5E  0100               	movlb	0	; () banked
  9460  002D60  6FB8               	movwf	(??___fladd+7)& (0+255),b
  9461  002D62  0EFF               	movlw	255
  9462  002D64  0100               	movlb	0	; () banked
  9463  002D66  25B5               	addwf	(??___fladd+4)& (0+255),w,b
  9464  002D68  0100               	movlb	0	; () banked
  9465  002D6A  6FA9               	movwf	___fladd@b& (0+255),b
  9466  002D6C  0EFF               	movlw	255
  9467  002D6E  0100               	movlb	0	; () banked
  9468  002D70  21B6               	addwfc	(??___fladd+5)& (0+255),w,b
  9469  002D72  0100               	movlb	0	; () banked
  9470  002D74  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9471  002D76  0EFF               	movlw	255
  9472  002D78  0100               	movlb	0	; () banked
  9473  002D7A  21B7               	addwfc	(??___fladd+6)& (0+255),w,b
  9474  002D7C  0100               	movlb	0	; () banked
  9475  002D7E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9476  002D80  0EFF               	movlw	255
  9477  002D82  0100               	movlb	0	; () banked
  9478  002D84  21B8               	addwfc	(??___fladd+7)& (0+255),w,b
  9479  002D86  0100               	movlb	0	; () banked
  9480  002D88  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9481  002D8A  0E80               	movlw	128
  9482  002D8C  0100               	movlb	0	; () banked
  9483  002D8E  1BB9               	xorwf	___fladd@signs& (0+255),f,b
  9484                           
  9485                           ; BSR set to: 0
  9486  002D90  0100               	movlb	0	; () banked
  9487  002D92  6DBC               	negf	___fladd@grs& (0+255),b
  9488                           
  9489                           ; BSR set to: 0
  9490  002D94  0100               	movlb	0	; () banked
  9491  002D96  51BC               	movf	___fladd@grs& (0+255),w,b
  9492  002D98  0100               	movlb	0	; () banked
  9493  002D9A  A4D8               	btfss	status,2,c
  9494  002D9C  D018               	goto	l1347
  9495                           
  9496                           ; BSR set to: 0
  9497  002D9E  0E01               	movlw	1
  9498  002DA0  0100               	movlb	0	; () banked
  9499  002DA2  27A9               	addwf	___fladd@b& (0+255),f,b
  9500  002DA4  0E00               	movlw	0
  9501  002DA6  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9502  002DA8  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9503  002DAA  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9504                           
  9505                           ; BSR set to: 0
  9506  002DAC  D010               	goto	l1347
  9507  002DAE                     l6295:
  9508                           
  9509                           ; BSR set to: 0
  9510  002DAE  0100               	movlb	0	; () banked
  9511  002DB0  51AD               	movf	___fladd@a& (0+255),w,b
  9512  002DB2  0100               	movlb	0	; () banked
  9513  002DB4  5FA9               	subwf	___fladd@b& (0+255),f,b
  9514  002DB6  0100               	movlb	0	; () banked
  9515  002DB8  51AE               	movf	(___fladd@a+1)& (0+255),w,b
  9516  002DBA  0100               	movlb	0	; () banked
  9517  002DBC  5BAA               	subwfb	(___fladd@b+1)& (0+255),f,b
  9518  002DBE  0100               	movlb	0	; () banked
  9519  002DC0  51AF               	movf	(___fladd@a+2)& (0+255),w,b
  9520  002DC2  0100               	movlb	0	; () banked
  9521  002DC4  5BAB               	subwfb	(___fladd@b+2)& (0+255),f,b
  9522  002DC6  0100               	movlb	0	; () banked
  9523  002DC8  51B0               	movf	(___fladd@a+3)& (0+255),w,b
  9524  002DCA  0100               	movlb	0	; () banked
  9525  002DCC  5BAC               	subwfb	(___fladd@b+3)& (0+255),f,b
  9526  002DCE                     l1347:
  9527                           
  9528                           ; BSR set to: 0
  9529  002DCE  0100               	movlb	0	; () banked
  9530  002DD0  51A9               	movf	___fladd@b& (0+255),w,b
  9531  002DD2  0100               	movlb	0	; () banked
  9532  002DD4  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
  9533  002DD6  0100               	movlb	0	; () banked
  9534  002DD8  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
  9535  002DDA  0100               	movlb	0	; () banked
  9536  002DDC  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
  9537  002DDE  A4D8               	btfss	status,2,c
  9538  002DE0  D02A               	goto	l6319
  9539                           
  9540                           ; BSR set to: 0
  9541  002DE2  0100               	movlb	0	; () banked
  9542  002DE4  51BC               	movf	___fladd@grs& (0+255),w,b
  9543  002DE6  0100               	movlb	0	; () banked
  9544  002DE8  A4D8               	btfss	status,2,c
  9545  002DEA  D025               	goto	l6319
  9546                           
  9547                           ; BSR set to: 0
  9548  002DEC  0E00               	movlw	0
  9549  002DEE  0100               	movlb	0	; () banked
  9550  002DF0  6FA9               	movwf	?___fladd& (0+255),b
  9551  002DF2  0E00               	movlw	0
  9552  002DF4  6FAA               	movwf	(?___fladd+1)& (0+255),b
  9553  002DF6  0E00               	movlw	0
  9554  002DF8  6FAB               	movwf	(?___fladd+2)& (0+255),b
  9555  002DFA  0E00               	movlw	0
  9556  002DFC  6FAC               	movwf	(?___fladd+3)& (0+255),b
  9557                           
  9558                           ; BSR set to: 0
  9559  002DFE  0012               	return	
  9560  002E00                     l6303:
  9561                           
  9562                           ; BSR set to: 0
  9563  002E00  0100               	movlb	0	; () banked
  9564  002E02  90D8               	bcf	status,0,c
  9565  002E04  37A9               	rlcf	___fladd@b& (0+255),f,b
  9566  002E06  37AA               	rlcf	(___fladd@b+1)& (0+255),f,b
  9567  002E08  37AB               	rlcf	(___fladd@b+2)& (0+255),f,b
  9568  002E0A  37AC               	rlcf	(___fladd@b+3)& (0+255),f,b
  9569                           
  9570                           ; BSR set to: 0
  9571  002E0C  0100               	movlb	0	; () banked
  9572  002E0E  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9573  002E10  D002               	goto	l6309
  9574                           
  9575                           ; BSR set to: 0
  9576  002E12  0100               	movlb	0	; () banked
  9577  002E14  81A9               	bsf	___fladd@b& (0+255),0,b
  9578  002E16                     l6309:
  9579                           
  9580                           ; BSR set to: 0
  9581  002E16  0100               	movlb	0	; () banked
  9582  002E18  A1BC               	btfss	___fladd@grs& (0+255),0,b
  9583  002E1A  D003               	goto	l6313
  9584                           
  9585                           ; BSR set to: 0
  9586  002E1C  80D8               	bsf	status,0,c
  9587  002E1E  0100               	movlb	0	; () banked
  9588  002E20  D002               	goto	L5
  9589  002E22                     l6313:
  9590                           
  9591                           ; BSR set to: 0
  9592  002E22  0100               	movlb	0	; () banked
  9593  002E24  90D8               	bcf	status,0,c
  9594  002E26                     L5:
  9595  002E26  37BC               	rlcf	___fladd@grs& (0+255),f,b
  9596                           
  9597                           ; BSR set to: 0
  9598                           
  9599                           ; BSR set to: 0
  9600  002E28  0100               	movlb	0	; () banked
  9601  002E2A  51BB               	movf	___fladd@bexp& (0+255),w,b
  9602  002E2C  0100               	movlb	0	; () banked
  9603  002E2E  B4D8               	btfsc	status,2,c
  9604  002E30  D002               	goto	l6319
  9605                           
  9606                           ; BSR set to: 0
  9607  002E32  0100               	movlb	0	; () banked
  9608  002E34  07BB               	decf	___fladd@bexp& (0+255),f,b
  9609  002E36                     l6319:
  9610                           
  9611                           ; BSR set to: 0
  9612  002E36  0100               	movlb	0	; () banked
  9613  002E38  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
  9614  002E3A  D7E2               	goto	l6303
  9615  002E3C                     l6321:
  9616                           
  9617                           ; BSR set to: 0
  9618  002E3C  0E00               	movlw	0
  9619  002E3E  0100               	movlb	0	; () banked
  9620  002E40  6FBA               	movwf	___fladd@aexp& (0+255),b
  9621                           
  9622                           ; BSR set to: 0
  9623  002E42  0100               	movlb	0	; () banked
  9624  002E44  AFBC               	btfss	___fladd@grs& (0+255),7,b
  9625  002E46  D00D               	goto	l1356
  9626                           
  9627                           ; BSR set to: 0
  9628  002E48  C0BC  F0B1         	movff	___fladd@grs,??___fladd
  9629  002E4C  0E7F               	movlw	127
  9630  002E4E  0100               	movlb	0	; () banked
  9631  002E50  17B1               	andwf	??___fladd& (0+255),f,b
  9632  002E52  A4D8               	btfss	status,2,c
  9633  002E54  D003               	goto	l6329
  9634                           
  9635                           ; BSR set to: 0
  9636                           
  9637                           ; BSR set to: 0
  9638  002E56  0100               	movlb	0	; () banked
  9639  002E58  A1A9               	btfss	___fladd@b& (0+255),0,b
  9640  002E5A  D003               	goto	l1356
  9641  002E5C                     l6329:
  9642                           
  9643                           ; BSR set to: 0
  9644  002E5C  0E01               	movlw	1
  9645  002E5E  0100               	movlb	0	; () banked
  9646  002E60  6FBA               	movwf	___fladd@aexp& (0+255),b
  9647  002E62                     l1356:
  9648                           
  9649                           ; BSR set to: 0
  9650  002E62  0100               	movlb	0	; () banked
  9651  002E64  51BA               	movf	___fladd@aexp& (0+255),w,b
  9652  002E66  0100               	movlb	0	; () banked
  9653  002E68  B4D8               	btfsc	status,2,c
  9654  002E6A  D026               	goto	l6339
  9655                           
  9656                           ; BSR set to: 0
  9657  002E6C  0E01               	movlw	1
  9658  002E6E  0100               	movlb	0	; () banked
  9659  002E70  27A9               	addwf	___fladd@b& (0+255),f,b
  9660  002E72  0E00               	movlw	0
  9661  002E74  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
  9662  002E76  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
  9663  002E78  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
  9664                           
  9665                           ; BSR set to: 0
  9666  002E7A  0100               	movlb	0	; () banked
  9667  002E7C  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
  9668  002E7E  D01C               	goto	l6339
  9669                           
  9670                           ; BSR set to: 0
  9671  002E80  C0A9  F0B1         	movff	___fladd@b,??___fladd
  9672  002E84  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
  9673  002E88  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
  9674  002E8C  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
  9675  002E90  0100               	movlb	0	; () banked
  9676  002E92  35B4               	rlcf	(??___fladd+3)& (0+255),w,b
  9677  002E94  33B4               	rrcf	(??___fladd+3)& (0+255),f,b
  9678  002E96  33B3               	rrcf	(??___fladd+2)& (0+255),f,b
  9679  002E98  33B2               	rrcf	(??___fladd+1)& (0+255),f,b
  9680  002E9A  33B1               	rrcf	??___fladd& (0+255),f,b
  9681  002E9C  C0B1  F0A9         	movff	??___fladd,___fladd@b
  9682  002EA0  C0B2  F0AA         	movff	??___fladd+1,___fladd@b+1
  9683  002EA4  C0B3  F0AB         	movff	??___fladd+2,___fladd@b+2
  9684  002EA8  C0B4  F0AC         	movff	??___fladd+3,___fladd@b+3
  9685  002EAC  0100               	movlb	0	; () banked
  9686  002EAE  29BB               	incf	___fladd@bexp& (0+255),w,b
  9687  002EB0  B4D8               	btfsc	status,2,c
  9688  002EB2  D002               	goto	l6339
  9689                           
  9690                           ; BSR set to: 0
  9691  002EB4  0100               	movlb	0	; () banked
  9692  002EB6  2BBB               	incf	___fladd@bexp& (0+255),f,b
  9693  002EB8                     l6339:
  9694                           
  9695                           ; BSR set to: 0
  9696  002EB8  0100               	movlb	0	; () banked
  9697  002EBA  29BB               	incf	___fladd@bexp& (0+255),w,b
  9698  002EBC  B4D8               	btfsc	status,2,c
  9699  002EBE  D005               	goto	l6343
  9700                           
  9701                           ; BSR set to: 0
  9702  002EC0  0100               	movlb	0	; () banked
  9703  002EC2  51BB               	movf	___fladd@bexp& (0+255),w,b
  9704  002EC4  0100               	movlb	0	; () banked
  9705  002EC6  A4D8               	btfss	status,2,c
  9706  002EC8  D011               	goto	l6347
  9707  002ECA                     l6343:
  9708                           
  9709                           ; BSR set to: 0
  9710  002ECA  0E00               	movlw	0
  9711  002ECC  0100               	movlb	0	; () banked
  9712  002ECE  6FA9               	movwf	___fladd@b& (0+255),b
  9713  002ED0  0E00               	movlw	0
  9714  002ED2  6FAA               	movwf	(___fladd@b+1)& (0+255),b
  9715  002ED4  0E00               	movlw	0
  9716  002ED6  6FAB               	movwf	(___fladd@b+2)& (0+255),b
  9717  002ED8  0E00               	movlw	0
  9718  002EDA  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9719  002EDC  0100               	movlb	0	; () banked
  9720  002EDE  51BB               	movf	___fladd@bexp& (0+255),w,b
  9721  002EE0  0100               	movlb	0	; () banked
  9722  002EE2  A4D8               	btfss	status,2,c
  9723  002EE4  D003               	goto	l6347
  9724                           
  9725                           ; BSR set to: 0
  9726  002EE6  0E00               	movlw	0
  9727  002EE8  0100               	movlb	0	; () banked
  9728  002EEA  6FB9               	movwf	___fladd@signs& (0+255),b
  9729  002EEC                     l6347:
  9730                           
  9731                           ; BSR set to: 0
  9732  002EEC  0100               	movlb	0	; () banked
  9733  002EEE  A1BB               	btfss	___fladd@bexp& (0+255),0,b
  9734  002EF0  D003               	goto	l6351
  9735                           
  9736                           ; BSR set to: 0
  9737  002EF2  0100               	movlb	0	; () banked
  9738  002EF4  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
  9739  002EF6  D002               	goto	l6353
  9740  002EF8                     l6351:
  9741                           
  9742                           ; BSR set to: 0
  9743  002EF8  0100               	movlb	0	; () banked
  9744  002EFA  9FAB               	bcf	(___fladd@b+2)& (0+255),7,b
  9745  002EFC                     l6353:
  9746                           
  9747                           ; BSR set to: 0
  9748  002EFC  0100               	movlb	0	; () banked
  9749  002EFE  90D8               	bcf	status,0,c
  9750  002F00  31BB               	rrcf	___fladd@bexp& (0+255),w,b
  9751  002F02  0100               	movlb	0	; () banked
  9752  002F04  6FAC               	movwf	(___fladd@b+3)& (0+255),b
  9753                           
  9754                           ; BSR set to: 0
  9755  002F06  0100               	movlb	0	; () banked
  9756  002F08  AFB9               	btfss	___fladd@signs& (0+255),7,b
  9757  002F0A  D002               	goto	l6359
  9758                           
  9759                           ; BSR set to: 0
  9760  002F0C  0100               	movlb	0	; () banked
  9761  002F0E  8FAC               	bsf	(___fladd@b+3)& (0+255),7,b
  9762  002F10                     l6359:
  9763                           
  9764                           ; BSR set to: 0
  9765  002F10  C0A9  F0A9         	movff	___fladd@b,?___fladd
  9766  002F14  C0AA  F0AA         	movff	___fladd@b+1,?___fladd+1
  9767  002F18  C0AB  F0AB         	movff	___fladd@b+2,?___fladd+2
  9768  002F1C  C0AC  F0AC         	movff	___fladd@b+3,?___fladd+3
  9769  002F20  0012               	return	
  9770  002F22                     __end_of___fladd:
  9771                           	opt stack 0
  9772                           tblptru	equ	0xFF8
  9773                           tblptrh	equ	0xFF7
  9774                           tblptrl	equ	0xFF6
  9775                           tablat	equ	0xFF5
  9776                           prodh	equ	0xFF4
  9777                           prodl	equ	0xFF3
  9778                           postinc0	equ	0xFEE
  9779                           wreg	equ	0xFE8
  9780                           postdec1	equ	0xFE5
  9781                           fsr1l	equ	0xFE1
  9782                           indf2	equ	0xFDF
  9783                           postinc2	equ	0xFDE
  9784                           postdec2	equ	0xFDD
  9785                           fsr2h	equ	0xFDA
  9786                           fsr2l	equ	0xFD9
  9787                           status	equ	0xFD8
  9788                           
  9789 ;; *************** function ___flge *****************
  9790 ;; Defined at:
  9791 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\flge.c"
  9792 ;; Parameters:    Size  Location     Type
  9793 ;;  ff1             4  101[BANK0 ] unsigned char 
  9794 ;;  ff2             4  105[BANK0 ] unsigned char 
  9795 ;; Auto vars:     Size  Location     Type
  9796 ;;		None
  9797 ;; Return value:  Size  Location     Type
  9798 ;;		None               void
  9799 ;; Registers used:
  9800 ;;		wreg, status,2, status,0
  9801 ;; Tracked objects:
  9802 ;;		On entry : 0/0
  9803 ;;		On exit  : 0/0
  9804 ;;		Unchanged: 0/0
  9805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9806 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9808 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9809 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9810 ;;Total ram usage:       12 bytes
  9811 ;; Hardware stack levels used:    1
  9812 ;; Hardware stack levels required when called:    4
  9813 ;; This function calls:
  9814 ;;		Nothing
  9815 ;; This function is called by:
  9816 ;;		_parallelo
  9817 ;;		_asin
  9818 ;;		_atan
  9819 ;;		_cos
  9820 ;;		_sin
  9821 ;;		_floor
  9822 ;; This function uses a non-reentrant model
  9823 ;;
  9824                           
  9825                           	psect	text24
  9826  0053A6                     __ptext24:
  9827                           	opt stack 0
  9828  0053A6                     ___flge:
  9829                           	opt stack 22
  9830                           
  9831                           ; BSR set to: 0
  9832                           ;incstack = 0
  9833  0053A6  0E00               	movlw	0
  9834  0053A8  0100               	movlb	0	; () banked
  9835  0053AA  15C5               	andwf	___flge@ff1& (0+255),w,b
  9836  0053AC  0100               	movlb	0	; () banked
  9837  0053AE  6FCD               	movwf	??___flge& (0+255),b
  9838  0053B0  0E00               	movlw	0
  9839  0053B2  0100               	movlb	0	; () banked
  9840  0053B4  15C6               	andwf	(___flge@ff1+1)& (0+255),w,b
  9841  0053B6  0100               	movlb	0	; () banked
  9842  0053B8  6FCE               	movwf	(??___flge+1)& (0+255),b
  9843  0053BA  0E80               	movlw	128
  9844  0053BC  0100               	movlb	0	; () banked
  9845  0053BE  15C7               	andwf	(___flge@ff1+2)& (0+255),w,b
  9846  0053C0  0100               	movlb	0	; () banked
  9847  0053C2  6FCF               	movwf	(??___flge+2)& (0+255),b
  9848  0053C4  0E7F               	movlw	127
  9849  0053C6  0100               	movlb	0	; () banked
  9850  0053C8  15C8               	andwf	(___flge@ff1+3)& (0+255),w,b
  9851  0053CA  0100               	movlb	0	; () banked
  9852  0053CC  6FD0               	movwf	(??___flge+3)& (0+255),b
  9853  0053CE  0100               	movlb	0	; () banked
  9854  0053D0  51CD               	movf	??___flge& (0+255),w,b
  9855  0053D2  0100               	movlb	0	; () banked
  9856  0053D4  11CE               	iorwf	(??___flge+1)& (0+255),w,b
  9857  0053D6  0100               	movlb	0	; () banked
  9858  0053D8  11CF               	iorwf	(??___flge+2)& (0+255),w,b
  9859  0053DA  0100               	movlb	0	; () banked
  9860  0053DC  11D0               	iorwf	(??___flge+3)& (0+255),w,b
  9861  0053DE  A4D8               	btfss	status,2,c
  9862  0053E0  D009               	goto	l6497
  9863                           
  9864                           ; BSR set to: 0
  9865  0053E2  0E00               	movlw	0
  9866  0053E4  0100               	movlb	0	; () banked
  9867  0053E6  6FC5               	movwf	___flge@ff1& (0+255),b
  9868  0053E8  0E00               	movlw	0
  9869  0053EA  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  9870  0053EC  0E00               	movlw	0
  9871  0053EE  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  9872  0053F0  0E00               	movlw	0
  9873  0053F2  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  9874  0053F4                     l6497:
  9875                           
  9876                           ; BSR set to: 0
  9877  0053F4  0E00               	movlw	0
  9878  0053F6  0100               	movlb	0	; () banked
  9879  0053F8  15C9               	andwf	___flge@ff2& (0+255),w,b
  9880  0053FA  0100               	movlb	0	; () banked
  9881  0053FC  6FCD               	movwf	??___flge& (0+255),b
  9882  0053FE  0E00               	movlw	0
  9883  005400  0100               	movlb	0	; () banked
  9884  005402  15CA               	andwf	(___flge@ff2+1)& (0+255),w,b
  9885  005404  0100               	movlb	0	; () banked
  9886  005406  6FCE               	movwf	(??___flge+1)& (0+255),b
  9887  005408  0E80               	movlw	128
  9888  00540A  0100               	movlb	0	; () banked
  9889  00540C  15CB               	andwf	(___flge@ff2+2)& (0+255),w,b
  9890  00540E  0100               	movlb	0	; () banked
  9891  005410  6FCF               	movwf	(??___flge+2)& (0+255),b
  9892  005412  0E7F               	movlw	127
  9893  005414  0100               	movlb	0	; () banked
  9894  005416  15CC               	andwf	(___flge@ff2+3)& (0+255),w,b
  9895  005418  0100               	movlb	0	; () banked
  9896  00541A  6FD0               	movwf	(??___flge+3)& (0+255),b
  9897  00541C  0100               	movlb	0	; () banked
  9898  00541E  51CD               	movf	??___flge& (0+255),w,b
  9899  005420  0100               	movlb	0	; () banked
  9900  005422  11CE               	iorwf	(??___flge+1)& (0+255),w,b
  9901  005424  0100               	movlb	0	; () banked
  9902  005426  11CF               	iorwf	(??___flge+2)& (0+255),w,b
  9903  005428  0100               	movlb	0	; () banked
  9904  00542A  11D0               	iorwf	(??___flge+3)& (0+255),w,b
  9905  00542C  A4D8               	btfss	status,2,c
  9906  00542E  D009               	goto	l6501
  9907                           
  9908                           ; BSR set to: 0
  9909  005430  0E00               	movlw	0
  9910  005432  0100               	movlb	0	; () banked
  9911  005434  6FC9               	movwf	___flge@ff2& (0+255),b
  9912  005436  0E00               	movlw	0
  9913  005438  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  9914  00543A  0E00               	movlw	0
  9915  00543C  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  9916  00543E  0E00               	movlw	0
  9917  005440  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
  9918  005442                     l6501:
  9919                           
  9920                           ; BSR set to: 0
  9921  005442  0100               	movlb	0	; () banked
  9922  005444  AFC8               	btfss	(___flge@ff1+3)& (0+255),7,b
  9923  005446  D026               	goto	l6505
  9924                           
  9925                           ; BSR set to: 0
  9926  005448  C0C5  F0CD         	movff	___flge@ff1,??___flge
  9927  00544C  C0C6  F0CE         	movff	___flge@ff1+1,??___flge+1
  9928  005450  C0C7  F0CF         	movff	___flge@ff1+2,??___flge+2
  9929  005454  C0C8  F0D0         	movff	___flge@ff1+3,??___flge+3
  9930  005458  0100               	movlb	0	; () banked
  9931  00545A  1FCD               	comf	??___flge& (0+255),f,b
  9932  00545C  1FCE               	comf	(??___flge+1)& (0+255),f,b
  9933  00545E  1FCF               	comf	(??___flge+2)& (0+255),f,b
  9934  005460  1FD0               	comf	(??___flge+3)& (0+255),f,b
  9935  005462  2BCD               	incf	??___flge& (0+255),f,b
  9936  005464  0E00               	movlw	0
  9937  005466  23CE               	addwfc	(??___flge+1)& (0+255),f,b
  9938  005468  23CF               	addwfc	(??___flge+2)& (0+255),f,b
  9939  00546A  23D0               	addwfc	(??___flge+3)& (0+255),f,b
  9940  00546C  0E00               	movlw	0
  9941  00546E  0100               	movlb	0	; () banked
  9942  005470  25CD               	addwf	??___flge& (0+255),w,b
  9943  005472  0100               	movlb	0	; () banked
  9944  005474  6FC5               	movwf	___flge@ff1& (0+255),b
  9945  005476  0E00               	movlw	0
  9946  005478  0100               	movlb	0	; () banked
  9947  00547A  21CE               	addwfc	(??___flge+1)& (0+255),w,b
  9948  00547C  0100               	movlb	0	; () banked
  9949  00547E  6FC6               	movwf	(___flge@ff1+1)& (0+255),b
  9950  005480  0E00               	movlw	0
  9951  005482  0100               	movlb	0	; () banked
  9952  005484  21CF               	addwfc	(??___flge+2)& (0+255),w,b
  9953  005486  0100               	movlb	0	; () banked
  9954  005488  6FC7               	movwf	(___flge@ff1+2)& (0+255),b
  9955  00548A  0E80               	movlw	128
  9956  00548C  0100               	movlb	0	; () banked
  9957  00548E  21D0               	addwfc	(??___flge+3)& (0+255),w,b
  9958  005490  0100               	movlb	0	; () banked
  9959  005492  6FC8               	movwf	(___flge@ff1+3)& (0+255),b
  9960  005494                     l6505:
  9961                           
  9962                           ; BSR set to: 0
  9963  005494  0100               	movlb	0	; () banked
  9964  005496  AFCC               	btfss	(___flge@ff2+3)& (0+255),7,b
  9965  005498  D026               	goto	l1078
  9966                           
  9967                           ; BSR set to: 0
  9968  00549A  C0C9  F0CD         	movff	___flge@ff2,??___flge
  9969  00549E  C0CA  F0CE         	movff	___flge@ff2+1,??___flge+1
  9970  0054A2  C0CB  F0CF         	movff	___flge@ff2+2,??___flge+2
  9971  0054A6  C0CC  F0D0         	movff	___flge@ff2+3,??___flge+3
  9972  0054AA  0100               	movlb	0	; () banked
  9973  0054AC  1FCD               	comf	??___flge& (0+255),f,b
  9974  0054AE  1FCE               	comf	(??___flge+1)& (0+255),f,b
  9975  0054B0  1FCF               	comf	(??___flge+2)& (0+255),f,b
  9976  0054B2  1FD0               	comf	(??___flge+3)& (0+255),f,b
  9977  0054B4  2BCD               	incf	??___flge& (0+255),f,b
  9978  0054B6  0E00               	movlw	0
  9979  0054B8  23CE               	addwfc	(??___flge+1)& (0+255),f,b
  9980  0054BA  23CF               	addwfc	(??___flge+2)& (0+255),f,b
  9981  0054BC  23D0               	addwfc	(??___flge+3)& (0+255),f,b
  9982  0054BE  0E00               	movlw	0
  9983  0054C0  0100               	movlb	0	; () banked
  9984  0054C2  25CD               	addwf	??___flge& (0+255),w,b
  9985  0054C4  0100               	movlb	0	; () banked
  9986  0054C6  6FC9               	movwf	___flge@ff2& (0+255),b
  9987  0054C8  0E00               	movlw	0
  9988  0054CA  0100               	movlb	0	; () banked
  9989  0054CC  21CE               	addwfc	(??___flge+1)& (0+255),w,b
  9990  0054CE  0100               	movlb	0	; () banked
  9991  0054D0  6FCA               	movwf	(___flge@ff2+1)& (0+255),b
  9992  0054D2  0E00               	movlw	0
  9993  0054D4  0100               	movlb	0	; () banked
  9994  0054D6  21CF               	addwfc	(??___flge+2)& (0+255),w,b
  9995  0054D8  0100               	movlb	0	; () banked
  9996  0054DA  6FCB               	movwf	(___flge@ff2+2)& (0+255),b
  9997  0054DC  0E80               	movlw	128
  9998  0054DE  0100               	movlb	0	; () banked
  9999  0054E0  21D0               	addwfc	(??___flge+3)& (0+255),w,b
 10000  0054E2  0100               	movlb	0	; () banked
 10001  0054E4  6FCC               	movwf	(___flge@ff2+3)& (0+255),b
 10002  0054E6                     l1078:
 10003                           
 10004                           ; BSR set to: 0
 10005  0054E6  0E00               	movlw	0
 10006  0054E8  0100               	movlb	0	; () banked
 10007  0054EA  1BC5               	xorwf	___flge@ff1& (0+255),f,b
 10008  0054EC  0E00               	movlw	0
 10009  0054EE  1BC6               	xorwf	(___flge@ff1+1)& (0+255),f,b
 10010  0054F0  0E00               	movlw	0
 10011  0054F2  1BC7               	xorwf	(___flge@ff1+2)& (0+255),f,b
 10012  0054F4  0E80               	movlw	128
 10013  0054F6  1BC8               	xorwf	(___flge@ff1+3)& (0+255),f,b
 10014  0054F8  0E00               	movlw	0
 10015  0054FA  0100               	movlb	0	; () banked
 10016  0054FC  1BC9               	xorwf	___flge@ff2& (0+255),f,b
 10017  0054FE  0E00               	movlw	0
 10018  005500  1BCA               	xorwf	(___flge@ff2+1)& (0+255),f,b
 10019  005502  0E00               	movlw	0
 10020  005504  1BCB               	xorwf	(___flge@ff2+2)& (0+255),f,b
 10021  005506  0E80               	movlw	128
 10022  005508  1BCC               	xorwf	(___flge@ff2+3)& (0+255),f,b
 10023  00550A  0100               	movlb	0	; () banked
 10024  00550C  51C9               	movf	___flge@ff2& (0+255),w,b
 10025  00550E  0100               	movlb	0	; () banked
 10026  005510  5DC5               	subwf	___flge@ff1& (0+255),w,b
 10027  005512  0100               	movlb	0	; () banked
 10028  005514  51CA               	movf	(___flge@ff2+1)& (0+255),w,b
 10029  005516  0100               	movlb	0	; () banked
 10030  005518  59C6               	subwfb	(___flge@ff1+1)& (0+255),w,b
 10031  00551A  0100               	movlb	0	; () banked
 10032  00551C  51CB               	movf	(___flge@ff2+2)& (0+255),w,b
 10033  00551E  0100               	movlb	0	; () banked
 10034  005520  59C7               	subwfb	(___flge@ff1+2)& (0+255),w,b
 10035  005522  0100               	movlb	0	; () banked
 10036  005524  51CC               	movf	(___flge@ff2+3)& (0+255),w,b
 10037  005526  0100               	movlb	0	; () banked
 10038  005528  59C8               	subwfb	(___flge@ff1+3)& (0+255),w,b
 10039  00552A  B0D8               	btfsc	status,0,c
 10040  00552C  D002               	goto	l6511
 10041                           
 10042                           ; BSR set to: 0
 10043  00552E  90D8               	bcf	status,0,c
 10044  005530  0012               	return	
 10045  005532                     l6511:
 10046                           
 10047                           ; BSR set to: 0
 10048  005532  80D8               	bsf	status,0,c
 10049                           
 10050                           ; BSR set to: 0
 10051  005534  0012               	return	
 10052  005536                     __end_of___flge:
 10053                           	opt stack 0
 10054                           tblptru	equ	0xFF8
 10055                           tblptrh	equ	0xFF7
 10056                           tblptrl	equ	0xFF6
 10057                           tablat	equ	0xFF5
 10058                           prodh	equ	0xFF4
 10059                           prodl	equ	0xFF3
 10060                           postinc0	equ	0xFEE
 10061                           wreg	equ	0xFE8
 10062                           postdec1	equ	0xFE5
 10063                           fsr1l	equ	0xFE1
 10064                           indf2	equ	0xFDF
 10065                           postinc2	equ	0xFDE
 10066                           postdec2	equ	0xFDD
 10067                           fsr2h	equ	0xFDA
 10068                           fsr2l	equ	0xFD9
 10069                           status	equ	0xFD8
 10070                           
 10071 ;; *************** function ___fldiv *****************
 10072 ;; Defined at:
 10073 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\sprcdiv.c"
 10074 ;; Parameters:    Size  Location     Type
 10075 ;;  b               4   23[BANK0 ] unsigned char 
 10076 ;;  a               4   27[BANK0 ] unsigned char 
 10077 ;; Auto vars:     Size  Location     Type
 10078 ;;  grs             4   42[BANK0 ] unsigned long 
 10079 ;;  rem             4   36[BANK0 ] unsigned long 
 10080 ;;  new_exp         2   40[BANK0 ] int 
 10081 ;;  aexp            1   47[BANK0 ] unsigned char 
 10082 ;;  bexp            1   46[BANK0 ] unsigned char 
 10083 ;;  sign            1   35[BANK0 ] unsigned char 
 10084 ;; Return value:  Size  Location     Type
 10085 ;;                  4   23[BANK0 ] unsigned char 
 10086 ;; Registers used:
 10087 ;;		wreg, status,2, status,0
 10088 ;; Tracked objects:
 10089 ;;		On entry : 0/0
 10090 ;;		On exit  : 0/0
 10091 ;;		Unchanged: 0/0
 10092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10093 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10094 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10095 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10096 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10097 ;;Total ram usage:       25 bytes
 10098 ;; Hardware stack levels used:    1
 10099 ;; Hardware stack levels required when called:    4
 10100 ;; This function calls:
 10101 ;;		Nothing
 10102 ;; This function is called by:
 10103 ;;		_parallelo
 10104 ;;		_matematica
 10105 ;;		_asin
 10106 ;;		_atan
 10107 ;;		_sin
 10108 ;; This function uses a non-reentrant model
 10109 ;;
 10110                           
 10111                           	psect	text25
 10112  003BF6                     __ptext25:
 10113                           	opt stack 0
 10114  003BF6                     ___fldiv:
 10115                           	opt stack 22
 10116                           
 10117                           ; BSR set to: 0
 10118                           ;incstack = 0
 10119  003BF6  0100               	movlb	0	; () banked
 10120  003BF8  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10121  003BFA  0B80               	andlw	128
 10122  003BFC  0100               	movlb	0	; () banked
 10123  003BFE  6F83               	movwf	___fldiv@sign& (0+255),b
 10124  003C00  0100               	movlb	0	; () banked
 10125  003C02  517A               	movf	(___fldiv@b+3)& (0+255),w,b
 10126  003C04  257A               	addwf	(___fldiv@b+3)& (0+255),w,b
 10127  003C06  0100               	movlb	0	; () banked
 10128  003C08  6F8E               	movwf	___fldiv@bexp& (0+255),b
 10129                           
 10130                           ; BSR set to: 0
 10131  003C0A  0100               	movlb	0	; () banked
 10132  003C0C  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10133  003C0E  D002               	goto	l6631
 10134                           
 10135                           ; BSR set to: 0
 10136  003C10  0100               	movlb	0	; () banked
 10137  003C12  818E               	bsf	___fldiv@bexp& (0+255),0,b
 10138  003C14                     l6631:
 10139                           
 10140                           ; BSR set to: 0
 10141  003C14  0100               	movlb	0	; () banked
 10142  003C16  518E               	movf	___fldiv@bexp& (0+255),w,b
 10143  003C18  0100               	movlb	0	; () banked
 10144  003C1A  B4D8               	btfsc	status,2,c
 10145  003C1C  D012               	goto	l6641
 10146                           
 10147                           ; BSR set to: 0
 10148  003C1E  0100               	movlb	0	; () banked
 10149  003C20  298E               	incf	___fldiv@bexp& (0+255),w,b
 10150  003C22  A4D8               	btfss	status,2,c
 10151  003C24  D009               	goto	l6637
 10152                           
 10153                           ; BSR set to: 0
 10154  003C26  0E00               	movlw	0
 10155  003C28  0100               	movlb	0	; () banked
 10156  003C2A  6F77               	movwf	___fldiv@b& (0+255),b
 10157  003C2C  0E00               	movlw	0
 10158  003C2E  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10159  003C30  0E00               	movlw	0
 10160  003C32  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10161  003C34  0E00               	movlw	0
 10162  003C36  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10163  003C38                     l6637:
 10164                           
 10165                           ; BSR set to: 0
 10166  003C38  0100               	movlb	0	; () banked
 10167  003C3A  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10168                           
 10169                           ; BSR set to: 0
 10170  003C3C  0E00               	movlw	0
 10171  003C3E  0100               	movlb	0	; () banked
 10172  003C40  D008               	goto	L6
 10173  003C42                     l6641:
 10174                           
 10175                           ; BSR set to: 0
 10176  003C42  0E00               	movlw	0
 10177  003C44  0100               	movlb	0	; () banked
 10178  003C46  6F77               	movwf	___fldiv@b& (0+255),b
 10179  003C48  0E00               	movlw	0
 10180  003C4A  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10181  003C4C  0E00               	movlw	0
 10182  003C4E  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10183  003C50  0E00               	movlw	0
 10184  003C52                     L6:
 10185  003C52  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10186                           
 10187                           ; BSR set to: 0
 10188                           
 10189                           ; BSR set to: 0
 10190  003C54  0100               	movlb	0	; () banked
 10191  003C56  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10192  003C58  0B80               	andlw	128
 10193  003C5A  0100               	movlb	0	; () banked
 10194  003C5C  1B83               	xorwf	___fldiv@sign& (0+255),f,b
 10195                           
 10196                           ; BSR set to: 0
 10197  003C5E  0100               	movlb	0	; () banked
 10198  003C60  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10199  003C62  257E               	addwf	(___fldiv@a+3)& (0+255),w,b
 10200  003C64  0100               	movlb	0	; () banked
 10201  003C66  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10202                           
 10203                           ; BSR set to: 0
 10204  003C68  0100               	movlb	0	; () banked
 10205  003C6A  AF7D               	btfss	(___fldiv@a+2)& (0+255),7,b
 10206  003C6C  D002               	goto	l6651
 10207                           
 10208                           ; BSR set to: 0
 10209  003C6E  0100               	movlb	0	; () banked
 10210  003C70  818F               	bsf	___fldiv@aexp& (0+255),0,b
 10211  003C72                     l6651:
 10212                           
 10213                           ; BSR set to: 0
 10214  003C72  0100               	movlb	0	; () banked
 10215  003C74  518F               	movf	___fldiv@aexp& (0+255),w,b
 10216  003C76  0100               	movlb	0	; () banked
 10217  003C78  B4D8               	btfsc	status,2,c
 10218  003C7A  D012               	goto	l6661
 10219                           
 10220                           ; BSR set to: 0
 10221  003C7C  0100               	movlb	0	; () banked
 10222  003C7E  298F               	incf	___fldiv@aexp& (0+255),w,b
 10223  003C80  A4D8               	btfss	status,2,c
 10224  003C82  D009               	goto	l6657
 10225                           
 10226                           ; BSR set to: 0
 10227  003C84  0E00               	movlw	0
 10228  003C86  0100               	movlb	0	; () banked
 10229  003C88  6F7B               	movwf	___fldiv@a& (0+255),b
 10230  003C8A  0E00               	movlw	0
 10231  003C8C  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10232  003C8E  0E00               	movlw	0
 10233  003C90  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10234  003C92  0E00               	movlw	0
 10235  003C94  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10236  003C96                     l6657:
 10237                           
 10238                           ; BSR set to: 0
 10239  003C96  0100               	movlb	0	; () banked
 10240  003C98  8F7D               	bsf	(___fldiv@a+2)& (0+255),7,b
 10241                           
 10242                           ; BSR set to: 0
 10243  003C9A  0E00               	movlw	0
 10244  003C9C  0100               	movlb	0	; () banked
 10245  003C9E  D008               	goto	L7
 10246  003CA0                     l6661:
 10247                           
 10248                           ; BSR set to: 0
 10249  003CA0  0E00               	movlw	0
 10250  003CA2  0100               	movlb	0	; () banked
 10251  003CA4  6F7B               	movwf	___fldiv@a& (0+255),b
 10252  003CA6  0E00               	movlw	0
 10253  003CA8  6F7C               	movwf	(___fldiv@a+1)& (0+255),b
 10254  003CAA  0E00               	movlw	0
 10255  003CAC  6F7D               	movwf	(___fldiv@a+2)& (0+255),b
 10256  003CAE  0E00               	movlw	0
 10257  003CB0                     L7:
 10258  003CB0  6F7E               	movwf	(___fldiv@a+3)& (0+255),b
 10259                           
 10260                           ; BSR set to: 0
 10261                           
 10262                           ; BSR set to: 0
 10263  003CB2  0100               	movlb	0	; () banked
 10264  003CB4  517B               	movf	___fldiv@a& (0+255),w,b
 10265  003CB6  0100               	movlb	0	; () banked
 10266  003CB8  117C               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10267  003CBA  0100               	movlb	0	; () banked
 10268  003CBC  117D               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10269  003CBE  0100               	movlb	0	; () banked
 10270  003CC0  117E               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10271  003CC2  A4D8               	btfss	status,2,c
 10272  003CC4  D017               	goto	l6673
 10273                           
 10274                           ; BSR set to: 0
 10275  003CC6  0E00               	movlw	0
 10276  003CC8  0100               	movlb	0	; () banked
 10277  003CCA  6F77               	movwf	___fldiv@b& (0+255),b
 10278  003CCC  0E00               	movlw	0
 10279  003CCE  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10280  003CD0  0E00               	movlw	0
 10281  003CD2  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10282  003CD4  0E00               	movlw	0
 10283  003CD6  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10284                           
 10285                           ; BSR set to: 0
 10286  003CD8  0100               	movlb	0	; () banked
 10287  003CDA  0E80               	movlw	128
 10288  003CDC  1379               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10289  003CDE  0E7F               	movlw	127
 10290  003CE0  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10291                           
 10292                           ; BSR set to: 0
 10293  003CE2  C077  F077         	movff	___fldiv@b,?___fldiv
 10294  003CE6  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10295  003CEA  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10296  003CEE  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10297                           
 10298                           ; BSR set to: 0
 10299  003CF2  0012               	return	
 10300  003CF4                     l6673:
 10301                           
 10302                           ; BSR set to: 0
 10303  003CF4  0100               	movlb	0	; () banked
 10304  003CF6  518E               	movf	___fldiv@bexp& (0+255),w,b
 10305  003CF8  0100               	movlb	0	; () banked
 10306  003CFA  A4D8               	btfss	status,2,c
 10307  003CFC  D012               	goto	l6681
 10308                           
 10309                           ; BSR set to: 0
 10310  003CFE  0E00               	movlw	0
 10311  003D00  0100               	movlb	0	; () banked
 10312  003D02  6F77               	movwf	___fldiv@b& (0+255),b
 10313  003D04  0E00               	movlw	0
 10314  003D06  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10315  003D08  0E00               	movlw	0
 10316  003D0A  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10317  003D0C  0E00               	movlw	0
 10318  003D0E  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10319                           
 10320                           ; BSR set to: 0
 10321  003D10  C077  F077         	movff	___fldiv@b,?___fldiv
 10322  003D14  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10323  003D18  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10324  003D1C  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10325                           
 10326                           ; BSR set to: 0
 10327  003D20  0012               	return	
 10328  003D22                     l6681:
 10329                           
 10330                           ; BSR set to: 0
 10331  003D22  0100               	movlb	0	; () banked
 10332  003D24  518F               	movf	___fldiv@aexp& (0+255),w,b
 10333  003D26  0100               	movlb	0	; () banked
 10334  003D28  6F7F               	movwf	??___fldiv& (0+255),b
 10335  003D2A  6B80               	clrf	(??___fldiv+1)& (0+255),b
 10336  003D2C  0100               	movlb	0	; () banked
 10337  003D2E  1F7F               	comf	??___fldiv& (0+255),f,b
 10338  003D30  1F80               	comf	(??___fldiv+1)& (0+255),f,b
 10339  003D32  4B7F               	infsnz	??___fldiv& (0+255),f,b
 10340  003D34  2B80               	incf	(??___fldiv+1)& (0+255),f,b
 10341  003D36  0100               	movlb	0	; () banked
 10342  003D38  518E               	movf	___fldiv@bexp& (0+255),w,b
 10343  003D3A  0100               	movlb	0	; () banked
 10344  003D3C  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10345  003D3E  6B82               	clrf	(??___fldiv+3)& (0+255),b
 10346  003D40  0100               	movlb	0	; () banked
 10347  003D42  517F               	movf	??___fldiv& (0+255),w,b
 10348  003D44  0100               	movlb	0	; () banked
 10349  003D46  2781               	addwf	(??___fldiv+2)& (0+255),f,b
 10350  003D48  0100               	movlb	0	; () banked
 10351  003D4A  5180               	movf	(??___fldiv+1)& (0+255),w,b
 10352  003D4C  0100               	movlb	0	; () banked
 10353  003D4E  2382               	addwfc	(??___fldiv+3)& (0+255),f,b
 10354  003D50  0E7F               	movlw	127
 10355  003D52  0100               	movlb	0	; () banked
 10356  003D54  2581               	addwf	(??___fldiv+2)& (0+255),w,b
 10357  003D56  0100               	movlb	0	; () banked
 10358  003D58  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10359  003D5A  0E00               	movlw	0
 10360  003D5C  0100               	movlb	0	; () banked
 10361  003D5E  2182               	addwfc	(??___fldiv+3)& (0+255),w,b
 10362  003D60  0100               	movlb	0	; () banked
 10363  003D62  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10364                           
 10365                           ; BSR set to: 0
 10366  003D64  C077  F084         	movff	___fldiv@b,___fldiv@rem
 10367  003D68  C078  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 10368  003D6C  C079  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 10369  003D70  C07A  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 10370                           
 10371                           ; BSR set to: 0
 10372  003D74  0E00               	movlw	0
 10373  003D76  0100               	movlb	0	; () banked
 10374  003D78  6F77               	movwf	___fldiv@b& (0+255),b
 10375  003D7A  0E00               	movlw	0
 10376  003D7C  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10377  003D7E  0E00               	movlw	0
 10378  003D80  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10379  003D82  0E00               	movlw	0
 10380  003D84  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10381                           
 10382                           ; BSR set to: 0
 10383  003D86  0E00               	movlw	0
 10384  003D88  0100               	movlb	0	; () banked
 10385  003D8A  6F8A               	movwf	___fldiv@grs& (0+255),b
 10386  003D8C  0E00               	movlw	0
 10387  003D8E  6F8B               	movwf	(___fldiv@grs+1)& (0+255),b
 10388  003D90  0E00               	movlw	0
 10389  003D92  6F8C               	movwf	(___fldiv@grs+2)& (0+255),b
 10390  003D94  0E00               	movlw	0
 10391  003D96  6F8D               	movwf	(___fldiv@grs+3)& (0+255),b
 10392                           
 10393                           ; BSR set to: 0
 10394  003D98  0E00               	movlw	0
 10395  003D9A  0100               	movlb	0	; () banked
 10396  003D9C  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10397  003D9E  D042               	goto	l1386
 10398  003DA0                     l6691:
 10399                           
 10400                           ; BSR set to: 0
 10401  003DA0  0100               	movlb	0	; () banked
 10402  003DA2  518F               	movf	___fldiv@aexp& (0+255),w,b
 10403  003DA4  0100               	movlb	0	; () banked
 10404  003DA6  B4D8               	btfsc	status,2,c
 10405  003DA8  D017               	goto	l6699
 10406                           
 10407                           ; BSR set to: 0
 10408  003DAA  0100               	movlb	0	; () banked
 10409  003DAC  90D8               	bcf	status,0,c
 10410  003DAE  3784               	rlcf	___fldiv@rem& (0+255),f,b
 10411  003DB0  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10412  003DB2  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10413  003DB4  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10414  003DB6  0100               	movlb	0	; () banked
 10415  003DB8  90D8               	bcf	status,0,c
 10416  003DBA  3777               	rlcf	___fldiv@b& (0+255),f,b
 10417  003DBC  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10418  003DBE  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10419  003DC0  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10420                           
 10421                           ; BSR set to: 0
 10422  003DC2  0100               	movlb	0	; () banked
 10423  003DC4  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10424  003DC6  D002               	goto	l1389
 10425                           
 10426                           ; BSR set to: 0
 10427  003DC8  0100               	movlb	0	; () banked
 10428  003DCA  8177               	bsf	___fldiv@b& (0+255),0,b
 10429  003DCC                     l1389:
 10430                           
 10431                           ; BSR set to: 0
 10432  003DCC  0100               	movlb	0	; () banked
 10433  003DCE  90D8               	bcf	status,0,c
 10434  003DD0  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10435  003DD2  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10436  003DD4  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10437  003DD6  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10438  003DD8                     l6699:
 10439                           
 10440                           ; BSR set to: 0
 10441  003DD8  0100               	movlb	0	; () banked
 10442  003DDA  517B               	movf	___fldiv@a& (0+255),w,b
 10443  003DDC  0100               	movlb	0	; () banked
 10444  003DDE  5D84               	subwf	___fldiv@rem& (0+255),w,b
 10445  003DE0  0100               	movlb	0	; () banked
 10446  003DE2  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10447  003DE4  0100               	movlb	0	; () banked
 10448  003DE6  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10449  003DE8  0100               	movlb	0	; () banked
 10450  003DEA  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10451  003DEC  0100               	movlb	0	; () banked
 10452  003DEE  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10453  003DF0  0100               	movlb	0	; () banked
 10454  003DF2  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10455  003DF4  0100               	movlb	0	; () banked
 10456  003DF6  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10457  003DF8  A0D8               	btfss	status,0,c
 10458  003DFA  D012               	goto	l6705
 10459                           
 10460                           ; BSR set to: 0
 10461  003DFC  0100               	movlb	0	; () banked
 10462  003DFE  8D8D               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10463                           
 10464                           ; BSR set to: 0
 10465  003E00  0100               	movlb	0	; () banked
 10466  003E02  517B               	movf	___fldiv@a& (0+255),w,b
 10467  003E04  0100               	movlb	0	; () banked
 10468  003E06  5F84               	subwf	___fldiv@rem& (0+255),f,b
 10469  003E08  0100               	movlb	0	; () banked
 10470  003E0A  517C               	movf	(___fldiv@a+1)& (0+255),w,b
 10471  003E0C  0100               	movlb	0	; () banked
 10472  003E0E  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10473  003E10  0100               	movlb	0	; () banked
 10474  003E12  517D               	movf	(___fldiv@a+2)& (0+255),w,b
 10475  003E14  0100               	movlb	0	; () banked
 10476  003E16  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10477  003E18  0100               	movlb	0	; () banked
 10478  003E1A  517E               	movf	(___fldiv@a+3)& (0+255),w,b
 10479  003E1C  0100               	movlb	0	; () banked
 10480  003E1E  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10481  003E20                     l6705:
 10482                           
 10483                           ; BSR set to: 0
 10484  003E20  0100               	movlb	0	; () banked
 10485  003E22  2B8F               	incf	___fldiv@aexp& (0+255),f,b
 10486  003E24                     l1386:
 10487                           
 10488                           ; BSR set to: 0
 10489  003E24  0E19               	movlw	25
 10490  003E26  0100               	movlb	0	; () banked
 10491  003E28  658F               	cpfsgt	___fldiv@aexp& (0+255),b
 10492  003E2A  D7BA               	goto	l6691
 10493                           
 10494                           ; BSR set to: 0
 10495                           
 10496                           ; BSR set to: 0
 10497  003E2C  0100               	movlb	0	; () banked
 10498  003E2E  5184               	movf	___fldiv@rem& (0+255),w,b
 10499  003E30  0100               	movlb	0	; () banked
 10500  003E32  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10501  003E34  0100               	movlb	0	; () banked
 10502  003E36  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10503  003E38  0100               	movlb	0	; () banked
 10504  003E3A  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10505  003E3C  B4D8               	btfsc	status,2,c
 10506  003E3E  D018               	goto	l6717
 10507                           
 10508                           ; BSR set to: 0
 10509  003E40  0100               	movlb	0	; () banked
 10510  003E42  818A               	bsf	___fldiv@grs& (0+255),0,b
 10511                           
 10512                           ; BSR set to: 0
 10513  003E44  D015               	goto	l6717
 10514  003E46                     l6711:
 10515                           
 10516                           ; BSR set to: 0
 10517  003E46  0100               	movlb	0	; () banked
 10518  003E48  90D8               	bcf	status,0,c
 10519  003E4A  3777               	rlcf	___fldiv@b& (0+255),f,b
 10520  003E4C  3778               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10521  003E4E  3779               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10522  003E50  377A               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10523                           
 10524                           ; BSR set to: 0
 10525  003E52  0100               	movlb	0	; () banked
 10526  003E54  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10527  003E56  D002               	goto	l1395
 10528                           
 10529                           ; BSR set to: 0
 10530  003E58  0100               	movlb	0	; () banked
 10531  003E5A  8177               	bsf	___fldiv@b& (0+255),0,b
 10532  003E5C                     l1395:
 10533                           
 10534                           ; BSR set to: 0
 10535  003E5C  0100               	movlb	0	; () banked
 10536  003E5E  90D8               	bcf	status,0,c
 10537  003E60  378A               	rlcf	___fldiv@grs& (0+255),f,b
 10538  003E62  378B               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10539  003E64  378C               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10540  003E66  378D               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10541  003E68  0100               	movlb	0	; () banked
 10542  003E6A  0788               	decf	___fldiv@new_exp& (0+255),f,b
 10543  003E6C  A0D8               	btfss	status,0,c
 10544  003E6E  0789               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10545  003E70                     l6717:
 10546                           
 10547                           ; BSR set to: 0
 10548  003E70  0100               	movlb	0	; () banked
 10549  003E72  AF79               	btfss	(___fldiv@b+2)& (0+255),7,b
 10550  003E74  D7E8               	goto	l6711
 10551                           
 10552                           ; BSR set to: 0
 10553                           
 10554                           ; BSR set to: 0
 10555  003E76  0E00               	movlw	0
 10556  003E78  0100               	movlb	0	; () banked
 10557  003E7A  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10558                           
 10559                           ; BSR set to: 0
 10560  003E7C  0100               	movlb	0	; () banked
 10561  003E7E  AF8D               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10562  003E80  D024               	goto	l1397
 10563                           
 10564                           ; BSR set to: 0
 10565  003E82  0EFF               	movlw	255
 10566  003E84  0100               	movlb	0	; () banked
 10567  003E86  158A               	andwf	___fldiv@grs& (0+255),w,b
 10568  003E88  0100               	movlb	0	; () banked
 10569  003E8A  6F7F               	movwf	??___fldiv& (0+255),b
 10570  003E8C  0EFF               	movlw	255
 10571  003E8E  0100               	movlb	0	; () banked
 10572  003E90  158B               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10573  003E92  0100               	movlb	0	; () banked
 10574  003E94  6F80               	movwf	(??___fldiv+1)& (0+255),b
 10575  003E96  0EFF               	movlw	255
 10576  003E98  0100               	movlb	0	; () banked
 10577  003E9A  158C               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10578  003E9C  0100               	movlb	0	; () banked
 10579  003E9E  6F81               	movwf	(??___fldiv+2)& (0+255),b
 10580  003EA0  0E7F               	movlw	127
 10581  003EA2  0100               	movlb	0	; () banked
 10582  003EA4  158D               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10583  003EA6  0100               	movlb	0	; () banked
 10584  003EA8  6F82               	movwf	(??___fldiv+3)& (0+255),b
 10585  003EAA  0100               	movlb	0	; () banked
 10586  003EAC  517F               	movf	??___fldiv& (0+255),w,b
 10587  003EAE  0100               	movlb	0	; () banked
 10588  003EB0  1180               	iorwf	(??___fldiv+1)& (0+255),w,b
 10589  003EB2  0100               	movlb	0	; () banked
 10590  003EB4  1181               	iorwf	(??___fldiv+2)& (0+255),w,b
 10591  003EB6  0100               	movlb	0	; () banked
 10592  003EB8  1182               	iorwf	(??___fldiv+3)& (0+255),w,b
 10593  003EBA  A4D8               	btfss	status,2,c
 10594  003EBC  D003               	goto	l6727
 10595                           
 10596                           ; BSR set to: 0
 10597                           
 10598                           ; BSR set to: 0
 10599  003EBE  0100               	movlb	0	; () banked
 10600  003EC0  A177               	btfss	___fldiv@b& (0+255),0,b
 10601  003EC2  D003               	goto	l1397
 10602  003EC4                     l6727:
 10603                           
 10604                           ; BSR set to: 0
 10605  003EC4  0E01               	movlw	1
 10606  003EC6  0100               	movlb	0	; () banked
 10607  003EC8  6F8F               	movwf	___fldiv@aexp& (0+255),b
 10608  003ECA                     l1397:
 10609                           
 10610                           ; BSR set to: 0
 10611  003ECA  0100               	movlb	0	; () banked
 10612  003ECC  518F               	movf	___fldiv@aexp& (0+255),w,b
 10613  003ECE  0100               	movlb	0	; () banked
 10614  003ED0  B4D8               	btfsc	status,2,c
 10615  003ED2  D023               	goto	l6737
 10616                           
 10617                           ; BSR set to: 0
 10618  003ED4  0E01               	movlw	1
 10619  003ED6  0100               	movlb	0	; () banked
 10620  003ED8  2777               	addwf	___fldiv@b& (0+255),f,b
 10621  003EDA  0E00               	movlw	0
 10622  003EDC  2378               	addwfc	(___fldiv@b+1)& (0+255),f,b
 10623  003EDE  2379               	addwfc	(___fldiv@b+2)& (0+255),f,b
 10624  003EE0  237A               	addwfc	(___fldiv@b+3)& (0+255),f,b
 10625                           
 10626                           ; BSR set to: 0
 10627  003EE2  0100               	movlb	0	; () banked
 10628  003EE4  A17A               	btfss	(___fldiv@b+3)& (0+255),0,b
 10629  003EE6  D019               	goto	l6737
 10630                           
 10631                           ; BSR set to: 0
 10632  003EE8  C077  F07F         	movff	___fldiv@b,??___fldiv
 10633  003EEC  C078  F080         	movff	___fldiv@b+1,??___fldiv+1
 10634  003EF0  C079  F081         	movff	___fldiv@b+2,??___fldiv+2
 10635  003EF4  C07A  F082         	movff	___fldiv@b+3,??___fldiv+3
 10636  003EF8  0100               	movlb	0	; () banked
 10637  003EFA  3582               	rlcf	(??___fldiv+3)& (0+255),w,b
 10638  003EFC  3382               	rrcf	(??___fldiv+3)& (0+255),f,b
 10639  003EFE  3381               	rrcf	(??___fldiv+2)& (0+255),f,b
 10640  003F00  3380               	rrcf	(??___fldiv+1)& (0+255),f,b
 10641  003F02  337F               	rrcf	??___fldiv& (0+255),f,b
 10642  003F04  C07F  F077         	movff	??___fldiv,___fldiv@b
 10643  003F08  C080  F078         	movff	??___fldiv+1,___fldiv@b+1
 10644  003F0C  C081  F079         	movff	??___fldiv+2,___fldiv@b+2
 10645  003F10  C082  F07A         	movff	??___fldiv+3,___fldiv@b+3
 10646                           
 10647                           ; BSR set to: 0
 10648  003F14  0100               	movlb	0	; () banked
 10649  003F16  4B88               	infsnz	___fldiv@new_exp& (0+255),f,b
 10650  003F18  2B89               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 10651  003F1A                     l6737:
 10652                           
 10653                           ; BSR set to: 0
 10654  003F1A  0100               	movlb	0	; () banked
 10655  003F1C  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10656  003F1E  D014               	goto	l6741
 10657  003F20  0100               	movlb	0	; () banked
 10658  003F22  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10659  003F24  E104               	bnz	u8560
 10660  003F26  0100               	movlb	0	; () banked
 10661  003F28  2988               	incf	___fldiv@new_exp& (0+255),w,b
 10662  003F2A  A0D8               	btfss	status,0,c
 10663  003F2C  D00D               	goto	l6741
 10664  003F2E                     u8560:
 10665                           
 10666                           ; BSR set to: 0
 10667  003F2E  0E00               	movlw	0
 10668  003F30  0100               	movlb	0	; () banked
 10669  003F32  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10670  003F34  6988               	setf	___fldiv@new_exp& (0+255),b
 10671  003F36  0E00               	movlw	0
 10672  003F38  0100               	movlb	0	; () banked
 10673  003F3A  6F77               	movwf	___fldiv@b& (0+255),b
 10674  003F3C  0E00               	movlw	0
 10675  003F3E  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10676  003F40  0E00               	movlw	0
 10677  003F42  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10678  003F44  0E00               	movlw	0
 10679  003F46  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10680  003F48                     l6741:
 10681                           
 10682                           ; BSR set to: 0
 10683  003F48  0100               	movlb	0	; () banked
 10684  003F4A  BF89               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 10685  003F4C  D007               	goto	l6743
 10686  003F4E  0100               	movlb	0	; () banked
 10687  003F50  5189               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 10688  003F52  E115               	bnz	l6745
 10689  003F54  0100               	movlb	0	; () banked
 10690  003F56  0588               	decf	___fldiv@new_exp& (0+255),w,b
 10691  003F58  B0D8               	btfsc	status,0,c
 10692  003F5A  D011               	goto	l6745
 10693  003F5C                     l6743:
 10694                           
 10695                           ; BSR set to: 0
 10696  003F5C  0E00               	movlw	0
 10697  003F5E  0100               	movlb	0	; () banked
 10698  003F60  6F89               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10699  003F62  0E00               	movlw	0
 10700  003F64  6F88               	movwf	___fldiv@new_exp& (0+255),b
 10701  003F66  0E00               	movlw	0
 10702  003F68  0100               	movlb	0	; () banked
 10703  003F6A  6F77               	movwf	___fldiv@b& (0+255),b
 10704  003F6C  0E00               	movlw	0
 10705  003F6E  6F78               	movwf	(___fldiv@b+1)& (0+255),b
 10706  003F70  0E00               	movlw	0
 10707  003F72  6F79               	movwf	(___fldiv@b+2)& (0+255),b
 10708  003F74  0E00               	movlw	0
 10709  003F76  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10710  003F78  0E00               	movlw	0
 10711  003F7A  0100               	movlb	0	; () banked
 10712  003F7C  6F83               	movwf	___fldiv@sign& (0+255),b
 10713  003F7E                     l6745:
 10714                           
 10715                           ; BSR set to: 0
 10716  003F7E  C088  F08E         	movff	___fldiv@new_exp,___fldiv@bexp
 10717                           
 10718                           ; BSR set to: 0
 10719  003F82  0100               	movlb	0	; () banked
 10720  003F84  A18E               	btfss	___fldiv@bexp& (0+255),0,b
 10721  003F86  D003               	goto	l6751
 10722                           
 10723                           ; BSR set to: 0
 10724  003F88  0100               	movlb	0	; () banked
 10725  003F8A  8F79               	bsf	(___fldiv@b+2)& (0+255),7,b
 10726  003F8C  D002               	goto	l6753
 10727  003F8E                     l6751:
 10728                           
 10729                           ; BSR set to: 0
 10730  003F8E  0100               	movlb	0	; () banked
 10731  003F90  9F79               	bcf	(___fldiv@b+2)& (0+255),7,b
 10732  003F92                     l6753:
 10733                           
 10734                           ; BSR set to: 0
 10735  003F92  0100               	movlb	0	; () banked
 10736  003F94  90D8               	bcf	status,0,c
 10737  003F96  318E               	rrcf	___fldiv@bexp& (0+255),w,b
 10738  003F98  0100               	movlb	0	; () banked
 10739  003F9A  6F7A               	movwf	(___fldiv@b+3)& (0+255),b
 10740                           
 10741                           ; BSR set to: 0
 10742  003F9C  0100               	movlb	0	; () banked
 10743  003F9E  5183               	movf	___fldiv@sign& (0+255),w,b
 10744  003FA0  0100               	movlb	0	; () banked
 10745  003FA2  137A               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10746                           
 10747                           ; BSR set to: 0
 10748  003FA4  C077  F077         	movff	___fldiv@b,?___fldiv
 10749  003FA8  C078  F078         	movff	___fldiv@b+1,?___fldiv+1
 10750  003FAC  C079  F079         	movff	___fldiv@b+2,?___fldiv+2
 10751  003FB0  C07A  F07A         	movff	___fldiv@b+3,?___fldiv+3
 10752  003FB4  0012               	return	
 10753  003FB6                     __end_of___fldiv:
 10754                           	opt stack 0
 10755                           tblptru	equ	0xFF8
 10756                           tblptrh	equ	0xFF7
 10757                           tblptrl	equ	0xFF6
 10758                           tablat	equ	0xFF5
 10759                           prodh	equ	0xFF4
 10760                           prodl	equ	0xFF3
 10761                           postinc0	equ	0xFEE
 10762                           wreg	equ	0xFE8
 10763                           postdec1	equ	0xFE5
 10764                           fsr1l	equ	0xFE1
 10765                           indf2	equ	0xFDF
 10766                           postinc2	equ	0xFDE
 10767                           postdec2	equ	0xFDD
 10768                           fsr2h	equ	0xFDA
 10769                           fsr2l	equ	0xFD9
 10770                           status	equ	0xFD8
 10771                           
 10772 ;; *************** function _delay_s *****************
 10773 ;; Defined at:
 10774 ;;		line 102 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
 10775 ;; Parameters:    Size  Location     Type
 10776 ;;  value_s         1    wreg     unsigned char 
 10777 ;; Auto vars:     Size  Location     Type
 10778 ;;  value_s         1   31[BANK0 ] unsigned char 
 10779 ;;  repeat_loop     1   32[BANK0 ] unsigned char 
 10780 ;; Return value:  Size  Location     Type
 10781 ;;		None               void
 10782 ;; Registers used:
 10783 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10784 ;; Tracked objects:
 10785 ;;		On entry : 0/0
 10786 ;;		On exit  : 0/0
 10787 ;;		Unchanged: 0/0
 10788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10790 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10792 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10793 ;;Total ram usage:        2 bytes
 10794 ;; Hardware stack levels used:    1
 10795 ;; Hardware stack levels required when called:    6
 10796 ;; This function calls:
 10797 ;;		_delay_ms
 10798 ;; This function is called by:
 10799 ;;		_park_routine
 10800 ;; This function uses a non-reentrant model
 10801 ;;
 10802                           
 10803                           	psect	text26
 10804  005F4C                     __ptext26:
 10805                           	opt stack 0
 10806  005F4C                     _delay_s:
 10807                           	opt stack 23
 10808                           
 10809                           ; BSR set to: 0
 10810                           ;incstack = 0
 10811                           ;delay_s@value_s stored from wreg
 10812  005F4C  0100               	movlb	0	; () banked
 10813  005F4E  6F7F               	movwf	delay_s@value_s& (0+255),b
 10814                           
 10815                           ;src\delay.c: 104: unsigned char repeat_loop;
 10816                           ;src\delay.c: 106: for (repeat_loop = 0; repeat_loop < value_s; repeat_loop++)
 10817  005F50  0E00               	movlw	0
 10818  005F52  0100               	movlb	0	; () banked
 10819  005F54  6F80               	movwf	delay_s@repeat_loop& (0+255),b
 10820  005F56  D009               	goto	l7317
 10821  005F58                     l7313:
 10822                           
 10823                           ; BSR set to: 0
 10824                           ;src\delay.c: 107: delay_ms (1000);
 10825  005F58  0E03               	movlw	3
 10826  005F5A  0100               	movlb	0	; () banked
 10827  005F5C  6F7E               	movwf	(delay_ms@value_ms+1)& (0+255),b
 10828  005F5E  0EE8               	movlw	232
 10829  005F60  6F7D               	movwf	delay_ms@value_ms& (0+255),b
 10830  005F62  EC76  F02F         	call	_delay_ms	;wreg free
 10831  005F66  0100               	movlb	0	; () banked
 10832  005F68  2B80               	incf	delay_s@repeat_loop& (0+255),f,b
 10833  005F6A                     l7317:
 10834                           
 10835                           ; BSR set to: 0
 10836  005F6A  0100               	movlb	0	; () banked
 10837  005F6C  517F               	movf	delay_s@value_s& (0+255),w,b
 10838  005F6E  0100               	movlb	0	; () banked
 10839  005F70  5D80               	subwf	delay_s@repeat_loop& (0+255),w,b
 10840  005F72  B0D8               	btfsc	status,0,c
 10841  005F74  0012               	return	
 10842  005F76  D7F0               	goto	l7313
 10843  005F78                     __end_of_delay_s:
 10844                           	opt stack 0
 10845                           tblptru	equ	0xFF8
 10846                           tblptrh	equ	0xFF7
 10847                           tblptrl	equ	0xFF6
 10848                           tablat	equ	0xFF5
 10849                           prodh	equ	0xFF4
 10850                           prodl	equ	0xFF3
 10851                           postinc0	equ	0xFEE
 10852                           wreg	equ	0xFE8
 10853                           postdec1	equ	0xFE5
 10854                           fsr1l	equ	0xFE1
 10855                           indf2	equ	0xFDF
 10856                           postinc2	equ	0xFDE
 10857                           postdec2	equ	0xFDD
 10858                           fsr2h	equ	0xFDA
 10859                           fsr2l	equ	0xFD9
 10860                           status	equ	0xFD8
 10861                           
 10862 ;; *************** function _delay_ms *****************
 10863 ;; Defined at:
 10864 ;;		line 61 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/src\delay.c"
 10865 ;; Parameters:    Size  Location     Type
 10866 ;;  value_ms        2   29[BANK0 ] unsigned int 
 10867 ;; Auto vars:     Size  Location     Type
 10868 ;;		None
 10869 ;; Return value:  Size  Location     Type
 10870 ;;		None               void
 10871 ;; Registers used:
 10872 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 10873 ;; Tracked objects:
 10874 ;;		On entry : 0/0
 10875 ;;		On exit  : 0/0
 10876 ;;		Unchanged: 0/0
 10877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10878 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10881 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10882 ;;Total ram usage:        2 bytes
 10883 ;; Hardware stack levels used:    1
 10884 ;; Hardware stack levels required when called:    5
 10885 ;; This function calls:
 10886 ;;		___wmul
 10887 ;; This function is called by:
 10888 ;;		_delay_s
 10889 ;;		_park_routine
 10890 ;; This function uses a non-reentrant model
 10891 ;;
 10892                           
 10893                           	psect	text27
 10894  005EEC                     __ptext27:
 10895                           	opt stack 0
 10896  005EEC                     _delay_ms:
 10897                           	opt stack 23
 10898                           
 10899                           ;src\delay.c: 73: clock_counter_reference = value_ms * delay_quartz_frequency_value;
 10900                           
 10901                           ; BSR set to: 0
 10902                           ;incstack = 0
 10903  005EEC  C0E8  F077         	movff	_delay_quartz_frequency_value,___wmul@multiplier	;volatile
 10904  005EF0  0100               	movlb	0	; () banked
 10905  005EF2  6B78               	clrf	(___wmul@multiplier+1)& (0+255),b
 10906  005EF4  C07D  F079         	movff	delay_ms@value_ms,___wmul@multiplicand
 10907  005EF8  C07E  F07A         	movff	delay_ms@value_ms+1,___wmul@multiplicand+1
 10908  005EFC  EC5B  F02F         	call	___wmul	;wreg free
 10909  005F00  C077  F034         	movff	?___wmul,_clock_counter_reference	;volatile
 10910  005F04  C078  F035         	movff	?___wmul+1,_clock_counter_reference+1	;volatile
 10911                           
 10912                           ;src\delay.c: 75: while (clock_counter_reference) {
 10913  005F08  D006               	goto	l569
 10914  005F0A                     l7219:
 10915                           
 10916                           ;src\delay.c: 85: _delay(240);
 10917  005F0A  0E50               	movlw	80
 10918  005F0C                     u9887:
 10919  005F0C  2EE8               	decfsz	wreg,f,c
 10920  005F0E  D7FE               	goto	u9887
 10921                           
 10922                           ;src\delay.c: 88: clock_counter_reference--;
 10923  005F10  0634               	decf	_clock_counter_reference,f,c	;volatile
 10924  005F12  A0D8               	btfss	status,0,c
 10925  005F14  0635               	decf	_clock_counter_reference+1,f,c	;volatile
 10926  005F16                     l569:
 10927  005F16  5034               	movf	_clock_counter_reference,w,c	;volatile
 10928  005F18  1035               	iorwf	_clock_counter_reference+1,w,c	;volatile
 10929  005F1A  B4D8               	btfsc	status,2,c
 10930  005F1C  0012               	return	
 10931  005F1E  D7F5               	goto	l7219
 10932  005F20                     __end_of_delay_ms:
 10933                           	opt stack 0
 10934                           tblptru	equ	0xFF8
 10935                           tblptrh	equ	0xFF7
 10936                           tblptrl	equ	0xFF6
 10937                           tablat	equ	0xFF5
 10938                           prodh	equ	0xFF4
 10939                           prodl	equ	0xFF3
 10940                           postinc0	equ	0xFEE
 10941                           wreg	equ	0xFE8
 10942                           postdec1	equ	0xFE5
 10943                           fsr1l	equ	0xFE1
 10944                           indf2	equ	0xFDF
 10945                           postinc2	equ	0xFDE
 10946                           postdec2	equ	0xFDD
 10947                           fsr2h	equ	0xFDA
 10948                           fsr2l	equ	0xFD9
 10949                           status	equ	0xFD8
 10950                           
 10951 ;; *************** function ___wmul *****************
 10952 ;; Defined at:
 10953 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\Umul16.c"
 10954 ;; Parameters:    Size  Location     Type
 10955 ;;  multiplier      2   23[BANK0 ] unsigned int 
 10956 ;;  multiplicand    2   25[BANK0 ] unsigned int 
 10957 ;; Auto vars:     Size  Location     Type
 10958 ;;  product         2   27[BANK0 ] unsigned int 
 10959 ;; Return value:  Size  Location     Type
 10960 ;;                  2   23[BANK0 ] unsigned int 
 10961 ;; Registers used:
 10962 ;;		wreg, status,2, status,0, prodl, prodh
 10963 ;; Tracked objects:
 10964 ;;		On entry : 0/0
 10965 ;;		On exit  : 0/0
 10966 ;;		Unchanged: 0/0
 10967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10968 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10969 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10971 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10972 ;;Total ram usage:        6 bytes
 10973 ;; Hardware stack levels used:    1
 10974 ;; Hardware stack levels required when called:    4
 10975 ;; This function calls:
 10976 ;;		Nothing
 10977 ;; This function is called by:
 10978 ;;		_delay_ms
 10979 ;; This function uses a non-reentrant model
 10980 ;;
 10981                           
 10982                           	psect	text28
 10983  005EB6                     __ptext28:
 10984                           	opt stack 0
 10985  005EB6                     ___wmul:
 10986                           	opt stack 23
 10987                           
 10988                           ;incstack = 0
 10989  005EB6  0100               	movlb	0	; () banked
 10990  005EB8  5177               	movf	___wmul@multiplier& (0+255),w,b
 10991  005EBA  0100               	movlb	0	; () banked
 10992  005EBC  0379               	mulwf	___wmul@multiplicand& (0+255),b
 10993  005EBE  CFF3 F07B          	movff	prodl,___wmul@product
 10994  005EC2  CFF4 F07C          	movff	prodh,___wmul@product+1
 10995  005EC6  0100               	movlb	0	; () banked
 10996  005EC8  5177               	movf	___wmul@multiplier& (0+255),w,b
 10997  005ECA  0100               	movlb	0	; () banked
 10998  005ECC  037A               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10999  005ECE  50F3               	movf	prodl,w,c
 11000  005ED0  0100               	movlb	0	; () banked
 11001  005ED2  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 11002  005ED4  0100               	movlb	0	; () banked
 11003  005ED6  5178               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11004  005ED8  0100               	movlb	0	; () banked
 11005  005EDA  0379               	mulwf	___wmul@multiplicand& (0+255),b
 11006  005EDC  50F3               	movf	prodl,w,c
 11007  005EDE  0100               	movlb	0	; () banked
 11008  005EE0  277C               	addwf	(___wmul@product+1)& (0+255),f,b
 11009                           
 11010                           ; BSR set to: 0
 11011  005EE2  C07B  F077         	movff	___wmul@product,?___wmul
 11012  005EE6  C07C  F078         	movff	___wmul@product+1,?___wmul+1
 11013  005EEA  0012               	return	
 11014  005EEC                     __end_of___wmul:
 11015                           	opt stack 0
 11016                           tblptru	equ	0xFF8
 11017                           tblptrh	equ	0xFF7
 11018                           tblptrl	equ	0xFF6
 11019                           tablat	equ	0xFF5
 11020                           prodh	equ	0xFF4
 11021                           prodl	equ	0xFF3
 11022                           postinc0	equ	0xFEE
 11023                           wreg	equ	0xFE8
 11024                           postdec1	equ	0xFE5
 11025                           fsr1l	equ	0xFE1
 11026                           indf2	equ	0xFDF
 11027                           postinc2	equ	0xFDE
 11028                           postdec2	equ	0xFDD
 11029                           fsr2h	equ	0xFDA
 11030                           fsr2l	equ	0xFD9
 11031                           status	equ	0xFD8
 11032                           
 11033 ;; *************** function _configurazione *****************
 11034 ;; Defined at:
 11035 ;;		line 452 in file "parcheggio.c"
 11036 ;; Parameters:    Size  Location     Type
 11037 ;;		None
 11038 ;; Auto vars:     Size  Location     Type
 11039 ;;		None
 11040 ;; Return value:  Size  Location     Type
 11041 ;;		None               void
 11042 ;; Registers used:
 11043 ;;		wreg, status,2, status,0, cstack
 11044 ;; Tracked objects:
 11045 ;;		On entry : 0/0
 11046 ;;		On exit  : 0/0
 11047 ;;		Unchanged: 0/0
 11048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11053 ;;Total ram usage:        0 bytes
 11054 ;; Hardware stack levels used:    1
 11055 ;; Hardware stack levels required when called:    6
 11056 ;; This function calls:
 11057 ;;		_CANInitialize
 11058 ;; This function is called by:
 11059 ;;		_main
 11060 ;; This function uses a non-reentrant model
 11061 ;;
 11062                           
 11063                           	psect	text29
 11064  005C86                     __ptext29:
 11065                           	opt stack 0
 11066  005C86                     _configurazione:
 11067                           	opt stack 24
 11068                           
 11069                           ;parcheggio.c: 453: LATA = 0x00;
 11070                           
 11071                           ; BSR set to: 0
 11072                           ;incstack = 0
 11073  005C86  0E00               	movlw	0
 11074  005C88  6E89               	movwf	3977,c	;volatile
 11075                           
 11076                           ;parcheggio.c: 454: TRISA = 0b11110000;
 11077  005C8A  0EF0               	movlw	240
 11078  005C8C  6E92               	movwf	3986,c	;volatile
 11079                           
 11080                           ;parcheggio.c: 456: LATB = 0x00;
 11081  005C8E  0E00               	movlw	0
 11082  005C90  6E8A               	movwf	3978,c	;volatile
 11083                           
 11084                           ;parcheggio.c: 457: TRISB = 0b10001010;
 11085  005C92  0E8A               	movlw	138
 11086  005C94  6E93               	movwf	3987,c	;volatile
 11087                           
 11088                           ;parcheggio.c: 459: LATC = 0x00;
 11089  005C96  0E00               	movlw	0
 11090  005C98  6E8B               	movwf	3979,c	;volatile
 11091                           
 11092                           ;parcheggio.c: 460: TRISC = 0b11111111;
 11093  005C9A  6894               	setf	3988,c	;volatile
 11094                           
 11095                           ;parcheggio.c: 462: ADCON1 = 0xFF;
 11096  005C9C  68C1               	setf	4033,c	;volatile
 11097                           
 11098                           ;parcheggio.c: 463: CANInitialize(4, 6, 5, 1, 3, CAN_CONFIG_LINE_FILTER_OFF & CAN_CONFIG
      +                          _SAMPLE_ONCE & CAN_CONFIG_ALL_VALID_MSG & CAN_CONFIG_DBL_BUFFER_ON);
 11099  005C9E  0E06               	movlw	6
 11100  005CA0  0100               	movlb	0	; () banked
 11101  005CA2  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11102  005CA4  0E05               	movlw	5
 11103  005CA6  0100               	movlb	0	; () banked
 11104  005CA8  6F86               	movwf	CANInitialize@phaseSeg2& (0+255),b
 11105  005CAA  0E01               	movlw	1
 11106  005CAC  0100               	movlb	0	; () banked
 11107  005CAE  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11108  005CB0  0E03               	movlw	3
 11109  005CB2  0100               	movlb	0	; () banked
 11110  005CB4  6F88               	movwf	CANInitialize@BRP& (0+255),b
 11111  005CB6  0E9D               	movlw	157
 11112  005CB8  0100               	movlb	0	; () banked
 11113  005CBA  6F89               	movwf	CANInitialize@flags& (0+255),b
 11114  005CBC  0E04               	movlw	4
 11115  005CBE  EC15  F028         	call	_CANInitialize
 11116                           
 11117                           ;parcheggio.c: 465: RCONbits.IPEN = 1;
 11118  005CC2  8ED0               	bsf	4048,7,c	;volatile
 11119                           
 11120                           ;parcheggio.c: 466: PIR3bits.RXB1IF = 0;
 11121  005CC4  92A4               	bcf	4004,1,c	;volatile
 11122                           
 11123                           ;parcheggio.c: 467: PIR3bits.RXB0IF = 0;
 11124  005CC6  90A4               	bcf	4004,0,c	;volatile
 11125                           
 11126                           ;parcheggio.c: 468: IPR3bits.RXB1IP = 0;
 11127  005CC8  92A5               	bcf	4005,1,c	;volatile
 11128                           
 11129                           ;parcheggio.c: 469: IPR3bits.RXB0IP = 0;
 11130  005CCA  90A5               	bcf	4005,0,c	;volatile
 11131                           
 11132                           ;parcheggio.c: 470: PIE3bits.RXB1IE = 1;
 11133  005CCC  82A3               	bsf	4003,1,c	;volatile
 11134                           
 11135                           ;parcheggio.c: 471: PIE3bits.RXB0IE = 1;
 11136  005CCE  80A3               	bsf	4003,0,c	;volatile
 11137                           
 11138                           ;parcheggio.c: 472: INTCON2bits.TMR0IP = 0;
 11139  005CD0  94F1               	bcf	intcon2,2,c	;volatile
 11140                           
 11141                           ;parcheggio.c: 473: T0CON = 0x80;
 11142  005CD2  0E80               	movlw	128
 11143  005CD4  6ED5               	movwf	4053,c	;volatile
 11144                           
 11145                           ;parcheggio.c: 474: T3CON = 0x11;
 11146  005CD6  0E11               	movlw	17
 11147  005CD8  6EB1               	movwf	4017,c	;volatile
 11148                           
 11149                           ;parcheggio.c: 475: TMR0H = 0x34;
 11150  005CDA  0E34               	movlw	52
 11151  005CDC  6ED7               	movwf	4055,c	;volatile
 11152                           
 11153                           ;parcheggio.c: 476: TMR0L = 0xE0;
 11154  005CDE  0EE0               	movlw	224
 11155  005CE0  6ED6               	movwf	4054,c	;volatile
 11156                           
 11157                           ;parcheggio.c: 477: INTCONbits.TMR0IF = 0;
 11158  005CE2  94F2               	bcf	intcon,2,c	;volatile
 11159                           
 11160                           ;parcheggio.c: 478: INTCONbits.TMR0IE = 1;
 11161  005CE4  8AF2               	bsf	intcon,5,c	;volatile
 11162                           
 11163                           ;parcheggio.c: 479: INTCON2bits.INTEDG0 = 1;
 11164  005CE6  8CF1               	bsf	intcon2,6,c	;volatile
 11165                           
 11166                           ;parcheggio.c: 480: INTCONbits.INT0IF = 0;
 11167  005CE8  92F2               	bcf	intcon,1,c	;volatile
 11168                           
 11169                           ;parcheggio.c: 481: INTCONbits.INT0IE = 0;
 11170  005CEA  98F2               	bcf	intcon,4,c	;volatile
 11171                           
 11172                           ;parcheggio.c: 482: INTCONbits.GIEL = 1;
 11173  005CEC  8CF2               	bsf	intcon,6,c	;volatile
 11174                           
 11175                           ;parcheggio.c: 483: INTCONbits.GIEH = 1;
 11176  005CEE  8EF2               	bsf	intcon,7,c	;volatile
 11177  005CF0  0012               	return		;funcret
 11178  005CF2                     __end_of_configurazione:
 11179                           	opt stack 0
 11180                           tblptru	equ	0xFF8
 11181                           tblptrh	equ	0xFF7
 11182                           tblptrl	equ	0xFF6
 11183                           tablat	equ	0xFF5
 11184                           prodh	equ	0xFF4
 11185                           prodl	equ	0xFF3
 11186                           intcon	equ	0xFF2
 11187                           intcon2	equ	0xFF1
 11188                           postinc0	equ	0xFEE
 11189                           wreg	equ	0xFE8
 11190                           postdec1	equ	0xFE5
 11191                           fsr1l	equ	0xFE1
 11192                           indf2	equ	0xFDF
 11193                           postinc2	equ	0xFDE
 11194                           postdec2	equ	0xFDD
 11195                           fsr2h	equ	0xFDA
 11196                           fsr2l	equ	0xFD9
 11197                           status	equ	0xFD8
 11198                           
 11199 ;; *************** function _CANInitialize *****************
 11200 ;; Defined at:
 11201 ;;		line 219 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 11202 ;; Parameters:    Size  Location     Type
 11203 ;;  propSeg         1    wreg     unsigned char 
 11204 ;;  phaseSeg1       1   37[BANK0 ] unsigned char 
 11205 ;;  phaseSeg2       1   38[BANK0 ] unsigned char 
 11206 ;;  SJW             1   39[BANK0 ] unsigned char 
 11207 ;;  BRP             1   40[BANK0 ] unsigned char 
 11208 ;;  flags           1   41[BANK0 ] enum E16313
 11209 ;; Auto vars:     Size  Location     Type
 11210 ;;  propSeg         1   46[BANK0 ] unsigned char 
 11211 ;;  FilterConfig    1   48[BANK0 ] unsigned char 
 11212 ;;  FilterConfig    1   47[BANK0 ] unsigned char 
 11213 ;; Return value:  Size  Location     Type
 11214 ;;		None               void
 11215 ;; Registers used:
 11216 ;;		wreg, status,2, status,0, cstack
 11217 ;; Tracked objects:
 11218 ;;		On entry : 0/0
 11219 ;;		On exit  : 0/0
 11220 ;;		Unchanged: 0/0
 11221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11222 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11223 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11224 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11225 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11226 ;;Total ram usage:       12 bytes
 11227 ;; Hardware stack levels used:    1
 11228 ;; Hardware stack levels required when called:    5
 11229 ;; This function calls:
 11230 ;;		_CANOperationMode
 11231 ;;		_CANSetFilter
 11232 ;;		_CANSetMask
 11233 ;; This function is called by:
 11234 ;;		_configurazione
 11235 ;; This function uses a non-reentrant model
 11236 ;;
 11237                           
 11238                           	psect	text30
 11239  00502A                     __ptext30:
 11240                           	opt stack 0
 11241  00502A                     _CANInitialize:
 11242                           	opt stack 24
 11243                           
 11244                           ;incstack = 0
 11245                           ;CANInitialize@propSeg stored from wreg
 11246  00502A  0100               	movlb	0	; () banked
 11247  00502C  6F8E               	movwf	CANInitialize@propSeg& (0+255),b
 11248                           
 11249                           ;inc\CANlib.h: 221: BYTE FilterConfig1;
 11250                           ;inc\CANlib.h: 222: BYTE FilterConfig2;
 11251                           ;inc\CANlib.h: 224: CANOperationMode(CAN_OP_MODE_CONFIG);
 11252  00502E  0E80               	movlw	128
 11253  005030  ECCE  F02F         	call	_CANOperationMode
 11254                           
 11255                           ;inc\CANlib.h: 226: BRGCON1 = 0x00;
 11256  005034  0E00               	movlw	0
 11257  005036  6E70               	movwf	3952,c	;volatile
 11258                           
 11259                           ;inc\CANlib.h: 227: BRGCON2 = 0x00;
 11260  005038  0E00               	movlw	0
 11261  00503A  6E71               	movwf	3953,c	;volatile
 11262                           
 11263                           ;inc\CANlib.h: 228: BRGCON3 = 0x00;
 11264  00503C  0E00               	movlw	0
 11265  00503E  6E72               	movwf	3954,c	;volatile
 11266                           
 11267                           ;inc\CANlib.h: 230: SJW= SJW << 6;
 11268  005040  0100               	movlb	0	; () banked
 11269  005042  4187               	rrncf	CANInitialize@SJW& (0+255),w,b
 11270  005044  42E8               	rrncf	wreg,f,c
 11271  005046  0BC0               	andlw	192
 11272  005048  0100               	movlb	0	; () banked
 11273  00504A  6F87               	movwf	CANInitialize@SJW& (0+255),b
 11274                           
 11275                           ; BSR set to: 0
 11276                           ;inc\CANlib.h: 231: BRGCON1 |= SJW;
 11277  00504C  0100               	movlb	0	; () banked
 11278  00504E  5187               	movf	CANInitialize@SJW& (0+255),w,b
 11279  005050  1270               	iorwf	3952,f,c	;volatile
 11280                           
 11281                           ; BSR set to: 0
 11282                           ;inc\CANlib.h: 232: BRGCON1 |= BRP;
 11283  005052  0100               	movlb	0	; () banked
 11284  005054  5188               	movf	CANInitialize@BRP& (0+255),w,b
 11285  005056  1270               	iorwf	3952,f,c	;volatile
 11286                           
 11287                           ; BSR set to: 0
 11288                           ;inc\CANlib.h: 234: BRGCON2 |= propSeg;
 11289  005058  0100               	movlb	0	; () banked
 11290  00505A  518E               	movf	CANInitialize@propSeg& (0+255),w,b
 11291  00505C  1271               	iorwf	3953,f,c	;volatile
 11292                           
 11293                           ; BSR set to: 0
 11294                           ;inc\CANlib.h: 235: phaseSeg1 = phaseSeg1 <<3;
 11295  00505E  0100               	movlb	0	; () banked
 11296  005060  3985               	swapf	CANInitialize@phaseSeg1& (0+255),w,b
 11297  005062  42E8               	rrncf	wreg,f,c
 11298  005064  0BF8               	andlw	248
 11299  005066  0100               	movlb	0	; () banked
 11300  005068  6F85               	movwf	CANInitialize@phaseSeg1& (0+255),b
 11301                           
 11302                           ; BSR set to: 0
 11303                           ;inc\CANlib.h: 236: BRGCON2 |= phaseSeg1;
 11304  00506A  0100               	movlb	0	; () banked
 11305  00506C  5185               	movf	CANInitialize@phaseSeg1& (0+255),w,b
 11306  00506E  1271               	iorwf	3953,f,c	;volatile
 11307                           
 11308                           ; BSR set to: 0
 11309                           ;inc\CANlib.h: 238: if ( !(flags & CAN_CONFIG_SAMPLE_BIT) )
 11310  005070  0100               	movlb	0	; () banked
 11311  005072  A589               	btfss	CANInitialize@flags& (0+255),2,b
 11312                           
 11313                           ; BSR set to: 0
 11314                           ;inc\CANlib.h: 239: BRGCON2bits.SAM= 1;
 11315  005074  8C71               	bsf	3953,6,c	;volatile
 11316                           
 11317                           ; BSR set to: 0
 11318                           ;inc\CANlib.h: 241: if ( flags & CAN_CONFIG_PHSEG2_PRG_BIT )
 11319  005076  0100               	movlb	0	; () banked
 11320  005078  B189               	btfsc	CANInitialize@flags& (0+255),0,b
 11321                           
 11322                           ; BSR set to: 0
 11323                           ;inc\CANlib.h: 242: BRGCON2bits.SEG2PHTS = 1;
 11324  00507A  8E71               	bsf	3953,7,c	;volatile
 11325                           
 11326                           ; BSR set to: 0
 11327                           ;inc\CANlib.h: 244: BRGCON3 |= phaseSeg2;
 11328                           
 11329                           ; BSR set to: 0
 11330  00507C  0100               	movlb	0	; () banked
 11331  00507E  5186               	movf	CANInitialize@phaseSeg2& (0+255),w,b
 11332  005080  1272               	iorwf	3954,f,c	;volatile
 11333                           
 11334                           ; BSR set to: 0
 11335                           ;inc\CANlib.h: 246: if ( flags & CAN_CONFIG_LINE_FILTER_BIT )
 11336  005082  0100               	movlb	0	; () banked
 11337  005084  B389               	btfsc	CANInitialize@flags& (0+255),1,b
 11338                           
 11339                           ; BSR set to: 0
 11340                           ;inc\CANlib.h: 247: BRGCON3bits.WAKFIL = 1;
 11341  005086  8C72               	bsf	3954,6,c	;volatile
 11342                           
 11343                           ; BSR set to: 0
 11344                           ;inc\CANlib.h: 252: RXB0CON = flags & CAN_CONFIG_MSG_BITS;
 11345                           
 11346                           ; BSR set to: 0
 11347  005088  0100               	movlb	0	; () banked
 11348  00508A  5189               	movf	CANInitialize@flags& (0+255),w,b
 11349  00508C  0B60               	andlw	96
 11350  00508E  6E60               	movwf	3936,c	;volatile
 11351                           
 11352                           ;inc\CANlib.h: 253: if ( (flags & CAN_CONFIG_DBL_BUFFER_BIT)== CAN_CONFIG_DBL_BUFFER_ON 
      +                          )
 11353  005090  0100               	movlb	0	; () banked
 11354  005092  5189               	movf	CANInitialize@flags& (0+255),w,b
 11355  005094  0B10               	andlw	16
 11356  005096  0AFF               	xorlw	255
 11357  005098  B4D8               	btfsc	status,2,c
 11358                           
 11359                           ; BSR set to: 0
 11360                           ;inc\CANlib.h: 254: RXB0CONbits.RXB0DBEN = 1;
 11361  00509A  8460               	bsf	3936,2,c	;volatile
 11362                           
 11363                           ; BSR set to: 0
 11364                           ;inc\CANlib.h: 256: RXB1CON = RXB0CON;
 11365  00509C  CF60 FF50          	movff	3936,3920	;volatile
 11366                           
 11367                           ; BSR set to: 0
 11368                           ;inc\CANlib.h: 260: CANSetMask (CAN_MASK_B1, 0x00000000, CAN_CONFIG_XTD_MSG);
 11369  0050A0  0E00               	movlw	0
 11370  0050A2  0100               	movlb	0	; () banked
 11371  0050A4  6F77               	movwf	CANSetMask@mask& (0+255),b
 11372  0050A6  0E00               	movlw	0
 11373  0050A8  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11374  0050AA  0E00               	movlw	0
 11375  0050AC  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11376  0050AE  0E00               	movlw	0
 11377  0050B0  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11378  0050B2  0EF7               	movlw	247
 11379  0050B4  0100               	movlb	0	; () banked
 11380  0050B6  6F7B               	movwf	CANSetMask@type& (0+255),b
 11381  0050B8  0E01               	movlw	1
 11382  0050BA  ECDB  F01F         	call	_CANSetMask
 11383                           
 11384                           ;inc\CANlib.h: 261: CANSetMask (CAN_MASK_B2, 0x00000000, CAN_CONFIG_XTD_MSG);
 11385  0050BE  0E00               	movlw	0
 11386  0050C0  0100               	movlb	0	; () banked
 11387  0050C2  6F77               	movwf	CANSetMask@mask& (0+255),b
 11388  0050C4  0E00               	movlw	0
 11389  0050C6  6F78               	movwf	(CANSetMask@mask+1)& (0+255),b
 11390  0050C8  0E00               	movlw	0
 11391  0050CA  6F79               	movwf	(CANSetMask@mask+2)& (0+255),b
 11392  0050CC  0E00               	movlw	0
 11393  0050CE  6F7A               	movwf	(CANSetMask@mask+3)& (0+255),b
 11394  0050D0  0EF7               	movlw	247
 11395  0050D2  0100               	movlb	0	; () banked
 11396  0050D4  6F7B               	movwf	CANSetMask@type& (0+255),b
 11397  0050D6  0E02               	movlw	2
 11398  0050D8  ECDB  F01F         	call	_CANSetMask
 11399                           
 11400                           ;inc\CANlib.h: 264: switch( (flags & CAN_CONFIG_MSG_BITS) | ~CAN_CONFIG_MSG_BITS )
 11401  0050DC  D00F               	goto	l5485
 11402  0050DE                     l5479:
 11403                           
 11404                           ;inc\CANlib.h: 267: FilterConfig1 = CAN_CONFIG_XTD_MSG;
 11405  0050DE  0EF7               	movlw	247
 11406  0050E0  0100               	movlb	0	; () banked
 11407  0050E2  6F8F               	movwf	CANInitialize@FilterConfig1& (0+255),b
 11408  0050E4  D007               	goto	l5481
 11409  0050E6                     l358:
 11410                           
 11411                           ; BSR set to: 0
 11412                           ;inc\CANlib.h: 272: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11413  0050E6  0100               	movlb	0	; () banked
 11414  0050E8  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11415                           
 11416                           ;inc\CANlib.h: 273: FilterConfig2 = CAN_CONFIG_STD_MSG;
 11417  0050EA  0100               	movlb	0	; () banked
 11418  0050EC  6990               	setf	CANInitialize@FilterConfig2& (0+255),b
 11419                           
 11420                           ;inc\CANlib.h: 274: break;
 11421  0050EE  D028               	goto	l5487
 11422  0050F0                     l359:
 11423                           
 11424                           ; BSR set to: 0
 11425                           ;inc\CANlib.h: 276: FilterConfig1 = CAN_CONFIG_STD_MSG;
 11426  0050F0  0100               	movlb	0	; () banked
 11427  0050F2  698F               	setf	CANInitialize@FilterConfig1& (0+255),b
 11428  0050F4                     l5481:
 11429                           
 11430                           ; BSR set to: 0
 11431                           ;inc\CANlib.h: 277: FilterConfig2 = CAN_CONFIG_XTD_MSG;
 11432  0050F4  0EF7               	movlw	247
 11433  0050F6  0100               	movlb	0	; () banked
 11434  0050F8  6F90               	movwf	CANInitialize@FilterConfig2& (0+255),b
 11435                           
 11436                           ; BSR set to: 0
 11437                           ;inc\CANlib.h: 279: }
 11438                           
 11439                           ;inc\CANlib.h: 278: break;
 11440  0050FA  D022               	goto	l5487
 11441  0050FC                     l5485:
 11442  0050FC  0E9F               	movlw	159
 11443  0050FE  0100               	movlb	0	; () banked
 11444  005100  6F8A               	movwf	??_CANInitialize& (0+255),b
 11445  005102  0EFF               	movlw	255
 11446  005104  0100               	movlb	0	; () banked
 11447  005106  6F8B               	movwf	(??_CANInitialize+1)& (0+255),b
 11448  005108  0100               	movlb	0	; () banked
 11449  00510A  5189               	movf	CANInitialize@flags& (0+255),w,b
 11450  00510C  0B60               	andlw	96
 11451  00510E  0100               	movlb	0	; () banked
 11452  005110  6F8C               	movwf	(??_CANInitialize+2)& (0+255),b
 11453  005112  6B8D               	clrf	(??_CANInitialize+3)& (0+255),b
 11454  005114  0100               	movlb	0	; () banked
 11455  005116  518A               	movf	??_CANInitialize& (0+255),w,b
 11456  005118  0100               	movlb	0	; () banked
 11457  00511A  138C               	iorwf	(??_CANInitialize+2)& (0+255),f,b
 11458  00511C  0100               	movlb	0	; () banked
 11459  00511E  518B               	movf	(??_CANInitialize+1)& (0+255),w,b
 11460  005120  0100               	movlb	0	; () banked
 11461  005122  138D               	iorwf	(??_CANInitialize+3)& (0+255),f,b
 11462                           
 11463                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11464                           ; Switch size 1, requested type "space"
 11465                           ; Number of cases is 1, Range of values is 0 to 0
 11466                           ; switch strategies available:
 11467                           ; Name         Instructions Cycles
 11468                           ; simple_byte            4     3 (average)
 11469                           ;	Chosen strategy is simple_byte
 11470  005124  0100               	movlb	0	; () banked
 11471  005126  518D               	movf	(??_CANInitialize+3)& (0+255),w,b
 11472  005128  0A00               	xorlw	0	; case 0
 11473  00512A  A4D8               	btfss	status,2,c
 11474  00512C  D7E1               	goto	l359
 11475                           
 11476                           ; BSR set to: 0
 11477                           ; Switch size 1, requested type "space"
 11478                           ; Number of cases is 2, Range of values is 191 to 223
 11479                           ; switch strategies available:
 11480                           ; Name         Instructions Cycles
 11481                           ; simple_byte            7     4 (average)
 11482                           ;	Chosen strategy is simple_byte
 11483  00512E  0100               	movlb	0	; () banked
 11484  005130  518C               	movf	(??_CANInitialize+2)& (0+255),w,b
 11485  005132  0ABF               	xorlw	191	; case 191
 11486  005134  B4D8               	btfsc	status,2,c
 11487  005136  D7D7               	goto	l358
 11488  005138  0A60               	xorlw	96	; case 223
 11489  00513A  B4D8               	btfsc	status,2,c
 11490  00513C  D7D0               	goto	l5479
 11491  00513E  D7D8               	goto	l359
 11492  005140                     l5487:
 11493                           
 11494                           ; BSR set to: 0
 11495                           ;inc\CANlib.h: 281: CANSetFilter(CAN_FILTER_B1_F1, 0, FilterConfig1);
 11496  005140  0E00               	movlw	0
 11497  005142  0100               	movlb	0	; () banked
 11498  005144  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11499  005146  0E00               	movlw	0
 11500  005148  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11501  00514A  0E00               	movlw	0
 11502  00514C  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11503  00514E  0E00               	movlw	0
 11504  005150  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11505  005152  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11506  005156  0E00               	movlw	0
 11507  005158  ECA9  F006         	call	_CANSetFilter
 11508                           
 11509                           ;inc\CANlib.h: 282: CANSetFilter(CAN_FILTER_B1_F2, 0, FilterConfig1);
 11510  00515C  0E00               	movlw	0
 11511  00515E  0100               	movlb	0	; () banked
 11512  005160  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11513  005162  0E00               	movlw	0
 11514  005164  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11515  005166  0E00               	movlw	0
 11516  005168  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11517  00516A  0E00               	movlw	0
 11518  00516C  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11519  00516E  C08F  F07B         	movff	CANInitialize@FilterConfig1,CANSetFilter@type
 11520  005172  0E01               	movlw	1
 11521  005174  ECA9  F006         	call	_CANSetFilter
 11522                           
 11523                           ;inc\CANlib.h: 283: CANSetFilter(CAN_FILTER_B2_F1, 0, FilterConfig2);
 11524  005178  0E00               	movlw	0
 11525  00517A  0100               	movlb	0	; () banked
 11526  00517C  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11527  00517E  0E00               	movlw	0
 11528  005180  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11529  005182  0E00               	movlw	0
 11530  005184  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11531  005186  0E00               	movlw	0
 11532  005188  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11533  00518A  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11534  00518E  0E02               	movlw	2
 11535  005190  ECA9  F006         	call	_CANSetFilter
 11536                           
 11537                           ;inc\CANlib.h: 284: CANSetFilter(CAN_FILTER_B2_F2, 0, FilterConfig2);
 11538  005194  0E00               	movlw	0
 11539  005196  0100               	movlb	0	; () banked
 11540  005198  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11541  00519A  0E00               	movlw	0
 11542  00519C  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11543  00519E  0E00               	movlw	0
 11544  0051A0  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11545  0051A2  0E00               	movlw	0
 11546  0051A4  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11547  0051A6  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11548  0051AA  0E03               	movlw	3
 11549  0051AC  ECA9  F006         	call	_CANSetFilter
 11550                           
 11551                           ;inc\CANlib.h: 285: CANSetFilter(CAN_FILTER_B2_F3, 0, FilterConfig2);
 11552  0051B0  0E00               	movlw	0
 11553  0051B2  0100               	movlb	0	; () banked
 11554  0051B4  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11555  0051B6  0E00               	movlw	0
 11556  0051B8  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11557  0051BA  0E00               	movlw	0
 11558  0051BC  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11559  0051BE  0E00               	movlw	0
 11560  0051C0  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11561  0051C2  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11562  0051C6  0E04               	movlw	4
 11563  0051C8  ECA9  F006         	call	_CANSetFilter
 11564                           
 11565                           ;inc\CANlib.h: 286: CANSetFilter(CAN_FILTER_B2_F4, 0, FilterConfig2);
 11566  0051CC  0E00               	movlw	0
 11567  0051CE  0100               	movlb	0	; () banked
 11568  0051D0  6F77               	movwf	CANSetFilter@filter& (0+255),b
 11569  0051D2  0E00               	movlw	0
 11570  0051D4  6F78               	movwf	(CANSetFilter@filter+1)& (0+255),b
 11571  0051D6  0E00               	movlw	0
 11572  0051D8  6F79               	movwf	(CANSetFilter@filter+2)& (0+255),b
 11573  0051DA  0E00               	movlw	0
 11574  0051DC  6F7A               	movwf	(CANSetFilter@filter+3)& (0+255),b
 11575  0051DE  C090  F07B         	movff	CANInitialize@FilterConfig2,CANSetFilter@type
 11576  0051E2  0E05               	movlw	5
 11577  0051E4  ECA9  F006         	call	_CANSetFilter
 11578                           
 11579                           ;inc\CANlib.h: 288: CANOperationMode(CAN_OP_MODE_NORMAL);
 11580  0051E8  0E00               	movlw	0
 11581  0051EA  ECCE  F02F         	call	_CANOperationMode
 11582  0051EE  0012               	return		;funcret
 11583  0051F0                     __end_of_CANInitialize:
 11584                           	opt stack 0
 11585                           tblptru	equ	0xFF8
 11586                           tblptrh	equ	0xFF7
 11587                           tblptrl	equ	0xFF6
 11588                           tablat	equ	0xFF5
 11589                           prodh	equ	0xFF4
 11590                           prodl	equ	0xFF3
 11591                           intcon	equ	0xFF2
 11592                           intcon2	equ	0xFF1
 11593                           postinc0	equ	0xFEE
 11594                           wreg	equ	0xFE8
 11595                           postdec1	equ	0xFE5
 11596                           fsr1l	equ	0xFE1
 11597                           indf2	equ	0xFDF
 11598                           postinc2	equ	0xFDE
 11599                           postdec2	equ	0xFDD
 11600                           fsr2h	equ	0xFDA
 11601                           fsr2l	equ	0xFD9
 11602                           status	equ	0xFD8
 11603                           
 11604 ;; *************** function _CANSetMask *****************
 11605 ;; Defined at:
 11606 ;;		line 641 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 11607 ;; Parameters:    Size  Location     Type
 11608 ;;  numBuffer       1    wreg     enum E16347
 11609 ;;  mask            4   23[BANK0 ] unsigned long 
 11610 ;;  type            1   27[BANK0 ] enum E16313
 11611 ;; Auto vars:     Size  Location     Type
 11612 ;;  numBuffer       1   32[BANK0 ] enum E16347
 11613 ;;  tamp            4   33[BANK0 ] unsigned long 
 11614 ;; Return value:  Size  Location     Type
 11615 ;;		None               void
 11616 ;; Registers used:
 11617 ;;		wreg, status,2, status,0
 11618 ;; Tracked objects:
 11619 ;;		On entry : 0/0
 11620 ;;		On exit  : 0/0
 11621 ;;		Unchanged: 0/0
 11622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11623 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11624 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11625 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11626 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11627 ;;Total ram usage:       14 bytes
 11628 ;; Hardware stack levels used:    1
 11629 ;; Hardware stack levels required when called:    4
 11630 ;; This function calls:
 11631 ;;		Nothing
 11632 ;; This function is called by:
 11633 ;;		_CANInitialize
 11634 ;; This function uses a non-reentrant model
 11635 ;;
 11636                           
 11637                           	psect	text31
 11638  003FB6                     __ptext31:
 11639                           	opt stack 0
 11640  003FB6                     _CANSetMask:
 11641                           	opt stack 24
 11642                           
 11643                           ;incstack = 0
 11644                           ;CANSetMask@numBuffer stored from wreg
 11645  003FB6  0100               	movlb	0	; () banked
 11646  003FB8  6F80               	movwf	CANSetMask@numBuffer& (0+255),b
 11647                           
 11648                           ;inc\CANlib.h: 644: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_STD_MSG))
 11649  003FBA  0100               	movlb	0	; () banked
 11650  003FBC  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11651  003FBE  A4D8               	btfss	status,2,c
 11652  003FC0  D056               	goto	l4955
 11653                           
 11654                           ; BSR set to: 0
 11655  003FC2  0100               	movlb	0	; () banked
 11656  003FC4  297B               	incf	CANSetMask@type& (0+255),w,b
 11657  003FC6  A4D8               	btfss	status,2,c
 11658  003FC8  D052               	goto	l4955
 11659                           
 11660                           ; BSR set to: 0
 11661                           ;inc\CANlib.h: 645: {
 11662                           ;inc\CANlib.h: 646: tamp = (mask >> 3);
 11663  003FCA  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11664  003FCE  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11665  003FD2  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11666  003FD6  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11667  003FDA  0E04               	movlw	4
 11668  003FDC  D006               	goto	u5580
 11669  003FDE                     u5585:
 11670  003FDE  0100               	movlb	0	; () banked
 11671  003FE0  90D8               	bcf	status,0,c
 11672  003FE2  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11673  003FE4  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11674  003FE6  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11675  003FE8  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11676  003FEA                     u5580:
 11677  003FEA  2EE8               	decfsz	wreg,f,c
 11678  003FEC  D7F8               	goto	u5585
 11679  003FEE  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11680  003FF2  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11681  003FF6  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11682  003FFA  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11683                           
 11684                           ; BSR set to: 0
 11685                           ;inc\CANlib.h: 647: tamp = tamp & 0x000000FF;
 11686  003FFE  0100               	movlb	0	; () banked
 11687  004000  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11688  004002  0100               	movlb	0	; () banked
 11689  004004  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11690  004006  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11691  004008  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11692  00400A  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11693                           
 11694                           ; BSR set to: 0
 11695                           ;inc\CANlib.h: 648: RXM0SIDH = (unsigned char) tamp;
 11696  00400C  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 11697                           
 11698                           ; BSR set to: 0
 11699                           ;inc\CANlib.h: 650: tamp = mask & 0x00000007;
 11700  004010  0E07               	movlw	7
 11701  004012  0100               	movlb	0	; () banked
 11702  004014  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11703  004016  0100               	movlb	0	; () banked
 11704  004018  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11705  00401A  0E00               	movlw	0
 11706  00401C  0100               	movlb	0	; () banked
 11707  00401E  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11708  004020  0100               	movlb	0	; () banked
 11709  004022  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11710  004024  0E00               	movlw	0
 11711  004026  0100               	movlb	0	; () banked
 11712  004028  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11713  00402A  0100               	movlb	0	; () banked
 11714  00402C  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11715  00402E  0E00               	movlw	0
 11716  004030  0100               	movlb	0	; () banked
 11717  004032  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11718  004034  0100               	movlb	0	; () banked
 11719  004036  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11720                           
 11721                           ; BSR set to: 0
 11722                           ;inc\CANlib.h: 651: tamp = tamp << 5;
 11723  004038  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11724  00403C  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11725  004040  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11726  004044  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11727  004048  0E05               	movlw	5
 11728  00404A                     u5595:
 11729  00404A  90D8               	bcf	status,0,c
 11730  00404C  0100               	movlb	0	; () banked
 11731  00404E  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11732  004050  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11733  004052  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11734  004054  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11735  004056  2EE8               	decfsz	wreg,f,c
 11736  004058  D7F8               	goto	u5595
 11737  00405A  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11738  00405E  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11739  004062  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11740  004066  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11741                           
 11742                           ; BSR set to: 0
 11743                           ;inc\CANlib.h: 652: RXM0SIDL = (unsigned char) tamp;
 11744  00406A  C081  FF19         	movff	CANSetMask@tamp,3865	;volatile
 11745  00406E                     l4955:
 11746                           
 11747                           ; BSR set to: 0
 11748                           ;inc\CANlib.h: 653: }
 11749                           ;inc\CANlib.h: 655: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_STD_MSG))
 11750  00406E  0E02               	movlw	2
 11751  004070  0100               	movlb	0	; () banked
 11752  004072  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 11753  004074  A4D8               	btfss	status,2,c
 11754  004076  D056               	goto	l4971
 11755                           
 11756                           ; BSR set to: 0
 11757  004078  0100               	movlb	0	; () banked
 11758  00407A  297B               	incf	CANSetMask@type& (0+255),w,b
 11759  00407C  A4D8               	btfss	status,2,c
 11760  00407E  D052               	goto	l4971
 11761                           
 11762                           ; BSR set to: 0
 11763                           ;inc\CANlib.h: 656: {
 11764                           ;inc\CANlib.h: 657: tamp = (mask >> 3);
 11765  004080  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 11766  004084  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 11767  004088  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 11768  00408C  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 11769  004090  0E04               	movlw	4
 11770  004092  D006               	goto	u5620
 11771  004094                     u5625:
 11772  004094  0100               	movlb	0	; () banked
 11773  004096  90D8               	bcf	status,0,c
 11774  004098  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 11775  00409A  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 11776  00409C  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 11777  00409E  337C               	rrcf	??_CANSetMask& (0+255),f,b
 11778  0040A0                     u5620:
 11779  0040A0  2EE8               	decfsz	wreg,f,c
 11780  0040A2  D7F8               	goto	u5625
 11781  0040A4  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11782  0040A8  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11783  0040AC  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11784  0040B0  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11785                           
 11786                           ; BSR set to: 0
 11787                           ;inc\CANlib.h: 658: tamp = tamp & 0x000000FF;
 11788  0040B4  0100               	movlb	0	; () banked
 11789  0040B6  5181               	movf	CANSetMask@tamp& (0+255),w,b
 11790  0040B8  0100               	movlb	0	; () banked
 11791  0040BA  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11792  0040BC  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11793  0040BE  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11794  0040C0  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11795                           
 11796                           ; BSR set to: 0
 11797                           ;inc\CANlib.h: 659: RXM1SIDH = (unsigned char) tamp;
 11798  0040C2  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 11799                           
 11800                           ; BSR set to: 0
 11801                           ;inc\CANlib.h: 661: tamp = mask & 0x00000007;
 11802  0040C6  0E07               	movlw	7
 11803  0040C8  0100               	movlb	0	; () banked
 11804  0040CA  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11805  0040CC  0100               	movlb	0	; () banked
 11806  0040CE  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11807  0040D0  0E00               	movlw	0
 11808  0040D2  0100               	movlb	0	; () banked
 11809  0040D4  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11810  0040D6  0100               	movlb	0	; () banked
 11811  0040D8  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11812  0040DA  0E00               	movlw	0
 11813  0040DC  0100               	movlb	0	; () banked
 11814  0040DE  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11815  0040E0  0100               	movlb	0	; () banked
 11816  0040E2  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11817  0040E4  0E00               	movlw	0
 11818  0040E6  0100               	movlb	0	; () banked
 11819  0040E8  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11820  0040EA  0100               	movlb	0	; () banked
 11821  0040EC  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11822                           
 11823                           ; BSR set to: 0
 11824                           ;inc\CANlib.h: 662: tamp = tamp << 5;
 11825  0040EE  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11826  0040F2  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11827  0040F6  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11828  0040FA  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11829  0040FE  0E05               	movlw	5
 11830  004100                     u5635:
 11831  004100  90D8               	bcf	status,0,c
 11832  004102  0100               	movlb	0	; () banked
 11833  004104  377C               	rlcf	??_CANSetMask& (0+255),f,b
 11834  004106  377D               	rlcf	(??_CANSetMask+1)& (0+255),f,b
 11835  004108  377E               	rlcf	(??_CANSetMask+2)& (0+255),f,b
 11836  00410A  377F               	rlcf	(??_CANSetMask+3)& (0+255),f,b
 11837  00410C  2EE8               	decfsz	wreg,f,c
 11838  00410E  D7F8               	goto	u5635
 11839  004110  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11840  004114  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11841  004118  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11842  00411C  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11843                           
 11844                           ; BSR set to: 0
 11845                           ;inc\CANlib.h: 663: RXM1SIDL = (unsigned char) tamp;
 11846  004120  C081  FF1D         	movff	CANSetMask@tamp,3869	;volatile
 11847  004124                     l4971:
 11848                           
 11849                           ; BSR set to: 0
 11850                           ;inc\CANlib.h: 664: }
 11851                           ;inc\CANlib.h: 666: if ((numBuffer ==CAN_MASK_B1) && (type == CAN_CONFIG_XTD_MSG))
 11852  004124  0100               	movlb	0	; () banked
 11853  004126  0580               	decf	CANSetMask@numBuffer& (0+255),w,b
 11854  004128  A4D8               	btfss	status,2,c
 11855  00412A  D087               	goto	l5003
 11856                           
 11857                           ; BSR set to: 0
 11858  00412C  0EF7               	movlw	247
 11859  00412E  0100               	movlb	0	; () banked
 11860  004130  197B               	xorwf	CANSetMask@type& (0+255),w,b
 11861  004132  A4D8               	btfss	status,2,c
 11862  004134  D082               	goto	l5003
 11863                           
 11864                           ; BSR set to: 0
 11865                           ;inc\CANlib.h: 667: {
 11866                           ;inc\CANlib.h: 668: tamp = mask & 0x000000FF;
 11867  004136  0100               	movlb	0	; () banked
 11868  004138  5177               	movf	CANSetMask@mask& (0+255),w,b
 11869  00413A  0100               	movlb	0	; () banked
 11870  00413C  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11871  00413E  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 11872  004140  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 11873  004142  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 11874                           
 11875                           ; BSR set to: 0
 11876                           ;inc\CANlib.h: 669: RXM0EIDL = (unsigned char) tamp;
 11877  004144  C081  FF1B         	movff	CANSetMask@tamp,3867	;volatile
 11878                           
 11879                           ; BSR set to: 0
 11880                           ;inc\CANlib.h: 671: tamp = mask & 0x0000FF00;
 11881  004148  0E00               	movlw	0
 11882  00414A  0100               	movlb	0	; () banked
 11883  00414C  1577               	andwf	CANSetMask@mask& (0+255),w,b
 11884  00414E  0100               	movlb	0	; () banked
 11885  004150  6F81               	movwf	CANSetMask@tamp& (0+255),b
 11886  004152  0EFF               	movlw	255
 11887  004154  0100               	movlb	0	; () banked
 11888  004156  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 11889  004158  0100               	movlb	0	; () banked
 11890  00415A  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 11891  00415C  0E00               	movlw	0
 11892  00415E  0100               	movlb	0	; () banked
 11893  004160  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 11894  004162  0100               	movlb	0	; () banked
 11895  004164  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 11896  004166  0E00               	movlw	0
 11897  004168  0100               	movlb	0	; () banked
 11898  00416A  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 11899  00416C  0100               	movlb	0	; () banked
 11900  00416E  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 11901                           
 11902                           ; BSR set to: 0
 11903                           ;inc\CANlib.h: 672: tamp = tamp >> 8;
 11904  004170  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 11905  004174  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 11906  004178  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 11907  00417C  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 11908  004180  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 11909  004184  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 11910  004188  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 11911  00418C  0100               	movlb	0	; () banked
 11912  00418E  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 11913  004190  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 11914  004194  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 11915  004198  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 11916  00419C  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 11917                           
 11918                           ; BSR set to: 0
 11919                           ;inc\CANlib.h: 673: RXM0EIDH = (unsigned char) tamp;
 11920  0041A0  C081  FF1A         	movff	CANSetMask@tamp,3866	;volatile
 11921                           
 11922                           ; BSR set to: 0
 11923                           ;inc\CANlib.h: 675: if (mask & 0x00010000)
 11924  0041A4  0100               	movlb	0	; () banked
 11925  0041A6  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 11926  0041A8  D003               	goto	l432
 11927                           
 11928                           ; BSR set to: 0
 11929                           ;inc\CANlib.h: 676: RXM0SIDLbits.EID16 = 0x01;
 11930  0041AA  010F               	movlb	15	; () banked
 11931  0041AC  8119               	bsf	25,0,b	;volatile
 11932  0041AE  D002               	goto	l433
 11933  0041B0                     l432:
 11934                           
 11935                           ; BSR set to: 0
 11936                           ;inc\CANlib.h: 677: else
 11937                           ;inc\CANlib.h: 678: RXM0SIDLbits.EID16 = 0x00;
 11938  0041B0  010F               	movlb	15	; () banked
 11939  0041B2  9119               	bcf	25,0,b	;volatile
 11940  0041B4                     l433:
 11941                           
 11942                           ; BSR set to: 15
 11943                           ;inc\CANlib.h: 680: if (mask & 0x00020000)
 11944  0041B4  0100               	movlb	0	; () banked
 11945  0041B6  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 11946  0041B8  D003               	goto	l434
 11947                           
 11948                           ; BSR set to: 0
 11949                           ;inc\CANlib.h: 681: RXM0SIDLbits.EID17 = 0x01;
 11950  0041BA  010F               	movlb	15	; () banked
 11951  0041BC  8319               	bsf	25,1,b	;volatile
 11952  0041BE  D002               	goto	l435
 11953  0041C0                     l434:
 11954                           
 11955                           ; BSR set to: 0
 11956                           ;inc\CANlib.h: 682: else
 11957                           ;inc\CANlib.h: 683: RXM0SIDLbits.EID17 = 0x00;
 11958  0041C0  010F               	movlb	15	; () banked
 11959  0041C2  9319               	bcf	25,1,b	;volatile
 11960  0041C4                     l435:
 11961                           
 11962                           ; BSR set to: 15
 11963                           ;inc\CANlib.h: 685: if (mask & 0x00040000)
 11964  0041C4  0100               	movlb	0	; () banked
 11965  0041C6  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 11966  0041C8  D003               	goto	l436
 11967                           
 11968                           ; BSR set to: 0
 11969                           ;inc\CANlib.h: 686: RXM0SIDLbits.SID0 = 0x01;
 11970  0041CA  010F               	movlb	15	; () banked
 11971  0041CC  8B19               	bsf	25,5,b	;volatile
 11972  0041CE  D002               	goto	l437
 11973  0041D0                     l436:
 11974                           
 11975                           ; BSR set to: 0
 11976                           ;inc\CANlib.h: 687: else
 11977                           ;inc\CANlib.h: 688: RXM0SIDLbits.SID0 = 0x00;
 11978  0041D0  010F               	movlb	15	; () banked
 11979  0041D2  9B19               	bcf	25,5,b	;volatile
 11980  0041D4                     l437:
 11981                           
 11982                           ; BSR set to: 15
 11983                           ;inc\CANlib.h: 690: if (mask & 0x00080000)
 11984  0041D4  0100               	movlb	0	; () banked
 11985  0041D6  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 11986  0041D8  D003               	goto	l438
 11987                           
 11988                           ; BSR set to: 0
 11989                           ;inc\CANlib.h: 691: RXM0SIDLbits.SID1 = 0x01;
 11990  0041DA  010F               	movlb	15	; () banked
 11991  0041DC  8D19               	bsf	25,6,b	;volatile
 11992  0041DE  D002               	goto	l439
 11993  0041E0                     l438:
 11994                           
 11995                           ; BSR set to: 0
 11996                           ;inc\CANlib.h: 692: else
 11997                           ;inc\CANlib.h: 693: RXM0SIDLbits.SID1 = 0x00;
 11998  0041E0  010F               	movlb	15	; () banked
 11999  0041E2  9D19               	bcf	25,6,b	;volatile
 12000  0041E4                     l439:
 12001                           
 12002                           ; BSR set to: 15
 12003                           ;inc\CANlib.h: 695: if (mask & 0x00100000)
 12004  0041E4  0100               	movlb	0	; () banked
 12005  0041E6  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12006  0041E8  D003               	goto	l440
 12007                           
 12008                           ; BSR set to: 0
 12009                           ;inc\CANlib.h: 696: RXM0SIDLbits.SID2 = 0x01 ;
 12010  0041EA  010F               	movlb	15	; () banked
 12011  0041EC  8F19               	bsf	25,7,b	;volatile
 12012  0041EE  D002               	goto	l4997
 12013  0041F0                     l440:
 12014                           
 12015                           ; BSR set to: 0
 12016                           ;inc\CANlib.h: 697: else
 12017                           ;inc\CANlib.h: 698: RXM0SIDLbits.SID2 = 0x00 ;
 12018  0041F0  010F               	movlb	15	; () banked
 12019  0041F2  9F19               	bcf	25,7,b	;volatile
 12020  0041F4                     l4997:
 12021                           
 12022                           ; BSR set to: 15
 12023                           ;inc\CANlib.h: 700: tamp = (mask >> 21);
 12024  0041F4  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12025  0041F8  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12026  0041FC  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12027  004200  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12028  004204  0E16               	movlw	22
 12029  004206  D006               	goto	u5710
 12030  004208                     u5715:
 12031  004208  0100               	movlb	0	; () banked
 12032  00420A  90D8               	bcf	status,0,c
 12033  00420C  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12034  00420E  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12035  004210  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12036  004212  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12037  004214                     u5710:
 12038  004214  2EE8               	decfsz	wreg,f,c
 12039  004216  D7F8               	goto	u5715
 12040  004218  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12041  00421C  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12042  004220  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12043  004224  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12044                           
 12045                           ; BSR set to: 0
 12046                           ;inc\CANlib.h: 701: tamp = tamp & 0x000000FF;
 12047  004228  0100               	movlb	0	; () banked
 12048  00422A  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12049  00422C  0100               	movlb	0	; () banked
 12050  00422E  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12051  004230  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12052  004232  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12053  004234  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12054                           
 12055                           ; BSR set to: 0
 12056                           ;inc\CANlib.h: 702: RXM0SIDH = (unsigned char) tamp;
 12057  004236  C081  FF18         	movff	CANSetMask@tamp,3864	;volatile
 12058  00423A                     l5003:
 12059                           
 12060                           ; BSR set to: 0
 12061                           ;inc\CANlib.h: 703: }
 12062                           ;inc\CANlib.h: 705: if ((numBuffer ==CAN_MASK_B2) && (type == CAN_CONFIG_XTD_MSG))
 12063  00423A  0E02               	movlw	2
 12064  00423C  0100               	movlb	0	; () banked
 12065  00423E  1980               	xorwf	CANSetMask@numBuffer& (0+255),w,b
 12066  004240  A4D8               	btfss	status,2,c
 12067  004242  0012               	return	
 12068                           
 12069                           ; BSR set to: 0
 12070  004244  0EF7               	movlw	247
 12071  004246  0100               	movlb	0	; () banked
 12072  004248  197B               	xorwf	CANSetMask@type& (0+255),w,b
 12073  00424A  A4D8               	btfss	status,2,c
 12074  00424C  0012               	return	
 12075                           
 12076                           ; BSR set to: 0
 12077                           ;inc\CANlib.h: 706: {
 12078                           ;inc\CANlib.h: 707: tamp = mask & 0x000000FF;
 12079  00424E  0100               	movlb	0	; () banked
 12080  004250  5177               	movf	CANSetMask@mask& (0+255),w,b
 12081  004252  0100               	movlb	0	; () banked
 12082  004254  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12083  004256  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12084  004258  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12085  00425A  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12086                           
 12087                           ; BSR set to: 0
 12088                           ;inc\CANlib.h: 708: RXM1EIDL = (unsigned char) tamp;
 12089  00425C  C081  FF1F         	movff	CANSetMask@tamp,3871	;volatile
 12090                           
 12091                           ; BSR set to: 0
 12092                           ;inc\CANlib.h: 710: tamp = mask & 0x0000FF00;
 12093  004260  0E00               	movlw	0
 12094  004262  0100               	movlb	0	; () banked
 12095  004264  1577               	andwf	CANSetMask@mask& (0+255),w,b
 12096  004266  0100               	movlb	0	; () banked
 12097  004268  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12098  00426A  0EFF               	movlw	255
 12099  00426C  0100               	movlb	0	; () banked
 12100  00426E  1578               	andwf	(CANSetMask@mask+1)& (0+255),w,b
 12101  004270  0100               	movlb	0	; () banked
 12102  004272  6F82               	movwf	(CANSetMask@tamp+1)& (0+255),b
 12103  004274  0E00               	movlw	0
 12104  004276  0100               	movlb	0	; () banked
 12105  004278  1579               	andwf	(CANSetMask@mask+2)& (0+255),w,b
 12106  00427A  0100               	movlb	0	; () banked
 12107  00427C  6F83               	movwf	(CANSetMask@tamp+2)& (0+255),b
 12108  00427E  0E00               	movlw	0
 12109  004280  0100               	movlb	0	; () banked
 12110  004282  157A               	andwf	(CANSetMask@mask+3)& (0+255),w,b
 12111  004284  0100               	movlb	0	; () banked
 12112  004286  6F84               	movwf	(CANSetMask@tamp+3)& (0+255),b
 12113                           
 12114                           ; BSR set to: 0
 12115                           ;inc\CANlib.h: 711: tamp = tamp >> 8;
 12116  004288  C081  F07C         	movff	CANSetMask@tamp,??_CANSetMask
 12117  00428C  C082  F07D         	movff	CANSetMask@tamp+1,??_CANSetMask+1
 12118  004290  C083  F07E         	movff	CANSetMask@tamp+2,??_CANSetMask+2
 12119  004294  C084  F07F         	movff	CANSetMask@tamp+3,??_CANSetMask+3
 12120  004298  C07D  F07C         	movff	??_CANSetMask+1,??_CANSetMask
 12121  00429C  C07E  F07D         	movff	??_CANSetMask+2,??_CANSetMask+1
 12122  0042A0  C07F  F07E         	movff	??_CANSetMask+3,??_CANSetMask+2
 12123  0042A4  0100               	movlb	0	; () banked
 12124  0042A6  6B7F               	clrf	(??_CANSetMask+3)& (0+255),b
 12125  0042A8  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12126  0042AC  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12127  0042B0  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12128  0042B4  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12129                           
 12130                           ; BSR set to: 0
 12131                           ;inc\CANlib.h: 712: RXM1EIDH = (unsigned char) tamp;
 12132  0042B8  C081  FF1E         	movff	CANSetMask@tamp,3870	;volatile
 12133                           
 12134                           ; BSR set to: 0
 12135                           ;inc\CANlib.h: 714: if (mask & 0x00010000)
 12136  0042BC  0100               	movlb	0	; () banked
 12137  0042BE  A179               	btfss	(CANSetMask@mask+2)& (0+255),0,b
 12138  0042C0  D003               	goto	l443
 12139                           
 12140                           ; BSR set to: 0
 12141                           ;inc\CANlib.h: 715: RXM1SIDLbits.EID16 = 0x01;
 12142  0042C2  010F               	movlb	15	; () banked
 12143  0042C4  811D               	bsf	29,0,b	;volatile
 12144  0042C6  D002               	goto	l444
 12145  0042C8                     l443:
 12146                           
 12147                           ; BSR set to: 0
 12148                           ;inc\CANlib.h: 716: else
 12149                           ;inc\CANlib.h: 717: RXM1SIDLbits.EID16 = 0x00;
 12150  0042C8  010F               	movlb	15	; () banked
 12151  0042CA  911D               	bcf	29,0,b	;volatile
 12152  0042CC                     l444:
 12153                           
 12154                           ; BSR set to: 15
 12155                           ;inc\CANlib.h: 719: if (mask & 0x00020000)
 12156  0042CC  0100               	movlb	0	; () banked
 12157  0042CE  A379               	btfss	(CANSetMask@mask+2)& (0+255),1,b
 12158  0042D0  D003               	goto	l445
 12159                           
 12160                           ; BSR set to: 0
 12161                           ;inc\CANlib.h: 720: RXM1SIDLbits.EID17 = 0x01;
 12162  0042D2  010F               	movlb	15	; () banked
 12163  0042D4  831D               	bsf	29,1,b	;volatile
 12164  0042D6  D002               	goto	l446
 12165  0042D8                     l445:
 12166                           
 12167                           ; BSR set to: 0
 12168                           ;inc\CANlib.h: 721: else
 12169                           ;inc\CANlib.h: 722: RXM1SIDLbits.EID17 = 0x00;
 12170  0042D8  010F               	movlb	15	; () banked
 12171  0042DA  931D               	bcf	29,1,b	;volatile
 12172  0042DC                     l446:
 12173                           
 12174                           ; BSR set to: 15
 12175                           ;inc\CANlib.h: 724: if (mask & 0x00040000)
 12176  0042DC  0100               	movlb	0	; () banked
 12177  0042DE  A579               	btfss	(CANSetMask@mask+2)& (0+255),2,b
 12178  0042E0  D003               	goto	l447
 12179                           
 12180                           ; BSR set to: 0
 12181                           ;inc\CANlib.h: 725: RXM1SIDLbits.SID0 = 0x01;
 12182  0042E2  010F               	movlb	15	; () banked
 12183  0042E4  8B1D               	bsf	29,5,b	;volatile
 12184  0042E6  D002               	goto	l448
 12185  0042E8                     l447:
 12186                           
 12187                           ; BSR set to: 0
 12188                           ;inc\CANlib.h: 726: else
 12189                           ;inc\CANlib.h: 727: RXM1SIDLbits.SID0 = 0x00;
 12190  0042E8  010F               	movlb	15	; () banked
 12191  0042EA  9B1D               	bcf	29,5,b	;volatile
 12192  0042EC                     l448:
 12193                           
 12194                           ; BSR set to: 15
 12195                           ;inc\CANlib.h: 729: if (mask & 0x00080000)
 12196  0042EC  0100               	movlb	0	; () banked
 12197  0042EE  A779               	btfss	(CANSetMask@mask+2)& (0+255),3,b
 12198  0042F0  D003               	goto	l449
 12199                           
 12200                           ; BSR set to: 0
 12201                           ;inc\CANlib.h: 730: RXM1SIDLbits.SID1 = 0x01;
 12202  0042F2  010F               	movlb	15	; () banked
 12203  0042F4  8D1D               	bsf	29,6,b	;volatile
 12204  0042F6  D002               	goto	l450
 12205  0042F8                     l449:
 12206                           
 12207                           ; BSR set to: 0
 12208                           ;inc\CANlib.h: 731: else
 12209                           ;inc\CANlib.h: 732: RXM1SIDLbits.SID1 = 0x00;
 12210  0042F8  010F               	movlb	15	; () banked
 12211  0042FA  9D1D               	bcf	29,6,b	;volatile
 12212  0042FC                     l450:
 12213                           
 12214                           ; BSR set to: 15
 12215                           ;inc\CANlib.h: 734: if (mask & 0x00100000)
 12216  0042FC  0100               	movlb	0	; () banked
 12217  0042FE  A979               	btfss	(CANSetMask@mask+2)& (0+255),4,b
 12218  004300  D003               	goto	l451
 12219                           
 12220                           ; BSR set to: 0
 12221                           ;inc\CANlib.h: 735: RXM1SIDLbits.SID2 = 0x01 ;
 12222  004302  010F               	movlb	15	; () banked
 12223  004304  8F1D               	bsf	29,7,b	;volatile
 12224  004306  D002               	goto	l5029
 12225  004308                     l451:
 12226                           
 12227                           ; BSR set to: 0
 12228                           ;inc\CANlib.h: 736: else
 12229                           ;inc\CANlib.h: 737: RXM1SIDLbits.SID2 = 0x00 ;
 12230  004308  010F               	movlb	15	; () banked
 12231  00430A  9F1D               	bcf	29,7,b	;volatile
 12232  00430C                     l5029:
 12233                           
 12234                           ; BSR set to: 15
 12235                           ;inc\CANlib.h: 739: tamp = (mask >> 21);
 12236  00430C  C077  F07C         	movff	CANSetMask@mask,??_CANSetMask
 12237  004310  C078  F07D         	movff	CANSetMask@mask+1,??_CANSetMask+1
 12238  004314  C079  F07E         	movff	CANSetMask@mask+2,??_CANSetMask+2
 12239  004318  C07A  F07F         	movff	CANSetMask@mask+3,??_CANSetMask+3
 12240  00431C  0E16               	movlw	22
 12241  00431E  D006               	goto	u5790
 12242  004320                     u5795:
 12243  004320  0100               	movlb	0	; () banked
 12244  004322  90D8               	bcf	status,0,c
 12245  004324  337F               	rrcf	(??_CANSetMask+3)& (0+255),f,b
 12246  004326  337E               	rrcf	(??_CANSetMask+2)& (0+255),f,b
 12247  004328  337D               	rrcf	(??_CANSetMask+1)& (0+255),f,b
 12248  00432A  337C               	rrcf	??_CANSetMask& (0+255),f,b
 12249  00432C                     u5790:
 12250  00432C  2EE8               	decfsz	wreg,f,c
 12251  00432E  D7F8               	goto	u5795
 12252  004330  C07C  F081         	movff	??_CANSetMask,CANSetMask@tamp
 12253  004334  C07D  F082         	movff	??_CANSetMask+1,CANSetMask@tamp+1
 12254  004338  C07E  F083         	movff	??_CANSetMask+2,CANSetMask@tamp+2
 12255  00433C  C07F  F084         	movff	??_CANSetMask+3,CANSetMask@tamp+3
 12256                           
 12257                           ; BSR set to: 0
 12258                           ;inc\CANlib.h: 740: tamp = tamp & 0x000000FF;
 12259  004340  0100               	movlb	0	; () banked
 12260  004342  5181               	movf	CANSetMask@tamp& (0+255),w,b
 12261  004344  0100               	movlb	0	; () banked
 12262  004346  6F81               	movwf	CANSetMask@tamp& (0+255),b
 12263  004348  6B82               	clrf	(CANSetMask@tamp+1)& (0+255),b
 12264  00434A  6B83               	clrf	(CANSetMask@tamp+2)& (0+255),b
 12265  00434C  6B84               	clrf	(CANSetMask@tamp+3)& (0+255),b
 12266                           
 12267                           ; BSR set to: 0
 12268                           ;inc\CANlib.h: 741: RXM1SIDH = (unsigned char) tamp;
 12269  00434E  C081  FF1C         	movff	CANSetMask@tamp,3868	;volatile
 12270  004352  0012               	return	
 12271  004354                     __end_of_CANSetMask:
 12272                           	opt stack 0
 12273                           tblptru	equ	0xFF8
 12274                           tblptrh	equ	0xFF7
 12275                           tblptrl	equ	0xFF6
 12276                           tablat	equ	0xFF5
 12277                           prodh	equ	0xFF4
 12278                           prodl	equ	0xFF3
 12279                           intcon	equ	0xFF2
 12280                           intcon2	equ	0xFF1
 12281                           postinc0	equ	0xFEE
 12282                           wreg	equ	0xFE8
 12283                           postdec1	equ	0xFE5
 12284                           fsr1l	equ	0xFE1
 12285                           indf2	equ	0xFDF
 12286                           postinc2	equ	0xFDE
 12287                           postdec2	equ	0xFDD
 12288                           fsr2h	equ	0xFDA
 12289                           fsr2l	equ	0xFD9
 12290                           status	equ	0xFD8
 12291                           
 12292 ;; *************** function _CANSetFilter *****************
 12293 ;; Defined at:
 12294 ;;		line 749 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 12295 ;; Parameters:    Size  Location     Type
 12296 ;;  numBuffer       1    wreg     enum E16350
 12297 ;;  filter          4   23[BANK0 ] unsigned long 
 12298 ;;  type            1   27[BANK0 ] enum E16313
 12299 ;; Auto vars:     Size  Location     Type
 12300 ;;  numBuffer       1   32[BANK0 ] enum E16350
 12301 ;;  tamp            4   33[BANK0 ] unsigned long 
 12302 ;; Return value:  Size  Location     Type
 12303 ;;		None               void
 12304 ;; Registers used:
 12305 ;;		wreg, status,2, status,0
 12306 ;; Tracked objects:
 12307 ;;		On entry : 0/0
 12308 ;;		On exit  : 0/0
 12309 ;;		Unchanged: 0/0
 12310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12311 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12312 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12313 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12314 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12315 ;;Total ram usage:       14 bytes
 12316 ;; Hardware stack levels used:    1
 12317 ;; Hardware stack levels required when called:    4
 12318 ;; This function calls:
 12319 ;;		Nothing
 12320 ;; This function is called by:
 12321 ;;		_CANInitialize
 12322 ;; This function uses a non-reentrant model
 12323 ;;
 12324                           
 12325                           	psect	text32
 12326  000D52                     __ptext32:
 12327                           	opt stack 0
 12328  000D52                     _CANSetFilter:
 12329                           	opt stack 24
 12330                           
 12331                           ; BSR set to: 0
 12332                           ;incstack = 0
 12333                           ;CANSetFilter@numBuffer stored from wreg
 12334  000D52  0100               	movlb	0	; () banked
 12335  000D54  6F80               	movwf	CANSetFilter@numBuffer& (0+255),b
 12336                           
 12337                           ;inc\CANlib.h: 751: unsigned long tamp;
 12338                           ;inc\CANlib.h: 753: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_STD_MSG))
 12339  000D56  0100               	movlb	0	; () banked
 12340  000D58  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12341  000D5A  0100               	movlb	0	; () banked
 12342  000D5C  A4D8               	btfss	status,2,c
 12343  000D5E  D058               	goto	l5053
 12344                           
 12345                           ; BSR set to: 0
 12346  000D60  0100               	movlb	0	; () banked
 12347  000D62  297B               	incf	CANSetFilter@type& (0+255),w,b
 12348  000D64  A4D8               	btfss	status,2,c
 12349  000D66  D054               	goto	l5053
 12350                           
 12351                           ; BSR set to: 0
 12352                           ;inc\CANlib.h: 754: {
 12353                           ;inc\CANlib.h: 755: RXF0SIDLbits.EXIDEN = 0x00;
 12354  000D68  010F               	movlb	15	; () banked
 12355  000D6A  9701               	bcf	1,3,b	;volatile
 12356                           
 12357                           ; BSR set to: 15
 12358                           ;inc\CANlib.h: 757: tamp = (filter >> 3);
 12359  000D6C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12360  000D70  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12361  000D74  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12362  000D78  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12363  000D7C  0E04               	movlw	4
 12364  000D7E  D006               	goto	u5820
 12365  000D80                     u5825:
 12366  000D80  0100               	movlb	0	; () banked
 12367  000D82  90D8               	bcf	status,0,c
 12368  000D84  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12369  000D86  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12370  000D88  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12371  000D8A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12372  000D8C                     u5820:
 12373  000D8C  2EE8               	decfsz	wreg,f,c
 12374  000D8E  D7F8               	goto	u5825
 12375  000D90  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12376  000D94  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12377  000D98  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12378  000D9C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12379                           
 12380                           ; BSR set to: 0
 12381                           ;inc\CANlib.h: 758: tamp = tamp & 0x000000FF;
 12382  000DA0  0100               	movlb	0	; () banked
 12383  000DA2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12384  000DA4  0100               	movlb	0	; () banked
 12385  000DA6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12386  000DA8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12387  000DAA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12388  000DAC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12389                           
 12390                           ; BSR set to: 0
 12391                           ;inc\CANlib.h: 759: RXF0SIDH = (unsigned char) tamp;
 12392  000DAE  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 12393                           
 12394                           ; BSR set to: 0
 12395                           ;inc\CANlib.h: 761: tamp = filter & 0x00000007;
 12396  000DB2  0E07               	movlw	7
 12397  000DB4  0100               	movlb	0	; () banked
 12398  000DB6  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12399  000DB8  0100               	movlb	0	; () banked
 12400  000DBA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12401  000DBC  0E00               	movlw	0
 12402  000DBE  0100               	movlb	0	; () banked
 12403  000DC0  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12404  000DC2  0100               	movlb	0	; () banked
 12405  000DC4  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12406  000DC6  0E00               	movlw	0
 12407  000DC8  0100               	movlb	0	; () banked
 12408  000DCA  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12409  000DCC  0100               	movlb	0	; () banked
 12410  000DCE  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12411  000DD0  0E00               	movlw	0
 12412  000DD2  0100               	movlb	0	; () banked
 12413  000DD4  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12414  000DD6  0100               	movlb	0	; () banked
 12415  000DD8  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12416                           
 12417                           ; BSR set to: 0
 12418                           ;inc\CANlib.h: 762: tamp = tamp << 5;
 12419  000DDA  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12420  000DDE  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12421  000DE2  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12422  000DE6  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12423  000DEA  0E05               	movlw	5
 12424  000DEC                     u5835:
 12425  000DEC  90D8               	bcf	status,0,c
 12426  000DEE  0100               	movlb	0	; () banked
 12427  000DF0  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12428  000DF2  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12429  000DF4  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12430  000DF6  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12431  000DF8  2EE8               	decfsz	wreg,f,c
 12432  000DFA  D7F8               	goto	u5835
 12433  000DFC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12434  000E00  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12435  000E04  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12436  000E08  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12437                           
 12438                           ; BSR set to: 0
 12439                           ;inc\CANlib.h: 763: RXF0SIDL = (unsigned char) tamp;
 12440  000E0C  C081  FF01         	movff	CANSetFilter@tamp,3841	;volatile
 12441  000E10                     l5053:
 12442                           
 12443                           ; BSR set to: 0
 12444                           ;inc\CANlib.h: 764: }
 12445                           ;inc\CANlib.h: 766: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_STD_MSG))
 12446  000E10  0100               	movlb	0	; () banked
 12447  000E12  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 12448  000E14  A4D8               	btfss	status,2,c
 12449  000E16  D058               	goto	l5071
 12450                           
 12451                           ; BSR set to: 0
 12452  000E18  0100               	movlb	0	; () banked
 12453  000E1A  297B               	incf	CANSetFilter@type& (0+255),w,b
 12454  000E1C  A4D8               	btfss	status,2,c
 12455  000E1E  D054               	goto	l5071
 12456                           
 12457                           ; BSR set to: 0
 12458                           ;inc\CANlib.h: 767: {
 12459                           ;inc\CANlib.h: 768: RXF1SIDLbits.EXIDEN = 0x00;
 12460  000E20  010F               	movlb	15	; () banked
 12461  000E22  9705               	bcf	5,3,b	;volatile
 12462                           
 12463                           ; BSR set to: 15
 12464                           ;inc\CANlib.h: 770: tamp = (filter >> 3);
 12465  000E24  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12466  000E28  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12467  000E2C  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12468  000E30  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12469  000E34  0E04               	movlw	4
 12470  000E36  D006               	goto	u5860
 12471  000E38                     u5865:
 12472  000E38  0100               	movlb	0	; () banked
 12473  000E3A  90D8               	bcf	status,0,c
 12474  000E3C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12475  000E3E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12476  000E40  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12477  000E42  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12478  000E44                     u5860:
 12479  000E44  2EE8               	decfsz	wreg,f,c
 12480  000E46  D7F8               	goto	u5865
 12481  000E48  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12482  000E4C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12483  000E50  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12484  000E54  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12485                           
 12486                           ; BSR set to: 0
 12487                           ;inc\CANlib.h: 771: tamp = tamp & 0x000000FF;
 12488  000E58  0100               	movlb	0	; () banked
 12489  000E5A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12490  000E5C  0100               	movlb	0	; () banked
 12491  000E5E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12492  000E60  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12493  000E62  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12494  000E64  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12495                           
 12496                           ; BSR set to: 0
 12497                           ;inc\CANlib.h: 772: RXF1SIDH = (unsigned char) tamp;
 12498  000E66  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 12499                           
 12500                           ; BSR set to: 0
 12501                           ;inc\CANlib.h: 774: tamp = filter & 0x00000007;
 12502  000E6A  0E07               	movlw	7
 12503  000E6C  0100               	movlb	0	; () banked
 12504  000E6E  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12505  000E70  0100               	movlb	0	; () banked
 12506  000E72  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12507  000E74  0E00               	movlw	0
 12508  000E76  0100               	movlb	0	; () banked
 12509  000E78  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12510  000E7A  0100               	movlb	0	; () banked
 12511  000E7C  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12512  000E7E  0E00               	movlw	0
 12513  000E80  0100               	movlb	0	; () banked
 12514  000E82  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12515  000E84  0100               	movlb	0	; () banked
 12516  000E86  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12517  000E88  0E00               	movlw	0
 12518  000E8A  0100               	movlb	0	; () banked
 12519  000E8C  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12520  000E8E  0100               	movlb	0	; () banked
 12521  000E90  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12522                           
 12523                           ; BSR set to: 0
 12524                           ;inc\CANlib.h: 775: tamp = tamp << 5;
 12525  000E92  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12526  000E96  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12527  000E9A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12528  000E9E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12529  000EA2  0E05               	movlw	5
 12530  000EA4                     u5875:
 12531  000EA4  90D8               	bcf	status,0,c
 12532  000EA6  0100               	movlb	0	; () banked
 12533  000EA8  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12534  000EAA  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12535  000EAC  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12536  000EAE  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12537  000EB0  2EE8               	decfsz	wreg,f,c
 12538  000EB2  D7F8               	goto	u5875
 12539  000EB4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12540  000EB8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12541  000EBC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12542  000EC0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12543                           
 12544                           ; BSR set to: 0
 12545                           ;inc\CANlib.h: 776: RXF1SIDL = (unsigned char) tamp;
 12546  000EC4  C081  FF05         	movff	CANSetFilter@tamp,3845	;volatile
 12547  000EC8                     l5071:
 12548                           
 12549                           ; BSR set to: 0
 12550                           ;inc\CANlib.h: 777: }
 12551                           ;inc\CANlib.h: 779: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_STD_MSG))
 12552  000EC8  0E02               	movlw	2
 12553  000ECA  0100               	movlb	0	; () banked
 12554  000ECC  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12555  000ECE  A4D8               	btfss	status,2,c
 12556  000ED0  D058               	goto	l5089
 12557                           
 12558                           ; BSR set to: 0
 12559  000ED2  0100               	movlb	0	; () banked
 12560  000ED4  297B               	incf	CANSetFilter@type& (0+255),w,b
 12561  000ED6  A4D8               	btfss	status,2,c
 12562  000ED8  D054               	goto	l5089
 12563                           
 12564                           ; BSR set to: 0
 12565                           ;inc\CANlib.h: 780: {
 12566                           ;inc\CANlib.h: 781: RXF2SIDLbits.EXIDEN = 0x00;
 12567  000EDA  010F               	movlb	15	; () banked
 12568  000EDC  9709               	bcf	9,3,b	;volatile
 12569                           
 12570                           ; BSR set to: 15
 12571                           ;inc\CANlib.h: 783: tamp = (filter >> 3);
 12572  000EDE  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12573  000EE2  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12574  000EE6  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12575  000EEA  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12576  000EEE  0E04               	movlw	4
 12577  000EF0  D006               	goto	u5900
 12578  000EF2                     u5905:
 12579  000EF2  0100               	movlb	0	; () banked
 12580  000EF4  90D8               	bcf	status,0,c
 12581  000EF6  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12582  000EF8  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12583  000EFA  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12584  000EFC  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12585  000EFE                     u5900:
 12586  000EFE  2EE8               	decfsz	wreg,f,c
 12587  000F00  D7F8               	goto	u5905
 12588  000F02  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12589  000F06  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12590  000F0A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12591  000F0E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12592                           
 12593                           ; BSR set to: 0
 12594                           ;inc\CANlib.h: 784: tamp = tamp & 0x000000FF;
 12595  000F12  0100               	movlb	0	; () banked
 12596  000F14  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12597  000F16  0100               	movlb	0	; () banked
 12598  000F18  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12599  000F1A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12600  000F1C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12601  000F1E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12602                           
 12603                           ; BSR set to: 0
 12604                           ;inc\CANlib.h: 785: RXF2SIDH = (unsigned char) tamp;
 12605  000F20  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 12606                           
 12607                           ; BSR set to: 0
 12608                           ;inc\CANlib.h: 787: tamp = filter & 0x00000007;
 12609  000F24  0E07               	movlw	7
 12610  000F26  0100               	movlb	0	; () banked
 12611  000F28  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12612  000F2A  0100               	movlb	0	; () banked
 12613  000F2C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12614  000F2E  0E00               	movlw	0
 12615  000F30  0100               	movlb	0	; () banked
 12616  000F32  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12617  000F34  0100               	movlb	0	; () banked
 12618  000F36  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12619  000F38  0E00               	movlw	0
 12620  000F3A  0100               	movlb	0	; () banked
 12621  000F3C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12622  000F3E  0100               	movlb	0	; () banked
 12623  000F40  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12624  000F42  0E00               	movlw	0
 12625  000F44  0100               	movlb	0	; () banked
 12626  000F46  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12627  000F48  0100               	movlb	0	; () banked
 12628  000F4A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12629                           
 12630                           ; BSR set to: 0
 12631                           ;inc\CANlib.h: 788: tamp = tamp << 5;
 12632  000F4C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12633  000F50  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12634  000F54  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12635  000F58  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12636  000F5C  0E05               	movlw	5
 12637  000F5E                     u5915:
 12638  000F5E  90D8               	bcf	status,0,c
 12639  000F60  0100               	movlb	0	; () banked
 12640  000F62  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12641  000F64  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12642  000F66  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12643  000F68  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12644  000F6A  2EE8               	decfsz	wreg,f,c
 12645  000F6C  D7F8               	goto	u5915
 12646  000F6E  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12647  000F72  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12648  000F76  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12649  000F7A  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12650                           
 12651                           ; BSR set to: 0
 12652                           ;inc\CANlib.h: 789: RXF2SIDL = (unsigned char) tamp;
 12653  000F7E  C081  FF09         	movff	CANSetFilter@tamp,3849	;volatile
 12654  000F82                     l5089:
 12655                           
 12656                           ; BSR set to: 0
 12657                           ;inc\CANlib.h: 790: }
 12658                           ;inc\CANlib.h: 792: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_STD_MSG))
 12659  000F82  0E03               	movlw	3
 12660  000F84  0100               	movlb	0	; () banked
 12661  000F86  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12662  000F88  A4D8               	btfss	status,2,c
 12663  000F8A  D058               	goto	l5107
 12664                           
 12665                           ; BSR set to: 0
 12666  000F8C  0100               	movlb	0	; () banked
 12667  000F8E  297B               	incf	CANSetFilter@type& (0+255),w,b
 12668  000F90  A4D8               	btfss	status,2,c
 12669  000F92  D054               	goto	l5107
 12670                           
 12671                           ; BSR set to: 0
 12672                           ;inc\CANlib.h: 793: {
 12673                           ;inc\CANlib.h: 794: RXF3SIDLbits.EXIDEN = 0x00;
 12674  000F94  010F               	movlb	15	; () banked
 12675  000F96  970D               	bcf	13,3,b	;volatile
 12676                           
 12677                           ; BSR set to: 15
 12678                           ;inc\CANlib.h: 796: tamp = (filter >> 3);
 12679  000F98  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12680  000F9C  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12681  000FA0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12682  000FA4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12683  000FA8  0E04               	movlw	4
 12684  000FAA  D006               	goto	u5940
 12685  000FAC                     u5945:
 12686  000FAC  0100               	movlb	0	; () banked
 12687  000FAE  90D8               	bcf	status,0,c
 12688  000FB0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12689  000FB2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12690  000FB4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12691  000FB6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12692  000FB8                     u5940:
 12693  000FB8  2EE8               	decfsz	wreg,f,c
 12694  000FBA  D7F8               	goto	u5945
 12695  000FBC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12696  000FC0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12697  000FC4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12698  000FC8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12699                           
 12700                           ; BSR set to: 0
 12701                           ;inc\CANlib.h: 797: tamp = tamp & 0x000000FF;
 12702  000FCC  0100               	movlb	0	; () banked
 12703  000FCE  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12704  000FD0  0100               	movlb	0	; () banked
 12705  000FD2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12706  000FD4  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12707  000FD6  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12708  000FD8  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12709                           
 12710                           ; BSR set to: 0
 12711                           ;inc\CANlib.h: 798: RXF3SIDH = (unsigned char) tamp;
 12712  000FDA  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 12713                           
 12714                           ; BSR set to: 0
 12715                           ;inc\CANlib.h: 800: tamp = filter & 0x00000007;
 12716  000FDE  0E07               	movlw	7
 12717  000FE0  0100               	movlb	0	; () banked
 12718  000FE2  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12719  000FE4  0100               	movlb	0	; () banked
 12720  000FE6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12721  000FE8  0E00               	movlw	0
 12722  000FEA  0100               	movlb	0	; () banked
 12723  000FEC  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12724  000FEE  0100               	movlb	0	; () banked
 12725  000FF0  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12726  000FF2  0E00               	movlw	0
 12727  000FF4  0100               	movlb	0	; () banked
 12728  000FF6  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12729  000FF8  0100               	movlb	0	; () banked
 12730  000FFA  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12731  000FFC  0E00               	movlw	0
 12732  000FFE  0100               	movlb	0	; () banked
 12733  001000  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12734  001002  0100               	movlb	0	; () banked
 12735  001004  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12736                           
 12737                           ; BSR set to: 0
 12738                           ;inc\CANlib.h: 801: tamp = tamp << 5;
 12739  001006  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12740  00100A  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12741  00100E  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12742  001012  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12743  001016  0E05               	movlw	5
 12744  001018                     u5955:
 12745  001018  90D8               	bcf	status,0,c
 12746  00101A  0100               	movlb	0	; () banked
 12747  00101C  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12748  00101E  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12749  001020  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12750  001022  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12751  001024  2EE8               	decfsz	wreg,f,c
 12752  001026  D7F8               	goto	u5955
 12753  001028  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12754  00102C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12755  001030  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12756  001034  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12757                           
 12758                           ; BSR set to: 0
 12759                           ;inc\CANlib.h: 802: RXF3SIDL = (unsigned char) tamp;
 12760  001038  C081  FF0D         	movff	CANSetFilter@tamp,3853	;volatile
 12761  00103C                     l5107:
 12762                           
 12763                           ; BSR set to: 0
 12764                           ;inc\CANlib.h: 803: }
 12765                           ;inc\CANlib.h: 805: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_STD_MSG))
 12766  00103C  0E04               	movlw	4
 12767  00103E  0100               	movlb	0	; () banked
 12768  001040  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12769  001042  A4D8               	btfss	status,2,c
 12770  001044  D058               	goto	l5125
 12771                           
 12772                           ; BSR set to: 0
 12773  001046  0100               	movlb	0	; () banked
 12774  001048  297B               	incf	CANSetFilter@type& (0+255),w,b
 12775  00104A  A4D8               	btfss	status,2,c
 12776  00104C  D054               	goto	l5125
 12777                           
 12778                           ; BSR set to: 0
 12779                           ;inc\CANlib.h: 806: {
 12780                           ;inc\CANlib.h: 807: RXF4SIDLbits.EXIDEN = 0x00;
 12781  00104E  010F               	movlb	15	; () banked
 12782  001050  9711               	bcf	17,3,b	;volatile
 12783                           
 12784                           ; BSR set to: 15
 12785                           ;inc\CANlib.h: 809: tamp = (filter >> 3);
 12786  001052  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12787  001056  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12788  00105A  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12789  00105E  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12790  001062  0E04               	movlw	4
 12791  001064  D006               	goto	u5980
 12792  001066                     u5985:
 12793  001066  0100               	movlb	0	; () banked
 12794  001068  90D8               	bcf	status,0,c
 12795  00106A  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12796  00106C  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12797  00106E  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12798  001070  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12799  001072                     u5980:
 12800  001072  2EE8               	decfsz	wreg,f,c
 12801  001074  D7F8               	goto	u5985
 12802  001076  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12803  00107A  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12804  00107E  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12805  001082  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12806                           
 12807                           ; BSR set to: 0
 12808                           ;inc\CANlib.h: 810: tamp = tamp & 0x000000FF;
 12809  001086  0100               	movlb	0	; () banked
 12810  001088  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12811  00108A  0100               	movlb	0	; () banked
 12812  00108C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12813  00108E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12814  001090  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12815  001092  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12816                           
 12817                           ; BSR set to: 0
 12818                           ;inc\CANlib.h: 811: RXF4SIDH = (unsigned char) tamp;
 12819  001094  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 12820                           
 12821                           ; BSR set to: 0
 12822                           ;inc\CANlib.h: 813: tamp = filter & 0x00000007;
 12823  001098  0E07               	movlw	7
 12824  00109A  0100               	movlb	0	; () banked
 12825  00109C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12826  00109E  0100               	movlb	0	; () banked
 12827  0010A0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12828  0010A2  0E00               	movlw	0
 12829  0010A4  0100               	movlb	0	; () banked
 12830  0010A6  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12831  0010A8  0100               	movlb	0	; () banked
 12832  0010AA  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12833  0010AC  0E00               	movlw	0
 12834  0010AE  0100               	movlb	0	; () banked
 12835  0010B0  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12836  0010B2  0100               	movlb	0	; () banked
 12837  0010B4  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12838  0010B6  0E00               	movlw	0
 12839  0010B8  0100               	movlb	0	; () banked
 12840  0010BA  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12841  0010BC  0100               	movlb	0	; () banked
 12842  0010BE  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12843                           
 12844                           ; BSR set to: 0
 12845                           ;inc\CANlib.h: 814: tamp = tamp << 5;
 12846  0010C0  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12847  0010C4  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12848  0010C8  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12849  0010CC  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12850  0010D0  0E05               	movlw	5
 12851  0010D2                     u5995:
 12852  0010D2  90D8               	bcf	status,0,c
 12853  0010D4  0100               	movlb	0	; () banked
 12854  0010D6  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12855  0010D8  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12856  0010DA  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12857  0010DC  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12858  0010DE  2EE8               	decfsz	wreg,f,c
 12859  0010E0  D7F8               	goto	u5995
 12860  0010E2  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12861  0010E6  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12862  0010EA  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12863  0010EE  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12864                           
 12865                           ; BSR set to: 0
 12866                           ;inc\CANlib.h: 815: RXF4SIDL = (unsigned char) tamp;
 12867  0010F2  C081  FF11         	movff	CANSetFilter@tamp,3857	;volatile
 12868  0010F6                     l5125:
 12869                           
 12870                           ; BSR set to: 0
 12871                           ;inc\CANlib.h: 816: }
 12872                           ;inc\CANlib.h: 818: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_STD_MSG))
 12873  0010F6  0E05               	movlw	5
 12874  0010F8  0100               	movlb	0	; () banked
 12875  0010FA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 12876  0010FC  A4D8               	btfss	status,2,c
 12877  0010FE  D058               	goto	l5143
 12878                           
 12879                           ; BSR set to: 0
 12880  001100  0100               	movlb	0	; () banked
 12881  001102  297B               	incf	CANSetFilter@type& (0+255),w,b
 12882  001104  A4D8               	btfss	status,2,c
 12883  001106  D054               	goto	l5143
 12884                           
 12885                           ; BSR set to: 0
 12886                           ;inc\CANlib.h: 819: {
 12887                           ;inc\CANlib.h: 820: RXF5SIDLbits.EXIDEN = 0x00;
 12888  001108  010F               	movlb	15	; () banked
 12889  00110A  9715               	bcf	21,3,b	;volatile
 12890                           
 12891                           ; BSR set to: 15
 12892                           ;inc\CANlib.h: 822: tamp = (filter >> 3);
 12893  00110C  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 12894  001110  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 12895  001114  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 12896  001118  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 12897  00111C  0E04               	movlw	4
 12898  00111E  D006               	goto	u6020
 12899  001120                     u6025:
 12900  001120  0100               	movlb	0	; () banked
 12901  001122  90D8               	bcf	status,0,c
 12902  001124  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 12903  001126  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 12904  001128  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 12905  00112A  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 12906  00112C                     u6020:
 12907  00112C  2EE8               	decfsz	wreg,f,c
 12908  00112E  D7F8               	goto	u6025
 12909  001130  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12910  001134  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12911  001138  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12912  00113C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12913                           
 12914                           ; BSR set to: 0
 12915                           ;inc\CANlib.h: 823: tamp = tamp & 0x000000FF;
 12916  001140  0100               	movlb	0	; () banked
 12917  001142  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 12918  001144  0100               	movlb	0	; () banked
 12919  001146  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12920  001148  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 12921  00114A  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 12922  00114C  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 12923                           
 12924                           ; BSR set to: 0
 12925                           ;inc\CANlib.h: 824: RXF5SIDH = (unsigned char) tamp;
 12926  00114E  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 12927                           
 12928                           ; BSR set to: 0
 12929                           ;inc\CANlib.h: 826: tamp = filter & 0x00000007;
 12930  001152  0E07               	movlw	7
 12931  001154  0100               	movlb	0	; () banked
 12932  001156  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 12933  001158  0100               	movlb	0	; () banked
 12934  00115A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 12935  00115C  0E00               	movlw	0
 12936  00115E  0100               	movlb	0	; () banked
 12937  001160  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 12938  001162  0100               	movlb	0	; () banked
 12939  001164  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 12940  001166  0E00               	movlw	0
 12941  001168  0100               	movlb	0	; () banked
 12942  00116A  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 12943  00116C  0100               	movlb	0	; () banked
 12944  00116E  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 12945  001170  0E00               	movlw	0
 12946  001172  0100               	movlb	0	; () banked
 12947  001174  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 12948  001176  0100               	movlb	0	; () banked
 12949  001178  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 12950                           
 12951                           ; BSR set to: 0
 12952                           ;inc\CANlib.h: 827: tamp = tamp << 5;
 12953  00117A  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 12954  00117E  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 12955  001182  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 12956  001186  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 12957  00118A  0E05               	movlw	5
 12958  00118C                     u6035:
 12959  00118C  90D8               	bcf	status,0,c
 12960  00118E  0100               	movlb	0	; () banked
 12961  001190  377C               	rlcf	??_CANSetFilter& (0+255),f,b
 12962  001192  377D               	rlcf	(??_CANSetFilter+1)& (0+255),f,b
 12963  001194  377E               	rlcf	(??_CANSetFilter+2)& (0+255),f,b
 12964  001196  377F               	rlcf	(??_CANSetFilter+3)& (0+255),f,b
 12965  001198  2EE8               	decfsz	wreg,f,c
 12966  00119A  D7F8               	goto	u6035
 12967  00119C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 12968  0011A0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 12969  0011A4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 12970  0011A8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 12971                           
 12972                           ; BSR set to: 0
 12973                           ;inc\CANlib.h: 828: RXF5SIDL = (unsigned char) tamp;
 12974  0011AC  C081  FF15         	movff	CANSetFilter@tamp,3861	;volatile
 12975  0011B0                     l5143:
 12976                           
 12977                           ; BSR set to: 0
 12978                           ;inc\CANlib.h: 829: }
 12979                           ;inc\CANlib.h: 832: if ((numBuffer ==CAN_FILTER_B1_F1) && (type == CAN_CONFIG_XTD_MSG))
 12980  0011B0  0100               	movlb	0	; () banked
 12981  0011B2  5180               	movf	CANSetFilter@numBuffer& (0+255),w,b
 12982  0011B4  0100               	movlb	0	; () banked
 12983  0011B6  A4D8               	btfss	status,2,c
 12984  0011B8  D089               	goto	l5177
 12985                           
 12986                           ; BSR set to: 0
 12987  0011BA  0EF7               	movlw	247
 12988  0011BC  0100               	movlb	0	; () banked
 12989  0011BE  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 12990  0011C0  A4D8               	btfss	status,2,c
 12991  0011C2  D084               	goto	l5177
 12992                           
 12993                           ; BSR set to: 0
 12994                           ;inc\CANlib.h: 833: {
 12995                           ;inc\CANlib.h: 834: RXF0SIDLbits.EXIDEN = 0x01;
 12996  0011C4  010F               	movlb	15	; () banked
 12997  0011C6  8701               	bsf	1,3,b	;volatile
 12998                           
 12999                           ; BSR set to: 15
 13000                           ;inc\CANlib.h: 836: tamp = filter & 0x000000FF;
 13001  0011C8  0100               	movlb	0	; () banked
 13002  0011CA  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13003  0011CC  0100               	movlb	0	; () banked
 13004  0011CE  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13005  0011D0  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13006  0011D2  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13007  0011D4  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13008                           
 13009                           ; BSR set to: 0
 13010                           ;inc\CANlib.h: 837: RXF0EIDL = (unsigned char) tamp;
 13011  0011D6  C081  FF03         	movff	CANSetFilter@tamp,3843	;volatile
 13012                           
 13013                           ; BSR set to: 0
 13014                           ;inc\CANlib.h: 839: tamp = filter & 0x0000FF00;
 13015  0011DA  0E00               	movlw	0
 13016  0011DC  0100               	movlb	0	; () banked
 13017  0011DE  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13018  0011E0  0100               	movlb	0	; () banked
 13019  0011E2  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13020  0011E4  0EFF               	movlw	255
 13021  0011E6  0100               	movlb	0	; () banked
 13022  0011E8  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13023  0011EA  0100               	movlb	0	; () banked
 13024  0011EC  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13025  0011EE  0E00               	movlw	0
 13026  0011F0  0100               	movlb	0	; () banked
 13027  0011F2  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13028  0011F4  0100               	movlb	0	; () banked
 13029  0011F6  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13030  0011F8  0E00               	movlw	0
 13031  0011FA  0100               	movlb	0	; () banked
 13032  0011FC  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13033  0011FE  0100               	movlb	0	; () banked
 13034  001200  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13035                           
 13036                           ; BSR set to: 0
 13037                           ;inc\CANlib.h: 840: tamp = tamp >> 8;
 13038  001202  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13039  001206  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13040  00120A  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13041  00120E  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13042  001212  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13043  001216  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13044  00121A  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13045  00121E  0100               	movlb	0	; () banked
 13046  001220  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13047  001222  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13048  001226  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13049  00122A  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13050  00122E  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13051                           
 13052                           ; BSR set to: 0
 13053                           ;inc\CANlib.h: 841: RXF0EIDH = (unsigned char) tamp;
 13054  001232  C081  FF02         	movff	CANSetFilter@tamp,3842	;volatile
 13055                           
 13056                           ; BSR set to: 0
 13057                           ;inc\CANlib.h: 843: if (filter & 0x00010000)
 13058  001236  0100               	movlb	0	; () banked
 13059  001238  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13060  00123A  D003               	goto	l463
 13061                           
 13062                           ; BSR set to: 0
 13063                           ;inc\CANlib.h: 844: RXF0SIDLbits.EID16 = 0x01;
 13064  00123C  010F               	movlb	15	; () banked
 13065  00123E  8101               	bsf	1,0,b	;volatile
 13066  001240  D002               	goto	l464
 13067  001242                     l463:
 13068                           
 13069                           ; BSR set to: 0
 13070                           ;inc\CANlib.h: 845: else
 13071                           ;inc\CANlib.h: 846: RXF0SIDLbits.EID16 = 0x00;
 13072  001242  010F               	movlb	15	; () banked
 13073  001244  9101               	bcf	1,0,b	;volatile
 13074  001246                     l464:
 13075                           
 13076                           ; BSR set to: 15
 13077                           ;inc\CANlib.h: 848: if (filter & 0x00020000)
 13078  001246  0100               	movlb	0	; () banked
 13079  001248  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13080  00124A  D003               	goto	l465
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;inc\CANlib.h: 849: RXF0SIDLbits.EID17 = 0x01;
 13084  00124C  010F               	movlb	15	; () banked
 13085  00124E  8301               	bsf	1,1,b	;volatile
 13086  001250  D002               	goto	l466
 13087  001252                     l465:
 13088                           
 13089                           ; BSR set to: 0
 13090                           ;inc\CANlib.h: 850: else
 13091                           ;inc\CANlib.h: 851: RXF0SIDLbits.EID17 = 0x00;
 13092  001252  010F               	movlb	15	; () banked
 13093  001254  9301               	bcf	1,1,b	;volatile
 13094  001256                     l466:
 13095                           
 13096                           ; BSR set to: 15
 13097                           ;inc\CANlib.h: 853: if (filter & 0x00040000)
 13098  001256  0100               	movlb	0	; () banked
 13099  001258  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13100  00125A  D003               	goto	l467
 13101                           
 13102                           ; BSR set to: 0
 13103                           ;inc\CANlib.h: 854: RXF0SIDLbits.SID0 = 0x01;
 13104  00125C  010F               	movlb	15	; () banked
 13105  00125E  8B01               	bsf	1,5,b	;volatile
 13106  001260  D002               	goto	l468
 13107  001262                     l467:
 13108                           
 13109                           ; BSR set to: 0
 13110                           ;inc\CANlib.h: 855: else
 13111                           ;inc\CANlib.h: 856: RXF0SIDLbits.SID0 = 0x00;
 13112  001262  010F               	movlb	15	; () banked
 13113  001264  9B01               	bcf	1,5,b	;volatile
 13114  001266                     l468:
 13115                           
 13116                           ; BSR set to: 15
 13117                           ;inc\CANlib.h: 858: if (filter & 0x00080000)
 13118  001266  0100               	movlb	0	; () banked
 13119  001268  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13120  00126A  D003               	goto	l469
 13121                           
 13122                           ; BSR set to: 0
 13123                           ;inc\CANlib.h: 859: RXF0SIDLbits.SID1 = 0x01;
 13124  00126C  010F               	movlb	15	; () banked
 13125  00126E  8D01               	bsf	1,6,b	;volatile
 13126  001270  D002               	goto	l470
 13127  001272                     l469:
 13128                           
 13129                           ; BSR set to: 0
 13130                           ;inc\CANlib.h: 860: else
 13131                           ;inc\CANlib.h: 861: RXF0SIDLbits.SID1 = 0x00;
 13132  001272  010F               	movlb	15	; () banked
 13133  001274  9D01               	bcf	1,6,b	;volatile
 13134  001276                     l470:
 13135                           
 13136                           ; BSR set to: 15
 13137                           ;inc\CANlib.h: 863: if (filter & 0x00100000)
 13138  001276  0100               	movlb	0	; () banked
 13139  001278  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13140  00127A  D003               	goto	l471
 13141                           
 13142                           ; BSR set to: 0
 13143                           ;inc\CANlib.h: 864: RXF0SIDLbits.SID2 = 0x01 ;
 13144  00127C  010F               	movlb	15	; () banked
 13145  00127E  8F01               	bsf	1,7,b	;volatile
 13146  001280  D002               	goto	l5171
 13147  001282                     l471:
 13148                           
 13149                           ; BSR set to: 0
 13150                           ;inc\CANlib.h: 865: else
 13151                           ;inc\CANlib.h: 866: RXF0SIDLbits.SID2 = 0x00 ;
 13152  001282  010F               	movlb	15	; () banked
 13153  001284  9F01               	bcf	1,7,b	;volatile
 13154  001286                     l5171:
 13155                           
 13156                           ; BSR set to: 15
 13157                           ;inc\CANlib.h: 868: tamp = (filter >> 21);
 13158  001286  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13159  00128A  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13160  00128E  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13161  001292  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13162  001296  0E16               	movlw	22
 13163  001298  D006               	goto	u6110
 13164  00129A                     u6115:
 13165  00129A  0100               	movlb	0	; () banked
 13166  00129C  90D8               	bcf	status,0,c
 13167  00129E  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13168  0012A0  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13169  0012A2  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13170  0012A4  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13171  0012A6                     u6110:
 13172  0012A6  2EE8               	decfsz	wreg,f,c
 13173  0012A8  D7F8               	goto	u6115
 13174  0012AA  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13175  0012AE  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13176  0012B2  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13177  0012B6  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13178                           
 13179                           ; BSR set to: 0
 13180                           ;inc\CANlib.h: 869: tamp = tamp & 0x000000FF;
 13181  0012BA  0100               	movlb	0	; () banked
 13182  0012BC  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13183  0012BE  0100               	movlb	0	; () banked
 13184  0012C0  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13185  0012C2  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13186  0012C4  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13187  0012C6  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13188                           
 13189                           ; BSR set to: 0
 13190                           ;inc\CANlib.h: 870: RXF0SIDH = (unsigned char) tamp;
 13191  0012C8  C081  FF00         	movff	CANSetFilter@tamp,3840	;volatile
 13192  0012CC                     l5177:
 13193                           
 13194                           ; BSR set to: 0
 13195                           ;inc\CANlib.h: 871: }
 13196                           ;inc\CANlib.h: 873: if ((numBuffer ==CAN_FILTER_B1_F2) && (type == CAN_CONFIG_XTD_MSG))
 13197  0012CC  0100               	movlb	0	; () banked
 13198  0012CE  0580               	decf	CANSetFilter@numBuffer& (0+255),w,b
 13199  0012D0  A4D8               	btfss	status,2,c
 13200  0012D2  D089               	goto	l5211
 13201                           
 13202                           ; BSR set to: 0
 13203  0012D4  0EF7               	movlw	247
 13204  0012D6  0100               	movlb	0	; () banked
 13205  0012D8  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13206  0012DA  A4D8               	btfss	status,2,c
 13207  0012DC  D084               	goto	l5211
 13208                           
 13209                           ; BSR set to: 0
 13210                           ;inc\CANlib.h: 874: {
 13211                           ;inc\CANlib.h: 875: RXF1SIDLbits.EXIDEN = 0x01;
 13212  0012DE  010F               	movlb	15	; () banked
 13213  0012E0  8705               	bsf	5,3,b	;volatile
 13214                           
 13215                           ; BSR set to: 15
 13216                           ;inc\CANlib.h: 877: tamp = filter & 0x000000FF;
 13217  0012E2  0100               	movlb	0	; () banked
 13218  0012E4  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13219  0012E6  0100               	movlb	0	; () banked
 13220  0012E8  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13221  0012EA  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13222  0012EC  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13223  0012EE  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13224                           
 13225                           ; BSR set to: 0
 13226                           ;inc\CANlib.h: 878: RXF1EIDL = (unsigned char) tamp;
 13227  0012F0  C081  FF07         	movff	CANSetFilter@tamp,3847	;volatile
 13228                           
 13229                           ; BSR set to: 0
 13230                           ;inc\CANlib.h: 880: tamp = filter & 0x0000FF00;
 13231  0012F4  0E00               	movlw	0
 13232  0012F6  0100               	movlb	0	; () banked
 13233  0012F8  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13234  0012FA  0100               	movlb	0	; () banked
 13235  0012FC  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13236  0012FE  0EFF               	movlw	255
 13237  001300  0100               	movlb	0	; () banked
 13238  001302  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13239  001304  0100               	movlb	0	; () banked
 13240  001306  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13241  001308  0E00               	movlw	0
 13242  00130A  0100               	movlb	0	; () banked
 13243  00130C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13244  00130E  0100               	movlb	0	; () banked
 13245  001310  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13246  001312  0E00               	movlw	0
 13247  001314  0100               	movlb	0	; () banked
 13248  001316  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13249  001318  0100               	movlb	0	; () banked
 13250  00131A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13251                           
 13252                           ; BSR set to: 0
 13253                           ;inc\CANlib.h: 881: tamp = tamp >> 8;
 13254  00131C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13255  001320  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13256  001324  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13257  001328  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13258  00132C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13259  001330  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13260  001334  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13261  001338  0100               	movlb	0	; () banked
 13262  00133A  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13263  00133C  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13264  001340  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13265  001344  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13266  001348  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13267                           
 13268                           ; BSR set to: 0
 13269                           ;inc\CANlib.h: 882: RXF1EIDH = (unsigned char) tamp;
 13270  00134C  C081  FF06         	movff	CANSetFilter@tamp,3846	;volatile
 13271                           
 13272                           ; BSR set to: 0
 13273                           ;inc\CANlib.h: 884: if (filter & 0x00010000)
 13274  001350  0100               	movlb	0	; () banked
 13275  001352  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13276  001354  D003               	goto	l474
 13277                           
 13278                           ; BSR set to: 0
 13279                           ;inc\CANlib.h: 885: RXF1SIDLbits.EID16 = 0x01;
 13280  001356  010F               	movlb	15	; () banked
 13281  001358  8105               	bsf	5,0,b	;volatile
 13282  00135A  D002               	goto	l475
 13283  00135C                     l474:
 13284                           
 13285                           ; BSR set to: 0
 13286                           ;inc\CANlib.h: 886: else
 13287                           ;inc\CANlib.h: 887: RXF1SIDLbits.EID16 = 0x00;
 13288  00135C  010F               	movlb	15	; () banked
 13289  00135E  9105               	bcf	5,0,b	;volatile
 13290  001360                     l475:
 13291                           
 13292                           ; BSR set to: 15
 13293                           ;inc\CANlib.h: 889: if (filter & 0x00020000)
 13294  001360  0100               	movlb	0	; () banked
 13295  001362  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13296  001364  D003               	goto	l476
 13297                           
 13298                           ; BSR set to: 0
 13299                           ;inc\CANlib.h: 890: RXF1SIDLbits.EID17 = 0x01;
 13300  001366  010F               	movlb	15	; () banked
 13301  001368  8305               	bsf	5,1,b	;volatile
 13302  00136A  D002               	goto	l477
 13303  00136C                     l476:
 13304                           
 13305                           ; BSR set to: 0
 13306                           ;inc\CANlib.h: 891: else
 13307                           ;inc\CANlib.h: 892: RXF1SIDLbits.EID17 = 0x00;
 13308  00136C  010F               	movlb	15	; () banked
 13309  00136E  9305               	bcf	5,1,b	;volatile
 13310  001370                     l477:
 13311                           
 13312                           ; BSR set to: 15
 13313                           ;inc\CANlib.h: 894: if (filter & 0x00040000)
 13314  001370  0100               	movlb	0	; () banked
 13315  001372  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13316  001374  D003               	goto	l478
 13317                           
 13318                           ; BSR set to: 0
 13319                           ;inc\CANlib.h: 895: RXF1SIDLbits.SID0 = 0x01;
 13320  001376  010F               	movlb	15	; () banked
 13321  001378  8B05               	bsf	5,5,b	;volatile
 13322  00137A  D002               	goto	l479
 13323  00137C                     l478:
 13324                           
 13325                           ; BSR set to: 0
 13326                           ;inc\CANlib.h: 896: else
 13327                           ;inc\CANlib.h: 897: RXF1SIDLbits.SID0 = 0x00;
 13328  00137C  010F               	movlb	15	; () banked
 13329  00137E  9B05               	bcf	5,5,b	;volatile
 13330  001380                     l479:
 13331                           
 13332                           ; BSR set to: 15
 13333                           ;inc\CANlib.h: 899: if (filter & 0x00080000)
 13334  001380  0100               	movlb	0	; () banked
 13335  001382  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13336  001384  D003               	goto	l480
 13337                           
 13338                           ; BSR set to: 0
 13339                           ;inc\CANlib.h: 900: RXF1SIDLbits.SID1 = 0x01;
 13340  001386  010F               	movlb	15	; () banked
 13341  001388  8D05               	bsf	5,6,b	;volatile
 13342  00138A  D002               	goto	l481
 13343  00138C                     l480:
 13344                           
 13345                           ; BSR set to: 0
 13346                           ;inc\CANlib.h: 901: else
 13347                           ;inc\CANlib.h: 902: RXF1SIDLbits.SID1 = 0x00;
 13348  00138C  010F               	movlb	15	; () banked
 13349  00138E  9D05               	bcf	5,6,b	;volatile
 13350  001390                     l481:
 13351                           
 13352                           ; BSR set to: 15
 13353                           ;inc\CANlib.h: 904: if (filter & 0x00100000)
 13354  001390  0100               	movlb	0	; () banked
 13355  001392  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13356  001394  D003               	goto	l482
 13357                           
 13358                           ; BSR set to: 0
 13359                           ;inc\CANlib.h: 905: RXF1SIDLbits.SID2 = 0x01 ;
 13360  001396  010F               	movlb	15	; () banked
 13361  001398  8F05               	bsf	5,7,b	;volatile
 13362  00139A  D002               	goto	l5205
 13363  00139C                     l482:
 13364                           
 13365                           ; BSR set to: 0
 13366                           ;inc\CANlib.h: 906: else
 13367                           ;inc\CANlib.h: 907: RXF1SIDLbits.SID2 = 0x00 ;
 13368  00139C  010F               	movlb	15	; () banked
 13369  00139E  9F05               	bcf	5,7,b	;volatile
 13370  0013A0                     l5205:
 13371                           
 13372                           ; BSR set to: 15
 13373                           ;inc\CANlib.h: 909: tamp = (filter >> 21);
 13374  0013A0  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13375  0013A4  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13376  0013A8  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13377  0013AC  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13378  0013B0  0E16               	movlw	22
 13379  0013B2  D006               	goto	u6190
 13380  0013B4                     u6195:
 13381  0013B4  0100               	movlb	0	; () banked
 13382  0013B6  90D8               	bcf	status,0,c
 13383  0013B8  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13384  0013BA  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13385  0013BC  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13386  0013BE  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13387  0013C0                     u6190:
 13388  0013C0  2EE8               	decfsz	wreg,f,c
 13389  0013C2  D7F8               	goto	u6195
 13390  0013C4  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13391  0013C8  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13392  0013CC  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13393  0013D0  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13394                           
 13395                           ; BSR set to: 0
 13396                           ;inc\CANlib.h: 910: tamp = tamp & 0x000000FF;
 13397  0013D4  0100               	movlb	0	; () banked
 13398  0013D6  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13399  0013D8  0100               	movlb	0	; () banked
 13400  0013DA  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13401  0013DC  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13402  0013DE  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13403  0013E0  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13404                           
 13405                           ; BSR set to: 0
 13406                           ;inc\CANlib.h: 911: RXF1SIDH = (unsigned char) tamp;
 13407  0013E2  C081  FF04         	movff	CANSetFilter@tamp,3844	;volatile
 13408  0013E6                     l5211:
 13409                           
 13410                           ; BSR set to: 0
 13411                           ;inc\CANlib.h: 912: }
 13412                           ;inc\CANlib.h: 915: if ((numBuffer ==CAN_FILTER_B2_F1) && (type == CAN_CONFIG_XTD_MSG))
 13413  0013E6  0E02               	movlw	2
 13414  0013E8  0100               	movlb	0	; () banked
 13415  0013EA  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13416  0013EC  A4D8               	btfss	status,2,c
 13417  0013EE  D089               	goto	l5245
 13418                           
 13419                           ; BSR set to: 0
 13420  0013F0  0EF7               	movlw	247
 13421  0013F2  0100               	movlb	0	; () banked
 13422  0013F4  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13423  0013F6  A4D8               	btfss	status,2,c
 13424  0013F8  D084               	goto	l5245
 13425                           
 13426                           ; BSR set to: 0
 13427                           ;inc\CANlib.h: 916: {
 13428                           ;inc\CANlib.h: 917: RXF2SIDLbits.EXIDEN = 0x01;
 13429  0013FA  010F               	movlb	15	; () banked
 13430  0013FC  8709               	bsf	9,3,b	;volatile
 13431                           
 13432                           ; BSR set to: 15
 13433                           ;inc\CANlib.h: 919: tamp = filter & 0x000000FF;
 13434  0013FE  0100               	movlb	0	; () banked
 13435  001400  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13436  001402  0100               	movlb	0	; () banked
 13437  001404  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13438  001406  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13439  001408  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13440  00140A  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13441                           
 13442                           ; BSR set to: 0
 13443                           ;inc\CANlib.h: 920: RXF2EIDL = (unsigned char) tamp;
 13444  00140C  C081  FF0B         	movff	CANSetFilter@tamp,3851	;volatile
 13445                           
 13446                           ; BSR set to: 0
 13447                           ;inc\CANlib.h: 922: tamp = filter & 0x0000FF00;
 13448  001410  0E00               	movlw	0
 13449  001412  0100               	movlb	0	; () banked
 13450  001414  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13451  001416  0100               	movlb	0	; () banked
 13452  001418  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13453  00141A  0EFF               	movlw	255
 13454  00141C  0100               	movlb	0	; () banked
 13455  00141E  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13456  001420  0100               	movlb	0	; () banked
 13457  001422  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13458  001424  0E00               	movlw	0
 13459  001426  0100               	movlb	0	; () banked
 13460  001428  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13461  00142A  0100               	movlb	0	; () banked
 13462  00142C  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13463  00142E  0E00               	movlw	0
 13464  001430  0100               	movlb	0	; () banked
 13465  001432  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13466  001434  0100               	movlb	0	; () banked
 13467  001436  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13468                           
 13469                           ; BSR set to: 0
 13470                           ;inc\CANlib.h: 923: tamp = tamp >> 8;
 13471  001438  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13472  00143C  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13473  001440  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13474  001444  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13475  001448  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13476  00144C  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13477  001450  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13478  001454  0100               	movlb	0	; () banked
 13479  001456  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13480  001458  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13481  00145C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13482  001460  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13483  001464  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13484                           
 13485                           ; BSR set to: 0
 13486                           ;inc\CANlib.h: 924: RXF2EIDH = (unsigned char) tamp;
 13487  001468  C081  FF0A         	movff	CANSetFilter@tamp,3850	;volatile
 13488                           
 13489                           ; BSR set to: 0
 13490                           ;inc\CANlib.h: 926: if (filter & 0x00010000)
 13491  00146C  0100               	movlb	0	; () banked
 13492  00146E  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13493  001470  D003               	goto	l485
 13494                           
 13495                           ; BSR set to: 0
 13496                           ;inc\CANlib.h: 927: RXF2SIDLbits.EID16 = 0x01;
 13497  001472  010F               	movlb	15	; () banked
 13498  001474  8109               	bsf	9,0,b	;volatile
 13499  001476  D002               	goto	l486
 13500  001478                     l485:
 13501                           
 13502                           ; BSR set to: 0
 13503                           ;inc\CANlib.h: 928: else
 13504                           ;inc\CANlib.h: 929: RXF2SIDLbits.EID16 = 0x00;
 13505  001478  010F               	movlb	15	; () banked
 13506  00147A  9109               	bcf	9,0,b	;volatile
 13507  00147C                     l486:
 13508                           
 13509                           ; BSR set to: 15
 13510                           ;inc\CANlib.h: 931: if (filter & 0x00020000)
 13511  00147C  0100               	movlb	0	; () banked
 13512  00147E  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13513  001480  D003               	goto	l487
 13514                           
 13515                           ; BSR set to: 0
 13516                           ;inc\CANlib.h: 932: RXF2SIDLbits.EID17 = 0x01;
 13517  001482  010F               	movlb	15	; () banked
 13518  001484  8309               	bsf	9,1,b	;volatile
 13519  001486  D002               	goto	l488
 13520  001488                     l487:
 13521                           
 13522                           ; BSR set to: 0
 13523                           ;inc\CANlib.h: 933: else
 13524                           ;inc\CANlib.h: 934: RXF2SIDLbits.EID17 = 0x00;
 13525  001488  010F               	movlb	15	; () banked
 13526  00148A  9309               	bcf	9,1,b	;volatile
 13527  00148C                     l488:
 13528                           
 13529                           ; BSR set to: 15
 13530                           ;inc\CANlib.h: 936: if (filter & 0x00040000)
 13531  00148C  0100               	movlb	0	; () banked
 13532  00148E  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13533  001490  D003               	goto	l489
 13534                           
 13535                           ; BSR set to: 0
 13536                           ;inc\CANlib.h: 937: RXF2SIDLbits.SID0 = 0x01;
 13537  001492  010F               	movlb	15	; () banked
 13538  001494  8B09               	bsf	9,5,b	;volatile
 13539  001496  D002               	goto	l490
 13540  001498                     l489:
 13541                           
 13542                           ; BSR set to: 0
 13543                           ;inc\CANlib.h: 938: else
 13544                           ;inc\CANlib.h: 939: RXF2SIDLbits.SID0 = 0x00;
 13545  001498  010F               	movlb	15	; () banked
 13546  00149A  9B09               	bcf	9,5,b	;volatile
 13547  00149C                     l490:
 13548                           
 13549                           ; BSR set to: 15
 13550                           ;inc\CANlib.h: 941: if (filter & 0x00080000)
 13551  00149C  0100               	movlb	0	; () banked
 13552  00149E  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13553  0014A0  D003               	goto	l491
 13554                           
 13555                           ; BSR set to: 0
 13556                           ;inc\CANlib.h: 942: RXF2SIDLbits.SID1 = 0x01;
 13557  0014A2  010F               	movlb	15	; () banked
 13558  0014A4  8D09               	bsf	9,6,b	;volatile
 13559  0014A6  D002               	goto	l492
 13560  0014A8                     l491:
 13561                           
 13562                           ; BSR set to: 0
 13563                           ;inc\CANlib.h: 943: else
 13564                           ;inc\CANlib.h: 944: RXF2SIDLbits.SID1 = 0x00;
 13565  0014A8  010F               	movlb	15	; () banked
 13566  0014AA  9D09               	bcf	9,6,b	;volatile
 13567  0014AC                     l492:
 13568                           
 13569                           ; BSR set to: 15
 13570                           ;inc\CANlib.h: 946: if (filter & 0x00100000)
 13571  0014AC  0100               	movlb	0	; () banked
 13572  0014AE  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13573  0014B0  D003               	goto	l493
 13574                           
 13575                           ; BSR set to: 0
 13576                           ;inc\CANlib.h: 947: RXF2SIDLbits.SID2 = 0x01 ;
 13577  0014B2  010F               	movlb	15	; () banked
 13578  0014B4  8F09               	bsf	9,7,b	;volatile
 13579  0014B6  D002               	goto	l5239
 13580  0014B8                     l493:
 13581                           
 13582                           ; BSR set to: 0
 13583                           ;inc\CANlib.h: 948: else
 13584                           ;inc\CANlib.h: 949: RXF2SIDLbits.SID2 = 0x00 ;
 13585  0014B8  010F               	movlb	15	; () banked
 13586  0014BA  9F09               	bcf	9,7,b	;volatile
 13587  0014BC                     l5239:
 13588                           
 13589                           ; BSR set to: 15
 13590                           ;inc\CANlib.h: 951: tamp = (filter >> 21);
 13591  0014BC  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13592  0014C0  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13593  0014C4  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13594  0014C8  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13595  0014CC  0E16               	movlw	22
 13596  0014CE  D006               	goto	u6270
 13597  0014D0                     u6275:
 13598  0014D0  0100               	movlb	0	; () banked
 13599  0014D2  90D8               	bcf	status,0,c
 13600  0014D4  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13601  0014D6  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13602  0014D8  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13603  0014DA  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13604  0014DC                     u6270:
 13605  0014DC  2EE8               	decfsz	wreg,f,c
 13606  0014DE  D7F8               	goto	u6275
 13607  0014E0  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13608  0014E4  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13609  0014E8  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13610  0014EC  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13611                           
 13612                           ; BSR set to: 0
 13613                           ;inc\CANlib.h: 952: tamp = tamp & 0x000000FF;
 13614  0014F0  0100               	movlb	0	; () banked
 13615  0014F2  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13616  0014F4  0100               	movlb	0	; () banked
 13617  0014F6  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13618  0014F8  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13619  0014FA  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13620  0014FC  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13621                           
 13622                           ; BSR set to: 0
 13623                           ;inc\CANlib.h: 953: RXF2SIDH = (unsigned char) tamp;
 13624  0014FE  C081  FF08         	movff	CANSetFilter@tamp,3848	;volatile
 13625  001502                     l5245:
 13626                           
 13627                           ; BSR set to: 0
 13628                           ;inc\CANlib.h: 954: }
 13629                           ;inc\CANlib.h: 956: if ((numBuffer ==CAN_FILTER_B2_F2) && (type == CAN_CONFIG_XTD_MSG))
 13630  001502  0E03               	movlw	3
 13631  001504  0100               	movlb	0	; () banked
 13632  001506  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13633  001508  A4D8               	btfss	status,2,c
 13634  00150A  D089               	goto	l5279
 13635                           
 13636                           ; BSR set to: 0
 13637  00150C  0EF7               	movlw	247
 13638  00150E  0100               	movlb	0	; () banked
 13639  001510  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13640  001512  A4D8               	btfss	status,2,c
 13641  001514  D084               	goto	l5279
 13642                           
 13643                           ; BSR set to: 0
 13644                           ;inc\CANlib.h: 957: {
 13645                           ;inc\CANlib.h: 958: RXF3SIDLbits.EXIDEN = 0x01;
 13646  001516  010F               	movlb	15	; () banked
 13647  001518  870D               	bsf	13,3,b	;volatile
 13648                           
 13649                           ; BSR set to: 15
 13650                           ;inc\CANlib.h: 960: tamp = filter & 0x000000FF;
 13651  00151A  0100               	movlb	0	; () banked
 13652  00151C  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13653  00151E  0100               	movlb	0	; () banked
 13654  001520  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13655  001522  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13656  001524  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13657  001526  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13658                           
 13659                           ; BSR set to: 0
 13660                           ;inc\CANlib.h: 961: RXF3EIDL = (unsigned char) tamp;
 13661  001528  C081  FF0F         	movff	CANSetFilter@tamp,3855	;volatile
 13662                           
 13663                           ; BSR set to: 0
 13664                           ;inc\CANlib.h: 963: tamp = filter & 0x0000FF00;
 13665  00152C  0E00               	movlw	0
 13666  00152E  0100               	movlb	0	; () banked
 13667  001530  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13668  001532  0100               	movlb	0	; () banked
 13669  001534  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13670  001536  0EFF               	movlw	255
 13671  001538  0100               	movlb	0	; () banked
 13672  00153A  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13673  00153C  0100               	movlb	0	; () banked
 13674  00153E  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13675  001540  0E00               	movlw	0
 13676  001542  0100               	movlb	0	; () banked
 13677  001544  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13678  001546  0100               	movlb	0	; () banked
 13679  001548  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13680  00154A  0E00               	movlw	0
 13681  00154C  0100               	movlb	0	; () banked
 13682  00154E  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13683  001550  0100               	movlb	0	; () banked
 13684  001552  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13685                           
 13686                           ; BSR set to: 0
 13687                           ;inc\CANlib.h: 964: tamp = tamp >> 8;
 13688  001554  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13689  001558  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13690  00155C  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13691  001560  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13692  001564  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13693  001568  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13694  00156C  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13695  001570  0100               	movlb	0	; () banked
 13696  001572  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13697  001574  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13698  001578  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13699  00157C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13700  001580  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13701                           
 13702                           ; BSR set to: 0
 13703                           ;inc\CANlib.h: 965: RXF3EIDH = (unsigned char) tamp;
 13704  001584  C081  FF0E         	movff	CANSetFilter@tamp,3854	;volatile
 13705                           
 13706                           ; BSR set to: 0
 13707                           ;inc\CANlib.h: 967: if (filter & 0x00010000)
 13708  001588  0100               	movlb	0	; () banked
 13709  00158A  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13710  00158C  D003               	goto	l496
 13711                           
 13712                           ; BSR set to: 0
 13713                           ;inc\CANlib.h: 968: RXF3SIDLbits.EID16 = 0x01;
 13714  00158E  010F               	movlb	15	; () banked
 13715  001590  810D               	bsf	13,0,b	;volatile
 13716  001592  D002               	goto	l497
 13717  001594                     l496:
 13718                           
 13719                           ; BSR set to: 0
 13720                           ;inc\CANlib.h: 969: else
 13721                           ;inc\CANlib.h: 970: RXF3SIDLbits.EID16 = 0x00;
 13722  001594  010F               	movlb	15	; () banked
 13723  001596  910D               	bcf	13,0,b	;volatile
 13724  001598                     l497:
 13725                           
 13726                           ; BSR set to: 15
 13727                           ;inc\CANlib.h: 972: if (filter & 0x00020000)
 13728  001598  0100               	movlb	0	; () banked
 13729  00159A  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13730  00159C  D003               	goto	l498
 13731                           
 13732                           ; BSR set to: 0
 13733                           ;inc\CANlib.h: 973: RXF3SIDLbits.EID17 = 0x01;
 13734  00159E  010F               	movlb	15	; () banked
 13735  0015A0  830D               	bsf	13,1,b	;volatile
 13736  0015A2  D002               	goto	l499
 13737  0015A4                     l498:
 13738                           
 13739                           ; BSR set to: 0
 13740                           ;inc\CANlib.h: 974: else
 13741                           ;inc\CANlib.h: 975: RXF3SIDLbits.EID17 = 0x00;
 13742  0015A4  010F               	movlb	15	; () banked
 13743  0015A6  930D               	bcf	13,1,b	;volatile
 13744  0015A8                     l499:
 13745                           
 13746                           ; BSR set to: 15
 13747                           ;inc\CANlib.h: 977: if (filter & 0x00040000)
 13748  0015A8  0100               	movlb	0	; () banked
 13749  0015AA  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13750  0015AC  D003               	goto	l500
 13751                           
 13752                           ; BSR set to: 0
 13753                           ;inc\CANlib.h: 978: RXF3SIDLbits.SID0 = 0x01;
 13754  0015AE  010F               	movlb	15	; () banked
 13755  0015B0  8B0D               	bsf	13,5,b	;volatile
 13756  0015B2  D002               	goto	l501
 13757  0015B4                     l500:
 13758                           
 13759                           ; BSR set to: 0
 13760                           ;inc\CANlib.h: 979: else
 13761                           ;inc\CANlib.h: 980: RXF3SIDLbits.SID0 = 0x00;
 13762  0015B4  010F               	movlb	15	; () banked
 13763  0015B6  9B0D               	bcf	13,5,b	;volatile
 13764  0015B8                     l501:
 13765                           
 13766                           ; BSR set to: 15
 13767                           ;inc\CANlib.h: 982: if (filter & 0x00080000)
 13768  0015B8  0100               	movlb	0	; () banked
 13769  0015BA  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13770  0015BC  D003               	goto	l502
 13771                           
 13772                           ; BSR set to: 0
 13773                           ;inc\CANlib.h: 983: RXF3SIDLbits.SID1 = 0x01;
 13774  0015BE  010F               	movlb	15	; () banked
 13775  0015C0  8D0D               	bsf	13,6,b	;volatile
 13776  0015C2  D002               	goto	l503
 13777  0015C4                     l502:
 13778                           
 13779                           ; BSR set to: 0
 13780                           ;inc\CANlib.h: 984: else
 13781                           ;inc\CANlib.h: 985: RXF3SIDLbits.SID1 = 0x00;
 13782  0015C4  010F               	movlb	15	; () banked
 13783  0015C6  9D0D               	bcf	13,6,b	;volatile
 13784  0015C8                     l503:
 13785                           
 13786                           ; BSR set to: 15
 13787                           ;inc\CANlib.h: 987: if (filter & 0x00100000)
 13788  0015C8  0100               	movlb	0	; () banked
 13789  0015CA  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 13790  0015CC  D003               	goto	l504
 13791                           
 13792                           ; BSR set to: 0
 13793                           ;inc\CANlib.h: 988: RXF3SIDLbits.SID2 = 0x01 ;
 13794  0015CE  010F               	movlb	15	; () banked
 13795  0015D0  8F0D               	bsf	13,7,b	;volatile
 13796  0015D2  D002               	goto	l5273
 13797  0015D4                     l504:
 13798                           
 13799                           ; BSR set to: 0
 13800                           ;inc\CANlib.h: 989: else
 13801                           ;inc\CANlib.h: 990: RXF3SIDLbits.SID2 = 0x00 ;
 13802  0015D4  010F               	movlb	15	; () banked
 13803  0015D6  9F0D               	bcf	13,7,b	;volatile
 13804  0015D8                     l5273:
 13805                           
 13806                           ; BSR set to: 15
 13807                           ;inc\CANlib.h: 992: tamp = (filter >> 21);
 13808  0015D8  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 13809  0015DC  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 13810  0015E0  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 13811  0015E4  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 13812  0015E8  0E16               	movlw	22
 13813  0015EA  D006               	goto	u6350
 13814  0015EC                     u6355:
 13815  0015EC  0100               	movlb	0	; () banked
 13816  0015EE  90D8               	bcf	status,0,c
 13817  0015F0  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 13818  0015F2  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 13819  0015F4  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 13820  0015F6  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 13821  0015F8                     u6350:
 13822  0015F8  2EE8               	decfsz	wreg,f,c
 13823  0015FA  D7F8               	goto	u6355
 13824  0015FC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13825  001600  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13826  001604  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13827  001608  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13828                           
 13829                           ; BSR set to: 0
 13830                           ;inc\CANlib.h: 993: tamp = tamp & 0x000000FF;
 13831  00160C  0100               	movlb	0	; () banked
 13832  00160E  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 13833  001610  0100               	movlb	0	; () banked
 13834  001612  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13835  001614  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13836  001616  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13837  001618  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13838                           
 13839                           ; BSR set to: 0
 13840                           ;inc\CANlib.h: 994: RXF3SIDH = (unsigned char) tamp;
 13841  00161A  C081  FF0C         	movff	CANSetFilter@tamp,3852	;volatile
 13842  00161E                     l5279:
 13843                           
 13844                           ; BSR set to: 0
 13845                           ;inc\CANlib.h: 995: }
 13846                           ;inc\CANlib.h: 997: if ((numBuffer ==CAN_FILTER_B2_F3) && (type == CAN_CONFIG_XTD_MSG))
 13847  00161E  0E04               	movlw	4
 13848  001620  0100               	movlb	0	; () banked
 13849  001622  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 13850  001624  A4D8               	btfss	status,2,c
 13851  001626  D089               	goto	l5313
 13852                           
 13853                           ; BSR set to: 0
 13854  001628  0EF7               	movlw	247
 13855  00162A  0100               	movlb	0	; () banked
 13856  00162C  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 13857  00162E  A4D8               	btfss	status,2,c
 13858  001630  D084               	goto	l5313
 13859                           
 13860                           ; BSR set to: 0
 13861                           ;inc\CANlib.h: 998: {
 13862                           ;inc\CANlib.h: 999: RXF4SIDLbits.EXIDEN = 0x01;
 13863  001632  010F               	movlb	15	; () banked
 13864  001634  8711               	bsf	17,3,b	;volatile
 13865                           
 13866                           ; BSR set to: 15
 13867                           ;inc\CANlib.h: 1001: tamp = filter & 0x000000FF;
 13868  001636  0100               	movlb	0	; () banked
 13869  001638  5177               	movf	CANSetFilter@filter& (0+255),w,b
 13870  00163A  0100               	movlb	0	; () banked
 13871  00163C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13872  00163E  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 13873  001640  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 13874  001642  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 13875                           
 13876                           ; BSR set to: 0
 13877                           ;inc\CANlib.h: 1002: RXF4EIDL = (unsigned char) tamp;
 13878  001644  C081  FF13         	movff	CANSetFilter@tamp,3859	;volatile
 13879                           
 13880                           ; BSR set to: 0
 13881                           ;inc\CANlib.h: 1004: tamp = filter & 0x0000FF00;
 13882  001648  0E00               	movlw	0
 13883  00164A  0100               	movlb	0	; () banked
 13884  00164C  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 13885  00164E  0100               	movlb	0	; () banked
 13886  001650  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 13887  001652  0EFF               	movlw	255
 13888  001654  0100               	movlb	0	; () banked
 13889  001656  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 13890  001658  0100               	movlb	0	; () banked
 13891  00165A  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 13892  00165C  0E00               	movlw	0
 13893  00165E  0100               	movlb	0	; () banked
 13894  001660  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 13895  001662  0100               	movlb	0	; () banked
 13896  001664  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 13897  001666  0E00               	movlw	0
 13898  001668  0100               	movlb	0	; () banked
 13899  00166A  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 13900  00166C  0100               	movlb	0	; () banked
 13901  00166E  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 13902                           
 13903                           ; BSR set to: 0
 13904                           ;inc\CANlib.h: 1005: tamp = tamp >> 8;
 13905  001670  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 13906  001674  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 13907  001678  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 13908  00167C  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 13909  001680  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 13910  001684  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 13911  001688  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 13912  00168C  0100               	movlb	0	; () banked
 13913  00168E  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 13914  001690  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 13915  001694  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 13916  001698  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 13917  00169C  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 13918                           
 13919                           ; BSR set to: 0
 13920                           ;inc\CANlib.h: 1006: RXF4EIDH = (unsigned char) tamp;
 13921  0016A0  C081  FF12         	movff	CANSetFilter@tamp,3858	;volatile
 13922                           
 13923                           ; BSR set to: 0
 13924                           ;inc\CANlib.h: 1008: if (filter & 0x00010000)
 13925  0016A4  0100               	movlb	0	; () banked
 13926  0016A6  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 13927  0016A8  D003               	goto	l507
 13928                           
 13929                           ; BSR set to: 0
 13930                           ;inc\CANlib.h: 1009: RXF4SIDLbits.EID16 = 0x01;
 13931  0016AA  010F               	movlb	15	; () banked
 13932  0016AC  8111               	bsf	17,0,b	;volatile
 13933  0016AE  D002               	goto	l508
 13934  0016B0                     l507:
 13935                           
 13936                           ; BSR set to: 0
 13937                           ;inc\CANlib.h: 1010: else
 13938                           ;inc\CANlib.h: 1011: RXF4SIDLbits.EID16 = 0x00;
 13939  0016B0  010F               	movlb	15	; () banked
 13940  0016B2  9111               	bcf	17,0,b	;volatile
 13941  0016B4                     l508:
 13942                           
 13943                           ; BSR set to: 15
 13944                           ;inc\CANlib.h: 1013: if (filter & 0x00020000)
 13945  0016B4  0100               	movlb	0	; () banked
 13946  0016B6  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 13947  0016B8  D003               	goto	l509
 13948                           
 13949                           ; BSR set to: 0
 13950                           ;inc\CANlib.h: 1014: RXF4SIDLbits.EID17 = 0x01;
 13951  0016BA  010F               	movlb	15	; () banked
 13952  0016BC  8311               	bsf	17,1,b	;volatile
 13953  0016BE  D002               	goto	l510
 13954  0016C0                     l509:
 13955                           
 13956                           ; BSR set to: 0
 13957                           ;inc\CANlib.h: 1015: else
 13958                           ;inc\CANlib.h: 1016: RXF4SIDLbits.EID17 = 0x00;
 13959  0016C0  010F               	movlb	15	; () banked
 13960  0016C2  9311               	bcf	17,1,b	;volatile
 13961  0016C4                     l510:
 13962                           
 13963                           ; BSR set to: 15
 13964                           ;inc\CANlib.h: 1018: if (filter & 0x00040000)
 13965  0016C4  0100               	movlb	0	; () banked
 13966  0016C6  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 13967  0016C8  D003               	goto	l511
 13968                           
 13969                           ; BSR set to: 0
 13970                           ;inc\CANlib.h: 1019: RXF4SIDLbits.SID0 = 0x01;
 13971  0016CA  010F               	movlb	15	; () banked
 13972  0016CC  8B11               	bsf	17,5,b	;volatile
 13973  0016CE  D002               	goto	l512
 13974  0016D0                     l511:
 13975                           
 13976                           ; BSR set to: 0
 13977                           ;inc\CANlib.h: 1020: else
 13978                           ;inc\CANlib.h: 1021: RXF4SIDLbits.SID0 = 0x00;
 13979  0016D0  010F               	movlb	15	; () banked
 13980  0016D2  9B11               	bcf	17,5,b	;volatile
 13981  0016D4                     l512:
 13982                           
 13983                           ; BSR set to: 15
 13984                           ;inc\CANlib.h: 1023: if (filter & 0x00080000)
 13985  0016D4  0100               	movlb	0	; () banked
 13986  0016D6  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 13987  0016D8  D003               	goto	l513
 13988                           
 13989                           ; BSR set to: 0
 13990                           ;inc\CANlib.h: 1024: RXF4SIDLbits.SID1 = 0x01;
 13991  0016DA  010F               	movlb	15	; () banked
 13992  0016DC  8D11               	bsf	17,6,b	;volatile
 13993  0016DE  D002               	goto	l514
 13994  0016E0                     l513:
 13995                           
 13996                           ; BSR set to: 0
 13997                           ;inc\CANlib.h: 1025: else
 13998                           ;inc\CANlib.h: 1026: RXF4SIDLbits.SID1 = 0x00;
 13999  0016E0  010F               	movlb	15	; () banked
 14000  0016E2  9D11               	bcf	17,6,b	;volatile
 14001  0016E4                     l514:
 14002                           
 14003                           ; BSR set to: 15
 14004                           ;inc\CANlib.h: 1028: if (filter & 0x00100000)
 14005  0016E4  0100               	movlb	0	; () banked
 14006  0016E6  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14007  0016E8  D003               	goto	l515
 14008                           
 14009                           ; BSR set to: 0
 14010                           ;inc\CANlib.h: 1029: RXF4SIDLbits.SID2 = 0x01 ;
 14011  0016EA  010F               	movlb	15	; () banked
 14012  0016EC  8F11               	bsf	17,7,b	;volatile
 14013  0016EE  D002               	goto	l5307
 14014  0016F0                     l515:
 14015                           
 14016                           ; BSR set to: 0
 14017                           ;inc\CANlib.h: 1030: else
 14018                           ;inc\CANlib.h: 1031: RXF4SIDLbits.SID2 = 0x00 ;
 14019  0016F0  010F               	movlb	15	; () banked
 14020  0016F2  9F11               	bcf	17,7,b	;volatile
 14021  0016F4                     l5307:
 14022                           
 14023                           ; BSR set to: 15
 14024                           ;inc\CANlib.h: 1033: tamp = (filter >> 21);
 14025  0016F4  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14026  0016F8  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14027  0016FC  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14028  001700  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14029  001704  0E16               	movlw	22
 14030  001706  D006               	goto	u6430
 14031  001708                     u6435:
 14032  001708  0100               	movlb	0	; () banked
 14033  00170A  90D8               	bcf	status,0,c
 14034  00170C  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14035  00170E  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14036  001710  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14037  001712  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14038  001714                     u6430:
 14039  001714  2EE8               	decfsz	wreg,f,c
 14040  001716  D7F8               	goto	u6435
 14041  001718  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14042  00171C  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14043  001720  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14044  001724  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14045                           
 14046                           ; BSR set to: 0
 14047                           ;inc\CANlib.h: 1034: tamp = tamp & 0x000000FF;
 14048  001728  0100               	movlb	0	; () banked
 14049  00172A  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14050  00172C  0100               	movlb	0	; () banked
 14051  00172E  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14052  001730  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14053  001732  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14054  001734  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14055                           
 14056                           ; BSR set to: 0
 14057                           ;inc\CANlib.h: 1035: RXF4SIDH = (unsigned char) tamp;
 14058  001736  C081  FF10         	movff	CANSetFilter@tamp,3856	;volatile
 14059  00173A                     l5313:
 14060                           
 14061                           ; BSR set to: 0
 14062                           ;inc\CANlib.h: 1036: }
 14063                           ;inc\CANlib.h: 1038: if ((numBuffer ==CAN_FILTER_B2_F4) && (type == CAN_CONFIG_XTD_MSG))
 14064  00173A  0E05               	movlw	5
 14065  00173C  0100               	movlb	0	; () banked
 14066  00173E  1980               	xorwf	CANSetFilter@numBuffer& (0+255),w,b
 14067  001740  A4D8               	btfss	status,2,c
 14068  001742  0012               	return	
 14069                           
 14070                           ; BSR set to: 0
 14071  001744  0EF7               	movlw	247
 14072  001746  0100               	movlb	0	; () banked
 14073  001748  197B               	xorwf	CANSetFilter@type& (0+255),w,b
 14074  00174A  A4D8               	btfss	status,2,c
 14075  00174C  0012               	return	
 14076                           
 14077                           ; BSR set to: 0
 14078                           ;inc\CANlib.h: 1039: {
 14079                           ;inc\CANlib.h: 1040: RXF5SIDLbits.EXIDEN = 0x01;
 14080  00174E  010F               	movlb	15	; () banked
 14081  001750  8715               	bsf	21,3,b	;volatile
 14082                           
 14083                           ; BSR set to: 15
 14084                           ;inc\CANlib.h: 1042: tamp = filter & 0x000000FF;
 14085  001752  0100               	movlb	0	; () banked
 14086  001754  5177               	movf	CANSetFilter@filter& (0+255),w,b
 14087  001756  0100               	movlb	0	; () banked
 14088  001758  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14089  00175A  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14090  00175C  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14091  00175E  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14092                           
 14093                           ; BSR set to: 0
 14094                           ;inc\CANlib.h: 1043: RXF5EIDL = (unsigned char) tamp;
 14095  001760  C081  FF17         	movff	CANSetFilter@tamp,3863	;volatile
 14096                           
 14097                           ; BSR set to: 0
 14098                           ;inc\CANlib.h: 1045: tamp = filter & 0x0000FF00;
 14099  001764  0E00               	movlw	0
 14100  001766  0100               	movlb	0	; () banked
 14101  001768  1577               	andwf	CANSetFilter@filter& (0+255),w,b
 14102  00176A  0100               	movlb	0	; () banked
 14103  00176C  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14104  00176E  0EFF               	movlw	255
 14105  001770  0100               	movlb	0	; () banked
 14106  001772  1578               	andwf	(CANSetFilter@filter+1)& (0+255),w,b
 14107  001774  0100               	movlb	0	; () banked
 14108  001776  6F82               	movwf	(CANSetFilter@tamp+1)& (0+255),b
 14109  001778  0E00               	movlw	0
 14110  00177A  0100               	movlb	0	; () banked
 14111  00177C  1579               	andwf	(CANSetFilter@filter+2)& (0+255),w,b
 14112  00177E  0100               	movlb	0	; () banked
 14113  001780  6F83               	movwf	(CANSetFilter@tamp+2)& (0+255),b
 14114  001782  0E00               	movlw	0
 14115  001784  0100               	movlb	0	; () banked
 14116  001786  157A               	andwf	(CANSetFilter@filter+3)& (0+255),w,b
 14117  001788  0100               	movlb	0	; () banked
 14118  00178A  6F84               	movwf	(CANSetFilter@tamp+3)& (0+255),b
 14119                           
 14120                           ; BSR set to: 0
 14121                           ;inc\CANlib.h: 1046: tamp = tamp >> 8;
 14122  00178C  C081  F07C         	movff	CANSetFilter@tamp,??_CANSetFilter
 14123  001790  C082  F07D         	movff	CANSetFilter@tamp+1,??_CANSetFilter+1
 14124  001794  C083  F07E         	movff	CANSetFilter@tamp+2,??_CANSetFilter+2
 14125  001798  C084  F07F         	movff	CANSetFilter@tamp+3,??_CANSetFilter+3
 14126  00179C  C07D  F07C         	movff	??_CANSetFilter+1,??_CANSetFilter
 14127  0017A0  C07E  F07D         	movff	??_CANSetFilter+2,??_CANSetFilter+1
 14128  0017A4  C07F  F07E         	movff	??_CANSetFilter+3,??_CANSetFilter+2
 14129  0017A8  0100               	movlb	0	; () banked
 14130  0017AA  6B7F               	clrf	(??_CANSetFilter+3)& (0+255),b
 14131  0017AC  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14132  0017B0  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14133  0017B4  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14134  0017B8  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14135                           
 14136                           ; BSR set to: 0
 14137                           ;inc\CANlib.h: 1047: RXF5EIDH = (unsigned char) tamp;
 14138  0017BC  C081  FF16         	movff	CANSetFilter@tamp,3862	;volatile
 14139                           
 14140                           ; BSR set to: 0
 14141                           ;inc\CANlib.h: 1049: if (filter & 0x00010000)
 14142  0017C0  0100               	movlb	0	; () banked
 14143  0017C2  A179               	btfss	(CANSetFilter@filter+2)& (0+255),0,b
 14144  0017C4  D003               	goto	l518
 14145                           
 14146                           ; BSR set to: 0
 14147                           ;inc\CANlib.h: 1050: RXF5SIDLbits.EID16 = 0x01;
 14148  0017C6  010F               	movlb	15	; () banked
 14149  0017C8  8115               	bsf	21,0,b	;volatile
 14150  0017CA  D002               	goto	l519
 14151  0017CC                     l518:
 14152                           
 14153                           ; BSR set to: 0
 14154                           ;inc\CANlib.h: 1051: else
 14155                           ;inc\CANlib.h: 1052: RXF5SIDLbits.EID16 = 0x00;
 14156  0017CC  010F               	movlb	15	; () banked
 14157  0017CE  9115               	bcf	21,0,b	;volatile
 14158  0017D0                     l519:
 14159                           
 14160                           ; BSR set to: 15
 14161                           ;inc\CANlib.h: 1054: if (filter & 0x00020000)
 14162  0017D0  0100               	movlb	0	; () banked
 14163  0017D2  A379               	btfss	(CANSetFilter@filter+2)& (0+255),1,b
 14164  0017D4  D003               	goto	l520
 14165                           
 14166                           ; BSR set to: 0
 14167                           ;inc\CANlib.h: 1055: RXF5SIDLbits.EID17 = 0x01;
 14168  0017D6  010F               	movlb	15	; () banked
 14169  0017D8  8315               	bsf	21,1,b	;volatile
 14170  0017DA  D002               	goto	l521
 14171  0017DC                     l520:
 14172                           
 14173                           ; BSR set to: 0
 14174                           ;inc\CANlib.h: 1056: else
 14175                           ;inc\CANlib.h: 1057: RXF5SIDLbits.EID17 = 0x00;
 14176  0017DC  010F               	movlb	15	; () banked
 14177  0017DE  9315               	bcf	21,1,b	;volatile
 14178  0017E0                     l521:
 14179                           
 14180                           ; BSR set to: 15
 14181                           ;inc\CANlib.h: 1059: if (filter & 0x00040000)
 14182  0017E0  0100               	movlb	0	; () banked
 14183  0017E2  A579               	btfss	(CANSetFilter@filter+2)& (0+255),2,b
 14184  0017E4  D003               	goto	l522
 14185                           
 14186                           ; BSR set to: 0
 14187                           ;inc\CANlib.h: 1060: RXF5SIDLbits.SID0 = 0x01;
 14188  0017E6  010F               	movlb	15	; () banked
 14189  0017E8  8B15               	bsf	21,5,b	;volatile
 14190  0017EA  D002               	goto	l523
 14191  0017EC                     l522:
 14192                           
 14193                           ; BSR set to: 0
 14194                           ;inc\CANlib.h: 1061: else
 14195                           ;inc\CANlib.h: 1062: RXF5SIDLbits.SID0 = 0x00;
 14196  0017EC  010F               	movlb	15	; () banked
 14197  0017EE  9B15               	bcf	21,5,b	;volatile
 14198  0017F0                     l523:
 14199                           
 14200                           ; BSR set to: 15
 14201                           ;inc\CANlib.h: 1064: if (filter & 0x00080000)
 14202  0017F0  0100               	movlb	0	; () banked
 14203  0017F2  A779               	btfss	(CANSetFilter@filter+2)& (0+255),3,b
 14204  0017F4  D003               	goto	l524
 14205                           
 14206                           ; BSR set to: 0
 14207                           ;inc\CANlib.h: 1065: RXF5SIDLbits.SID1 = 0x01;
 14208  0017F6  010F               	movlb	15	; () banked
 14209  0017F8  8D15               	bsf	21,6,b	;volatile
 14210  0017FA  D002               	goto	l525
 14211  0017FC                     l524:
 14212                           
 14213                           ; BSR set to: 0
 14214                           ;inc\CANlib.h: 1066: else
 14215                           ;inc\CANlib.h: 1067: RXF5SIDLbits.SID1 = 0x00;
 14216  0017FC  010F               	movlb	15	; () banked
 14217  0017FE  9D15               	bcf	21,6,b	;volatile
 14218  001800                     l525:
 14219                           
 14220                           ; BSR set to: 15
 14221                           ;inc\CANlib.h: 1069: if (filter & 0x00100000)
 14222  001800  0100               	movlb	0	; () banked
 14223  001802  A979               	btfss	(CANSetFilter@filter+2)& (0+255),4,b
 14224  001804  D003               	goto	l526
 14225                           
 14226                           ; BSR set to: 0
 14227                           ;inc\CANlib.h: 1070: RXF5SIDLbits.SID2 = 0x01 ;
 14228  001806  010F               	movlb	15	; () banked
 14229  001808  8F15               	bsf	21,7,b	;volatile
 14230  00180A  D002               	goto	l5341
 14231  00180C                     l526:
 14232                           
 14233                           ; BSR set to: 0
 14234                           ;inc\CANlib.h: 1071: else
 14235                           ;inc\CANlib.h: 1072: RXF5SIDLbits.SID2 = 0x00 ;
 14236  00180C  010F               	movlb	15	; () banked
 14237  00180E  9F15               	bcf	21,7,b	;volatile
 14238  001810                     l5341:
 14239                           
 14240                           ; BSR set to: 15
 14241                           ;inc\CANlib.h: 1074: tamp = (filter >> 21);
 14242  001810  C077  F07C         	movff	CANSetFilter@filter,??_CANSetFilter
 14243  001814  C078  F07D         	movff	CANSetFilter@filter+1,??_CANSetFilter+1
 14244  001818  C079  F07E         	movff	CANSetFilter@filter+2,??_CANSetFilter+2
 14245  00181C  C07A  F07F         	movff	CANSetFilter@filter+3,??_CANSetFilter+3
 14246  001820  0E16               	movlw	22
 14247  001822  D006               	goto	u6510
 14248  001824                     u6515:
 14249  001824  0100               	movlb	0	; () banked
 14250  001826  90D8               	bcf	status,0,c
 14251  001828  337F               	rrcf	(??_CANSetFilter+3)& (0+255),f,b
 14252  00182A  337E               	rrcf	(??_CANSetFilter+2)& (0+255),f,b
 14253  00182C  337D               	rrcf	(??_CANSetFilter+1)& (0+255),f,b
 14254  00182E  337C               	rrcf	??_CANSetFilter& (0+255),f,b
 14255  001830                     u6510:
 14256  001830  2EE8               	decfsz	wreg,f,c
 14257  001832  D7F8               	goto	u6515
 14258  001834  C07C  F081         	movff	??_CANSetFilter,CANSetFilter@tamp
 14259  001838  C07D  F082         	movff	??_CANSetFilter+1,CANSetFilter@tamp+1
 14260  00183C  C07E  F083         	movff	??_CANSetFilter+2,CANSetFilter@tamp+2
 14261  001840  C07F  F084         	movff	??_CANSetFilter+3,CANSetFilter@tamp+3
 14262                           
 14263                           ; BSR set to: 0
 14264                           ;inc\CANlib.h: 1075: tamp = tamp & 0x000000FF;
 14265  001844  0100               	movlb	0	; () banked
 14266  001846  5181               	movf	CANSetFilter@tamp& (0+255),w,b
 14267  001848  0100               	movlb	0	; () banked
 14268  00184A  6F81               	movwf	CANSetFilter@tamp& (0+255),b
 14269  00184C  6B82               	clrf	(CANSetFilter@tamp+1)& (0+255),b
 14270  00184E  6B83               	clrf	(CANSetFilter@tamp+2)& (0+255),b
 14271  001850  6B84               	clrf	(CANSetFilter@tamp+3)& (0+255),b
 14272                           
 14273                           ; BSR set to: 0
 14274                           ;inc\CANlib.h: 1076: RXF5SIDH = (unsigned char) tamp;
 14275  001852  C081  FF14         	movff	CANSetFilter@tamp,3860	;volatile
 14276  001856  0012               	return	
 14277  001858                     __end_of_CANSetFilter:
 14278                           	opt stack 0
 14279                           tblptru	equ	0xFF8
 14280                           tblptrh	equ	0xFF7
 14281                           tblptrl	equ	0xFF6
 14282                           tablat	equ	0xFF5
 14283                           prodh	equ	0xFF4
 14284                           prodl	equ	0xFF3
 14285                           intcon	equ	0xFF2
 14286                           intcon2	equ	0xFF1
 14287                           postinc0	equ	0xFEE
 14288                           wreg	equ	0xFE8
 14289                           postdec1	equ	0xFE5
 14290                           fsr1l	equ	0xFE1
 14291                           indf2	equ	0xFDF
 14292                           postinc2	equ	0xFDE
 14293                           postdec2	equ	0xFDD
 14294                           fsr2h	equ	0xFDA
 14295                           fsr2l	equ	0xFD9
 14296                           status	equ	0xFD8
 14297                           
 14298 ;; *************** function _CANOperationMode *****************
 14299 ;; Defined at:
 14300 ;;		line 207 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 14301 ;; Parameters:    Size  Location     Type
 14302 ;;  mode            1    wreg     enum E16307
 14303 ;; Auto vars:     Size  Location     Type
 14304 ;;  mode            1   23[BANK0 ] enum E16307
 14305 ;; Return value:  Size  Location     Type
 14306 ;;		None               void
 14307 ;; Registers used:
 14308 ;;		wreg, status,2, status,0
 14309 ;; Tracked objects:
 14310 ;;		On entry : 0/0
 14311 ;;		On exit  : 0/0
 14312 ;;		Unchanged: 0/0
 14313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14315 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14317 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14318 ;;Total ram usage:        1 bytes
 14319 ;; Hardware stack levels used:    1
 14320 ;; Hardware stack levels required when called:    4
 14321 ;; This function calls:
 14322 ;;		Nothing
 14323 ;; This function is called by:
 14324 ;;		_CANInitialize
 14325 ;; This function uses a non-reentrant model
 14326 ;;
 14327                           
 14328                           	psect	text33
 14329  005F9C                     __ptext33:
 14330                           	opt stack 0
 14331  005F9C                     _CANOperationMode:
 14332                           	opt stack 24
 14333                           
 14334                           ; BSR set to: 0
 14335                           ;incstack = 0
 14336                           ;CANOperationMode@mode stored from wreg
 14337  005F9C  0100               	movlb	0	; () banked
 14338  005F9E  6F77               	movwf	CANOperationMode@mode& (0+255),b
 14339                           
 14340                           ;inc\CANlib.h: 209: CANCON = mode;
 14341  005FA0  C077  FF6F         	movff	CANOperationMode@mode,3951	;volatile
 14342  005FA4                     l4937:
 14343  005FA4  506E               	movf	3950,w,c	;volatile
 14344  005FA6  0BE0               	andlw	224
 14345  005FA8  0100               	movlb	0	; () banked
 14346  005FAA  1977               	xorwf	CANOperationMode@mode& (0+255),w,b
 14347  005FAC  B4D8               	btfsc	status,2,c
 14348  005FAE  0012               	return	
 14349  005FB0  D7F9               	goto	l4937
 14350  005FB2                     __end_of_CANOperationMode:
 14351                           	opt stack 0
 14352                           tblptru	equ	0xFF8
 14353                           tblptrh	equ	0xFF7
 14354                           tblptrl	equ	0xFF6
 14355                           tablat	equ	0xFF5
 14356                           prodh	equ	0xFF4
 14357                           prodl	equ	0xFF3
 14358                           intcon	equ	0xFF2
 14359                           intcon2	equ	0xFF1
 14360                           postinc0	equ	0xFEE
 14361                           wreg	equ	0xFE8
 14362                           postdec1	equ	0xFE5
 14363                           fsr1l	equ	0xFE1
 14364                           indf2	equ	0xFDF
 14365                           postinc2	equ	0xFDE
 14366                           postdec2	equ	0xFDD
 14367                           fsr2h	equ	0xFDA
 14368                           fsr2l	equ	0xFD9
 14369                           status	equ	0xFD8
 14370                           
 14371 ;; *************** function _can_interpreter *****************
 14372 ;; Defined at:
 14373 ;;		line 444 in file "parcheggio.c"
 14374 ;; Parameters:    Size  Location     Type
 14375 ;;		None
 14376 ;; Auto vars:     Size  Location     Type
 14377 ;;		None
 14378 ;; Return value:  Size  Location     Type
 14379 ;;		None               void
 14380 ;; Registers used:
 14381 ;;		wreg, status,2, status,0
 14382 ;; Tracked objects:
 14383 ;;		On entry : 0/0
 14384 ;;		On exit  : 0/0
 14385 ;;		Unchanged: 0/0
 14386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14389 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14390 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14391 ;;Total ram usage:        4 bytes
 14392 ;; Hardware stack levels used:    1
 14393 ;; Hardware stack levels required when called:    4
 14394 ;; This function calls:
 14395 ;;		Nothing
 14396 ;; This function is called by:
 14397 ;;		_main
 14398 ;; This function uses a non-reentrant model
 14399 ;;
 14400                           
 14401                           	psect	text34
 14402  005D54                     __ptext34:
 14403                           	opt stack 0
 14404  005D54                     _can_interpreter:
 14405                           	opt stack 26
 14406                           
 14407                           ;parcheggio.c: 445: left_speed = data_speed_rx[1];
 14408                           
 14409                           ; BSR set to: 0
 14410                           ;incstack = 0
 14411  005D54  C109  F03C         	movff	_data_speed_rx+1,_left_speed
 14412  005D58  6A3D               	clrf	_left_speed+1,c
 14413                           
 14414                           ;parcheggio.c: 446: left_speed = ((left_speed << 8) | (data_speed_rx[0]));
 14415  005D5A  503C               	movf	_left_speed,w,c
 14416  005D5C  0100               	movlb	0	; () banked
 14417  005D5E  6F77               	movwf	??_can_interpreter& (0+255),b
 14418  005D60  0101               	movlb	1	; () banked
 14419  005D62  5108               	movf	_data_speed_rx& (0+255),w,b
 14420  005D64  6E3C               	movwf	_left_speed,c
 14421  005D66  C077  F03D         	movff	??_can_interpreter,_left_speed+1
 14422                           
 14423                           ; BSR set to: 1
 14424                           ;parcheggio.c: 447: right_speed = data_speed_rx[3];
 14425  005D6A  C10B  F03E         	movff	_data_speed_rx+3,_right_speed
 14426  005D6E  6A3F               	clrf	_right_speed+1,c
 14427                           
 14428                           ;parcheggio.c: 448: right_speed = ((right_speed << 8) | (data_speed_rx[2]));
 14429  005D70  503E               	movf	_right_speed,w,c
 14430  005D72  0100               	movlb	0	; () banked
 14431  005D74  6F77               	movwf	??_can_interpreter& (0+255),b
 14432  005D76  0101               	movlb	1	; () banked
 14433  005D78  510A               	movf	(_data_speed_rx+2)& (0+255),w,b
 14434  005D7A  6E3E               	movwf	_right_speed,c
 14435  005D7C  C077  F03F         	movff	??_can_interpreter,_right_speed+1
 14436                           
 14437                           ; BSR set to: 1
 14438                           ;parcheggio.c: 449: actual_speed = (right_speed + left_speed) / 2;
 14439  005D80  503C               	movf	_left_speed,w,c
 14440  005D82  243E               	addwf	_right_speed,w,c
 14441  005D84  0100               	movlb	0	; () banked
 14442  005D86  6F77               	movwf	??_can_interpreter& (0+255),b
 14443  005D88  503D               	movf	_left_speed+1,w,c
 14444  005D8A  203F               	addwfc	_right_speed+1,w,c
 14445  005D8C  0100               	movlb	0	; () banked
 14446  005D8E  6F78               	movwf	(??_can_interpreter+1)& (0+255),b
 14447  005D90  90D8               	bcf	status,0,c
 14448  005D92  0100               	movlb	0	; () banked
 14449  005D94  3178               	rrcf	(??_can_interpreter+1)& (0+255),w,b
 14450  005D96  0100               	movlb	0	; () banked
 14451  005D98  6F79               	movwf	(??_can_interpreter+2)& (0+255),b
 14452  005D9A  0100               	movlb	0	; () banked
 14453  005D9C  3177               	rrcf	??_can_interpreter& (0+255),w,b
 14454  005D9E  0101               	movlb	1	; () banked
 14455  005DA0  6F44               	movwf	_actual_speed& (0+255),b
 14456  005DA2  C079  F145         	movff	??_can_interpreter+2,_actual_speed+1
 14457                           
 14458                           ; BSR set to: 1
 14459  005DA6  0012               	return		;funcret
 14460  005DA8                     __end_of_can_interpreter:
 14461                           	opt stack 0
 14462                           tblptru	equ	0xFF8
 14463                           tblptrh	equ	0xFF7
 14464                           tblptrl	equ	0xFF6
 14465                           tablat	equ	0xFF5
 14466                           prodh	equ	0xFF4
 14467                           prodl	equ	0xFF3
 14468                           intcon	equ	0xFF2
 14469                           intcon2	equ	0xFF1
 14470                           postinc0	equ	0xFEE
 14471                           wreg	equ	0xFE8
 14472                           postdec1	equ	0xFE5
 14473                           fsr1l	equ	0xFE1
 14474                           indf2	equ	0xFDF
 14475                           postinc2	equ	0xFDE
 14476                           postdec2	equ	0xFDD
 14477                           fsr2h	equ	0xFDA
 14478                           fsr2l	equ	0xFD9
 14479                           status	equ	0xFD8
 14480                           
 14481 ;; *************** function _ISR_Bassa *****************
 14482 ;; Defined at:
 14483 ;;		line 111 in file "parcheggio.c"
 14484 ;; Parameters:    Size  Location     Type
 14485 ;;		None
 14486 ;; Auto vars:     Size  Location     Type
 14487 ;;  i               1   34[COMRAM] unsigned char 
 14488 ;;  gigi            1   33[COMRAM] unsigned char 
 14489 ;; Return value:  Size  Location     Type
 14490 ;;		None               void
 14491 ;; Registers used:
 14492 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14493 ;; Tracked objects:
 14494 ;;		On entry : 0/0
 14495 ;;		On exit  : 0/0
 14496 ;;		Unchanged: 0/0
 14497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14499 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14500 ;;      Temps:         21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14501 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14502 ;;Total ram usage:       23 bytes
 14503 ;; Hardware stack levels used:    1
 14504 ;; Hardware stack levels required when called:    3
 14505 ;; This function calls:
 14506 ;;		_CANreceiveMessage
 14507 ;; This function is called by:
 14508 ;;		Interrupt level 1
 14509 ;; This function uses a non-reentrant model
 14510 ;;
 14511                           
 14512                           	psect	intcodelo
 14513  000018                     __pintcodelo:
 14514                           	opt stack 0
 14515  000018                     _ISR_Bassa:
 14516                           	opt stack 21
 14517                           
 14518                           ; BSR set to: 1
 14519                           ;incstack = 0
 14520  000018  8048               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 14521  00001A  CFD8 F011          	movff	status,??_ISR_Bassa+4
 14522  00001E  CFE8 F012          	movff	wreg,??_ISR_Bassa+5
 14523  000022  CFE0 F013          	movff	bsr,??_ISR_Bassa+6
 14524  000026  CFFA F014          	movff	pclath,??_ISR_Bassa+7
 14525  00002A  CFFB F015          	movff	pclatu,??_ISR_Bassa+8
 14526  00002E  CFE9 F016          	movff	fsr0l,??_ISR_Bassa+9
 14527  000032  CFEA F017          	movff	fsr0h,??_ISR_Bassa+10
 14528  000036  CFE1 F018          	movff	fsr1l,??_ISR_Bassa+11
 14529  00003A  CFE2 F019          	movff	fsr1h,??_ISR_Bassa+12
 14530  00003E  CFD9 F01A          	movff	fsr2l,??_ISR_Bassa+13
 14531  000042  CFDA F01B          	movff	fsr2h,??_ISR_Bassa+14
 14532  000046  CFF3 F01C          	movff	prodl,??_ISR_Bassa+15
 14533  00004A  CFF4 F01D          	movff	prodh,??_ISR_Bassa+16
 14534  00004E  CFF6 F01E          	movff	tblptrl,??_ISR_Bassa+17
 14535  000052  CFF7 F01F          	movff	tblptrh,??_ISR_Bassa+18
 14536  000056  CFF8 F020          	movff	tblptru,??_ISR_Bassa+19
 14537  00005A  CFF5 F021          	movff	tablat,??_ISR_Bassa+20
 14538                           
 14539                           ;parcheggio.c: 113: if (INTCONbits.TMR0IF == 1) {
 14540  00005E  A4F2               	btfss	intcon,2,c	;volatile
 14541  000060  D036               	goto	i1l6063
 14542                           
 14543                           ;parcheggio.c: 114: INTCONbits.INT0IE = 0;
 14544  000062  98F2               	bcf	intcon,4,c	;volatile
 14545                           
 14546                           ;parcheggio.c: 115: T0CONbits.TMR0ON = 0;
 14547  000064  9ED5               	bcf	4053,7,c	;volatile
 14548                           
 14549                           ;parcheggio.c: 116: TMR0H = 0x34;
 14550  000066  0E34               	movlw	52
 14551  000068  6ED7               	movwf	4055,c	;volatile
 14552                           
 14553                           ;parcheggio.c: 117: TMR0L = 0xE0;
 14554  00006A  0EE0               	movlw	224
 14555  00006C  6ED6               	movwf	4054,c	;volatile
 14556                           
 14557                           ;parcheggio.c: 118: T0CONbits.TMR0ON = 1;
 14558  00006E  8ED5               	bsf	4053,7,c	;volatile
 14559                           
 14560                           ;parcheggio.c: 119: if (distance_error == 1) {
 14561  000070  A646               	btfss	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14562  000072  D00C               	goto	i1l6033
 14563                           
 14564                           ;parcheggio.c: 120: sensor_distance[MUX_index] = 5000;
 14565  000074  5042               	movf	_MUX_index,w,c	;volatile
 14566  000076  0D02               	mullw	2
 14567  000078  0E24               	movlw	low _sensor_distance
 14568  00007A  24F3               	addwf	prodl,w,c
 14569  00007C  6ED9               	movwf	fsr2l,c
 14570  00007E  0E00               	movlw	high _sensor_distance
 14571  000080  20F4               	addwfc	prodh,w,c
 14572  000082  6EDA               	movwf	fsr2h,c
 14573  000084  0E88               	movlw	136
 14574  000086  6EDE               	movwf	postinc2,c
 14575  000088  0E13               	movlw	19
 14576  00008A  6EDD               	movwf	postdec2,c
 14577  00008C                     i1l6033:
 14578                           
 14579                           ;parcheggio.c: 121: }
 14580                           ;parcheggio.c: 122: MUX_index++;
 14581  00008C  2A42               	incf	_MUX_index,f,c	;volatile
 14582                           
 14583                           ;parcheggio.c: 123: if (MUX_index == 8) {
 14584  00008E  0E08               	movlw	8
 14585  000090  1842               	xorwf	_MUX_index,w,c	;volatile
 14586  000092  A4D8               	btfss	status,2,c
 14587  000094  D002               	goto	i1l697
 14588                           
 14589                           ;parcheggio.c: 124: MUX_index = 0;
 14590  000096  0E00               	movlw	0
 14591  000098  6E42               	movwf	_MUX_index,c	;volatile
 14592  00009A                     i1l697:
 14593                           
 14594                           ;parcheggio.c: 125: }
 14595                           ;parcheggio.c: 127: unsigned char gigi = 0;
 14596  00009A  0E00               	movlw	0
 14597  00009C  6E22               	movwf	ISR_Bassa@gigi,c
 14598                           
 14599                           ;parcheggio.c: 128: gigi = MUX_select[MUX_index];
 14600  00009E  5042               	movf	_MUX_index,w,c	;volatile
 14601  0000A0  0D01               	mullw	1
 14602  0000A2  0E00               	movlw	low _MUX_select
 14603  0000A4  24F3               	addwf	prodl,w,c
 14604  0000A6  6ED9               	movwf	fsr2l,c
 14605  0000A8  0E01               	movlw	high _MUX_select
 14606  0000AA  20F4               	addwfc	prodh,w,c
 14607  0000AC  6EDA               	movwf	fsr2h,c
 14608  0000AE  50DF               	movf	indf2,w,c
 14609  0000B0  6E22               	movwf	ISR_Bassa@gigi,c
 14610                           
 14611                           ;parcheggio.c: 129: PORTA = gigi;
 14612  0000B2  C022  FF80         	movff	ISR_Bassa@gigi,3968	;volatile
 14613                           
 14614                           ;parcheggio.c: 130: TRISBbits.RB0 = 0;
 14615  0000B6  9093               	bcf	3987,0,c	;volatile
 14616                           
 14617                           ;parcheggio.c: 131: LATBbits.LATB0 = 1;
 14618  0000B8  808A               	bsf	3978,0,c	;volatile
 14619                           
 14620                           ;parcheggio.c: 132: _delay((unsigned long)((15)*(16000000/4000000.0)));
 14621  0000BA  0E14               	movlw	20
 14622  0000BC                     i1u989_27:
 14623  0000BC  2EE8               	decfsz	wreg,f,c
 14624  0000BE  D7FE               	goto	i1u989_27
 14625                           
 14626                           ;parcheggio.c: 133: distance_error = 1;
 14627  0000C0  8646               	bsf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 14628                           
 14629                           ;parcheggio.c: 134: LATBbits.LATB0 = 0;
 14630  0000C2  908A               	bcf	3978,0,c	;volatile
 14631                           
 14632                           ;parcheggio.c: 135: TRISBbits.RB0 = 1;
 14633  0000C4  8093               	bsf	3987,0,c	;volatile
 14634                           
 14635                           ;parcheggio.c: 136: INTCONbits.INT0IF = 0;
 14636  0000C6  92F2               	bcf	intcon,1,c	;volatile
 14637                           
 14638                           ;parcheggio.c: 137: INTCONbits.INT0IE = 1;
 14639  0000C8  88F2               	bsf	intcon,4,c	;volatile
 14640                           
 14641                           ;parcheggio.c: 138: INTCONbits.TMR0IF = 0;
 14642  0000CA  94F2               	bcf	intcon,2,c	;volatile
 14643                           
 14644                           ;parcheggio.c: 139: INTCON2bits.INTEDG0 = 1;
 14645  0000CC  8CF1               	bsf	intcon2,6,c	;volatile
 14646  0000CE                     i1l6063:
 14647                           
 14648                           ;parcheggio.c: 140: }
 14649                           ;parcheggio.c: 142: if ((PIR3bits.RXB0IF == 1) || (PIR3bits.RXB1IF == 1)) {
 14650  0000CE  A0A4               	btfss	4004,0,c	;volatile
 14651  0000D0  B2A4               	btfsc	4004,1,c	;volatile
 14652  0000D2  D001               	goto	i1l6067
 14653  0000D4  D09B               	goto	i1l711
 14654  0000D6                     i1l6067:
 14655                           
 14656                           ;parcheggio.c: 143: CANreceiveMessage(&msg);
 14657  0000D6  0E4E               	movlw	low _msg
 14658  0000D8  6E01               	movwf	CANreceiveMessage@msg,c
 14659  0000DA  0E01               	movlw	high _msg
 14660  0000DC  6E02               	movwf	CANreceiveMessage@msg+1,c
 14661  0000DE  ECB7  F012         	call	_CANreceiveMessage	;wreg free
 14662                           
 14663                           ;parcheggio.c: 144: if (msg.identifier == 0b00000001101) {
 14664  0000E2  0E0D               	movlw	13
 14665  0000E4  0101               	movlb	1	; () banked
 14666  0000E6  194E               	xorwf	_msg& (0+255),w,b
 14667  0000E8  0101               	movlb	1	; () banked
 14668  0000EA  114F               	iorwf	(_msg+1)& (0+255),w,b
 14669  0000EC  0101               	movlb	1	; () banked
 14670  0000EE  1150               	iorwf	(_msg+2)& (0+255),w,b
 14671  0000F0  0101               	movlb	1	; () banked
 14672  0000F2  1151               	iorwf	(_msg+3)& (0+255),w,b
 14673  0000F4  B4D8               	btfsc	status,2,c
 14674                           
 14675                           ; BSR set to: 1
 14676                           ;parcheggio.c: 145: asd = 0;
 14677  0000F6  9246               	bcf	_asd/(0+8),_asd& (0+7),c	;volatile
 14678                           
 14679                           ; BSR set to: 1
 14680                           ;parcheggio.c: 146: }
 14681                           ;parcheggio.c: 147: if ((msg.identifier == 0b00000000111) && (msg.RTR != 1)) {
 14682                           
 14683                           ; BSR set to: 1
 14684  0000F8  0E07               	movlw	7
 14685  0000FA  0101               	movlb	1	; () banked
 14686  0000FC  194E               	xorwf	_msg& (0+255),w,b
 14687  0000FE  0101               	movlb	1	; () banked
 14688  000100  114F               	iorwf	(_msg+1)& (0+255),w,b
 14689  000102  0101               	movlb	1	; () banked
 14690  000104  1150               	iorwf	(_msg+2)& (0+255),w,b
 14691  000106  0101               	movlb	1	; () banked
 14692  000108  1151               	iorwf	(_msg+3)& (0+255),w,b
 14693  00010A  A4D8               	btfss	status,2,c
 14694  00010C  D02B               	goto	i1l6089
 14695                           
 14696                           ; BSR set to: 1
 14697  00010E  0101               	movlb	1	; () banked
 14698  000110  055C               	decf	(_msg+14)& (0+255),w,b
 14699  000112  B4D8               	btfsc	status,2,c
 14700  000114  D027               	goto	i1l6089
 14701                           
 14702                           ; BSR set to: 1
 14703                           ;parcheggio.c: 148: distance_average = 0;
 14704  000116  0E00               	movlw	0
 14705  000118  6E37               	movwf	_distance_average+1,c	;volatile
 14706  00011A  0E00               	movlw	0
 14707  00011C  6E36               	movwf	_distance_average,c	;volatile
 14708                           
 14709                           ; BSR set to: 1
 14710                           ;parcheggio.c: 149: distance_dx = msg.data[1];
 14711  00011E  C153  F038         	movff	_msg+5,_distance_dx	;volatile
 14712  000122  6A39               	clrf	_distance_dx+1,c	;volatile
 14713                           
 14714                           ;parcheggio.c: 150: distance_dx = ((distance_dx << 8) | msg.data[0]);
 14715  000124  5038               	movf	_distance_dx,w,c	;volatile
 14716  000126  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14717  000128  0101               	movlb	1	; () banked
 14718  00012A  5152               	movf	(_msg+4)& (0+255),w,b
 14719  00012C  6E38               	movwf	_distance_dx,c	;volatile
 14720  00012E  C00D  F039         	movff	??_ISR_Bassa,_distance_dx+1	;volatile
 14721                           
 14722                           ; BSR set to: 1
 14723                           ;parcheggio.c: 151: distance_sx = msg.data[3];
 14724  000132  C155  F03A         	movff	_msg+7,_distance_sx	;volatile
 14725  000136  6A3B               	clrf	_distance_sx+1,c	;volatile
 14726                           
 14727                           ;parcheggio.c: 152: distance_sx = ((distance_sx << 8) | msg.data[2]);
 14728  000138  503A               	movf	_distance_sx,w,c	;volatile
 14729  00013A  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14730  00013C  0101               	movlb	1	; () banked
 14731  00013E  5154               	movf	(_msg+6)& (0+255),w,b
 14732  000140  6E3A               	movwf	_distance_sx,c	;volatile
 14733  000142  C00D  F03B         	movff	??_ISR_Bassa,_distance_sx+1	;volatile
 14734                           
 14735                           ; BSR set to: 1
 14736                           ;parcheggio.c: 153: distance_average = (distance_sx + distance_dx) / 2;
 14737  000146  5038               	movf	_distance_dx,w,c	;volatile
 14738  000148  243A               	addwf	_distance_sx,w,c	;volatile
 14739  00014A  6E0D               	movwf	??_ISR_Bassa& (0+255),c
 14740  00014C  5039               	movf	_distance_dx+1,w,c	;volatile
 14741  00014E  203B               	addwfc	_distance_sx+1,w,c	;volatile
 14742  000150  6E0E               	movwf	(??_ISR_Bassa+1)& (0+255),c
 14743  000152  90D8               	bcf	status,0,c
 14744  000154  300E               	rrcf	??_ISR_Bassa+1,w,c
 14745  000156  6E0F               	movwf	(??_ISR_Bassa+2)& (0+255),c
 14746  000158  300D               	rrcf	??_ISR_Bassa,w,c
 14747  00015A  6E36               	movwf	_distance_average,c	;volatile
 14748  00015C  C00F  F037         	movff	??_ISR_Bassa+2,_distance_average+1	;volatile
 14749                           
 14750                           ; BSR set to: 1
 14751                           ;parcheggio.c: 154: distance_received = 1;
 14752  000160  8846               	bsf	_distance_received/(0+8),_distance_received& (0+7),c	;volatile
 14753                           
 14754                           ; BSR set to: 1
 14755                           ;parcheggio.c: 155: distance_received1 = 1;
 14756  000162  8A46               	bsf	_distance_received1/(0+8),_distance_received1& (0+7),c	;volatile
 14757  000164                     i1l6089:
 14758                           
 14759                           ; BSR set to: 1
 14760                           ;parcheggio.c: 156: }
 14761                           ;parcheggio.c: 157: if (msg.identifier == 0b00000001010) {
 14762  000164  0E0A               	movlw	10
 14763  000166  0101               	movlb	1	; () banked
 14764  000168  194E               	xorwf	_msg& (0+255),w,b
 14765  00016A  0101               	movlb	1	; () banked
 14766  00016C  114F               	iorwf	(_msg+1)& (0+255),w,b
 14767  00016E  0101               	movlb	1	; () banked
 14768  000170  1150               	iorwf	(_msg+2)& (0+255),w,b
 14769  000172  0101               	movlb	1	; () banked
 14770  000174  1151               	iorwf	(_msg+3)& (0+255),w,b
 14771  000176  A4D8               	btfss	status,2,c
 14772  000178  D00C               	goto	i1l6095
 14773                           
 14774                           ; BSR set to: 1
 14775                           ;parcheggio.c: 158: if (msg.data[0] == 1) {
 14776  00017A  0101               	movlb	1	; () banked
 14777  00017C  0552               	decf	(_msg+4)& (0+255),w,b
 14778  00017E  A4D8               	btfss	status,2,c
 14779  000180  D003               	goto	i1l704
 14780                           
 14781                           ; BSR set to: 1
 14782                           ;parcheggio.c: 159: activation = 1;
 14783  000182  8046               	bsf	_activation/(0+8),_activation& (0+7),c	;volatile
 14784                           
 14785                           ;parcheggio.c: 160: PORTBbits.RB6 = 1;
 14786  000184  8C81               	bsf	3969,6,c	;volatile
 14787                           
 14788                           ;parcheggio.c: 161: } else {
 14789  000186  D005               	goto	i1l6095
 14790  000188                     i1l704:
 14791                           
 14792                           ; BSR set to: 1
 14793                           ;parcheggio.c: 162: activation = 0;
 14794  000188  9046               	bcf	_activation/(0+8),_activation& (0+7),c	;volatile
 14795                           
 14796                           ;parcheggio.c: 163: PORTBbits.RB4 = 0;
 14797  00018A  9881               	bcf	3969,4,c	;volatile
 14798                           
 14799                           ;parcheggio.c: 164: PORTBbits.RB5 = 0;
 14800  00018C  9A81               	bcf	3969,5,c	;volatile
 14801                           
 14802                           ;parcheggio.c: 165: PORTBbits.RB6 = 0;
 14803  00018E  9C81               	bcf	3969,6,c	;volatile
 14804                           
 14805                           ;parcheggio.c: 166: request_sent = 0;
 14806  000190  9247               	bcf	_request_sent/(0+8),_request_sent& (0+7),c	;volatile
 14807  000192                     i1l6095:
 14808                           
 14809                           ; BSR set to: 1
 14810                           ;parcheggio.c: 167: }
 14811                           ;parcheggio.c: 168: }
 14812                           ;parcheggio.c: 169: if (msg.identifier == 0b00000001100) {
 14813  000192  0E0C               	movlw	12
 14814  000194  0101               	movlb	1	; () banked
 14815  000196  194E               	xorwf	_msg& (0+255),w,b
 14816  000198  0101               	movlb	1	; () banked
 14817  00019A  114F               	iorwf	(_msg+1)& (0+255),w,b
 14818  00019C  0101               	movlb	1	; () banked
 14819  00019E  1150               	iorwf	(_msg+2)& (0+255),w,b
 14820  0001A0  0101               	movlb	1	; () banked
 14821  0001A2  1151               	iorwf	(_msg+3)& (0+255),w,b
 14822  0001A4  B4D8               	btfsc	status,2,c
 14823                           
 14824                           ; BSR set to: 1
 14825                           ;parcheggio.c: 170: start_operation = 1;
 14826  0001A6  8647               	bsf	_start_operation/(0+8),_start_operation& (0+7),c	;volatile
 14827                           
 14828                           ; BSR set to: 1
 14829                           ;parcheggio.c: 171: }
 14830                           ;parcheggio.c: 172: if (msg.identifier == 0b00000000110) {
 14831                           
 14832                           ; BSR set to: 1
 14833  0001A8  0E06               	movlw	6
 14834  0001AA  0101               	movlb	1	; () banked
 14835  0001AC  194E               	xorwf	_msg& (0+255),w,b
 14836  0001AE  0101               	movlb	1	; () banked
 14837  0001B0  114F               	iorwf	(_msg+1)& (0+255),w,b
 14838  0001B2  0101               	movlb	1	; () banked
 14839  0001B4  1150               	iorwf	(_msg+2)& (0+255),w,b
 14840  0001B6  0101               	movlb	1	; () banked
 14841  0001B8  1151               	iorwf	(_msg+3)& (0+255),w,b
 14842  0001BA  A4D8               	btfss	status,2,c
 14843  0001BC  D025               	goto	i1l707
 14844                           
 14845                           ; BSR set to: 1
 14846                           ;parcheggio.c: 173: for (unsigned char i = 0; i < 8; i++) {
 14847  0001BE  0E00               	movlw	0
 14848  0001C0  6E23               	movwf	ISR_Bassa@i,c
 14849  0001C2                     i1l6103:
 14850                           
 14851                           ; BSR set to: 1
 14852  0001C2  0E07               	movlw	7
 14853  0001C4  6423               	cpfsgt	ISR_Bassa@i,c
 14854  0001C6  D001               	goto	i1l6107
 14855  0001C8  D014               	goto	i1l6113
 14856  0001CA                     i1l6107:
 14857                           
 14858                           ;parcheggio.c: 174: data_speed_rx[i] = msg.data[i];
 14859  0001CA  5023               	movf	ISR_Bassa@i,w,c
 14860  0001CC  0D01               	mullw	1
 14861  0001CE  0E52               	movlw	low (_msg+4)
 14862  0001D0  24F3               	addwf	prodl,w,c
 14863  0001D2  6ED9               	movwf	fsr2l,c
 14864  0001D4  0E01               	movlw	high (_msg+4)
 14865  0001D6  20F4               	addwfc	prodh,w,c
 14866  0001D8  6EDA               	movwf	fsr2h,c
 14867  0001DA  5023               	movf	ISR_Bassa@i,w,c
 14868  0001DC  0D01               	mullw	1
 14869  0001DE  0E08               	movlw	low _data_speed_rx
 14870  0001E0  24F3               	addwf	prodl,w,c
 14871  0001E2  6EE1               	movwf	fsr1l,c
 14872  0001E4  0E01               	movlw	high _data_speed_rx
 14873  0001E6  20F4               	addwfc	prodh,w,c
 14874  0001E8  6EE2               	movwf	fsr1h,c
 14875  0001EA  CFDF FFE7          	movff	indf2,indf1
 14876  0001EE  2A23               	incf	ISR_Bassa@i,f,c
 14877  0001F0  D7E8               	goto	i1l6103
 14878  0001F2                     i1l6113:
 14879                           
 14880                           ;parcheggio.c: 175: }
 14881                           ;parcheggio.c: 176: if (msg.identifier == 0b00000001101) {
 14882  0001F2  0E0D               	movlw	13
 14883  0001F4  0101               	movlb	1	; () banked
 14884  0001F6  194E               	xorwf	_msg& (0+255),w,b
 14885  0001F8  0101               	movlb	1	; () banked
 14886  0001FA  114F               	iorwf	(_msg+1)& (0+255),w,b
 14887  0001FC  0101               	movlb	1	; () banked
 14888  0001FE  1150               	iorwf	(_msg+2)& (0+255),w,b
 14889  000200  0101               	movlb	1	; () banked
 14890  000202  1151               	iorwf	(_msg+3)& (0+255),w,b
 14891  000204  B4D8               	btfsc	status,2,c
 14892                           
 14893                           ; BSR set to: 1
 14894                           ;parcheggio.c: 177: distance_wait = 0;
 14895  000206  9C46               	bcf	_distance_wait/(0+8),_distance_wait& (0+7),c	;volatile
 14896  000208                     i1l707:
 14897                           
 14898                           ; BSR set to: 1
 14899                           ;parcheggio.c: 178: }
 14900                           ;parcheggio.c: 180: }
 14901                           ;parcheggio.c: 182: PIR3bits.RXB0IF = 0;
 14902  000208  90A4               	bcf	4004,0,c	;volatile
 14903                           
 14904                           ;parcheggio.c: 183: PIR3bits.RXB1IF = 0;
 14905  00020A  92A4               	bcf	4004,1,c	;volatile
 14906  00020C                     i1l711:
 14907  00020C  C021  FFF5         	movff	??_ISR_Bassa+20,tablat
 14908  000210  C020  FFF8         	movff	??_ISR_Bassa+19,tblptru
 14909  000214  C01F  FFF7         	movff	??_ISR_Bassa+18,tblptrh
 14910  000218  C01E  FFF6         	movff	??_ISR_Bassa+17,tblptrl
 14911  00021C  C01D  FFF4         	movff	??_ISR_Bassa+16,prodh
 14912  000220  C01C  FFF3         	movff	??_ISR_Bassa+15,prodl
 14913  000224  C01B  FFDA         	movff	??_ISR_Bassa+14,fsr2h
 14914  000228  C01A  FFD9         	movff	??_ISR_Bassa+13,fsr2l
 14915  00022C  C019  FFE2         	movff	??_ISR_Bassa+12,fsr1h
 14916  000230  C018  FFE1         	movff	??_ISR_Bassa+11,fsr1l
 14917  000234  C017  FFEA         	movff	??_ISR_Bassa+10,fsr0h
 14918  000238  C016  FFE9         	movff	??_ISR_Bassa+9,fsr0l
 14919  00023C  C015  FFFB         	movff	??_ISR_Bassa+8,pclatu
 14920  000240  C014  FFFA         	movff	??_ISR_Bassa+7,pclath
 14921  000244  C013  FFE0         	movff	??_ISR_Bassa+6,bsr
 14922  000248  C012  FFE8         	movff	??_ISR_Bassa+5,wreg
 14923  00024C  C011  FFD8         	movff	??_ISR_Bassa+4,status
 14924  000250  9048               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 14925  000252  0010               	retfie	
 14926  000254                     __end_of_ISR_Bassa:
 14927                           	opt stack 0
 14928                           pclatu	equ	0xFFB
 14929                           pclath	equ	0xFFA
 14930                           tblptru	equ	0xFF8
 14931                           tblptrh	equ	0xFF7
 14932                           tblptrl	equ	0xFF6
 14933                           tablat	equ	0xFF5
 14934                           prodh	equ	0xFF4
 14935                           prodl	equ	0xFF3
 14936                           intcon	equ	0xFF2
 14937                           intcon2	equ	0xFF1
 14938                           postinc0	equ	0xFEE
 14939                           fsr0h	equ	0xFEA
 14940                           fsr0l	equ	0xFE9
 14941                           wreg	equ	0xFE8
 14942                           indf1	equ	0xFE7
 14943                           postdec1	equ	0xFE5
 14944                           fsr1h	equ	0xFE2
 14945                           fsr1l	equ	0xFE1
 14946                           bsr	equ	0xFE0
 14947                           indf2	equ	0xFDF
 14948                           postinc2	equ	0xFDE
 14949                           postdec2	equ	0xFDD
 14950                           fsr2h	equ	0xFDA
 14951                           fsr2l	equ	0xFD9
 14952                           status	equ	0xFD8
 14953                           
 14954 ;; *************** function _CANreceiveMessage *****************
 14955 ;; Defined at:
 14956 ;;		line 529 in file "../../LaurTec_PIC_libraries_v_3.3.0 - Copia/inc\CANlib.h"
 14957 ;; Parameters:    Size  Location     Type
 14958 ;;  msg             2    0[COMRAM] PTR struct .
 14959 ;;		 -> msg(15), 
 14960 ;; Auto vars:     Size  Location     Type
 14961 ;;  tamp            1   11[COMRAM] unsigned char 
 14962 ;;  error           1   10[COMRAM] unsigned char 
 14963 ;; Return value:  Size  Location     Type
 14964 ;;                  1    wreg      unsigned char 
 14965 ;; Registers used:
 14966 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14967 ;; Tracked objects:
 14968 ;;		On entry : 0/0
 14969 ;;		On exit  : 0/0
 14970 ;;		Unchanged: 0/0
 14971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14972 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14973 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14974 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14975 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14976 ;;Total ram usage:       12 bytes
 14977 ;; Hardware stack levels used:    1
 14978 ;; Hardware stack levels required when called:    2
 14979 ;; This function calls:
 14980 ;;		Nothing
 14981 ;; This function is called by:
 14982 ;;		_ISR_Bassa
 14983 ;; This function uses a non-reentrant model
 14984 ;;
 14985                           
 14986                           	psect	text36
 14987  00256E                     __ptext36:
 14988                           	opt stack 0
 14989  00256E                     _CANreceiveMessage:
 14990                           	opt stack 21
 14991                           
 14992                           ;inc\CANlib.h: 531: BYTE tamp;
 14993                           ;inc\CANlib.h: 532: BYTE error = 0;
 14994                           
 14995                           ;incstack = 0
 14996  00256E  0E00               	movlw	0
 14997  002570  6E0B               	movwf	CANreceiveMessage@error,c
 14998                           
 14999                           ;inc\CANlib.h: 534: if (COMSTATbits.RXB0OVFL == 0x01)
 15000  002572  BE74               	btfsc	3956,7,c	;volatile
 15001                           
 15002                           ;inc\CANlib.h: 535: error |= CAN_RX_BUFFER_1_OVFL;
 15003  002574  800B               	bsf	CANreceiveMessage@error,0,c
 15004                           
 15005                           ;inc\CANlib.h: 537: if (COMSTATbits.RXB1OVFL == 0x01)
 15006  002576  BC74               	btfsc	3956,6,c	;volatile
 15007                           
 15008                           ;inc\CANlib.h: 538: error |= CAN_RX_BUFFER_2_OVFL;
 15009  002578  820B               	bsf	CANreceiveMessage@error,1,c
 15010                           
 15011                           ;inc\CANlib.h: 541: if (RXB1CONbits.RXFUL ==0x01)
 15012  00257A  010F               	movlb	15	; () banked
 15013  00257C  AF50               	btfss	80,7,b	;volatile
 15014  00257E  D143               	goto	i1l410
 15015                           
 15016                           ; BSR set to: 15
 15017                           ;inc\CANlib.h: 542: {
 15018                           ;inc\CANlib.h: 543: msg->identifier = 0;
 15019  002580  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15020  002584  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15021  002588  6ADE               	clrf	postinc2,c
 15022  00258A  6ADE               	clrf	postinc2,c
 15023  00258C  6ADE               	clrf	postinc2,c
 15024  00258E  6ADD               	clrf	postdec2,c
 15025                           
 15026                           ; BSR set to: 15
 15027                           ;inc\CANlib.h: 544: msg->data[0] =RXB1D0;
 15028  002590  EE20 F004          	lfsr	2,4
 15029  002594  5001               	movf	CANreceiveMessage@msg,w,c
 15030  002596  26D9               	addwf	fsr2l,f,c
 15031  002598  5002               	movf	CANreceiveMessage@msg+1,w,c
 15032  00259A  22DA               	addwfc	fsr2h,f,c
 15033  00259C  CF56 FFDF          	movff	3926,indf2	;volatile
 15034                           
 15035                           ; BSR set to: 15
 15036                           ;inc\CANlib.h: 545: msg->data[1] =RXB1D1;
 15037  0025A0  EE20 F005          	lfsr	2,5
 15038  0025A4  5001               	movf	CANreceiveMessage@msg,w,c
 15039  0025A6  26D9               	addwf	fsr2l,f,c
 15040  0025A8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15041  0025AA  22DA               	addwfc	fsr2h,f,c
 15042  0025AC  CF57 FFDF          	movff	3927,indf2	;volatile
 15043                           
 15044                           ; BSR set to: 15
 15045                           ;inc\CANlib.h: 546: msg->data[2] =RXB1D2;
 15046  0025B0  EE20 F006          	lfsr	2,6
 15047  0025B4  5001               	movf	CANreceiveMessage@msg,w,c
 15048  0025B6  26D9               	addwf	fsr2l,f,c
 15049  0025B8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15050  0025BA  22DA               	addwfc	fsr2h,f,c
 15051  0025BC  CF58 FFDF          	movff	3928,indf2	;volatile
 15052                           
 15053                           ; BSR set to: 15
 15054                           ;inc\CANlib.h: 547: msg->data[3] =RXB1D3;
 15055  0025C0  EE20 F007          	lfsr	2,7
 15056  0025C4  5001               	movf	CANreceiveMessage@msg,w,c
 15057  0025C6  26D9               	addwf	fsr2l,f,c
 15058  0025C8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15059  0025CA  22DA               	addwfc	fsr2h,f,c
 15060  0025CC  CF59 FFDF          	movff	3929,indf2	;volatile
 15061                           
 15062                           ; BSR set to: 15
 15063                           ;inc\CANlib.h: 548: msg->data[4] =RXB1D4;
 15064  0025D0  EE20 F008          	lfsr	2,8
 15065  0025D4  5001               	movf	CANreceiveMessage@msg,w,c
 15066  0025D6  26D9               	addwf	fsr2l,f,c
 15067  0025D8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15068  0025DA  22DA               	addwfc	fsr2h,f,c
 15069  0025DC  CF5A FFDF          	movff	3930,indf2	;volatile
 15070                           
 15071                           ; BSR set to: 15
 15072                           ;inc\CANlib.h: 549: msg->data[5] =RXB1D5;
 15073  0025E0  EE20 F009          	lfsr	2,9
 15074  0025E4  5001               	movf	CANreceiveMessage@msg,w,c
 15075  0025E6  26D9               	addwf	fsr2l,f,c
 15076  0025E8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15077  0025EA  22DA               	addwfc	fsr2h,f,c
 15078  0025EC  CF5B FFDF          	movff	3931,indf2	;volatile
 15079                           
 15080                           ; BSR set to: 15
 15081                           ;inc\CANlib.h: 550: msg->data[6] =RXB1D6;
 15082  0025F0  EE20 F00A          	lfsr	2,10
 15083  0025F4  5001               	movf	CANreceiveMessage@msg,w,c
 15084  0025F6  26D9               	addwf	fsr2l,f,c
 15085  0025F8  5002               	movf	CANreceiveMessage@msg+1,w,c
 15086  0025FA  22DA               	addwfc	fsr2h,f,c
 15087  0025FC  CF5C FFDF          	movff	3932,indf2	;volatile
 15088                           
 15089                           ; BSR set to: 15
 15090                           ;inc\CANlib.h: 551: msg->data[7] =RXB1D7;
 15091  002600  EE20 F00B          	lfsr	2,11
 15092  002604  5001               	movf	CANreceiveMessage@msg,w,c
 15093  002606  26D9               	addwf	fsr2l,f,c
 15094  002608  5002               	movf	CANreceiveMessage@msg+1,w,c
 15095  00260A  22DA               	addwfc	fsr2h,f,c
 15096  00260C  CF5D FFDF          	movff	3933,indf2	;volatile
 15097                           
 15098                           ; BSR set to: 15
 15099                           ;inc\CANlib.h: 553: msg->RTR = RXB1DLCbits.RXRTR;
 15100  002610  EE20 F00E          	lfsr	2,14
 15101  002614  5001               	movf	CANreceiveMessage@msg,w,c
 15102  002616  26D9               	addwf	fsr2l,f,c
 15103  002618  5002               	movf	CANreceiveMessage@msg+1,w,c
 15104  00261A  22DA               	addwfc	fsr2h,f,c
 15105  00261C  010F               	movlb	15	; () banked
 15106  00261E  AD55               	btfss	85,6,b	;volatile
 15107  002620  D002               	goto	i1u680_20
 15108  002622  0E01               	movlw	1
 15109  002624  D001               	goto	i1u680_26
 15110  002626                     i1u680_20:
 15111  002626  0E00               	movlw	0
 15112  002628                     i1u680_26:
 15113  002628  6EDF               	movwf	indf2,c
 15114                           
 15115                           ; BSR set to: 15
 15116                           ;inc\CANlib.h: 555: msg->length = RXB1DLC & 0x0F;
 15117  00262A  EE20 F00D          	lfsr	2,13
 15118  00262E  5001               	movf	CANreceiveMessage@msg,w,c
 15119  002630  26D9               	addwf	fsr2l,f,c
 15120  002632  5002               	movf	CANreceiveMessage@msg+1,w,c
 15121  002634  22DA               	addwfc	fsr2h,f,c
 15122  002636  010F               	movlb	15	; () banked
 15123  002638  5155               	movf	85,w,b	;volatile
 15124  00263A  0B0F               	andlw	15
 15125  00263C  6EDF               	movwf	indf2,c
 15126                           
 15127                           ; BSR set to: 15
 15128                           ;inc\CANlib.h: 557: msg->type = RXB1SIDLbits.EXID;
 15129  00263E  EE20 F00C          	lfsr	2,12
 15130  002642  5001               	movf	CANreceiveMessage@msg,w,c
 15131  002644  26D9               	addwf	fsr2l,f,c
 15132  002646  5002               	movf	CANreceiveMessage@msg+1,w,c
 15133  002648  22DA               	addwfc	fsr2h,f,c
 15134  00264A  010F               	movlb	15	; () banked
 15135  00264C  A752               	btfss	82,3,b	;volatile
 15136  00264E  D002               	goto	i1u681_20
 15137  002650  0E01               	movlw	1
 15138  002652  D001               	goto	i1u681_26
 15139  002654                     i1u681_20:
 15140  002654  0E00               	movlw	0
 15141  002656                     i1u681_26:
 15142  002656  6EDF               	movwf	indf2,c
 15143                           
 15144                           ; BSR set to: 15
 15145                           ;inc\CANlib.h: 559: if (RXB1SIDLbits.EXID == 0)
 15146  002658  010F               	movlb	15	; () banked
 15147  00265A  B752               	btfsc	82,3,b	;volatile
 15148  00265C  D044               	goto	i1l5625
 15149                           
 15150                           ; BSR set to: 15
 15151                           ;inc\CANlib.h: 560: {
 15152                           ;inc\CANlib.h: 561: msg->identifier = ((unsigned long)RXB1SIDH)<< 3;
 15153  00265E  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 15154  002662  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15155  002664  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15156  002666  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15157  002668  0E03               	movlw	3
 15158  00266A                     i1u683_25:
 15159  00266A  90D8               	bcf	status,0,c
 15160  00266C  3603               	rlcf	??_CANreceiveMessage,f,c
 15161  00266E  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15162  002670  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15163  002672  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15164  002674  2EE8               	decfsz	wreg,f,c
 15165  002676  D7F9               	goto	i1u683_25
 15166  002678  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15167  00267C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15168  002680  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15169  002684  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15170  002688  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15171  00268C  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15172                           
 15173                           ; BSR set to: 15
 15174                           ;inc\CANlib.h: 562: tamp = (RXB1SIDL >> 5 ) & 0x07;
 15175  002690  010F               	movlb	15	; () banked
 15176  002692  3952               	swapf	82,w,b	;volatile
 15177  002694  42E8               	rrncf	wreg,f,c
 15178  002696  0B07               	andlw	7
 15179  002698  0B07               	andlw	7
 15180  00269A  6E0C               	movwf	CANreceiveMessage@tamp,c
 15181                           
 15182                           ; BSR set to: 15
 15183                           ;inc\CANlib.h: 563: msg->identifier = msg->identifier + tamp;
 15184  00269C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15185  0026A0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15186  0026A4  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 15187  0026A8  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 15188  0026AC  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 15189  0026B0  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 15190  0026B4  500C               	movf	CANreceiveMessage@tamp,w,c
 15191  0026B6  2403               	addwf	??_CANreceiveMessage,w,c
 15192  0026B8  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 15193  0026BA  0E00               	movlw	0
 15194  0026BC  2004               	addwfc	??_CANreceiveMessage+1,w,c
 15195  0026BE  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 15196  0026C0  0E00               	movlw	0
 15197  0026C2  2005               	addwfc	??_CANreceiveMessage+2,w,c
 15198  0026C4  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 15199  0026C6  0E00               	movlw	0
 15200  0026C8  2006               	addwfc	??_CANreceiveMessage+3,w,c
 15201  0026CA  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 15202  0026CC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15203  0026D0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15204  0026D4  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 15205  0026D8  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 15206  0026DC  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 15207  0026E0  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 15208                           
 15209                           ;inc\CANlib.h: 564: }
 15210  0026E4  D08D               	goto	i1l5651
 15211  0026E6                     i1l5625:
 15212                           
 15213                           ; BSR set to: 15
 15214                           ;inc\CANlib.h: 565: else
 15215                           ;inc\CANlib.h: 566: {
 15216                           ;inc\CANlib.h: 567: msg->identifier = (unsigned long) RXB1EIDL;
 15217  0026E6  CF54 F003          	movff	3924,??_CANreceiveMessage	;volatile
 15218  0026EA  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15219  0026EC  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15220  0026EE  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15221  0026F0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15222  0026F4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15223  0026F8  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15224  0026FC  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15225  002700  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15226  002704  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15227                           
 15228                           ; BSR set to: 15
 15229                           ;inc\CANlib.h: 568: msg->identifier += ((unsigned long) RXB1EIDH) << 8;
 15230  002708  CF53 F003          	movff	3923,??_CANreceiveMessage	;volatile
 15231  00270C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15232  00270E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15233  002710  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15234  002712  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 15235  002716  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 15236  00271A  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 15237  00271E  6A03               	clrf	??_CANreceiveMessage,c
 15238  002720  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15239  002724  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15240  002728  5003               	movf	??_CANreceiveMessage,w,c
 15241  00272A  26DE               	addwf	postinc2,f,c
 15242  00272C  5004               	movf	??_CANreceiveMessage+1,w,c
 15243  00272E  22DE               	addwfc	postinc2,f,c
 15244  002730  5005               	movf	??_CANreceiveMessage+2,w,c
 15245  002732  22DE               	addwfc	postinc2,f,c
 15246  002734  5006               	movf	??_CANreceiveMessage+3,w,c
 15247  002736  22DE               	addwfc	postinc2,f,c
 15248                           
 15249                           ; BSR set to: 15
 15250                           ;inc\CANlib.h: 570: if (RXB1SIDLbits.EID16)
 15251  002738  010F               	movlb	15	; () banked
 15252  00273A  A152               	btfss	82,0,b	;volatile
 15253  00273C  D00C               	goto	i1l5633
 15254                           
 15255                           ; BSR set to: 15
 15256                           ;inc\CANlib.h: 571: msg->identifier |= 0x00010000;
 15257  00273E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15258  002742  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15259  002746  0E00               	movlw	0
 15260  002748  12DE               	iorwf	postinc2,f,c
 15261  00274A  0E00               	movlw	0
 15262  00274C  12DE               	iorwf	postinc2,f,c
 15263  00274E  0E01               	movlw	1
 15264  002750  12DE               	iorwf	postinc2,f,c
 15265  002752  0E00               	movlw	0
 15266  002754  12DE               	iorwf	postinc2,f,c
 15267  002756                     i1l5633:
 15268                           
 15269                           ; BSR set to: 15
 15270                           ;inc\CANlib.h: 572: if (RXB1SIDLbits.EID17)
 15271  002756  010F               	movlb	15	; () banked
 15272  002758  A352               	btfss	82,1,b	;volatile
 15273  00275A  D00C               	goto	i1l5637
 15274                           
 15275                           ; BSR set to: 15
 15276                           ;inc\CANlib.h: 573: msg->identifier |= 0x00020000;
 15277  00275C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15278  002760  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15279  002764  0E00               	movlw	0
 15280  002766  12DE               	iorwf	postinc2,f,c
 15281  002768  0E00               	movlw	0
 15282  00276A  12DE               	iorwf	postinc2,f,c
 15283  00276C  0E02               	movlw	2
 15284  00276E  12DE               	iorwf	postinc2,f,c
 15285  002770  0E00               	movlw	0
 15286  002772  12DE               	iorwf	postinc2,f,c
 15287  002774                     i1l5637:
 15288                           
 15289                           ; BSR set to: 15
 15290                           ;inc\CANlib.h: 574: if (RXB1SIDLbits.SID0)
 15291  002774  010F               	movlb	15	; () banked
 15292  002776  AB52               	btfss	82,5,b	;volatile
 15293  002778  D00C               	goto	i1l5641
 15294                           
 15295                           ; BSR set to: 15
 15296                           ;inc\CANlib.h: 575: msg->identifier |= 0x00040000;
 15297  00277A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15298  00277E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15299  002782  0E00               	movlw	0
 15300  002784  12DE               	iorwf	postinc2,f,c
 15301  002786  0E00               	movlw	0
 15302  002788  12DE               	iorwf	postinc2,f,c
 15303  00278A  0E04               	movlw	4
 15304  00278C  12DE               	iorwf	postinc2,f,c
 15305  00278E  0E00               	movlw	0
 15306  002790  12DE               	iorwf	postinc2,f,c
 15307  002792                     i1l5641:
 15308                           
 15309                           ; BSR set to: 15
 15310                           ;inc\CANlib.h: 576: if (RXB1SIDLbits.SID1)
 15311  002792  010F               	movlb	15	; () banked
 15312  002794  AD52               	btfss	82,6,b	;volatile
 15313  002796  D00C               	goto	i1l5645
 15314                           
 15315                           ; BSR set to: 15
 15316                           ;inc\CANlib.h: 577: msg->identifier |= 0x00080000;
 15317  002798  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15318  00279C  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15319  0027A0  0E00               	movlw	0
 15320  0027A2  12DE               	iorwf	postinc2,f,c
 15321  0027A4  0E00               	movlw	0
 15322  0027A6  12DE               	iorwf	postinc2,f,c
 15323  0027A8  0E08               	movlw	8
 15324  0027AA  12DE               	iorwf	postinc2,f,c
 15325  0027AC  0E00               	movlw	0
 15326  0027AE  12DE               	iorwf	postinc2,f,c
 15327  0027B0                     i1l5645:
 15328                           
 15329                           ; BSR set to: 15
 15330                           ;inc\CANlib.h: 578: if (RXB1SIDLbits.SID2)
 15331  0027B0  010F               	movlb	15	; () banked
 15332  0027B2  AF52               	btfss	82,7,b	;volatile
 15333  0027B4  D00C               	goto	i1l5649
 15334                           
 15335                           ; BSR set to: 15
 15336                           ;inc\CANlib.h: 579: msg->identifier |= 0x00100000;
 15337  0027B6  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15338  0027BA  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15339  0027BE  0E00               	movlw	0
 15340  0027C0  12DE               	iorwf	postinc2,f,c
 15341  0027C2  0E00               	movlw	0
 15342  0027C4  12DE               	iorwf	postinc2,f,c
 15343  0027C6  0E10               	movlw	16
 15344  0027C8  12DE               	iorwf	postinc2,f,c
 15345  0027CA  0E00               	movlw	0
 15346  0027CC  12DE               	iorwf	postinc2,f,c
 15347  0027CE                     i1l5649:
 15348                           
 15349                           ; BSR set to: 15
 15350                           ;inc\CANlib.h: 581: msg->identifier |= ((unsigned long) RXB1SIDH) << 21;
 15351  0027CE  CF51 F003          	movff	3921,??_CANreceiveMessage	;volatile
 15352  0027D2  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15353  0027D4  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15354  0027D6  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15355  0027D8  0E15               	movlw	21
 15356  0027DA                     i1u689_25:
 15357  0027DA  90D8               	bcf	status,0,c
 15358  0027DC  3603               	rlcf	??_CANreceiveMessage,f,c
 15359  0027DE  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15360  0027E0  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15361  0027E2  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15362  0027E4  2EE8               	decfsz	wreg,f,c
 15363  0027E6  D7F9               	goto	i1u689_25
 15364  0027E8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15365  0027EC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15366  0027F0  5003               	movf	??_CANreceiveMessage,w,c
 15367  0027F2  12DE               	iorwf	postinc2,f,c
 15368  0027F4  5004               	movf	??_CANreceiveMessage+1,w,c
 15369  0027F6  12DE               	iorwf	postinc2,f,c
 15370  0027F8  5005               	movf	??_CANreceiveMessage+2,w,c
 15371  0027FA  12DE               	iorwf	postinc2,f,c
 15372  0027FC  5006               	movf	??_CANreceiveMessage+3,w,c
 15373  0027FE  12DE               	iorwf	postinc2,f,c
 15374  002800                     i1l5651:
 15375                           
 15376                           ; BSR set to: 15
 15377                           ;inc\CANlib.h: 582: }
 15378                           ;inc\CANlib.h: 584: RXB1CONbits.RXFUL = 0x00;
 15379  002800  010F               	movlb	15	; () banked
 15380  002802  9F50               	bcf	80,7,b	;volatile
 15381                           
 15382                           ; BSR set to: 15
 15383                           ;inc\CANlib.h: 585: return (error);
 15384                           ;	Return value of _CANreceiveMessage is never used
 15385  002804  0012               	return	
 15386  002806                     i1l410:
 15387                           
 15388                           ; BSR set to: 15
 15389                           ;inc\CANlib.h: 586: }
 15390                           ;inc\CANlib.h: 588: if (RXB0CONbits.RXFUL ==0x01)
 15391  002806  AE60               	btfss	3936,7,c	;volatile
 15392  002808  0012               	return	
 15393                           
 15394                           ; BSR set to: 15
 15395                           ;inc\CANlib.h: 589: {
 15396                           ;inc\CANlib.h: 590: msg->identifier = 0;
 15397  00280A  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15398  00280E  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15399  002812  6ADE               	clrf	postinc2,c
 15400  002814  6ADE               	clrf	postinc2,c
 15401  002816  6ADE               	clrf	postinc2,c
 15402  002818  6ADD               	clrf	postdec2,c
 15403                           
 15404                           ; BSR set to: 15
 15405                           ;inc\CANlib.h: 591: msg->data[0] =RXB0D0;
 15406  00281A  EE20 F004          	lfsr	2,4
 15407  00281E  5001               	movf	CANreceiveMessage@msg,w,c
 15408  002820  26D9               	addwf	fsr2l,f,c
 15409  002822  5002               	movf	CANreceiveMessage@msg+1,w,c
 15410  002824  22DA               	addwfc	fsr2h,f,c
 15411  002826  CF66 FFDF          	movff	3942,indf2	;volatile
 15412                           
 15413                           ; BSR set to: 15
 15414                           ;inc\CANlib.h: 592: msg->data[1] =RXB0D1;
 15415  00282A  EE20 F005          	lfsr	2,5
 15416  00282E  5001               	movf	CANreceiveMessage@msg,w,c
 15417  002830  26D9               	addwf	fsr2l,f,c
 15418  002832  5002               	movf	CANreceiveMessage@msg+1,w,c
 15419  002834  22DA               	addwfc	fsr2h,f,c
 15420  002836  CF67 FFDF          	movff	3943,indf2	;volatile
 15421                           
 15422                           ; BSR set to: 15
 15423                           ;inc\CANlib.h: 593: msg->data[2] =RXB0D2;
 15424  00283A  EE20 F006          	lfsr	2,6
 15425  00283E  5001               	movf	CANreceiveMessage@msg,w,c
 15426  002840  26D9               	addwf	fsr2l,f,c
 15427  002842  5002               	movf	CANreceiveMessage@msg+1,w,c
 15428  002844  22DA               	addwfc	fsr2h,f,c
 15429  002846  CF68 FFDF          	movff	3944,indf2	;volatile
 15430                           
 15431                           ; BSR set to: 15
 15432                           ;inc\CANlib.h: 594: msg->data[3] =RXB0D3;
 15433  00284A  EE20 F007          	lfsr	2,7
 15434  00284E  5001               	movf	CANreceiveMessage@msg,w,c
 15435  002850  26D9               	addwf	fsr2l,f,c
 15436  002852  5002               	movf	CANreceiveMessage@msg+1,w,c
 15437  002854  22DA               	addwfc	fsr2h,f,c
 15438  002856  CF69 FFDF          	movff	3945,indf2	;volatile
 15439                           
 15440                           ; BSR set to: 15
 15441                           ;inc\CANlib.h: 595: msg->data[4] =RXB0D4;
 15442  00285A  EE20 F008          	lfsr	2,8
 15443  00285E  5001               	movf	CANreceiveMessage@msg,w,c
 15444  002860  26D9               	addwf	fsr2l,f,c
 15445  002862  5002               	movf	CANreceiveMessage@msg+1,w,c
 15446  002864  22DA               	addwfc	fsr2h,f,c
 15447  002866  CF6A FFDF          	movff	3946,indf2	;volatile
 15448                           
 15449                           ; BSR set to: 15
 15450                           ;inc\CANlib.h: 596: msg->data[5] =RXB0D5;
 15451  00286A  EE20 F009          	lfsr	2,9
 15452  00286E  5001               	movf	CANreceiveMessage@msg,w,c
 15453  002870  26D9               	addwf	fsr2l,f,c
 15454  002872  5002               	movf	CANreceiveMessage@msg+1,w,c
 15455  002874  22DA               	addwfc	fsr2h,f,c
 15456  002876  CF6B FFDF          	movff	3947,indf2	;volatile
 15457                           
 15458                           ; BSR set to: 15
 15459                           ;inc\CANlib.h: 597: msg->data[6] =RXB0D6;
 15460  00287A  EE20 F00A          	lfsr	2,10
 15461  00287E  5001               	movf	CANreceiveMessage@msg,w,c
 15462  002880  26D9               	addwf	fsr2l,f,c
 15463  002882  5002               	movf	CANreceiveMessage@msg+1,w,c
 15464  002884  22DA               	addwfc	fsr2h,f,c
 15465  002886  CF6C FFDF          	movff	3948,indf2	;volatile
 15466                           
 15467                           ; BSR set to: 15
 15468                           ;inc\CANlib.h: 598: msg->data[7] =RXB0D7;
 15469  00288A  EE20 F00B          	lfsr	2,11
 15470  00288E  5001               	movf	CANreceiveMessage@msg,w,c
 15471  002890  26D9               	addwf	fsr2l,f,c
 15472  002892  5002               	movf	CANreceiveMessage@msg+1,w,c
 15473  002894  22DA               	addwfc	fsr2h,f,c
 15474  002896  CF6D FFDF          	movff	3949,indf2	;volatile
 15475                           
 15476                           ; BSR set to: 15
 15477                           ;inc\CANlib.h: 600: msg->RTR = RXB0DLCbits.RXRTR;
 15478  00289A  EE20 F00E          	lfsr	2,14
 15479  00289E  5001               	movf	CANreceiveMessage@msg,w,c
 15480  0028A0  26D9               	addwf	fsr2l,f,c
 15481  0028A2  5002               	movf	CANreceiveMessage@msg+1,w,c
 15482  0028A4  22DA               	addwfc	fsr2h,f,c
 15483  0028A6  AC65               	btfss	3941,6,c	;volatile
 15484  0028A8  D002               	goto	i1u691_20
 15485  0028AA  0E01               	movlw	1
 15486  0028AC  D001               	goto	i1u691_26
 15487  0028AE                     i1u691_20:
 15488  0028AE  0E00               	movlw	0
 15489  0028B0                     i1u691_26:
 15490  0028B0  6EDF               	movwf	indf2,c
 15491                           
 15492                           ; BSR set to: 15
 15493                           ;inc\CANlib.h: 602: msg->length = RXB0DLC & 0x0F;
 15494  0028B2  EE20 F00D          	lfsr	2,13
 15495  0028B6  5001               	movf	CANreceiveMessage@msg,w,c
 15496  0028B8  26D9               	addwf	fsr2l,f,c
 15497  0028BA  5002               	movf	CANreceiveMessage@msg+1,w,c
 15498  0028BC  22DA               	addwfc	fsr2h,f,c
 15499  0028BE  5065               	movf	3941,w,c	;volatile
 15500  0028C0  0B0F               	andlw	15
 15501  0028C2  6EDF               	movwf	indf2,c
 15502                           
 15503                           ; BSR set to: 15
 15504                           ;inc\CANlib.h: 604: msg->type = RXB0SIDLbits.EXID;
 15505  0028C4  EE20 F00C          	lfsr	2,12
 15506  0028C8  5001               	movf	CANreceiveMessage@msg,w,c
 15507  0028CA  26D9               	addwf	fsr2l,f,c
 15508  0028CC  5002               	movf	CANreceiveMessage@msg+1,w,c
 15509  0028CE  22DA               	addwfc	fsr2h,f,c
 15510  0028D0  A662               	btfss	3938,3,c	;volatile
 15511  0028D2  D002               	goto	i1u692_20
 15512  0028D4  0E01               	movlw	1
 15513  0028D6  D001               	goto	i1u692_26
 15514  0028D8                     i1u692_20:
 15515  0028D8  0E00               	movlw	0
 15516  0028DA                     i1u692_26:
 15517  0028DA  6EDF               	movwf	indf2,c
 15518                           
 15519                           ; BSR set to: 15
 15520                           ;inc\CANlib.h: 606: if (RXB0SIDLbits.EXID == 0)
 15521  0028DC  B662               	btfsc	3938,3,c	;volatile
 15522  0028DE  D043               	goto	i1l5687
 15523                           
 15524                           ; BSR set to: 15
 15525                           ;inc\CANlib.h: 607: {
 15526                           ;inc\CANlib.h: 608: msg->identifier = ((unsigned long)RXB0SIDH)<< 3;
 15527  0028E0  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15528  0028E4  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15529  0028E6  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15530  0028E8  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15531  0028EA  0E03               	movlw	3
 15532  0028EC                     i1u694_25:
 15533  0028EC  90D8               	bcf	status,0,c
 15534  0028EE  3603               	rlcf	??_CANreceiveMessage,f,c
 15535  0028F0  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15536  0028F2  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15537  0028F4  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15538  0028F6  2EE8               	decfsz	wreg,f,c
 15539  0028F8  D7F9               	goto	i1u694_25
 15540  0028FA  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15541  0028FE  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15542  002902  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15543  002906  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15544  00290A  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15545  00290E  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15546                           
 15547                           ; BSR set to: 15
 15548                           ;inc\CANlib.h: 609: tamp = (RXB0SIDL >> 5 ) & 0x07;
 15549  002912  3862               	swapf	3938,w,c	;volatile
 15550  002914  42E8               	rrncf	wreg,f,c
 15551  002916  0B07               	andlw	7
 15552  002918  0B07               	andlw	7
 15553  00291A  6E0C               	movwf	CANreceiveMessage@tamp,c
 15554                           
 15555                           ; BSR set to: 15
 15556                           ;inc\CANlib.h: 610: msg->identifier = msg->identifier + tamp;
 15557  00291C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15558  002920  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15559  002924  CFDE F003          	movff	postinc2,??_CANreceiveMessage
 15560  002928  CFDE F004          	movff	postinc2,??_CANreceiveMessage+1
 15561  00292C  CFDE F005          	movff	postinc2,??_CANreceiveMessage+2
 15562  002930  CFDE F006          	movff	postinc2,??_CANreceiveMessage+3
 15563  002934  500C               	movf	CANreceiveMessage@tamp,w,c
 15564  002936  2403               	addwf	??_CANreceiveMessage,w,c
 15565  002938  6E07               	movwf	(??_CANreceiveMessage+4)& (0+255),c
 15566  00293A  0E00               	movlw	0
 15567  00293C  2004               	addwfc	??_CANreceiveMessage+1,w,c
 15568  00293E  6E08               	movwf	(??_CANreceiveMessage+5)& (0+255),c
 15569  002940  0E00               	movlw	0
 15570  002942  2005               	addwfc	??_CANreceiveMessage+2,w,c
 15571  002944  6E09               	movwf	(??_CANreceiveMessage+6)& (0+255),c
 15572  002946  0E00               	movlw	0
 15573  002948  2006               	addwfc	??_CANreceiveMessage+3,w,c
 15574  00294A  6E0A               	movwf	(??_CANreceiveMessage+7)& (0+255),c
 15575  00294C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15576  002950  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15577  002954  C007  FFDE         	movff	??_CANreceiveMessage+4,postinc2
 15578  002958  C008  FFDE         	movff	??_CANreceiveMessage+5,postinc2
 15579  00295C  C009  FFDE         	movff	??_CANreceiveMessage+6,postinc2
 15580  002960  C00A  FFDE         	movff	??_CANreceiveMessage+7,postinc2
 15581                           
 15582                           ;inc\CANlib.h: 611: }
 15583  002964  D088               	goto	i1l5713
 15584  002966                     i1l5687:
 15585                           
 15586                           ; BSR set to: 15
 15587                           ;inc\CANlib.h: 612: else
 15588                           ;inc\CANlib.h: 613: {
 15589                           ;inc\CANlib.h: 614: msg->identifier = (unsigned long) RXB0EIDL;
 15590  002966  CF64 F003          	movff	3940,??_CANreceiveMessage	;volatile
 15591  00296A  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15592  00296C  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15593  00296E  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15594  002970  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15595  002974  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15596  002978  C003  FFDE         	movff	??_CANreceiveMessage,postinc2
 15597  00297C  C004  FFDE         	movff	??_CANreceiveMessage+1,postinc2
 15598  002980  C005  FFDE         	movff	??_CANreceiveMessage+2,postinc2
 15599  002984  C006  FFDE         	movff	??_CANreceiveMessage+3,postinc2
 15600                           
 15601                           ; BSR set to: 15
 15602                           ;inc\CANlib.h: 615: msg->identifier += ((unsigned long) RXB0EIDH) << 8;
 15603  002988  CF63 F003          	movff	3939,??_CANreceiveMessage	;volatile
 15604  00298C  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15605  00298E  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15606  002990  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15607  002992  C005  F006         	movff	??_CANreceiveMessage+2,??_CANreceiveMessage+3
 15608  002996  C004  F005         	movff	??_CANreceiveMessage+1,??_CANreceiveMessage+2
 15609  00299A  C003  F004         	movff	??_CANreceiveMessage,??_CANreceiveMessage+1
 15610  00299E  6A03               	clrf	??_CANreceiveMessage,c
 15611  0029A0  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15612  0029A4  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15613  0029A8  5003               	movf	??_CANreceiveMessage,w,c
 15614  0029AA  26DE               	addwf	postinc2,f,c
 15615  0029AC  5004               	movf	??_CANreceiveMessage+1,w,c
 15616  0029AE  22DE               	addwfc	postinc2,f,c
 15617  0029B0  5005               	movf	??_CANreceiveMessage+2,w,c
 15618  0029B2  22DE               	addwfc	postinc2,f,c
 15619  0029B4  5006               	movf	??_CANreceiveMessage+3,w,c
 15620  0029B6  22DE               	addwfc	postinc2,f,c
 15621                           
 15622                           ; BSR set to: 15
 15623                           ;inc\CANlib.h: 617: if (RXB0SIDLbits.EID16)
 15624  0029B8  A062               	btfss	3938,0,c	;volatile
 15625  0029BA  D00C               	goto	i1l5695
 15626                           
 15627                           ; BSR set to: 15
 15628                           ;inc\CANlib.h: 618: msg->identifier |= 0x00010000;
 15629  0029BC  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15630  0029C0  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15631  0029C4  0E00               	movlw	0
 15632  0029C6  12DE               	iorwf	postinc2,f,c
 15633  0029C8  0E00               	movlw	0
 15634  0029CA  12DE               	iorwf	postinc2,f,c
 15635  0029CC  0E01               	movlw	1
 15636  0029CE  12DE               	iorwf	postinc2,f,c
 15637  0029D0  0E00               	movlw	0
 15638  0029D2  12DE               	iorwf	postinc2,f,c
 15639  0029D4                     i1l5695:
 15640                           
 15641                           ; BSR set to: 15
 15642                           ;inc\CANlib.h: 619: if (RXB0SIDLbits.EID17)
 15643  0029D4  A262               	btfss	3938,1,c	;volatile
 15644  0029D6  D00C               	goto	i1l5699
 15645                           
 15646                           ; BSR set to: 15
 15647                           ;inc\CANlib.h: 620: msg->identifier |= 0x00020000;
 15648  0029D8  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15649  0029DC  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15650  0029E0  0E00               	movlw	0
 15651  0029E2  12DE               	iorwf	postinc2,f,c
 15652  0029E4  0E00               	movlw	0
 15653  0029E6  12DE               	iorwf	postinc2,f,c
 15654  0029E8  0E02               	movlw	2
 15655  0029EA  12DE               	iorwf	postinc2,f,c
 15656  0029EC  0E00               	movlw	0
 15657  0029EE  12DE               	iorwf	postinc2,f,c
 15658  0029F0                     i1l5699:
 15659                           
 15660                           ; BSR set to: 15
 15661                           ;inc\CANlib.h: 621: if (RXB0SIDLbits.SID0)
 15662  0029F0  AA62               	btfss	3938,5,c	;volatile
 15663  0029F2  D00C               	goto	i1l5703
 15664                           
 15665                           ; BSR set to: 15
 15666                           ;inc\CANlib.h: 622: msg->identifier |= 0x00040000;
 15667  0029F4  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15668  0029F8  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15669  0029FC  0E00               	movlw	0
 15670  0029FE  12DE               	iorwf	postinc2,f,c
 15671  002A00  0E00               	movlw	0
 15672  002A02  12DE               	iorwf	postinc2,f,c
 15673  002A04  0E04               	movlw	4
 15674  002A06  12DE               	iorwf	postinc2,f,c
 15675  002A08  0E00               	movlw	0
 15676  002A0A  12DE               	iorwf	postinc2,f,c
 15677  002A0C                     i1l5703:
 15678                           
 15679                           ; BSR set to: 15
 15680                           ;inc\CANlib.h: 623: if (RXB0SIDLbits.SID1)
 15681  002A0C  AC62               	btfss	3938,6,c	;volatile
 15682  002A0E  D00C               	goto	i1l5707
 15683                           
 15684                           ; BSR set to: 15
 15685                           ;inc\CANlib.h: 624: msg->identifier |= 0x00080000;
 15686  002A10  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15687  002A14  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15688  002A18  0E00               	movlw	0
 15689  002A1A  12DE               	iorwf	postinc2,f,c
 15690  002A1C  0E00               	movlw	0
 15691  002A1E  12DE               	iorwf	postinc2,f,c
 15692  002A20  0E08               	movlw	8
 15693  002A22  12DE               	iorwf	postinc2,f,c
 15694  002A24  0E00               	movlw	0
 15695  002A26  12DE               	iorwf	postinc2,f,c
 15696  002A28                     i1l5707:
 15697                           
 15698                           ; BSR set to: 15
 15699                           ;inc\CANlib.h: 625: if (RXB0SIDLbits.SID2)
 15700  002A28  AE62               	btfss	3938,7,c	;volatile
 15701  002A2A  D00C               	goto	i1l5711
 15702                           
 15703                           ; BSR set to: 15
 15704                           ;inc\CANlib.h: 626: msg->identifier |= 0x00100000;
 15705  002A2C  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15706  002A30  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15707  002A34  0E00               	movlw	0
 15708  002A36  12DE               	iorwf	postinc2,f,c
 15709  002A38  0E00               	movlw	0
 15710  002A3A  12DE               	iorwf	postinc2,f,c
 15711  002A3C  0E10               	movlw	16
 15712  002A3E  12DE               	iorwf	postinc2,f,c
 15713  002A40  0E00               	movlw	0
 15714  002A42  12DE               	iorwf	postinc2,f,c
 15715  002A44                     i1l5711:
 15716                           
 15717                           ; BSR set to: 15
 15718                           ;inc\CANlib.h: 628: msg->identifier |= ((unsigned long) RXB0SIDH) << 21;
 15719  002A44  CF61 F003          	movff	3937,??_CANreceiveMessage	;volatile
 15720  002A48  6A04               	clrf	(??_CANreceiveMessage+1)& (0+255),c
 15721  002A4A  6A05               	clrf	(??_CANreceiveMessage+2)& (0+255),c
 15722  002A4C  6A06               	clrf	(??_CANreceiveMessage+3)& (0+255),c
 15723  002A4E  0E15               	movlw	21
 15724  002A50                     i1u700_25:
 15725  002A50  90D8               	bcf	status,0,c
 15726  002A52  3603               	rlcf	??_CANreceiveMessage,f,c
 15727  002A54  3604               	rlcf	??_CANreceiveMessage+1,f,c
 15728  002A56  3605               	rlcf	??_CANreceiveMessage+2,f,c
 15729  002A58  3606               	rlcf	??_CANreceiveMessage+3,f,c
 15730  002A5A  2EE8               	decfsz	wreg,f,c
 15731  002A5C  D7F9               	goto	i1u700_25
 15732  002A5E  C001  FFD9         	movff	CANreceiveMessage@msg,fsr2l
 15733  002A62  C002  FFDA         	movff	CANreceiveMessage@msg+1,fsr2h
 15734  002A66  5003               	movf	??_CANreceiveMessage,w,c
 15735  002A68  12DE               	iorwf	postinc2,f,c
 15736  002A6A  5004               	movf	??_CANreceiveMessage+1,w,c
 15737  002A6C  12DE               	iorwf	postinc2,f,c
 15738  002A6E  5005               	movf	??_CANreceiveMessage+2,w,c
 15739  002A70  12DE               	iorwf	postinc2,f,c
 15740  002A72  5006               	movf	??_CANreceiveMessage+3,w,c
 15741  002A74  12DE               	iorwf	postinc2,f,c
 15742  002A76                     i1l5713:
 15743                           
 15744                           ; BSR set to: 15
 15745                           ;inc\CANlib.h: 630: }
 15746                           ;inc\CANlib.h: 631: RXB0CONbits.RXFUL = 0x00;
 15747  002A76  9E60               	bcf	3936,7,c	;volatile
 15748                           
 15749                           ; BSR set to: 15
 15750                           ;inc\CANlib.h: 633: return (error);
 15751                           ;	Return value of _CANreceiveMessage is never used
 15752  002A78  0012               	return	
 15753  002A7A                     __end_of_CANreceiveMessage:
 15754                           	opt stack 0
 15755                           pclatu	equ	0xFFB
 15756                           pclath	equ	0xFFA
 15757                           tblptru	equ	0xFF8
 15758                           tblptrh	equ	0xFF7
 15759                           tblptrl	equ	0xFF6
 15760                           tablat	equ	0xFF5
 15761                           prodh	equ	0xFF4
 15762                           prodl	equ	0xFF3
 15763                           intcon	equ	0xFF2
 15764                           intcon2	equ	0xFF1
 15765                           postinc0	equ	0xFEE
 15766                           fsr0h	equ	0xFEA
 15767                           fsr0l	equ	0xFE9
 15768                           wreg	equ	0xFE8
 15769                           indf1	equ	0xFE7
 15770                           postdec1	equ	0xFE5
 15771                           fsr1h	equ	0xFE2
 15772                           fsr1l	equ	0xFE1
 15773                           bsr	equ	0xFE0
 15774                           indf2	equ	0xFDF
 15775                           postinc2	equ	0xFDE
 15776                           postdec2	equ	0xFDD
 15777                           fsr2h	equ	0xFDA
 15778                           fsr2l	equ	0xFD9
 15779                           status	equ	0xFD8
 15780                           
 15781 ;; *************** function _ISR_Alta *****************
 15782 ;; Defined at:
 15783 ;;		line 93 in file "parcheggio.c"
 15784 ;; Parameters:    Size  Location     Type
 15785 ;;		None
 15786 ;; Auto vars:     Size  Location     Type
 15787 ;;		None
 15788 ;; Return value:  Size  Location     Type
 15789 ;;		None               void
 15790 ;; Registers used:
 15791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15792 ;; Tracked objects:
 15793 ;;		On entry : 0/0
 15794 ;;		On exit  : 0/0
 15795 ;;		Unchanged: 0/0
 15796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15799 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15800 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15801 ;;Total ram usage:       16 bytes
 15802 ;; Hardware stack levels used:    1
 15803 ;; Hardware stack levels required when called:    1
 15804 ;; This function calls:
 15805 ;;		___lwdiv
 15806 ;; This function is called by:
 15807 ;;		Interrupt level 2
 15808 ;; This function uses a non-reentrant model
 15809 ;;
 15810                           
 15811                           	psect	intcode
 15812  000008                     __pintcode:
 15813                           	opt stack 0
 15814  000008                     _ISR_Alta:
 15815                           	opt stack 21
 15816                           
 15817                           ; BSR set to: 15
 15818                           ;incstack = 0
 15819  000008  8248               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15820  00000A  CFFA F069          	movff	pclath,??_ISR_Alta+2
 15821  00000E  CFFB F06A          	movff	pclatu,??_ISR_Alta+3
 15822  000012  EF4C  F02D         	goto	int_func
 15823                           pclatu	equ	0xFFB
 15824                           pclath	equ	0xFFA
 15825                           tblptru	equ	0xFF8
 15826                           tblptrh	equ	0xFF7
 15827                           tblptrl	equ	0xFF6
 15828                           tablat	equ	0xFF5
 15829                           prodh	equ	0xFF4
 15830                           prodl	equ	0xFF3
 15831                           intcon	equ	0xFF2
 15832                           intcon2	equ	0xFF1
 15833                           postinc0	equ	0xFEE
 15834                           fsr0h	equ	0xFEA
 15835                           fsr0l	equ	0xFE9
 15836                           wreg	equ	0xFE8
 15837                           indf1	equ	0xFE7
 15838                           postdec1	equ	0xFE5
 15839                           fsr1h	equ	0xFE2
 15840                           fsr1l	equ	0xFE1
 15841                           bsr	equ	0xFE0
 15842                           indf2	equ	0xFDF
 15843                           postinc2	equ	0xFDE
 15844                           postdec2	equ	0xFDD
 15845                           fsr2h	equ	0xFDA
 15846                           fsr2l	equ	0xFD9
 15847                           status	equ	0xFD8
 15848                           
 15849                           	psect	intcode_body
 15850  005A98                     __pintcode_body:
 15851                           	opt stack 21
 15852  005A98                     int_func:
 15853                           	opt stack 21
 15854  005A98  CFE9 F06B          	movff	fsr0l,??_ISR_Alta+4
 15855  005A9C  CFEA F06C          	movff	fsr0h,??_ISR_Alta+5
 15856  005AA0  CFE1 F06D          	movff	fsr1l,??_ISR_Alta+6
 15857  005AA4  CFE2 F06E          	movff	fsr1h,??_ISR_Alta+7
 15858  005AA8  CFD9 F06F          	movff	fsr2l,??_ISR_Alta+8
 15859  005AAC  CFDA F070          	movff	fsr2h,??_ISR_Alta+9
 15860  005AB0  CFF3 F071          	movff	prodl,??_ISR_Alta+10
 15861  005AB4  CFF4 F072          	movff	prodh,??_ISR_Alta+11
 15862  005AB8  CFF6 F073          	movff	tblptrl,??_ISR_Alta+12
 15863  005ABC  CFF7 F074          	movff	tblptrh,??_ISR_Alta+13
 15864  005AC0  CFF8 F075          	movff	tblptru,??_ISR_Alta+14
 15865  005AC4  CFF5 F076          	movff	tablat,??_ISR_Alta+15
 15866                           
 15867                           ;parcheggio.c: 94: if (INTCON2bits.INTEDG0 == 1) {
 15868  005AC8  ACF1               	btfss	intcon2,6,c	;volatile
 15869  005ACA  D007               	goto	i2l690
 15870                           
 15871                           ;parcheggio.c: 95: INTCON2bits.INTEDG0 = 0;
 15872  005ACC  9CF1               	bcf	intcon2,6,c	;volatile
 15873                           
 15874                           ;parcheggio.c: 96: TMR3H = 0;
 15875  005ACE  0E00               	movlw	0
 15876  005AD0  6EB3               	movwf	4019,c	;volatile
 15877                           
 15878                           ;parcheggio.c: 97: TMR3L = 0;
 15879  005AD2  0E00               	movlw	0
 15880  005AD4  6EB2               	movwf	4018,c	;volatile
 15881                           
 15882                           ;parcheggio.c: 98: distance_error = 0;
 15883  005AD6  9646               	bcf	_distance_error/(0+8),_distance_error& (0+7),c	;volatile
 15884                           
 15885                           ;parcheggio.c: 99: } else {
 15886  005AD8  D031               	goto	i2l7645
 15887  005ADA                     i2l690:
 15888                           
 15889                           ;parcheggio.c: 100: gianni = TMR3H;
 15890  005ADA  CFB3 F044          	movff	4019,_gianni	;volatile
 15891                           
 15892                           ;parcheggio.c: 101: asus = TMR3L;
 15893  005ADE  CFB2 F043          	movff	4018,_asus	;volatile
 15894                           
 15895                           ;parcheggio.c: 102: timerValue2 = gianni;
 15896  005AE2  C044  F040         	movff	_gianni,_timerValue2	;volatile
 15897  005AE6  6A41               	clrf	_timerValue2+1,c	;volatile
 15898                           
 15899                           ;parcheggio.c: 103: timerValue2 = ((timerValue2 << 8) | (asus));
 15900  005AE8  5040               	movf	_timerValue2,w,c	;volatile
 15901  005AEA  0100               	movlb	0	; () banked
 15902  005AEC  6F67               	movwf	??_ISR_Alta& (0+255),b
 15903  005AEE  5043               	movf	_asus,w,c	;volatile
 15904  005AF0  6E40               	movwf	_timerValue2,c	;volatile
 15905  005AF2  C067  F041         	movff	??_ISR_Alta,_timerValue2+1	;volatile
 15906                           
 15907                           ; BSR set to: 0
 15908                           ;parcheggio.c: 104: pulse_time = timerValue2 / 2;
 15909  005AF6  90D8               	bcf	status,0,c
 15910  005AF8  3041               	rrcf	_timerValue2+1,w,c	;volatile
 15911  005AFA  0100               	movlb	0	; () banked
 15912  005AFC  6F67               	movwf	??_ISR_Alta& (0+255),b
 15913  005AFE  3040               	rrcf	_timerValue2,w,c	;volatile
 15914  005B00  0101               	movlb	1	; () banked
 15915  005B02  6F4A               	movwf	_pulse_time& (0+255),b	;volatile
 15916  005B04  C067  F14B         	movff	??_ISR_Alta,_pulse_time+1	;volatile
 15917                           
 15918                           ; BSR set to: 1
 15919                           ;parcheggio.c: 105: sensor_distance[MUX_index] = pulse_time / 58;
 15920  005B08  C14A  F060         	movff	_pulse_time,___lwdiv@dividend	;volatile
 15921  005B0C  C14B  F061         	movff	_pulse_time+1,___lwdiv@dividend+1	;volatile
 15922  005B10  0E00               	movlw	0
 15923  005B12  0100               	movlb	0	; () banked
 15924  005B14  6F63               	movwf	(___lwdiv@divisor+1)& (0+255),b
 15925  005B16  0E3A               	movlw	58
 15926  005B18  6F62               	movwf	___lwdiv@divisor& (0+255),b
 15927  005B1A  EC07  F02E         	call	___lwdiv	;wreg free
 15928  005B1E  5042               	movf	_MUX_index,w,c	;volatile
 15929  005B20  0D02               	mullw	2
 15930  005B22  0E24               	movlw	low _sensor_distance
 15931  005B24  24F3               	addwf	prodl,w,c
 15932  005B26  6ED9               	movwf	fsr2l,c
 15933  005B28  0E00               	movlw	high _sensor_distance
 15934  005B2A  20F4               	addwfc	prodh,w,c
 15935  005B2C  6EDA               	movwf	fsr2h,c
 15936  005B2E  0100               	movlb	0	; () banked
 15937  005B30  C060  FFDE         	movff	?___lwdiv,postinc2
 15938  005B34  0100               	movlb	0	; () banked
 15939  005B36  C061  FFDD         	movff	?___lwdiv+1,postdec2
 15940                           
 15941                           ; BSR set to: 0
 15942                           ;parcheggio.c: 106: INTCON2bits.INTEDG0 = 1;
 15943  005B3A  8CF1               	bsf	intcon2,6,c	;volatile
 15944  005B3C                     i2l7645:
 15945                           
 15946                           ;parcheggio.c: 107: }
 15947                           ;parcheggio.c: 108: INTCONbits.INT0IF = 0;
 15948  005B3C  92F2               	bcf	intcon,1,c	;volatile
 15949  005B3E  C076  FFF5         	movff	??_ISR_Alta+15,tablat
 15950  005B42  C075  FFF8         	movff	??_ISR_Alta+14,tblptru
 15951  005B46  C074  FFF7         	movff	??_ISR_Alta+13,tblptrh
 15952  005B4A  C073  FFF6         	movff	??_ISR_Alta+12,tblptrl
 15953  005B4E  C072  FFF4         	movff	??_ISR_Alta+11,prodh
 15954  005B52  C071  FFF3         	movff	??_ISR_Alta+10,prodl
 15955  005B56  C070  FFDA         	movff	??_ISR_Alta+9,fsr2h
 15956  005B5A  C06F  FFD9         	movff	??_ISR_Alta+8,fsr2l
 15957  005B5E  C06E  FFE2         	movff	??_ISR_Alta+7,fsr1h
 15958  005B62  C06D  FFE1         	movff	??_ISR_Alta+6,fsr1l
 15959  005B66  C06C  FFEA         	movff	??_ISR_Alta+5,fsr0h
 15960  005B6A  C06B  FFE9         	movff	??_ISR_Alta+4,fsr0l
 15961  005B6E  C06A  FFFB         	movff	??_ISR_Alta+3,pclatu
 15962  005B72  C069  FFFA         	movff	??_ISR_Alta+2,pclath
 15963  005B76  9248               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 15964  005B78  0011               	retfie		f
 15965  005B7A                     __end_of_ISR_Alta:
 15966                           	opt stack 0
 15967                           pclatu	equ	0xFFB
 15968                           pclath	equ	0xFFA
 15969                           tblptru	equ	0xFF8
 15970                           tblptrh	equ	0xFF7
 15971                           tblptrl	equ	0xFF6
 15972                           tablat	equ	0xFF5
 15973                           prodh	equ	0xFF4
 15974                           prodl	equ	0xFF3
 15975                           intcon	equ	0xFF2
 15976                           intcon2	equ	0xFF1
 15977                           postinc0	equ	0xFEE
 15978                           fsr0h	equ	0xFEA
 15979                           fsr0l	equ	0xFE9
 15980                           wreg	equ	0xFE8
 15981                           indf1	equ	0xFE7
 15982                           postdec1	equ	0xFE5
 15983                           fsr1h	equ	0xFE2
 15984                           fsr1l	equ	0xFE1
 15985                           bsr	equ	0xFE0
 15986                           indf2	equ	0xFDF
 15987                           postinc2	equ	0xFDE
 15988                           postdec2	equ	0xFDD
 15989                           fsr2h	equ	0xFDA
 15990                           fsr2l	equ	0xFD9
 15991                           status	equ	0xFD8
 15992                           
 15993 ;; *************** function ___lwdiv *****************
 15994 ;; Defined at:
 15995 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\lwdiv.c"
 15996 ;; Parameters:    Size  Location     Type
 15997 ;;  dividend        2    0[BANK0 ] unsigned int 
 15998 ;;  divisor         2    2[BANK0 ] unsigned int 
 15999 ;; Auto vars:     Size  Location     Type
 16000 ;;  quotient        2    5[BANK0 ] unsigned int 
 16001 ;;  counter         1    4[BANK0 ] unsigned char 
 16002 ;; Return value:  Size  Location     Type
 16003 ;;                  2    0[BANK0 ] unsigned int 
 16004 ;; Registers used:
 16005 ;;		wreg, status,2, status,0
 16006 ;; Tracked objects:
 16007 ;;		On entry : 0/0
 16008 ;;		On exit  : 0/0
 16009 ;;		Unchanged: 0/0
 16010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16011 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16012 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16014 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16015 ;;Total ram usage:        7 bytes
 16016 ;; Hardware stack levels used:    1
 16017 ;; This function calls:
 16018 ;;		Nothing
 16019 ;; This function is called by:
 16020 ;;		_ISR_Alta
 16021 ;; This function uses a non-reentrant model
 16022 ;;
 16023                           
 16024                           	psect	text38
 16025  005C0E                     __ptext38:
 16026                           	opt stack 0
 16027  005C0E                     ___lwdiv:
 16028                           	opt stack 21
 16029                           
 16030                           ;incstack = 0
 16031  005C0E  0E00               	movlw	0
 16032  005C10  0100               	movlb	0	; () banked
 16033  005C12  6F66               	movwf	(___lwdiv@quotient+1)& (0+255),b
 16034  005C14  0E00               	movlw	0
 16035  005C16  6F65               	movwf	___lwdiv@quotient& (0+255),b
 16036                           
 16037                           ; BSR set to: 0
 16038  005C18  0100               	movlb	0	; () banked
 16039  005C1A  5162               	movf	___lwdiv@divisor& (0+255),w,b
 16040  005C1C  0100               	movlb	0	; () banked
 16041  005C1E  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 16042  005C20  B4D8               	btfsc	status,2,c
 16043  005C22  D02C               	goto	i2l1278
 16044                           
 16045                           ; BSR set to: 0
 16046  005C24  0E01               	movlw	1
 16047  005C26  0100               	movlb	0	; () banked
 16048  005C28  6F64               	movwf	___lwdiv@counter& (0+255),b
 16049  005C2A  D006               	goto	i2l7615
 16050  005C2C                     i2l7613:
 16051                           
 16052                           ; BSR set to: 0
 16053  005C2C  0100               	movlb	0	; () banked
 16054  005C2E  90D8               	bcf	status,0,c
 16055  005C30  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 16056  005C32  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 16057  005C34  0100               	movlb	0	; () banked
 16058  005C36  2B64               	incf	___lwdiv@counter& (0+255),f,b
 16059  005C38                     i2l7615:
 16060                           
 16061                           ; BSR set to: 0
 16062  005C38  0100               	movlb	0	; () banked
 16063  005C3A  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 16064  005C3C  D7F7               	goto	i2l7613
 16065  005C3E                     i2l7617:
 16066                           
 16067                           ; BSR set to: 0
 16068  005C3E  0100               	movlb	0	; () banked
 16069  005C40  90D8               	bcf	status,0,c
 16070  005C42  3765               	rlcf	___lwdiv@quotient& (0+255),f,b
 16071  005C44  3766               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 16072                           
 16073                           ; BSR set to: 0
 16074  005C46  0100               	movlb	0	; () banked
 16075  005C48  5162               	movf	___lwdiv@divisor& (0+255),w,b
 16076  005C4A  0100               	movlb	0	; () banked
 16077  005C4C  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 16078  005C4E  0100               	movlb	0	; () banked
 16079  005C50  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16080  005C52  0100               	movlb	0	; () banked
 16081  005C54  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 16082  005C56  A0D8               	btfss	status,0,c
 16083  005C58  D00A               	goto	i2l7625
 16084                           
 16085                           ; BSR set to: 0
 16086  005C5A  0100               	movlb	0	; () banked
 16087  005C5C  5162               	movf	___lwdiv@divisor& (0+255),w,b
 16088  005C5E  0100               	movlb	0	; () banked
 16089  005C60  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 16090  005C62  0100               	movlb	0	; () banked
 16091  005C64  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 16092  005C66  0100               	movlb	0	; () banked
 16093  005C68  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 16094                           
 16095                           ; BSR set to: 0
 16096  005C6A  0100               	movlb	0	; () banked
 16097  005C6C  8165               	bsf	___lwdiv@quotient& (0+255),0,b
 16098  005C6E                     i2l7625:
 16099                           
 16100                           ; BSR set to: 0
 16101  005C6E  0100               	movlb	0	; () banked
 16102  005C70  90D8               	bcf	status,0,c
 16103  005C72  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 16104  005C74  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 16105                           
 16106                           ; BSR set to: 0
 16107  005C76  0100               	movlb	0	; () banked
 16108  005C78  2F64               	decfsz	___lwdiv@counter& (0+255),f,b
 16109  005C7A  D7E1               	goto	i2l7617
 16110  005C7C                     i2l1278:
 16111                           
 16112                           ; BSR set to: 0
 16113  005C7C  C065  F060         	movff	___lwdiv@quotient,?___lwdiv
 16114  005C80  C066  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 16115                           
 16116                           ; BSR set to: 0
 16117  005C84  0012               	return		;funcret
 16118  005C86                     __end_of___lwdiv:
 16119                           	opt stack 0
 16120                           pclatu	equ	0xFFB
 16121                           pclath	equ	0xFFA
 16122                           tblptru	equ	0xFF8
 16123                           tblptrh	equ	0xFF7
 16124                           tblptrl	equ	0xFF6
 16125                           tablat	equ	0xFF5
 16126                           prodh	equ	0xFF4
 16127                           prodl	equ	0xFF3
 16128                           intcon	equ	0xFF2
 16129                           intcon2	equ	0xFF1
 16130                           postinc0	equ	0xFEE
 16131                           fsr0h	equ	0xFEA
 16132                           fsr0l	equ	0xFE9
 16133                           wreg	equ	0xFE8
 16134                           indf1	equ	0xFE7
 16135                           postdec1	equ	0xFE5
 16136                           fsr1h	equ	0xFE2
 16137                           fsr1l	equ	0xFE1
 16138                           bsr	equ	0xFE0
 16139                           indf2	equ	0xFDF
 16140                           postinc2	equ	0xFDE
 16141                           postdec2	equ	0xFDD
 16142                           fsr2h	equ	0xFDA
 16143                           fsr2l	equ	0xFD9
 16144                           status	equ	0xFD8
 16145                           pclatu	equ	0xFFB
 16146                           pclath	equ	0xFFA
 16147                           tblptru	equ	0xFF8
 16148                           tblptrh	equ	0xFF7
 16149                           tblptrl	equ	0xFF6
 16150                           tablat	equ	0xFF5
 16151                           prodh	equ	0xFF4
 16152                           prodl	equ	0xFF3
 16153                           intcon	equ	0xFF2
 16154                           intcon2	equ	0xFF1
 16155                           postinc0	equ	0xFEE
 16156                           fsr0h	equ	0xFEA
 16157                           fsr0l	equ	0xFE9
 16158                           wreg	equ	0xFE8
 16159                           indf1	equ	0xFE7
 16160                           postdec1	equ	0xFE5
 16161                           fsr1h	equ	0xFE2
 16162                           fsr1l	equ	0xFE1
 16163                           bsr	equ	0xFE0
 16164                           indf2	equ	0xFDF
 16165                           postinc2	equ	0xFDE
 16166                           postdec2	equ	0xFDD
 16167                           fsr2h	equ	0xFDA
 16168                           fsr2l	equ	0xFD9
 16169                           status	equ	0xFD8
 16170                           
 16171                           	psect	param0
 16172  0000                     pclatu	equ	0xFFB
 16173                           pclath	equ	0xFFA
 16174                           tblptru	equ	0xFF8
 16175                           tblptrh	equ	0xFF7
 16176                           tblptrl	equ	0xFF6
 16177                           tablat	equ	0xFF5
 16178                           prodh	equ	0xFF4
 16179                           prodl	equ	0xFF3
 16180                           intcon	equ	0xFF2
 16181                           intcon2	equ	0xFF1
 16182                           postinc0	equ	0xFEE
 16183                           fsr0h	equ	0xFEA
 16184                           fsr0l	equ	0xFE9
 16185                           wreg	equ	0xFE8
 16186                           indf1	equ	0xFE7
 16187                           postdec1	equ	0xFE5
 16188                           fsr1h	equ	0xFE2
 16189                           fsr1l	equ	0xFE1
 16190                           bsr	equ	0xFE0
 16191                           indf2	equ	0xFDF
 16192                           postinc2	equ	0xFDE
 16193                           postdec2	equ	0xFDD
 16194                           fsr2h	equ	0xFDA
 16195                           fsr2l	equ	0xFD9
 16196                           status	equ	0xFD8
 16197                           
 16198                           	psect	temp
 16199  000048                     btemp:
 16200                           	opt stack 0
 16201  000048                     	ds	1
 16202  0000                     int$flags	set	btemp
 16203                           pclatu	equ	0xFFB
 16204                           pclath	equ	0xFFA
 16205                           tblptru	equ	0xFF8
 16206                           tblptrh	equ	0xFF7
 16207                           tblptrl	equ	0xFF6
 16208                           tablat	equ	0xFF5
 16209                           prodh	equ	0xFF4
 16210                           prodl	equ	0xFF3
 16211                           intcon	equ	0xFF2
 16212                           intcon2	equ	0xFF1
 16213                           postinc0	equ	0xFEE
 16214                           fsr0h	equ	0xFEA
 16215                           fsr0l	equ	0xFE9
 16216                           wreg	equ	0xFE8
 16217                           indf1	equ	0xFE7
 16218                           postdec1	equ	0xFE5
 16219                           fsr1h	equ	0xFE2
 16220                           fsr1l	equ	0xFE1
 16221                           bsr	equ	0xFE0
 16222                           indf2	equ	0xFDF
 16223                           postinc2	equ	0xFDE
 16224                           postdec2	equ	0xFDD
 16225                           fsr2h	equ	0xFDA
 16226                           fsr2l	equ	0xFD9
 16227                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    80
    Data        11
    BSS         179
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      71
    BANK0           160    132     137
    BANK1           256     85     236
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 24
		 -> sin@coeff_a(CODE[20]), sin@coeff_b(CODE[16]), atan@coeff_a(CODE[24]), atan@coeff_b(CODE[20]), 

    CANreceiveMessage@msg	PTR struct . size(2) Largest target is 15
		 -> msg(BANK1[15]), 

    CANsendMessage@data	PTR unsigned char  size(2) Largest target is 8
		 -> can_send@data_correction1(BANK0[0]), data_speed(BANK1[8]), data_brake(BANK1[8]), data_steering(BANK1[8]), 
		 -> data_correction(BANK1[8]), data_test(BANK1[8]), data(BANK1[8]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Alta in COMRAM

    None.

Critical Paths under _ISR_Bassa in COMRAM

    _ISR_Bassa->_CANreceiveMessage

Critical Paths under _main in BANK0

    _park_search->_parallelo
    _park_routine->_parallelo
    _parallelo->_asin
    _can_send->_CANsendMessage
    _sin->_floor
    _floor->___xxtofl
    ___xxtofl->___fltol
    ___fltol->___flneg
    ___flsub->_floor
    _asin->_sqrt
    _sqrt->___flneg
    _atan->___flge
    _fabs->___flneg
    ___flneg->___fladd
    _eval_poly->___fladd
    ___flmul->___fldiv
    ___fladd->___flmul
    ___flge->_fabs
    _delay_s->_delay_ms
    _delay_ms->___wmul
    _configurazione->_CANInitialize
    _CANInitialize->_CANSetFilter
    _CANInitialize->_CANSetMask

Critical Paths under _ISR_Alta in BANK0

    _ISR_Alta->___lwdiv

Critical Paths under _ISR_Bassa in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_park_routine
    _park_routine->_matematica
    _parallelo->_asin
    _matematica->_cos
    _cos->_asin
    _sin->___flsub
    _asin->_atan

Critical Paths under _ISR_Alta in BANK1

    None.

Critical Paths under _ISR_Bassa in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR_Alta in BANK2

    None.

Critical Paths under _ISR_Bassa in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Alta in BANK3

    None.

Critical Paths under _ISR_Bassa in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Alta in BANK4

    None.

Critical Paths under _ISR_Bassa in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Alta in BANK5

    None.

Critical Paths under _ISR_Bassa in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Alta in BANK6

    None.

Critical Paths under _ISR_Bassa in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Alta in BANK7

    None.

Critical Paths under _ISR_Bassa in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Alta in BANK8

    None.

Critical Paths under _ISR_Bassa in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Alta in BANK9

    None.

Critical Paths under _ISR_Bassa in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Alta in BANK10

    None.

Critical Paths under _ISR_Bassa in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Alta in BANK11

    None.

Critical Paths under _ISR_Bassa in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Alta in BANK12

    None.

Critical Paths under _ISR_Bassa in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  346221
                    _can_interpreter
                     _configurazione
                       _park_routine
                        _park_search
 ---------------------------------------------------------------------------------
 (1) _park_search                                          2     2      0   94936
                                             37 BANK1      2     2      0
                       _CANisTxReady
                     _CANsendMessage
                           ___xxtofl
                                _abs
                          _parallelo
 ---------------------------------------------------------------------------------
 (1) _park_routine                                        12    12      0  245351
                                             73 BANK1     12    12      0
                       _CANisTxReady
                     _CANsendMessage
                            ___fladd
                            ___flneg
                            ___fltol
                           ___xxtofl
                           _can_send
                           _delay_ms
                            _delay_s
                         _matematica
                          _parallelo
 ---------------------------------------------------------------------------------
 (2) _parallelo                                            2     2      0   86191
                                            130 BANK0      2     2      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _abs
                               _asin
                           _can_send
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _can_send                                             0     0      0    7857
                       _CANisTxReady
                     _CANsendMessage
 ---------------------------------------------------------------------------------
 (4) _CANsendMessage                                      16     8      8    7677
                                             23 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (4) _CANisTxReady                                         1     1      0      37
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     247
                                             23 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _matematica                                          32    32      0  133218
                                             45 BANK1     28    28      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                               _asin
                                _cos
 ---------------------------------------------------------------------------------
 (3) _cos                                                 12     8      4   57965
                                             37 BANK1      8     4      4
                            ___fladd
                             ___flge
                               _asin (ARG)
                                _sin
 ---------------------------------------------------------------------------------
 (4) _sin                                                 17    13      4   49794
                                              8 BANK1     17    13      4
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (5) _floor                                               10     6      4   10191
                                            121 BANK0     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                8     2      6     452
                                             23 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4     784
                                            107 BANK0     14    10      4
                            ___fltol (ARG)
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     722
                                             97 BANK0     10     6      4
                            ___fladd (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    6777
                                              0 BANK1      8     0      8
                            ___fladd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (3) _asin                                                36    32      4   57438
                                            126 BANK0      4     0      4
                                             17 BANK1     20    20      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                               _atan
                               _fabs
                               _sqrt
 ---------------------------------------------------------------------------------
 (3) _sqrt                                                29    25      4    1467
                                             97 BANK0     29    25      4
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
 ---------------------------------------------------------------------------------
 (4) _atan                                                21    17      4   34323
                                            113 BANK0      4     0      4
                                              0 BANK1     17    17      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (4) _fabs                                                 4     0      4    1621
                                             97 BANK0      4     0      4
                            ___flneg
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4    1297
                                             93 BANK0      4     0      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _eval_poly                                           16     8      8   13009
                                             93 BANK0     16     8      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    5541
                                             48 BANK0     25    17      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    6290
                                             73 BANK0     20    12      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1498
                                            101 BANK0     12     4      8
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4347
                                             23 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) _delay_s                                              2     2      0     639
                                             31 BANK0      2     2      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             2     0      2     571
                                             29 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                             23 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _configurazione                                       0     0      0    5934
                      _CANInitialize
 ---------------------------------------------------------------------------------
 (2) _CANInitialize                                       12     7      5    5934
                                             37 BANK0     12     7      5
                   _CANOperationMode
                       _CANSetFilter
                         _CANSetMask
 ---------------------------------------------------------------------------------
 (3) _CANSetMask                                          14     9      5    1286
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANSetFilter                                        14     9      5    3858
                                             23 BANK0     14     9      5
 ---------------------------------------------------------------------------------
 (3) _CANOperationMode                                     1     1      0      44
                                             23 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _can_interpreter                                      4     4      0       0
                                             23 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR_Bassa                                           23    23      0    1251
                                             12 COMRAM    23    23      0
                  _CANreceiveMessage
 ---------------------------------------------------------------------------------
 (8) _CANreceiveMessage                                   12    10      2    1137
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR_Alta                                            16    16      0     395
                                              7 BANK0     16    16      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (10) ___lwdiv                                             7     3      4     395
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _can_interpreter
   _configurazione
     _CANInitialize
       _CANOperationMode
       _CANSetFilter
       _CANSetMask
   _park_routine
     _CANisTxReady
     _CANsendMessage
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___flneg
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___flneg (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _can_send
       _CANisTxReady
       _CANsendMessage
     _delay_ms
       ___wmul
     _delay_s
       _delay_ms
         ___wmul
     _matematica
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flmul
         ___fldiv (ARG)
       ___flneg
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _cos
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _asin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _atan
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _eval_poly
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _fabs
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
           _sqrt
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
             ___flneg (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _sin (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flsub
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             _floor (ARG)
               ___fladd
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flge
                 _fabs (ARG)
                   ___flneg
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               ___xxtofl
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___flneg (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                       ___flmul (ARG)
                         ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                 _abs (ARG)
               _frexp
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _floor
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___flge
               _fabs (ARG)
                 ___flneg
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___flneg (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
             ___xxtofl
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___flneg (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                     ___flmul (ARG)
                       ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
               _abs (ARG)
             _frexp
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
   _park_search
     _CANisTxReady
     _CANsendMessage
     ___xxtofl
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       _abs (ARG)
     _abs
     _parallelo
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
       ___fldiv
       ___flge
         _fabs (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       ___flmul
         ___fldiv (ARG)
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _abs (ARG)
       _abs
       _asin
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___fldiv
         ___flge
           _fabs (ARG)
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
         ___flneg
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         _atan
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv
           ___flge
             _fabs (ARG)
               ___flneg
                 ___fladd (ARG)
                   ___fldiv (ARG)
                   ___flmul (ARG)
                     ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           _fabs
             ___flneg
               ___fladd (ARG)
                 ___fldiv (ARG)
                 ___flmul (ARG)
                   ___fldiv (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
         _fabs
           ___flneg
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
         _sqrt
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
           ___flneg (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
       _can_send
         _CANisTxReady
         _CANsendMessage
       _sqrt
         ___fladd (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
         ___flneg (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)

 _ISR_Bassa (ROOT)
   _CANreceiveMessage

 _ISR_Alta (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             CFF      0       0      31        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     55      EC       7       92.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     84      89       5       85.6%
BITCOMRAM           5E      0       2       0        2.1%
COMRAM              5E     23      47       1       75.5%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1BC      20        0.0%
DATA                 0      0     1BC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat May 07 15:48:40 2016

                ___fldiv@aexp 008F                  ___fldiv@bexp 008E                             _n 0130  
                           _x 013C                             _z 0140          __end_of_CANSetFilter 1858  
                ___fldiv@sign 0083            delay_s@repeat_loop 0080                            bsr 000FE0  
         ___wmul@multiplicand 0079                   __CFG_BORV$3 000000                  __CFG_CP0$OFF 000000  
                __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000  
                 __CFG_OSC$HS 000000                    _MUX_select 0100                           l402 1F30  
                         l403 1F34                           l500 15B4                           l404 1F40  
                         l501 15B8                           l510 16C4                           l502 15C4  
                         l511 16D0                           l503 15C8                           l520 17DC  
                         l512 16D4                           l504 15D4                           l440 41F0  
                         l432 41B0                           l521 17E0                           l513 16E0  
                         l433 41B4                           l522 17EC                           l514 16E4  
                         l450 42FC                           l434 41C0                           l370 1918  
                         l523 17F0                           l515 16F0                           l507 16B0  
                         l451 4308                           l443 42C8                           l435 41C4  
                         l363 1ADC                           l524 17FC                           l508 16B4  
                         l444 42CC                           l436 41D0                           l380 1AF6  
                         l364 186E                           l525 1800                           l509 16C0  
                         l445 42D8                           l437 41D4                           l381 1BEE  
                         l373 1A28                           l365 1872                           l526 180C  
                         l518 17CC                           l470 1276                           l446 42DC  
                         l438 41E0                           l358 50E6                           l390 1CBC  
                         l382 1B7E                           l374 1A2C                           l366 196A  
                         l519 17D0                           l471 1282                           l463 1242  
                         l447 42E8                           l439 41E4                           l359 50F0  
                         l383 1B88                           l375 1A38                           l367 18FA  
                         l480 138C                           l464 1246                           l448 42EC  
                         l384 1B92                           l368 1904                           l481 1390  
                         l465 1252                           l449 42F8                           l393 1D76  
                         l385 1B9C                           l369 190E                           l801 4BF8  
                         l490 149C                           l482 139C                           l474 135C  
                         l466 1256                           l394 1D7A                           l378 1D60  
                         l491 14A8                           l475 1360                           l467 1262  
                         l395 1E72                           l379 1AF2                           l723 539C  
                         l715 5DE6                           l492 14AC                           l476 136C  
                         l468 1266                           l556 5F96                           l396 1E02  
                         l388 1CAC                           l493 14B8                           l485 1478  
                         l477 1370                           l469 1272                           l397 1E0C  
                         l389 1CB0                           l725 5256                           l486 147C  
                         l478 137C                           l398 1E16                           l487 1488  
                         l479 1380                           l399 1E20                           l807 4BBA  
                         l496 1594                           l488 148C                           l736 5398  
                         l497 1598                           l489 1498                           l569 5F16  
                         l498 15A4                           l499 15A8                           l771 3754  
                         l755 3442                           l764 34AE                           l765 3632  
                         l758 3480                           l871 5F42                           l768 36CA  
                __CFG_CPB$OFF 000000                  __CFG_CPD$OFF 000000                           _abs 5F20  
                         _asd 0231                           _dir 0232                           _cos 59B4  
                         _jjj 0128                           _kkk 012C                           _msg 014E  
                         _sin 4354                           prod 000FF3                           wreg 000FE8  
                ___flmul@aexp 009D                  ___flmul@bexp 00A2               ?_configurazione 0001  
                ___flmul@sign 009C                  ___flmul@temp 00A7                  ___flmul@prod 00A3  
                __CFG_LVP$OFF 000000                  ___fltol@exp1 00CA                  __CFG_WDT$OFF 000000  
                        ?_abs 0077                          l1071 5E6C                          l1330 2C5A  
                        l1314 465A                          l1331 2C4E                          l1332 2C1A  
                        l1078 54E6                          l1423 3272                          l1416 2FD6  
                        l1433 3384                          l1425 32E0                          l1347 2DCE  
                        l1356 2E62                          l1472 4FAE                          l1473 4FC6  
                        l1465 4F52                          l1386 3E24                          l1458 4EA6  
                        l5003 423A                          l1395 3E5C                          l1483 577E  
                        l1397 3ECA                          l1389 3DCC                          l5211 13E6  
                        l5107 103C                          l5205 13A0                          l5125 10F6  
                        l5053 0E10                          l5029 430C                          ?_cos 01B2  
                        l5143 11B0                          l5071 0EC8                          l5313 173A  
                        l6201 2B34                          l5307 16F4                          l5171 1286  
                        l5341 1810                          l5245 1502                          l7101 39BC  
                        l7013 1F44                          l5239 14BC                          l6303 2E00  
                        l7103 39C4                          l7007 1F24                          l5273 15D8  
                        l5177 12CC                          l5089 0F82                          l6313 2E22  
                        l6321 2E3C                          l6209 2B5E                          l6251 2C2E  
                        l6403 2FFE                          l7107 3A4A                          l7115 3AC0  
                        l7051 384A                          l7203 452A                          l6501 5442  
                        l6309 2E16                          l6253 2C34                          l6173 2ABC  
                        l7109 3A84                          l5279 161E                          l6511 5532  
                        l6351 2EF8                          l6343 2ECA                          l6319 2E36  
                        l6239 2B9A                          l6191 2B06                          l6167 2A98  
                        l7135 3BD6                          l7127 3BA0                          l7071 38C8  
                        l7063 3896                          l7231 553A                          l5481 50F4  
                        l7313 5F58                          l6505 5494                          l6353 2EFC  
                        l6329 2E5C                          l6281 2CCC                          l6257 2C3E  
                        l6185 2AF2                          l6177 2AC6                          l7065 38A8  
                        l7305 5A3C                          l7241 5588                          l7401 51F2  
                        l7219 5F0A                          l6347 2EEC                          l6339 2EB8  
                        l6275 2CBC                          l6267 2C7E                          l6451 3286  
                        l7171 4E1E                          l7155 4C56                          l7091 393A  
                        l7083 390A                          l7251 5600                          l5485 50FC  
                        l7317 5F6A                          l6277 2CC2                          l6285 2CDE  
                        l6197 2B2A                          l6461 32DA                          l6445 325C  
                        l6605 5018                          l7245 55C0                          l7421 52B4  
                        l5487 5140                          l5479 50DE                          l6711 3E46  
                        l6631 3C14                          l6359 2F10                          l6295 2DAE  
                        l6471 3330                          l6375 2F64                          l6519 5EA4  
                        l7175 4E36                          l7159 4CCA                          l6615 5BA0  
                        l7343 4B7C                          l7351 4BDC                          l7431 52FC  
                        l4937 5FA4                          l6705 3E20                          l6641 3C42  
                        l6393 2FBE                          l6377 2F6A                          l6369 2F40  
                        l7265 46CA                          l6545 593C                          l6529 58CE  
                        l7601 381E                          l7409 5206                          l4971 4124  
                        l4955 406E                          l6651 3C72                          l6475 3356  
                        l6395 2FC4                          l6387 2F9A                          l6379 2F7C  
                        l6563 59A2                          l6555 596C                          l7187 438A  
                        l7427 52C4                          l6741 3F48                          l6717 3E70  
                        l6661 3CA0                          l6637 3C38                          l6485 33A4  
                        l6477 336A                          l7277 47F8                          l6557 597C  
                        l6549 5950                          l6581 4EE6                          l6573 4EB6  
                        l7349 4BD6                          l7461 33CA                          l6751 3F8E  
                        l6743 3F5C                          l6727 3EC4                          l6487 33AE  
                        l6399 2FEA                          l6559 5986                          l6591 4F90  
                        l6583 4EF6                          l7199 44B4                          l6911 1BA6  
                        l7471 3438                          l6753 3F92                          l6745 3F7E  
                        l6737 3F1A                          l6681 3D22                          l6673 3CF4  
                        l6657 3C96                          l6497 53F4                          l7289 48DA  
                        l6593 4FA0                          l6585 4F34                          l7465 33F2  
                        l7449 535A                          l6691 3DA0                          l6579 4EDE  
                        l6931 1CA0                          l6835 1922                          l7491 34A6  
                        l4997 41F4                          l6861 1A3C                          l7581 37AC  
                        l6775 57E6                          l6855 1A1C                          l7583 37B8  
                        l6777 588A                          l6793 56C0                          l6937 1CC0  
                        l6699 3DD8                          ?_sin 0195                          l6797 56E2  
                        l6789 56AC                          l7597 37E6                          l6987 1E2A  
                        _LATA 000F89                          _LATB 000F8A                          _LATC 000F8B  
                        u6020 112C                          u6110 12A6                          u6025 1120  
                        u6115 129A                          u6035 118C                          u8000 31FE  
                        u5620 40A0                          u8005 31F2                          u6510 1830  
                        u6430 1714                          u6350 15F8                          u6270 14DC  
                        u6190 13C0                          u5710 4214                          u9000 1E96  
                        u5625 4094                          u6515 1824                          u6435 1708  
                        u6355 15EC                          u6275 14D0                          u6195 13B4  
                        u5715 4208                          u5635 4100                          u5900 0EFE  
                        u5820 0D8C                          u5580 3FEA                          u9005 1E8A  
                        u9015 1EF6                          u8080 3344                          u9200 4C88  
                        u5905 0EF2                          u5825 0D80                          u5585 3FDE  
                        u5915 0F5E                          u5835 0DEC                          u5595 404A  
                        u5940 0FB8                          u5860 0E44                          u7620 2BE4  
                        u8180 58EE                          u5790 432C                          u7630 2BFC  
                        u8350 5BD2                          u7640 2BFE                          u5945 0FAC  
                        u5865 0E38                          u8185 58E2                          u5955 1018  
                        u5875 0EA4                          u5795 4320                          u5980 1072  
                        u9260 44AE                          u9421 4A10                          u9190 4C86  
                        u8358 5BD6                          u8630 56D0                          u9270 44B0  
                        u9510 5202                          u9431 4A1C                          u8560 3F2E  
                        u5985 1066                          u8730 1942                          u5995 10D2  
                        u8740 198E                          u9470 4BD4                          u8735 1936  
                        u9640 33D2                          u8745 1982                          u8755 19EE  
                        u8860 1BC6                          u9580 530C                          u8870 1C12  
                        u9646 33D4                          u8865 1BBA                          u9770 378A  
                        u8875 1C06                          u8885 1C72                          u8990 1E4A  
                        u8995 1E3E                          u9887 5F0C           __size_of_CANSetMask 039E  
                        abs@a 0077                          _alfa 011C                          _fabs 5E40  
                        _data 015D                          _beta 0120                          _atan 4C0A  
                        _asin 466C                          _main 5DA8                          _asus 0043  
                        cos@f 01B2                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr0l 000FE9                          fsr2h 000FDA                          indf1 000FE7  
                        fsr1l 000FE1                          indf2 000FDF                          fsr2l 000FD9  
                        btemp 0048                          _sqrt 382C                          pclat 000FFA  
                        sin@f 0195                          sin@y 0199                          prodh 000FF4  
                        prodl 000FF3                          start 0254                 __CFG_IESO$OFF 000000  
             ___fldiv@new_exp 0088                delay_s@value_s 007F                 __CFG_MCLRE$ON 000000  
                ___param_bank 000000              _CANOperationMode 5F9C                         ??_abs 0079  
                       ??_cos 00E3                         ??_sin 00E3    __size_of_CANreceiveMessage 050C  
                       ?_fabs 00C1                 ___fltol@sign1 00C9                         ?_atan 00D1  
                       ?_asin 00DE               __end_of___fladd 2F22                         ?_main 0001  
             __end_of___fldiv 3FB6               __end_of___flneg 5EB6               __end_of___flmul 33C8  
             __end_of___flsub 5E40               __end_of___fltol 59B4                         ?_sqrt 00C1  
                       _T0CON 000FD5                         _T3CON 000FB1            __size_of_ISR_Bassa 023C  
             __end_of___lwdiv 5C86                         i1l410 2806                         i1l711 020C  
                       i1l704 0188                         i1l707 0208                         i1l697 009A  
                       i2l690 5ADA                         _TMR0H 000FD7                         _TMR0L 000FD6  
                       _TMR3H 000FB3                         _TMR3L 000FB2                         _PORTA 000F80  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
          __end_ofsin@coeff_a 0D41            __end_ofsin@coeff_b 0D51                 __CFG_PWRT$OFF 000000  
            __end_of_ISR_Alta 5B7A               __end_of_delay_s 5F78                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
          CANInitialize@flags 0089                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                         _bordo 0124                         fabs@d 00C1  
                       _first 0237                         _floor 566C                         _frexp 5B7A  
                       _errno 0148                         atan@f 00D1                         atan@x 0191  
                       atan@y 018D                         asin@x 00DE                         asin@y 01AA  
    can_send@data_correction1 0087                __pbitbssCOMRAM 0230                         sin@x2 01A1  
                       tablat 000FF5          __end_of_CANisTxReady 5F9C                         sqrt@a 00C1  
                       sqrt@i 00CA                         sqrt@p 00CF                         status 000FD8  
                ?_park_search 0001               __initialization 5CF2                  __end_of_fabs 5E7E  
                __end_of_atan 4E5C                  __end_of_asin 497E                  __end_of_main 5DF8  
                __end_of_sqrt 3BF6                        ??_fabs 00C5                        ??_atan 00D5  
                      ??_asin 00E2                        ??_main 00E4             _park_routine$3740 01DE  
           _park_routine$3739 01DA                        ??_sqrt 00C5                 __activetblptr 000003  
           _CANisTxReady$2845 0077                        _ADCON1 000FC1                        ?_floor 00D9  
                      ?_frexp 0077                        _CANCON 000F6F            _distance_received1 0235  
             __CFG_BBSIZ$1024 000000             _spazio_parcheggio 01E6                        i1l6103 01C2  
                      i1l6113 01F2                        i1l6033 008C                        i1l6107 01CA  
                      i1l6063 00CE                        i1l6067 00D6                        i2l1278 5C7C  
                      i1l5711 2A44                        i1l5703 2A0C                        i1l6095 0192  
                      i1l5713 2A76                        i1l5641 2792                        i1l5633 2756  
                      i1l5625 26E6                        i1l6089 0164                        i1l5707 2A28  
                      i1l5651 2800                        i1l5645 27B0                        i1l5637 2774  
                      i1l5649 27CE                        i1l5695 29D4                        i1l5687 2966  
                      i1l5699 29F0                        i2l7613 5C2C                        i2l7615 5C38  
                      i2l7625 5C6E                        i2l7617 5C3E                        i2l7645 5B3C  
                      _RXB0D0 000F66                        _RXB0D1 000F67                        _RXB0D2 000F68  
                      _RXB0D3 000F69                        _RXB0D4 000F6A                        _RXB1D0 000F56  
                      _RXB0D5 000F6B                        _RXB1D1 000F57                        _RXB0D6 000F6C  
                      _RXB1D2 000F58                        _RXB0D7 000F6D                        _RXB1D3 000F59  
                      _RXB1D4 000F5A                        _RXB1D5 000F5B                        _RXB1D6 000F5C  
                      _RXB1D7 000F5D                        _TXB0D0 000F46                        _TXB0D1 000F47  
                      _TXB0D2 000F48                        _TXB0D3 000F49                        _TXB1D0 000F36  
                      _TXB0D4 000F4A                        _TXB1D1 000F37                        _TXB0D5 000F4B  
                      _TXB1D2 000F38                        _TXB0D6 000F4C                        _TXB1D3 000F39  
                      _TXB0D7 000F4D                        _TXB2D0 000F26                        _TXB1D4 000F3A  
                      _TXB2D1 000F27                        _TXB1D5 000F3B                        _TXB2D2 000F28  
                      _TXB1D6 000F3C                        _TXB2D3 000F29                        _TXB1D7 000F3D  
                      _TXB2D4 000F2A                        _TXB2D5 000F2B                        _TXB2D6 000F2C  
                      _TXB2D7 000F2D            CANsendMessage@data 007B              __end_of_can_send 566C  
          CANsendMessage@tamp 0083              __end_of___xxtofl 502A             __end_of_ISR_Bassa 0254  
            __end_of_delay_ms 5F20         __size_of_CANSetFilter 0B06                __CFG_XINST$OFF 000000  
                      ___flge 53A6               _data_correction 016D                     ??___fladd 00B1  
                      ___wmul 5EB6                     ??___fldiv 007F                     ??___flneg 00C1  
              __CFG_STVREN$ON 000000                     ??___flmul 0098                     ??___flsub 00E3  
                   ??___fltol 00C5                     ??___lwdiv 0064                  ??_CANSetMask 007C  
                      _gianni 0044                        _raggio 01E8                        clear_0 5CF8  
                      clear_1 5D12                     ??_delay_s 007F                        floor@i 00DD  
                      floor@x 00D9               __CFG_BOREN$BOHW 000000                        sin@sgn 01A5  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                  _CANSetFilter 0D52                    ___flge@ff1 00C5  
                  ___flge@ff2 00C9                  ___xxtofl@arg 00D5                  ___xxtofl@exp 00D4  
                ___xxtofl@val 00CB                    __accesstop 0060       __end_of__initialization 5D4A  
          __end_of_CANSetMask 4354               __CFG_PBADEN$OFF 000000                    ___flneg@f1 00BD  
               ?_park_routine 0001                  eval_poly@res 00C9                 ___rparam_used 000000  
                  ___fltol@f1 00C1                __pcstackCOMRAM 0001                     ?_ISR_Alta 0001  
                __pidataBANK0 5FBC                  __pidataBANK1 5FB2                 __end_of_floor 5790  
               __end_of_frexp 5C0E              ??_configurazione 0091         CANSetFilter@numBuffer 0080  
                _actual_speed 0144         __size_of_CANisTxReady 0024                       ??_floor 00DD  
                     ??_frexp 007D      __end_of_CANOperationMode 5FB2                    __pbssBANK0 00E4  
                  __pbssBANK1 0100               _sensor_distance 0024            __size_of_eval_poly 0118  
                  _data_brake 0165                ??_park_routine 01D6                 ISR_Bassa@gigi 0022  
     __size_of_CANsendMessage 078C                    _data_speed 0175                    _activation 0230  
    __size_of_can_interpreter 0054            __size_of_parallelo 028C          __size_of_park_search 01B6  
           _old_alignment_gap 0134                    ??_ISR_Alta 0067                       ?___flge 00C5  
                     ?___wmul 0077                       _CANSTAT 000F6E                  _CANisTxReady 5F78  
                     _BRGCON1 000F70                       _BRGCON2 000F71                       _BRGCON3 000F72  
                   ?_can_send 0001                     ?___xxtofl 00CB        __size_of_CANInitialize 01C6  
                   ?_delay_ms 007D                       _RXB0DLC 000F65                       _RXB1DLC 000F55  
                     _RXB0CON 000F60                       _RXB1CON 000F50                       _TXB0DLC 000F45  
                     _TXB1DLC 000F35                       _TXB2DLC 000F25           CANsendMessage@flags 007E  
                     __Hparam 0000                    _left_speed 003C                       __Lparam 0000  
            delay_ms@value_ms 007D                       _Pminimo 0118               __size_of___flge 0190  
                  _matematica 1FE4                       ___fladd 2A7A                       ___fldiv 3BF6  
                     ___flneg 5E7E                       ___flmul 2F22                       ___flsub 5DF8  
                     ___fltol 58A8               __size_of___wmul 0036                       ___lwdiv 5C0E  
                __psmallconst 0D00          CANInitialize@propSeg 008E                       __pcinit 5CF2  
           __end_of_eval_poly 58A8                       _delay_s 5F4C                       __ramtop 0D00  
                     __ptext0 5DA8                       __ptext1 51F0                       __ptext2 33C8  
                     __ptext3 497E                       __ptext4 5536                       __ptext5 1858  
                     __ptext6 5F78                       __ptext7 5F20                       __ptext8 1FE4  
                     __ptext9 59B4                     _T0CONbits 000FD5                    ??_can_send 0087  
                __size_of_abs 002C                  __size_of_cos 00E4               atan@val_squared 0196  
                __size_of_sin 0318                    ??___xxtofl 00CF                       atan@val 019A  
           __end_of_parallelo 4C0A                    ??_delay_ms 007F                       asin@sgn 019E  
      CANreceiveMessage@error 000B               _start_operation 023B                __pintcode_body 5A98  
        end_of_initialization 5D4A                       int_func 5A98                 _CANInitialize 502A  
                   _ISR_Bassa 0018                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE                       sqrt@grs 00D0  
                     sqrt@exp 00D4             ??_can_interpreter 0077       _steering_correction_dir 023C  
                   _PORTBbits 000F81                CANSetMask@mask 0077                CANSetMask@tamp 0081  
                _distance_set 0110                CANSetMask@type 007B          __end_of_park_routine 382C  
                 ___fladd@grs 00BC                 ___xxtofl@sign 00D3                     _TRISBbits 000F93  
                 ___fldiv@grs 008A                   ___fldiv@rem 0084                     _MUX_index 0042  
                  _pulse_time 014A       _clock_counter_reference 0034                   ___flmul@grs 009E  
              _CANsendMessage 1858              CANInitialize@BRP 0088              CANInitialize@SJW 0087  
              ?_CANInitialize 0085                    ?_ISR_Bassa 0001                   ?_matematica 0001  
              __end_of___flge 5536             __size_of_ISR_Alta 5B72                __end_of___wmul 5EEC  
                  floor@expon 00E1           start_initialization 5CF2                    eval_poly@d 00C1  
                  eval_poly@n 00C3                    eval_poly@x 00BD                   __end_of_abs 5F4C  
                 __end_of_cos 5A98                   __end_of_sin 466C           CANSetMask@numBuffer 0080  
               _data_speed_rx 0108        __end_of_CANsendMessage 1FE4             ?_CANOperationMode 0001  
               _data_steering 017D                    frexp@value 0077            ??_CANOperationMode 0077  
           _distance_received 0234    CANInitialize@FilterConfig1 008F    CANInitialize@FilterConfig2 0090  
         _steering_correction 0045                      ??___flge 00CD                      ??___wmul 007B  
                 __pdataBANK0 00E8                   __pdataBANK1 01E2              __CFG_LPT1OSC$OFF 000000  
                   ___fladd@a 00AD                     ___fladd@b 00A9        CANInitialize@phaseSeg1 0085  
      CANInitialize@phaseSeg2 0086                     ___fldiv@a 007B                     ___fldiv@b 0077  
                   ___flmul@a 0094                     ___flmul@b 0090                   __pbssCOMRAM 0024  
                   ___flsub@a 0191                     ___flsub@b 018D                 __pcstackBANK0 0060  
               __pcstackBANK1 018D                   _BRGCON2bits 000F71                   _BRGCON3bits 000F72  
           __size_of_can_send 0136             __size_of___xxtofl 01CE             __size_of_delay_ms 0034  
             ?_CANsendMessage 0077           __size_of_matematica 058A               ??_CANInitialize 008A  
                   _asin$3750 01A2                     _asin$3748 01AE                     _asin$3749 01A6  
                  sin@coeff_a 0D2D                    sin@coeff_b 0D41                 ??_park_search 01B2  
               _alignment_gap 00E4            CANSetFilter@filter 0077                     _data_test 0185  
            ___lwdiv@dividend 0060                    ISR_Bassa@i 0023                   ??_ISR_Bassa 000D  
                   __pintcode 0008                      ?___fladd 00A9                      ?___fldiv 0077  
                    ?___flneg 00BD                      ?___flmul 0090                      ?___flsub 018D  
                    ?___fltol 00C1         __size_of_park_routine 0464                      ?___lwdiv 0060  
                 __pintcodelo 0018                      ?_delay_s 0001                   __smallconst 0D00  
                 _COMSTATbits 000F74                     _eval_poly 5790                     _larghezza 01E2  
            ___lwdiv@quotient 0065                __size_of_floor 0124                __size_of_frexp 0094  
     __size_of_configurazione 006C                     _parallelo 497E         CANreceiveMessage@tamp 000C  
              _prima_sterzata 0138                ___wmul@product 007B                      _LATBbits 000F8A  
             _can_interpreter 5D54                     atan@recip 0195                  _park_routine 33C8  
_delay_quartz_frequency_value 00E8                      _IPR3bits 000FA5                      _PIE3bits 000FA3  
                    i1u700_25 2A50                      i1u680_20 2626                      i1u680_26 2628  
                    i1u681_20 2654                      i1u681_26 2656                      i1u691_20 28AE  
                    i1u683_25 266A                      i1u691_26 28B0                      i1u692_20 28D8  
                    i1u692_26 28DA                      _PIR3bits 000FA4                      i1u694_25 28EC  
                    i1u689_25 27DA                      i1u989_27 00BC                      _RXB0EIDH 000F63  
                    _RXB0EIDL 000F64                      _RXB1EIDH 000F53                      _RXB1EIDL 000F54  
                    _ISR_Alta 0008                     _set_speed 014C                      _RCONbits 000FD0  
            __CFG_WDTPS$32768 000000                      _RXB0SIDH 000F61                      _RXB0SIDL 000F62  
                    _RXF0EIDH 000F02                      _RXB1SIDH 000F51                      _RXF0EIDL 000F03  
                    _RXB1SIDL 000F52                      _RXF1EIDH 000F06                      _RXF1EIDL 000F07  
                    _RXF2EIDH 000F0A                      _RXF2EIDL 000F0B                      _RXF3EIDH 000F0E  
                    _RXF3EIDL 000F0F                      _RXF4EIDH 000F12                      _RXF4EIDL 000F13  
                    _RXF5EIDH 000F16                      _RXF5EIDL 000F17                      _RXF0SIDH 000F00  
                    _RXF0SIDL 000F01           __end_of_park_search 53A6                      _TXB0EIDH 000F43  
                    _RXF1SIDH 000F04                      _TXB0EIDL 000F44                      _RXF1SIDL 000F05  
                    _TXB1EIDH 000F33                      _RXF2SIDH 000F08                      _TXB1EIDL 000F34  
                    _RXF2SIDL 000F09                      _TXB2EIDH 000F23                      _RXF3SIDH 000F0C  
                    _TXB2EIDL 000F24                      _RXF3SIDL 000F0D                      _RXF4SIDH 000F10  
                    _RXF4SIDL 000F11                      _RXF5SIDH 000F14                      _RXF5SIDL 000F15  
                    _RXM0EIDH 000F1A                      _RXM0EIDL 000F1B                      _TXB0SIDH 000F41  
                    _RXM1EIDH 000F1E                      _TXB0SIDL 000F42                      _RXM1EIDL 000F1F  
                    _TXB1SIDH 000F31                      _TXB1SIDL 000F32                      _TXB2SIDH 000F21  
                    _TXB2SIDL 000F22                      _RXM0SIDH 000F18                      _RXM0SIDL 000F19  
                    _RXM1SIDH 000F1C                      _RXM1SIDL 000F1D                   _distance_dx 0038  
                 _distance_sx 003A                      _RXERRCNT 000F75                      _TXERRCNT 000F76  
           ___wmul@multiplier 0077                    ?_eval_poly 00BD           __end_ofatan@coeff_a 0D19  
         __end_ofatan@coeff_b 0D2D                 ?_CANSetFilter 0077                   _INTCON2bits 000FF1  
                   copy_data0 5D2C                    _CANCONbits 000F6F                    ?_parallelo 0001  
            _distance_average 0036                     frexp@eptr 007B                      __Hparam0 0000  
                    __Lparam0 0000                  _RXB0SIDLbits 000F62                  _RXB1SIDLbits 000F52  
                ??_matematica 00E3                 _request_sent1 023A              __size_of___fladd 04A8  
                  _CANSetMask 3FB6              __size_of___fldiv 03C0              __size_of___flneg 0038  
            __size_of___flmul 04A6              __size_of___flsub 0048              __size_of___fltol 010C  
                    _cos$3751 01B6              __size_of___lwdiv 0078              __size_of_delay_s 002C  
                    _can_send 5536                      ___xxtofl 4E5C                  _RXF0SIDLbits 000F01  
                    _delay_ms 5EEC               ___lwdiv@divisor 0062                  _RXF1SIDLbits 000F05  
             ___lwdiv@counter 0064                ??_CANSetFilter 007C                      __ptext10 4354  
                    __ptext11 566C                      __ptext20 5E7E                      __ptext12 5B7A  
                    __ptext21 5790                      __ptext13 4E5C                      __ptext30 502A  
                    __ptext22 2F22                      __ptext14 58A8                      __ptext31 3FB6  
                    __ptext23 2A7A                      __ptext15 5DF8                      __ptext32 0D52  
                    __ptext24 53A6                      __ptext16 466C                      __ptext33 5F9C  
                    __ptext25 3BF6                      __ptext17 382C                      __ptext34 5D54  
                    __ptext26 5F4C                      __ptext18 4C0A                      __ptext27 5EEC  
                    __ptext19 5E40                      __ptext36 256E                      __ptext28 5EB6  
                    __ptext29 5C86                      __ptext38 5C0E                  _RXF2SIDLbits 000F09  
                    _sin$3752 019D       __end_of_can_interpreter 5DA8                  _RXF3SIDLbits 000F0D  
                    _distance 0146            __end_of_matematica 256E                  _RXF4SIDLbits 000F11  
                _RXF5SIDLbits 000F15      CANsendMessage@dataLength 007D                 __size_of_fabs 003E  
               __size_of_atan 0252                 __size_of_asin 0312                 __size_of_main 0050  
               __size_of_sqrt 03CA                   _park_search 51F0          CANreceiveMessage@msg 0001  
                _TXB0SIDLbits 000F42                  _TXB1SIDLbits 000F32                  _TXB2SIDLbits 000F22  
                    int$flags 0048     __size_of_CANOperationMode 0016                 ?_CANisTxReady 0001  
                 atan@coeff_a 0D01                   atan@coeff_b 0D19                   _RXB0DLCbits 000F65  
                 _RXB1DLCbits 000F55                  _RXM0SIDLbits 000F19                   _RXB0CONbits 000F60  
                 _RXB1CONbits 000F50             _CANreceiveMessage 256E                  _RXM1SIDLbits 000F1D  
                  _INTCONbits 000FF2                   ??_eval_poly 00C5              ??_CANsendMessage 007F  
          ?_CANreceiveMessage 0001                  _request_sent 0239                     sqrt@tfrac 00CB  
              _configurazione 5C86      CANsendMessage@identifier 0077                   ??_parallelo 00E2  
                    intlevel1 0000                      intlevel2 0000              CANSetFilter@tamp 0081  
            CANSetFilter@type 007B           ??_CANreceiveMessage 0003           _old_data_correction 0238  
                 _TXB0DLCbits 000F45                   _right_speed 003E                   _TXB1DLCbits 000F35  
                 _TXB0CONbits 000F40                   _TXB2DLCbits 000F25                   _TXB1CONbits 000F30  
                 _TXB2CONbits 000F20          CANOperationMode@mode 0077                   ?_CANSetMask 0077  
              ??_CANisTxReady 0077                _distance_error 0233               _matematica$3741 01BA  
             _matematica$3742 01BE               _matematica$3743 01C2               _matematica$3744 01C6  
             _matematica$3745 01D2               _matematica$3746 01CA               _matematica$3747 01CE  
   __end_of_CANreceiveMessage 2A7A                      sqrt@frac 00DA                      sqrt@sign 00C9  
                    sqrt@root 00D6                   _timerValue2 0040        __end_of_configurazione 5CF2  
               ___fladd@signs 00B9                 _distance_wait 0236              ?_can_interpreter 0001  
                ___fladd@aexp 00BA                  ___fladd@bexp 00BB         __end_of_CANInitialize 51F0  
